(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
    ["27671"], {
        442192: function(e, t, n) {
            var i = {
                "./bg.png": "42692",
                "./cs.png": "341459",
                "./da.png": "442072",
                "./de.png": "820848",
                "./el.png": "362938",
                "./en-GB.png": "912718",
                "./en-US.png": "778369",
                "./es-ES.png": "18762",
                "./fi.png": "504368",
                "./fr.png": "802887",
                "./hi.png": "461253",
                "./hr.png": "940340",
                "./hu.png": "162776",
                "./it.png": "780408",
                "./ja.png": "759736",
                "./ko.png": "328724",
                "./lt.png": "532059",
                "./nl.png": "667041",
                "./no.png": "215918",
                "./pl.png": "445780",
                "./pt-BR.png": "512238",
                "./ro.png": "535271",
                "./ru.png": "413963",
                "./sv-SE.png": "636372",
                "./th.png": "647675",
                "./tr.png": "61008",
                "./uk.png": "236997",
                "./vi.png": "265544",
                "./zh-CN.png": "820447",
                "./zh-TW.png": "671176"
            };

            function r(e) {
                return n(s(e))
            }

            function s(e) {
                if (!n.o(i, e)) {
                    var t = Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND", t
                }
                return i[e]
            }
            r.id = '"442192"', r.keys = function() {
                return Object.keys(i)
            }, r.resolve = s, e.exports = r
        },
        501617: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f9421475665f33dc5794.jpg"
        },
        324241: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4b32630453d18bff5506.png"
        },
        668205: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f03e2d8e19438cceaad7.svg"
        },
        648553: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6ba45e61582094de4e21.svg"
        },
        307757: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5d6a5e9d7d77ac29116e.png"
        },
        548520: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1697e65656e69f0dbdbd.png"
        },
        445724: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1aba1e971aefb18a265e.png"
        },
        170382: function(e, t, n) {
            "use strict";
            e.exports = n.p + "529459de1dc4c2424a03.png"
        },
        593285: function(e, t, n) {
            "use strict";
            e.exports = n.p + "edda5bb474d4135b4296.png"
        },
        575603: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c722e74f644b4a758b11.png"
        },
        799987: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a8ab83a90b1856ae6ecc.png"
        },
        181815: function(e, t, n) {
            "use strict";
            e.exports = n.p + "71ceda6839bdcb3deff6.png"
        },
        521089: function(e, t, n) {
            "use strict";
            e.exports = n.p + "68f4ea933bd6e83f5d5a.png"
        },
        366942: function(e, t, n) {
            "use strict";
            e.exports = n.p + "118ab41237408c505a1b.png"
        },
        125707: function(e, t, n) {
            "use strict";
            e.exports = n.p + "641edf794e368d5e8180.png"
        },
        785744: function(e, t, n) {
            "use strict";
            e.exports = n.p + "17cfee7f5b1fe33ae18d.png"
        },
        297384: function(e, t, n) {
            "use strict";
            e.exports = n.p + "77db8e6b075e88104713.png"
        },
        573220: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4e42f7235fc2b50c0d85.png"
        },
        265284: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7b3659653253c3f9fcbd.png"
        },
        320436: function(e, t, n) {
            "use strict";
            e.exports = n.p + "2a71729f81632051029f.svg"
        },
        363577: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a94c2d78167f553a17f7.png"
        },
        194175: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f8a931382dfd43511663.png"
        },
        35024: function(e, t, n) {
            "use strict";
            e.exports = n.p + "27b152e2ddb3acb76a92.svg"
        },
        159142: function(e, t, n) {
            "use strict";
            e.exports = n.p + "00c76084e1093f9ea889.png"
        },
        671223: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e549d55ee6158479e2de.svg"
        },
        211689: function(e, t, n) {
            "use strict";
            e.exports = n.p + "342f1fa88c1e9eb7d685.png"
        },
        350043: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bd96553546da26a4c70b.svg"
        },
        698833: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bd96553546da26a4c70b.svg"
        },
        14366: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a0eec7ce800d5e8f7a7c.png"
        },
        286611: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1aee697591ca8309583c.svg"
        },
        994873: function(e, t, n) {
            "use strict";
            e.exports = n.p + "62fcac729728135080d2.png"
        },
        376998: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8cef483d85d7337d2a62.svg"
        },
        396128: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4dd44f1f2d9d4be0cc63.png"
        },
        497894: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f22d0f157e5b64710577.svg"
        },
        1308: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0445c89ecb480f2a1a55.png"
        },
        746621: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9993a343c4facfd14f9f.svg"
        },
        879157: function(e, t, n) {
            "use strict";
            e.exports = n.p + "35c3598bd9942c1025a7.png"
        },
        870064: function(e, t, n) {
            "use strict";
            e.exports = n.p + "dacb3f3794eb5252e56f.svg"
        },
        259168: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f217682409870bbd0836.png"
        },
        735638: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bc893c6d474bc13bf8a4.svg"
        },
        321223: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a7abeaf389161e8af518.png"
        },
        94470: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5617849b51454655bcf1.svg"
        },
        646994: function(e, t, n) {
            "use strict";
            e.exports = n.p + "2ba3f6ae083c107778b8.png"
        },
        375518: function(e, t, n) {
            "use strict";
            e.exports = n.p + "767d18d4d02d9a2e1ab1.svg"
        },
        299059: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1ea986c64731860da168.png"
        },
        496955: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ec048b4bbcf47d45c7f6.svg"
        },
        612315: function(e, t, n) {
            "use strict";
            e.exports = n.p + "589bcc78c02a11c07b3b.png"
        },
        152071: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f330962c0eb993878478.svg"
        },
        530354: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c4707432ef3414ccffd3.png"
        },
        667083: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4d004ea91b2a1cd534cf.svg"
        },
        925382: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c1637fa995b3054b92c1.png"
        },
        509949: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a63af69b0b1958fabf1a.svg"
        },
        347775: function(e, t, n) {
            "use strict";
            e.exports = n.p + "993cc4012ce9f9b8e83f.png"
        },
        524855: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c44f32fe60d6657fda9f.svg"
        },
        770624: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d94334b9983e676643d1.png"
        },
        209560: function(e, t, n) {
            "use strict";
            e.exports = n.p + "dcd6afd78d21cd3980ab.svg"
        },
        322246: function(e, t, n) {
            "use strict";
            e.exports = n.p + "18e328090e441ee508bb.png"
        },
        154849: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1b0b60300e4f234337be.svg"
        },
        964854: function(e, t, n) {
            "use strict";
            e.exports = n.p + "fa615b5c168c88e54a15.png"
        },
        895661: function(e, t, n) {
            "use strict";
            e.exports = n.p + "75577d21ad1497348a3c.svg"
        },
        373338: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c6833beabfb84014185b.png"
        },
        977001: function(e, t, n) {
            "use strict";
            e.exports = n.p + "cc912bf56af0fd3bc301.svg"
        },
        479111: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7ed3c5a97238a23cb662.png"
        },
        592466: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9210accea56102b27039.svg"
        },
        300525: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7886764ea4a20e975460.png"
        },
        704777: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d521f9c27b53f7a779e6.svg"
        },
        501653: function(e, t, n) {
            "use strict";
            e.exports = n.p + "982cb6e35a9ac7fdd64b.png"
        },
        940593: function(e, t, n) {
            "use strict";
            e.exports = n.p + "2794bf75be23707f7947.svg"
        },
        768935: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a68ff7e6034b896c58db.png"
        },
        869872: function(e, t, n) {
            "use strict";
            e.exports = n.p + "2eed3033a8780ccf636f.svg"
        },
        629132: function(e, t, n) {
            "use strict";
            e.exports = n.p + "168e981f36abde84b10d.png"
        },
        301098: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d76473a750af3dce43b9.svg"
        },
        992221: function(e, t, n) {
            "use strict";
            e.exports = n.p + "98e6b7218970562d1ce0.png"
        },
        894025: function(e, t, n) {
            "use strict";
            e.exports = n.p + "603007783abe09a10ae5.svg"
        },
        731368: function(e, t, n) {
            "use strict";
            e.exports = n.p + "32bba0abbf7d086814d2.png"
        },
        645496: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9ee6d9ab5420113bca0b.svg"
        },
        561050: function(e, t, n) {
            "use strict";
            e.exports = n.p + "626f7ddce038206bd639.png"
        },
        630528: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7231645d01e0b14f58cc.svg"
        },
        618077: function(e, t, n) {
            "use strict";
            e.exports = n.p + "16085d3c07fa01281190.png"
        },
        662418: function(e, t, n) {
            "use strict";
            e.exports = n.p + "31076feac041da4dd070.svg"
        },
        777626: function(e, t, n) {
            "use strict";
            e.exports = n.p + "07e1a53bc84c6231f92f.png"
        },
        566035: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d46756f782e19355e483.svg"
        },
        877414: function(e, t, n) {
            "use strict";
            e.exports = n.p + "46ab48b39d1fc32713b8.png"
        },
        309663: function(e, t, n) {
            "use strict";
            e.exports = n.p + "100f3a82bf746402d6ac.svg"
        },
        196135: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1a0c571e8d650ca3f54f.png"
        },
        793866: function(e, t, n) {
            "use strict";
            e.exports = n.p + "822dc9e43f7ee79edd0e.svg"
        },
        482311: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bb3d1d12d5e2ce557119.png"
        },
        204844: function(e, t, n) {
            "use strict";
            e.exports = n.p + "715a8b0f690da5b34fbb.svg"
        },
        115658: function(e, t, n) {
            "use strict";
            e.exports = n.p + "30c4ac099a8b53735946.png"
        },
        729332: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7ccb5f56c32c63e01c04.svg"
        },
        288589: function(e, t, n) {
            "use strict";
            e.exports = n.p + "86bda9e409f43d56e197.png"
        },
        31439: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a675673d2271538be738.svg"
        },
        122630: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6302c9d4ad9d5c4a3376.png"
        },
        372786: function(e, t, n) {
            "use strict";
            e.exports = n.p + "57a3fe2c0e62e98937fd.svg"
        },
        961232: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ad2246e21de708819ad4.png"
        },
        387628: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6f0eed9e1276f69c9127.svg"
        },
        980576: function(e, t, n) {
            "use strict";
            e.exports = n.p + "59e8df9657fe6fc725dc.png"
        },
        552995: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f47485602365c946fa52.svg"
        },
        483819: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f8d31171246dfaf90b12.png"
        },
        955307: function(e, t, n) {
            "use strict";
            e.exports = n.p + "cc52988849f86e1c85f5.svg"
        },
        192473: function(e, t, n) {
            "use strict";
            e.exports = n.p + "59e8df9657fe6fc725dc.png"
        },
        312139: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f47485602365c946fa52.svg"
        },
        272378: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9a15d086141be29d9fcd.png"
        },
        599004: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bcd90f795bdc48050bce.png"
        },
        713106: function(e, t, n) {
            "use strict";
            e.exports = n.p + "fe9652309ef98c6f358e.svg"
        },
        956204: function(e, t, n) {
            "use strict";
            e.exports = n.p + "44c2a9c4e45973e395c0.png"
        },
        946662: function(e, t, n) {
            "use strict";
            e.exports = n.p + "496af98033e8f20540ec.svg"
        },
        299893: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0ca73c69572a9c477cce.png"
        },
        997771: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d8deaf4c4cbec4b8f9d6.svg"
        },
        255284: function(e, t, n) {
            "use strict";
            e.exports = n.p + "3c33877770f5210c5c01.png"
        },
        223406: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5db6f2b6add954cbf0ea.svg"
        },
        523403: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ca47ceaf07c3f567d239.png"
        },
        153846: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6e62e16e7b4b8d34906b.svg"
        },
        145159: function(e, t, n) {
            "use strict";
            e.exports = n.p + "77df90635e4555438f29.png"
        },
        994912: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0cbfee20a3f2cd0dd313.svg"
        },
        348044: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e4f93ded986b1edf0780.png"
        },
        36409: function(e, t, n) {
            "use strict";
            e.exports = n.p + "07e45cb4391af2b29544.gif"
        },
        231363: function(e, t, n) {},
        404118: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = n("477566").default
        },
        157552: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchBranches: function() {
                    return d
                },
                fetchBranchesForApplication: function() {
                    return _
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("990746"),
                a = n("913144"),
                l = n("807085"),
                o = n("686470"),
                u = n("602043"),
                c = n("49111");
            async function d() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : o.default.entitledBranchIds;
                if (!(0, u.isSupportedPlatform)() || 0 === e.length) return [];
                let t = r.chunk(e, 50);
                try {
                    let e = t.map(async e => {
                            let t = await s.default.post({
                                url: c.Endpoints.APPLICATION_BRANCHES,
                                body: {
                                    branch_ids: e
                                },
                                oldFormErrors: !0
                            });
                            return t.body.map(l.default.createFromServer)
                        }),
                        n = await Promise.all(e),
                        i = r.flatten(n);
                    return a.default.dispatch({
                        type: "APPLICATION_BRANCHES_FETCH_SUCCESS",
                        branches: i
                    }), i
                } catch (t) {
                    return a.default.dispatch({
                        type: "APPLICATION_BRANCHES_FETCH_FAIL",
                        branchIds: e
                    }), []
                }
            }
            async function _(e) {
                try {
                    let t = await s.default.get({
                            url: c.Endpoints.OWNED_APPLICATION_BRANCHES(e),
                            oldFormErrors: !0
                        }),
                        n = Array.isArray(t.body) ? t.body.map(l.default.createFromServer) : [];
                    return a.default.dispatch({
                        type: "OWNED_APPLICATION_BRANCHES_FETCH_SUCCESS",
                        applicationId: e,
                        branches: n
                    }), n
                } catch (t) {
                    return a.default.dispatch({
                        type: "OWNED_APPLICATION_BRANCHES_FETCH_FAIL",
                        applicationId: e
                    }), []
                }
            }
        },
        71313: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchLiveBuild: function() {
                    return _
                }
            });
            var i = n("990746"),
                r = n("931010"),
                s = n("638800"),
                a = n("913144"),
                l = n("915639"),
                o = n("686470"),
                u = n("645672"),
                c = n("49111");
            let d = {};
            async function _(e, t) {
                let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    E = l.default.locale;
                return a.default.dispatch({
                    type: "APPLICATION_BUILD_FETCH_START",
                    applicationId: e,
                    branchId: t,
                    locale: E
                }), n && await (0, r.sleep)(6e4 * Math.random()), i.default.get({
                    url: c.Endpoints.APPLICATION_LIVE_BUILD(e, t),
                    query: {
                        platform: (0, u.getBuildPlatform)(),
                        locale: E
                    },
                    oldFormErrors: !0
                }).then(n => {
                    let i = n.body;
                    if (0 === i.manifests.length) {
                        a.default.dispatch({
                            type: "APPLICATION_BUILD_NOT_FOUND",
                            applicationId: e,
                            branchId: t
                        });
                        return
                    }
                    a.default.dispatch({
                        type: "APPLICATION_BUILD_FETCH_SUCCESS",
                        applicationId: e,
                        branchId: t,
                        locale: E,
                        build: i
                    })
                }, n => {
                    let {
                        status: i
                    } = n;
                    if (404 === i) a.default.dispatch({
                        type: "APPLICATION_BUILD_NOT_FOUND",
                        applicationId: e,
                        branchId: t
                    });
                    else {
                        var r, l;
                        r = e, null == d[l = t] && (d[l] = new s.Timeout), d[l].start(6e5 + 6e5 * Math.random(), () => {
                            let e = o.default.getLibraryApplication(r, l);
                            null != e && _(r, l)
                        })
                    }
                })
            }
        },
        697796: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                handoffBegin: function() {
                    return r
                },
                handoffEnd: function() {
                    return s
                },
                handoffFromApp: function() {
                    return a
                },
                handoffUnavailable: function() {
                    return l
                },
                handoffSetUser: function() {
                    return o
                }
            });
            var i = n("913144");

            function r() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1e4;
                i.default.dispatch({
                    type: "BROWSER_HANDOFF_BEGIN",
                    timeout: e
                })
            }

            function s(e, t) {
                i.default.dispatch({
                    type: "BROWSER_HANDOFF_END",
                    handoffToken: e,
                    fingerprint: t
                })
            }

            function a(e) {
                let {
                    handoffKey: t,
                    handoffToken: n,
                    handoffSource: r,
                    timeout: s = 1e4
                } = e;
                i.default.dispatch({
                    type: "BROWSER_HANDOFF_FROM_APP",
                    handoffKey: t,
                    handoffToken: n,
                    handoffSource: r,
                    timeout: s
                })
            }

            function l() {
                i.default.dispatch({
                    type: "BROWSER_HANDOFF_UNAVAILABLE"
                })
            }

            function o(e) {
                i.default.dispatch({
                    type: "BROWSER_HANDOFF_SET_USER",
                    user: e
                })
            }
        },
        527015: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setDeveloperOptionSettings: function() {
                    return r
                }
            });
            var i = n("913144");

            function r(e) {
                i.default.dispatch({
                    type: "DEVELOPER_OPTIONS_UPDATE_SETTINGS",
                    settings: e
                })
            }
        },
        190017: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                init: function() {
                    return S
                },
                destroy: function() {
                    return T
                },
                installApplication: function() {
                    return I
                },
                repairApplication: function() {
                    return m
                },
                updateApplication: function() {
                    return g
                },
                uninstallApplication: function() {
                    return A
                },
                resume: function() {
                    return C
                },
                pause: function() {
                    return R
                },
                moveUp: function() {
                    return N
                },
                cancel: function() {
                    return v
                },
                removeFinished: function() {
                    return O
                },
                completeRepair: function() {
                    return D
                },
                completeInstall: function() {
                    return L
                }
            });
            var i = n("990746"),
                r = n("913144"),
                s = n("393414"),
                a = n("845579"),
                l = n("546463"),
                o = n("568307"),
                u = n("98328"),
                c = n("599110"),
                d = n("645672"),
                _ = n("269180"),
                E = n("152723"),
                f = n("71313"),
                p = n("49111"),
                h = n("782340");

            function S(e, t) {
                E.default.init({
                    userToken: e,
                    userId: t,
                    installPaths: u.default.installationPaths,
                    platform: (0, d.getBuildPlatform)(),
                    stateCallback: e => {
                        r.default.dispatch({
                            type: "DISPATCH_APPLICATION_STATE_UPDATE",
                            state: e
                        })
                    },
                    errorCallback: e => {
                        r.default.dispatch({
                            type: "DISPATCH_APPLICATION_ERROR",
                            error: e
                        })
                    }
                })
            }

            function T() {
                E.default.destroy()
            }

            function I(e) {
                let {
                    application: t,
                    branchId: n,
                    buildId: i,
                    manifestIds: s,
                    installationPath: a,
                    analyticsLocation: l
                } = e;
                E.default.setTargetManifest({
                    applicationId: t.id,
                    applicationName: t.name,
                    applicationIcon: t.icon,
                    branchId: n,
                    buildId: i,
                    manifestIds: s,
                    installationPath: a
                }), r.default.dispatch({
                    type: "DISPATCH_APPLICATION_INSTALL",
                    applicationId: t.id,
                    branchId: n,
                    installationPath: a
                }), c.default.track(p.AnalyticEvents.LIBRARY_INSTALL_INITIATED, {
                    application_id: t.id,
                    application_name: t.name,
                    sku_id: t.primarySkuId,
                    location: l
                })
            }

            function m(e, t, n) {
                (0, f.fetchLiveBuild)(e.id, t).then(() => {
                    r.default.dispatch({
                        type: "DISPATCH_APPLICATION_REPAIR",
                        applicationId: e.id,
                        branchId: t
                    })
                }), c.default.track(p.AnalyticEvents.LIBRARY_REPAIR_INITIATED, {
                    application_id: e.id,
                    application_name: e.name,
                    sku_id: e.primarySkuId,
                    location: n
                })
            }

            function g(e, t, n, i) {
                let s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                ! function(e, t, n, i) {
                    if (o.default.getRunningDiscordApplicationIds().includes(e.id)) return;
                    let r = u.default.getInstallationPath(e.id, t);
                    if (null == r) throw Error("Missing installation path for application: ".concat(e.id, " ").concat(t));
                    E.default.setTargetManifest({
                        applicationId: e.id,
                        applicationName: e.name,
                        applicationIcon: e.icon,
                        branchId: t,
                        buildId: n,
                        manifestIds: i,
                        installationPath: r
                    })
                }(e, t, n, i), r.default.dispatch({
                    type: "DISPATCH_APPLICATION_UPDATE",
                    applicationId: e.id,
                    branchId: t,
                    automatic: s
                })
            }

            function A(e, t, n) {
                let i = l.default.getGame(e);
                null != i && (_.default.removeShortcuts(i.name), c.default.track(p.AnalyticEvents.LIBRARY_UNINSTALL_INITIATED, {
                    application_id: i.id,
                    application_name: i.name,
                    sku_id: i.primarySkuId,
                    location: n
                })), E.default.uninstall(e, t), r.default.dispatch({
                    type: "DISPATCH_APPLICATION_UNINSTALL",
                    applicationId: e,
                    branchId: t
                })
            }

            function C() {
                E.default.resume()
            }

            function R() {
                E.default.pause()
            }

            function N(e, t) {
                r.default.dispatch({
                    type: "DISPATCH_APPLICATION_MOVE_UP",
                    applicationId: e,
                    branchId: t
                })
            }

            function v(e, t) {
                E.default.cancel(e, t), r.default.dispatch({
                    type: "DISPATCH_APPLICATION_CANCEL",
                    applicationId: e,
                    branchId: t
                })
            }

            function O(e, t) {
                r.default.dispatch({
                    type: "DISPATCH_APPLICATION_REMOVE_FINISHED",
                    applicationId: e,
                    branchId: t
                })
            }

            function D(e, t) {
                let n = l.default.getGame(e);
                null != n && _.default.createShortcuts(a.InstallShortcutDesktop.getSetting(), a.InstallShortcutStartMenu.getSetting(), n.name, n.id, t.installPath)
            }

            function L(e, t) {
                let r = l.default.getGame(e);
                i.default.post({
                    url: p.Endpoints.LIBRARY_APPLICATION_INSTALLED(e, e),
                    oldFormErrors: !0
                }), null != r && (_.default.createShortcuts(a.InstallShortcutDesktop.getSetting(), a.InstallShortcutStartMenu.getSetting(), r.name, r.id, t.installPath), n.el("193990").then(n.bind(n, "193990")).then(e => {
                    let {
                        default: t
                    } = e;
                    t.showNotification(r.getIconURL(64), h.default.Messages.GAME_LIBRARY_NOTIFICATION_GAME_INSTALLED_TITLE, h.default.Messages.GAME_LIBRARY_NOTIFICATION_GAME_INSTALLED_BODY.format({
                        name: r.name
                    }), {
                        notif_type: "Game Library Game Installed"
                    }, {
                        onClick: () => (0, s.transitionTo)(p.Routes.APPLICATION_LIBRARY),
                        omitViewTracking: !0
                    })
                }))
            }
        },
        363658: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("913144"),
                r = {
                    clearVADWarning() {
                        i.default.dispatch({
                            type: "PERMISSION_CLEAR_VAD_WARNING"
                        })
                    },
                    clearSuppressWarning() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        i.default.dispatch({
                            type: "PERMISSION_CLEAR_SUPPRESS_WARNING",
                            forever: e
                        })
                    },
                    clearPTTAdminWarning() {
                        i.default.dispatch({
                            type: "PERMISSION_CLEAR_PTT_ADMIN_WARNING"
                        })
                    },
                    requestElevatedProcess(e) {
                        i.default.dispatch({
                            type: "PERMISSION_REQUEST_ELEVATED_PROCESS",
                            pid: e
                        })
                    },
                    clearElevatedProcess() {
                        i.default.dispatch({
                            type: "PERMISSION_CLEAR_ELEVATED_PROCESS"
                        })
                    },
                    continueNonelevatedProcess(e) {
                        i.default.dispatch({
                            type: "PERMISSION_CONTINUE_NONELEVATED_PROCESS",
                            pid: e
                        })
                    }
                }
        },
        673777: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                open: function() {
                    return s
                },
                close: function() {
                    return a
                },
                openReplay: function() {
                    return l
                },
                setSection: function() {
                    return o
                },
                setShouldRecordNextConnection: function() {
                    return u
                },
                chooseReplayPath: function() {
                    return c
                }
            });
            var i = n("913144"),
                r = n("49671");

            function s(e) {
                i.default.dispatch({
                    type: "RTC_DEBUG_MODAL_OPEN",
                    section: e
                }), i.default.dispatch({
                    type: "RTC_DEBUG_POPOUT_WINDOW_OPEN"
                })
            }

            function a() {
                i.default.dispatch({
                    type: "RTC_DEBUG_MODAL_CLOSE"
                })
            }

            function l() {
                i.default.dispatch({
                    type: "RTC_DEBUG_MODAL_OPEN_REPLAY"
                })
            }

            function o(e) {
                i.default.dispatch({
                    type: "RTC_DEBUG_MODAL_SET_SECTION",
                    section: e
                })
            }

            function u(e) {
                i.default.dispatch({
                    type: "RTC_DEBUG_SET_RECORDING_FLAG",
                    value: e
                })
            }

            function c() {
                r.default.fileManager.showOpenDialog({
                    filters: [{
                        name: "All Files",
                        extensions: ["*"]
                    }]
                }).then(e => {
                    let t = 0 === e.length ? "" : e[0];
                    i.default.dispatch({
                        type: "RTC_DEBUG_MODAL_OPEN_REPLAY_AT_PATH",
                        path: t
                    })
                })
            }
        },
        452804: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                saveGuildFolders: function() {
                    return E
                },
                saveClientTheme: function() {
                    return p
                },
                default: function() {
                    return h
                }
            });
            var i = n("975162"),
                r = n("360687"),
                s = n("819855"),
                a = n("913144"),
                l = n("714657"),
                o = n("737292"),
                u = n("161778"),
                c = n("845579"),
                d = n("872173"),
                _ = n("116319");

            function E(e) {
                return d.PreloadedUserSettingsActionCreators.updateAsync("guildFolders", t => {
                    t.folders = e.map(e => {
                        let t = i.GuildFolder.create({
                            guildIds: e.guildIds
                        });
                        return null != e.folderId && (t.id = r.Int64Value.create({
                            value: String(e.folderId)
                        })), null != e.folderColor && (t.color = r.UInt64Value.create({
                            value: String(e.folderColor)
                        })), null != e.folderName && "" !== e.folderName && (t.name = r.StringValue.create({
                            value: String(e.folderName)
                        })), t
                    })
                }, d.UserSettingsDelay.SLOW_USER_ACTION)
            }

            function f(e) {
                return (0, s.isThemeLight)(e) ? i.Theme.LIGHT : i.Theme.DARK
            }

            function p(e) {
                let {
                    backgroundGradientPresetId: t,
                    theme: n
                } = e, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : d.UserSettingsDelay.INFREQUENT_USER_ACTION;
                if (a.default.dispatch({
                        type: "UNSYNCED_USER_SETTINGS_UPDATE",
                        settings: {
                            useSystemTheme: "system" === n ? _.SystemThemeState.ON : _.SystemThemeState.OFF
                        }
                    }), a.default.dispatch({
                        type: "SELECTIVELY_SYNCED_USER_SETTINGS_UPDATE",
                        changes: {
                            appearance: {
                                settings: {
                                    clientThemeSettings: {
                                        backgroundGradientPresetId: t
                                    },
                                    theme: "system" === n ? void 0 : n
                                }
                            }
                        }
                    }), o.default.shouldSync("appearance")) return d.PreloadedUserSettingsActionCreators.updateAsync("appearance", e => {
                    var i;
                    e.theme = f(n), e.clientThemeSettings = {
                        backgroundGradientPresetId: null != (i = {
                            backgroundGradientPresetId: t
                        }).backgroundGradientPresetId ? r.UInt32Value.create({
                            value: i.backgroundGradientPresetId
                        }) : void 0
                    }
                }, i)
            }
            var h = {
                overrideLocale(e) {
                    a.default.dispatch({
                        type: "USER_SETTINGS_LOCALE_OVERRIDE",
                        locale: e
                    })
                },
                updatedUnsyncedSettings(e) {
                    a.default.dispatch({
                        type: "UNSYNCED_USER_SETTINGS_UPDATE",
                        settings: e
                    })
                },
                setShouldSyncTextSettings(e) {
                    a.default.dispatch({
                        type: "SELECTIVELY_SYNCED_USER_SETTINGS_UPDATE",
                        changes: {
                            text: {
                                shouldSync: e,
                                settings: e ? {} : {
                                    inlineAttachmentMedia: c.InlineAttachmentMedia.getSetting(),
                                    inlineEmbedMedia: c.InlineEmbedMedia.getSetting(),
                                    renderEmbeds: c.RenderEmbeds.getSetting(),
                                    renderReactions: c.RenderReactions.getSetting(),
                                    animateEmoji: c.AnimateEmoji.getSetting(),
                                    animateStickers: c.AnimateStickers.getSetting(),
                                    gifAutoPlay: c.GifAutoPlay.getSetting()
                                }
                            }
                        }
                    })
                },
                setShouldSyncAppearanceSettings(e) {
                    var t;
                    a.default.dispatch({
                        type: "SELECTIVELY_SYNCED_USER_SETTINGS_UPDATE",
                        changes: {
                            appearance: {
                                shouldSync: e,
                                settings: e ? {} : {
                                    theme: u.default.theme,
                                    clientThemeSettings: {
                                        backgroundGradientPresetId: null === (t = l.default.gradientPreset) || void 0 === t ? void 0 : t.id
                                    },
                                    developerMode: c.DeveloperMode.getSetting()
                                }
                            }
                        }
                    })
                },
                applySettingsOverride(e) {
                    a.default.dispatch({
                        type: "USER_SETTINGS_OVERRIDE_APPLY",
                        settings: e
                    })
                },
                clearSettingsOverride() {
                    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    a.default.dispatch({
                        type: "USER_SETTINGS_OVERRIDE_CLEAR",
                        settings: t
                    })
                },
                updateLocale: e => d.PreloadedUserSettingsActionCreators.updateAsync("localization", t => {
                    t.locale = r.StringValue.create({
                        value: e
                    })
                }, d.UserSettingsDelay.INFREQUENT_USER_ACTION),
                updateTheme(e) {
                    a.default.dispatch({
                        type: "SELECTIVELY_SYNCED_USER_SETTINGS_UPDATE",
                        changes: {
                            appearance: {
                                settings: {
                                    theme: e
                                }
                            }
                        }
                    }), o.default.shouldSync("appearance") && d.PreloadedUserSettingsActionCreators.updateAsync("appearance", t => {
                        t.theme = f(e)
                    }, d.UserSettingsDelay.INFREQUENT_USER_ACTION)
                }
            }
        },
        477566: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("551042"),
                s = n("135230"),
                a = {
                    show(e) {
                        let {
                            title: t,
                            body: n,
                            confirmColor: a,
                            confirmText: l,
                            cancelText: o,
                            onConfirm: u,
                            onCancel: c,
                            onCloseCallback: d,
                            secondaryConfirmText: _,
                            onConfirmSecondary: E,
                            className: f,
                            titleClassName: p
                        } = e;
                        (0, r.openModal)(e => (0, i.jsx)(s.default, {
                            ...e,
                            title: t,
                            body: n,
                            confirmColor: a,
                            confirmText: l,
                            cancelText: o,
                            onConfirm: u,
                            onCancel: c,
                            secondaryConfirmText: _,
                            onConfirmSecondary: E,
                            className: f,
                            titleClassName: p
                        }), {
                            onCloseCallback: d
                        })
                    },
                    close() {}
                }
        },
        452453: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ContextMenuClassName: function() {
                    return i
                }
            });
            let i = "context-menu"
        },
        371642: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("410689"),
                a = n("49671"),
                l = n("254490"),
                o = n("773336"),
                u = n("980134");

            function c(e) {
                let t = ["openFile"];
                e.multiple && t.push("multiSelections");
                let n = e.filters;
                a.default.fileManager.openFiles({
                    properties: t,
                    filters: n
                }, u.MAX_TOTAL_ATTACHMENT_SIZE).then(t => {
                    let n = t.map(e => l.transformNativeFile(e));
                    null != n && e.onChange({
                        stopPropagation: () => null,
                        preventDefault: () => null,
                        currentTarget: {
                            files: n
                        }
                    })
                }).catch(t => {
                    e.onChange({
                        stopPropagation: () => null,
                        preventDefault: () => null,
                        currentTarget: {
                            files: null,
                            err: t
                        }
                    })
                })
            }
            class d extends r.Component {
                activateUploadDialogue() {
                    if (null != this._ref) return this._ref.activateUploadDialogue()
                }
                setRef(e) {
                    this._ref = e
                }
                render() {
                    return (0, i.jsx)(s.default, {
                        ref: this.setRef,
                        handleNativeClick: c,
                        embedded: (0, o.isDesktop)(),
                        ...this.props
                    })
                }
                constructor(e) {
                    super(e), this._ref = r.createRef(), this.setRef = this.setRef.bind(this)
                }
            }
            var _ = d
        },
        135230: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("271841"),
                l = n("227645"),
                o = n("818810"),
                u = n("516256"),
                c = n("577776"),
                d = n("145131"),
                _ = n("782340"),
                E = n("681812"),
                f = e => {
                    let t, n, r, {
                        body: f,
                        cancelText: p,
                        className: h,
                        confirmColor: S,
                        confirmText: T = _.default.Messages.OKAY,
                        secondaryConfirmText: I,
                        onCancel: m,
                        onClose: g,
                        onConfirm: A,
                        onConfirmSecondary: C,
                        title: R,
                        transitionState: N,
                        titleClassName: v
                    } = e;
                    return null != p && "" !== p && (t = (0, i.jsx)(a.Button, {
                        type: "button",
                        size: a.Button.Sizes.XLARGE,
                        color: a.Button.Colors.PRIMARY,
                        onClick: () => {
                            null == g || g(), null == m || m()
                        },
                        className: E.secondaryButton,
                        children: p
                    })), null != T && "" !== T && (n = (0, i.jsx)(a.Button, {
                        type: "submit",
                        color: S,
                        size: a.Button.Sizes.XLARGE,
                        className: s(E.primaryButton, null != t ? E.gutter : null),
                        autoFocus: !0,
                        children: T
                    })), null != I && "" !== I && (r = (0, i.jsx)(l.Clickable, {
                        onClick: () => {
                            null == g || g(), null == C || C()
                        },
                        className: E.minorContainer,
                        children: (0, i.jsx)(c.Text, {
                            className: E.secondaryAction,
                            variant: "text-xs/normal",
                            children: I
                        })
                    })), (0, i.jsx)(u.ModalRoot, {
                        transitionState: N,
                        className: s(h, E.container),
                        "aria-label": R,
                        children: (0, i.jsxs)("form", {
                            onSubmit: e => {
                                null != e && e.preventDefault(), null == g || g(), null == A || A()
                            },
                            className: E.form,
                            children: [(0, i.jsx)(u.ModalContent, {
                                className: E.modalContent,
                                children: (0, i.jsxs)(d.default, {
                                    direction: d.default.Direction.VERTICAL,
                                    justify: d.default.Justify.CENTER,
                                    className: E.content,
                                    children: [null != R && (0, i.jsx)(o.FormTitle, {
                                        tag: "h2",
                                        className: s(E.title, v),
                                        children: R
                                    }), null != f && (0, i.jsx)(c.Text, {
                                        variant: "text-md/normal",
                                        className: E.body,
                                        children: f
                                    })]
                                })
                            }), (0, i.jsxs)(u.ModalFooter, {
                                justify: d.default.Justify.BETWEEN,
                                wrap: d.default.Wrap.WRAP,
                                children: [n, t, r]
                            })]
                        })
                    })
                }
        },
        459462: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Anchor: function() {
                    return E
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("247716"),
                o = n("227645"),
                u = n("718776"),
                c = n("143435"),
                d = n("315733"),
                _ = n("432676");

            function E(e) {
                let {
                    href: t,
                    onClick: n,
                    className: s,
                    children: E,
                    rel: f,
                    target: p,
                    useDefaultUnderlineStyles: h = !0,
                    title: S,
                    style: T,
                    focusProps: I,
                    ...m
                } = e;
                null != t && null == n && (n = c.designConfig.getDefaultLinkInterceptor(t));
                let g = r.useContext(l.BlockInteractionsContext),
                    A = {
                        className: a(_.anchor, {
                            [_.anchorUnderlineOnHover]: h
                        }, s),
                        href: t,
                        onClick: n,
                        rel: null != f ? f : void 0,
                        target: null != p ? p : void 0,
                        title: null != S ? S : void 0,
                        style: null != T ? T : void 0
                    };
                return (null != t && !(0, d.isSafeRedirect)(t) && (A.rel = "noreferrer noopener", A.target = "_blank"), g && delete A.href, null != n) ? (0, i.jsx)(o.Clickable, {
                    tag: "a",
                    ...m,
                    ...A,
                    onClick: n,
                    focusProps: I,
                    children: E
                }) : (0, i.jsx)(u.FocusRing, {
                    ...I,
                    children: (0, i.jsx)("a", {
                        ...m,
                        ...A,
                        children: E
                    })
                })
            }
        },
        913365: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Avatar: function() {
                    return O
                },
                AnimatedAvatar: function() {
                    return L
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("623829"),
                o = n("227645"),
                u = n("709749"),
                c = n("391010"),
                d = n("414055"),
                _ = n("449918"),
                E = n("587974"),
                f = n("158998"),
                p = n("52904"),
                h = n("49111"),
                S = n("573135"),
                T = n("782340"),
                I = n("756730");
            let m = {
                tension: 1200,
                friction: 70
            };

            function g(e) {
                let {
                    size: t,
                    isMobile: n,
                    isTyping: r,
                    ...s
                } = e, a = (0, p.getAvatarSpecs)(t), l = a.status * (n && !r ? p.MOBILE_HEIGHT_RATIO : 1), o = a.status * (r ? p.TYPING_WIDTH_RATIO : 1), u = r ? (a.status * p.TYPING_WIDTH_RATIO - a.status) / 2 : 0, c = a.size - a.status - u - a.offset, d = a.size - l - a.offset;
                return (0, i.jsx)("rect", {
                    x: c,
                    y: d,
                    width: o,
                    height: l,
                    fill: "transparent",
                    "aria-hidden": !0,
                    ...s
                })
            }

            function A(e, t, n) {
                let i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                    r = (0, c.getStatusSize)(e.status, t, n, i),
                    s = (i ? e.size - (r.width / 2 + e.status / 2) : e.size - r.width) - e.offset;
                return {
                    ...r,
                    x: s,
                    y: e.size - r.height - e.offset
                }
            }

            function C(e, t, n, r) {
                let s = A(n, r, t, !1),
                    a = (0, c.getStatusBackdropOpacity)(r, e);
                if (!t) {
                    let t = s.height / 2 + n.stroke,
                        r = s.x + n.status / 2;
                    return (0, i.jsx)("circle", {
                        style: {
                            opacity: a
                        },
                        fill: e,
                        r: t,
                        cx: r,
                        cy: r
                    })
                }
                let l = s.height + 2 * n.stroke,
                    o = s.width + 2 * n.stroke,
                    u = s.x - n.stroke,
                    d = s.y - n.stroke;
                return (0, i.jsx)("rect", {
                    fill: e,
                    height: l,
                    width: o,
                    style: {
                        opacity: a
                    },
                    x: u,
                    y: d,
                    rx: n.stroke
                })
            }

            function R(e) {
                let {
                    status: t,
                    isMobile: n,
                    isTyping: i,
                    size: r
                } = e, s = n && !i && t === h.StatusTypes.ONLINE, a = (0, p.getAvatarSpecs)(r);
                return {
                    ... function(e, t, n) {
                        let {
                            size: i,
                            status: r,
                            stroke: s,
                            offset: a
                        } = e, l = n ? r * p.TYPING_WIDTH_RATIO : r, o = t ? r * p.MOBILE_HEIGHT_RATIO : r;
                        return {
                            avatarCutoutX: i - l + (l - r) / 2 - s - a,
                            avatarCutoutY: i - o - s - a,
                            avatarCutoutWidth: l + 2 * s,
                            avatarCutoutHeight: o + 2 * s,
                            avatarCutoutRadius: t ? (o + 2 * s) * p.CUTOUT_BORDER_RADIUS : (r + 2 * s) / 2
                        }
                    }(a, s, i),
                    ...(0, c.getStatusValues)({
                        status: t,
                        size: a.status,
                        isMobile: s,
                        isTyping: i,
                        topOffset: 2,
                        leftOffset: 6
                    })
                }
            }

            function N(e) {
                let {
                    children: t,
                    size: n,
                    onClick: r,
                    onMouseDown: s,
                    onKeyDown: l,
                    onContextMenu: u,
                    onMouseEnter: c,
                    onMouseLeave: d,
                    className: _,
                    tabIndex: h,
                    ariaLabel: m,
                    ariaHidden: g,
                    status: A,
                    isMobile: C = !1,
                    isTyping: R = !1,
                    avatarDecoration: N,
                    typingOffset: v,
                    specs: O
                } = e, D = {
                    width: (0, p.getAvatarSize)(n),
                    height: (0, p.getAvatarSize)(n)
                }, L = null == m || g ? void 0 : function(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    return null != t ? T.default.Messages.LABEL_WITH_ONLINE_STATUS.format({
                        label: e,
                        status: (0, f.humanizeStatus)(t, n)
                    }) : e
                }(m, A, C), M = O.size * S.DECORATION_TO_AVATAR_RATIO, P = null != N && (0, i.jsx)("svg", {
                    width: M + v,
                    height: M,
                    viewBox: "0 0 ".concat(M + v, " ").concat(M),
                    className: I.avatarDecoration,
                    "aria-hidden": !0,
                    children: (0, i.jsx)("foreignObject", {
                        x: 0,
                        y: 0,
                        width: M,
                        height: M,
                        mask: "url(#".concat(function(e, t, n, i) {
                            if (null == e) return "";
                            if (i) switch (t) {
                                case p.AvatarSizes.SIZE_16:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_16;
                                case p.AvatarSizes.SIZE_20:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_20;
                                case p.AvatarSizes.SIZE_24:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_24;
                                case p.AvatarSizes.SIZE_32:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_32;
                                case p.AvatarSizes.SIZE_40:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_40;
                                case p.AvatarSizes.SIZE_56:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_56;
                                case p.AvatarSizes.SIZE_80:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_80;
                                case p.AvatarSizes.SIZE_120:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_TYPING_120
                            }
                            if (n) switch (t) {
                                case p.AvatarSizes.SIZE_16:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_16;
                                case p.AvatarSizes.SIZE_20:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_20;
                                case p.AvatarSizes.SIZE_24:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_24;
                                case p.AvatarSizes.SIZE_32:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_32;
                                case p.AvatarSizes.SIZE_40:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_40;
                                case p.AvatarSizes.SIZE_56:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_56;
                                case p.AvatarSizes.SIZE_80:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_80;
                                case p.AvatarSizes.SIZE_120:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_MOBILE_120
                            }
                            switch (t) {
                                case p.AvatarSizes.SIZE_16:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_16;
                                case p.AvatarSizes.SIZE_20:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_20;
                                case p.AvatarSizes.SIZE_24:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_24;
                                case p.AvatarSizes.SIZE_32:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_32;
                                case p.AvatarSizes.SIZE_40:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_40;
                                case p.AvatarSizes.SIZE_56:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_56;
                                case p.AvatarSizes.SIZE_80:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_80;
                                case p.AvatarSizes.SIZE_120:
                                    return E.MaskIDs.AVATAR_DECORATION_STATUS_ROUND_120
                            }
                        }(A, n, C, R), ")"),
                        children: (0, i.jsx)("div", {
                            className: I.avatarStack,
                            children: (0, i.jsx)("img", {
                                className: I.avatar,
                                src: N,
                                alt: " ",
                                "aria-hidden": !0
                            })
                        })
                    })
                });
                return null != r || null != s ? (0, i.jsxs)(o.Clickable, {
                    className: a(I.wrapper, I.pointer, _),
                    style: D,
                    onClick: r,
                    tabIndex: h,
                    onContextMenu: u,
                    onMouseDown: s,
                    onKeyDown: l,
                    onMouseEnter: null != c ? c : void 0,
                    onMouseLeave: null != d ? d : void 0,
                    "aria-label": L,
                    "aria-hidden": g,
                    children: [t, P]
                }) : (0, i.jsxs)("div", {
                    className: a(I.wrapper, _),
                    style: D,
                    onContextMenu: null != u ? u : void 0,
                    onMouseEnter: null != c ? c : void 0,
                    onMouseLeave: null != d ? d : void 0,
                    role: "img",
                    "aria-label": L,
                    "aria-hidden": g,
                    children: [t, P]
                })
            }

            function v(e) {
                let {
                    src: t,
                    isSpeaking: n
                } = e;
                return (0, i.jsxs)("div", {
                    className: I.avatarStack,
                    children: [(0, i.jsx)("img", {
                        src: null != t ? t : void 0,
                        alt: " ",
                        className: I.avatar,
                        "aria-hidden": !0
                    }), n && (0, i.jsx)("div", {
                        className: I.avatarSpeaking
                    })]
                })
            }

            function O(e) {
                let {
                    src: t,
                    status: n,
                    size: r,
                    statusColor: s,
                    isMobile: l = !1,
                    isTyping: o = !1,
                    typingIndicatorRef: S,
                    isSpeaking: T = !1,
                    statusTooltip: m = !1,
                    statusBackdropColor: g,
                    "aria-hidden": R = !1,
                    "aria-label": O
                } = e, D = n !== h.StatusTypes.UNKNOWN ? n : null, L = (0, p.getAvatarSpecs)(r), M = null != D ? Math.ceil((L.status * p.TYPING_WIDTH_RATIO - L.status) / 2) : 0, P = L.size + M, b = (0, _.useColorValue)((0, c.getStatusColor)(D)).hex;
                return (0, i.jsx)(N, {
                    ...e,
                    ariaLabel: O,
                    ariaHidden: R,
                    status: D,
                    specs: L,
                    typingOffset: M,
                    children: (0, i.jsxs)("svg", {
                        width: P,
                        height: P,
                        viewBox: "0 0 ".concat(P, " ").concat(P),
                        className: a(I.mask, I.svg),
                        "aria-hidden": !0,
                        children: [(0, i.jsx)("foreignObject", {
                            x: 0,
                            y: 0,
                            width: L.size,
                            height: L.size,
                            mask: "url(#".concat(function(e, t, n, i) {
                                if (null == e) return E.MaskIDs.AVATAR_DEFAULT;
                                if (i) switch (t) {
                                    case p.AvatarSizes.SIZE_16:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_16;
                                    case p.AvatarSizes.SIZE_20:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_20;
                                    case p.AvatarSizes.SIZE_24:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_24;
                                    case p.AvatarSizes.SIZE_32:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_32;
                                    case p.AvatarSizes.SIZE_40:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_40;
                                    case p.AvatarSizes.SIZE_48:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_48;
                                    case p.AvatarSizes.SIZE_56:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_56;
                                    case p.AvatarSizes.SIZE_80:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_80;
                                    case p.AvatarSizes.SIZE_120:
                                        return E.MaskIDs.AVATAR_STATUS_TYPING_120
                                }
                                if (e === h.StatusTypes.ONLINE && n) switch (t) {
                                    case p.AvatarSizes.SIZE_16:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_16;
                                    case p.AvatarSizes.SIZE_20:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_20;
                                    case p.AvatarSizes.SIZE_24:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_24;
                                    case p.AvatarSizes.SIZE_32:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_32;
                                    case p.AvatarSizes.SIZE_40:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_40;
                                    case p.AvatarSizes.SIZE_48:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_48;
                                    case p.AvatarSizes.SIZE_56:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_56;
                                    case p.AvatarSizes.SIZE_80:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_80;
                                    case p.AvatarSizes.SIZE_120:
                                        return E.MaskIDs.AVATAR_STATUS_MOBILE_120
                                }
                                switch (t) {
                                    case p.AvatarSizes.SIZE_16:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_16;
                                    case p.AvatarSizes.SIZE_20:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_20;
                                    case p.AvatarSizes.SIZE_24:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_24;
                                    case p.AvatarSizes.SIZE_32:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_32;
                                    case p.AvatarSizes.SIZE_40:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_40;
                                    case p.AvatarSizes.SIZE_48:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_48;
                                    case p.AvatarSizes.SIZE_56:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_56;
                                    case p.AvatarSizes.SIZE_80:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_80;
                                    case p.AvatarSizes.SIZE_120:
                                        return E.MaskIDs.AVATAR_STATUS_ROUND_120
                                }
                                throw Error("getMaskId(): Unsupported type, size: ".concat(t, ", status: ").concat(e, ", isMobile: ").concat(n ? "true" : "false"))
                            }(D, r, l, o), ")"),
                            children: (0, i.jsx)(v, {
                                src: t,
                                isSpeaking: T
                            })
                        }), null != D ? (0, i.jsx)(d.Tooltip, {
                            text: m ? (0, f.humanizeStatus)(D) : null,
                            "aria-label": !1,
                            position: "top",
                            spacing: 5 + 1.5 * L.stroke,
                            children: e => (0, i.jsxs)(i.Fragment, {
                                children: [null != g && C(g, l, L, D), (0, i.jsx)("rect", {
                                    ...e,
                                    ...A(L, D, l, o),
                                    fill: null != s ? s : b,
                                    mask: "url(#".concat((0, c.getStatusMask)(D, l, o), ")"),
                                    className: I.pointerEvents
                                }), o ? (0, i.jsx)(u.Dots, {
                                    ref: S,
                                    dotRadius: L.status / 4,
                                    x: L.size - 1.375 * L.status - L.offset,
                                    y: L.size - L.status / 1.333 - L.offset
                                }) : null]
                            })
                        }) : null]
                    })
                })
            }

            function D(e) {
                let {
                    fromIsMobile: t = !0,
                    fromStatus: n,
                    fromColor: s,
                    isMobile: o = !1,
                    isTyping: E = !1,
                    typingIndicatorRef: h,
                    isSpeaking: S = !1,
                    size: T,
                    src: A,
                    status: O,
                    statusColor: D,
                    statusTooltip: L = !1,
                    statusBackdropColor: M,
                    "aria-hidden": P = !1,
                    "aria-label": b
                } = e, y = (0, _.useColorValue)((0, c.getStatusColor)(O)).hex, U = null == D ? y : D, G = r.useId(), w = r.useId(), [x] = r.useState(() => ({
                    fill: s,
                    ...R({
                        size: T,
                        status: n,
                        isMobile: t,
                        isTyping: !1
                    })
                })), k = r.useMemo(() => ({
                    fill: U,
                    ...R({
                        size: T,
                        status: O,
                        isMobile: o,
                        isTyping: E
                    })
                }), [U, T, O, o, E]), {
                    avatarCutoutX: F,
                    avatarCutoutY: B,
                    avatarCutoutWidth: V,
                    avatarCutoutHeight: H,
                    avatarCutoutRadius: j,
                    fill: Y,
                    ...W
                } = (0, l.useSpring)({
                    immediate: !document.hasFocus(),
                    config: m,
                    from: x,
                    to: k
                }), K = (0, p.getAvatarSize)(T), z = (0, p.getAvatarSpecs)(T), Z = z.status * p.TYPING_WIDTH_RATIO, q = z.status * p.MOBILE_HEIGHT_RATIO, X = null != O ? (z.status * p.TYPING_WIDTH_RATIO - z.status) / 2 : 0, Q = z.size - z.status - X - z.offset, J = z.size - q - z.offset, $ = z.size + Math.ceil(X);
                return (0, i.jsx)(N, {
                    ...e,
                    ariaLabel: b,
                    ariaHidden: P,
                    typingOffset: X,
                    specs: z,
                    children: (0, i.jsxs)("svg", {
                        width: $,
                        height: $,
                        viewBox: "0 0 ".concat($, " ").concat($),
                        className: a(I.mask, I.svg),
                        "aria-hidden": !0,
                        children: [(0, i.jsxs)("mask", {
                            id: G,
                            width: K,
                            height: K,
                            children: [(0, i.jsx)("circle", {
                                cx: K / 2,
                                cy: K / 2,
                                r: K / 2,
                                fill: "white"
                            }), (0, i.jsx)(l.animated.rect, {
                                color: "black",
                                x: F,
                                y: B,
                                width: V,
                                height: H,
                                rx: j,
                                ry: j
                            })]
                        }), (0, i.jsx)("foreignObject", {
                            className: I.foreignObject,
                            x: 0,
                            y: 0,
                            width: K,
                            height: K,
                            mask: "url(#".concat(G, ")"),
                            children: (0, i.jsx)(v, {
                                src: A,
                                isSpeaking: S
                            })
                        }), (0, i.jsx)(d.Tooltip, {
                            text: L ? (0, f.humanizeStatus)(O) : null,
                            "aria-label": !1,
                            position: "top",
                            spacing: function(e, t, n) {
                                let i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                                return 5 - (n && !i ? 0 : .5 * e) + 1.5 * t
                            }(z.status, z.stroke, o, E),
                            children: e => (0, i.jsxs)(i.Fragment, {
                                children: [null != M && C(M, o, z, O), (0, i.jsxs)("svg", {
                                    x: Q,
                                    y: J,
                                    width: Z,
                                    height: q,
                                    viewBox: "0 0 ".concat(Z, " ").concat(q),
                                    className: L ? I.cursorDefault : void 0,
                                    children: [(0, c.renderStatusMask)(W, z.status, w), (0, i.jsx)(l.animated.rect, {
                                        fill: Y,
                                        width: Z,
                                        height: q,
                                        mask: "url(#".concat(w, ")")
                                    }), (0, i.jsx)(u.Dots, {
                                        ref: h,
                                        dotRadius: z.status / 4,
                                        x: .15 * Z,
                                        y: .5 * q,
                                        hide: !E
                                    })]
                                }), (0, i.jsx)(g, {
                                    size: T,
                                    isMobile: o,
                                    isTyping: E,
                                    className: I.pointerEvents,
                                    ...e
                                })]
                            })
                        })]
                    })
                })
            }
            let L = r.memo(function(e) {
                var t, n, s, a, l;
                let {
                    statusColor: o,
                    status: u,
                    ...d
                } = e, {
                    isMobile: E = !1,
                    isTyping: f = !1
                } = d, p = r.useRef(u), S = r.useRef(E), T = (0, _.useColorValue)((0, c.getStatusColor)(u)).hex, I = null == o ? T : o, m = r.useRef(I), g = r.useRef(!1);
                let A = g.current || (t = f, n = u, s = p.current, a = E, l = S.current, null != s && null != n && (!!t || n !== s || n === h.StatusTypes.ONLINE && a !== l || !1));
                return r.useLayoutEffect(() => {
                    g.current = A, p.current = u, S.current = E, m.current = I
                }, [u, E, I, A]), null != u && null != p.current && A ? (0, i.jsx)(D, {
                    ...d,
                    status: u,
                    statusColor: I,
                    fromStatus: p.current,
                    fromIsMobile: S.current,
                    fromColor: m.current
                }) : (0, i.jsx)(O, {
                    ...d,
                    status: u,
                    statusColor: I
                })
            })
        },
        52904: function(e, t, n) {
            "use strict";
            var i, r, s, a, l, o;
            n.r(t), n.d(t, {
                MOBILE_HEIGHT_RATIO: function() {
                    return u
                },
                TYPING_WIDTH_RATIO: function() {
                    return c
                },
                MOBILE_ICON_RADIUS: function() {
                    return d
                },
                CUTOUT_BORDER_RADIUS: function() {
                    return _
                },
                AvatarSizes: function() {
                    return i
                },
                StatusBackdropColors: function() {
                    return r
                },
                StatusBackdropOpacity: function() {
                    return s
                },
                AvatarSizeSpecs: function() {
                    return E
                },
                getAvatarSpecs: function() {
                    return f
                },
                getAvatarSize: function() {
                    return p
                }
            });
            let u = 1.5,
                c = 2.5,
                d = .125,
                _ = .2;
            (a = i || (i = {})).SIZE_16 = "SIZE_16", a.SIZE_20 = "SIZE_20", a.SIZE_24 = "SIZE_24", a.SIZE_32 = "SIZE_32", a.SIZE_40 = "SIZE_40", a.SIZE_48 = "SIZE_48", a.SIZE_56 = "SIZE_56", a.SIZE_80 = "SIZE_80", a.SIZE_120 = "SIZE_120", a.SIZE_152 = "SIZE_152", a.DEPRECATED_SIZE_30 = "DEPRECATED_SIZE_30", a.DEPRECATED_SIZE_60 = "DEPRECATED_SIZE_60", a.DEPRECATED_SIZE_100 = "DEPRECATED_SIZE_100", (l = r || (r = {})).BLACK = "black", l.WHITE = "white", (o = s || (s = {}))[o.HIGH = .7] = "HIGH", o[o.LOW = .45] = "LOW";
            let E = Object.freeze({
                [i.SIZE_16]: Object.freeze({
                    size: 16,
                    status: 6,
                    stroke: 2,
                    offset: 0
                }),
                [i.SIZE_20]: Object.freeze({
                    size: 20,
                    status: 6,
                    stroke: 2,
                    offset: 0
                }),
                [i.SIZE_24]: Object.freeze({
                    size: 24,
                    status: 8,
                    stroke: 3,
                    offset: 0
                }),
                [i.SIZE_32]: Object.freeze({
                    size: 32,
                    status: 10,
                    stroke: 3,
                    offset: 0
                }),
                [i.SIZE_40]: Object.freeze({
                    size: 40,
                    status: 12,
                    stroke: 4,
                    offset: 0
                }),
                [i.SIZE_48]: Object.freeze({
                    size: 48,
                    status: 12,
                    stroke: 4,
                    offset: 0
                }),
                [i.SIZE_56]: Object.freeze({
                    size: 56,
                    status: 14,
                    stroke: 4,
                    offset: 2
                }),
                [i.SIZE_80]: Object.freeze({
                    size: 80,
                    status: 16,
                    stroke: 6,
                    offset: 4
                }),
                [i.SIZE_120]: Object.freeze({
                    size: 120,
                    status: 24,
                    stroke: 8,
                    offset: 8
                }),
                [i.SIZE_152]: Object.freeze({
                    size: 152,
                    status: 30,
                    stroke: 10,
                    offset: 10
                }),
                [i.DEPRECATED_SIZE_30]: Object.freeze({
                    size: 30,
                    status: 0,
                    stroke: 0,
                    offset: 0
                }),
                [i.DEPRECATED_SIZE_60]: Object.freeze({
                    size: 60,
                    status: 0,
                    stroke: 0,
                    offset: 0
                }),
                [i.DEPRECATED_SIZE_100]: Object.freeze({
                    size: 100,
                    status: 0,
                    stroke: 0,
                    offset: 0
                })
            });

            function f(e) {
                return E[e]
            }

            function p(e) {
                if ("number" != typeof e) return E[e].size;
                return e
            }
        },
        691609: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BlobMask: function() {
                    return N
                }
            });
            var i, r = n("920040"),
                s = n("773670"),
                a = n("575482"),
                l = n.n(a),
                o = n("644516"),
                u = n("620403"),
                c = n.n(u),
                d = n("623829"),
                _ = n("462567"),
                E = n("377419"),
                f = n("638800"),
                p = n("580279"),
                h = n("685422");
            let S = {
                    friction: 13,
                    tension: 240,
                    duration: 150
                },
                T = {
                    duration: 150,
                    friction: 3
                },
                I = {
                    friction: 30,
                    tension: 900,
                    mass: 1
                },
                m = {
                    duration: 150,
                    friction: 10,
                    tension: 100,
                    mass: 1
                },
                g = (null === (i = window.SVGPathElement) || void 0 === i ? void 0 : i.prototype.getTotalLength) != null,
                A = g ? (0, o.interpolate)("M48 24C48 37.2548 37.2548 48 24 48C10.7452 48 0 37.2548 0 24C0 10.7452 10.7452 0 24 0C37.2548 0 48 10.7452 48 24Z", "M0 24C0 16.5449 0 12.8174 1.21793 9.87706C2.84183 5.95662 5.95662 2.84183 9.87706 1.21793C12.8174 0 16.5449 0 24 0C31.4551 0 35.1826 0 38.1229 1.21793C42.0434 2.84183 45.1582 5.95662 46.7821 9.87706C48 12.8174 48 16.5449 48 24C48 31.4551 48 35.1826 46.7821 38.1229C45.1582 42.0434 42.0434 45.1582 38.1229 46.7821C35.1826 48 31.4551 48 24 48C16.5449 48 12.8174 48 9.87706 46.7821C5.95662 45.1582 2.84183 42.0434 1.21793 38.1229C0 35.1826 0 31.4551 0 24Z", {
                    maxSegmentLength: 1.5
                }) : e => "".concat(e);
            class C extends s.Component {
                componentDidMount() {
                    this.forceUpdate()
                }
                componentWillAppear(e) {
                    e()
                }
                componentWillEnter(e) {
                    e()
                }
                componentWillLeave(e) {
                    this.timeoutId = setTimeout(e, 300)
                }
                componentWillUnmount() {
                    clearTimeout(this.timeoutId)
                }
                render() {
                    let {
                        children: e,
                        className: t,
                        animatedStyle: n
                    } = this.props;
                    return (0, r.jsx)(d.animated.div, {
                        className: t,
                        style: n,
                        children: e
                    })
                }
            }

            function R(e) {
                let {
                    selected: t,
                    upperBadge: n,
                    lowerBadge: i,
                    highlight: r
                } = e;
                return t || null != n || null != i || !!r
            }
            class N extends s.Component {
                static getDerivedStateFromProps(e, t) {
                    let {
                        hasRenderedBadge: n,
                        upperBadgeMask: i,
                        lowerBadgeMask: r,
                        borderRadiusMask: s,
                        renderComplex: a
                    } = t, {
                        upperBadge: l,
                        lowerBadge: o
                    } = e, u = !1;
                    return (null != l && null == i || null != o && null == r) && (u = !0, n = !0, i = new d.Controller({
                        spring: 0
                    }), r = new d.Controller({
                        spring: 0
                    })), R(e) && null == s && (u = !0, s = new d.Controller({
                        spring: 0
                    })), !a && R(e) && (u = !0, a = !0), u ? {
                        hasRenderedBadge: n,
                        lowerBadgeMask: r,
                        upperBadgeMask: i,
                        borderRadiusMask: s,
                        renderComplex: a
                    } : null
                }
                componentDidMount() {
                    let {
                        selected: e,
                        lowerBadge: t,
                        upperBadge: n
                    } = this.props, {
                        borderRadiusMask: i,
                        lowerBadgeMask: r,
                        upperBadgeMask: s
                    } = this.state;
                    null == i || i.update({
                        spring: e ? 1 : 0,
                        immediate: !0
                    }).start(), null == r || r.update({
                        spring: null != t ? 1 : 0,
                        immediate: !0
                    }).start(), null == s || s.update({
                        spring: null != n ? 1 : 0,
                        immediate: !0
                    }).start()
                }
                componentWillUnmount() {
                    let {
                        borderRadiusMask: e,
                        lowerBadgeMask: t,
                        upperBadgeMask: n
                    } = this.state;
                    this.timeout.stop(), null == e || e.dispose(), null == t || t.dispose(), null == n || n.dispose()
                }
                componentDidUpdate(e) {
                    let {
                        selected: t,
                        lowerBadge: n,
                        upperBadge: i
                    } = this.props, {
                        borderRadiusMask: r,
                        lowerBadgeMask: s,
                        upperBadgeMask: a,
                        renderComplex: l
                    } = this.state;
                    t && !e.selected ? null == r || r.update({
                        spring: 1,
                        immediate: !1,
                        config: S
                    }).start() : !t && e.selected && (null == r || r.update({
                        spring: 0,
                        immediate: !1,
                        config: T
                    }).start()), null != n && null == e.lowerBadge ? null == s || s.update({
                        spring: 1,
                        immediate: !document.hasFocus(),
                        config: I
                    }).start() : null == n && null != e.lowerBadge && (null == s || s.update({
                        spring: 0,
                        immediate: !document.hasFocus(),
                        config: m
                    }).start()), null != i && null == e.upperBadge ? null == a || a.update({
                        spring: 1,
                        immediate: !document.hasFocus(),
                        config: I
                    }).start() : null == i && null != e.upperBadge && (null == a || a.update({
                        spring: 0,
                        immediate: !document.hasFocus(),
                        config: m
                    }).start()), !l || R(this.props) || this.timeout.isStarted() ? R(this.props) && this.timeout.isStarted() && this.timeout.stop() : this.timeout.start(c(108e5, 18e6), this.handleTimeout)
                }
                getBadgePositionInterpolation(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                    if (null == e) return;
                    let {
                        spring: n
                    } = e.springs;
                    return n.to([0, 1], [20, 0]).to(e => "translate(".concat(e, " ").concat(e * t, ")"))
                }
                getLowerBadgeStyles() {
                    let {
                        lowerBadgeMask: e
                    } = this.state;
                    if (null == e) return;
                    let {
                        spring: t
                    } = e.springs;
                    return {
                        opacity: t.to([0, .5, 1], [0, 0, 1]),
                        transform: t.to(e => "translate(".concat(16 - 16 * e, "px, ").concat(16 - 16 * e, "px)"))
                    }
                }
                getUpperBadgeStyles() {
                    let {
                        upperBadgeMask: e
                    } = this.state;
                    if (null == e) return;
                    let {
                        spring: t
                    } = e.springs;
                    return {
                        opacity: t.to([0, .5, 1], [0, 0, 1]),
                        transform: t.to(e => "translate(".concat(16 - 16 * e, "px, ").concat(-1 * (16 - 16 * e), "px)"))
                    }
                }
                getPathInterpolation() {
                    var e;
                    return null === (e = this.state.borderRadiusMask) || void 0 === e ? void 0 : e.springs.spring.to(A)
                }
                render() {
                    let {
                        children: e,
                        className: t,
                        innerClassName: n,
                        lowerBadge: i,
                        lowerBadgeWidth: a,
                        style: o,
                        upperBadge: u,
                        highlight: c
                    } = this.props, {
                        maskId: _,
                        lowerBadgeMask: f,
                        upperBadgeMask: S,
                        focused: T,
                        hasRenderedBadge: I,
                        renderComplex: m
                    } = this.state;
                    if (!m) return (0, r.jsx)("div", {
                        className: l(t, {
                            [h.wrapperSimple]: !0,
                            [h.simpleFocused]: T
                        }),
                        style: o,
                        onFocus: this.handleFocus,
                        onBlur: this.handleBlur,
                        children: (0, r.jsx)("svg", {
                            width: 48,
                            height: 48,
                            viewBox: "0 0 ".concat(48, " ").concat(48),
                            className: h.svg,
                            overflow: "visible",
                            children: (0, r.jsx)("foreignObject", {
                                mask: "url(#".concat(_, ")"),
                                x: 0,
                                y: 0,
                                className: n,
                                width: 48,
                                height: 48,
                                children: e
                            }, "foreign-object")
                        }, "svg")
                    }, "wrapper");
                    let g = "".concat(_, "-upper_badge_masks"),
                        A = "".concat(_, "-lower_badge_masks"),
                        R = "".concat(_, "-blob_mask"),
                        N = "".concat(_, "-stroke_mask"),
                        v = "".concat(_, "-highlight_mask");
                    return (0, r.jsxs)("div", {
                        className: l(t, h.wrapper),
                        style: o,
                        onFocus: this.handleFocus,
                        onBlur: this.handleBlur,
                        children: [(0, r.jsxs)("svg", {
                            width: 48,
                            height: 48,
                            viewBox: "0 0 ".concat(48, " ").concat(48),
                            className: l(h.svg, {
                                [h.noContain]: c
                            }),
                            overflow: "visible",
                            children: [(0, r.jsxs)("defs", {
                                children: [c && (0, r.jsx)(d.animated.path, {
                                    d: this.getPathInterpolation(),
                                    id: v
                                }), (0, r.jsx)(d.animated.path, {
                                    d: this.getPathInterpolation(),
                                    id: R
                                }), I ? (0, r.jsx)(d.animated.rect, {
                                    id: g,
                                    x: 28,
                                    y: -4,
                                    width: 24,
                                    height: 24,
                                    rx: 12,
                                    ry: 12,
                                    transform: this.getBadgePositionInterpolation(S, -1)
                                }) : null, I ? (0, r.jsx)(d.animated.rect, {
                                    id: A,
                                    x: 48 - (a + 8) + 4,
                                    y: 28,
                                    width: a + 8,
                                    height: 24,
                                    rx: 12,
                                    ry: 12,
                                    transform: this.getBadgePositionInterpolation(f)
                                }) : null]
                            }), (0, r.jsxs)("mask", {
                                id: _,
                                fill: "black",
                                x: 0,
                                y: 0,
                                width: 48,
                                height: 48,
                                children: [c && (0, r.jsx)("use", {
                                    href: "#".concat(v),
                                    fill: "black"
                                }), (0, r.jsx)("use", {
                                    href: "#".concat(R),
                                    fill: "white",
                                    className: l({
                                        [h.isHighlighted]: c
                                    })
                                }), I ? (0, r.jsxs)(r.Fragment, {
                                    children: [(0, r.jsx)("use", {
                                        href: "#".concat(g),
                                        fill: "black"
                                    }), (0, r.jsx)("use", {
                                        href: "#".concat(A),
                                        fill: "black"
                                    })]
                                }) : null]
                            }), I ? (0, r.jsxs)("mask", {
                                id: N,
                                children: [(0, r.jsx)("rect", {
                                    width: "150%",
                                    height: "150%",
                                    x: "-25%",
                                    y: "-25%",
                                    fill: "white"
                                }), (0, r.jsx)("use", {
                                    href: "#".concat(g),
                                    fill: "black"
                                }), (0, r.jsx)("use", {
                                    href: "#".concat(A),
                                    fill: "black"
                                })]
                            }) : null, T ? (0, r.jsxs)(s.Fragment, {
                                children: [(0, r.jsx)("g", {
                                    className: h.focusStroke,
                                    mask: "url(#".concat(N, ")"),
                                    children: (0, r.jsx)("use", {
                                        href: "#".concat(R)
                                    })
                                }), (0, r.jsxs)("g", {
                                    className: h.focusFill,
                                    children: [null != u ? (0, r.jsx)("use", {
                                        href: "#".concat(g)
                                    }) : null, null != i ? (0, r.jsx)("use", {
                                        href: "#".concat(A)
                                    }) : null]
                                })]
                            }) : null, c && (0, r.jsx)(d.animated.path, {
                                d: this.getPathInterpolation(),
                                stroke: E.default.BRAND_500,
                                "stroke-width": 2,
                                className: h.highlight,
                                mask: "url(#".concat(N, ")")
                            }), (0, r.jsx)("foreignObject", {
                                mask: "url(#".concat(_, ")"),
                                x: 0,
                                y: 0,
                                className: n,
                                width: 48,
                                height: 48,
                                children: e
                            }, "foreign-object")]
                        }, "svg"), (0, r.jsxs)(p.default, {
                            component: s.Fragment,
                            children: [null != i ? (0, r.jsx)(C, {
                                className: h.lowerBadge,
                                animatedStyle: this.getLowerBadgeStyles(),
                                children: i
                            }, "lower-badge") : null, null != u ? (0, r.jsx)(C, {
                                className: h.upperBadge,
                                animatedStyle: this.getUpperBadgeStyles(),
                                children: u
                            }, "upper-badge") : null]
                        })]
                    }, "wrapper")
                }
                constructor(...e) {
                    super(...e), this.timeout = new f.Timeout, this.state = {
                        renderComplex: !1,
                        hasRenderedBadge: !1,
                        maskId: (0, _.v4)(),
                        focused: !1
                    }, this.handleTimeout = () => {
                        this.timeout.stop(), this.setState({
                            renderComplex: !1
                        })
                    }, this.handleFocus = () => {
                        this.setState({
                            focused: !0
                        })
                    }, this.handleBlur = () => {
                        this.setState({
                            focused: !1
                        })
                    }
                }
            }
            N.defaultProps = {
                selected: !1,
                lowerBadgeWidth: 16,
                highlight: !1
            }
        },
        659397: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CardTypes: function() {
                    return o
                },
                Card: function() {
                    return u
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("552283");
            let o = {
                PRIMARY: l.cardPrimary,
                DANGER: l.cardDanger,
                WARNING: l.cardWarning,
                SUCCESS: l.cardSuccess,
                BRAND: l.cardBrand,
                CUSTOM: l.card
            };
            class u extends r.PureComponent {
                render() {
                    let e;
                    let {
                        children: t,
                        editable: n,
                        type: r,
                        className: s,
                        outline: u,
                        ...c
                    } = this.props;
                    return u ? e = l.outline : r === o.PRIMARY && n && (e = l.editable), (0, i.jsx)("div", {
                        className: a(s, r, e),
                        ...c,
                        children: t
                    })
                }
            }
            u.Types = o, u.defaultProps = {
                type: o.PRIMARY,
                outline: !1,
                editable: !1
            }
        },
        685698: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Checkbox: function() {
                    return g
                }
            });
            var i, r, s, a, l = n("920040"),
                o = n("773670"),
                u = n("575482"),
                c = n.n(u),
                d = n("161179"),
                _ = n.n(d),
                E = n("253824"),
                f = n("912557"),
                p = n("718776"),
                h = n("36694"),
                S = n("49111"),
                T = n("141118");
            (i = s || (s = {})).DEFAULT = "default", i.INVERTED = "inverted", i.GHOST = "ghost", i.ROW = "row", (r = a || (a = {})).TOP = "top", r.CENTER = "center";
            let I = {
                    BOX: T.box,
                    ROUND: T.round,
                    SMALL_BOX: T.smallBox
                },
                m = {
                    [a.TOP]: T.alignTop,
                    [a.CENTER]: T.alignCenter
                };
            class g extends o.PureComponent {
                getInputMode() {
                    return this.props.disabled ? "disabled" : this.props.readOnly ? "readonly" : "default"
                }
                getStyle() {
                    var e;
                    let {
                        value: t,
                        type: n,
                        color: i
                    } = this.props, r = null !== (e = this.props.style) && void 0 !== e ? e : {};
                    if (!1 === t) return r;
                    if (r = {
                            ...r
                        }, i === f.default.unsafe_rawColors.BRAND_500.css) switch (n) {
                        case s.DEFAULT:
                            r.borderColor = "var(--control-brand-foreground)";
                            break;
                        case s.GHOST:
                            r.borderColor = "var(--brand-experiment-15a)", r.backgroundColor = "var(--brand-experiment-15a)";
                            break;
                        case s.ROW:
                        case s.INVERTED:
                            r.borderColor = "var(--brand-experiment-400)", r.backgroundColor = "var(--brand-experiment-500)"
                    } else switch (n) {
                        case s.DEFAULT:
                            r.borderColor = i;
                            break;
                        case s.GHOST:
                            if (i.startsWith("var(--")) {
                                let e = "".concat(i.slice(0, -1), "-hsl)");
                                r.borderColor = "rgba(".concat(e, ", 0.15)"), r.backgroundColor = "rgba(".concat(e, ", 0.15)")
                            } else _((0, E.isValidHex)(i), "Checkbox: ".concat(i, " is not a valid hex color")), r.borderColor = (0, E.hex2rgb)(i, .15), r.backgroundColor = (0, E.hex2rgb)(i, .15);
                            break;
                        case s.ROW:
                        case s.INVERTED:
                            r.backgroundColor = i, r.borderColor = i
                    }
                    return r
                }
                getColor() {
                    let {
                        value: e,
                        type: t,
                        color: n
                    } = this.props;
                    return e ? t === s.INVERTED || t === s.ROW ? f.default.unsafe_rawColors.WHITE_500.css : n : f.default.unsafe_rawColors.TRANSPARENT.css
                }
                render() {
                    let {
                        disabled: e,
                        readOnly: t,
                        value: n,
                        shape: i,
                        align: r = a.CENTER,
                        className: o,
                        innerClassName: u,
                        children: d,
                        size: _,
                        reverse: E,
                        checkboxColor: f,
                        displayOnly: I,
                        type: g,
                        onClick: A
                    } = this.props, C = null != d ? (0, l.jsx)("div", {
                        className: c(T.label, e ? T.labelDisabled : T.labelClickable, E ? T.labelReversed : T.labelForward),
                        style: {
                            lineHeight: "".concat(_, "px")
                        },
                        children: d
                    }) : null, R = this.props.disabled ? T.inputDisabled : this.props.readOnly ? T.inputReadonly : T.inputDefault;
                    return (0, l.jsxs)(I ? "span" : "label", {
                        className: c(e ? T.checkboxWrapperDisabled : T.checkboxWrapper, m[r], o, {
                            [T.row]: g === s.ROW,
                            [T.checked]: n
                        }),
                        children: [E ? C : null, !I && (0, l.jsx)(p.FocusRing, {
                            children: (0, l.jsx)("input", {
                                className: c(u, R),
                                type: "checkbox",
                                onClick: A,
                                onChange: e || t ? S.NOOP : this.handleChange,
                                checked: n,
                                style: {
                                    width: _,
                                    height: _
                                }
                            })
                        }), (0, l.jsx)("div", {
                            className: c(T.checkbox, i, {
                                [T.checked]: n
                            }),
                            style: {
                                width: _,
                                height: _,
                                borderColor: f,
                                ...this.getStyle()
                            },
                            children: (0, l.jsx)(h.default, {
                                width: 18,
                                height: 18,
                                color: this.getColor(),
                                "aria-hidden": !0
                            })
                        }), E ? null : C]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleChange = e => {
                        let {
                            onChange: t
                        } = this.props;
                        null == t || t(e, e.currentTarget.checked)
                    }
                }
            }
            g.Types = s, g.Shapes = I, g.Aligns = a, g.defaultProps = {
                size: 24,
                disabled: !1,
                readOnly: !1,
                displayOnly: !1,
                value: !1,
                type: s.DEFAULT,
                color: f.default.unsafe_rawColors.BRAND_500.css,
                shape: I.BOX,
                align: a.CENTER,
                onChange: S.NOOP,
                reverse: !1
            }
        },
        227645: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Clickable: function() {
                    return c
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("247716"),
                o = n("718776"),
                u = n("49111");
            class c extends r.Component {
                renderNonInteractive() {
                    let {
                        tag: e,
                        focusProps: t,
                        innerRef: n,
                        onClick: i,
                        role: s,
                        tabIndex: a,
                        ...l
                    } = this.props;
                    return r.createElement(e, {
                        ref: this.setRef,
                        ...l
                    })
                }
                renderInner() {
                    let {
                        tag: e,
                        onClick: t,
                        className: n,
                        children: i,
                        focusProps: s,
                        innerRef: l,
                        ...o
                    } = this.props;
                    return null == t ? r.createElement(e, {
                        ref: this.setRef,
                        className: a(n),
                        ...o
                    }, i) : r.createElement(e, {
                        onClick: t,
                        ref: this.setRef,
                        onKeyPress: this.handleKeyPress,
                        className: a(n),
                        ...o
                    }, i)
                }
                render() {
                    let e = this.context;
                    return e ? this.renderNonInteractive() : (0, i.jsx)(o.FocusRing, {
                        ...this.props.focusProps,
                        children: this.renderInner()
                    })
                }
                constructor(...e) {
                    super(...e), this.handleKeyPress = e => {
                        let {
                            onClick: t,
                            href: n,
                            onKeyPress: i,
                            ignoreKeyPress: r
                        } = this.props;
                        !e.repeat && (!r && null != t && null != this.ref && (e.charCode === u.KeyboardKeys.SPACE || e.charCode === u.KeyboardKeys.ENTER) && (null == n && e.preventDefault(), null == this.ref.click ? t(e) : this.ref.click()), null != i && i(e))
                    }, this.setRef = e => {
                        this.ref = e;
                        let {
                            innerRef: t
                        } = this.props;
                        null != t && ("function" == typeof t ? t(e) : t.hasOwnProperty("current") && (t.current = e))
                    }
                }
            }
            c.contextType = l.BlockInteractionsContext, c.defaultProps = {
                tag: "div",
                role: "button",
                tabIndex: 0
            }
        },
        456189: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClickableContainer: function() {
                    return l
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("227645"),
                a = n("130326");

            function l(e) {
                let {
                    tag: t = "div",
                    children: n,
                    className: l,
                    focusProps: o,
                    onClick: u,
                    onDoubleClick: c,
                    onContextMenu: d,
                    onKeyDown: _,
                    onFocus: E,
                    onBlur: f,
                    onMouseDown: p,
                    buttonProps: h,
                    "aria-label": S
                } = e, T = r.useRef(null);
                return (0, i.jsxs)(t, {
                    ref: T,
                    className: l,
                    onClick: u,
                    onDoubleClick: c,
                    onContextMenu: d,
                    children: [(0, i.jsx)(s.Clickable, {
                        ...h,
                        focusProps: {
                            ringTarget: T,
                            ...o
                        },
                        className: a.focusTarget,
                        "aria-label": S,
                        onClick: e => {
                            e.stopPropagation(), null == u || u(e)
                        },
                        onKeyDown: _,
                        onFocus: E,
                        onBlur: f,
                        onMouseDown: p
                    }), n]
                })
            }
        },
        262448: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Collapsible: function() {
                    return _
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("623829"),
                o = n("498225"),
                u = n("731898"),
                c = n("206230"),
                d = n("892507");

            function _(e) {
                let {
                    children: t,
                    className: n,
                    collapsibleContent: s,
                    isExpanded: _
                } = e, [E, f] = r.useState(!1), p = (0, o.useStateFromStores)([c.default], () => c.default.useReducedMotion), [h, S] = r.useState(!0), [T, I] = r.useState(!1), m = null != _ ? _ : E, {
                    ref: g,
                    height: A = 0
                } = (0, u.default)(), {
                    ref: C,
                    height: R = 0
                } = (0, u.default)(), N = (0, l.useSpring)({
                    height: m ? A + R : R,
                    immediate: h || p,
                    config: l.config.stiff,
                    onRest: () => I(!0)
                }), v = r.useCallback(() => {
                    f(!E)
                }, [E, f]);
                return r.useLayoutEffect(() => {
                    let e = setTimeout(() => {
                        S(!1)
                    }, 100);
                    return () => clearTimeout(e)
                }, []), (0, i.jsx)("div", {
                    className: a(d.collapseable, {
                        [d.toggled]: m
                    }, n),
                    children: (0, i.jsxs)(l.animated.div, {
                        className: a(d.contentExpandContainer, {
                            [d.showOverflow]: m && T
                        }),
                        style: N,
                        children: [(0, i.jsx)("div", {
                            ref: C,
                            className: a(d.header, {
                                [d.toggled]: m
                            }),
                            children: t({
                                onClick: v
                            })
                        }), (0, i.jsx)("div", {
                            ref: g,
                            children: s
                        })]
                    })
                })
            }
        },
        960486: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMultiSelect: function() {
                    return I
                },
                useSingleSelect: function() {
                    return m
                },
                Combobox: function() {
                    return C
                },
                ComboboxItem: function() {
                    return N
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("947980"),
                o = n("685698"),
                u = n("227645"),
                c = n("605451"),
                d = n("433600"),
                _ = n("577776"),
                E = n("810567"),
                f = n("578706"),
                p = n("782340"),
                h = n("51927");
            let S = "data-listbox-item-id",
                T = Object.freeze({
                    STANDARD: h.selected,
                    BRAND: h.selectedBrand
                });

            function I(e) {
                let [t, n] = r.useState(() => new Set(e)), i = r.useCallback(e => {
                    n(t => {
                        let n = new Set(t);
                        return n.has(e) ? n.delete(e) : n.add(e), n
                    })
                }, []);
                return [t, i]
            }

            function m(e) {
                let [t, n] = r.useState(() => new Set(null != e ? [e] : void 0)), i = r.useCallback(e => {
                    n(new Set([e]))
                }, []);
                return [t, i]
            }

            function g(e) {
                return String(e)
            }
            let A = r.createContext({
                activeDescendant: null,
                selected: new Set,
                setSelected: () => null,
                itemToString: g
            });

            function C(e) {
                let {
                    placeholder: t,
                    children: n,
                    value: s,
                    onChange: o,
                    className: u,
                    listClassName: f,
                    "aria-label": T,
                    multiSelect: I = !1,
                    autoFocus: m = !1,
                    maxVisibleItems: C = 5,
                    itemToString: R = g,
                    showScrollbar: N = !1
                } = e, [v, O] = r.useState(""), [D] = r.useState(!0), [L, M] = r.useState(null), P = r.useId(), b = r.useRef(null);
                r.useLayoutEffect(() => {
                    let e = document.querySelector("[".concat(S, '="').concat(L, '"]')),
                        t = b.current;
                    null != t && null != e && t.scrollIntoViewNode({
                        node: e,
                        padding: 12
                    })
                }, [L]);
                let y = n(v),
                    U = 0 === y.length,
                    G = r.useId(),
                    w = r.useCallback(() => new Promise(e => {
                        let t = b.current;
                        if (null == t) return e();
                        t.scrollToTop({
                            callback: () => requestAnimationFrame(() => e())
                        })
                    }), []),
                    x = r.useCallback(() => new Promise(e => {
                        let t = b.current;
                        if (null == t) return e();
                        t.scrollToTop({
                            callback: () => requestAnimationFrame(() => e())
                        })
                    }), []),
                    k = r.useCallback((e, t) => {
                        M(t);
                        let n = document.querySelector(e),
                            i = b.current;
                        null != i && null != n && i.scrollIntoViewNode({
                            node: n
                        })
                    }, []),
                    F = (0, l.default)({
                        id: G,
                        isEnabled: !0,
                        useVirtualFocus: !0,
                        scrollToStart: w,
                        scrollToEnd: x,
                        setFocus: k
                    }),
                    B = N ? d.ListThin : d.ListNone;
                return (0, i.jsx)(l.ListNavigatorProvider, {
                    navigator: F,
                    children: (0, i.jsx)(l.ListNavigatorContainer, {
                        children: e => {
                            let {
                                ref: n,
                                onKeyDown: r,
                                ...l
                            } = e;
                            return (0, i.jsxs)("div", {
                                ref: n,
                                role: "combobox",
                                "aria-label": T,
                                "aria-expanded": D,
                                "aria-controls": D ? P : void 0,
                                "aria-owns": P,
                                "aria-haspopup": "listbox",
                                className: a(h.combobox, u),
                                children: [(0, i.jsx)(E.default, {
                                    autoFocus: m,
                                    size: E.default.Sizes.MEDIUM,
                                    placeholder: t,
                                    query: v,
                                    onChange: O,
                                    onKeyDown: r,
                                    onBlur: () => M(null),
                                    onClear: () => O(""),
                                    className: a({
                                        [h.searchWithScrollbar]: N
                                    }),
                                    inputProps: {
                                        "aria-multiline": !1,
                                        "aria-activedescendant": null != L ? L : void 0
                                    }
                                }), (0, i.jsx)("div", {
                                    children: D && (U ? (0, i.jsxs)("div", {
                                        className: h.empty,
                                        children: [(0, i.jsx)(c.Heading, {
                                            variant: "heading-md/semibold",
                                            children: p.default.Messages.AUTOCOMPLETE_NO_RESULTS_HEADER
                                        }), (0, i.jsx)(_.Text, {
                                            color: "text-muted",
                                            variant: "text-md/normal",
                                            children: p.default.Messages.AUTOCOMPLETE_NO_RESULTS_BODY
                                        })]
                                    }) : (0, i.jsx)(A.Provider, {
                                        value: {
                                            activeDescendant: L,
                                            selected: s,
                                            setSelected: o,
                                            itemToString: R
                                        },
                                        children: (0, i.jsx)(B, {
                                            ...l,
                                            style: {
                                                maxHeight: 46 * C
                                            },
                                            "aria-multiselectable": I,
                                            id: P,
                                            ref: b,
                                            className: a(h.list, f, {
                                                [h.scroller]: N
                                            }),
                                            sections: [y.length],
                                            sectionHeight: 0,
                                            rowHeight: 40,
                                            renderRow: e => {
                                                let {
                                                    row: t
                                                } = e;
                                                return y[t]
                                            },
                                            renderSection: () => null
                                        })
                                    }))
                                })]
                            })
                        }
                    })
                })
            }
            let R = r.createContext(null);

            function N(e) {
                var t;
                let {
                    value: n,
                    children: s,
                    disabled: o = !1,
                    selectedColor: c = T.STANDARD,
                    ...d
                } = e, {
                    activeDescendant: _,
                    selected: E,
                    setSelected: f,
                    itemToString: p
                } = r.useContext(A), I = p(n), m = _ === I, g = null !== (t = null == d ? void 0 : d.selected) && void 0 !== t ? t : E.has(n), C = (0, l.useListItem)(I);
                return (0, i.jsx)(u.Clickable, {
                    tag: "li",
                    id: I,
                    onClick: () => o ? null : f(n),
                    [S]: n,
                    className: a(h.item, {
                        [h.focused]: m,
                        [c]: g,
                        [h.disabled]: o
                    }),
                    ...C,
                    role: "option",
                    "aria-selected": g,
                    "aria-disabled": o,
                    children: (0, i.jsx)(R.Provider, {
                        value: n,
                        children: s
                    })
                })
            }
            N.Colors = T, N.Label = function(e) {
                let {
                    children: t
                } = e;
                return (0, i.jsx)("span", {
                    className: h.itemLabel,
                    children: t
                })
            }, N.Icon = function(e) {
                let {
                    children: t
                } = e;
                return (0, i.jsx)("span", {
                    className: h.itemCheckbox,
                    children: t
                })
            }, N.Checkbox = function(e) {
                let {
                    checked: t
                } = e, {
                    selected: n
                } = r.useContext(A), s = r.useContext(R);
                return (0, i.jsx)("span", {
                    className: h.itemCheckbox,
                    children: (0, i.jsx)(o.Checkbox, {
                        displayOnly: !0,
                        value: null != t ? t : null != s && n.has(s),
                        type: o.Checkbox.Types.INVERTED,
                        size: 20
                    })
                })
            }, N.Checkmark = function() {
                let {
                    selected: e
                } = r.useContext(A), t = r.useContext(R), n = e.has(t);
                return n ? (0, i.jsx)("span", {
                    className: h.itemCheckbox,
                    children: (0, i.jsx)(f.default, {
                        width: 20,
                        height: 20
                    })
                }) : null
            }
        },
        923237: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ComboboxPopout: function() {
                    return c
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("130969"),
                o = n("960486"),
                u = n("968689");

            function c(e) {
                let {
                    children: t,
                    placeholder: n,
                    value: s,
                    onChange: c,
                    onClose: d,
                    showScrollbar: _,
                    className: E,
                    multiSelect: f,
                    ...p
                } = e, h = r.useCallback(e => {
                    if (c(e), !f) null == d || d()
                }, [c, d, f]);
                return (0, i.jsx)(l.Dialog, {
                    className: a(u.container, E, {
                        [u.scroller]: _
                    }),
                    children: (0, i.jsx)(o.Combobox, {
                        ...p,
                        showScrollbar: _,
                        value: s,
                        multiSelect: f,
                        onChange: h,
                        placeholder: n,
                        children: t,
                        listClassName: u.list
                    })
                })
            }
        },
        322756: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DateInput: function() {
                    return E
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("227645"),
                l = n("130969"),
                o = n("442761"),
                u = n("201959"),
                c = n("943232"),
                d = n("103215"),
                _ = n("254180");

            function E(e) {
                let {
                    value: t,
                    onSelect: n,
                    dateFormat: r = "MMM D, YYYY",
                    minDate: E,
                    maxDate: f,
                    disabled: p = !1
                } = e;
                return (0, i.jsx)(o.Popout, {
                    renderPopout: function(e) {
                        let {
                            closePopout: r
                        } = e;
                        return (0, i.jsx)(l.Dialog, {
                            children: (0, i.jsx)(u.default, {
                                minDate: E,
                                maxDate: f,
                                value: t,
                                onSelect: e => {
                                    n(e), r()
                                },
                                calendarClassName: d.calendarContainer,
                                onClickOutside: r,
                                autoFocus: !0
                            })
                        })
                    },
                    position: "bottom",
                    children: e => {
                        let {
                            onClick: n,
                            ...l
                        } = e;
                        return (0, i.jsx)(a.Clickable, {
                            ...l,
                            className: s(_.inputDefault, d.container, {
                                [_.disabled]: p,
                                [d.disabled]: p
                            }),
                            onClick: p ? void 0 : n,
                            "aria-disabled": p,
                            children: (0, i.jsxs)("div", {
                                className: d.content,
                                children: [(0, i.jsx)("div", {
                                    className: d.text,
                                    children: null == t ? void 0 : t.format(r)
                                }), (0, i.jsx)(c.default, {
                                    className: d.icon
                                })]
                            })
                        })
                    }
                })
            }
        },
        709749: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                AnimatedDots: function() {
                    return E
                },
                Dots: function() {
                    return f
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("623829"),
                o = n("675173");

            function u() {
                return document.hasFocus()
            }
            let c = {
                    config: {
                        friction: 50,
                        tension: 900,
                        mass: 1
                    },
                    unique: !0,
                    initial: {
                        dotPosition: 1
                    },
                    from: {
                        dotPosition: 0
                    },
                    enter: {
                        dotPosition: 1
                    },
                    leave: {
                        dotPosition: 0
                    }
                },
                d = {
                    config: {
                        duration: 2400
                    },
                    from: {
                        dotCycle: 2.8
                    },
                    reset: !0
                };

            function _(e) {
                let t = e % 2;
                return t > 1 ? 1 - (t - 1) : t
            }
            let E = r.memo(function(e) {
                    let {
                        dotRadius: t,
                        dotPosition: n,
                        fill: s = "currentColor",
                        spacing: a = 2.5
                    } = e, o = r.useRef(u()), c = r.useRef(!0);
                    r.useEffect(() => () => void(c.current = !1), []);
                    let [E] = (0, l.useSpring)(() => ({
                        ...d,
                        to: async e => {
                            let t = 2.8;
                            for (; c.current;) {
                                ;
                                o.current = u(), o.current ? (t += 4, await e({
                                    dotCycle: t,
                                    immediate: !1
                                })) : 2.8 !== t ? (t = 2.8, await e({
                                    dotCycle: t,
                                    immediate: !0
                                })) : await new Promise(e => setTimeout(e, 1e3))
                            }
                        }
                    })), f = (6 * t + t / 4 * 2) / 2;
                    return (0, i.jsx)(i.Fragment, {
                        children: [0, 1, 2].map(e => {
                            let r = .25 * e,
                                u = t + e * (t * a);
                            return (0, i.jsx)(l.animated.circle, {
                                cx: n ? n.to([0, 1], [f, u]) : u,
                                cy: t,
                                r: E.dotCycle.to(e => _(e - r)).to([0, .4, .8, 1], [.8 * t, .8 * t, t, t]).to(e => o.current ? e : t),
                                fill: s,
                                style: {
                                    opacity: E.dotCycle.to(e => _(e - r)).to([0, .4, .8, 1], [.3, .3, 1, 1]).to(e => o.current ? e : 1)
                                }
                            }, e)
                        })
                    })
                }),
                f = r.memo(r.forwardRef(function(e, t) {
                    let {
                        dotRadius: n,
                        x: r,
                        y: s,
                        hide: d = !1,
                        themed: _ = !1,
                        className: f
                    } = e, p = (0, l.useTransition)(d, {
                        ...c,
                        key: e => e ? "true" : "false",
                        immediate: !u()
                    });
                    return p((e, u, c) => {
                        let {
                            dotPosition: d
                        } = e, {
                            key: p
                        } = c;
                        return u ? null : (0, i.jsx)("svg", {
                            ref: t,
                            x: r,
                            y: s,
                            width: 6 * n + n / 2 * 2,
                            height: 2 * n,
                            className: a(f, o.dots, _ ? o.themed : null),
                            children: (0, i.jsx)(l.animated.g, {
                                style: {
                                    opacity: d.to(e => Math.min(1, Math.max(e, 0)))
                                },
                                children: (0, i.jsx)(E, {
                                    dotRadius: n,
                                    dotPosition: d
                                })
                            })
                        }, p)
                    })
                }))
        },
        990749: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DnDKeyboardHelpBar: function() {
                    return E
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("623829"),
                a = n("498225"),
                l = n("533979"),
                o = n("577776"),
                u = n("206230"),
                c = n("57406"),
                d = n("782340"),
                _ = n("599854");

            function E() {
                let e = [{
                        keybinds: ["Spacebar", "Enter"],
                        name: d.default.Messages.DND_OPERATION_LABEL_DROP
                    }, {
                        keybinds: ["up", "down"],
                        name: d.default.Messages.DND_OPERATION_LABEL_MOVE
                    }, {
                        keybinds: ["ESC"],
                        name: d.default.Messages.DND_OPERATION_LABEL_CANCEL
                    }],
                    t = (0, a.useStateFromStores)([u.default], () => u.default.useReducedMotion),
                    n = (0, c.useDndMode)(),
                    E = (0, s.useTransition)(n, {
                        enter: {
                            from: {
                                opacity: 0,
                                y: t ? 0 : 80
                            },
                            to: {
                                opacity: 1,
                                y: 0
                            }
                        },
                        leave: {
                            opacity: 0,
                            y: t ? 0 : 80
                        },
                        config: s.config.stiff
                    });
                return E((t, n) => n ? (0, i.jsx)("div", {
                    className: _.positioner,
                    children: (0, i.jsx)(s.animated.div, {
                        className: _.container,
                        style: t,
                        children: e.map((t, n) => {
                            let {
                                keybinds: s,
                                name: a
                            } = t;
                            return (0, i.jsxs)(r.Fragment, {
                                children: [(0, i.jsx)(o.Text, {
                                    variant: "text-md/semibold",
                                    className: _.bindName,
                                    children: a
                                }), s.map(e => (0, i.jsx)(l.KeyCombo, {
                                    shortcut: e,
                                    className: _.shortcut
                                }, e)), n < e.length - 1 ? (0, i.jsx)("span", {
                                    className: _.separator
                                }) : null]
                            }, a)
                        })
                    })
                }) : null)
            }
        },
        57406: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useDndStore: function() {
                    return r
                },
                toggleDndMode: function() {
                    return s
                },
                useDndMode: function() {
                    return a
                },
                isInDndMode: function() {
                    return l
                }
            });
            var i = n("710835");
            let r = (0, i.default)(e => ({
                inDndMode: !1
            }));

            function s(e) {
                r.setState({
                    inDndMode: e
                })
            }

            function a() {
                return r(e => e.inDndMode)
            }

            function l() {
                return r.getState().inDndMode
            }
        },
        187641: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DnDProvider: function() {
                    return _
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("552355"),
                s = n("308969"),
                a = n("819855"),
                l = n("57406"),
                o = n("999888");
            let u = (0, s.createTransition)("keydown", e => !!(0, o.isDragTrigger)(e) && (e.preventDefault(), !0)),
                c = (0, s.createTransition)("mousedown", e => -1 === e.type.indexOf("touch") && -1 !== e.type.indexOf("mouse") && ((0, l.toggleDndMode)(!1), !0)),
                d = {
                    backends: [{
                        id: "html5",
                        backend: r.HTML5Backend,
                        transition: c
                    }, {
                        id: "keyboard",
                        backend: o.default,
                        context: {
                            window,
                            document
                        },
                        options: {
                            onDndModeChanged: l.toggleDndMode,
                            announcer: a.AccessibilityAnnouncer
                        },
                        preview: !0,
                        transition: u
                    }]
                };

            function _(e) {
                let {
                    children: t
                } = e;
                return (0, i.jsx)(s.DndProvider, {
                    options: d,
                    children: t
                })
            }
        },
        263293: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("782340");
            class r {
                announce(e, t, n) {
                    this.announcer.announce(e, t, n)
                }
                announceDrag(e, t) {
                    if (null == e) return;
                    let n = this.getName(e, t);
                    this.announce(i.default.Messages.DND_ITEM_PICKED_UP.format({
                        itemName: n
                    }))
                }
                announceHover(e, t) {
                    null != e && this.announce(this.getName(e, t))
                }
                announceDrop() {
                    this.announce(i.default.Messages.DND_ITEM_DROPPED)
                }
                announceCancel() {
                    this.announce(i.default.Messages.DND_DRAG_CANCELED)
                }
                clear() {
                    this.announcer.clearAnnouncements()
                }
                getName(e, t) {
                    var n, i;
                    return null !== (i = null !== (n = e.getAttribute("data-dnd-name")) && void 0 !== n ? n : e.getAttribute("aria-label")) && void 0 !== i ? i : t
                }
                constructor(e) {
                    if (null != e) this.announcer = e;
                    else {
                        let e = n("837877");
                        this.announcer = {
                            announce: e.announce,
                            clearAnnouncements: e.clearAnnouncer
                        }
                    }
                }
            }
        },
        141094: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            class i {
                createDragPreview(e) {
                    if (null == this.container || null == this.svg || null == this.foreignObject) return;
                    let {
                        width: t,
                        height: n
                    } = e.getBoundingClientRect();
                    this.svg.setAttribute("viewBox", "0 0 ".concat(t, " ").concat(n)), this.svg.setAttribute("width", "".concat(t)), this.svg.setAttribute("height", "".concat(n)), this.foreignObject.setAttribute("x", "0"), this.foreignObject.setAttribute("y", "0"), this.foreignObject.setAttribute("width", "".concat(t)), this.foreignObject.setAttribute("height", "".concat(n));
                    let i = e.cloneNode(!0);
                    this.foreignObject.appendChild(i)
                }
                render(e) {
                    let t = this.container;
                    if (null == t) return;
                    let n = e.getSourceClientOffset();
                    if (null != n) e.isDragging() && (t.style.position = "fixed", t.style.left = "".concat(n.x + 30, "px"), t.style.top = "".concat(n.y + 15, "px"))
                }
                clear() {
                    null != this.foreignObject && (this.foreignObject.innerHTML = "")
                }
                constructor(e) {
                    this.container = null == e ? void 0 : e.createElement("div");
                    let t = this.svg = null == e ? void 0 : e.createElement("svg");
                    null != t && (t.style.contain = "paint"), this.foreignObject = null == e ? void 0 : e.createElement("foreignObject"), null != this.container && null != this.svg && null != this.foreignObject && (this.container.className = "drag-previewer", this.container.style.cssText = "z-index: 1000; filter: drop-shadow(0 0 0 var(--background-floating)) drop-shadow(var(--elevation-high))", this.svg.appendChild(this.foreignObject), this.container.appendChild(this.svg), null == e || e.body.appendChild(this.container))
                }
            }
        },
        702843: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DropTargetNavigator: function() {
                    return a
                }
            });
            var i, r, s = n("608230");
            (i = r || (r = {})).UP = "ArrowUp", i.DOWN = "ArrowDown", i.DROP = "Shift", i.CANCEL = "Escape";
            class a {
                disconnect() {
                    window.removeEventListener("keydown", this.handleDraggedElementKeyDown, {
                        capture: !0
                    })
                }
                hoverNode(e) {
                    var t;
                    let n = null === (t = Array.from(this.targetNodes.entries()).find(t => {
                        let [n, i] = t;
                        return e === i
                    })) || void 0 === t ? void 0 : t[0];
                    null != n && (this.actions.hover([n], {
                        clientOffset: function(e) {
                            if (null == e) return {
                                x: 0,
                                y: 0
                            };
                            let t = e.nodeType === Node.ELEMENT_NODE ? e : e.parentElement;
                            if (null == t) return {
                                x: 0,
                                y: 0
                            };
                            let {
                                top: n,
                                left: i
                            } = t.getBoundingClientRect();
                            return {
                                x: i,
                                y: n
                            }
                        }(e)
                    }), this.currentHoveredNode = e, this.previewer.render(this.monitor), this.announcer.announceHover(e, n), null == e || e.focus())
                }
                getNextDropTarget() {
                    var e;
                    return this.focusManager.getNextFocusableElement({
                        wrap: !1,
                        from: null !== (e = this.currentHoveredNode) && void 0 !== e ? e : void 0
                    })
                }
                getPreviousDropTarget() {
                    var e;
                    return this.focusManager.getPreviousFocusableElement({
                        wrap: !1,
                        from: null !== (e = this.currentHoveredNode) && void 0 !== e ? e : void 0
                    })
                }
                getViableTargets(e) {
                    let t = this.getAllowedTargets(e);
                    return t.sort((e, t) => {
                        if (e === t) return 0;
                        let n = e.compareDocumentPosition(t);
                        return (n & (Node.DOCUMENT_POSITION_FOLLOWING | n & Node.DOCUMENT_POSITION_CONTAINED_BY)) != 0 ? -1 : (n & (Node.DOCUMENT_POSITION_PRECEDING | n & Node.DOCUMENT_POSITION_CONTAINS)) != 0 ? 1 : 0
                    })
                }
                getAllowedTargets(e) {
                    let t = this.monitor.getItemType();
                    return null == t ? Array.from(e.values()) : Array.from(e).reduce((e, t) => {
                        let [n, i] = t;
                        return this.manager.getMonitor().canDropOnTarget(n) && e.push(i), e
                    }, [])
                }
                constructor(e, t, n, i, a) {
                    this.targetNodes = t, this.manager = n, this.previewer = i, this.announcer = a, this.handleDraggedElementKeyDown = async e => {
                        switch (e.key) {
                            case r.UP:
                                e.preventDefault(), e.stopPropagation(), this.hoverNode(await this.getPreviousDropTarget());
                                return;
                            case r.DOWN:
                                e.preventDefault(), e.stopPropagation(), this.hoverNode(await this.getNextDropTarget())
                        }
                    }, this.currentHoveredNode = e, this.focusManager = (0, s.createFocusManager)({
                        getFocusableElements: () => this.getViableTargets(t),
                        getActiveElement: () => e.ownerDocument.activeElement
                    }), this.actions = n.getActions(), this.monitor = n.getMonitor(), window.addEventListener("keydown", this.handleDraggedElementKeyDown, {
                        capture: !0
                    })
                }
            }
        },
        999888: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isDragTrigger: function() {
                    return u
                },
                default: function() {
                    return d
                }
            });
            var i = n("263293"),
                r = n("141094"),
                s = n("702843");
            let a = {
                DROP: [" ", "Enter"],
                CANCEL_DRAG: ["Escape"]
            };

            function l(e) {
                e.preventDefault(), e.stopImmediatePropagation()
            }

            function o(e, t) {
                return t.includes(e.key)
            }

            function u(e) {
                var t;
                let n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                return !!n && !1 === e.isTrusted || (null === (t = e.key) || void 0 === t ? void 0 : t.toLowerCase()) === "d" && (e.metaKey || e.ctrlKey) && !e.altKey
            }
            class c {
                setup() {
                    var e;
                    if (c.isSetUp) throw Error("Cannot have two Keyboard backends at the same time.");
                    c.isSetUp = !0, this._handlingFirstEvent = !0, null === (e = this.context.window) || void 0 === e || e.addEventListener("keydown", this.handleGlobalKeyDown, {
                        capture: !0
                    })
                }
                teardown() {
                    var e;
                    c.isSetUp = !1, null === (e = this.context.window) || void 0 === e || e.removeEventListener("keydown", this.handleGlobalKeyDown, {
                        capture: !0
                    }), this.endDrag()
                }
                setDndMode(e) {
                    var t;
                    null === (t = this.options) || void 0 === t || t.onDndModeChanged(e)
                }
                profile() {
                    return {
                        sourcePreviewNodes: this.sourcePreviewNodes.size,
                        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,
                        sourceNodes: this.sourceNodes.size
                    }
                }
                connectDragSource(e, t) {
                    let n = this.handleDragStart.bind(this, e);
                    return this.sourceNodes.set(e, t), t.addEventListener("keydown", n), () => {
                        this.sourceNodes.delete(e), t.removeEventListener("keydown", n)
                    }
                }
                connectDragPreview(e, t, n) {
                    return this.sourcePreviewNodeOptions.set(e, n), this.sourcePreviewNodes.set(e, t), () => {
                        this.sourcePreviewNodes.delete(e), this.sourcePreviewNodeOptions.delete(e)
                    }
                }
                connectDropTarget(e, t) {
                    return this.targetNodes.set(e, t), t.addEventListener("keydown", this.handleDrop), t.tabIndex = Math.max(-1, t.tabIndex), () => {
                        this.targetNodes.delete(e), t.removeEventListener("keydown", this.handleDrop)
                    }
                }
                endDrag(e) {
                    var t;
                    null != e && l(e), null === (t = this._navigator) || void 0 === t || t.disconnect(), this._previewer.clear(), this.monitor.isDragging() && this.actions.endDrag(), this.setDndMode(!1)
                }
                constructor(e, t, n) {
                    this._handlingFirstEvent = !1, this.handleGlobalKeyDown = e => {
                        this.monitor.isDragging() && o(e, a.CANCEL_DRAG) && (this.endDrag(e), this._announcer.announceCancel())
                    }, this.getSourceClientOffset = e => (function(e) {
                        if (null == e) return {
                            x: 0,
                            y: 0
                        };
                        let t = e.nodeType === Node.ELEMENT_NODE ? e : e.parentElement;
                        if (null == t) return {
                            x: 0,
                            y: 0
                        };
                        let {
                            top: n,
                            left: i
                        } = t.getBoundingClientRect();
                        return {
                            x: i,
                            y: n
                        }
                    })(this.sourceNodes.get(e)), this.handleDragStart = (e, t) => {
                        var n;
                        if (!u(t, this._handlingFirstEvent)) return;
                        if (this._handlingFirstEvent = !1, !this.monitor.canDragSource(e)) return;
                        if (this.monitor.isDragging()) {
                            this.actions.publishDragSource();
                            return
                        }
                        l(t);
                        let i = this.sourceNodes.get(e);
                        null != i && (this._navigator = new s.DropTargetNavigator(i, this.targetNodes, this.manager, this._previewer, this._announcer), this._previewer.createDragPreview(null !== (n = this.sourcePreviewNodes.get(e)) && void 0 !== n ? n : i), this.actions.beginDrag([e], {
                            clientOffset: this.getSourceClientOffset(e),
                            getSourceClientOffset: this.getSourceClientOffset,
                            publishSource: !1
                        }), this._previewer.render(this.monitor), this.setDndMode(!0), this._announcer.announceDrag(i, e))
                    }, this.handleDrop = e => {
                        o(e, a.DROP) && (this.actions.drop(), this.endDrag(e), this._announcer.announceDrop())
                    }, this.manager = e, this.actions = e.getActions(), this.monitor = e.getMonitor(), this.context = t, this.options = n, this.sourceNodes = new Map, this.sourcePreviewNodes = new Map, this.sourcePreviewNodeOptions = new Map, this.targetNodes = new Map, this._previewer = new r.default(t.document), this._announcer = new i.default(null == n ? void 0 : n.announcer)
                }
            }
            var d = (e, t, n) => new c(e, t, n)
        },
        633661: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useFocusBlock: function() {
                    return a
                },
                FocusBlock: function() {
                    return l
                }
            });
            var i = n("920040"),
                r = n("773670");
            let s = 0;

            function a(e, t) {
                let [n] = r.useState(() => s++), i = "".concat("data-focus-blocked", "-").concat(n);
                r.useLayoutEffect(() => {
                    if (t) {
                        let t = e.current;
                        if (null != t) {
                            var n;
                            let e = (n = t, document.createTreeWalker(n, NodeFilter.SHOW_ELEMENT, {
                                    acceptNode: e => e.tabIndex >= 0 && !e.disabled ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP
                                })),
                                r = e.currentNode;
                            for (; null !== r;) {
                                let t = r,
                                    n = t.tabIndex;
                                t.tabIndex = -1, t.setAttribute(i, String(n)), r = e.nextNode()
                            }
                            return () => {
                                t.querySelectorAll("[".concat(i, "]")).forEach(e => {
                                    let t = e.getAttribute(i);
                                    if (null != t) {
                                        let n = parseInt(t, 10);
                                        e.tabIndex = n
                                    }
                                })
                            }
                        }
                    }
                }, [t])
            }

            function l(e) {
                let {
                    children: t,
                    className: n,
                    enabled: s = !0
                } = e, l = r.useRef(null);
                return a(l, s), (0, i.jsx)("div", {
                    ref: l,
                    className: n,
                    children: t
                })
            }
        },
        690977: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useFocusJumpSection: function() {
                    return c
                },
                FocusJumpSection: function() {
                    return d
                },
                useFocusJumpSectionManager: function() {
                    return E
                }
            }), n("920040");
            var i = n("773670"),
                r = n("608230"),
                s = n("791776"),
                a = n("894282");
            let l = "data-jump-section",
                o = "global",
                u = i.createContext(o);

            function c() {
                let e = i.useContext(u);
                return i.useMemo(() => ({
                    [l]: e
                }), [e])
            }

            function d(e) {
                let t = c();
                return e.children(t)
            }
            async function _(e) {
                var t, n, i, u;
                if (e.key !== a.FOCUS_SECTION_JUMP_KEY) return;
                let c = (0, s.eventOwnerDocument)(e);
                if (null == c) return;
                let d = null,
                    _ = null,
                    E = e.target;
                for (; null != E;) {
                    if (E.hasAttribute(l)) {
                        d = E.getAttribute(l), _ = E;
                        break
                    }
                    E = E.parentElement
                }
                let f = (0, r.createFocusManager)({
                    getFocusableElements: () => Array.from(c.querySelectorAll("[".concat(l, '="').concat(null != d ? d : o, '"]'))),
                    getActiveElement: () => c.activeElement
                });
                if ((null === (t = (0, s.eventOwnerDocument)(e)) || void 0 === t ? void 0 : t.activeElement) == null || null == _) {
                    null === (n = f.getFirstFocusableElement()) || void 0 === n || n.focus();
                    return
                }
                e.getModifierState("Shift") ? null === (i = await f.getPreviousFocusableElement({
                    wrap: !0,
                    from: _
                })) || void 0 === i || i.focus() : null === (u = await f.getNextFocusableElement({
                    wrap: !0,
                    from: _
                })) || void 0 === u || u.focus()
            }

            function E(e) {
                i.useEffect(() => {
                    if (e) return window.addEventListener("keydown", _), () => {
                        window.removeEventListener("keydown", _)
                    }
                }, [e])
            }
        },
        688817: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FocusRingManager: function() {
                    return s
                }
            });
            var i = n("514559"),
                r = n("206230");
            n("891078");
            let s = {
                init() {
                    r.default.addChangeListener(() => {
                        r.default.keyboardModeEnabled ? (i.FocusRingManager.setRingsEnabled(!0), i.FocusRingManager.enableAnimationTracking()) : (i.FocusRingManager.setRingsEnabled(!1), i.FocusRingManager.disableAnimationTracking())
                    })
                }
            }
        },
        516826: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormContext: function() {
                    return s
                },
                useFormContext: function() {
                    return a
                },
                FormContextProvider: function() {
                    return l
                }
            });
            var i = n("920040"),
                r = n("773670");
            let s = r.createContext({
                titleId: void 0,
                errorId: void 0,
                error: void 0
            });

            function a() {
                return r.useContext(s)
            }

            function l(e) {
                let {
                    children: t,
                    ...n
                } = e;
                return (0, i.jsx)(s.Provider, {
                    value: n,
                    children: t
                })
            }
        },
        370373: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormDivider: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("89298");

            function l(e) {
                let {
                    className: t,
                    style: n
                } = e;
                return (0, i.jsx)("div", {
                    className: s(a.divider, t),
                    style: n
                })
            }
        },
        16256: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormErrorBlockColors: function() {
                    return d
                },
                FormErrorBlock: function() {
                    return _
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("945330"),
                u = n("423487"),
                c = n("924854");
            let d = {
                    RED: c.backgroundRed,
                    BACKGROUND_TERTIARY: c.backgroundTertiary,
                    BACKGROUND_ACCENT: c.backgroundAccent
                },
                _ = r.forwardRef(function(e, t) {
                    let {
                        role: n,
                        children: r,
                        className: s,
                        onDismiss: _,
                        backgroundColor: E = d.RED,
                        icon: f = u.default,
                        iconClassName: p
                    } = e;
                    return (0, i.jsxs)("div", {
                        className: a(c.error, s, E),
                        ref: t,
                        children: [(0, i.jsx)(f, {
                            className: a(c.icon, p)
                        }), (0, i.jsx)("div", {
                            role: n,
                            className: c.text,
                            children: r
                        }), null != _ ? (0, i.jsx)(l.Clickable, {
                            onClick: _,
                            className: c.errorClose,
                            children: (0, i.jsx)(o.default, {
                                className: c.errorCloseIcon
                            })
                        }) : null]
                    })
                })
        },
        298742: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormItem: function() {
                    return l
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("516826"),
                a = n("818810");
            let l = r.forwardRef(function(e, t) {
                var n, l;
                let {
                    children: o,
                    disabled: u = !1,
                    className: c,
                    titleClassName: d,
                    tag: _ = "h5",
                    required: E = !1,
                    style: f,
                    title: p,
                    error: h,
                    ...S
                } = e, T = r.useId(), I = r.useId(), m = null !== (n = S.titleId) && void 0 !== n ? n : T, g = null != h ? null !== (l = S.errorId) && void 0 !== l ? l : I : void 0;
                return (0, i.jsxs)("div", {
                    ref: t,
                    className: null != c ? c : void 0,
                    style: null != f ? f : void 0,
                    children: [null != p || null != h ? (0, i.jsx)(a.FormTitle, {
                        tag: _,
                        disabled: u,
                        required: E,
                        error: h,
                        className: d,
                        id: m,
                        errorId: g,
                        ...S,
                        children: p
                    }) : null, (0, i.jsx)(s.FormContextProvider, {
                        titleId: m,
                        errorId: g,
                        error: null != h ? h : void 0,
                        children: o
                    })]
                })
            })
        },
        603616: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormLabel: function() {
                    return c
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("741662"),
                l = n("258078"),
                o = n("782340"),
                u = n("262860");

            function c(e) {
                let {
                    children: t,
                    className: n,
                    disabled: r,
                    required: c = !1,
                    ...d
                } = e;
                return (0, i.jsxs)(l.default, {
                    tag: "label",
                    color: l.default.Colors.HEADER_SECONDARY,
                    className: s(u.label, n, {
                        [u.defaultMargin]: null == n,
                        [u.disabled]: r
                    }),
                    ...d,
                    children: [t, c && (0, i.jsxs)(i.Fragment, {
                        children: [(0, i.jsx)("span", {
                            className: u.required,
                            "aria-hidden": !0,
                            children: "*"
                        }), (0, i.jsx)(a.HiddenVisually, {
                            children: o.default.Messages.REQUIRED
                        })]
                    })]
                })
            }
        },
        135411: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormNoticeTypes: function() {
                    return d
                },
                FormNoticeImagePositions: function() {
                    return _
                },
                FormNotice: function() {
                    return E
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("659397"),
                l = n("145131"),
                o = n("329272"),
                u = n("818810"),
                c = n("738828");
            let d = a.Card.Types,
                _ = {
                    LEFT: "left",
                    RIGHT: "right"
                };

            function E(e) {
                let t, n, {
                        type: r = a.Card.Types.DANGER,
                        imageData: d,
                        button: E,
                        className: f,
                        iconClassName: p,
                        title: h,
                        body: S,
                        style: T,
                        align: I = l.default.Align.START
                    } = e,
                    m = l.default.Direction.HORIZONTAL;
                if (null != d) {
                    let {
                        position: e,
                        ...n
                    } = d;
                    t = (0, i.jsx)(l.default.Child, {
                        grow: 0,
                        shrink: 0,
                        children: (0, i.jsx)("img", {
                            alt: "",
                            className: s(c.icon, p),
                            ...n
                        })
                    }), e === _.RIGHT && (m = l.default.Direction.HORIZONTAL_REVERSE)
                } else null != E && (n = E);
                let g = !0;
                return r === a.Card.Types.PRIMARY && (g = !1), (0, i.jsx)(a.Card, {
                    className: s(c.formNotice, f),
                    type: r,
                    style: T,
                    children: (0, i.jsxs)(l.default, {
                        direction: m,
                        align: I,
                        children: [t, (0, i.jsxs)(l.default.Child, {
                            children: [null != h && "" !== h ? (0, i.jsx)(u.FormTitle, {
                                tag: u.FormTitleTags.H5,
                                className: s(c.formNoticeTitle, {
                                    [c.whiteText]: g
                                }),
                                faded: !0,
                                children: h
                            }) : null, (0, i.jsx)(o.FormText, {
                                className: s(c.formNoticeBody, {
                                    [c.whiteText]: g
                                }),
                                children: S
                            }), n]
                        })]
                    })
                })
            }
            E.Types = a.Card.Types
        },
        392098: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormSection: function() {
                    return u
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("860226"),
                a = n("516826"),
                l = n("818810"),
                o = n("101938");

            function u(e) {
                var t;
                let {
                    children: n,
                    className: u,
                    titleClassName: c,
                    title: d,
                    icon: _,
                    disabled: E,
                    htmlFor: f,
                    tag: p = "h5",
                    ...h
                } = e, S = r.useId(), T = null !== (t = h.titleId) && void 0 !== t ? t : S;
                return null != d ? (0, i.jsx)("div", {
                    className: u,
                    children: (0, i.jsx)(s.HeadingLevel, {
                        component: (0, i.jsxs)("div", {
                            className: o.sectionTitle,
                            children: [_, null != d ? (0, i.jsx)(l.FormTitle, {
                                tag: p,
                                id: T,
                                htmlFor: f,
                                disabled: E,
                                className: c,
                                children: d
                            }) : null]
                        }),
                        children: (0, i.jsx)("div", {
                            className: o.children,
                            children: (0, i.jsx)(a.FormContextProvider, {
                                titleId: T,
                                children: n
                            })
                        })
                    })
                }) : (0, i.jsx)("div", {
                    className: u,
                    children: n
                })
            }
        },
        266079: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormSwitch: function() {
                    return E
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("718776"),
                o = n("980672"),
                u = n("414055"),
                c = n("370373"),
                d = n("329272"),
                _ = n("488337");

            function E(e) {
                let {
                    value: t,
                    disabled: n = !1,
                    hideBorder: s = !1,
                    tooltipNote: E,
                    onChange: f,
                    className: p,
                    style: h,
                    note: S,
                    children: T
                } = e, I = r.useRef(null), m = r.useRef(null), g = r.useId(), A = (0, i.jsx)(o.Switch, {
                    id: g,
                    checked: t,
                    onChange: f,
                    disabled: n,
                    focusProps: {
                        enabled: !1
                    },
                    innerRef: I
                });
                return (0, i.jsxs)("div", {
                    style: h,
                    className: a(_.container, p, {
                        [_.disabled]: n
                    }),
                    children: [(0, i.jsx)(l.FocusRing, {
                        within: !0,
                        offset: -4,
                        focusTarget: I,
                        ringTarget: m,
                        children: (0, i.jsxs)("div", {
                            className: _.labelRow,
                            ref: m,
                            children: [(0, i.jsx)("label", {
                                htmlFor: g,
                                className: _.title,
                                children: T
                            }), (0, i.jsx)("div", {
                                className: _.control,
                                children: null != E ? (0, i.jsx)(u.TooltipContainer, {
                                    text: E,
                                    children: A
                                }) : A
                            })]
                        })
                    }), null != S && (0, i.jsx)("div", {
                        className: _.note,
                        children: (0, i.jsx)(d.FormText, {
                            disabled: n,
                            type: d.FormTextTypes.DESCRIPTION,
                            children: S
                        })
                    }), !s && (0, i.jsx)(c.FormDivider, {
                        className: _.dividerDefault
                    })]
                })
            }
        },
        329272: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormTextTypes: function() {
                    return o
                },
                FormText: function() {
                    return c
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("258078"),
                l = n("313920");
            let o = {
                    DEFAULT: "default",
                    INPUT_PLACEHOLDER: "placeholder",
                    DESCRIPTION: "description",
                    LABEL_BOLD: "labelBold",
                    LABEL_SELECTED: "labelSelected",
                    LABEL_DESCRIPTOR: "labelDescriptor",
                    ERROR: "error",
                    SUCCESS: "success"
                },
                u = {
                    DEFAULT: "modeDefault",
                    DISABLED: "modeDisabled",
                    SELECTABLE: "modeSelectable"
                };

            function c(e) {
                let {
                    type: t = o.DEFAULT,
                    className: n,
                    disabled: r,
                    selectable: c,
                    children: d,
                    style: _,
                    ...E
                } = e, f = u.DEFAULT;
                return r ? f = u.DISABLED : c && (f = u.SELECTABLE), (0, i.jsx)(a.default, {
                    className: s(l[t], n, l[f]),
                    style: _,
                    ...E,
                    children: d
                })
            }
            c.Types = o
        },
        818810: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FormTitleTags: function() {
                    return r
                },
                FormTitle: function() {
                    return c
                }
            });
            var i, r, s = n("920040");
            n("773670");
            var a = n("575482"),
                l = n.n(a),
                o = n("860226"),
                u = n("300923");

            function c(e) {
                let t, {
                    tag: n = "h5",
                    children: i,
                    className: a,
                    faded: c,
                    disabled: d,
                    required: _ = !1,
                    error: E,
                    errorId: f,
                    ...p
                } = e;
                switch (n) {
                    case r.LEGEND:
                    case r.LABEL:
                        t = n;
                        break;
                    default:
                        t = o.H
                }
                return (0, s.jsxs)(t, {
                    className: l(u[n], n !== r.H5 ? u.defaultColor : null, a, {
                        [u["defaultMargin".concat(n)]]: null == a,
                        [u.faded]: c,
                        [u.disabled]: d,
                        [u.error]: null != E
                    }),
                    ...p,
                    children: [i, _ && null == E ? (0, s.jsx)("span", {
                        className: u.required,
                        children: "*"
                    }) : null, null != E ? (0, s.jsxs)("span", {
                        id: f,
                        className: u.errorMessage,
                        children: [null != i ? (0, s.jsx)("span", {
                            className: u.errorSeparator,
                            children: "-"
                        }) : null, E]
                    }) : null]
                })
            }(i = r || (r = {})).H1 = "h1", i.H2 = "h2", i.H3 = "h3", i.H4 = "h4", i.H5 = "h5", i.LABEL = "label", i.LEGEND = "legend"
        },
        605451: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Heading: function() {
                    return u
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("577776"),
                l = n("860226"),
                o = n("876641");
            let u = e => {
                let {
                    variant: t,
                    className: n,
                    ...r
                } = e, u = (0, l.usePrivateHeadingLevel)(), c = "h".concat(Math.min(u, 6));
                return (0, i.jsx)(a.Text, {
                    variant: t,
                    tag: c,
                    className: s(o.defaultColor, n),
                    ...u > 6 ? {
                        "data-excessive-heading-level": u
                    } : {},
                    ...r
                })
            }
        },
        741662: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                HiddenVisually: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("453771");

            function l(e) {
                let {
                    id: t,
                    tag: n = "span",
                    showOnFocus: r,
                    children: l
                } = e;
                return (0, i.jsx)(n, {
                    id: t,
                    className: s({
                        [a.hiddenVisually]: !r,
                        [a.showOnFocus]: r
                    }),
                    children: l
                })
            }
        },
        619550: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-09_redesigned_icons_experiment",
                label: "Redesigned icons experiment",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Redesigned icons enabled",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        469563: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RedesignIconContextProvider: function() {
                    return o
                },
                useRedesignIconContext: function() {
                    return u
                },
                replaceIcon: function() {
                    return c
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("619550"),
                a = n("890503");
            let l = r.createContext({
                enabled: !1,
                highlight: !1
            });

            function o(e) {
                let {
                    children: t,
                    overwriteValue: n
                } = e, {
                    enabled: o
                } = s.default.useExperiment({
                    location: "web redesign icon context"
                }), u = (0, a.default)("highlight_redesigned_icons"), c = r.useMemo(() => ({
                    enabled: o,
                    highlight: u
                }), [o, u]);
                return (0, i.jsx)(l.Provider, {
                    value: null != n ? n : c,
                    children: t
                })
            }

            function u() {
                return r.useContext(l)
            }

            function c(e, t) {
                let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                    r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {
                        size: 24
                    };
                return function(s) {
                    let {
                        enabled: a,
                        highlight: l
                    } = u();
                    if (!a) return (0, i.jsx)(e, {
                        ...s
                    });
                    {
                        var o, c;
                        let e = {
                            ...s
                        };
                        for (let [t, i] of Object.entries(n = null != n ? n : {
                                foreground: "colorClass",
                                color: "color"
                            })) {
                            let n = s[t];
                            if (null == n && "color" === t && (n = l ? "yellow" : "currentColor"), "remove" === i) {
                                delete e[t];
                                continue
                            }
                            e[i] = n
                        }
                        return null !== (o = e.width) && void 0 !== o || (e.width = r.size), null !== (c = e.height) && void 0 !== c || (e.height = r.size), (0, i.jsx)(t, {
                            ...e
                        })
                    }
                }
            }
        },
        867603: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CalendarIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M7 1a1 1 0 0 1 1 1v.75c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25V2a1 1 0 1 1 2 0v.75c0 .138.112.25.25.25H19a3 3 0 0 1 3 3 1 1 0 0 1-1 1H3a1 1 0 0 1-1-1 3 3 0 0 1 3-3h.75A.25.25 0 0 0 6 2.75V2a1 1 0 0 1 1-1Zm-5 9a1 1 0 0 1 1-1h18a1 1 0 0 1 1 1v9a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3v-9Zm3.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        269096: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CheckmarkLargeIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M21.707 5.293a1 1 0 0 1 0 1.414l-12 12a1 1 0 0 1-1.414 0l-6-6a1 1 0 1 1 1.414-1.414L9 16.586 20.293 5.293a1 1 0 0 1 1.414 0Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        384737: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ChevronSmallDownIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        stroke: "string" == typeof a ? a : a.css,
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "2",
                        d: "m6 10 6 6 6-6",
                        className: l
                    })
                })
            }
        },
        448052: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ChevronSmallLeftIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        stroke: "string" == typeof a ? a : a.css,
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "2",
                        d: "m14 6-6 6 6 6",
                        className: l
                    })
                })
            }
        },
        748802: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ChevronSmallRightIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        stroke: "string" == typeof a ? a : a.css,
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "2",
                        d: "m10 6 6 6-6 6",
                        className: l
                    })
                })
            }
        },
        260792: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ChevronSmallUpIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        stroke: "string" == typeof a ? a : a.css,
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "2",
                        d: "m6 14 6-6 6 6",
                        className: l
                    })
                })
            }
        },
        891128: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CircleCheckIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M12 23c6.075 0 11-4.925 11-11S18.075 1 12 1 1 5.925 1 12s4.925 11 11 11Zm5.707-13.293a1 1 0 0 0-1.414-1.414L10 14.586l-2.293-2.293a1 1 0 0 0-1.414 1.414l3 3a1 1 0 0 0 1.414 0l7-7Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        165984: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CircleExclamationPointIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M12 23c6.075 0 11-4.925 11-11S18.075 1 12 1 1 5.925 1 12s4.925 11 11 11Zm1.441-15.945-.386 6.947a1.057 1.057 0 0 1-2.11 0l-.386-6.947A1 1 0 0 1 11.557 6h.886a1 1 0 0 1 .998 1.055ZM13.25 17.75a1.25 1.25 0 1 1-2.5 0 1.25 1.25 0 0 1 2.5 0Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        703906: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClipsAlt1Icon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M3 3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H3Zm11.5 5.5A.5.5 0 0 0 14 8h-4a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7Zm1.5 0a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-4a.5.5 0 0 1-.5-.5v-7Zm-8 0a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 0-.5.5v7a.5.5 0 0 0 .5.5h4a.5.5 0 0 0 .5-.5v-7Zm3-4a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm.5 13.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM7 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1ZM7.5 18a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM19 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm.5 13.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM3 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1ZM3.5 18a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM15 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm.5 13.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        368922: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClipsAlt2Icon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M3 3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h18a2 2 0 0 0 2-2V5a2 2 0 0 0-2-2H3Zm13 4.5a.5.5 0 0 0-.5-.5h-7a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h7a.5.5 0 0 0 .5-.5v-9Zm4.5-.5a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h2ZM6 7.5a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h2a.5.5 0 0 0 .5-.5v-9Zm5-3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm.5 13.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM7 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1ZM7.5 18a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM19 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm.5 13.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM3 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1ZM3.5 18a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM15 4.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm.5 13.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        797439: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClipsIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsxs)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        d: "M15.135 2.373a.5.5 0 0 0-.538-.708l-4.248.75a.5.5 0 0 0-.364.276l-2.12 4.436a.5.5 0 0 0 .538.708l4.248-.75a.5.5 0 0 0 .364-.276l2.12-4.436ZM15.744 5.737a.5.5 0 0 0 .538.708l5.008-.883a.5.5 0 0 0 .405-.579l-.26-1.477a3 3 0 0 0-3.204-2.469.457.457 0 0 0-.369.266l-2.118 4.434ZM4.172 3.503l2.546-.448a.5.5 0 0 1 .538.708L5.137 8.198a.5.5 0 0 1-.364.277l-2.195.387A.5.5 0 0 1 2 8.456l-.26-1.477a3 3 0 0 1 2.433-3.476Z",
                        className: l
                    }), (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M2.5 10a.5.5 0 0 0-.5.5V19a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3v-8.5a.5.5 0 0 0-.5-.5h-19ZM5 13.5a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-10a.5.5 0 0 1-.5-.5v-1Zm.5 3.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h5a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-5Z",
                        clipRule: "evenodd",
                        className: l
                    })]
                })
            }
        },
        49482: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CloseLargeIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M19.293 20.707a1 1 0 0 0 1.414-1.414L13.414 12l7.293-7.293a1 1 0 0 0-1.414-1.414L12 10.586 4.707 3.293a1 1 0 0 0-1.414 1.414L10.586 12l-7.293 7.293a1 1 0 1 0 1.414 1.414L12 13.414l7.293 7.293Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        638558: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MagnifyingGlassIcon: function() {
                    return a
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("912557"),
                s = n("75196");
            let a = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: a = r.default.colors.INTERACTIVE_NORMAL,
                    colorClass: l = "",
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, s.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fill: "string" == typeof a ? a : a.css,
                        fillRule: "evenodd",
                        d: "M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Zm-1.382 7.032a9 9 0 1 1 1.414-1.414l4.675 4.675a1 1 0 0 1-1.414 1.414l-4.675-4.675Z",
                        clipRule: "evenodd",
                        className: l
                    })
                })
            }
        },
        224763: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Interactive: function() {
                    return o
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("227645"),
                l = n("955127");

            function o(e) {
                let {
                    as: t,
                    muted: n = !1,
                    selected: r = !1,
                    className: o,
                    ...u
                } = e, c = null != t ? t : a.Clickable;
                return (0, i.jsx)(c, {
                    ...u,
                    className: s(l.interactive, o, {
                        [l.muted]: n,
                        [l.selected]: r
                    })
                })
            }
        },
        533979: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PRETTY_KEYS: function() {
                    return u
                },
                KeyCombo: function() {
                    return c
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("485328"),
                l = n("221061");

            function o(e) {
                let {
                    direction: t = "up"
                } = e;
                return (0, i.jsx)("svg", {
                    width: "10",
                    height: "10",
                    xmlns: "http://www.w3.org/2000/svg",
                    className: s(l.bindArrow, l[t]),
                    children: (0, i.jsx)("g", {
                        fill: "#FFFFFF",
                        children: (0, i.jsx)("polygon", {
                            transform: "translate(5.025000, 5.000000) scale(1, -1) translate(-5.025000, -5.000000) ",
                            points: "4.16666667 10 4.16666672 3.33333333 1.25 6.25 0.05 5 5.00000005 0 9.99999967 5 8.75 6.25 5.83333338 3.33333333 5.83333333 10"
                        })
                    })
                })
            }
            let u = {
                mod: () => a.default.modKey,
                alt: () => a.default.altKey,
                up: () => (0, i.jsx)(o, {
                    direction: "up"
                }),
                down: () => (0, i.jsx)(o, {
                    direction: "down"
                }),
                left: () => (0, i.jsx)(o, {
                    direction: "left"
                }),
                right: () => (0, i.jsx)(o, {
                    direction: "right"
                }),
                pageup: () => "page up",
                pagedown: () => "page down",
                "any-character": () => "any key",
                plus: () => "+",
                return: () => a.default.returnKey
            };

            function c(e) {
                let {
                    shortcut: t,
                    dim: n = !1,
                    className: r,
                    keyClassName: a
                } = e, o = Array.isArray(t) ? t : t.split("+");
                return (0, i.jsx)("div", {
                    className: s(l.combo, r, {
                        [l.dim]: n
                    }),
                    children: o.map(e => null != u[e] ? u[e]() : e).map((e, t) => (0, i.jsx)("span", {
                        className: s(l.key, a),
                        children: e
                    }, t))
                })
            }
        },
        228256: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                LayerClassName: function() {
                    return f
                },
                LayerProvider: function() {
                    return p
                },
                LayerContainer: function() {
                    return h
                },
                getParentLayerContainer: function() {
                    return S
                },
                Layer: function() {
                    return T
                },
                createLayer: function() {
                    return I
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("161179"),
                o = n.n(l),
                u = n("865768"),
                c = n.n(u),
                d = n("117362"),
                _ = n("411093"),
                E = n("627058");
            let f = E.layerContainer;
            class p extends r.Component {
                componentWillUnmount() {
                    this.state.layerContainerElement = null
                }
                render() {
                    let {
                        layerContext: e,
                        children: t
                    } = this.props, {
                        layerContainerElement: n
                    } = this.state;
                    return (0, i.jsx)(e.Provider, {
                        value: this.getContextValue(n),
                        children: t
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        layerContainerElement: null
                    }, this.setLayerContainerElement = e => {
                        this.setState({
                            layerContainerElement: e
                        })
                    }, this.getContextValue = (0, d.cachedFunction)(e => [e, this.setLayerContainerElement])
                }
            }
            let h = e => {
                let {
                    layerContext: t,
                    className: n
                } = e, [, s] = r.useContext(t);
                return (0, i.jsx)("div", {
                    className: a(f, n),
                    ref: s
                })
            };

            function S(e) {
                let t = (0, _.default)(e, E.layerContainer);
                return o(null != t, "Unexpected missing parent container"), t
            }
            let T = e => {
                let {
                    layerContext: t,
                    children: n
                } = e;
                return (0, i.jsx)(t.Consumer, {
                    children: e => (function(e, t) {
                        let [n] = e;
                        return null == n ? null : c.createPortal(r.Children.only(t), n)
                    })(e, n)
                })
            };

            function I(e) {
                let t = r.createContext([null, () => {}]),
                    n = {
                        LayerProvider: e => (0, i.jsx)(p, {
                            layerContext: t,
                            ...e
                        }),
                        LayerContainer: e => (0, i.jsx)(h, {
                            layerContext: t,
                            ...e
                        }),
                        Layer: e => (0, i.jsx)(T, {
                            layerContext: t,
                            ...e
                        }),
                        layerContext: t
                    };
                return n.LayerProvider.displayName = "".concat(e, "LayerProvider"), n.LayerContainer.displayName = "".concat(e, "LayerContainer"), n.Layer.displayName = "".concat(e, "Layer"), n
            }
        },
        222163: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                referencePortalAwareContains: function() {
                    return T
                },
                ReferencePositionLayer: function() {
                    return A
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("161179"),
                o = n.n(l),
                u = n("718776"),
                c = n("36763"),
                d = n("659500"),
                _ = n("439932"),
                E = n("411093"),
                f = n("228256"),
                p = n("49111"),
                h = n("627058");
            let S = new WeakMap;

            function T(e, t) {
                if (e.contains(t)) return !0;
                let n = (0, E.default)(t, h.layer);
                for (; null != n;) {
                    let t = S.get(n);
                    if (null == t) break;
                    if (e.contains(t)) return !0;
                    n = (0, E.default)(t, h.layer)
                }
                return !1
            }

            function I(e) {
                let {
                    positionKey: t,
                    position: n,
                    align: i
                } = e;
                return null != t ? t : "".concat(n, ":").concat(i)
            }

            function m(e, t, n, i) {
                switch (e) {
                    case "top":
                        return o(null != t.bottom, "Missing bottom"), i.offsetHeight - (t.bottom + n.offsetHeight);
                    case "bottom":
                        return o(null != t.top, "Missing top"), i.offsetHeight - (t.top + n.offsetHeight);
                    case "left":
                        return o(null != t.right, "Missing right"), i.offsetWidth - (t.right + n.offsetWidth);
                    case "right":
                        return o(null != t.left, "Missing left"), i.offsetWidth - (t.left + n.offsetWidth);
                    case "center":
                    case "window_center":
                        return o(null != t.left, "Missing left"), i.offsetWidth - (t.left + n.offsetWidth / 2);
                    default:
                        throw Error("Unexpected position: ".concat(e))
                }
            }

            function g(e, t, n) {
                if (null != e && e < 0 && ("top" === n.position || "bottom" === n.position)) {
                    let i = null != t && Math.abs(e) < (null == t ? void 0 : t.offsetHeight);
                    if (i && null != n.style) {
                        let t = "top" === n.position ? "bottom" : "top",
                            i = n.style[t];
                        return {
                            ...n,
                            style: {
                                ...n.style,
                                [t]: (null == i ? 0 : i) + e
                            }
                        }
                    }
                }
                return n
            }
            class A extends r.Component {
                nudgeLeftAlignment(e, t, n) {
                    let {
                        nudgeAlignIntoViewport: i
                    } = this.props;
                    if (!i) return e;
                    let r = n.offsetWidth,
                        s = e + t.offsetWidth,
                        a = s - r + 12;
                    return a > 0 ? Math.max(12, e - a) : e
                }
                getHorizontalAlignmentStyle(e, t, n, i) {
                    let {
                        align: r
                    } = this.props;
                    switch (r) {
                        case "left": {
                            let r = Math.ceil(this.nudgeLeftAlignment(e.left, t, n)),
                                s = Math.ceil(e.left) - r;
                            return {
                                style: {
                                    ...i,
                                    left: r
                                },
                                nudge: s
                            }
                        }
                        case "right": {
                            let t = Math.ceil(n.offsetWidth - e.right);
                            return {
                                style: {
                                    ...i,
                                    right: t
                                },
                                nudge: 0
                            }
                        }
                        case "center": {
                            let r = e.left + (e.width - t.offsetWidth) / 2,
                                s = Math.ceil(this.nudgeLeftAlignment(r, t, n)),
                                a = Math.ceil(r) - s;
                            return {
                                style: {
                                    ...i,
                                    left: s
                                },
                                nudge: a
                            }
                        }
                        default:
                            throw Error("Unsupported align: ".concat(r))
                    }
                }
                nudgeTopAlignment(e, t, n) {
                    let {
                        nudgeAlignIntoViewport: i
                    } = this.props;
                    if (!i) return e;
                    if (e < 0) return 0;
                    let r = t.getBoundingClientRect().height,
                        s = n.offsetHeight,
                        a = e + r - s + 12;
                    return a > 0 ? Math.max(12, e - a) : e
                }
                nudgeBottomAlignment(e, t, n) {
                    let {
                        nudgeAlignIntoViewport: i
                    } = this.props, r = n.offsetHeight, s = r - e;
                    if (!i) return s;
                    let a = s + t.offsetHeight - r + 12;
                    return a > 0 ? Math.max(12, s - a) : s
                }
                getVerticalAlignmentStyle(e, t, n, i) {
                    let {
                        align: r
                    } = this.props;
                    switch (r) {
                        case "top": {
                            let r = Math.ceil(this.nudgeTopAlignment(e.top, t, n)),
                                s = Math.ceil(e.top) - r;
                            return {
                                style: {
                                    ...i,
                                    top: r
                                },
                                nudge: s
                            }
                        }
                        case "bottom": {
                            let r = Math.ceil(this.nudgeBottomAlignment(e.bottom, t, n)),
                                s = Math.ceil(e.bottom) - r;
                            return {
                                style: {
                                    ...i,
                                    bottom: r
                                },
                                nudge: s
                            }
                        }
                        case "center": {
                            let r = e.top + (e.height - t.offsetHeight) / 2,
                                s = Math.ceil(this.nudgeTopAlignment(r, t, n)),
                                a = Math.ceil(r) - s;
                            return {
                                style: {
                                    ...i,
                                    top: s
                                },
                                nudge: a
                            }
                        }
                        default:
                            throw Error("Unsupported align: ".concat(r))
                    }
                }
                calculatePositionStyle(e, t, n) {
                    var i, r, s, a;
                    let {
                        reference: l,
                        spacing: u = 0
                    } = this.props;
                    let c = "function" == typeof(i = l) ? i() : (o(null != i.current, "Invalid ref"), i.current.getBoundingClientRect()),
                        d = n.getBoundingClientRect();
                    let _ = (r = c, s = d.left, a = d.top, {
                        top: r.top - a,
                        left: r.left - s,
                        bottom: r.bottom - a,
                        right: r.right - s,
                        width: r.width,
                        height: r.height
                    });
                    switch (e) {
                        case "top":
                            return this.getHorizontalAlignmentStyle(_, t, n, {
                                bottom: n.offsetHeight - _.top + u
                            });
                        case "bottom":
                            return this.getHorizontalAlignmentStyle(_, t, n, {
                                top: _.bottom + u
                            });
                        case "left":
                            return this.getVerticalAlignmentStyle(_, t, n, {
                                right: n.offsetWidth - _.left + u
                            });
                        case "right":
                            return this.getVerticalAlignmentStyle(_, t, n, {
                                left: _.right + u
                            });
                        case "center":
                            return this.getVerticalAlignmentStyle(_, t, n, {
                                left: _.left + _.width / 2 - t.offsetWidth / 2 + u
                            });
                        case "window_center":
                            return this.getVerticalAlignmentStyle(_, t, n, {
                                left: Math.max((window.innerWidth - t.offsetWidth) / 2, 0)
                            });
                        default:
                            throw Error("Unexpected position: ".concat(e))
                    }
                }
                calculateState() {
                    let {
                        position: e,
                        autoInvert: t
                    } = this.props, n = this.elementRef.current;
                    o(null != n, "Unexpected null element");
                    let i = (0, f.getParentLayerContainer)(n),
                        {
                            style: r,
                            nudge: s
                        } = this.calculatePositionStyle(e, n, i),
                        a = null,
                        l = null;
                    if (t && (a = m(e, r, n, i)) < 0) {
                        let t = function(e) {
                                switch (e) {
                                    case "top":
                                        return "bottom";
                                    case "bottom":
                                        return "top";
                                    case "left":
                                        return "right";
                                    case "right":
                                        return "left";
                                    case "center":
                                        return "center";
                                    case "window_center":
                                        return "window_center";
                                    default:
                                        throw Error()
                                }
                            }(e),
                            {
                                style: r,
                                nudge: s
                            } = this.calculatePositionStyle(t, n, i);
                        if ((l = m(t, r, n, i)) > a) return g(l, n, {
                            position: t,
                            nudge: s,
                            style: r
                        })
                    }
                    return g(a, n, {
                        position: e,
                        nudge: s,
                        style: r
                    })
                }
                componentDidMount() {
                    var e, t;
                    let {
                        reference: n,
                        onMount: i
                    } = this.props;
                    this.setState({
                        isPositioned: !0,
                        ...this.calculateState()
                    });
                    let r = this.elementRef.current;
                    o(null != r, "Missing elementRef"), "function" != typeof n && null != n.current && S.set(r, n.current), d.ComponentDispatch.subscribe(p.ComponentActions.LAYER_POP_START, this.handleLayerPopStart), d.ComponentDispatch.subscribe(p.ComponentActions.LAYER_POP_COMPLETE, this.handleLayerPopComplete), null == r || null === (t = r.ownerDocument) || void 0 === t || null === (e = t.defaultView) || void 0 === e || e.addEventListener("resize", this.handleLayerPopComplete), null == i || i()
                }
                componentDidUpdate(e, t) {
                    if (I(e) !== I(this.props) && this.updatePosition(), t.position !== this.state.position) {
                        var n, i;
                        null === (n = (i = this.props).onPositionChange) || void 0 === n || n.call(i, this.state.position)
                    }
                }
                componentWillUnmount() {
                    var e, t, n, i;
                    let r = this.elementRef.current;
                    o(null != r, "Missing elementRef"), S.delete(r), d.ComponentDispatch.unsubscribe(p.ComponentActions.LAYER_POP_START, this.handleLayerPopStart), d.ComponentDispatch.unsubscribe(p.ComponentActions.LAYER_POP_COMPLETE, this.handleLayerPopComplete), null == r || null === (t = r.ownerDocument) || void 0 === t || null === (e = t.defaultView) || void 0 === e || e.removeEventListener("resize", this.handleLayerPopComplete), null === (n = (i = this.props).onUnmount) || void 0 === n || n.call(i)
                }
                render() {
                    let {
                        id: e,
                        className: t,
                        children: n,
                        fixed: r,
                        disablePointerEvents: s
                    } = this.props, {
                        position: l,
                        isPositioned: o,
                        isSettingsLayerTransitioning: d,
                        nudge: E
                    } = this.state;
                    return (0, i.jsx)(c.UseThemeContext, {
                        children: c => {
                            let {
                                theme: f
                            } = c;
                            return (0, i.jsx)("div", {
                                id: e,
                                className: a(t, (0, _.getThemeClass)(f), h.layer, {
                                    [h.emptyError]: !1,
                                    [h.layerHidden]: d,
                                    [h.disabledPointerEvents]: s
                                }),
                                style: {
                                    position: r ? "fixed" : "absolute",
                                    ...this.state.style
                                },
                                ref: this.elementRef,
                                children: (0, i.jsx)(u.FocusRingScope, {
                                    containerRef: this.elementRef,
                                    children: n({
                                        position: l,
                                        nudge: E,
                                        isPositioned: o
                                    }, this.updatePosition)
                                })
                            })
                        }
                    })
                }
                constructor(...e) {
                    super(...e), this.elementRef = r.createRef(), this.state = {
                        style: Object.freeze({}),
                        position: this.props.autoInvert ? null : this.props.position,
                        nudge: 0,
                        isPositioned: !1,
                        isSettingsLayerTransitioning: !1
                    }, this.handleLayerPopStart = () => {
                        this.setState({
                            isSettingsLayerTransitioning: !0
                        })
                    }, this.handleLayerPopComplete = () => {
                        let e = this.calculateState();
                        this.setState({
                            ...e,
                            isSettingsLayerTransitioning: !1
                        })
                    }, this.updatePosition = () => {
                        this.setState(this.calculateState())
                    }
                }
            }
            A.defaultProps = {
                nudgeAlignIntoViewport: !1,
                spacing: 0,
                autoInvert: !1,
                disablePointerEvents: !1
            }
        },
        384704: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MasonryListThin: function() {
                    return o
                },
                MasonryListAuto: function() {
                    return u
                }
            });
            var i, r, s = n("436961"),
                a = n("304549"),
                l = n("394325");
            let o = (0, a.createMasonryListScroller)(l.thin, l.fade, null !== (i = window.ResizeObserver) && void 0 !== i ? i : s.ResizeObserver),
                u = (0, a.createMasonryListScroller)(l.auto, l.fade, null !== (r = window.ResizeObserver) && void 0 !== r ? r : s.ResizeObserver)
        },
        304549: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createMasonryListScroller: function() {
                    return d
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n.n(r),
                a = n("575482"),
                l = n.n(a),
                o = n("718776"),
                u = n("462977"),
                c = n("394325");

            function d(e, t, n) {
                let a = (0, u.getScrollbarSpecs)(e),
                    d = new Map,
                    _ = new n(e => {
                        e.forEach(e => {
                            var t;
                            let {
                                target: n
                            } = e;
                            null === (t = d.get(n)) || void 0 === t || t(e)
                        })
                    });
                return (0, r.forwardRef)(function(n, E) {
                    let {
                        onScroll: f,
                        dir: p = "ltr",
                        sections: h,
                        columns: S,
                        getItemKey: T,
                        getItemHeight: I,
                        getSectionHeight: m,
                        chunkSize: g,
                        renderSection: A,
                        renderItem: C,
                        getSectionProps: R,
                        itemGutter: N,
                        removeEdgeItemGutters: v,
                        sectionGutter: O,
                        padding: D,
                        paddingVertical: L,
                        paddingHorizontal: M,
                        fade: P = !1,
                        className: b,
                        style: y,
                        ...U
                    } = n, G = s.useRef(null), w = s.useRef(null), [x, k] = s.useState(!1), {
                        scrollerRef: F,
                        scrollerState: B,
                        getScrollerState: V
                    } = (0, u.useCachedScrollerState)();
                    (0, u.usePaddingFixes)({
                        scrollerRef: F,
                        className: b,
                        specs: a,
                        orientation: "vertical",
                        dir: p
                    });
                    let {
                        forceUpdateOnChunkChange: H,
                        coordsMap: j,
                        gridData: Y,
                        visibleSections: W,
                        totalHeight: K,
                        forceUpdate: z,
                        masonryComputer: Z
                    } = (0, u.useVirtualizedMasonryState)({
                        sections: h,
                        columns: S,
                        getItemKey: T,
                        getItemHeight: I,
                        getSectionHeight: m,
                        chunkSize: g,
                        itemGutter: N,
                        removeEdgeItemGutters: v,
                        sectionGutter: O,
                        padding: D,
                        paddingVertical: L,
                        paddingHorizontal: M,
                        getScrollerState: V,
                        dir: p
                    }), q = (0, r.useCallback)(function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 2;
                        e > B.current.dirty && (B.current.dirty = e, 2 === e ? z() : H(1))
                    }, [H, B, z]), X = (0, u.useScrollSpring)(F), Q = (0, r.useCallback)(() => Z.itemGrid, [Z]), J = (0, r.useCallback)(() => Z.coordsMap, [Z]), $ = s.useCallback(() => q(), [q]);
                    (0, u.useResizeObserverSubscription)({
                        ref: F,
                        key: "container",
                        onUpdate: $,
                        resizeObserver: _,
                        listenerMap: d
                    }), (0, r.useImperativeHandle)(E, () => ({
                        getScrollerNode: () => F.current,
                        getItemGrid: Q,
                        getCoordsMap: J,
                        getScrollerState: V,
                        ...(0, u.getAnimatedScrollHelpers)(F, V, X)
                    }), [F, V, Q, X, J]);
                    let ee = (0, r.useCallback)(e => {
                        q(1), null == G.current ? k(!0) : clearTimeout(G.current), G.current = setTimeout(() => {
                            G.current = null, k(!1)
                        }, 200), null != f && f(e)
                    }, [f, q]);
                    return (0, i.jsx)("div", {
                        ref: F,
                        onScroll: ee,
                        className: l(b, {
                            [e]: !0,
                            [t]: P,
                            [c.scrolling]: x
                        }),
                        style: (0, u.getMergedOrientationStyles)(y),
                        ...U,
                        children: (0, r.useMemo)(() => (0, i.jsx)(o.FocusRingScope, {
                            containerRef: w,
                            children: (0, i.jsx)("div", {
                                style: {
                                    height: K
                                },
                                className: c.content,
                                ref: w,
                                children: Object.keys(W).map(e => {
                                    let t = (0, u.getMasonryListSectionIndex)(e),
                                        n = j[e],
                                        r = W[e],
                                        s = j[(0, u.getMasonryListSectionHeaderKey)(t)],
                                        a = null == R ? void 0 : R(t);
                                    return null != n && null != r ? (0, i.jsxs)("div", {
                                        style: n,
                                        ...a,
                                        children: [null != A && null != s && A(t, s, e), r.map(e => {
                                            let [t, n, i] = e, r = j[t];
                                            return null != r ? C(n, i, r, t, Y) : null
                                        })]
                                    }, e) : null
                                })
                            })
                        }), [W, C, A, j, K, R, Y])
                    })
                })
            }
        },
        199285: function(e, t, n) {
            "use strict";

            function i(e, t) {
                return "function" == typeof e ? e(t) : e
            }
            n.r(t), n.d(t, {
                renderSubnode: function() {
                    return i
                }
            })
        },
        71096: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Menu: function() {
                    return I
                },
                MenuSpinner: function() {
                    return m
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("376929"),
                o = n.n(l),
                u = n("138533"),
                c = n("311720"),
                d = n("670914"),
                _ = n("242670"),
                E = n("180748"),
                f = n("206230"),
                p = n("155823"),
                h = n("107728"),
                S = n("537011"),
                T = n("721393");

            function I(e) {
                var t;
                let {
                    navId: n,
                    variant: s = "flexible",
                    hideScroller: l = !1,
                    className: _,
                    children: I,
                    onClose: m,
                    onSelect: A
                } = e, C = function e(t) {
                    return (function e(t) {
                        return null == t ? [] : r.Children.toArray(t).flatMap(t => {
                            var n;
                            return null == t ? [] : Array.isArray(t) ? e(t) : t.type === r.Fragment ? null !== (n = e(t.props.children)) && void 0 !== n ? n : [] : [t]
                        })
                    })(t).reduce((t, n) => {
                        var i, r;
                        if (n.type === p.MenuSeparator) return t.push({
                            type: "separator",
                            navigable: !1
                        }), t;
                        if (n.type === p.MenuGroup) {
                            let i = e(n.props.children);
                            return i.length > 0 && (t.push({
                                type: "groupstart",
                                length: i.length,
                                navigable: !1,
                                props: n.props
                            }), t.push(...i), t.push({
                                type: "groupend",
                                length: i.length,
                                navigable: !1,
                                props: n.props
                            })), t
                        }
                        if (n.type === p.MenuItem) return t.push(null != n.props.render ? {
                            type: "customitem",
                            key: n.props.id,
                            navigable: null == n.props.navigable || n.props.navigable,
                            render: n.props.render,
                            props: n.props
                        } : {
                            type: "item",
                            key: n.props.id,
                            navigable: !0,
                            label: n.props.label,
                            children: n.props.children ? e(n.props.children) : void 0,
                            onChildrenScroll: n.props.onChildrenScroll,
                            props: n.props,
                            childRowHeight: n.props.childRowHeight,
                            listClassName: n.props.listClassName,
                            subMenuClassName: n.props.subMenuClassName
                        }), t;
                        else if (n.type === p.MenuCheckboxItem) return t.push({
                            type: "checkbox",
                            key: n.props.id,
                            navigable: !0,
                            props: n.props
                        }), t;
                        else if (n.type === p.MenuRadioItem) return t.push({
                            type: "radio",
                            key: n.props.id,
                            navigable: !0,
                            props: n.props
                        }), t;
                        else if (n.type === p.MenuControlItem) return t.push(null != n.props.control ? {
                            type: "control",
                            key: n.props.id,
                            navigable: !0,
                            props: n.props
                        } : {
                            type: "compositecontrol",
                            key: n.props.id,
                            navigable: !1 !== n.props.interactive,
                            children: n.props.children,
                            props: n.props
                        }), t;
                        throw Error("Menu API only allows Items and groups of Items as children. Received ".concat(null !== (r = null !== (i = null == n ? void 0 : n.type) && void 0 !== i ? i : n) && void 0 !== r ? r : typeof n, " (").concat(typeof n, ") instead"))
                    }, [])
                }(I), R = function e(t) {
                    return t.reduce((t, n) => n.navigable ? (t.push({
                        key: n.key,
                        children: "item" === n.type && null != n.children ? e(n.children) : void 0
                    }), t) : t, [])
                }(C), N = r.useRef([]);
                !o(N.current, R) && (N.current = R);
                let v = null === (t = C.find(e => null != e.key)) || void 0 === t ? void 0 : t.key,
                    O = (0, u.useMenuNavigator)({
                        navId: n,
                        items: N.current,
                        initialFocusPath: f.default.keyboardModeEnabled && null != v ? [v] : [],
                        closeMenu: m
                    });
                r.useEffect(() => {
                    O.isUsingKeyboardNavigation ? !f.default.keyboardModeEnabled && (0, E.enableKeyboardMode)() : f.default.keyboardModeEnabled && (0, E.disableKeyboardMode)()
                }, [O.isUsingKeyboardNavigation]);
                let D = r.useRef(null);
                (0, c.useFocusLock)(D);
                let L = l ? d.ScrollerNone : d.ScrollerThin;
                return (0, i.jsx)(h.OnMenuSelectContext.Provider, {
                    value: A,
                    children: (0, i.jsx)("div", {
                        className: a(T.menu, T[s], _),
                        ...O.getContainerProps(),
                        ref: D,
                        "aria-label": e["aria-label"],
                        children: (0, i.jsxs)(L, {
                            className: T.scroller,
                            children: [0 === C.length && (0, i.jsx)(S.Item, {
                                disabled: !0,
                                label: () => (0, i.jsx)(g, {}),
                                menuItemProps: O.getItemProps({
                                    path: ["empty"]
                                }),
                                isFocused: !1,
                                onFocus: () => {},
                                onClose: m
                            }), C.length > 0 && function e(t, n, r, s) {
                                let a = 0,
                                    l = [];
                                return t.reduce((t, o, u) => {
                                    let c = l.length > 0 ? l[l.length - 1] : t;
                                    switch (o.type) {
                                        case "separator":
                                            c.push((0, i.jsx)(S.Separator, {}, "separator-".concat(u))), a = 0;
                                            break;
                                        case "groupstart":
                                            a > 0 && o.length > 0 && (c.push((0, i.jsx)(S.Separator, {}, "separator-".concat(u))), a = 0), l.push([]);
                                            break;
                                        case "groupend":
                                            l.length > 0 && t.push((0, i.jsx)(S.Group, {
                                                contents: l.pop(),
                                                ...o.props
                                            }, "group-".concat(u)));
                                            break;
                                        case "item": {
                                            let {
                                                children: t,
                                                childRowHeight: l,
                                                onChildrenScroll: u,
                                                listClassName: d,
                                                subMenuClassName: _
                                            } = o, E = null != t, f = [...r, o.key], p = n.isFocused(f), h = null != t ? {
                                                "aria-haspopup": !0
                                            } : {}, T = (0, i.jsx)(S.Item, {
                                                ...o.props,
                                                label: o.label,
                                                hasSubmenu: null != t,
                                                isFocused: p,
                                                menuItemProps: {
                                                    ...n.getItemProps({
                                                        path: f,
                                                        hasSubmenu: E
                                                    }),
                                                    ...h
                                                },
                                                onClose: s
                                            }, o.key);
                                            E ? null != l ? c.push((0, i.jsx)(S.SubmenuListItem, {
                                                ...o.props,
                                                parentItem: T,
                                                isFocused: p,
                                                menuSubmenuProps: n.getSubmenuProps({
                                                    path: f
                                                }),
                                                rows: e(t, n, f, s),
                                                rowHeight: l,
                                                onScroll: u,
                                                listClassName: d
                                            }, "".concat(o.key, "-submenu"))) : c.push((0, i.jsx)(S.SubmenuItem, {
                                                ...o.props,
                                                subMenuClassName: _,
                                                parentItem: T,
                                                isFocused: p,
                                                menuSubmenuProps: n.getSubmenuProps({
                                                    path: f
                                                }),
                                                renderSubmenu: () => e(t, n, f, s)
                                            }, "".concat(o.key, "-submenu"))) : c.push(T), a++;
                                            break
                                        }
                                        case "customitem": {
                                            let e = [...r, o.key];
                                            c.push((0, i.jsx)(S.CustomItem, {
                                                ...o.props,
                                                isFocused: n.isFocused(e),
                                                menuItemProps: n.getItemProps({
                                                    path: e
                                                }),
                                                onClose: s,
                                                children: o.render
                                            }, o.key)), a++;
                                            break
                                        }
                                        case "checkbox": {
                                            let e = [...r, o.key];
                                            c.push((0, i.jsx)(S.CheckboxItem, {
                                                ...o.props,
                                                isFocused: n.isFocused(e),
                                                menuItemProps: n.getItemProps({
                                                    path: e,
                                                    role: "menuitemcheckbox"
                                                })
                                            }, o.key)), a++;
                                            break
                                        }
                                        case "radio": {
                                            let e = [...r, o.key];
                                            c.push((0, i.jsx)(S.RadioItem, {
                                                ...o.props,
                                                isFocused: n.isFocused(e),
                                                menuItemProps: n.getItemProps({
                                                    path: e,
                                                    role: "menuitemradio"
                                                })
                                            }, o.key)), a++;
                                            break
                                        }
                                        case "control": {
                                            let e = [...r, o.key];
                                            c.push((0, i.jsx)(S.ControlItem, {
                                                ...o.props,
                                                isFocused: n.isFocused(e),
                                                menuItemProps: n.getItemProps({
                                                    path: e
                                                }),
                                                onClose: s
                                            }, o.key)), a++;
                                            break
                                        }
                                        case "compositecontrol": {
                                            let e = [...r, o.key];
                                            c.push((0, i.jsx)(S.CompositeControlItem, {
                                                ...o.props,
                                                isFocused: n.isFocused(e),
                                                menuItemProps: n.getItemProps({
                                                    path: e
                                                }),
                                                onClose: s,
                                                children: o.children
                                            }, o.key)), a++
                                        }
                                    }
                                    return t
                                }, [])
                            }(C, O, [], m)]
                        })
                    })
                })
            }

            function m() {
                return (0, i.jsx)("div", {
                    className: a(T.menu, T.loader, T.flexible),
                    children: (0, i.jsx)(_.Spinner, {})
                })
            }

            function g() {
                let e = "♫ (つ｡◕‿‿◕｡)つ ♪",
                    [t, n] = r.useState(e);
                return r.useEffect(() => {
                    if (f.default.useReducedMotion) return;
                    let t = setInterval(() => {
                        n(t => t === e ? "♫ ⊂(｡◕‿‿◕｡⊂) ♪" : e)
                    }, 700);
                    return () => clearInterval(t)
                }, []), (0, i.jsx)("div", {
                    style: {
                        width: "100%",
                        textAlign: "center"
                    },
                    children: t
                })
            }
        },
        155823: function(e, t, n) {
            "use strict";

            function i() {
                return null
            }

            function r(e) {
                return null
            }

            function s(e) {
                return null
            }

            function a(e) {
                return null
            }

            function l(e) {
                return null
            }

            function o(e) {
                return null
            }
            n.r(t), n.d(t, {
                MenuSeparator: function() {
                    return i
                },
                MenuGroup: function() {
                    return r
                },
                MenuItem: function() {
                    return s
                },
                MenuCheckboxItem: function() {
                    return a
                },
                MenuRadioItem: function() {
                    return l
                },
                MenuControlItem: function() {
                    return o
                }
            })
        },
        389802: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MENU_ITEM_COLORS: function() {
                    return r
                }
            });
            var i = n("721393");
            let r = {
                default: i.colorDefault,
                brand: i.colorBrand,
                danger: i.colorDanger,
                premium: i.colorPremium,
                "premium-gradient": i.colorPremiumGradient,
                success: i.colorSuccess
            }
        },
        107728: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                OnMenuSelectContext: function() {
                    return r
                }
            });
            var i = n("773670");
            let r = i.createContext(void 0)
        },
        404417: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuImageUploadControl: function() {
                    return l
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("551042"),
                a = n("694187");
            let l = r.forwardRef(function(e, t) {
                let l = r.useRef(null);
                return r.useImperativeHandle(t, () => ({
                    focus: () => null,
                    activate: () => {
                        var e;
                        return null === (e = l.current) || void 0 === e || e.activateUploadDialogue(), !1
                    }
                }), []), (0, i.jsx)("div", {
                    style: {
                        position: "relative"
                    },
                    children: (0, i.jsx)(a.default, {
                        ...e,
                        ref: l,
                        onChange: function(t, r) {
                            (0, s.openModalLazy)(async () => {
                                let {
                                    default: s
                                } = await n.el("57015").then(n.bind(n, "57015"));
                                return n => (0, i.jsx)(s, {
                                    imgURI: t,
                                    file: r,
                                    onCrop: e.onChange,
                                    ...n
                                })
                            })
                        }
                    })
                })
            })
        },
        836234: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuInteractiveCompositeControl: function() {
                    return s
                }
            });
            var i = n("920040"),
                r = n("773670");
            let s = r.forwardRef(function(e, t) {
                let {
                    className: n,
                    children: s
                } = e, a = r.useRef(null), l = r.useRef(null);
                return r.useImperativeHandle(t, () => ({
                    focus: () => {
                        var e;
                        let t = a.current;
                        null != t && (null == l.current && (l.current = t.querySelector('[tabindex="0"]')), null === (e = l.current) || void 0 === e || e.focus())
                    },
                    blur: () => {
                        var e;
                        return null === (e = l.current) || void 0 === e ? void 0 : e.blur()
                    },
                    activate: () => !1
                }), []), r.useLayoutEffect(() => {
                    let e = a.current;
                    if (null != e) return e.addEventListener("focusin", t), () => {
                        e.removeEventListener("focusin", t)
                    };

                    function t(e) {
                        l.current = e.target
                    }
                }, []), (0, i.jsx)("div", {
                    ref: a,
                    className: n,
                    style: {
                        position: "relative"
                    },
                    children: s
                })
            })
        },
        609026: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuSearchControl: function() {
                    return f
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("718776"),
                u = n("242670"),
                c = n("945330"),
                d = n("229915"),
                _ = n("782340"),
                E = n("200766");
            let f = r.forwardRef(function(e, t) {
                var n, s, f;
                let {
                    query: p,
                    onChange: h,
                    loading: S = !1,
                    disabled: T = !1,
                    placeholder: I = _.default.Messages.SEARCH,
                    "aria-label": m
                } = e, g = r.useRef(null), A = r.useRef(null);
                r.useImperativeHandle(t, () => ({
                    focus: () => {
                        var e;
                        return null === (e = A.current) || void 0 === e ? void 0 : e.focus()
                    },
                    blur: () => {
                        var e;
                        return null === (e = A.current) || void 0 === e ? void 0 : e.blur()
                    },
                    activate: () => !1
                }), []);
                let C = (n = p, s = S, f = h, s ? (0, i.jsx)("div", {
                    className: E.iconContainer,
                    children: (0, i.jsx)(u.Spinner, {
                        type: u.Spinner.Type.SPINNING_CIRCLE,
                        className: a(E.icon)
                    })
                }) : n.length > 0 ? (0, i.jsx)(l.Clickable, {
                    "aria-label": _.default.Messages.SEARCH_CLEAR,
                    className: a(E.iconContainer, E.iconClickable),
                    onClick: e => {
                        e.stopPropagation(), f("")
                    },
                    onMouseDown: e => {
                        e.preventDefault(), e.stopPropagation()
                    },
                    focusProps: {
                        offset: {
                            top: -3,
                            right: -3,
                            bottom: -3,
                            left: -3
                        }
                    },
                    children: (0, i.jsx)(c.default, {
                        width: 18,
                        height: 18,
                        className: E.icon,
                        "aria-label": _.default.Messages.CLOSE
                    })
                }) : (0, i.jsx)("div", {
                    className: E.iconContainer,
                    children: (0, i.jsx)(d.default, {
                        width: 18,
                        height: 18,
                        className: E.icon,
                        "aria-label": _.default.Messages.SEARCH
                    })
                }));
                return (0, i.jsx)(o.FocusRing, {
                    focusTarget: A,
                    ringTarget: g,
                    offset: {
                        top: 2,
                        bottom: 2,
                        left: 4,
                        right: 4
                    },
                    children: (0, i.jsxs)("div", {
                        className: E.container,
                        ref: g,
                        children: [(0, i.jsx)("input", {
                            role: "searchbox",
                            "aria-busy": S,
                            ref: A,
                            className: E.input,
                            value: p,
                            onChange: e => h(e.currentTarget.value),
                            "aria-label": m,
                            placeholder: I,
                            disabled: T
                        }), C]
                    })
                })
            })
        },
        873830: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuSliderControl: function() {
                    return o
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("837443"),
                a = n("378421");
            let l = e => "".concat(e.toFixed(0), "%"),
                o = r.forwardRef(function(e, t) {
                    let {
                        value: n,
                        minValue: o = 0,
                        maxValue: u = 100,
                        onChange: c,
                        renderValue: d = l,
                        "aria-label": _
                    } = e, E = r.useRef(null);
                    return r.useImperativeHandle(t, () => ({
                        focus: () => {
                            var e;
                            return null === (e = E.current) || void 0 === e ? void 0 : e.focus()
                        },
                        blur: () => {
                            var e;
                            return null === (e = E.current) || void 0 === e ? void 0 : e.blur()
                        },
                        activate: () => !1
                    }), []), (0, i.jsx)("div", {
                        className: a.sliderContainer,
                        children: (0, i.jsx)(s.Slider, {
                            ref: E,
                            mini: !0,
                            handleSize: 16,
                            className: a.slider,
                            initialValue: n,
                            minValue: o,
                            maxValue: u,
                            onValueChange: c,
                            asValueChanges: c,
                            onValueRender: d,
                            orientation: "horizontal",
                            "aria-label": _
                        })
                    })
                })
        },
        697917: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ensureItemVisible: function() {
                    return r
                }
            });
            var i = n("206230");

            function r(e) {
                var t;
                i.default.keyboardModeEnabled && (null === (t = e.current) || void 0 === t || t.scrollIntoView({
                    block: "nearest"
                }))
            }
        },
        964019: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuCheckboxItem: function() {
                    return f
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("199285"),
                u = n("697917"),
                c = n("36562"),
                d = n("781291"),
                _ = n("389802"),
                E = n("721393");

            function f(e) {
                let {
                    color: t = "default",
                    label: n,
                    checked: s,
                    subtext: f,
                    disabled: p,
                    isFocused: h,
                    menuItemProps: S,
                    action: T,
                    className: I,
                    focusedClassName: m
                } = e, g = r.useRef(null);
                return r.useEffect(() => {
                    h && (0, u.ensureItemVisible)(g)
                }, [h]), (0, i.jsxs)(l.Clickable, {
                    innerRef: g,
                    className: a(E.item, E.labelContainer, _.MENU_ITEM_COLORS[t], I, {
                        [E.disabled]: p,
                        [E.focused]: h,
                        [null != m ? m : ""]: h
                    }),
                    onClick: p ? void 0 : T,
                    ...S,
                    "aria-checked": s,
                    "aria-disabled": p,
                    children: [(0, i.jsxs)("div", {
                        className: E.label,
                        children: [(0, o.renderSubnode)(n, e), null != f && (0, i.jsx)("div", {
                            className: E.subtext,
                            children: f
                        })]
                    }), (0, i.jsx)("div", {
                        className: E.iconContainer,
                        children: s ? (0, i.jsx)(d.default, {
                            className: E.icon,
                            background: E.checkbox,
                            foreground: E.check
                        }) : (0, i.jsx)(c.default, {
                            className: E.icon,
                            foreground: E.checkboxEmpty
                        })
                    })]
                })
            }
        },
        922260: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuCompositeControlItem: function() {
                    return c
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("697917"),
                o = n("389802"),
                u = n("721393");

            function c(e) {
                let {
                    color: t = "default",
                    disabled: n,
                    isFocused: s,
                    showDefaultFocus: c = !1,
                    menuItemProps: d,
                    children: _
                } = e, E = r.useRef(null);
                return r.useLayoutEffect(() => {
                    if (!s) return;
                    let e = E.current;
                    if (null == e) return;
                    (0, l.ensureItemVisible)(E);
                    let t = e.querySelector('[tabindex="0"]');
                    null == t || t.focus()
                }, [s]), (0, i.jsx)("div", {
                    ref: E,
                    className: a(u.item, o.MENU_ITEM_COLORS[t], {
                        [u.disabled]: n,
                        [u.focused]: c && s,
                        [u.hideInteraction]: !c
                    }),
                    "aria-disabled": n,
                    ...d,
                    children: _
                })
            }
        },
        412256: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuControlItem: function() {
                    return c
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("697917"),
                o = n("389802"),
                u = n("721393");

            function c(e) {
                let {
                    color: t = "default",
                    label: n,
                    control: s,
                    disabled: c,
                    isFocused: d,
                    showDefaultFocus: _ = !1,
                    menuItemProps: E,
                    onClose: f
                } = e, p = r.useRef(null), h = r.useRef(null);
                r.useLayoutEffect(() => {
                    var e, t, n;
                    d ? ((0, l.ensureItemVisible)(p), null === (e = h.current) || void 0 === e || e.focus()) : null === (n = h.current) || void 0 === n || null === (t = n.blur) || void 0 === t || t.call(n)
                }, [d]);
                let S = r.useCallback(() => {
                        var e, t;
                        let n = null === (t = h.current) || void 0 === t ? void 0 : null === (e = t.activate) || void 0 === e ? void 0 : e.call(t);
                        n && f()
                    }, [f]),
                    T = s({
                        onClose: f,
                        disabled: c,
                        isFocused: d
                    }, h);
                return (0, i.jsxs)("div", {
                    onClick: S,
                    className: a(u.item, o.MENU_ITEM_COLORS[t], {
                        [u.disabled]: c,
                        [u.focused]: _ && d,
                        [u.hideInteraction]: !_
                    }),
                    "aria-disabled": c,
                    ...E,
                    children: [null != n ? (0, i.jsx)("div", {
                        className: u.labelContainer,
                        children: (0, i.jsx)("div", {
                            className: u.label,
                            children: n
                        })
                    }) : null, T]
                })
            }
        },
        916528: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuCustomItem: function() {
                    return d
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("697917"),
                u = n("389802"),
                c = n("721393");

            function d(e) {
                let {
                    children: t,
                    color: n = "default",
                    isFocused: s = !1,
                    disabled: d = !1,
                    keepItemStyles: _ = !1,
                    menuItemProps: E,
                    action: f,
                    dontCloseOnActionIfHoldingShiftKey: p,
                    onClose: h
                } = e, S = r.useRef(null);
                r.useEffect(() => {
                    s && (0, o.ensureItemVisible)(S)
                }, [s]);
                let T = r.useCallback(e => {
                        if (null == f) return !1;
                        !(e.shiftKey && p) && h(), e.persist(), requestAnimationFrame(() => f(e))
                    }, [f, h, p]),
                    I = _ ? a(c.item, u.MENU_ITEM_COLORS[n], {
                        [c.focused]: s
                    }) : c.customItem;
                return (0, i.jsx)(l.Clickable, {
                    innerRef: S,
                    className: I,
                    onClick: d ? void 0 : T,
                    "aria-disabled": d,
                    ...E,
                    children: t({
                        color: n,
                        disabled: d,
                        isFocused: s
                    })
                })
            }
        },
        539365: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuGroup: function() {
                    return o
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("389802"),
                l = n("721393");

            function o(e) {
                let {
                    contents: t,
                    label: n,
                    className: r,
                    color: o = "default"
                } = e;
                return 0 === t.length ? null : (0, i.jsxs)("div", {
                    "aria-label": n,
                    role: "group",
                    className: r,
                    children: [null != n ? (0, i.jsx)("div", {
                        className: s(l.groupLabel, a.MENU_ITEM_COLORS[o]),
                        children: n
                    }) : null, t]
                })
            }
        },
        426264: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuItem: function() {
                    return p
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("199285"),
                u = n("107728"),
                c = n("697917"),
                d = n("886074"),
                _ = n("772280"),
                E = n("389802"),
                f = n("721393");

            function p(e) {
                let {
                    color: t = "default",
                    label: n,
                    icon: s,
                    showIconFirst: p = !1,
                    imageUrl: h,
                    hint: S,
                    subtext: T,
                    hasSubmenu: I,
                    disabled: m,
                    isFocused: g,
                    menuItemProps: A,
                    action: C,
                    onClose: R,
                    onFocus: N,
                    className: v,
                    focusedClassName: O,
                    subMenuIconClassName: D,
                    dontCloseOnActionIfHoldingShiftKey: L,
                    iconProps: M,
                    sparkle: P
                } = e, b = r.useContext(u.OnMenuSelectContext), y = r.useRef(null), U = r.useCallback(e => {
                    if (null == C) return !1;
                    !(e.shiftKey && L) && R(), e.persist(), null == b || b(), requestAnimationFrame(() => C(e))
                }, [C, R, b, L]);
                return r.useEffect(() => {
                    g && ((0, c.ensureItemVisible)(y), null == N || N())
                }, [g, N]), (0, i.jsxs)(l.Clickable, {
                    innerRef: y,
                    className: a(f.item, f.labelContainer, E.MENU_ITEM_COLORS[t], v, {
                        [f.disabled]: m,
                        [f.focused]: g,
                        [null != O ? O : ""]: g
                    }),
                    onClick: m ? void 0 : U,
                    "aria-disabled": m,
                    ...A,
                    "data-menu-item": "true",
                    children: [p && null != s && (0, i.jsx)("div", {
                        className: f.iconContainerLeft,
                        children: (0, i.jsx)(s, {
                            ...M,
                            className: a(f.icon, null == M ? void 0 : M.className),
                            isFocused: g
                        })
                    }), (0, i.jsxs)("div", {
                        className: f.label,
                        children: [(0, o.renderSubnode)(n, e), null != T && (0, i.jsx)("div", {
                            className: f.subtext,
                            children: T
                        })]
                    }), null != S && (0, i.jsx)("div", {
                        className: f.hintContainer,
                        children: (0, o.renderSubnode)(S, e)
                    }), !p && null != s && (0, i.jsx)("div", {
                        className: f.iconContainer,
                        children: (0, i.jsx)(s, {
                            ...M,
                            className: a(f.icon, null == M ? void 0 : M.className),
                            isFocused: g
                        })
                    }), null != h && (0, i.jsx)("div", {
                        className: f.imageContainer,
                        children: (0, i.jsx)("img", {
                            className: f.image,
                            src: (0, o.renderSubnode)(h, e),
                            alt: ""
                        })
                    }), I && (0, i.jsxs)("div", {
                        className: f.iconContainer,
                        children: [(0, i.jsx)(_.default, {
                            className: a(f.caret, D)
                        }), P && (0, i.jsx)(d.default, {
                            className: f.sparkles
                        })]
                    })]
                })
            }
        },
        146155: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuRadioItem: function() {
                    return f
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("199285"),
                u = n("697917"),
                c = n("904276"),
                d = n("875436"),
                _ = n("389802"),
                E = n("721393");

            function f(e) {
                let {
                    color: t = "default",
                    label: n,
                    checked: s,
                    subtext: f,
                    disabled: p,
                    isFocused: h,
                    menuItemProps: S,
                    action: T
                } = e, I = r.useRef(null);
                return r.useEffect(() => {
                    h && (0, u.ensureItemVisible)(I)
                }, [h]), (0, i.jsxs)(l.Clickable, {
                    innerRef: I,
                    className: a(E.item, E.labelContainer, _.MENU_ITEM_COLORS[t], {
                        [E.disabled]: p,
                        [E.focused]: h
                    }),
                    onClick: p ? void 0 : T,
                    ...S,
                    "aria-checked": s,
                    "aria-disabled": p,
                    children: [(0, i.jsxs)("div", {
                        className: E.label,
                        children: [(0, o.renderSubnode)(n, e), null != f && (0, i.jsx)("div", {
                            className: E.subtext,
                            children: f
                        })]
                    }), (0, i.jsx)("div", {
                        className: E.iconContainer,
                        children: s ? (0, i.jsx)(d.default, {
                            className: E.icon,
                            background: E.radio,
                            foreground: E.radioSelection
                        }) : (0, i.jsx)(c.default, {
                            className: E.icon,
                            foreground: E.radio
                        })
                    })]
                })
            }
        },
        536864: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuSeparator: function() {
                    return s
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("721393");

            function s() {
                return (0, i.jsx)("div", {
                    role: "separator",
                    className: r.separator
                })
            }
        },
        8022: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuSubmenuItem: function() {
                    return d
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("222163"),
                o = n("697917"),
                u = n("670914"),
                c = n("721393");

            function d(e) {
                let {
                    subMenuClassName: t,
                    parentItem: n,
                    isFocused: s,
                    menuSubmenuProps: d,
                    renderSubmenu: _
                } = e, {
                    focusIndex: E,
                    isUsingKeyboardNavigation: f,
                    ...p
                } = d, h = r.useRef(null), S = r.useRef(null), T = r.useRef(null);
                return r.useLayoutEffect(() => {
                    var e;
                    s && ((0, o.ensureItemVisible)(h), null === (e = T.current) || void 0 === e || e.focus())
                }, [s]), (0, i.jsxs)("div", {
                    ref: h,
                    className: c.submenuContainer,
                    children: [(0, i.jsx)("div", {
                        ref: S
                    }), n, s ? (0, i.jsx)(l.ReferencePositionLayer, {
                        reference: S,
                        autoInvert: !0,
                        nudgeAlignIntoViewport: !0,
                        fixed: !0,
                        spacing: 4,
                        position: "right",
                        align: "top",
                        children: () => (0, i.jsx)("div", {
                            className: c.submenuPaddingContainer,
                            children: (0, i.jsx)("div", {
                                className: a(c.submenu, t),
                                ...p,
                                ref: T,
                                children: (0, i.jsx)(u.ScrollerThin, {
                                    className: c.scroller,
                                    children: _()
                                })
                            })
                        })
                    }) : null]
                })
            }
        },
        967541: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MenuSubmenuListItem: function() {
                    return u
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("222163"),
                a = n("697917"),
                l = n("124299"),
                o = n("721393");

            function u(e) {
                let {
                    parentItem: t,
                    isFocused: n,
                    menuSubmenuProps: u,
                    rows: c,
                    rowHeight: d,
                    onScroll: _,
                    listClassName: E
                } = e, f = r.useRef(null), p = r.useRef(null), h = r.useRef(null), S = r.useRef(null), {
                    isUsingKeyboardNavigation: T,
                    focusIndex: I,
                    ...m
                } = u;
                r.useLayoutEffect(() => {
                    var e;
                    n && ((0, a.ensureItemVisible)(f), null === (e = h.current) || void 0 === e || e.focus())
                }, [n]), r.useEffect(() => {
                    if (n && I >= 0 && T) {
                        var e;
                        null === (e = S.current) || void 0 === e || e.scrollRowIntoView(I)
                    }
                }, [n, T, I]);
                let g = r.useCallback(e => c[e], [c]);
                return (0, i.jsxs)("div", {
                    ref: f,
                    className: o.submenuContainer,
                    children: [(0, i.jsx)("div", {
                        ref: p
                    }), t, n ? (0, i.jsx)(s.ReferencePositionLayer, {
                        reference: p,
                        autoInvert: !0,
                        nudgeAlignIntoViewport: !0,
                        fixed: !0,
                        spacing: 4,
                        position: "right",
                        align: "top",
                        children: () => c.length > 0 && (0, i.jsx)("div", {
                            className: o.submenuPaddingContainer,
                            children: (0, i.jsx)("div", {
                                className: o.submenu,
                                ...m,
                                ref: h,
                                children: (0, i.jsx)(l.default, {
                                    ref: S,
                                    className: E,
                                    listPadding: [6, 0, 6, 8],
                                    onScroll: _,
                                    renderRow: g,
                                    rowCount: c.length,
                                    rowHeight: d
                                })
                            })
                        })
                    }) : null]
                })
            }
        },
        537011: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CheckboxItem: function() {
                    return i.MenuCheckboxItem
                },
                ControlItem: function() {
                    return r.MenuControlItem
                },
                CompositeControlItem: function() {
                    return s.MenuCompositeControlItem
                },
                CustomItem: function() {
                    return a.MenuCustomItem
                },
                Group: function() {
                    return l.MenuGroup
                },
                Item: function() {
                    return o.MenuItem
                },
                RadioItem: function() {
                    return u.MenuRadioItem
                },
                Separator: function() {
                    return c.MenuSeparator
                },
                SubmenuItem: function() {
                    return d.MenuSubmenuItem
                },
                SubmenuListItem: function() {
                    return _.MenuSubmenuListItem
                }
            });
            var i = n("964019"),
                r = n("412256"),
                s = n("922260"),
                a = n("916528"),
                l = n("539365"),
                o = n("426264"),
                u = n("146155"),
                c = n("536864"),
                d = n("8022"),
                _ = n("967541")
        },
        348891: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ConfirmModal: function() {
                    return d
                },
                DeclarativeConfirmModal: function() {
                    return _
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("271841"),
                o = n("605451"),
                u = n("314569"),
                c = n("700426");

            function d(e) {
                let t, n, {
                        header: s,
                        children: d,
                        confirmText: _,
                        cancelText: E,
                        className: f,
                        onConfirm: p,
                        onCancel: h,
                        onClose: S,
                        onCloseCallback: T,
                        bodyClassName: I,
                        transitionState: m,
                        loading: g = !1,
                        confirmButtonColor: A = l.Button.Colors.RED,
                        focusCancel: C = !1
                    } = e,
                    R = r.useRef(null);
                return r.useEffect(() => {
                    !C && setTimeout(() => {
                        var e;
                        return null === (e = R.current) || void 0 === e ? void 0 : e.focus()
                    }, 0)
                }, [C]), r.useLayoutEffect(() => () => null == T ? void 0 : T()), null != E && (t = (0, i.jsx)(l.Button, {
                    type: "button",
                    look: l.Button.Looks.LINK,
                    color: l.Button.Colors.PRIMARY,
                    disabled: g,
                    onClick: () => {
                        null == h || h(), S()
                    },
                    autoFocus: C,
                    children: E
                })), null != _ && (n = (0, i.jsx)(l.Button, {
                    buttonRef: R,
                    type: "submit",
                    color: A,
                    submitting: g,
                    onClick: async () => {
                        try {
                            await (null == p ? void 0 : p()), S()
                        } catch (e) {
                            throw e
                        }
                    },
                    autoFocus: !C,
                    children: _
                })), (0, i.jsxs)(u.ModalRoot, {
                    className: f,
                    transitionState: m,
                    children: [null != s ? (0, i.jsx)(u.ModalHeader, {
                        separator: !1,
                        children: (0, i.jsx)(o.Heading, {
                            variant: "heading-lg/semibold",
                            children: s
                        })
                    }) : null, (0, i.jsx)(u.ModalContent, {
                        className: a(c.content, I),
                        children: d
                    }), (0, i.jsxs)(u.ModalFooter, {
                        children: [n, t]
                    })]
                })
            }

            function _(e) {
                return (0, i.jsx)(u.Modal, {
                    onCloseRequest: e.dismissable ? e.onCancel : null,
                    renderModal: t => (0, i.jsx)(d, {
                        ...t,
                        ...e
                    })
                })
            }
        },
        314569: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Modal: function() {
                    return u
                }
            });
            var i = n("773670"),
                r = n("552473"),
                s = n.n(r),
                a = n("551042"),
                l = n("388495"),
                o = n("516256");

            function u(e) {
                let {
                    renderModal: t,
                    onCloseRequest: n,
                    onCloseCallback: r
                } = e, [o] = i.useState(() => s()), u = (0, l.useModalContext)();
                i.useLayoutEffect(() => ((0, a.openModal)(t, {
                    modalKey: o,
                    onCloseRequest: n,
                    onCloseCallback: r
                }, u), () => {
                    (0, a.closeModal)(o, u)
                }), []);
                let c = i.useRef(!0);
                return i.useLayoutEffect(() => {
                    !c.current && (0, a.updateModal)(o, t, n, r, u), c.current = !1
                }, [t, n]), null
            }
            n.es(o, t)
        },
        388495: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useModalContext: function() {
                    return g
                },
                Modals: function() {
                    return C
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("427964"),
                o = n.n(l),
                u = n("580279"),
                c = n("244201"),
                d = n("892974"),
                _ = n("983782"),
                E = n("668596"),
                f = n("659500"),
                p = n("551042"),
                h = n("625611"),
                S = n("49111"),
                T = n("308632");
            let I = [_.default, E.default];
            class m extends r.PureComponent {
                render() {
                    let {
                        render: e,
                        LayerComponent: t,
                        isTopModal: n,
                        instant: r
                    } = this.props, {
                        transitionState: s
                    } = this.state;
                    return (s === h.ModalTransitionState.ENTERING || s === h.ModalTransitionState.ENTERED) && !n && (s = h.ModalTransitionState.HIDDEN), r && (s = h.ModalTransitionState.ENTERED), (0, i.jsx)(t, {
                        children: (0, i.jsx)("div", {
                            className: a(T.layer, !n && T.hidden),
                            children: e({
                                transitionState: s,
                                onClose: this.close
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        transitionState: null
                    }, this.componentWillAppear = e => {
                        this.componentWillEnter(e)
                    }, this.componentWillEnter = e => {
                        let {
                            instant: t
                        } = this.props;
                        this.setState({
                            transitionState: h.ModalTransitionState.ENTERING
                        }), setTimeout(() => {
                            this.setState({
                                transitionState: h.ModalTransitionState.ENTERED
                            }), e()
                        }, t ? 0 : h.TRANSITION_DURATION)
                    }, this.componentWillLeave = e => {
                        let {
                            instant: t
                        } = this.props;
                        this.setState({
                            transitionState: h.ModalTransitionState.EXITING
                        }), setTimeout(() => {
                            this.setState({
                                transitionState: h.ModalTransitionState.EXITED
                            }), e()
                        }, t ? 0 : h.TRANSITION_DURATION)
                    }, this.close = () => new Promise(e => {
                        this.props.closeModal(this.props.modalKey), setTimeout(() => e(), h.TRANSITION_DURATION)
                    })
                }
            }

            function g() {
                return (0, p.modalContextFromAppContext)((0, c.useAppContext)())
            }
            let A = [];

            function C() {
                let e = g(),
                    t = (0, p.useModalsStore)(t => void 0 !== t[e] ? t[e] : A),
                    n = r.useRef();
                r.useLayoutEffect(() => {
                    n.current = t[t.length - 1]
                }, [t]);
                let s = t.length > 0;
                r.useLayoutEffect(() => {
                    if (!s) return;
                    let e = () => {
                        let e = n.current;
                        null != e && null != e.onCloseRequest && e.onCloseRequest()
                    };
                    return f.ComponentDispatch.subscribe(S.ComponentActions.MODAL_CLOSE, e), () => {
                        f.ComponentDispatch.unsubscribe(S.ComponentActions.MODAL_CLOSE, e)
                    }
                }, [s]);
                let a = r.useCallback(() => {
                        let e = n.current;
                        null != e && null != e.onCloseRequest && e.onCloseRequest()
                    }, []),
                    l = r.useCallback(t => {
                        (0, p.closeModal)(t, e)
                    }, [e]),
                    c = I.map(e => t.some(t => t.Layer === e || null == t.Layer && e === _.default));
                return (0, i.jsxs)(u.default, {
                    component: r.Fragment,
                    children: [I.map((e, n) => {
                        let r = o.findLast(t, t => t.Layer === e || null == t.Layer && e === _.default);
                        return (0, i.jsx)(d.default, {
                            isVisible: c[n],
                            backdropStyle: d.BackdropStyles.DARK,
                            onClose: a,
                            LayerComponent: e,
                            backdropInstant: null == r ? void 0 : r.instant
                        }, "layer-".concat(n))
                    }), t.map((e, n) => {
                        let {
                            key: r,
                            Layer: s,
                            render: a,
                            instant: o
                        } = e;
                        return (0, i.jsx)(m, {
                            modalKey: r,
                            LayerComponent: null != s ? s : _.default,
                            isTopModal: n === t.length - 1,
                            render: a,
                            closeModal: l,
                            instant: o
                        }, r)
                    })]
                })
            }
        },
        21872: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PaginationTypes: function() {
                    return r
                },
                PaginationController: function() {
                    return o
                }
            });
            var i, r, s = n("773670"),
                a = n("427964"),
                l = n.n(a);
            (i = r || (r = {})).PAGE = "PAGE", i.GAP = "GAP", i.BACK = "BACK", i.NEXT = "NEXT";
            class o extends s.PureComponent {
                getNeighborBounds() {
                    let {
                        totalPageCount: e,
                        maxVisiblePages: t,
                        selectedPage: n
                    } = this.props, i = Math.ceil(t / 2), r = Math.floor(t / 2), s = [1, e];
                    s = n <= i ? [1, t] : n > e - r ? [e - t + 1, e] : [n - i + 1, n + r];
                    let [a, l] = s;
                    return [Math.max(a, 1), Math.min(l, e)]
                }
                getPageList() {
                    let {
                        totalPageCount: e,
                        selectedPage: t,
                        hideMaxPage: n
                    } = this.props, [i, s] = this.getNeighborBounds(), a = {
                        type: r.BACK,
                        key: "back",
                        disabled: 1 === t,
                        selected: !1,
                        navigateToPage: this.handleBackward
                    }, o = {
                        type: r.NEXT,
                        key: "next",
                        disabled: t === e,
                        selected: !1,
                        navigateToPage: this.handleForward
                    }, u = [], c = [];
                    i > 1 && (u = [{
                        type: r.PAGE,
                        key: "page-1",
                        targetPage: 1,
                        navigateToPage: () => this.handleJump(1)
                    }, {
                        type: r.GAP,
                        key: "left-gap"
                    }], i += 2), s < e && (c = [{
                        type: r.GAP,
                        key: "right-gap"
                    }], !n && c.push({
                        type: r.PAGE,
                        key: "page-".concat(e),
                        targetPage: e,
                        navigateToPage: () => this.handleJump(e)
                    }), s -= 2);
                    let d = l.range(i, s + 1).map(e => ({
                        type: r.PAGE,
                        key: "page-".concat(e),
                        targetPage: e,
                        selected: e === t,
                        disabled: !1,
                        navigateToPage: () => this.handleJump(e)
                    }));
                    return [a, ...u, ...d, ...c, o]
                }
                render() {
                    let {
                        totalPageCount: e,
                        children: t
                    } = this.props, n = this.getPageList();
                    return t({
                        pages: n,
                        hasMultiplePages: e > 1
                    })
                }
                constructor(...e) {
                    super(...e), this.changePageTo = e => {
                        let {
                            selectedPage: t,
                            onPageChange: n
                        } = this.props;
                        t !== e && null != n && n(e)
                    }, this.handleForward = () => {
                        this.changePageTo(Math.min(this.props.selectedPage + 1, this.props.totalPageCount))
                    }, this.handleBackward = () => {
                        this.changePageTo(Math.max(this.props.selectedPage - 1, 1))
                    }, this.handleJump = e => {
                        this.changePageTo(e)
                    }
                }
            }
            o.defaultProps = {
                maxVisiblePages: 9,
                hideMaxPage: !1
            }
        },
        125814: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Paginator: function() {
                    return S
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("271841"),
                o = n("227645"),
                u = n("605451"),
                c = n("240353"),
                d = n("980428"),
                _ = n("772280"),
                E = n("21872"),
                f = n("782340"),
                p = n("233396");

            function h(e) {
                let {
                    page: t,
                    totalPageCount: n,
                    disabled: s,
                    onPageChange: l
                } = e, [d, _] = r.useState(!1), [E, f] = r.useState(null), h = null != E && E >= 1 && E <= n;
                return s ? (0, i.jsx)(u.Heading, {
                    className: p.gap,
                    "aria-hidden": !0,
                    variant: "heading-sm/semibold",
                    children: "…"
                }, t.key) : d ? (0, i.jsx)(c.TextInput, {
                    autoFocus: !0,
                    className: p.jumpToPageInlineInput,
                    size: c.TextInput.Sizes.MINI,
                    value: null == E ? "" : "".concat(E),
                    onChange: e => {
                        let t = parseInt(e);
                        if ("" === e || isNaN(t)) {
                            f(null);
                            return
                        }
                        f(t)
                    },
                    onBlur: () => {
                        _(!1), f(null)
                    },
                    onKeyPress: e => {
                        "Enter" === e.key && null != E && h && (l(E), _(!1), f(null))
                    },
                    disabled: s
                }, t.key) : (0, i.jsx)(o.Clickable, {
                    onClick: () => _(!0),
                    children: (0, i.jsx)(u.Heading, {
                        className: a(p.roundButton, p.gap),
                        "aria-hidden": !0,
                        variant: "heading-sm/semibold",
                        children: "…"
                    })
                }, t.key)
            }

            function S(e) {
                let {
                    currentPage: t,
                    totalCount: n,
                    pageSize: r,
                    maxVisiblePages: s,
                    disablePaginationGap: u,
                    onPageChange: c,
                    hideMaxPage: S = !1,
                    className: T
                } = e, I = Math.ceil(n / r);
                return (0, i.jsx)(E.PaginationController, {
                    totalPageCount: I,
                    selectedPage: t,
                    maxVisiblePages: s,
                    hideMaxPage: S,
                    onPageChange: function(e) {
                        null != c && c(e)
                    },
                    children: function(e) {
                        let {
                            pages: t,
                            hasMultiplePages: n
                        } = e;
                        return n ? (0, i.jsx)("div", {
                            className: a(p.pageControlContainer, T),
                            children: (0, i.jsx)("nav", {
                                className: p.pageControl,
                                children: t.map(e => {
                                    var t, n;
                                    switch (e.type) {
                                        case E.PaginationTypes.BACK:
                                            return function(e) {
                                                let {
                                                    key: t,
                                                    disabled: n,
                                                    navigateToPage: r
                                                } = e;
                                                return (0, i.jsxs)(l.Button, {
                                                    className: p.endButton,
                                                    innerClassName: p.endButtonInner,
                                                    look: l.Button.Looks.BLANK,
                                                    color: l.Button.Colors.TRANSPARENT,
                                                    onClick: r,
                                                    disabled: n,
                                                    rel: "prev",
                                                    children: [(0, i.jsx)(d.default, {
                                                        className: p.iconCaret,
                                                        "aria-hidden": !0
                                                    }), (0, i.jsx)("span", {
                                                        children: f.default.Messages.BACK
                                                    })]
                                                }, t)
                                            }(e);
                                        case E.PaginationTypes.PAGE:
                                            ;
                                            return t = e, (0, i.jsx)(o.Clickable, {
                                                className: a(p.roundButton, {
                                                    [p.activeButton]: t.selected
                                                }),
                                                onClick: t.selected ? void 0 : t.navigateToPage,
                                                "aria-label": f.default.Messages.PAGINATION_PAGE_LABEL.format({
                                                    pageNumber: t.targetPage
                                                }),
                                                "aria-current": t.selected ? "page" : void 0,
                                                children: (0, i.jsx)("span", {
                                                    children: t.targetPage
                                                })
                                            }, t.key);
                                        case E.PaginationTypes.GAP:
                                            ;
                                            return n = e, (0, i.jsx)(h, {
                                                page: n,
                                                totalPageCount: I,
                                                disabled: !!u,
                                                onPageChange: c
                                            }, n.key);
                                        case E.PaginationTypes.NEXT:
                                            return function(e) {
                                                let {
                                                    key: t,
                                                    disabled: n,
                                                    navigateToPage: r
                                                } = e;
                                                return (0, i.jsxs)(l.Button, {
                                                    className: p.endButton,
                                                    innerClassName: p.endButtonInner,
                                                    look: l.Button.Looks.BLANK,
                                                    color: l.Button.Colors.TRANSPARENT,
                                                    onClick: r,
                                                    disabled: n,
                                                    rel: "next",
                                                    children: [(0, i.jsx)("span", {
                                                        children: f.default.Messages.NEXT
                                                    }), (0, i.jsx)(_.default, {
                                                        className: p.iconCaret,
                                                        "aria-hidden": !0
                                                    })]
                                                }, t)
                                            }(e);
                                        default:
                                            return null
                                    }
                                })
                            })
                        }) : null
                    }
                })
            }
        },
        533785: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BasePopout: function() {
                    return g
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("552473"),
                a = n.n(s),
                l = n("865768"),
                o = n.n(l),
                u = n("117064"),
                c = n("638800"),
                d = n("860226"),
                _ = n("228256"),
                E = n("222163"),
                f = n("551042"),
                p = n("452453"),
                h = n("244201"),
                S = n("983782"),
                T = n("678904"),
                I = n("49111");
            let m = new Set(["Spacebar", " ", "Enter"]);
            class g extends r.Component {
                shouldShowPopout(e, t) {
                    return null != e.shouldShow ? e.shouldShow : t.shouldShowPopout
                }
                componentDidMount() {
                    this.shouldShowPopout(this.props, this.state) && this.setupShowPopout()
                }
                componentDidUpdate(e, t) {
                    e.shouldShow, this.props.shouldShow;
                    let n = this.shouldShowPopout(this.props, this.state);
                    if ((this.shouldShowPopout(e, t) !== n || t.isLoading !== this.state.isLoading) && (n ? this.setupShowPopout() : this.unsubscribe()), this.props.closeOnScroll !== e.closeOnScroll) {
                        var i, r;
                        let e = this.getDomElement();
                        this.props.closeOnScroll ? null === (i = e.ownerDocument) || void 0 === i || i.addEventListener("scroll", this.close, !0) : null === (r = e.ownerDocument) || void 0 === r || r.removeEventListener("scroll", this.close, !0)
                    }
                }
                getDomElement() {
                    let e = o.findDOMNode(this);
                    if (!(0, u.isElement)(e)) throw Error("Popout cannot find DOM node");
                    return e
                }
                setupShowPopout() {
                    var e, t, n;
                    let i = this.getDomElement();
                    null === (e = i.ownerDocument) || void 0 === e || e.addEventListener("mousedown", this.handleDocumentMouseDown, !0), null === (t = i.ownerDocument) || void 0 === t || t.addEventListener("mouseup", this.handleDocumentMouseUp, !0), this.props.closeOnScroll && (null === (n = i.ownerDocument) || void 0 === n || n.addEventListener("scroll", this.close, !0)), this.context.windowDispatch.subscribe(I.ComponentActions.POPOUT_CLOSE, this.close), this.domElementRef.current = i, this.isValidClickStart = !1, this.forceUpdate()
                }
                unsubscribe() {
                    var e, t, n, i;
                    let r = this.domElementRef.current;
                    null != r && (null === (t = r.ownerDocument) || void 0 === t || t.removeEventListener("mousedown", this.handleDocumentMouseDown, !0), null === (n = r.ownerDocument) || void 0 === n || n.removeEventListener("mouseup", this.handleDocumentMouseUp, !0), null === (i = r.ownerDocument) || void 0 === i || i.removeEventListener("scroll", this.close, !0)), this.context.windowDispatch.unsubscribe(I.ComponentActions.POPOUT_CLOSE, this.close), null === (e = this.resizeObserver) || void 0 === e || e.disconnect()
                }
                componentWillUnmount() {
                    this.unsubscribe(), this.domElementRef.current = null, this.loadingTimeout.stop(), this.validClickTimeout.stop()
                }
                render() {
                    let {
                        children: e,
                        useMouseEnter: t
                    } = this.props, n = this.shouldShowPopout(this.props, this.state);
                    return (0, i.jsxs)(r.Fragment, {
                        children: [e({
                            onMouseDown: this.handlePreload,
                            ...t ? {
                                onMouseEnter: this.handleMouseEnter
                            } : {},
                            onKeyDown: this.handleKeyboardPreload,
                            onClick: this.handleClick,
                            "aria-controls": n ? this.popoutId : void 0,
                            "aria-expanded": n
                        }, {
                            isShown: n,
                            position: this.state.renderedPosition
                        }), (0, i.jsx)(d.HeadingLevel, {
                            forceLevel: 2,
                            children: this.renderLayer()
                        })]
                    })
                }
                renderLayer() {
                    if (!this.shouldShowPopout(this.props, this.state) || null == this.domElementRef.current) return null;
                    let {
                        position: e,
                        align: t,
                        nudgeAlignIntoViewport: n,
                        spacing: r,
                        autoInvert: s,
                        fixed: a,
                        positionKey: l,
                        disablePointerEvents: o,
                        layerContext: u
                    } = this.props, {
                        resizeKey: c,
                        isLoading: d,
                        shouldShowLoadingState: f
                    } = this.state;
                    return d && !f ? null : (0, i.jsx)(_.Layer, {
                        layerContext: null != u ? u : S.appLayerContext,
                        children: (0, i.jsx)(E.ReferencePositionLayer, {
                            ref: this.layerRef,
                            onMount: this.handlePopoutShow,
                            onUnmount: this.handlePopoutHide,
                            id: this.popoutId,
                            reference: this.domElementRef,
                            position: e,
                            align: t,
                            nudgeAlignIntoViewport: n,
                            spacing: r,
                            autoInvert: s,
                            fixed: a,
                            positionKey: null != l ? l : String(c),
                            disablePointerEvents: o,
                            onPositionChange: this.handlePopoutPositionChange,
                            children: this.renderPopout
                        })
                    })
                }
                toggleShow(e) {
                    this.state.shouldShowPopout !== e && this.setState({
                        shouldShowPopout: e
                    })
                }
                constructor(...e) {
                    super(...e), this.domElementRef = r.createRef(), this.layerRef = r.createRef(), this.popoutRef = r.createRef(), this.popoutId = "popout_".concat(a()), this.loadingTimeout = new c.Timeout, this.validClickTimeout = new c.Timeout, this.isValidClickStart = !1, this.state = {
                        renderedPosition: this.props.position,
                        shouldShowPopout: !1,
                        shouldShowLoadingState: !1,
                        isLoading: !1,
                        resizeKey: 0
                    }, this.handlePopoutShow = () => {
                        this.context.windowDispatch.dispatch(I.ComponentActions.POPOUT_SHOW)
                    }, this.handlePopoutHide = () => {
                        this.context.windowDispatch.dispatch(I.ComponentActions.POPOUT_HIDE)
                    }, this.handleSetPopoutRef = e => {
                        var t;
                        let n = null == e ? void 0 : e.ownerDocument.defaultView;
                        null != e && null != n && (this.popoutRef.current = e, null === (t = this.resizeObserver) || void 0 === t || t.disconnect(), this.resizeObserver = new n.ResizeObserver(() => {
                            o.flushSync(() => {
                                this.setState({
                                    resizeKey: this.state.resizeKey + 1
                                })
                            })
                        }), this.resizeObserver.observe(e))
                    }, this.renderPopout = (e, t) => {
                        let {
                            renderPopout: n
                        } = this.props;
                        return this.state.isLoading ? this.props.loadingComponent : n({
                            ...e,
                            updatePosition: t,
                            closePopout: this.close,
                            setPopoutRef: this.handleSetPopoutRef
                        })
                    }, this.close = () => {
                        let {
                            onRequestClose: e,
                            shouldShow: t
                        } = this.props;
                        null == e || e(), null == t && this.toggleShow(!1)
                    }, this.handleClick = e => {
                        let {
                            onShiftClick: t,
                            shouldShow: n,
                            onRequestOpen: i,
                            onRequestClose: r
                        } = this.props;
                        if (e.shiftKey && null != t) {
                            t(e);
                            return
                        }
                        let s = null != n,
                            a = s ? n : this.state.shouldShowPopout;
                        a ? null == r || r() : null == i || i(), !s && this.setState(e => {
                            let {
                                shouldShowPopout: t
                            } = e;
                            return {
                                shouldShowPopout: !t
                            }
                        })
                    }, this.handleMouseEnter = () => {
                        let {
                            onRequestOpen: e
                        } = this.props;
                        null == e || e(), this.setState({
                            shouldShowPopout: !0
                        })
                    }, this.handlePreload = async () => {
                        let {
                            preload: e
                        } = this.props;
                        if (null != e) {
                            this.setState({
                                isLoading: !0
                            }), this.loadingTimeout.start(250, () => this.setState({
                                shouldShowLoadingState: !0
                            }), !1);
                            try {
                                await e()
                            } finally {
                                this.setState({
                                    isLoading: !1
                                })
                            }
                        }
                    }, this.handleKeyboardPreload = e => {
                        m.has(e.key) && this.handlePreload()
                    }, this.handleDocumentMouseDown = e => {
                        let {
                            ignoreModalClicks: t
                        } = this.props, n = e.target, i = this.domElementRef.current;
                        if (null != i) {
                            if ((0, E.referencePortalAwareContains)(i, n) || null != n.closest("." + p.ContextMenuClassName) || t && (0, f.hasAnyModalOpen)()) return;
                            this.isValidClickStart = !0
                        }
                    }, this.handleDocumentMouseUp = () => {
                        this.isValidClickStart && (this.isValidClickStart = !1, this.close())
                    }, this.handlePopoutPositionChange = e => {
                        this.setState({
                            renderedPosition: e
                        })
                    }
                }
            }
            g.defaultProps = {
                autoInvert: !1,
                nudgeAlignIntoViewport: !1,
                spacing: 0,
                loadingComponent: (0, i.jsx)(T.LoadingPopout, {})
            }, g.contextType = h.default
        },
        678904: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                LoadingPopout: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("130969"),
                s = n("242670"),
                a = n("274130");

            function l() {
                return (0, i.jsx)(r.Dialog, {
                    className: a.loadingPopout,
                    children: (0, i.jsx)(s.Spinner, {
                        type: s.SpinnerTypes.SPINNING_CIRCLE
                    })
                })
            }
        },
        442761: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Popout: function() {
                    return _
                },
                LazyPopout: function() {
                    return E
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("242670"),
                o = n("533785"),
                u = n("276335"),
                c = n("533406");
            (i = r || (r = {})).NONE = "1", i.TRANSLATE = "2", i.SCALE = "3", i.FADE = "4";
            let d = Object.freeze({
                [r.TRANSLATE]: u.PopoutCSSAnimator.Types.TRANSLATE,
                [r.SCALE]: u.PopoutCSSAnimator.Types.SCALE,
                [r.FADE]: u.PopoutCSSAnimator.Types.FADE
            });
            class _ extends a.Component {
                render() {
                    let {
                        children: e,
                        shouldShow: t,
                        position: n,
                        onRequestOpen: i,
                        onRequestClose: r,
                        align: a,
                        autoInvert: l,
                        fixed: u,
                        nudgeAlignIntoViewport: c,
                        spacing: d,
                        onShiftClick: _,
                        positionKey: E,
                        preload: f,
                        disablePointerEvents: p,
                        ignoreModalClicks: h,
                        closeOnScroll: S,
                        useMouseEnter: T,
                        renderPopout: I,
                        layerContext: m
                    } = this.props;
                    return (0, s.jsx)(o.BasePopout, {
                        ref: this.ref,
                        preload: f,
                        position: n,
                        align: null != a ? a : function(e) {
                            switch (e) {
                                case "top":
                                case "bottom":
                                    return "left";
                                case "left":
                                case "right":
                                    return "top";
                                case "center":
                                case "window_center":
                                    return "center"
                            }
                            throw Error("Unexpected position: ".concat(e))
                        }(n),
                        autoInvert: l,
                        fixed: u,
                        nudgeAlignIntoViewport: c,
                        renderPopout: this.renderPopout,
                        spacing: d,
                        shouldShow: null != I && t,
                        onRequestOpen: i,
                        onRequestClose: r,
                        onShiftClick: _,
                        positionKey: E,
                        disablePointerEvents: p,
                        ignoreModalClicks: h,
                        closeOnScroll: S,
                        useMouseEnter: T,
                        layerContext: m,
                        children: e
                    })
                }
                constructor(...e) {
                    super(...e), this.ref = a.createRef(), this.renderPopout = e => {
                        let {
                            renderPopout: t,
                            animation: n,
                            animationPosition: i
                        } = this.props;
                        switch (null != i && null != e.position && (e.position = i), n) {
                            case r.TRANSLATE:
                            case r.SCALE:
                            case r.FADE:
                                return (0, s.jsx)(u.PopoutCSSAnimator, {
                                    position: e.position,
                                    type: d[n],
                                    children: t(e)
                                });
                            case r.NONE:
                                return t(e)
                        }
                        throw Error("Unsupported animation config: ".concat(JSON.stringify(n)))
                    }
                }
            }

            function E(e) {
                let {
                    renderPopout: t,
                    ...n
                } = e, i = a.useRef(null), [r, o] = a.useState(0);

                function u() {
                    return E(), (0, s.jsx)(s.Fragment, {})
                }
                a.useLayoutEffect(() => {
                    if (r > 0) {
                        var e, t, n, s, a;
                        null === (a = i.current) || void 0 === a || null === (s = a.ref) || void 0 === s || null === (n = s.current) || void 0 === n || null === (t = n.layerRef) || void 0 === t || null === (e = t.current) || void 0 === e || e.updatePosition()
                    }
                }, [r]), a.useEffect(() => {
                    let e = 20 + 20 * Math.random(),
                        n = setTimeout(t, e);
                    return () => clearTimeout(n)
                }, []);
                let d = a.useRef(!1);
                async function E() {
                    if (!d.current) {
                        d.current = !0;
                        let e = setTimeout(() => {
                                h(() => f), o(e => e + 1)
                            }, 300),
                            n = await t();
                        h(() => n), o(e => e + 1), clearTimeout(e)
                    }
                }

                function f() {
                    var e, t, n, r;
                    let a = null === (r = i.current) || void 0 === r ? void 0 : null === (n = r.ref) || void 0 === n ? void 0 : null === (t = n.current) || void 0 === t ? void 0 : null === (e = t.domElementRef) || void 0 === e ? void 0 : e.current,
                        o = Math.max(100, null == a ? 100 : a.offsetWidth - 20);
                    return (0, s.jsx)("div", {
                        className: c.loader,
                        style: {
                            width: o
                        },
                        children: (0, s.jsx)(l.Spinner, {})
                    })
                }
                let [p, h] = a.useState(() => u);
                return a.useEffect(() => {
                    d.current ? t().then(e => {
                        h(() => e), o(e => e + 1)
                    }) : h(u)
                }, [t]), (0, s.jsx)(_, {
                    ref: i,
                    ...n,
                    renderPopout: p
                })
            }
            _.Animation = r, _.defaultProps = {
                position: "right",
                autoInvert: !0,
                nudgeAlignIntoViewport: !0,
                spacing: 8,
                animation: r.TRANSLATE,
                positionKey: void 0
            }, E.Animation = r
        },
        276335: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PopoutCSSAnimator: function() {
                    return f
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("638800"),
                c = n("413197"),
                d = n("50023");
            (i = r || (r = {}))[i.TRANSLATE = 1] = "TRANSLATE", i[i.SCALE = 2] = "SCALE", i[i.FADE = 3] = "FADE";
            let _ = Object.freeze({
                    [r.TRANSLATE]: d.translate,
                    [r.SCALE]: d.scale,
                    [r.FADE]: d.fade
                }),
                E = Object.freeze({
                    top: d.animatorTop,
                    bottom: d.animatorBottom,
                    left: d.animatorLeft,
                    right: d.animatorRight,
                    center: d.animatorCenter,
                    window_center: d.animatorCenter
                });

            function f(e) {
                let {
                    position: t,
                    type: n,
                    children: i
                } = e, {
                    reducedMotion: l
                } = a.useContext(c.AccessibilityPreferencesContext), f = l.enabled ? r.FADE : n, [p, h] = a.useState(null != t), [S] = a.useState(() => new u.Timeout);
                return a.useEffect(() => () => S.stop(), [S]), a.useEffect(() => {
                    null != t && S.start(10, () => h(!0))
                }, [t, S]), (0, s.jsx)("div", {
                    className: o(null != t ? E[t] : null, {
                        [_[f]]: null != t,
                        [d.didRender]: p
                    }),
                    children: i
                })
            }
            f.Types = r
        },
        694982: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PopoutList: function() {
                    return p
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("130969"),
                o = n("370373"),
                u = n("810567"),
                c = n("529000"),
                d = n("963846");
            let _ = () => (0, i.jsx)(o.FormDivider, {
                    className: d.divider
                }),
                E = e => {
                    let {
                        children: t
                    } = e;
                    return (0, i.jsx)("div", {
                        className: d.popoutListEmpty,
                        children: t
                    })
                };
            class f extends r.PureComponent {
                render() {
                    let {
                        className: e,
                        ...t
                    } = this.props;
                    return (0, i.jsx)(u.default, {
                        ...t,
                        className: a(d.popoutListInput, e)
                    })
                }
            }
            f.defaultProps = {
                autoFocus: !0
            };
            class p extends r.PureComponent {
                render() {
                    let {
                        className: e,
                        children: t
                    } = this.props;
                    return (0, i.jsx)(l.Dialog, {
                        className: a(d.popoutList, e),
                        "aria-label": this.props["aria-label"],
                        children: t
                    })
                }
            }
            p.SearchBar = f, p.Item = c.default, p.Divider = _, p.Empty = E
        },
        184456: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Progress: function() {
                    return _
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("912557"),
                c = n("311974");
            (i = r || (r = {})).XSMALL = "xsmall", i.SMALL = "small", i.LARGE = "large";
            let d = "indeterminate";

            function _(e) {
                let t, {
                        className: n,
                        percent: i,
                        size: l = r.SMALL,
                        foregroundColor: _ = u.default.unsafe_rawColors.BRAND_500.css,
                        backgroundColor: E = "var(--background-modifier-active)",
                        foregroundGradientColor: f,
                        animate: p = !0
                    } = e,
                    h = null != i ? i : 0;
                return t = null != f ? {
                    background: "linear-gradient(to right, ".concat(f[0], ", ").concat(f[1], ")")
                } : {
                    backgroundColor: _
                }, (0, s.jsx)("div", {
                    className: o(n, c.progress, c[l]),
                    style: {
                        backgroundColor: E
                    },
                    children: h !== d && "number" == typeof h ? (0, s.jsx)("div", {
                        className: o(c.progressBar, c[l], {
                            [c.animating]: p
                        }),
                        style: {
                            transform: "translate3d(".concat(Math.min(Math.max(0, h), 100) - 100, "%, 0, 0)"),
                            ...t
                        }
                    }) : (0, s.jsxs)(a.Fragment, {
                        children: [(0, s.jsx)("div", {
                            className: o(c.indeterminateBar1, c[l], {
                                [c.animating]: p
                            }),
                            style: t
                        }), (0, s.jsx)("div", {
                            className: o(c.indeterminateBar2, c[l], {
                                [c.animating]: p
                            }),
                            style: t
                        })]
                    })
                })
            }
            _.Sizes = r, _.INDETERMINATE = d
        },
        852566: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ProgressCircle: function() {
                    return u
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("380416");
            let o = Object.freeze({
                SMALL: 1,
                MEDIUM: 2,
                LARGE: 4
            });
            class u extends r.Component {
                renderCircle() {
                    let {
                        strokeSize: e,
                        percent: t,
                        colorOverride: n,
                        background: r
                    } = this.props, s = Math.min(Math.max(t, 0), 100), o = (20 - e) / 2, u = o * Math.PI * 2;
                    return (0, i.jsxs)("svg", {
                        viewBox: "0 0 ".concat(20, " ").concat(20),
                        className: l.circle,
                        children: [(0, i.jsx)("circle", {
                            className: l.circleBackgroundAlt,
                            cx: 10,
                            cy: 10,
                            r: 10
                        }), (0, i.jsx)("circle", {
                            className: a(l.circleBackground, r),
                            cx: 10,
                            cy: 10,
                            r: (20 - 2 * e) / 2
                        }), (0, i.jsx)("circle", {
                            className: l.circleProgress,
                            cx: 10,
                            cy: 10,
                            r: o,
                            strokeWidth: "".concat(e, "px"),
                            strokeLinecap: "round",
                            transform: "rotate(-90 ".concat(10, " ").concat(10, ")"),
                            stroke: null != n ? n : "currentColor",
                            style: {
                                strokeDasharray: u,
                                strokeDashoffset: (1 - s / 100) * u
                            }
                        })]
                    })
                }
                render() {
                    let {
                        className: e,
                        children: t
                    } = this.props;
                    return (0, i.jsxs)("div", {
                        className: a(l.progressCircle, e),
                        children: [this.renderCircle(), null != t ? (0, i.jsx)("div", {
                            className: l.circleOverlay,
                            children: t
                        }) : null]
                    })
                }
            }
            u.StrokeSizes = o, u.defaultProps = {
                strokeSize: o.MEDIUM
            }
        },
        443083: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                StackedProgress: function() {
                    return _
                }
            });
            var i, r, s = n("920040");
            n("773670");
            var a = n("575482"),
                l = n.n(a),
                o = n("427964"),
                u = n.n(o),
                c = n("912557"),
                d = n("996487");

            function _(e) {
                let {
                    className: t,
                    percents: n,
                    size: i = r.SMALL,
                    foregroundColors: a = [c.default.unsafe_rawColors.BRAND_500.css],
                    backgroundColor: o = "var(--background-modifier-active)",
                    animate: _ = !0
                } = e, E = u.zip(n, a).map((e, t) => {
                    let n, [r, a] = e;
                    return n = Array.isArray(a) ? {
                        background: "linear-gradient(to right, ".concat(a[0], ", ").concat(a[1], ")")
                    } : {
                        backgroundColor: a
                    }, (0, s.jsx)("div", {
                        className: l(d.progressBar, d[i], {
                            [d.animating]: _
                        }),
                        style: {
                            transform: "translate3d(".concat(Math.min(Math.max(0, r), 100) - 100, "%, 0, 0)"),
                            ...n
                        }
                    }, t)
                }).reverse();
                return (0, s.jsx)("div", {
                    className: l(t, d.progress, d[i]),
                    style: {
                        backgroundColor: o
                    },
                    children: E
                })
            }(i = r || (r = {})).XSMALL = "xsmall", i.SMALL = "small", i.LARGE = "large", _.Sizes = r
        },
        105265: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useRadioGroup: function() {
                    return m
                },
                useRadioItem: function() {
                    return g
                },
                RadioGroup: function() {
                    return A
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("608230"),
                o = n("227645"),
                u = n("262448"),
                c = n("516826"),
                d = n("577776"),
                _ = n("414055"),
                E = n("904276"),
                f = n("875436"),
                p = n("49111"),
                h = n("510802");
            let S = {
                NOT_SET: "",
                NONE: "0",
                SMALL: "7px 10px",
                MEDIUM: "10px"
            };

            function T(e) {
                var t;
                let {
                    disabled: n,
                    checked: r,
                    option: s,
                    size: l,
                    onClick: u,
                    infoClassName: c,
                    titleClassName: _,
                    radioItemClassName: p,
                    radioItemIconClassName: S,
                    radioBarClassName: T,
                    hasSelection: I,
                    radioPosition: m = "left",
                    icon: g,
                    withTransparentBackground: A
                } = e, C = null !== (t = s.color) && void 0 !== t ? t : "", R = (0, i.jsxs)("div", {
                    className: S,
                    children: [r ? (0, i.jsx)(f.default, {
                        foreground: h.radioIconForeground
                    }) : (0, i.jsx)(E.default, {}), null != g && (0, i.jsx)(g, {
                        className: h.icon,
                        width: 24,
                        height: 24
                    })]
                });
                return (0, i.jsx)(o.Clickable, {
                    role: "radio",
                    "aria-checked": r,
                    onClick: n ? void 0 : u,
                    tabIndex: n || !r && I ? -1 : 0,
                    className: a(null != s.collapsibleContent ? h.collapsibleItem : h.item, {
                        [h.disabled]: n,
                        [h.itemFilled]: !A
                    }, p),
                    children: (0, i.jsxs)("div", {
                        style: {
                            "--radio-bar-accent-color": C,
                            padding: l
                        },
                        className: a(h.radioBar, {
                            [h.radioPositionLeft]: "left" === m,
                            [h.radioPositionRight]: "right" === m
                        }, T),
                        children: ["left" === m ? R : null, (0, i.jsxs)("div", {
                            className: a(h.info, c),
                            children: [(0, i.jsx)(d.Text, {
                                variant: "text-md/medium",
                                className: _,
                                color: "none",
                                children: s.name
                            }), null != s.desc && "" !== s.desc ? (0, i.jsx)(d.Text, {
                                color: "none",
                                variant: "text-sm/normal",
                                children: s.desc
                            }) : null]
                        }), "right" === m ? R : null]
                    })
                })
            }
            class I extends r.PureComponent {
                render() {
                    let {
                        checked: e,
                        disabled: t,
                        option: n,
                        size: r,
                        infoClassName: s,
                        hasSelection: a,
                        titleClassName: l,
                        radioItemClassName: o,
                        radioItemIconClassName: c,
                        radioBarClassName: d,
                        collapsibleClassName: E,
                        withTransparentBackground: f,
                        radioPosition: p
                    } = this.props, S = t || n.disabled, {
                        tooltipText: I,
                        tooltipPosition: m,
                        icon: g
                    } = n, A = null != n.collapsibleContent ? (0, i.jsx)(u.Collapsible, {
                        className: E,
                        isExpanded: e,
                        collapsibleContent: n.collapsibleContent,
                        children: t => {
                            let {
                                onClick: u
                            } = t;
                            return (0, i.jsx)(T, {
                                disabled: !!S,
                                checked: e,
                                hasSelection: a,
                                option: n,
                                onClick: e => {
                                    this.handleClick(e), u(e)
                                },
                                size: r,
                                infoClassName: s,
                                titleClassName: l,
                                radioItemClassName: o,
                                radioItemIconClassName: c,
                                radioBarClassName: d,
                                radioPosition: p,
                                icon: g,
                                withTransparentBackground: f
                            })
                        }
                    }) : (0, i.jsx)(T, {
                        disabled: !!S,
                        checked: e,
                        hasSelection: a,
                        option: n,
                        onClick: this.handleClick,
                        size: r,
                        infoClassName: s,
                        titleClassName: l,
                        radioItemClassName: o,
                        radioItemIconClassName: c,
                        radioBarClassName: d,
                        radioPosition: p,
                        icon: g,
                        withTransparentBackground: f
                    });
                    return null != I ? (0, i.jsx)(_.Tooltip, {
                        text: I,
                        position: null != m ? m : "top",
                        children: e => (0, i.jsx)("div", {
                            ...e,
                            className: h.tooltipWrapper,
                            children: A
                        })
                    }) : A
                }
                constructor(...e) {
                    super(...e), this.handleClick = e => {
                        e.preventDefault();
                        let {
                            onClick: t,
                            option: n
                        } = this.props;
                        return null == t ? void 0 : t(n)
                    }
                }
            }

            function m() {
                let {
                    orientation: e = "vertical",
                    isDisabled: t = !1,
                    labelledBy: n
                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, i = r.useRef(null), s = r.useMemo(() => (0, l.createFocusManager)({
                    getFocusableElements() {
                        let e = i.current;
                        if (null != e) {
                            let t = e.querySelectorAll('[role="radio"]');
                            return Array.from(t)
                        }
                        return []
                    },
                    getActiveElement() {
                        var e;
                        return null === (e = i.current) || void 0 === e ? void 0 : e.ownerDocument.activeElement
                    }
                }), []), a = r.useCallback(async t => {
                    let n = i.current;
                    if (null == n) return;
                    let r = "vertical" === e ? p.KeyboardKeys.ARROW_UP : p.KeyboardKeys.ARROW_LEFT,
                        a = "vertical" === e ? p.KeyboardKeys.ARROW_DOWN : p.KeyboardKeys.ARROW_RIGHT;
                    switch (t.which) {
                        case a: {
                            t.stopPropagation(), t.preventDefault();
                            let e = await s.getNextFocusableElement({
                                wrap: !0
                            });
                            return null == e ? void 0 : e.focus()
                        }
                        case r: {
                            t.stopPropagation(), t.preventDefault();
                            let e = await s.getPreviousFocusableElement({
                                wrap: !0
                            });
                            return null == e ? void 0 : e.focus()
                        }
                    }
                }, [s, e]);
                return {
                    role: "radiogroup",
                    onKeyDown: a,
                    ref: i,
                    "aria-labelledby": n,
                    "aria-orientation": e,
                    "aria-disabled": t
                }
            }

            function g(e) {
                let {
                    isSelected: t,
                    label: n
                } = e;
                return {
                    role: "radio",
                    tabIndex: t ? 0 : -1,
                    "aria-label": n,
                    "aria-checked": t
                }
            }

            function A(e) {
                let {
                    itemInfoClassName: t,
                    itemTitleClassName: n,
                    radioItemClassName: r,
                    collapsibleClassName: s,
                    className: a,
                    value: l = null,
                    size: o = S.MEDIUM,
                    radioPosition: u = "left",
                    onChange: d = p.NOOP,
                    disabled: _ = !1,
                    options: E = [],
                    "aria-labelledby": f,
                    orientation: h,
                    withTransparentBackground: T
                } = e, g = (0, c.useFormContext)(), A = m({
                    labelledBy: null != f ? f : g.titleId,
                    orientation: h,
                    isDisabled: _
                }), C = E.some(e => e.value === l);
                return (0, i.jsx)("div", {
                    ...A,
                    className: a,
                    children: E.map(e => (0, i.jsx)(I, {
                        hasSelection: C,
                        disabled: _,
                        checked: l === e.value,
                        option: e,
                        onClick: d,
                        radioPosition: u,
                        size: o,
                        infoClassName: t,
                        titleClassName: n,
                        radioItemClassName: r,
                        radioItemIconClassName: e.radioItemIconClassName,
                        collapsibleClassName: s,
                        radioBarClassName: e.radioBarClassName,
                        withTransparentBackground: T
                    }, e.value))
                })
            }
            I.defaultProps = {
                withTransparentBackground: !1,
                radioPosition: "left"
            }, A.Sizes = S
        },
        552241: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NameWithRoleAnchor: function() {
                    return _
                },
                NameWithRole: function() {
                    return E
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("498225"),
                l = n("459462"),
                o = n("206230"),
                u = n("236532"),
                c = n("714954");

            function d(e) {
                let {
                    roleStyle: t,
                    name: n,
                    color: r,
                    roleName: a,
                    dotAlignment: l = "left",
                    className: o
                } = e, d = "username" === t, _ = "dot" === t ? (0, i.jsx)(u.RoleDot, {
                    color: r,
                    name: a,
                    className: "left" === l ? c.roleDotLeft : c.roleDotRight
                }) : null;
                return (0, i.jsxs)("span", {
                    style: {
                        color: d && null != r ? r : void 0
                    },
                    className: s(o, {
                        [c.username]: d
                    }),
                    children: ["left" === l && _, n, "right" === l && _]
                })
            }

            function _(e) {
                let {
                    name: t,
                    color: n,
                    roleName: r,
                    dotAlignment: s,
                    className: u,
                    ...c
                } = e, _ = (0, a.useStateFromStores)([o.default], () => o.default.roleStyle), E = (0, i.jsx)(d, {
                    roleStyle: _,
                    name: t,
                    color: n,
                    roleName: r,
                    dotAlignment: s,
                    className: u
                });
                return (0, i.jsx)(l.Anchor, {
                    ...c,
                    children: E,
                    style: "username" === _ ? {
                        color: n
                    } : void 0
                })
            }

            function E(e) {
                let t = (0, a.useStateFromStores)([o.default], () => o.default.roleStyle);
                return (0, i.jsx)(d, {
                    ...e,
                    roleStyle: t
                })
            }
        },
        236532: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RoleDot: function() {
                    return u
                },
                RoleCircle: function() {
                    return c
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("414055"),
                l = n("59291");

            function o(e) {
                let {
                    color: t,
                    className: n,
                    background: r = !0
                } = e;
                return null == t ? null : (0, i.jsxs)("svg", {
                    className: s(l.svg, n),
                    viewBox: "0 0 20 20",
                    fill: "none",
                    children: [r && (0, i.jsx)("path", {
                        className: l.background,
                        d: "M0 4C0 1.79086 1.79086 0 4 0H16C18.2091 0 20 1.79086 20 4V16C20 18.2091 18.2091 20 16 20H4C1.79086 20 0 18.2091 0 16V4Z"
                    }), (0, i.jsx)("circle", {
                        className: l.dotBorderBase,
                        cx: "10",
                        cy: "10",
                        r: "6"
                    }), (0, i.jsx)("circle", {
                        className: l.dotBorderColor,
                        cx: "10",
                        cy: "10",
                        r: "6",
                        fill: t
                    }), (0, i.jsx)("circle", {
                        className: l.dot,
                        cx: "10",
                        cy: "10",
                        r: "5",
                        fill: t
                    })]
                })
            }

            function u(e) {
                let {
                    color: t,
                    name: n,
                    tooltip: r = !0
                } = e;
                return null == t ? null : r ? (0, i.jsx)(a.Tooltip, {
                    text: n,
                    children: t => (0, i.jsx)("span", {
                        ...t,
                        "aria-hidden": !0,
                        children: (0, i.jsx)(o, {
                            ...e
                        })
                    })
                }) : (0, i.jsx)(o, {
                    ...e
                })
            }

            function c(e) {
                let {
                    color: t,
                    className: n
                } = e;
                return null == t ? null : (0, i.jsx)("span", {
                    className: s(l.roleCircle, n),
                    style: {
                        backgroundColor: t
                    }
                })
            }
        },
        617657: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PinToBottomScrollerAuto: function() {
                    return u
                }
            });
            var i, r = n("436961"),
                s = n("575482"),
                a = n.n(s),
                l = n("211009"),
                o = n("394325");
            let u = (0, l.createManagedReactiveScroller)(a(o.auto, o.disableScrollAnchor), null !== (i = window.ResizeObserver) && void 0 !== i ? i : r.ResizeObserver)
        },
        670914: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ScrollerThin: function() {
                    return s
                },
                ScrollerAuto: function() {
                    return a
                },
                ScrollerNone: function() {
                    return l
                }
            });
            var i = n("256023"),
                r = n("394325");
            let s = (0, i.createScroller)(r.thin, r.fade),
                a = (0, i.createScroller)(r.auto, r.fade),
                l = (0, i.createScroller)(r.none, r.fade)
        },
        211009: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createManagedReactiveScroller: function() {
                    return c
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("718776"),
                o = n("462977"),
                u = n("394325");

            function c(e, t) {
                let n = new Map,
                    s = new t(e => {
                        e.forEach(e => {
                            var t;
                            let {
                                target: i
                            } = e;
                            null === (t = n.get(i)) || void 0 === t || t(e)
                        })
                    });
                return r.forwardRef(function(t, c) {
                    let {
                        children: d,
                        className: _,
                        onResize: E,
                        contentClassName: f,
                        onScroll: p,
                        dir: h = "ltr",
                        fade: S = !1,
                        customTheme: T = !1,
                        style: I,
                        ...m
                    } = t, g = r.useRef(null), A = r.useRef(null), [C, R] = r.useState(!1), {
                        scrollerRef: N,
                        getScrollerState: v
                    } = (0, o.useUncachedScrollerState)(), O = (0, o.useScrollSpring)(N);
                    r.useImperativeHandle(c, () => ({
                        getScrollerNode: () => N.current,
                        isScrolling: () => null != g.current,
                        getScrollerState: v,
                        ...(0, o.getAnimatedScrollHelpers)(N, v, O)
                    }), [N, v, O]);
                    let D = r.useCallback(e => {
                        null == g.current ? R(!0) : clearTimeout(g.current), g.current = setTimeout(() => {
                            g.current = null, R(!1)
                        }, 200), null != p && p(e)
                    }, [p]);
                    return r.useEffect(() => () => clearTimeout(g.current), []), (0, o.useResizeObserverSubscription)({
                        ref: N,
                        key: "container",
                        onUpdate: E,
                        resizeObserver: s,
                        listenerMap: n
                    }), (0, o.useResizeObserverSubscription)({
                        ref: A,
                        key: "content",
                        onUpdate: E,
                        resizeObserver: s,
                        listenerMap: n
                    }), (0, i.jsx)("div", {
                        ref: N,
                        className: a(_, {
                            [u.fade]: S,
                            [u.customTheme]: T,
                            [e]: !0,
                            [u.managedReactiveScroller]: !0,
                            [u.scrolling]: C && S
                        }),
                        style: I,
                        dir: h,
                        onScroll: D,
                        ...m,
                        children: (0, i.jsx)(l.FocusRingScope, {
                            containerRef: A,
                            children: (0, i.jsxs)("div", {
                                ref: A,
                                className: a(f, u.content),
                                children: [d, C && (0, i.jsx)("div", {
                                    className: u.pointerCover
                                })]
                            })
                        })
                    })
                })
            }
        },
        256023: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createScroller: function() {
                    return u
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("718776"),
                o = n("462977");

            function u(e, t) {
                let n = (0, o.getScrollbarSpecs)(e);
                return r.forwardRef(function(s, u) {
                    let {
                        children: c,
                        className: d,
                        dir: _ = "ltr",
                        orientation: E = "vertical",
                        paddingFix: f = !0,
                        fade: p = !1,
                        onScroll: h,
                        style: S,
                        ...T
                    } = s, I = r.useRef(null), m = (0, o.usePaddingFixes)({
                        paddingFix: f,
                        orientation: E,
                        dir: _,
                        className: d,
                        scrollerRef: I,
                        specs: n
                    });
                    return (0, i.jsx)("div", {
                        ref: e => {
                            "function" == typeof u ? u(e) : null != u && (u.current = e), I.current = e
                        },
                        className: a(d, {
                            [e]: !0,
                            [t]: p
                        }),
                        style: (0, o.getMergedOrientationStyles)(S, E),
                        dir: _,
                        ...T,
                        children: (0, i.jsxs)(l.FocusRingScope, {
                            containerRef: I,
                            children: [c, m]
                        })
                    })
                })
            }
        },
        506395: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SegmentedControl: function() {
                    return d
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("577776"),
                u = n("801731");

            function c(e) {
                let {
                    option: t,
                    selected: n,
                    onClick: s,
                    look: c,
                    className: d,
                    selectedClassName: _
                } = e, E = {
                    [function(e) {
                        switch (e) {
                            case "tab":
                            default:
                                return u.tabItemSelected;
                            case "pill":
                                return u.pillItemSelected
                        }
                    }(c)]: n
                };
                null != _ && (E[_] = n);
                let f = r.useCallback(e => s(t, e), [s, t]);
                return (0, i.jsx)(l.Clickable, {
                    className: a(function(e) {
                        switch (e) {
                            case "tab":
                            default:
                                return u.tabItem;
                            case "pill":
                                return u.pillItem
                        }
                    }(c), d, E),
                    onClick: f,
                    children: (0, i.jsx)(o.Text, {
                        variant: "text-sm/medium",
                        color: "none",
                        children: t.name
                    })
                })
            }

            function d(e) {
                let {
                    options: t,
                    value: n,
                    onChange: s,
                    look: l = "tab",
                    className: o,
                    optionClassName: d,
                    selectedOptionClassName: _
                } = e, E = r.useCallback(e => {
                    var t;
                    let r = n === e.value;
                    return (0, i.jsx)(c, {
                        selected: r,
                        option: e,
                        look: l,
                        onClick: s,
                        className: d,
                        selectedClassName: _
                    }, null !== (t = e.key) && void 0 !== t ? t : String(e.value))
                }, [n, l, s, d, _]);
                return (0, i.jsx)("div", {
                    className: a(function(e) {
                        switch (e) {
                            case "tab":
                            default:
                                return u.tabContainer;
                            case "pill":
                                return u.pillContainer
                        }
                    }(l), o),
                    children: t.map(E)
                })
            }
        },
        774811: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SearchableSelect: function() {
                    return y
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("572792"),
                o = n("608230"),
                u = n("947980"),
                c = n("271841"),
                d = n("227645"),
                _ = n("718776"),
                E = n("516826"),
                f = n("741662"),
                p = n("433600"),
                h = n("442761"),
                S = n("242670"),
                T = n("577776"),
                I = n("731898"),
                m = n("811425"),
                g = n("31695"),
                A = n("561744"),
                C = n("837899"),
                R = n("425190"),
                N = n("36694"),
                v = n("578706"),
                O = n("945330"),
                D = n("178814"),
                L = n("782340"),
                M = n("43064");

            function P(e) {
                return e.label
            }
            let b = r.forwardRef(function(e, t) {
                    let {
                        options: n,
                        value: s,
                        onChange: o,
                        clearable: c = !1,
                        multi: f = !1,
                        closeOnSelect: p = !0,
                        onOpen: S,
                        onClose: T,
                        placeholder: g = L.default.Messages.SELECT,
                        wrapperClassName: N,
                        className: v,
                        isDisabled: b = !1,
                        maxVisibleItems: y = 7,
                        look: G = D.SelectLooks.FILLED,
                        autoFocus: w = !1,
                        popoutPosition: x = "bottom",
                        filter: k = !0,
                        debounceTime: V,
                        renderOptionLabel: H = P,
                        onSearchChange: j,
                        renderOptionPrefix: Y = () => null,
                        renderOptionSuffix: W = () => null,
                        "aria-describedby": K,
                        "aria-invalid": z,
                        "aria-labelledby": Z,
                        "aria-required": q,
                        inputClassNames: X,
                        centerCaret: Q = !1,
                        onBlur: J,
                        ...$
                    } = e, {
                        ref: ee,
                        width: et
                    } = (0, I.default)(), {
                        titleId: en,
                        errorId: ei,
                        error: er
                    } = (0, E.useFormContext)(), {
                        ref: es,
                        width: ea
                    } = (0, I.default)(), el = r.useRef(null), [eo, eu] = r.useState(null), [ec, ed] = r.useState(!1), [e_, eE] = r.useState(null), [ef, ep] = r.useState(!1), eh = r.useRef(null), eS = r.useRef(null), {
                        options: eT,
                        loading: eI,
                        onQueryChange: em
                    } = function(e) {
                        let {
                            active: t,
                            loadableOptions: n,
                            debounceTime: i
                        } = e, s = "function" == typeof n, [a, l] = r.useState({
                            options: s ? [] : n,
                            query: "",
                            debouncedQuery: "",
                            loading: !1
                        }), {
                            options: o,
                            loading: u,
                            query: c,
                            debouncedQuery: d
                        } = a, _ = r.useCallback(e => l(t => ({
                            ...t,
                            loading: s,
                            query: e,
                            debouncedQuery: e
                        })), [s]);
                        r.useEffect(() => {
                            t && _("")
                        }, [t, _]), r.useEffect(() => {
                            let e;
                            return s ? (l(e => ({
                                ...e,
                                loading: !0,
                                debouncedQuery: null
                            })), e = setTimeout(() => {
                                _(c)
                            }, null != i ? i : 500)) : _(c), () => {
                                clearTimeout(e)
                            }
                        }, [s, c, i, _]), r.useEffect(() => {
                            let e = !1;
                            return t && null !== d && ("function" == typeof n ? n(d) : Promise.resolve(n)).then(t => {
                                !e && l(e => ({
                                    ...e,
                                    options: t,
                                    loading: !1
                                }))
                            }), () => {
                                e = !0
                            }
                        }, [t, n, d]);
                        let E = r.useCallback(e => {
                            l(t => ({
                                ...t,
                                query: e
                            }))
                        }, []);
                        return {
                            options: o,
                            loading: u,
                            onQueryChange: E
                        }
                    }({
                        active: ec,
                        loadableOptions: n,
                        debounceTime: V
                    }), eg = r.useMemo(() => (function(e, t) {
                        if (null == t) return [];
                        let n = Array.isArray(t) ? t : [t];
                        return n.map(t => "object" == typeof t && (null == t || "value" in t) ? t : e.find(e => e.value === t)).filter(Boolean)
                    })(eT, s), [eT, s]), eA = r.useMemo(() => eg.map(e => e.value), [eg]), eC = eg[eg.length - 1], eR = (0, A.default)(eC), eN = r.useId(), ev = r.useId(), eO = r.useId(), eD = r.useCallback(e => {
                        ec !== e && !b && (ed(e), e ? null == S || S() : null == T || T())
                    }, [b, T, S, ec]), eL = r.useCallback(e => {
                        ec && !e && eD(!1)
                    }, [eD, ec]), eM = (0, m.useIsVisible)(eL);
                    r.useImperativeHandle(t, () => ({
                        close() {
                            eD(!1)
                        }
                    }));
                    let eP = r.useCallback((e, t) => {
                            let n = document.querySelector(e),
                                i = eh.current;
                            eu(t), null != i && null != n && i.scrollIntoViewNode({
                                node: n
                            })
                        }, []),
                        eb = r.useCallback(() => new Promise(e => {
                            let t = eh.current;
                            if (null == t) return e();
                            t.scrollToTop({
                                callback: () => requestAnimationFrame(() => e())
                            })
                        }), []),
                        ey = r.useCallback(() => new Promise(e => {
                            let t = eh.current;
                            if (null == t) return e();
                            t.scrollToBottom({
                                callback: () => requestAnimationFrame(() => e())
                            })
                        }), []),
                        eU = (0, u.default)({
                            id: ev,
                            defaultFocused: null != eC ? String(eC.value) : void 0,
                            scrollToStart: eb,
                            scrollToEnd: ey,
                            isEnabled: ec,
                            wrap: !0,
                            useVirtualFocus: !0,
                            setFocus: eP,
                            disableClickOnSpace: !0
                        }),
                        eG = (0, A.default)(eU),
                        ew = (0, A.default)(eT);
                    r.useEffect(() => {
                        let e = ew.current,
                            t = eR.current;
                        ec && null != t && !eI && requestAnimationFrame(() => {
                            let n = eh.current,
                                i = e.indexOf(t);
                            null == n || n.scrollToIndex({
                                section: 0,
                                row: i
                            })
                        })
                    }, [ec, eI]), r.useEffect(() => {
                        let e = eG.current;
                        if (ec && !eI) {
                            var t;
                            let n = el.current;
                            if (null != n) {
                                n.focus();
                                let {
                                    value: e
                                } = n;
                                n.value = " ", n.value = e
                            }
                            eu(null !== (t = e.focusedItemId()) && void 0 !== t ? t : null)
                        } else {
                            let t = eR.current,
                                n = null != t ? String(t.value) : null;
                            e.setFocus(n), eu(null)
                        }
                    }, [ec, eI]), r.useLayoutEffect(() => {
                        !ec && (f ? eE("") : null != eC && eE(eC.label))
                    }, [f, eC, ec]), r.useLayoutEffect(() => {
                        f && eE("")
                    }, [f, eg.length]);
                    let ex = r.useCallback(function(e) {
                        let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
                        if (null == e) {
                            o(f ? [] : void 0);
                            return
                        }
                        let i = "function" == typeof n,
                            r = i ? eT.find(t => t.value === e) : e;
                        if (f) {
                            let n = null != s ? s : [],
                                l = n.some(t => (i ? t.value : t) === e);
                            if (l ? o(n.filter(t => (i ? t.value : t) !== e)) : o([...n, r]), t) {
                                var a;
                                null === (a = el.current) || void 0 === a || a.focus()
                            }
                        } else o(r);
                        eu(null), (!f || p) && eD(!1), ep(!1)
                    }, [n, eT, f, p, o, s, eD]);
                    r.useLayoutEffect(() => {
                        if (w) {
                            var e;
                            null === (e = el.current) || void 0 === e || e.focus()
                        }
                    }, [w]);
                    let ek = r.useCallback(() => {
                            eE(""), ex(null), eD(!0)
                        }, [ex, eD]),
                        eF = r.useCallback(e => {
                            switch (e.key) {
                                case "Escape":
                                    ec && (e.stopPropagation(), eD(!1));
                                    break;
                                case "ArrowDown":
                                case "ArrowUp":
                                    eD(!0)
                            }
                        }, [eD, ec]),
                        eB = eT;
                    ef && null != e_ && !1 !== k && (eB = "function" == typeof k ? k(eT, e_) : (0, l.matchSorter)(eT, e_, {
                        keys: ["label"]
                    })), r.useEffect(() => {
                        let e = eh.current;
                        null == e || e.scrollToTop()
                    }, [e_]), r.useEffect(() => {
                        !eI && ef && null !== e_ && requestAnimationFrame(() => eU.focusFirstVisibleItem())
                    }, [eI, ef, e_]);
                    let eV = f ? B : F;
                    return (0, i.jsx)(u.ListNavigatorProvider, {
                        navigator: eU,
                        children: (0, i.jsx)(h.Popout, {
                            spacing: 0,
                            animation: h.Popout.Animation.NONE,
                            shouldShow: ec,
                            onRequestClose: () => eD(!1),
                            layerContext: $.popoutLayerContext,
                            renderPopout: e => {
                                let {
                                    closePopout: t,
                                    position: n,
                                    updatePosition: r
                                } = e;
                                return (0, i.jsx)(U, {
                                    loading: eI,
                                    multi: f,
                                    listRef: eh,
                                    listId: eN,
                                    maxVisibleItems: y,
                                    width: ea,
                                    selectedValues: eA,
                                    closePopout: t,
                                    onSelect: ex,
                                    closeOnSelect: p,
                                    options: eB,
                                    activeDescendant: eo,
                                    renderOptionLabel: H,
                                    updatePosition: r,
                                    popoutPosition: n,
                                    renderOptionPrefix: Y,
                                    renderOptionSuffix: W
                                })
                            },
                            position: x,
                            children: (e, t) => {
                                let {
                                    "aria-expanded": n,
                                    "aria-controls": r
                                } = e, {
                                    isShown: s,
                                    position: l
                                } = t, o = s ? R.default : C.default, {
                                    ref: u,
                                    onKeyDown: E
                                } = eU.containerProps;
                                return (0, i.jsxs)("div", {
                                    ref: eS,
                                    className: a(N, M.wrapper),
                                    style: {
                                        "--icons-width": "".concat(et, "px")
                                    },
                                    onBlur: e => {
                                        var t, n, i;
                                        !((null === (t = eS.current) || void 0 === t ? void 0 : t.contains(e.relatedTarget)) || (null === (i = eh.current) || void 0 === i ? void 0 : null === (n = i.getScrollerNode()) || void 0 === n ? void 0 : n.contains(e.relatedTarget))) && (!f && null != eC && eE(eC.label), ep(!1), eD(!1), null == J || J(e))
                                    },
                                    children: [(0, i.jsx)(_.FocusRing, {
                                        ringTarget: es,
                                        focusTarget: el,
                                        offset: 4,
                                        children: (0, i.jsx)("div", {
                                            onClick: b ? void 0 : e => {
                                                e.stopPropagation(), e.preventDefault(), eE(""), eD(!0)
                                            },
                                            onMouseDown: e => {
                                                e.preventDefault()
                                            },
                                            ref: e => {
                                                es.current = e, eM.current = e
                                            },
                                            className: a(M.select, M.searchable, v, {
                                                [M.open]: s,
                                                [M.lookFilled]: G === D.SelectLooks.FILLED,
                                                [M.disabled]: b,
                                                [M.multi]: f,
                                                [M.selectPositionTop]: "top" === l
                                            }),
                                            children: (0, i.jsx)("div", {
                                                className: a(M.value, {
                                                    [M.multi]: f
                                                }),
                                                children: (0, i.jsx)(eV, {
                                                    query: e_,
                                                    selectedOptions: eg,
                                                    loading: eI,
                                                    renderOptionPrefix: Y,
                                                    renderOptionSuffix: W,
                                                    isDisabled: b,
                                                    isEditing: ef,
                                                    inputRef: el,
                                                    "aria-describedby": null != K ? K : ei,
                                                    "aria-required": q,
                                                    "aria-invalid": null != z ? z : null != er,
                                                    "aria-labelledby": null != Z ? Z : en,
                                                    "aria-expanded": n,
                                                    setInputRef: e => {
                                                        u.current = e, el.current = e
                                                    },
                                                    onFocus: () => {
                                                        var e, t;
                                                        null === (e = el.current) || void 0 === e || e.setSelectionRange(0, null !== (t = null == e_ ? void 0 : e_.length) && void 0 !== t ? t : 0)
                                                    },
                                                    onChange: e => {
                                                        em(e), null == j || j(e), eE(e), eD(!0), ep(!0)
                                                    },
                                                    onKeyDown: e => {
                                                        var t;
                                                        null === (t = $.onKeyDown) || void 0 === t || t.call($, e), E(e), eF(e)
                                                    },
                                                    activeDescendant: eo,
                                                    placeholder: g,
                                                    inputId: eO,
                                                    listboxId: eN,
                                                    navigatorId: ev,
                                                    selectValue: function(e) {
                                                        let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
                                                        ex(e, t)
                                                    },
                                                    inputClassNames: X
                                                })
                                            })
                                        })
                                    }), (0, i.jsxs)("div", {
                                        className: a(M.icons, {
                                            [M.multi]: f,
                                            [M.iconsContainer]: !Q
                                        }),
                                        ref: ee,
                                        children: [c && (null != e_ && "" !== e_ || eg.length > 0) ? (0, i.jsx)(d.Clickable, {
                                            "aria-label": L.default.Messages.CLEAR,
                                            "aria-controls": eO,
                                            onClick: ek,
                                            children: (0, i.jsx)(O.default, {
                                                width: 16,
                                                height: 16,
                                                className: M.clear
                                            })
                                        }) : null, (0, i.jsx)(d.Clickable, {
                                            className: a({
                                                [M.iconsCenter]: Q
                                            }),
                                            "aria-label": ec ? L.default.Messages.CLOSE : L.default.Messages.OPEN,
                                            "aria-controls": eO,
                                            onClick: () => {
                                                eD(!ec)
                                            },
                                            children: (0, i.jsx)(o, {
                                                className: M.dropdownIcon
                                            })
                                        })]
                                    })]
                                })
                            }
                        })
                    })
                }),
                y = b;

            function U(e) {
                let {
                    onSelect: t,
                    closePopout: n,
                    selectedValues: s,
                    options: l,
                    width: o,
                    maxVisibleItems: c,
                    activeDescendant: d,
                    listRef: _,
                    listId: E,
                    renderOptionLabel: f,
                    updatePosition: h,
                    loading: I = !1,
                    multi: m,
                    popoutPosition: A,
                    closeOnSelect: C,
                    renderOptionPrefix: R = () => null,
                    renderOptionSuffix: N = () => null
                } = e, v = r.useRef(null), O = r.useCallback(e => {
                    t(e), C && n()
                }, [C, n, t]);
                return ((0, g.default)(h), I) ? (0, i.jsx)("div", {
                    "aria-busy": !0,
                    className: a(M.popout, M.loading, {
                        [M.popoutPositionTop]: "top" === A
                    }),
                    style: {
                        width: o
                    },
                    children: (0, i.jsx)(S.Spinner, {
                        itemClassName: M.loadingSpinner,
                        type: S.SpinnerTypes.PULSING_ELLIPSIS
                    })
                }) : 0 === l.length ? (0, i.jsx)("div", {
                    className: a(M.popout, M.noResults, {
                        [M.popoutPositionTop]: "top" === A
                    }),
                    style: {
                        width: o
                    },
                    children: (0, i.jsx)(T.Text, {
                        color: "text-muted",
                        variant: "text-md/normal",
                        children: L.default.Messages.NO_RESULTS_FOUND
                    })
                }) : (0, i.jsx)(u.ListNavigatorContainer, {
                    children: e => {
                        let {
                            ref: t,
                            onKeyDown: n,
                            ...r
                        } = e;
                        return (0, i.jsx)(p.ListAuto, {
                            className: a(M.popout, M.searchableSelect, {
                                [M.noScrollbar]: l.length <= c,
                                [M.popoutPositionTop]: "top" === A
                            }),
                            style: {
                                width: o,
                                maxHeight: 44 * c
                            },
                            ref: e => {
                                var n;
                                _.current = e;
                                let i = null !== (n = null == e ? void 0 : e.getScrollerNode()) && void 0 !== n ? n : null;
                                v.current = i, t.current = i
                            },
                            ...r,
                            role: void 0,
                            innerRole: "listbox",
                            innerAriaMultiselectable: m,
                            innerId: E,
                            rowHeight: 44,
                            sections: [l.length],
                            sectionHeight: 0,
                            renderRow: e => {
                                var t;
                                let {
                                    row: n
                                } = e, r = l[n], a = f(r);
                                return (0, i.jsx)(x, {
                                    multi: m,
                                    "aria-posinset": n,
                                    "aria-setsize": l.length,
                                    isSelected: s.includes(r.value),
                                    isFocused: d === String(r.value),
                                    value: r.value,
                                    label: a,
                                    onSelect: O,
                                    prefix: R(r, {
                                        inPill: !1,
                                        inDropdown: !0
                                    }),
                                    suffix: N(r, {
                                        inPill: !1,
                                        inDropdown: !0
                                    })
                                }, null !== (t = r.key) && void 0 !== t ? t : n)
                            },
                            renderSection: () => null
                        })
                    }
                })
            }

            function G(e, t) {
                if (null == e || null == t) return !1;
                let n = Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING;
                return (e.compareDocumentPosition(t) & n) === n
            }

            function w(e) {
                let {
                    selectedOptions: t,
                    selectValue: n,
                    listRef: s,
                    focusPreviousItem: a,
                    focusNextItem: l,
                    renderOptionSuffix: o,
                    renderOptionPrefix: u
                } = e, c = r.useCallback(e => {
                    let t = s.current;
                    if (null != t) switch (e.key) {
                        case "ArrowRight":
                            return e.stopPropagation(), e.preventDefault(), l();
                        case "ArrowLeft":
                            return e.stopPropagation(), e.preventDefault(), a()
                    }
                }, [s, a, l]), [d, _] = r.useState(null);
                return (0, i.jsx)("ul", {
                    className: M.optionPillContainer,
                    ref: s,
                    onKeyDown: c,
                    onFocus: e => {
                        let t = e.target;
                        null != s.current && G(s.current, t) && _(t.getAttribute("data-option-pill-value"))
                    },
                    onBlur: e => {
                        let t = e.relatedTarget;
                        !G(s.current, t) && _(null)
                    },
                    children: t.map((e, t) => (0, i.jsx)("li", {
                        className: M.optionPillItem,
                        children: (0, i.jsx)(H, {
                            focused: null == d ? 0 === t : d === String(e.value),
                            option: e,
                            onClick: () => n(e.value),
                            onKeyDown: async t => {
                                "Backspace" === t.key ? (await a(!0), n(e.value, !1)) : "Delete" === t.key && (await l(!0), n(e.value, !1))
                            },
                            renderOptionPrefix: u,
                            renderOptionSuffix: o
                        })
                    }, "".concat(e.label, "-").concat(e.value)))
                })
            }

            function x(e) {
                let {
                    value: t,
                    label: n,
                    prefix: r,
                    suffix: s,
                    onSelect: l,
                    isSelected: o,
                    isFocused: c,
                    multi: _,
                    ...E
                } = e, f = (0, u.useListItem)(String(t));
                return (0, i.jsxs)(d.Clickable, {
                    tag: "li",
                    style: {
                        height: 44
                    },
                    focusProps: {
                        enabled: !1
                    },
                    className: a(M.option, {
                        [M.focused]: c,
                        [M.multi]: _
                    }),
                    onClick: () => l(t),
                    ...f,
                    ...E,
                    "aria-selected": o,
                    id: f["data-list-item-id"],
                    role: "option",
                    children: [(0, i.jsxs)("div", {
                        className: M.content,
                        children: [n, "\xa0"]
                    }), null != r && (0, i.jsx)("div", {
                        className: M.prefix,
                        children: r
                    }), " ", null != s && (0, i.jsx)("div", {
                        className: M.suffix,
                        children: s
                    }), " ", (0, i.jsx)(k, {
                        isSelected: o,
                        multi: _
                    })]
                })
            }

            function k(e) {
                let {
                    isSelected: t,
                    multi: n
                } = e;
                return n ? (0, i.jsx)("div", {
                    className: a(M.multiSelectCheckbox, {
                        [M.checked]: t,
                        [M.unchecked]: !t
                    }),
                    children: t && (0, i.jsx)(N.default, {
                        foreground: M.multiSelectCheck
                    })
                }) : t ? (0, i.jsx)(v.default, {
                    "aria-hidden": !0,
                    backgroundColor: "white",
                    className: M.selectedIcon,
                    width: 20,
                    height: 20
                }) : null
            }

            function F(e) {
                let {
                    selectedOptions: t,
                    renderOptionPrefix: n,
                    renderOptionSuffix: r,
                    ...s
                } = e, a = t[0], l = null == n ? void 0 : n(null != a ? a : null, {
                    inPill: !1,
                    inDropdown: !1
                }), o = null == r ? void 0 : r(null != a ? a : null, {
                    inPill: !1,
                    inDropdown: !1
                });
                return (0, i.jsxs)(i.Fragment, {
                    children: [null != l ? (0, i.jsx)("div", {
                        "aria-hidden": !0,
                        children: l
                    }) : null, (0, i.jsx)(V, {
                        selectedOptions: t,
                        ...s
                    }), null != o ? (0, i.jsx)("div", {
                        "aria-hidden": !0,
                        children: o
                    }) : null]
                })
            }

            function B(e) {
                let {
                    query: t,
                    placeholder: n,
                    selectedOptions: s,
                    selectValue: l,
                    onKeyDown: u,
                    isEditing: c,
                    isDisabled: d,
                    inputRef: _,
                    renderOptionPrefix: E,
                    renderOptionSuffix: f,
                    inputClassNames: p,
                    ...h
                } = e, S = Math.max(n.length, (null != t ? t : "").length), T = r.useRef(null), {
                    focusPreviousItem: I,
                    focusNextItem: m,
                    focusLastItem: g
                } = function(e, t, n) {
                    let i = r.useMemo(() => (0, o.createFocusManager)({
                            getFocusableElements() {
                                let t = e.current;
                                if (null != t) {
                                    let e = t.querySelectorAll("[data-option-pill-value]");
                                    return Array.from(e)
                                }
                                return []
                            },
                            getActiveElement() {
                                var t, n;
                                return null == e ? void 0 : null === (n = e.current) || void 0 === n ? void 0 : null === (t = n.ownerDocument) || void 0 === t ? void 0 : t.activeElement
                            }
                        }), [n]),
                        s = r.useCallback(t => {
                            var n, i;
                            return t === (null === (i = e.current) || void 0 === i ? void 0 : null === (n = i.ownerDocument) || void 0 === n ? void 0 : n.activeElement)
                        }, [e]),
                        a = r.useCallback(async function() {
                            var e, n;
                            let r = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                a = await i.getPreviousFocusableElement({
                                    wrap: !r
                                });
                            return r && ((null == a || s(a)) && (a = await i.getNextFocusableElement()), null == a || s(a)) ? null === (n = t.current) || void 0 === n ? void 0 : n.focus() : null === (e = a) || void 0 === e ? void 0 : e.focus()
                        }, [i, s, t]),
                        l = r.useCallback(async function() {
                            var e, n;
                            let r = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                                a = await i.getNextFocusableElement({
                                    wrap: !r
                                });
                            return r && ((null == a || s(a)) && (a = await i.getPreviousFocusableElement()), null == a || s(a)) ? null === (n = t.current) || void 0 === n ? void 0 : n.focus() : null === (e = a) || void 0 === e ? void 0 : e.focus()
                        }, [i, s, t]),
                        u = r.useCallback(async () => {
                            let e = await i.getLastFocusableElement();
                            return null == e ? void 0 : e.focus()
                        }, [i]);
                    return {
                        focusPreviousItem: a,
                        focusNextItem: l,
                        focusLastItem: u
                    }
                }(T, _, s);
                return (0, i.jsxs)(i.Fragment, {
                    children: [s.length > 0 && (0, i.jsx)(w, {
                        listRef: T,
                        selectedOptions: s,
                        renderOptionPrefix: E,
                        renderOptionSuffix: f,
                        selectValue: l,
                        focusNextItem: m,
                        focusPreviousItem: I
                    }), (0, i.jsx)(V, {
                        style: {
                            minWidth: "".concat(S, "ch")
                        },
                        className: a(M.multi, p),
                        query: t,
                        placeholder: n,
                        selectValue: l,
                        selectedOptions: s,
                        isEditing: c,
                        isDisabled: d,
                        inputRef: _,
                        onKeyDown: e => {
                            ["ArrowLeft", "Backspace"].includes(e.key) && ("" === t || null == t) && s.length > 0 ? g() : u(e)
                        },
                        ...h
                    })]
                })
            }

            function V(e) {
                let {
                    query: t,
                    inputId: n,
                    "aria-describedby": r,
                    "aria-invalid": s,
                    "aria-required": l,
                    "aria-labelledby": o,
                    "aria-expanded": c,
                    isDisabled: d,
                    listboxId: _,
                    activeDescendant: E,
                    navigatorId: f,
                    onChange: p,
                    onFocus: h,
                    setInputRef: S,
                    isEditing: T,
                    onKeyDown: I,
                    placeholder: m,
                    loading: g,
                    style: A,
                    className: C
                } = e;
                return (0, i.jsx)("input", {
                    role: "combobox",
                    id: n,
                    "aria-haspopup": "listbox",
                    "aria-invalid": s,
                    "aria-labelledby": o,
                    "aria-autocomplete": "list",
                    "aria-expanded": c,
                    "aria-describedby": r,
                    "aria-disabled": d,
                    "aria-controls": _,
                    "aria-required": l,
                    "aria-busy": g,
                    style: null != A ? A : {},
                    "aria-activedescendant": null != E ? (0, u.createListItemId)(f, E) : "",
                    disabled: d,
                    value: null != t ? t : "",
                    onChange: e => {
                        p(e.target.value)
                    },
                    onFocus: h,
                    className: a(M.searchInput, C, {
                        [M.editing]: T,
                        [M.disabled]: d
                    }),
                    onKeyDown: I,
                    placeholder: "" !== (null != t ? t : "").trim() ? void 0 : m,
                    ref: S
                })
            }

            function H(e) {
                let {
                    option: t,
                    focused: n,
                    onClick: r,
                    onKeyDown: s,
                    renderOptionPrefix: a,
                    renderOptionSuffix: l
                } = e, o = null == a ? void 0 : a(t, {
                    inPill: !0,
                    inDropdown: !1
                }), u = null == l ? void 0 : l(t, {
                    inPill: !0,
                    inDropdown: !1
                });
                return (0, i.jsx)(_.FocusRing, {
                    offset: 3,
                    children: (0, i.jsxs)(c.Button, {
                        tabIndex: n ? 0 : -1,
                        "data-option-pill-value": t.value,
                        className: M.optionPillBtn,
                        innerClassName: M.optionPill,
                        onClick: () => null == r ? void 0 : r(t.value),
                        onKeyDown: s,
                        children: [(0, i.jsx)("div", {
                            className: M.content,
                            children: t.label
                        }), null != o && (0, i.jsx)("div", {
                            className: M.prefix,
                            children: o
                        }), " ", null != u && (0, i.jsx)("div", {
                            className: M.suffix,
                            children: u
                        }), (0, i.jsx)(f.HiddenVisually, {
                            children: L.default.Messages.REMOVE
                        }), (0, i.jsx)(O.default, {
                            className: M.deleteOptionIcon,
                            width: 14,
                            height: 14
                        })]
                    })
                })
            }
        },
        935980: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSingleSelectState: function() {
                    return A
                },
                useMultiSelectState: function() {
                    return C
                },
                useVariableSelect: function() {
                    return R
                },
                multiSelect: function() {
                    return N
                },
                toggleSelect: function() {
                    return v
                },
                singleSelect: function() {
                    return O
                },
                Select: function() {
                    return M
                },
                SingleSelect: function() {
                    return y
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("947980"),
                o = n("227645"),
                u = n("311720"),
                c = n("442761"),
                d = n("446662"),
                _ = n("731898"),
                E = n("811425"),
                f = n("31695"),
                p = n("837899"),
                h = n("425190"),
                S = n("578706"),
                T = n("945330"),
                I = n("178814"),
                m = n("782340"),
                g = n("43064");

            function A(e) {
                let {
                    value: t,
                    onChange: n,
                    serialize: i = e => String(e)
                } = e;
                return {
                    select: e => n(e),
                    isSelected: e => e === t,
                    clear: () => n(null),
                    serialize: i
                }
            }

            function C(e) {
                var t;
                let {
                    value: n,
                    onChange: i,
                    serialize: r = e => String(e)
                } = e;
                return {
                    select: e => {
                        let t = new Set(n);
                        t.has(e) ? t.delete(e) : t.add(e), i(t)
                    },
                    isSelected: e => null !== (t = null == n ? void 0 : n.has(e)) && void 0 !== t && t,
                    clear: () => i(new Set),
                    serialize: r
                }
            }

            function R(e) {
                var t;
                let {
                    value: n,
                    onChange: i,
                    onSelectInteraction: r,
                    serialize: s = e => String(e)
                } = e;
                return {
                    select: e => {
                        let {
                            newValues: t,
                            updated: s
                        } = r(e, n);
                        s && i(t)
                    },
                    isSelected: e => null !== (t = null == n ? void 0 : n.has(e)) && void 0 !== t && t,
                    clear: () => i(new Set),
                    serialize: s
                }
            }

            function N(e, t) {
                let n = new Set(t);
                return n.has(e) ? n.delete(e) : n.add(e), {
                    newValues: n,
                    updated: !0
                }
            }

            function v(e, t) {
                return t.has(e) ? {
                    newValues: new Set,
                    updated: !0
                } : {
                    newValues: new Set([e]),
                    updated: !0
                }
            }

            function O(e, t) {
                return t.has(e) ? {
                    newValues: t,
                    updated: !1
                } : {
                    newValues: new Set([e]),
                    updated: !0
                }
            }

            function D(e) {
                return null == e ? void 0 : e.label
            }

            function L(e) {
                return e.map(e => D(e)).join(", ")
            }

            function M(e) {
                let {
                    options: t,
                    placeholder: n = m.default.Messages.SELECT,
                    className: s,
                    isDisabled: l = !1,
                    maxVisibleItems: u = 7,
                    autoFocus: d = !1,
                    popoutWidth: f,
                    clearable: S = !1,
                    look: A = I.SelectLooks.FILLED,
                    onClose: C,
                    onOpen: R,
                    renderOptionLabel: N = D,
                    renderOptionValue: v = L,
                    popoutClassName: O,
                    popoutPosition: M = "bottom",
                    popoutLayerContext: b,
                    optionClassName: y,
                    closeOnSelect: U,
                    select: G,
                    isSelected: w,
                    serialize: x,
                    clear: k,
                    hideIcon: F = !1,
                    "aria-label": B,
                    "aria-labelledby": V
                } = e, [H, j] = r.useState(!1), {
                    ref: Y,
                    width: W,
                    height: K
                } = (0, _.default)(), z = r.useCallback(e => {
                    H !== e && !l && (j(e), e ? null == R || R() : null == C || C())
                }, [l, C, R, H]), Z = r.useCallback(e => {
                    H && !e && z(!1)
                }, [z, H]), q = (0, E.useIsVisible)(Z), X = r.useCallback(e => {
                    if (G(e), U) {
                        var t;
                        null === (t = Y.current) || void 0 === t || t.focus()
                    }
                }, [G, U]), Q = r.useCallback(e => {
                    e.stopPropagation(), null == k || k()
                }, [k]), J = t.filter(e => w(e.value));
                return r.useLayoutEffect(() => {
                    if (d) {
                        var e;
                        null === (e = Y.current) || void 0 === e || e.focus()
                    }
                }, [d]), (0, i.jsx)(c.Popout, {
                    spacing: 0,
                    animation: c.Popout.Animation.NONE,
                    shouldShow: H,
                    onRequestOpen: () => {
                        z(!0)
                    },
                    onRequestClose: () => {
                        z(!1)
                    },
                    renderPopout: e => {
                        let {
                            closePopout: n,
                            position: r,
                            updatePosition: s
                        } = e;
                        return (0, i.jsx)(P, {
                            className: O,
                            closeOnSelect: U,
                            maxVisibleItems: u,
                            width: null != f ? f : W,
                            isSelected: w,
                            closePopout: n,
                            buttonHeight: null != K ? K : 0,
                            onSelect: X,
                            options: t,
                            serialize: x,
                            renderOptionLabel: N,
                            optionClassName: y,
                            updatePosition: s,
                            popoutPosition: r
                        })
                    },
                    position: M,
                    layerContext: b,
                    children: (e, t) => {
                        let {
                            onClick: r,
                            onKeyDown: u,
                            ...c
                        } = e, {
                            isShown: d,
                            position: _
                        } = t, E = d ? h.default : p.default;
                        return (0, i.jsxs)(o.Clickable, {
                            role: "button",
                            "aria-disabled": l,
                            innerRef: e => {
                                Y.current = e, q.current = e
                            },
                            onClick: l ? void 0 : e => {
                                r(e), z(!H)
                            },
                            onKeyDown: e => {
                                "ArrowDown" === e.key ? z(!0) : "Escape" === e.key && (e.stopPropagation(), z(!1)), u(e)
                            },
                            ...c,
                            className: a(g.select, s, {
                                [g.open]: d,
                                [g.disabled]: l,
                                [g.selectPositionTop]: "top" === _,
                                [g.lookFilled]: A === I.SelectLooks.FILLED
                            }),
                            "aria-haspopup": "listbox",
                            "aria-expanded": d,
                            "aria-label": B,
                            "aria-labelledby": V,
                            children: [J.length > 0 ? (0, i.jsx)("span", {
                                className: g.value,
                                children: v(J)
                            }) : (0, i.jsx)("span", {
                                className: g.placeholder,
                                children: n
                            }), (0, i.jsxs)("div", {
                                className: g.icons,
                                children: [S ? (0, i.jsx)(o.Clickable, {
                                    role: "button",
                                    "aria-disabled": l,
                                    onClick: Q,
                                    "aria-label": m.default.Messages.CLEAR,
                                    children: (0, i.jsx)(T.default, {
                                        width: 16,
                                        height: 16,
                                        className: g.clear
                                    })
                                }) : null, F ? null : (0, i.jsx)(E, {})]
                            })]
                        })
                    }
                })
            }

            function P(e) {
                var t;
                let {
                    className: n,
                    onSelect: s,
                    closePopout: o,
                    closeOnSelect: c = !0,
                    isSelected: _,
                    options: E,
                    width: p,
                    maxVisibleItems: h,
                    renderOptionLabel: S,
                    serialize: T,
                    optionClassName: I,
                    buttonHeight: m,
                    updatePosition: A,
                    popoutPosition: C
                } = e, [R, N] = r.useState(0), v = r.useRef(null), O = r.useId(), D = (0, l.default)({
                    id: O,
                    async scrollToEnd() {},
                    async scrollToStart() {},
                    isEnabled: !0,
                    wrap: !0
                }), L = r.useRef(null);
                (0, u.useFocusLock)(L), r.useLayoutEffect(() => {
                    var e;
                    null === (e = L.current) || void 0 === e || e.focus()
                }, []), r.useEffect(() => {
                    m > 0 && A()
                }, [m, A]), (0, f.default)(A), r.useLayoutEffect(() => {
                    var e, t;
                    let n = null === (t = v.current) || void 0 === t ? void 0 : null === (e = t.getBoundingClientRect()) || void 0 === e ? void 0 : e.height;
                    null != n && N(n)
                }, [h]), r.useEffect(() => {
                    A()
                }, [A, R]);
                let M = r.useCallback(e => {
                        s(e), c && o()
                    }, [o, s, c]),
                    P = E.map((e, n) => (0, i.jsx)(b, {
                        isSelected: _(e.value),
                        value: e.value,
                        label: S(e),
                        onSelect: M,
                        className: I,
                        isDisabled: e.disabled,
                        serialize: T
                    }, null !== (t = e.key) && void 0 !== t ? t : n)),
                    y = E.length <= h ? d.AdvancedScrollerNone : d.AdvancedScrollerThin;
                return (0, i.jsx)(l.ListNavigatorProvider, {
                    navigator: D,
                    children: (0, i.jsx)(l.ListNavigatorContainer, {
                        children: e => {
                            let {
                                ref: t,
                                ...r
                            } = e;
                            return (0, i.jsxs)(i.Fragment, {
                                children: [(0, i.jsx)(y, {
                                    className: a(g.popout, n, {
                                        [g.popoutPositionTop]: "top" === C
                                    }),
                                    style: {
                                        width: p,
                                        maxHeight: R
                                    },
                                    ref: e => {
                                        var n;
                                        let i = null !== (n = null == e ? void 0 : e.getScrollerNode()) && void 0 !== n ? n : null;
                                        t.current = i, L.current = i
                                    },
                                    ...r,
                                    role: "listbox",
                                    children: P
                                }), (0, i.jsx)("div", {
                                    "aria-hidden": !0,
                                    ref: v,
                                    className: g.measurement,
                                    children: P.slice(0, h)
                                })]
                            })
                        }
                    })
                })
            }

            function b(e) {
                let {
                    className: t,
                    value: n,
                    label: r,
                    onSelect: s,
                    isSelected: u,
                    isDisabled: c,
                    serialize: d
                } = e, _ = (0, l.useListItem)(d(n));
                return (0, i.jsxs)(o.Clickable, {
                    focusProps: {
                        enabled: !1
                    },
                    className: a(g.option, t),
                    onClick: () => !c && s(n),
                    ..._,
                    "aria-selected": u,
                    "aria-disabled": c,
                    role: "option",
                    children: [r, u && (0, i.jsx)(S.default, {
                        backgroundColor: "white",
                        className: g.selectedIcon,
                        width: 20,
                        height: 20
                    })]
                })
            }

            function y(e) {
                let {
                    value: t,
                    onChange: n,
                    ...r
                } = e, s = A({
                    value: t,
                    onChange: n
                });
                return (0, i.jsx)(M, {
                    ...r,
                    ...s
                })
            }
        },
        178814: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                SelectLooks: function() {
                    return i
                }
            }), (r = i || (i = {}))[r.FILLED = 0] = "FILLED", r[r.CUSTOM = 1] = "CUSTOM"
        },
        981579: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Sequencer: function() {
                    return f
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("28926"),
                c = n("580279"),
                d = n("413197"),
                _ = n("243871");
            (i = r || (r = {}))[i.ENTERING = 0] = "ENTERING", i[i.LEAVING = 1] = "LEAVING", i[i.APPEARING = 2] = "APPEARING", i[i.STATIC = 3] = "STATIC";
            class E extends a.PureComponent {
                componentDidMount() {
                    if (null != this._measureRef.current) {
                        let {
                            height: e
                        } = this._measureRef.current.getBoundingClientRect();
                        this.setState({
                            targetHeight: e,
                            baseHeight: this.props.getBaseHeight()
                        })
                    }
                }
                componentDidUpdate(e, t) {
                    t.targetHeight !== this.state.targetHeight && this.props.setHeight(this.state.targetHeight)
                }
                componentWillAppear(e) {
                    this.setState({
                        animationState: r.APPEARING
                    }), e()
                }
                componentDidAppear() {
                    let {
                        animationProgress: e,
                        targetHeight: t
                    } = this.state;
                    e.setValue(2), this.setState({
                        animationState: r.STATIC,
                        baseHeight: t
                    })
                }
                componentWillEnter(e) {
                    let {
                        duration: t
                    } = this.props, {
                        animationProgress: n
                    } = this.state;
                    this.setState({
                        animationState: r.ENTERING
                    }), this.props.setHeight(this.state.targetHeight), u.default.timing(n, {
                        toValue: 2,
                        duration: t,
                        delay: t / 2
                    }).start(e)
                }
                componentDidEnter() {
                    this.setState({
                        animationState: r.STATIC
                    })
                }
                componentWillLeave(e) {
                    let {
                        animationProgress: t
                    } = this.state, {
                        duration: n,
                        getDirection: i
                    } = this.props;
                    this.direction = i(), this.setState({
                        animationState: r.LEAVING
                    }), u.default.timing(t, {
                        toValue: 0,
                        duration: n
                    }).start(e)
                }
                componentDidLeave() {
                    this.setState({
                        animationState: r.STATIC
                    })
                }
                getAnimatedStyle() {
                    var e, t;
                    let {
                        reducedMotion: n
                    } = this.context, {
                        fillParent: i
                    } = this.props, {
                        animationProgress: s,
                        animationState: a,
                        baseHeight: l,
                        targetHeight: o
                    } = this.state, c = null !== (e = this.props.sideMargin) && void 0 !== e ? e : 0, d = null !== (t = this.props.verticalMargin) && void 0 !== t ? t : 0, _ = a === r.LEAVING, E = a === r.ENTERING, f = (_ ? -1 : 1) * this.direction, p = {
                        transform: [{
                            translateX: s.interpolate({
                                inputRange: [0, 2],
                                outputRange: ["".concat(150 * f, "%"), "0%"],
                                extrapolate: "clamp",
                                easing: u.default.Easing.inOut(u.default.Easing.ease)
                            })
                        }]
                    };
                    return {
                        overflow: E || _ ? "hidden" : "visible",
                        position: _ ? "absolute" : void 0,
                        top: _ ? d : void 0,
                        left: _ ? c : void 0,
                        right: _ ? c : void 0,
                        bottom: _ ? d : void 0,
                        ...n.enabled ? null : p,
                        opacity: s.interpolate({
                            inputRange: [0, 2],
                            outputRange: [0, 1],
                            extrapolate: "clamp",
                            easing: u.default.Easing.inOut(u.default.Easing.ease)
                        }),
                        height: E ? s.interpolate({
                            inputRange: [0, 1],
                            outputRange: [l, o],
                            extrapolate: "clamp",
                            easing: u.default.Easing.inOut(u.default.Easing.ease)
                        }) : i ? "100%" : "auto"
                    }
                }
                render() {
                    let {
                        fillParent: e,
                        className: t,
                        animatedNodeClassName: n,
                        staticClassName: i
                    } = this.props, {
                        animationState: a
                    } = this.state;
                    return e ? (0, s.jsx)("div", {
                        ref: this._measureRef,
                        className: o(_.measurementFill, t, {
                            [o(_.measurementFillStatic, i)]: a === r.STATIC
                        }),
                        children: (0, s.jsx)(u.default.div, {
                            className: o(_.animatedNode, n),
                            style: this.getAnimatedStyle(),
                            children: this.props.children
                        })
                    }) : (0, s.jsx)("div", {
                        ref: this._measureRef,
                        className: o(_.measurement, t),
                        children: (0, s.jsx)(u.default.div, {
                            className: o(_.animatedNode, n),
                            style: this.getAnimatedStyle(),
                            children: this.props.children
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        animationProgress: new u.default.Value(0),
                        targetHeight: 0,
                        baseHeight: 0,
                        animationState: null
                    }, this.direction = this.props.getDirection(), this._measureRef = a.createRef()
                }
            }
            E.contextType = d.AccessibilityPreferencesContext, E.defaultProps = {
                duration: 300
            };
            class f extends a.Component {
                componentDidMount() {
                    this.setPrevSteps()
                }
                componentDidUpdate() {
                    this.setPrevSteps()
                }
                setPrevSteps() {
                    let {
                        step: e,
                        steps: t
                    } = this.props;
                    this.prevStep = e, this.prevSteps = t
                }
                render() {
                    let {
                        step: e,
                        className: t,
                        innerClassName: n,
                        animatedNodeClassName: i,
                        staticClassName: r,
                        sideMargin: a,
                        verticalMargin: l,
                        children: u,
                        fillParent: d
                    } = this.props;
                    return (0, s.jsx)(c.default, {
                        component: "div",
                        className: o(_.transitionGroup, t),
                        children: (0, s.jsx)(E, {
                            fillParent: d,
                            sideMargin: a,
                            verticalMargin: l,
                            getDirection: this.getDirection,
                            getBaseHeight: this.getBaseHeight,
                            className: n,
                            animatedNodeClassName: i,
                            staticClassName: r,
                            setHeight: this.setHeight,
                            children: u
                        }, "".concat(e))
                    })
                }
                constructor(...e) {
                    super(...e), this.stepHeights = {}, this.prevStep = null, this.prevSteps = [], this.getBaseHeight = () => null != this.prevStep && null != this.stepHeights[this.prevStep] ? this.stepHeights[this.prevStep] : 0, this.getDirection = () => {
                        let {
                            steps: e,
                            step: t
                        } = this.props, n = null != this.prevStep ? e.indexOf(this.prevStep) : -1, i = -1 === n && null != this.prevStep ? this.prevSteps.indexOf(this.prevStep) : -1, r = Math.max(n, i), s = e.indexOf(t);
                        return r > s ? -1 : 1
                    }, this.setHeight = e => {
                        let {
                            step: t
                        } = this.props;
                        this.stepHeights[t] = e
                    }
                }
            }
            f.defaultProps = {
                fillParent: !1
            }
        },
        292842: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Shakeable: function() {
                    return u
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("161179"),
                a = n.n(s),
                l = n("427964"),
                o = n.n(l);
            class u extends r.Component {
                getDefaultAnimProps(e, t) {
                    let n = Date.now();
                    return {
                        duration: null != e ? e : 300,
                        progress: 0,
                        last: n,
                        intensity: null != t ? t : 5,
                        lastDirection: -1,
                        frameCount: 0
                    }
                }
                componentWillUnmount() {
                    this._animationCleanup()
                }
                shake(e, t) {
                    this.animProps = this.getDefaultAnimProps(e, t), !this.state.shaking && this.setState({
                        shaking: !0
                    }, this._animate)
                }
                stop() {
                    this.state.shaking && this.setState({
                        shaking: !1
                    })
                }
                _animationComplete() {
                    this.setState({
                        shaking: !1
                    }, this._animationCleanup)
                }
                render() {
                    let {
                        children: e,
                        ...t
                    } = this.props;
                    return (0, i.jsx)("div", {
                        ...t,
                        ref: this.ref,
                        children: e
                    })
                }
                constructor(e) {
                    super(e), this.ref = r.createRef(), this._animate = () => {
                        let {
                            animProps: e
                        } = this;
                        if (!this.state.shaking || e.progress > e.duration || null == this.ref.current) {
                            this._animationComplete();
                            return
                        }
                        let t = Date.now();
                        if (e.progress += t - e.last, e.last = t, e.frameCount % 2 != 0) {
                            let t = e.lastDirection * e.intensity,
                                n = o.random(-e.intensity, e.intensity, !0),
                                i = Math.max(0, Math.cbrt(e.duration - e.progress / 1e3));
                            e.intensity *= Math.min(1, i), e.lastDirection *= -1, a(null != this.ref.current, "Shakeable style set when not mounted"), this.ref.current.style.transform = "translate3d(".concat(t, "px,").concat(n, "px,0px)")
                        }
                        e.frameCount += 1, this._animationFrame = requestAnimationFrame(this._animate)
                    }, this._animationCleanup = () => {
                        null != this.ref.current && (this.ref.current.style.transform = ""), cancelAnimationFrame(this._animationFrame)
                    }, this.state = {
                        shaking: !1
                    }
                }
            }
        },
        68643: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Shaker: function() {
                    return o
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("427964"),
                a = n.n(s),
                l = n("206230");
            class o extends r.Component {
                componentDidMount() {
                    this.props.isShaking && this.startShaking()
                }
                componentDidUpdate(e) {
                    this.props.isShaking !== e.isShaking && this.setShaking(this.props.isShaking)
                }
                setShaking(e) {
                    e ? this.startShaking() : this.stopShaking()
                }
                startShaking() {
                    this.shouldRenderFrame = !0, this.animationFrame = requestAnimationFrame(this.animate)
                }
                stopShaking() {
                    null != this.animationFrame && cancelAnimationFrame(this.animationFrame);
                    let e = this.ref.current;
                    null != e && (e.style.transform = "")
                }
                render() {
                    let {
                        className: e,
                        children: t
                    } = this.props;
                    return (0, i.jsx)("div", {
                        className: e,
                        ref: this.ref,
                        children: t
                    })
                }
                constructor(...e) {
                    super(...e), this.ref = r.createRef(), this.shouldRenderFrame = !0, this.animate = () => {
                        let {
                            intensity: e,
                            isShaking: t
                        } = this.props;
                        if (!t) return;
                        let n = this.ref.current;
                        if (this.shouldRenderFrame && null != n) {
                            let t = a.random(-e, e, !0),
                                i = a.random(-e, e, !0);
                            n.style.transform = l.default.useReducedMotion ? "" : "translate3d(".concat(t, "px,").concat(i, "px,0px)")
                        }
                        this.shouldRenderFrame = !this.shouldRenderFrame, this.animationFrame = requestAnimationFrame(this.animate)
                    }
                }
            }
            o.defaultProps = {
                isShaking: !0,
                intensity: 5
            }
        },
        837443: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Slider: function() {
                    return T
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("427964"),
                c = n.n(u),
                d = n("117064"),
                _ = n("718776"),
                E = n("414055"),
                f = n("206230"),
                p = n("329755");

            function h(e, t) {
                let n = 0;
                for (let i = 0; i < t.length; i++) {
                    let r = t[i];
                    if (e === r) return i;
                    if (e < r) {
                        if (0 === n || r - e < n) return i;
                        return i - 1
                    }
                    n = e - r
                }
                return null
            }(i = r || (r = {}))[i.ABOVE = 0] = "ABOVE", i[i.BELOW = 1] = "BELOW";

            function S(e) {
                let t = Math.min(Math.max(e.initialValue, e.minValue), e.maxValue);
                return {
                    value: t,
                    initialValueProp: e.initialValue,
                    newClosestIndex: null,
                    ... function(e) {
                        let {
                            markers: t,
                            initialValue: n,
                            minValue: i,
                            maxValue: r,
                            equidistant: s
                        } = e, a = [], l = [];
                        if (null == t) return {
                            min: i,
                            max: r,
                            range: r - i,
                            sortedMarkers: a,
                            markerPositions: l
                        };
                        a = t.sort((e, t) => e - t);
                        let o = h(n, a),
                            u = a[0],
                            c = a[a.length - 1],
                            d = c - u;
                        if (s) {
                            let e = 100 / (a.length - 1);
                            l = a.map((t, n) => n * e)
                        } else {
                            let e = e => 100 * (e - u) / d;
                            l = a.map(t => e(t))
                        }
                        return {
                            min: u,
                            max: c,
                            range: d,
                            sortedMarkers: a,
                            markerPositions: l,
                            closestMarkerIndex: o
                        }
                    }(e)
                }
            }
            class T extends a.PureComponent {
                static getDerivedStateFromProps(e, t) {
                    return e.initialValue !== t.initialValueProp ? {
                        ...S(e),
                        active: t.active
                    } : null
                }
                componentWillUnmount() {
                    this.reset()
                }
                renderMark(e) {
                    let {
                        onMarkerRender: t
                    } = this.props;
                    return null != t ? t(e) : e
                }
                render() {
                    var e;
                    let {
                        value: t,
                        active: n,
                        focused: i,
                        sortedMarkers: a,
                        markerPositions: l,
                        closestMarkerIndex: u,
                        newClosestIndex: c,
                        min: d,
                        max: h
                    } = this.state, {
                        disabled: S,
                        stickToMarkers: T,
                        className: I,
                        children: m,
                        barStyles: g,
                        fillStyles: A,
                        mini: C,
                        hideBubble: R,
                        defaultValue: N,
                        orientation: v,
                        onValueRender: O,
                        renderMarker: D,
                        getAriaValueText: L,
                        barClassName: M,
                        grabberClassName: P,
                        grabberStyles: b = {},
                        markerPosition: y = r.ABOVE,
                        "aria-hidden": U,
                        "aria-label": G,
                        "aria-labelledby": w,
                        "aria-describedby": x
                    } = this.props, k = 0;
                    T ? null != l && (null != c ? k = l[c] : null != u && (k = l[u])) : k = this.scaleValue(t);
                    let F = "".concat(k, "%"),
                        B = null != l && null != a ? l.map((e, t) => {
                            let n = a[t],
                                i = null != N && N === n,
                                l = this.renderMark(n);
                            return (0, s.jsx)("div", {
                                className: o(p.mark, {
                                    [p.defaultValue]: i,
                                    [p.markAbove]: y === r.ABOVE,
                                    [p.markBelow]: y === r.BELOW
                                }),
                                style: {
                                    left: "".concat(e, "%")
                                },
                                children: null != D ? D(n) : (0, s.jsxs)(s.Fragment, {
                                    children: [(0, s.jsx)("div", {
                                        className: p.markValue,
                                        children: l
                                    }), (0, s.jsx)("div", {
                                        className: p["markDash".concat(null == l ? "simple" : "")]
                                    })]
                                })
                            }, t)
                        }) : null,
                        V = null != O ? O(t) : "".concat(k.toFixed(0), "%"),
                        H = null !== (e = null == L ? void 0 : L(t)) && void 0 !== e ? e : void 0;
                    return (0, s.jsx)(_.FocusRing, {
                        focusTarget: this.containerRef,
                        ringTarget: this.grabberRef,
                        children: (0, s.jsxs)("div", {
                            className: o(p.slider, I, {
                                [p.disabled]: S,
                                [p.mini]: C
                            }),
                            "aria-valuemin": d,
                            "aria-valuemax": h,
                            "aria-valuenow": t,
                            "aria-disabled": S,
                            "aria-orientation": v,
                            "aria-hidden": U,
                            "aria-label": G,
                            "aria-labelledby": w,
                            "aria-describedby": x,
                            "aria-valuetext": H,
                            role: "slider",
                            tabIndex: 0,
                            onKeyDown: this.handleKeyDown,
                            onMouseDown: this.handleContainerMouseDown,
                            onFocus: this.onFocus,
                            onBlur: this.onBlur,
                            ref: this.containerRef,
                            children: [(0, s.jsx)("div", {
                                className: p.track,
                                children: B
                            }), (0, s.jsx)("div", {
                                className: o(p.bar, M),
                                style: g,
                                children: (0, s.jsx)("div", {
                                    className: p.barFill,
                                    style: {
                                        ...A,
                                        width: F
                                    }
                                })
                            }), m, (0, s.jsx)("div", {
                                className: p.track,
                                children: (0, s.jsx)(E.Tooltip, {
                                    color: E.Tooltip.Colors.GREY,
                                    hideOnClick: !1,
                                    text: R || T ? null : V,
                                    forceOpen: n || i && f.default.keyboardModeEnabled,
                                    children: e => (0, s.jsx)("div", {
                                        ...e,
                                        className: o(p.grabber, P),
                                        style: {
                                            ...b,
                                            left: F
                                        },
                                        onMouseDown: this.handleMouseDown,
                                        ref: this.grabberRef
                                    })
                                })
                            })]
                        })
                    })
                }
                reset() {
                    var e, t, n, i;
                    null === (t = this.containerRef.current) || void 0 === t || null === (e = t.ownerDocument) || void 0 === e || e.removeEventListener("mousemove", this.handleMouseMove, !0), null === (i = this.containerRef.current) || void 0 === i || null === (n = i.ownerDocument) || void 0 === n || n.removeEventListener("mouseup", this.handleMouseUp, !0)
                }
                scaleValue(e) {
                    return 100 * (e - this.state.min) / this.state.range
                }
                unscaleValue(e) {
                    return e * this.state.range / 100 + this.state.min
                }
                focus() {
                    var e;
                    null === (e = this.containerRef.current) || void 0 === e || e.focus()
                }
                blur() {
                    var e;
                    null === (e = this.containerRef.current) || void 0 === e || e.blur()
                }
                moveStaggered(e) {
                    let t;
                    let {
                        boundingRect: n,
                        x: i = 0,
                        closestMarkerIndex: r,
                        markerPositions: s,
                        sortedMarkers: a
                    } = this.state, {
                        asValueChanges: l
                    } = this.props;
                    if (null == n) return;
                    let {
                        left: o,
                        right: u
                    } = n;
                    if (e.clientX <= o || e.clientX >= u) return;
                    let c = e.clientX - i,
                        d = s[r] + 100 * (c / (u - o));
                    if (this.props.equidistant) t = h(d, s);
                    else {
                        let e = this.unscaleValue(d);
                        t = h(e, a)
                    }
                    if (null != t) null == l || l(a[t]);
                    this.setState({
                        newClosestIndex: t
                    })
                }
                constructor(e) {
                    super(e), this.containerRef = a.createRef(), this.grabberRef = a.createRef(), this.moveGrabber = e => {
                        let {
                            sortedMarkers: t,
                            value: n,
                            min: i,
                            max: r
                        } = this.state, {
                            asValueChanges: s,
                            onValueChange: a,
                            stickToMarkers: l
                        } = this.props, o = {};
                        if (l) {
                            let i = t.indexOf(n);
                            if (i < 0) return;
                            let r = i + e,
                                s = t[r];
                            if (null == s) return;
                            o.value = s, o.closestMarkerIndex = r, o.newClosestIndex = r
                        } else o.value = c.clamp(n + e, i, r);
                        if (this.setState(o), o.value !== this.state.value) null == s || s(o.value), null == a || a(o.value)
                    }, this.handleContainerMouseDown = e => {
                        let t;
                        let {
                            disabled: n,
                            maxValue: i,
                            minValue: r,
                            asValueChanges: s,
                            onValueChange: a,
                            stickToMarkers: l
                        } = this.props, {
                            sortedMarkers: o,
                            markerPositions: u
                        } = this.state;
                        if (n) return;
                        let {
                            clientX: c,
                            currentTarget: _
                        } = e;
                        if (!(0, d.isElement)(_)) return;
                        let {
                            left: E,
                            width: f
                        } = _.getBoundingClientRect(), p = (c - E) / f;
                        if (l) {
                            let {
                                nextClosestMarkerIndex: e
                            } = u.reduce((e, t, n) => {
                                let i = Math.abs(t / 100 - p);
                                return i <= e.smallestDelta ? {
                                    smallestDelta: i,
                                    nextClosestMarkerIndex: n
                                } : e
                            }, {
                                smallestDelta: 1,
                                nextClosestMarkerIndex: -1
                            });
                            if (-1 === e) return;
                            this.setState({
                                closestMarkerIndex: e
                            }), t = o[e]
                        } else t = r + (i - r) * p, this.setState({
                            value: t
                        }), this.handleMouseDown(e);
                        null != a && a(t), null != s && s(t)
                    }, this.handleKeyDown = e => {
                        let {
                            disabled: t,
                            orientation: n,
                            keyboardStep: i = 1
                        } = this.props;
                        if (t) return;
                        let {
                            key: r
                        } = e, s = [], a = [];
                        switch (n) {
                            case "horizontal":
                                s = ["ArrowRight"], a = ["ArrowLeft"];
                                break;
                            case "vertical":
                                s = ["ArrowUp"], a = ["ArrowDown"];
                                break;
                            default:
                                s = ["ArrowRight", "ArrowUp"], a = ["ArrowLeft", "ArrowDown"]
                        }
                        a.includes(r) ? (e.preventDefault(), e.stopPropagation(), this.moveGrabber(-i)) : s.includes(r) && (e.preventDefault(), e.stopPropagation(), this.moveGrabber(i))
                    }, this.handleMouseDown = e => {
                        var t, n;
                        if (this.props.disabled) return;
                        e.stopPropagation();
                        let {
                            current: i
                        } = this.containerRef;
                        if (null == i || null === (t = i.ownerDocument) || void 0 === t || t.addEventListener("mousemove", this.handleMouseMove, !0), null == i || null === (n = i.ownerDocument) || void 0 === n || n.addEventListener("mouseup", this.handleMouseUp, !0), !(0, d.isElement)(i)) throw Error("[UIKit]Slider.handleMouseDown(): assert failed: domNode nodeType !== Element");
                        this.setState({
                            x: e.clientX,
                            active: !0,
                            boundingRect: i.getBoundingClientRect(),
                            newClosestIndex: this.state.closestMarkerIndex
                        })
                    }, this.handleMouseUp = e => {
                        e.stopPropagation(), this.reset();
                        let {
                            onValueChange: t,
                            stickToMarkers: n
                        } = this.props, {
                            newClosestIndex: i
                        } = this.state;
                        n && null != i ? (null == t || t(this.state.sortedMarkers[i]), this.setState({
                            newClosestIndex: null,
                            closestMarkerIndex: i
                        })) : null == t || t(this.state.value), this.setState({
                            active: !1
                        })
                    }, this.handleMouseMove = e => {
                        e.preventDefault(), this.props.stickToMarkers ? this.moveStaggered(e) : this.moveSmoothly(e)
                    }, this.onFocus = () => {
                        this.setState({
                            focused: !0
                        })
                    }, this.onBlur = () => {
                        this.setState({
                            focused: !1
                        })
                    }, this.moveSmoothly = e => {
                        let {
                            minValue: t,
                            maxValue: n,
                            asValueChanges: i
                        } = this.props, {
                            boundingRect: r
                        } = this.state;
                        if (null == r) return;
                        let {
                            left: s,
                            right: a
                        } = r, l = n - t, o = e.clientX - s, u = Math.min(Math.max(t + o / (a - s) * l, t), n);
                        null == i || i(u), this.setState({
                            value: u
                        })
                    }, this.state = {
                        active: !1,
                        focused: !1,
                        ...S(e)
                    }
                }
            }
            T.defaultProps = {
                initialValue: 10,
                minValue: 0,
                maxValue: 100,
                keyboardStep: 1,
                handleSize: 10,
                disabled: !1,
                stickToMarkers: !1,
                fillStyles: {}
            }
        },
        265984: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Slide: function() {
                    return h
                },
                Slides: function() {
                    return S
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("623829"),
                a = n("64379"),
                l = n("807403"),
                o = n("413197"),
                u = n("731898"),
                c = n("634634"),
                d = n("685665"),
                _ = n("542489"),
                E = n("561744");
            let f = {
                mass: 1,
                tension: 300,
                friction: 28,
                clamp: !0
            };

            function p(e, t) {
                return n => {
                    if (0 === n) return "auto";
                    let i = "forwards" === t.current,
                        r = n > 0,
                        s = !1;
                    return r && i && "left" === e && (s = !0), r && !i && "right" === e && (s = !0), !r && i && "right" === e && (s = !0), !r && !i && "left" === e && (s = !0), s ? "".concat(100 * Math.abs(n), "%") : "auto"
                }
            }

            function h(e) {
                return null
            }

            function S(e) {
                var t, n, h, S;
                let {
                    contentDisplay: T,
                    ...I
                } = e, m = {}, {
                    analyticsLocations: g
                } = (0, d.default)();
                r.Children.forEach(I.children, (e, t) => {
                    m[e.props.id] = {
                        children: e.props.children,
                        impressionName: e.props.impressionName,
                        impressionProperties: e.props.impressionProperties,
                        index: t
                    }
                });
                let A = I.activeSlide,
                    C = (0, c.default)(I.activeSlide);
                let R = (h = null != C ? m[C] : null, S = m[A], null == h ? null : h.index > S.index ? "backwards" : h.index < S.index ? "forwards" : null),
                    {
                        reducedMotion: N
                    } = r.useContext(o.AccessibilityPreferencesContext),
                    v = r.useContext(_.default),
                    O = m[A].impressionName,
                    D = {
                        ...m[A].impressionProperties,
                        location_stack: g
                    };
                v({
                    type: a.ImpressionTypes.MODAL,
                    name: O,
                    properties: D,
                    _stackContext: {
                        isSlide: !0
                    }
                });
                let {
                    ref: L,
                    width: M = 0,
                    height: P = 0
                } = (0, u.default)(A), b = {
                    ...f,
                    ...I.springConfig,
                    ...N.enabled ? {
                        clamp: !0
                    } : null
                }, y = (0, s.useSpring)({
                    immediate: null == C,
                    width: null !== (t = I.width) && void 0 !== t ? t : M,
                    height: P,
                    config: b
                }), U = (0, s.useTransition)(A, {
                    immediate: null == C,
                    value: 0,
                    from: {
                        value: 1
                    },
                    enter: {
                        value: 0
                    },
                    leave: {
                        value: -1
                    },
                    config: b,
                    onRest: (e, t) => {
                        let {
                            item: n
                        } = t;
                        n === A && null != I.onSlideReady && I.onSlideReady(n)
                    }
                }), G = (0, E.default)(R), {
                    width: w,
                    centered: x = !0
                } = I, k = l.isMobile ? "100%" : y.width.to(e => Math.round(e)), F = l.isMobile ? "100%" : y.height.to(e => Math.round(e)), B = l.isMobile ? {} : x ? {
                    transform: "translate3d(0, -50%, 0) scale(1.0, 1.0)",
                    top: "50%"
                } : {
                    transform: "scale(1.0, 1.0)"
                }, V = l.isMobile ? {} : {
                    overflow: null !== (n = I.overflow) && void 0 !== n ? n : "hidden"
                };
                return (0, i.jsx)(s.animated.div, {
                    style: {
                        position: "relative",
                        width: k,
                        height: F,
                        ...V
                    },
                    children: U((e, t, n) => {
                        let {
                            key: r
                        } = n;
                        return (0, i.jsx)(s.animated.div, {
                            ref: t === A ? L : null,
                            style: {
                                position: "absolute",
                                display: T,
                                flexDirection: "column",
                                backfaceVisibility: "hidden",
                                width: l.isMobile ? "100%" : w,
                                ...B,
                                ...N.enabled ? {
                                    opacity: e.value.to(e => 1 - Math.abs(e))
                                } : {
                                    left: e.value.to(p("left", G)),
                                    right: e.value.to(p("right", G))
                                }
                            },
                            children: m[t].children
                        }, r)
                    })
                })
            }
        },
        391010: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                StatusTypes: function() {
                    return d.StatusTypes
                },
                getStatusColor: function() {
                    return p
                },
                getStatusBackdropOpacity: function() {
                    return h
                },
                getStatusBackdropColor: function() {
                    return S
                },
                getStatusValues: function() {
                    return m
                },
                renderStatusMask: function() {
                    return g
                },
                AnimatedStatus: function() {
                    return A
                },
                getStatusMask: function() {
                    return C
                },
                getStatusSize: function() {
                    return R
                },
                Status: function() {
                    return N
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("623829"),
                o = n("819855"),
                u = n("449918"),
                c = n("587974"),
                d = n("49111"),
                _ = n("52904"),
                E = n("295719");
            let f = {
                tension: 600,
                friction: 70
            };

            function p(e) {
                switch (e) {
                    case d.StatusTypes.ONLINE:
                        return d.Color.GREEN_360;
                    case d.StatusTypes.IDLE:
                        return d.Color.YELLOW_300;
                    case d.StatusTypes.DND:
                        return d.Color.RED_400;
                    case d.StatusTypes.STREAMING:
                        return d.Color.TWITCH;
                    case d.StatusTypes.INVISIBLE:
                    case d.StatusTypes.UNKNOWN:
                    case d.StatusTypes.OFFLINE:
                    default:
                        return d.Color.PRIMARY_400
                }
            }

            function h(e, t) {
                return t === _.StatusBackdropColors.WHITE && e === d.StatusTypes.IDLE ? _.StatusBackdropOpacity.HIGH : _.StatusBackdropOpacity.LOW
            }

            function S(e) {
                return (0, o.isThemeDark)(e) ? _.StatusBackdropColors.BLACK : _.StatusBackdropColors.WHITE
            }

            function T(e, t, n, i) {
                return "scale(".concat(t, ") translate(").concat(.5625 * e + i, " ").concat(.75 * e + n, ")")
            }

            function I(e, t, n) {
                return "".concat(.5625 * e + n, "px ").concat(.75 * e + t, "px")
            }

            function m(e) {
                let {
                    size: t,
                    status: n,
                    isMobile: i,
                    isTyping: r,
                    topOffset: s = 0,
                    leftOffset: a = 0
                } = e, l = s / 8 * t, o = a / 8 * t;
                if (r) return {
                    bgRadius: .5 * t,
                    bgY: .25 * t + l,
                    bgX: 0,
                    bgHeight: t,
                    bgWidth: t * _.TYPING_WIDTH_RATIO,
                    cutoutX: .5 * t + o,
                    cutoutY: .75 * t + l,
                    cutoutWidth: 0,
                    cutoutHeight: 0,
                    cutoutRadius: 0,
                    polygonScale: T(t, 0, l, o),
                    polygonOrigin: I(t, l, o),
                    dotY: .75 * t + l,
                    dotX: .5 * t + o,
                    dotRadius: 0
                };
                switch (n) {
                    case d.StatusTypes.ONLINE:
                        if (i) return {
                            bgRadius: t * _.MOBILE_HEIGHT_RATIO * _.MOBILE_ICON_RADIUS,
                            bgY: 0,
                            bgX: o,
                            bgHeight: t * _.MOBILE_HEIGHT_RATIO,
                            bgWidth: t,
                            cutoutX: .125 * t + o,
                            cutoutY: .25 * t,
                            cutoutWidth: .75 * t,
                            cutoutHeight: .75 * t,
                            cutoutRadius: 0,
                            polygonScale: T(t, 0, l, o),
                            polygonOrigin: I(t, l, o),
                            dotY: 1.25 * t,
                            dotX: .5 * t + o,
                            dotRadius: .125 * t
                        };
                        return {
                            bgRadius: .5 * t, bgY: .25 * t + l, bgX: o, bgHeight: t, bgWidth: t, cutoutX: .5 * t + o, cutoutY: .75 * t + l, cutoutWidth: 0, cutoutHeight: 0, cutoutRadius: 0, polygonScale: T(t, 0, l, o), polygonOrigin: I(t, l, o), dotY: .75 * t + l, dotX: .5 * t + o, dotRadius: 0
                        };
                    case d.StatusTypes.IDLE:
                        return {
                            bgRadius: .5 * t, bgY: .25 * t + l, bgX: o, bgHeight: t, bgWidth: t, cutoutX: -(.125 * t) + o, cutoutY: .125 * t + l, cutoutWidth: .75 * t, cutoutHeight: .75 * t, cutoutRadius: .375 * t, polygonScale: T(t, 0, l, o), polygonOrigin: I(t, l, o), dotY: .75 * t + l, dotX: .5 * t + o, dotRadius: 0
                        };
                    case d.StatusTypes.DND:
                        return {
                            bgRadius: .5 * t, bgY: .25 * t + l, bgX: o, bgHeight: t, bgWidth: t, cutoutX: .125 * t + o, cutoutY: .625 * t + l, cutoutWidth: .75 * t, cutoutHeight: .25 * t, cutoutRadius: .125 * t, polygonScale: T(t, 0, l, o), polygonOrigin: I(t, l, o), dotY: .75 * t + l, dotX: .5 * t + o, dotRadius: 0
                        };
                    case d.StatusTypes.STREAMING:
                        return {
                            bgRadius: .5 * t, bgY: .25 * t + l, bgX: o, bgHeight: t, bgWidth: t, cutoutX: .5 * t + o, cutoutY: .75 * t + l, cutoutWidth: 0, cutoutHeight: 0, cutoutRadius: .25 * t, polygonScale: T(t, 1, l, o), polygonOrigin: I(t, l, o), dotY: .75 * t + l, dotX: .5 * t + o, dotRadius: 0
                        };
                    case d.StatusTypes.INVISIBLE:
                    case d.StatusTypes.UNKNOWN:
                    case d.StatusTypes.OFFLINE:
                    default:
                        return {
                            bgRadius: .5 * t, bgY: .25 * t + l, bgX: o, bgHeight: t, bgWidth: t, cutoutX: .25 * t + o, cutoutY: .5 * t + l, cutoutWidth: .5 * t, cutoutHeight: .5 * t, cutoutRadius: .25 * t, polygonScale: T(t, 0, l, o), polygonOrigin: I(t, l, o), dotY: .75 * t + l, dotX: .5 * t + o, dotRadius: 0
                        }
                }
            }

            function g(e, t, n) {
                var r;
                let {
                    bgRadius: s,
                    bgY: a,
                    bgX: o,
                    bgHeight: u,
                    bgWidth: c,
                    cutoutX: d,
                    cutoutY: _,
                    cutoutWidth: E,
                    cutoutHeight: f,
                    cutoutRadius: p,
                    polygonScale: h,
                    polygonOrigin: S,
                    dotY: T,
                    dotX: I,
                    dotRadius: m
                } = e;
                return (0, i.jsxs)("mask", {
                    id: n,
                    children: [(0, i.jsx)(l.animated.rect, {
                        x: o,
                        y: a,
                        width: c,
                        height: u,
                        rx: s,
                        ry: s,
                        fill: "white"
                    }), (0, i.jsx)(l.animated.rect, {
                        x: d,
                        y: _,
                        width: E,
                        height: f,
                        rx: p,
                        ry: p,
                        fill: "black"
                    }), (0, i.jsx)(l.animated.polygon, {
                        points: (r = t, "-".concat(.216506 * r, ",-").concat(.25 * r, " ").concat(.216506 * r, ",0 -").concat(.216506 * r, ",").concat(.25 * r)),
                        fill: "black",
                        transform: h,
                        style: {
                            transformOrigin: S
                        }
                    }), (0, i.jsx)(l.animated.circle, {
                        fill: "black",
                        cx: I,
                        cy: T,
                        r: m
                    })]
                })
            }

            function A(e) {
                let {
                    status: t,
                    isMobile: n = !1,
                    size: s = 8,
                    color: o,
                    className: c,
                    style: h
                } = e, S = r.useId(), T = t === d.StatusTypes.ONLINE && n, I = r.useMemo(() => m({
                    size: s,
                    status: t,
                    isMobile: T
                }), [s, t, T]), A = (0, l.useSpring)({
                    config: f,
                    to: I
                }), C = (0, u.useColorValue)(p(t)).hex, R = null == o ? C : o, [{
                    fill: N
                }] = (0, l.useSpring)({
                    config: f,
                    fill: R
                }, [R]), v = Math.ceil(s * _.MOBILE_HEIGHT_RATIO);
                return (0, i.jsxs)("svg", {
                    width: s,
                    height: v,
                    viewBox: "0 0 ".concat(s, " ").concat(v),
                    className: a(E.mask, c),
                    style: h,
                    children: [g(A, s, S), (0, i.jsx)(l.animated.rect, {
                        x: 0,
                        y: 0,
                        width: s,
                        height: v,
                        fill: N,
                        mask: "url(#".concat(S, ")")
                    })]
                })
            }

            function C(e, t) {
                let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                if (n) return c.default.Masks.STATUS_TYPING;
                switch (e) {
                    case d.StatusTypes.IDLE:
                        return c.default.Masks.STATUS_IDLE;
                    case d.StatusTypes.DND:
                        return c.default.Masks.STATUS_DND;
                    case d.StatusTypes.STREAMING:
                        return c.default.Masks.STATUS_STREAMING;
                    case d.StatusTypes.INVISIBLE:
                    case d.StatusTypes.UNKNOWN:
                    case d.StatusTypes.OFFLINE:
                        return c.default.Masks.STATUS_OFFLINE;
                    case d.StatusTypes.ONLINE:
                    default:
                        if (t) return c.default.Masks.STATUS_ONLINE_MOBILE;
                        return c.default.Masks.STATUS_ONLINE
                }
            }

            function R(e, t, n) {
                let i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                return t === d.StatusTypes.ONLINE && n && !i ? {
                    width: e,
                    height: e * _.MOBILE_HEIGHT_RATIO
                } : {
                    width: i ? e * _.TYPING_WIDTH_RATIO : e,
                    height: e
                }
            }

            function N(e) {
                let {
                    status: t,
                    isMobile: n = !1,
                    size: r = 8,
                    className: s,
                    style: l,
                    color: o
                } = e, _ = t === d.StatusTypes.ONLINE && n;
                return (0, i.jsx)(c.default, {
                    mask: C(t, _),
                    className: a(E.mask, s),
                    style: l,
                    ...R(r, t, _),
                    children: (0, i.jsx)("div", {
                        style: {
                            backgroundColor: null == o ? (0, u.getColor)(p(t)) : o
                        },
                        className: E.status
                    })
                })
            }
        },
        980672: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Switch: function() {
                    return p
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("623829"),
                o = n("912557"),
                u = n("413197"),
                c = n("718776"),
                d = n("708253"),
                _ = n("452474");
            let E = {
                    mass: 1,
                    tension: 250
                },
                f = {
                    X: {
                        TOP: "M5.13231 6.72963L6.7233 5.13864L14.855 13.2704L13.264 14.8614L5.13231 6.72963Z",
                        BOTTOM: "M13.2704 5.13864L14.8614 6.72963L6.72963 14.8614L5.13864 13.2704L13.2704 5.13864Z"
                    },
                    BAR: {
                        TOP: "M6.56666 11.0013L6.56666 8.96683L13.5667 8.96683L13.5667 11.0013L6.56666 11.0013Z",
                        BOTTOM: "M13.5582 8.96683L13.5582 11.0013L6.56192 11.0013L6.56192 8.96683L13.5582 8.96683Z"
                    },
                    CHECK: {
                        TOP: "M7.89561 14.8538L6.30462 13.2629L14.3099 5.25755L15.9009 6.84854L7.89561 14.8538Z",
                        BOTTOM: "M4.08643 11.0903L5.67742 9.49929L9.4485 13.2704L7.85751 14.8614L4.08643 11.0903Z"
                    }
                },
                p = function(e) {
                    let {
                        id: t,
                        onChange: n,
                        checked: s,
                        disabled: p,
                        className: h,
                        focusProps: S,
                        innerRef: T
                    } = e, {
                        reducedMotion: I
                    } = r.useContext(u.AccessibilityPreferencesContext), m = r.useRef(null), [g, A] = r.useState(!1), C = (0, d.useToken)(o.default.unsafe_rawColors.PRIMARY_400).spring(), R = (0, d.useToken)(o.default.unsafe_rawColors.GREEN_360).spring(), {
                        state: N,
                        opacity: v
                    } = (0, l.useSpring)({
                        config: E,
                        opacity: p ? .3 : 1,
                        state: g ? s ? .7 : .3 : s ? 1 : 0
                    });
                    return (0, i.jsx)(c.FocusRing, {
                        ...S,
                        within: !0,
                        offset: -2,
                        children: (0, i.jsxs)(l.animated.div, {
                            className: a(_.container, h, {
                                [_.checked]: s,
                                [_.disabled]: p
                            }),
                            onMouseDown: () => !p && A(!0),
                            onMouseUp: () => A(!1),
                            onMouseLeave: () => A(!1),
                            style: {
                                opacity: v,
                                backgroundColor: N.to({
                                    output: [C, R]
                                })
                            },
                            children: [(0, i.jsxs)(l.animated.svg, {
                                className: _.slider,
                                viewBox: "0 0 28 20",
                                preserveAspectRatio: "xMinYMid meet",
                                style: {
                                    left: N.to({
                                        range: [0, .3, .7, 1],
                                        output: [-3, 1, 8, 12]
                                    })
                                },
                                "aria-hidden": !0,
                                children: [(0, i.jsx)(l.animated.rect, {
                                    fill: "white",
                                    x: N.to({
                                        range: [0, .3, .7, 1],
                                        output: [4, 0, 0, 4]
                                    }),
                                    y: N.to({
                                        range: [0, .3, .7, 1],
                                        output: [0, 1, 1, 0]
                                    }),
                                    height: N.to({
                                        range: [0, .3, .7, 1],
                                        output: [20, 18, 18, 20]
                                    }),
                                    width: N.to({
                                        range: [0, .3, .7, 1],
                                        output: [20, 28, 28, 20]
                                    }),
                                    rx: "10"
                                }), function(e, t, n, r) {
                                    let s = e.to({
                                            output: [t, n]
                                        }),
                                        a = r ? [f.X.TOP, f.X.TOP, f.CHECK.TOP, f.CHECK.TOP] : [f.X.TOP, f.BAR.TOP, f.BAR.TOP, f.CHECK.TOP],
                                        o = r ? [f.X.BOTTOM, f.X.BOTTOM, f.CHECK.BOTTOM, f.CHECK.BOTTOM] : [f.X.BOTTOM, f.BAR.BOTTOM, f.BAR.BOTTOM, f.CHECK.BOTTOM];
                                    return (0, i.jsxs)("svg", {
                                        viewBox: "0 0 20 20",
                                        fill: "none",
                                        children: [(0, i.jsx)(l.animated.path, {
                                            fill: s,
                                            d: e.to({
                                                range: [0, .3, .7, 1],
                                                output: a
                                            })
                                        }), (0, i.jsx)(l.animated.path, {
                                            fill: s,
                                            d: e.to({
                                                range: [0, .3, .7, 1],
                                                output: o
                                            })
                                        })]
                                    })
                                }(N, C, R, I.enabled)]
                            }), (0, i.jsx)("input", {
                                id: t,
                                type: "checkbox",
                                ref: e => {
                                    m.current = e, null != T && (T.current = e)
                                },
                                className: _.input,
                                tabIndex: p ? -1 : 0,
                                onKeyDown: function(e) {
                                    if (!p && !e.repeat)(" " === e.key || "Enter" === e.key) && A(!0)
                                },
                                onKeyUp: function(e) {
                                    var t;
                                    if (!p && !!g && !e.repeat) A(!1), "Enter" === e.key && (null === (t = m.current) || void 0 === t || t.click())
                                },
                                onChange: function(e) {
                                    A(!1), null == n || n(e.currentTarget.checked, e)
                                },
                                checked: s,
                                disabled: p
                            })]
                        })
                    })
                }
        },
        914907: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TabBar: function() {
                    return C
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("608230"),
                c = n("253824"),
                d = n("912557"),
                _ = n("227645"),
                E = n("577776"),
                f = n("49111"),
                p = n("494232");
            let h = {
                side: p.side,
                top: p.top,
                "top-pill": p.topPill
            };

            function S(e) {
                let {
                    className: t,
                    onClick: n,
                    children: i,
                    "aria-expanded": r,
                    "aria-controls": a
                } = e;
                return (0, s.jsx)(_.Clickable, {
                    tabIndex: null == n ? -1 : 0,
                    className: o(p.header, t),
                    onClick: n,
                    "aria-expanded": r,
                    "aria-controls": a,
                    focusProps: {
                        offset: {
                            top: -6
                        }
                    },
                    children: (0, s.jsx)(E.Text, {
                        variant: "eyebrow",
                        color: "none",
                        className: p.headerText,
                        children: i
                    })
                })
            }

            function T(e) {
                let {
                    style: t
                } = e;
                return (0, s.jsx)("div", {
                    className: p.separator,
                    style: t
                })
            }
            let I = a.forwardRef(function(e, t) {
                let {
                    children: n,
                    id: i,
                    ...r
                } = e;
                return (0, s.jsx)("div", {
                    ...r,
                    ref: t,
                    role: "tabpanel",
                    id: m(i),
                    tabIndex: -1,
                    children: n
                })
            });

            function m(e) {
                return "".concat(e.replace(/\s+/g, "-").toLowerCase(), "-tab")
            }

            function g(e, t) {
                if (null == e) return;
                let n = {};
                return t === r.SELECTED ? (n.backgroundColor = e, n.color = d.default.unsafe_rawColors.WHITE_500.css, n) : (t === r.HOVER && (n.backgroundColor = (0, c.hex2rgb)(e, .1)), n.color = e, n)
            }(i = r || (r = {})).DEFAULT = "Default", i.HOVER = "Hover", i.SELECTED = "Selected";
            class A extends a.Component {
                getStyle() {
                    let {
                        color: e,
                        id: t,
                        selectedItem: n,
                        itemType: i
                    } = this.props, {
                        hover: s,
                        active: a
                    } = this.state;
                    if (null != e) {
                        if ("side" === i) return null != t && n === t || a ? g(e, r.SELECTED) : s ? g(e, r.HOVER) : g(e);
                        if ("top" === i) return n === t ? {
                            borderColor: e,
                            color: e
                        } : s ? {
                            borderColor: (0, c.hex2rgb)(e, .1),
                            color: (0, c.hex2rgb)(e, .6)
                        } : {
                            borderColor: "transparent",
                            color: (0, c.hex2rgb)(e, .4)
                        };
                        if ("top-pill" === i) return n === t ? {
                            backgroundColor: (0, c.hex2rgb)(e, .2),
                            color: e
                        } : {
                            backgroundColor: e,
                            color: d.default.unsafe_rawColors.WHITE_500.css
                        }
                    }
                }
                render() {
                    let {
                        children: e,
                        className: t,
                        id: n,
                        selectedItem: i,
                        color: r,
                        disabled: a,
                        onContextMenu: l,
                        clickableRef: u,
                        look: c,
                        disableItemStyles: d
                    } = this.props, E = this.props["aria-label"], f = i === n;
                    return (0, s.jsx)(_.Clickable, {
                        className: o(t, {
                            [p.item]: !d,
                            [p.brand]: "brand" === c,
                            [p.selected]: null == r && f,
                            [p.themed]: "grey" === c,
                            [p.disabled]: null == r && a
                        }),
                        style: this.getStyle(),
                        role: "tab",
                        "aria-selected": f,
                        "aria-controls": f ? m("".concat(n)) : void 0,
                        "aria-disabled": a,
                        tabIndex: f ? 0 : -1,
                        onMouseEnter: null != r ? this.handleMouseOver : void 0,
                        onClick: this.handleClick,
                        onMouseLeave: null != r ? this.handleMouseOut : void 0,
                        onMouseUp: null != r ? this.handleMouseUp : void 0,
                        onMouseDown: this.handleMouseDown,
                        onContextMenu: l,
                        "aria-label": E,
                        ref: u,
                        children: e
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        hover: !1,
                        active: !1
                    }, this.handleClick = e => {
                        let {
                            disabled: t,
                            onClick: n,
                            id: i,
                            onItemSelect: r
                        } = this.props;
                        !t && (null != n ? n(e) : null != r && r(i))
                    }, this.handleMouseDown = () => {
                        let {
                            color: e
                        } = this.props;
                        null != e && this.setState({
                            active: !0
                        })
                    }, this.handleMouseUp = () => {
                        this.setState({
                            active: !1
                        })
                    }, this.handleMouseOver = () => {
                        this.setState({
                            hover: !0
                        })
                    }, this.handleMouseOut = () => {
                        this.setState({
                            hover: !1,
                            active: !1
                        })
                    }
                }
            }
            A.defaultProps = {
                disabled: !1,
                look: "grey",
                disableItemStyles: !1
            };
            class C extends a.Component {
                render() {
                    let {
                        className: e,
                        children: t,
                        type: n = "side",
                        style: i,
                        "aria-label": r,
                        orientation: l = "horizontal"
                    } = this.props;
                    return (0, s.jsx)("div", {
                        ref: this.tabBarRef,
                        className: o(e, h[n]),
                        style: i,
                        role: "tablist",
                        "aria-orientation": l,
                        onKeyDown: this.handleKeyDown,
                        "aria-label": r,
                        children: a.Children.map(t, this.renderChildren)
                    })
                }
                constructor(...e) {
                    super(...e), this.tabBarRef = a.createRef(), this.focusManager = (0, u.createFocusManager)({
                        getFocusableElements: () => {
                            let e = this.tabBarRef.current;
                            if (null != e) {
                                let t = e.querySelectorAll('[role="tab"][aria-disabled="false"]');
                                return Array.from(t)
                            }
                            return []
                        },
                        getActiveElement: () => {
                            var e;
                            return null === (e = this.tabBarRef.current) || void 0 === e ? void 0 : e.ownerDocument.activeElement
                        }
                    }), this.renderChildren = e => {
                        let {
                            selectedItem: t,
                            onItemSelect: n,
                            type: i = "side",
                            look: r = "grey"
                        } = this.props;
                        return a.isValidElement(e) ? a.cloneElement(e, {
                            selectedItem: t,
                            onItemSelect: n,
                            itemType: i,
                            look: r
                        }) : null
                    }, this.getNodeForKeydownEvent = async e => {
                        let {
                            orientation: t = "horizontal"
                        } = this.props, n = "vertical" === t ? f.KeyboardKeys.ARROW_UP : f.KeyboardKeys.ARROW_LEFT, i = "vertical" === t ? f.KeyboardKeys.ARROW_DOWN : f.KeyboardKeys.ARROW_RIGHT;
                        switch (e.which) {
                            case n:
                                return this.focusManager.getPreviousFocusableElement();
                            case i:
                                return this.focusManager.getNextFocusableElement();
                            case f.KeyboardKeys.HOME:
                                return this.focusManager.getFirstFocusableElement();
                            case f.KeyboardKeys.END:
                                return this.focusManager.getLastFocusableElement()
                        }
                        return null
                    }, this.handleKeyDown = async e => {
                        let t = await this.getNodeForKeydownEvent(e);
                        null != t && (e.preventDefault(), t.focus())
                    }
                }
            }
            C.Header = S, C.Item = A, C.Separator = T, C.Panel = I
        },
        628400: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TableCell: function() {
                    return u
                },
                TableColumn: function() {
                    return c
                },
                TableRow: function() {
                    return d
                },
                TableBody: function() {
                    return _
                },
                TableHeader: function() {
                    return E
                },
                Table: function() {
                    return f
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("584489"),
                a = n("605451"),
                l = n("577776"),
                o = n("507852");

            function u(e) {
                return (0, i.jsx)(s.Cell, {
                    ...e,
                    className: o.cell
                })
            }

            function c(e) {
                let {
                    children: t,
                    ...n
                } = e;
                return (0, i.jsx)(s.Column, {
                    ...n,
                    className: o.column,
                    children: (0, i.jsx)(l.Text, {
                        variant: "eyebrow",
                        className: o.columnText,
                        children: t
                    })
                })
            }

            function d(e) {
                return (0, i.jsx)(s.Row, {
                    ...e,
                    className: o.row
                })
            }

            function _(e) {
                return (0, i.jsx)(s.TableBody, {
                    ...e,
                    className: o.body
                })
            }

            function E(e) {
                return (0, i.jsx)(s.TableHeader, {
                    ...e,
                    className: o.header
                })
            }

            function f(e) {
                let {
                    title: t,
                    header: n,
                    footer: l,
                    ...u
                } = e, c = r.useId();
                return (0, i.jsxs)("div", {
                    className: o.container,
                    children: [(0, i.jsxs)("div", {
                        className: o.toolbar,
                        children: [(0, i.jsx)(a.Heading, {
                            className: o.title,
                            variant: "heading-md/semibold",
                            id: c,
                            children: t
                        }), (0, i.jsx)("div", {
                            children: n
                        })]
                    }), (0, i.jsx)(s.Table, {
                        ...u,
                        "aria-labelledby": c,
                        className: o.table
                    }), null != l && (0, i.jsx)("div", {
                        className: o.footer,
                        children: l
                    })]
                })
            }
        },
        577776: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Text: function() {
                    return _
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("427964"),
                l = n.n(a),
                o = n("912557"),
                u = n("318483"),
                c = n("250063");
            let d = Object.fromEntries(Object.keys(o.default.colors).map(e => [l.kebabCase(e), e])),
                _ = e => {
                    let t, {
                            variant: n,
                            tag: r = "div",
                            selectable: a = !1,
                            className: l,
                            lineClamp: _,
                            color: E,
                            tabularNumbers: f = !1,
                            ...p
                        } = e,
                        h = "",
                        S = {};
                    if (null != _ && (1 === _ ? h = u.lineClamp1 : (h = u.lineClamp2Plus, S = {
                            lineClamp: _,
                            WebkitLineClamp: _
                        })), void 0 !== E) switch (E) {
                        case "none":
                            t = void 0;
                            break;
                        case "always-white":
                            t = "white";
                            break;
                        default:
                            var T;
                            t = null === (T = o.default.colors[d[E]]) || void 0 === T ? void 0 : T.css
                    }
                    let I = {
                        color: t,
                        ...S,
                        ...p.style
                    };
                    return (0, i.jsx)(r, {
                        className: s({
                            [u.defaultColor]: void 0 === E,
                            [u.selectable]: a,
                            [u.tabularNumbers]: f
                        }, h, c[n], l),
                        ...p,
                        style: Object.values(I).filter(Boolean).length > 0 ? I : void 0,
                        "data-text-variant": n
                    })
                }
        },
        74307: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TextArea: function() {
                    return I
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("462567"),
                o = n("718776"),
                u = n("516826"),
                c = n("741662"),
                d = n("324584"),
                _ = n("782340"),
                E = n("487732"),
                f = n("254180"),
                p = n("470039");
            let h = (0, l.v4)(),
                S = (0, l.v4)(),
                T = (0, l.v4)();
            class I extends r.Component {
                getPaddingRight() {
                    let {
                        maxLength: e
                    } = this.props;
                    return null == e ? 10 : 7.23 * "".concat(e).length + 10
                }
                getCharsLeftLength() {
                    let {
                        maxLength: e,
                        value: t
                    } = this.props;
                    if (null == e) return null;
                    let n = null != t ? t.length : 0;
                    return e - n
                }
                getIsOverflowing() {
                    let e = this.getCharsLeftLength();
                    return null != e && e < 0
                }
                getIsUnderflowing() {
                    let {
                        minLength: e,
                        value: t
                    } = this.props;
                    if (null == e) return !1;
                    let n = null != t ? t.length : 0;
                    return n < e
                }
                renderCharacterCount() {
                    if (this.props.showCharacterCount) {
                        var e;
                        let {
                            value: t,
                            maxLength: n
                        } = this.props;
                        return (0, i.jsxs)("div", {
                            className: a(E.maxLength, {
                                [E.errorOverflow]: this.hasError()
                            }),
                            "aria-hidden": "true",
                            children: [null !== (e = null == t ? void 0 : t.length) && void 0 !== e ? e : 0, " ", null != n && "/ ".concat(n)]
                        })
                    }
                    return null
                }
                renderMaxLength() {
                    if (this.props.showCharacterCount || !1 === this.props.showRemainingCharacterCount) return null;
                    let e = this.getCharsLeftLength();
                    return null == e ? null : (0, i.jsx)("div", {
                        className: a(E.maxLength, {
                            [E.errorOverflow]: e < 0
                        }),
                        "aria-hidden": "true",
                        children: e
                    })
                }
                hasError() {
                    return null != this.props.error || null != this.context.error || !1 !== this.state.dirty && (this.getIsOverflowing() || this.getIsUnderflowing() || !1)
                }
                getErrorMessage() {
                    let {
                        error: e,
                        maxLength: t,
                        minLength: n
                    } = this.props, i = this.getIsOverflowing() ? _.default.Messages.MAXIMUM_LENGTH_ERROR.format({
                        maxLength: t
                    }) : null, r = this.getIsUnderflowing() ? _.default.Messages.MINIMUM_LENGTH_ERROR.format({
                        minLength: n
                    }) : null;
                    return null != e && e.length < 1 || null === e ? null : void 0 !== e ? e : !1 === this.state.dirty ? null : null != i ? i : r
                }
                renderErrorMessage() {
                    let e = this.getErrorMessage();
                    return null == e ? null : (0, i.jsx)("div", {
                        id: h,
                        className: E.errorMessage,
                        children: e
                    })
                }
                render() {
                    var e, t;
                    let {
                        disabled: n,
                        value: r,
                        placeholder: s,
                        autoFocus: l,
                        minLength: u,
                        maxLength: h,
                        allowOverflow: I,
                        spellCheck: m,
                        resizeable: g,
                        className: A,
                        id: C,
                        rows: R,
                        flex: N,
                        autosize: v,
                        required: O,
                        onInvalid: D,
                        inputRef: L
                    } = this.props, M = v ? d.TextAreaAutosize : "textarea", P = this.hasError(), b = null !== (t = this.props["aria-labelledby"]) && void 0 !== t ? t : null === (e = this.context) || void 0 === e ? void 0 : e.titleId, y = this.getAriaDescribedBy();
                    return (0, i.jsxs)("div", {
                        className: a(f.inputWrapper, {
                            [E.flex]: N
                        }),
                        children: [(0, i.jsxs)("div", {
                            className: a(E.inputMaxLength, {
                                [E.flex]: N
                            }),
                            children: [(0, i.jsx)(o.FocusRing, {
                                children: (0, i.jsx)(M, {
                                    type: "text",
                                    className: a(f.inputDefault, E.textArea, p.scrollbarDefault, A, {
                                        [f.error]: P,
                                        [f.disabled]: n,
                                        [E.resizeable]: g
                                    }),
                                    "aria-labelledby": b,
                                    "aria-describedby": y,
                                    "aria-invalid": P,
                                    style: {
                                        paddingRight: this.getPaddingRight()
                                    },
                                    id: C,
                                    disabled: n,
                                    placeholder: s,
                                    value: r,
                                    autoFocus: l,
                                    minLength: u,
                                    maxLength: I ? void 0 : h,
                                    spellCheck: m,
                                    required: O,
                                    onChange: this.onChange,
                                    onBlur: this.onBlur,
                                    onFocus: this.onFocus,
                                    onKeyDown: this.onKeyDown,
                                    onInvalid: D,
                                    rows: R,
                                    ref: L
                                })
                            }), null != u && (0, i.jsx)(c.HiddenVisually, {
                                id: S,
                                children: _.default.Messages.MINIMUM_LENGTH.format({
                                    minLength: u
                                })
                            }), null != h && (0, i.jsx)(c.HiddenVisually, {
                                id: T,
                                children: _.default.Messages.MAXIMUM_LENGTH.format({
                                    maxLength: h
                                })
                            }), this.renderCharacterCount(), this.renderMaxLength()]
                        }), this.renderErrorMessage()]
                    })
                }
                constructor(e) {
                    var t;
                    super(e), this.getAriaDescribedBy = () => {
                        var e;
                        let {
                            maxLength: t,
                            minLength: n,
                            error: i
                        } = this.props, r = [], s = null === (e = this.context) || void 0 === e ? void 0 : e.errorId;
                        return null != s && r.push(s), null != i ? r.push(i) : (null != t && r.push(T), null != n && r.push(S)), r.length > 0 ? r.join(" ") : void 0
                    }, this.onChange = e => {
                        let {
                            onChange: t,
                            name: n
                        } = this.props;
                        null == t || t(e.currentTarget.value, n), this.setState({
                            dirty: !0
                        })
                    }, this.onFocus = e => {
                        let {
                            onFocus: t,
                            name: n
                        } = this.props;
                        null == t || t(e, n)
                    }, this.onBlur = e => {
                        let {
                            onBlur: t,
                            name: n
                        } = this.props;
                        null == t || t(e, n)
                    }, this.onKeyDown = e => {
                        let {
                            onKeyDown: t
                        } = this.props;
                        null == t || t(e)
                    }, this.state = {
                        dirty: null !== (t = e.defaultDirty) && void 0 !== t && t
                    }
                }
            }
            I.contextType = u.FormContext, I.defaultProps = {
                name: "",
                disabled: !1,
                placeholder: "",
                autoFocus: !1,
                resizeable: !1,
                flex: !1,
                autosize: !1,
                rows: 3,
                allowOverflow: !1
            }
        },
        324584: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                TextAreaAutosize: function() {
                    return _
                }
            });
            var r = n("920040"),
                s = n("773670"),
                a = n("575482"),
                l = n.n(a),
                o = n("207691"),
                u = n("718776"),
                c = n("470039");
            let d = ["letter-spacing", "line-height", "padding-top", "padding-bottom", "font-family", "font-weight", "font-size", "text-transform", "width", "padding-left", "padding-right", "border-width", "box-sizing"];
            class _ extends s.PureComponent {
                componentDidMount() {
                    Promise.resolve().then(() => this.calculateSize())
                }
                componentDidUpdate(e, t) {
                    if (this.state.height !== t.height) {
                        let {
                            onResize: e
                        } = this.props;
                        null == e || e(this.state.height)
                    }
                    e.value !== this.props.value && Promise.resolve().then(() => this.calculateSize())
                }
                calculateSize() {
                    var e;
                    let t = this._textArea;
                    if (null == t) return;
                    let {
                        fontWidthEstimate: n,
                        rows: r
                    } = this.props, s = null !== (e = this.props.value) && void 0 !== e ? e : t.value;
                    if (null != n && -1 === s.indexOf("\n") && s.length * n < .8 * t.offsetWidth) {
                        this.setState({
                            height: void 0
                        });
                        return
                    }
                    null == i && null != document.body && (i = document.createElement("textarea"), document.body.appendChild(i));
                    let {
                        paddingSize: a,
                        borderSize: l,
                        boxSizing: o,
                        sizingStyle: u
                    } = this.calculateNodeStyling(t);
                    i.setAttribute("style", u + ";\n  visibility:hidden;\n  overflow:hidden;\n  position:absolute;\n  z-index:-1000;\n  top:0;\n  right:0;\n"), i.value = s, null != r ? i.setAttribute("rows", "".concat(r)) : i.removeAttribute("rows");
                    let c = i.scrollHeight;
                    "border-box" === o ? c += l : "content-box" === o && (c -= a), this.setState({
                        height: c
                    })
                }
                calculateNodeStyling(e) {
                    let t = window.getComputedStyle(e),
                        n = (0, o.getFirstTruthyValue)(t.getPropertyValue("box-sizing"), t.getPropertyValue("-moz-box-sizing"), t.getPropertyValue("-webkit-box-sizing")),
                        i = parseFloat(t.getPropertyValue("padding-bottom")) + parseFloat(t.getPropertyValue("padding-top")),
                        r = parseFloat(t.getPropertyValue("border-bottom-width")) + parseFloat(t.getPropertyValue("border-top-width")),
                        s = d.map(e => "".concat(e, ":").concat(t.getPropertyValue(e))).join(";");
                    return {
                        sizingStyle: s,
                        paddingSize: i,
                        borderSize: r,
                        boxSizing: n
                    }
                }
                clear() {
                    null != this._textArea && (this._textArea.value = ""), this.calculateSize()
                }
                blur() {
                    let {
                        _textArea: e
                    } = this;
                    null != e && e.blur()
                }
                focus() {
                    let {
                        _textArea: e
                    } = this;
                    null != e && e.focus()
                }
                setSelection(e, t) {
                    null != this._textArea && (this._textArea.selectionStart = e, this._textArea.selectionEnd = t)
                }
                get selectionStart() {
                    var e, t;
                    return null !== (t = null === (e = this._textArea) || void 0 === e ? void 0 : e.selectionStart) && void 0 !== t ? t : 0
                }
                get selectionEnd() {
                    var e, t;
                    return null !== (t = null === (e = this._textArea) || void 0 === e ? void 0 : e.selectionEnd) && void 0 !== t ? t : 0
                }
                get value() {
                    var e, t;
                    return null !== (t = null === (e = this._textArea) || void 0 === e ? void 0 : e.value) && void 0 !== t ? t : ""
                }
                render() {
                    let {
                        style: e,
                        className: t,
                        ...n
                    } = this.props;
                    delete n.fontWidthEstimate, delete n.onResize;
                    let i = {
                        ...this.state,
                        ...e
                    };
                    return (0, r.jsx)(u.FocusRing, {
                        children: (0, r.jsx)("textarea", {
                            ...n,
                            className: l(t, c.scrollbarGhostHairline),
                            ref: this.handleSetRef,
                            style: i,
                            onChange: this.handleChange
                        })
                    })
                }
                constructor(e) {
                    super(e), this.handleSetRef = e => {
                        this._textArea = e
                    }, this.handleChange = e => {
                        let {
                            onChange: t
                        } = this.props;
                        null == t || t(e), this.calculateSize()
                    }, this.state = {
                        height: void 0
                    }
                }
            }
            _.defaultProps = {
                autoFocus: !1,
                disabled: !1,
                autoCorrect: "off"
            }
        },
        240353: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                InputError: function() {
                    return p
                },
                TextInput: function() {
                    return h
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("623829"),
                o = n("718776"),
                u = n("516826"),
                c = n("577776"),
                d = n("634634"),
                _ = n("782340"),
                E = n("254180");
            let f = {
                DEFAULT: E.inputDefault,
                MINI: E.inputMini
            };

            function p(e) {
                let {
                    error: t
                } = e, n = (0, l.useTransition)(t, {
                    config: {
                        tension: 250,
                        clamp: !0
                    },
                    from: {
                        marginTop: 0,
                        height: 0,
                        opacity: 0,
                        transform: "translate3d(0, -100%, 0)"
                    },
                    enter: {
                        marginTop: 4,
                        height: "auto",
                        opacity: 1,
                        transform: "translate3d(0, -0px, 0)"
                    },
                    leave: {
                        marginTop: 0,
                        height: 0,
                        opacity: 0,
                        transform: "translate3d(0, -100%, 0)"
                    }
                }), r = (0, d.default)(t);
                return (0, i.jsx)(i.Fragment, {
                    children: n((e, n, s) => {
                        let {
                            key: a
                        } = s, {
                            transform: o,
                            ...u
                        } = e;
                        return null != n && "" !== n ? (0, i.jsx)(l.animated.div, {
                            style: {
                                ...u,
                                overflow: "hidden"
                            },
                            children: (0, i.jsx)(l.animated.div, {
                                style: {
                                    transform: o
                                },
                                children: (0, i.jsx)(c.Text, {
                                    color: "text-danger",
                                    variant: "text-xs/normal",
                                    children: null != t && "" !== t ? t : r
                                })
                            })
                        }, a) : null
                    })
                })
            }
            class h extends r.Component {
                render() {
                    var e, t;
                    let {
                        className: n,
                        inputClassName: r,
                        inputPrefix: s,
                        disabled: l,
                        size: u,
                        editable: c,
                        inputRef: d,
                        prefixElement: _,
                        focusProps: f,
                        ...h
                    } = this.props, S = null !== (t = h["aria-labelledby"]) && void 0 !== t ? t : null === (e = this.context) || void 0 === e ? void 0 : e.titleId;
                    return (0, i.jsxs)("div", {
                        className: a(E.inputWrapper, n),
                        children: [null != _ && _, null != s ? (0, i.jsx)("span", {
                            className: E.inputPrefix,
                            children: s
                        }) : null, (0, i.jsx)(o.FocusRing, {
                            ...f,
                            children: (0, i.jsx)("input", {
                                className: a(u, r, {
                                    [E.error]: this.hasError(),
                                    [E.disabled]: l,
                                    [E.editable]: c
                                }),
                                disabled: l,
                                readOnly: !1 === c || void 0,
                                ...h,
                                "aria-labelledby": S,
                                onChange: this.onChange,
                                onBlur: this.onBlur,
                                onFocus: this.onFocus,
                                ref: d
                            })
                        }), (0, i.jsx)(p, {
                            error: this.getError()
                        })]
                    })
                }
                constructor(e) {
                    var t;
                    super(e), this.hasError = () => null != this.props.error && !!(this.props.error.length > 0) || !1 !== this.state.dirty && (this.getIsUnderFlowing() || this.getIsOverFlowing()), this.getError = () => {
                        let {
                            error: e,
                            minLength: t,
                            maxLength: n
                        } = this.props, i = this.getIsUnderFlowing() ? _.default.Messages.MINIMUM_LENGTH_ERROR.format({
                            minLength: t
                        }) : null, r = this.getIsOverFlowing() ? _.default.Messages.MAXIMUM_LENGTH_ERROR.format({
                            maxLength: n
                        }) : null;
                        return null != e && e.length < 1 || null === e ? null : null != e ? e : !1 === this.state.dirty ? null : null != i ? i : r
                    }, this.getIsUnderFlowing = () => {
                        var e;
                        let {
                            value: t,
                            minLength: n
                        } = this.props;
                        return null != n && (null !== (e = null == t ? void 0 : t.length) && void 0 !== e ? e : 0) < n
                    }, this.getIsOverFlowing = () => {
                        var e;
                        let {
                            value: t,
                            maxLength: n
                        } = this.props;
                        return null != n && (null !== (e = null == t ? void 0 : t.length) && void 0 !== e ? e : 0) > n
                    }, this.onChange = e => {
                        var t, n;
                        null === (t = (n = this.props).onChange) || void 0 === t || t.call(n, e.currentTarget.value, this.props.name), this.setState({
                            dirty: !0
                        })
                    }, this.onFocus = e => {
                        var t, n;
                        null === (t = (n = this.props).onFocus) || void 0 === t || t.call(n, e, this.props.name)
                    }, this.onBlur = e => {
                        var t, n;
                        null === (t = (n = this.props).onBlur) || void 0 === t || t.call(n, e, this.props.name)
                    }, this.state = {
                        dirty: null !== (t = e.defaultDirty) && void 0 !== t && t
                    }
                }
            }
            h.Sizes = f, h.contextType = u.FormContext, h.defaultProps = {
                name: "",
                size: f.DEFAULT,
                disabled: !1,
                type: "text",
                placeholder: "",
                autoFocus: !1,
                maxLength: 999
            }
        },
        161814: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TimeInput: function() {
                    return o
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("774811"),
                a = n("859973"),
                l = n("845848");

            function o(e) {
                let {
                    value: t,
                    onChange: n,
                    hideValue: o,
                    disabled: u = !1
                } = e, c = r.useRef(null), d = r.useMemo(() => new a.TimeOptions, []), [_, E] = r.useState("");

                function f(e) {
                    null != t && n((0, a.timeAtSpecificDay)(t, d.selectValue(e)))
                }
                return (0, i.jsx)(s.SearchableSelect, {
                    ref: c,
                    className: l.select,
                    options: d.getOptions(_),
                    value: o ? void 0 : d.lookupByValue(t),
                    onChange: f,
                    isDisabled: u,
                    onSearchChange: E,
                    onKeyDown: function(e) {
                        if ("Enter" === e.key) {
                            let e = (0, a.convertToTimeOfADay)(t, _);
                            if (null != e) {
                                var n;
                                f(e), null === (n = c.current) || void 0 === n || n.close()
                            }
                        }
                    }
                })
            }
        },
        35672: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createToast: function() {
                    return _
                },
                Toast: function() {
                    return E
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("462567"),
                a = n("577776"),
                l = n("522049"),
                o = n("984678"),
                u = n("830031"),
                c = n("159350"),
                d = n("474555");

            function _(e, t) {
                let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : c.TOAST_DEFAULT_OPTIONS,
                    {
                        position: i = c.TOAST_DEFAULT_OPTIONS.position,
                        component: r = c.TOAST_DEFAULT_OPTIONS.component,
                        duration: a = c.TOAST_DEFAULT_OPTIONS.duration
                    } = n;
                return {
                    message: e,
                    id: (0, s.v4)(),
                    type: t,
                    options: {
                        position: i,
                        component: r,
                        duration: a
                    }
                }
            }
            let E = r.memo(function(e) {
                let {
                    message: t,
                    type: n,
                    id: r,
                    options: {
                        component: s = c.TOAST_DEFAULT_OPTIONS.component
                    } = c.TOAST_DEFAULT_OPTIONS
                } = e;
                return null != s ? (0, i.jsx)(i.Fragment, {
                    children: s
                }) : (0, i.jsxs)("div", {
                    id: r,
                    className: d.toast,
                    children: [function(e) {
                        switch (e) {
                            case c.ToastType.SUCCESS:
                                return (0, i.jsx)(u.default, {
                                    className: d.icon
                                });
                            case c.ToastType.FAILURE:
                                return (0, i.jsx)(o.default, {
                                    className: d.icon
                                });
                            case c.ToastType.CLIP:
                                return (0, i.jsx)(l.default, {
                                    className: d.clipIcon
                                });
                            default:
                                return null
                        }
                    }(n), (0, i.jsx)(a.Text, {
                        className: d.content,
                        color: "header-primary",
                        variant: "text-md/normal",
                        children: t
                    })]
                })
            })
        },
        325236: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useToastStore: function() {
                    return r
                },
                showToast: function() {
                    return s
                },
                popToast: function() {
                    return a
                }
            });
            var i = n("710835");
            let r = (0, i.default)(() => ({
                currentToast: null,
                queuedToasts: []
            }));

            function s(e) {
                r.setState(t => null != t.currentToast ? {
                    ...t,
                    queuedToasts: [...t.queuedToasts, e]
                } : {
                    currentToast: e,
                    queuedToasts: []
                })
            }

            function a() {
                r.setState(e => {
                    let t = e.queuedToasts;
                    return t.length > 0 ? {
                        currentToast: t[0],
                        queuedToasts: t.slice(1)
                    } : {
                        currentToast: null,
                        queuedToasts: []
                    }
                })
            }
        },
        159350: function(e, t, n) {
            "use strict";
            var i, r, s, a;
            n.r(t), n.d(t, {
                ToastType: function() {
                    return i
                },
                ToastPosition: function() {
                    return r
                },
                TOAST_DEFAULT_OPTIONS: function() {
                    return l
                }
            });
            (s = i || (i = {}))[s.MESSAGE = 0] = "MESSAGE", s[s.SUCCESS = 1] = "SUCCESS", s[s.FAILURE = 2] = "FAILURE", s[s.CUSTOM = 3] = "CUSTOM", s[s.CLIP = 4] = "CLIP", (a = r || (r = {}))[a.TOP = 0] = "TOP", a[a.BOTTOM = 1] = "BOTTOM";
            let l = {
                position: r.TOP,
                component: null,
                duration: 3e3
            }
        },
        371557: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ToastContainer: function() {
                    return f
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("623829"),
                a = n("498225"),
                l = n("206230"),
                o = n("35672"),
                u = n("325236"),
                c = n("159350"),
                d = n("391208");
            let _ = {
                    duration: 300,
                    friction: 24,
                    tension: 280
                },
                E = {
                    [c.ToastPosition.TOP]: {
                        styles: d.containerTop,
                        transition: {
                            trail: 400,
                            from: {
                                transform: "translate3d(0, -100%, 0)",
                                opacity: 0,
                                config: _
                            },
                            enter: {
                                transform: "translate3d(0, -0px, 0)",
                                opacity: 1,
                                config: _
                            },
                            leave: {
                                transform: "translate3d(0, -100%, 0)",
                                opacity: 0,
                                config: {
                                    ..._,
                                    friction: 40,
                                    clamp: !0
                                }
                            }
                        }
                    },
                    [c.ToastPosition.BOTTOM]: {
                        styles: d.containerBottom,
                        transition: {
                            trail: 400,
                            from: {
                                transform: "translate3d(0, 100%, 0)",
                                opacity: 0,
                                config: _
                            },
                            enter: {
                                transform: "translate3d(0, 0px, 0)",
                                opacity: 1,
                                config: _
                            },
                            leave: {
                                transform: "translate3d(0, 100%, 0)",
                                opacity: 0,
                                config: {
                                    ..._,
                                    friction: 40,
                                    clamp: !0
                                }
                            }
                        }
                    }
                };

            function f() {
                var e, t, n, d, _, f;
                let p = (0, u.useToastStore)(e => e.currentToast),
                    h = r.useRef(null !== (n = null == p ? void 0 : null === (e = p.options) || void 0 === e ? void 0 : e.position) && void 0 !== n ? n : c.TOAST_DEFAULT_OPTIONS.position),
                    S = r.useRef(null !== (d = null == p ? void 0 : null === (t = p.options) || void 0 === t ? void 0 : t.duration) && void 0 !== d ? d : c.TOAST_DEFAULT_OPTIONS.duration),
                    T = (0, a.useStateFromStores)([l.default], () => l.default.useReducedMotion);
                r.useEffect(() => {
                    if (null != p) {
                        var e, t, n, i;
                        h.current = null !== (n = null === (e = p.options) || void 0 === e ? void 0 : e.position) && void 0 !== n ? n : c.TOAST_DEFAULT_OPTIONS.position, S.current = null !== (i = null === (t = p.options) || void 0 === t ? void 0 : t.duration) && void 0 !== i ? i : c.TOAST_DEFAULT_OPTIONS.duration
                    }
                }, [p]);
                let I = r.useMemo(() => {
                        var e;
                        return E[null !== (_ = null == p ? void 0 : null === (e = p.options) || void 0 === e ? void 0 : e.position) && void 0 !== _ ? _ : h.current]
                    }, [p]),
                    m = (0, s.useTransition)(p, {
                        keys: e => null !== (f = null == e ? void 0 : e.id) && void 0 !== f ? f : "",
                        immediate: T,
                        ...I.transition
                    });
                return r.useEffect(() => {
                    null != p && setTimeout(() => {
                        (0, u.popToast)()
                    }, S.current)
                }, [p]), (0, i.jsx)("div", {
                    className: I.styles,
                    children: m((e, t) => null === t ? null : (0, i.jsx)(s.animated.div, {
                        style: e,
                        children: (0, i.jsx)(o.Toast, {
                            ...t
                        })
                    }, t.id))
                })
            }
        },
        414055: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TooltipColors: function() {
                    return r
                },
                TooltipLayer: function() {
                    return g
                },
                Tooltip: function() {
                    return O
                },
                TooltipContainer: function() {
                    return D
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("865768"),
                c = n.n(u),
                d = n("623829"),
                _ = n("807403"),
                E = n("117064"),
                f = n("638800"),
                p = n("413197"),
                h = n("206230"),
                S = n("983782"),
                T = n("774316");
            (i = r || (r = {})).PRIMARY = "primary", i.BLACK = "black", i.GREY = "grey", i.BRAND = "brand", i.GREEN = "green", i.YELLOW = "yellow", i.RED = "red", i.CUSTOM = "custom", i.PREMIUM = "premium";
            let I = Object.freeze({}),
                m = Object.freeze({
                    top: T.tooltipTop,
                    bottom: T.tooltipBottom,
                    left: T.tooltipLeft,
                    right: T.tooltipRight,
                    center: T.tooltipCenter,
                    window_center: T.tooltipCenter,
                    [r.PRIMARY]: T.tooltipPrimary,
                    [r.BLACK]: T.tooltipBlack,
                    [r.GREY]: T.tooltipGrey,
                    [r.BRAND]: T.tooltipBrand,
                    [r.GREEN]: T.tooltipGreen,
                    [r.YELLOW]: T.tooltipYellow,
                    [r.RED]: T.tooltipRed,
                    [r.CUSTOM]: null,
                    [r.PREMIUM]: T.tooltipPremium
                }),
                g = e => {
                    let {
                        targetElementRef: t,
                        align: n = "center",
                        position: i,
                        color: r,
                        children: a,
                        onNonAccessibleClick: l,
                        tooltipClassName: u,
                        tooltipContentClassName: c,
                        spacing: _ = 8,
                        animationStyle: E,
                        disableTooltipPointerEvents: f = !1,
                        allowOverflow: p = !1
                    } = e, h = "".concat("string" == typeof a ? a : "", ":").concat(i);
                    return (0, s.jsx)(S.AppReferencePositionLayer, {
                        disablePointerEvents: f,
                        reference: t,
                        position: i,
                        autoInvert: !0,
                        align: n,
                        positionKey: h,
                        spacing: _,
                        nudgeAlignIntoViewport: !0,
                        children: e => {
                            let {
                                position: t,
                                nudge: _
                            } = e;
                            return (0, s.jsxs)(d.animated.div, {
                                onClick: l,
                                className: o(T.tooltip, m[null != t ? t : i], m[r], {
                                    [T.tooltipDisablePointerEvents]: f
                                }, u),
                                style: E,
                                children: [(0, s.jsx)("div", {
                                    className: T.tooltipPointer,
                                    style: function(e, t, n) {
                                        let i = "left" === e || "right" === e,
                                            r = "50%",
                                            s = n;
                                        return t === (i ? "top" : "left") ? (r = "0%", s += 16) : t === (i ? "bottom" : "right") && (r = "100%", s -= 20), {
                                            [i ? "top" : "left"]: "calc(".concat(r, " + ").concat(s, "px)")
                                        }
                                    }(null != t ? t : i, n, _)
                                }), (0, s.jsx)("div", {
                                    className: o(T.tooltipContent, {
                                        [T.tooltipContentAllowOverflow]: p
                                    }, c),
                                    children: a
                                })]
                            })
                        }
                    })
                },
                A = {
                    scale: .95,
                    opacity: 0
                },
                C = {
                    scale: 1,
                    opacity: 0
                },
                R = {
                    scale: 1,
                    opacity: 1
                },
                N = {
                    tension: 2400,
                    friction: 52
                },
                v = e => {
                    let {
                        isVisible: t,
                        onAnimationRest: n,
                        targetElementRef: i,
                        ...r
                    } = e, {
                        reducedMotion: l
                    } = a.useContext(p.AccessibilityPreferencesContext), o = (0, d.useTransition)(t, {
                        keys: e => e ? "tooltip" : "empty",
                        config: N,
                        from: l.enabled ? C : A,
                        enter: R,
                        leave: l.enabled ? C : A,
                        onRest: n
                    });
                    return o((e, t) => t ? (0, s.jsx)(g, {
                        animationStyle: e,
                        targetElementRef: i,
                        ...r
                    }) : null)
                };
            class O extends a.Component {
                static getDerivedStateFromProps(e, t) {
                    return t.shouldShowTooltip && null == e.text ? {
                        shouldShowTooltip: !1
                    } : null
                }
                componentDidMount() {
                    this.shouldShowTooltip(this.props, this.state) && this.setDomElement()
                }
                componentDidUpdate(e, t) {
                    let n = this.shouldShowTooltip(this.props, this.state);
                    n !== this.shouldShowTooltip(e, t) && (n ? this.setDomElement() : this.hasDomElement = !1)
                }
                setDomElement() {
                    let e = c.findDOMNode(this);
                    if (!(0, E.isElement)(e)) throw Error("Tooltip cannot find DOM node");
                    this.domElementRef.current = e, this.hasDomElement = !0, this.forceUpdate()
                }
                componentWillUnmount() {
                    this.showTimeout.stop(), this.domElementRef.current = null
                }
                render() {
                    let e;
                    let {
                        children: t,
                        text: n,
                        "aria-label": i
                    } = this.props;
                    if (null == n) return t(I);
                    "string" == typeof i ? e = i : "string" == typeof n && !1 !== i && (e = n);
                    let r = {
                        onClick: this.handleClick,
                        onMouseEnter: this.handleMouseEnter,
                        onMouseLeave: this.handleMouseLeave,
                        onContextMenu: this.handleContextMenu,
                        onFocus: this.handleFocus,
                        onBlur: this.handleBlur
                    };
                    return null != e && (r["aria-label"] = e), (0, s.jsxs)(a.Fragment, {
                        children: [t(r), this.renderTooltip()]
                    })
                }
                shouldShowTooltip(e, t) {
                    return e.shouldShow && (t.shouldShowTooltip || e.forceOpen)
                }
                renderTooltip() {
                    let {
                        text: e,
                        align: t,
                        position: n,
                        color: i,
                        spacing: r,
                        tooltipClassName: a,
                        tooltipContentClassName: l,
                        disableTooltipPointerEvents: o,
                        onAnimationRest: u,
                        allowOverflow: c,
                        clickableOnMobile: d,
                        hideOnClick: E
                    } = this.props, f = (_.isMobile || _.isTablet) && !0 === d && E, p = this.shouldShowTooltip(this.props, this.state) && this.hasDomElement, h = null;
                    return h = e instanceof Function ? p ? e() : null : e, (0, s.jsx)(v, {
                        disableTooltipPointerEvents: !1 !== o && !f || !0 === o,
                        targetElementRef: this.domElementRef,
                        tooltipClassName: a,
                        tooltipContentClassName: l,
                        align: t,
                        position: n,
                        color: i,
                        spacing: r,
                        isVisible: p,
                        onAnimationRest: u,
                        onNonAccessibleClick: f ? this.handleClick : void 0,
                        allowOverflow: c,
                        children: h
                    })
                }
                show() {
                    let {
                        delay: e,
                        overflowOnly: t
                    } = this.props;
                    if (t) {
                        let e = c.findDOMNode(this);
                        if (null == e || (0, E.isElement)(e, HTMLElement) && e.offsetWidth >= e.scrollWidth) return
                    }
                    null != e ? this.showTimeout.start(e, () => this.toggleShow(!0), !1) : this.toggleShow(!0)
                }
                hide() {
                    this.showTimeout.stop(), this.toggleShow(!1)
                }
                toggleShow(e) {
                    if (this.state.shouldShowTooltip !== e) {
                        if (e) {
                            var t, n;
                            null === (t = (n = this.props).onTooltipShow) || void 0 === t || t.call(n)
                        }
                        c.flushSync(() => {
                            this.setState({
                                shouldShowTooltip: e
                            })
                        })
                    }
                }
                constructor(...e) {
                    super(...e), this.showTimeout = new f.Timeout, this.domElementRef = a.createRef(), this.hasDomElement = !1, this.state = {
                        shouldShowTooltip: !1
                    }, this.handleMouseEnter = () => {
                        !((_.isMobile || _.isTablet) && !0 === this.props.clickableOnMobile) && this.show()
                    }, this.handleMouseLeave = () => {
                        !((_.isMobile || _.isTablet) && !0 === this.props.clickableOnMobile) && this.hide()
                    }, this.handleFocus = () => {
                        h.default.keyboardModeEnabled && this.show()
                    }, this.handleBlur = () => {
                        this.hide()
                    }, this.handleClick = () => {
                        let e = this.hasDomElement;
                        e && this.props.hideOnClick ? this.hide() : !e && (_.isMobile || _.isTablet) && !0 === this.props.clickableOnMobile && this.show()
                    }, this.handleContextMenu = () => {
                        this.hide()
                    }
                }
            }
            O.Colors = r, O.defaultProps = {
                hideOnClick: !0,
                position: "top",
                color: r.PRIMARY,
                forceOpen: !1,
                spacing: 8,
                shouldShow: !0,
                allowOverflow: !1,
                overflowOnly: !1
            };
            let D = e => {
                let {
                    children: t,
                    className: n,
                    element: i = "div",
                    ...r
                } = e;
                return (0, s.jsx)(O, {
                    ...r,
                    children: e => a.createElement(i, null != n ? {
                        ...e,
                        className: n
                    } : e, t)
                })
            }
        },
        685639: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TransitionStates: function() {
                    return r
                },
                TransitionGroup: function() {
                    return u
                }
            });
            var i, r, s = n("920040"),
                a = n("773670");
            (i = r || (r = {}))[i.MOUNTED = 0] = "MOUNTED", i[i.ENTERED = 1] = "ENTERED", i[i.YEETED = 2] = "YEETED";
            let l = {};

            function o(e) {
                return e
            }

            function u(e) {
                let {
                    items: t,
                    renderItem: n,
                    getItemKey: i,
                    wrapChildren: u = o,
                    lazyCleanUpDelay: c
                } = e, d = a.useRef(-1);
                a.useLayoutEffect(() => () => clearTimeout(d.current));
                let [, _] = a.useState(l), E = a.useRef(null), f = a.useMemo(() => {
                    var e;
                    let s = new Set(null === (e = E.current) || void 0 === e ? void 0 : e.keys()),
                        a = new Map(E.current);
                    for (let e of t) {
                        let t = i(e),
                            l = a.get(t);
                        if (null == l) {
                            let i = null != E.current ? r.ENTERED : r.MOUNTED,
                                s = () => {
                                    var e, n;
                                    let i = null === (e = E.current) || void 0 === e ? void 0 : e.get(t);
                                    null == i || (i.state === r.YEETED ? (null === (n = E.current) || void 0 === n || n.delete(t), null != c ? (clearTimeout(d.current), d.current = setTimeout(() => _({}), c)) : _({})) : __DEV__ && console.warn("SimpleTransitionGroup.cleanUp: Attempted to remove an item that isn't yeetable: ".concat(t)))
                                },
                                a = n(t, e, i, s);
                            l = {
                                item: e,
                                children: a,
                                state: i,
                                cleanUp: s,
                                renderItem: n
                            }
                        } else if (l.item !== e || l.renderItem !== n || l.state === r.YEETED) {
                            let {
                                cleanUp: i
                            } = l, s = l.state === r.YEETED ? r.ENTERED : l.state, a = n(t, e, s, l.cleanUp);
                            l = {
                                item: e,
                                children: a,
                                state: s,
                                cleanUp: i,
                                renderItem: n
                            }
                        }
                        a.set(t, l), s.delete(t)
                    }
                    for (let e of s) {
                        let t = a.get(e);
                        if (null != t) {
                            if (t.state !== r.YEETED || t.renderItem !== n) {
                                let {
                                    item: i,
                                    cleanUp: s
                                } = t, l = n(e, t.item, r.YEETED, t.cleanUp), o = r.YEETED;
                                null != (t = {
                                    item: i,
                                    children: l,
                                    state: o,
                                    cleanUp: s,
                                    renderItem: n
                                }).children ? a.set(e, t) : a.delete(e)
                            } else a.set(e, t)
                        }
                    }
                    return a
                }, [t, i, n, c]);
                a.useInsertionEffect(() => (E.current = f, () => {
                    var e;
                    return null === (e = E.current) || void 0 === e ? void 0 : e.clear()
                }), [f]);
                let p = [];
                for (let [, e] of f) p.push(e.children);
                return (0, s.jsx)(s.Fragment, {
                    children: p.length > 0 ? u(p) : null
                })
            }
        },
        143435: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                designConfig: function() {
                    return i
                },
                setDesignConfig: function() {
                    return r
                }
            });
            let i = {
                getDefaultLinkInterceptor: () => void 0,
                useTrackNavigatorScreenImpression: () => void 0
            };

            function r(e) {
                Object.assign(i, e)
            }
        },
        708253: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useToken: function() {
                    return a
                }
            });
            var i = n("744196"),
                r = n("841098"),
                s = n("206230");

            function a(e) {
                let t = (0, r.default)(),
                    n = (0, i.default)([s.default], () => s.default.saturation);
                return e.resolve({
                    theme: t,
                    saturation: n
                })
            }
        },
        77078: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                AccessibilityAnnouncer: function() {
                    return i.AccessibilityAnnouncer
                },
                AccessibilityPreferencesContext: function() {
                    return r.AccessibilityPreferencesContext
                },
                LOW_SATURATION_THRESHOLD: function() {
                    return s.LOW_SATURATION_THRESHOLD
                },
                Anchor: function() {
                    return a.Anchor
                },
                AnimatedAvatar: function() {
                    return l.AnimatedAvatar
                },
                Avatar: function() {
                    return l.Avatar
                },
                AvatarSizes: function() {
                    return o.AvatarSizes
                },
                AvatarSizeSpecs: function() {
                    return o.AvatarSizeSpecs
                },
                getAvatarSpecs: function() {
                    return o.getAvatarSpecs
                },
                getAvatarSize: function() {
                    return o.getAvatarSize
                },
                BlobMask: function() {
                    return u.BlobMask
                },
                BlockInteractions: function() {
                    return c.BlockInteractions
                },
                BlockInteractionsContext: function() {
                    return c.BlockInteractionsContext
                },
                Button: function() {
                    return d.Button
                },
                ButtonLink: function() {
                    return d.ButtonLink
                },
                ButtonColors: function() {
                    return d.ButtonColors
                },
                ButtonLooks: function() {
                    return d.ButtonLooks
                },
                ButtonBorderColors: function() {
                    return d.ButtonBorderColors
                },
                ButtonHovers: function() {
                    return d.ButtonHovers
                },
                ButtonSizes: function() {
                    return d.ButtonSizes
                },
                getButtonStyle: function() {
                    return d.getButtonStyle
                },
                Card: function() {
                    return _.Card
                },
                CardTypes: function() {
                    return _.CardTypes
                },
                Checkbox: function() {
                    return E.Checkbox
                },
                Collapsible: function() {
                    return f.Collapsible
                },
                Clickable: function() {
                    return p.Clickable
                },
                ClickableContainer: function() {
                    return h.ClickableContainer
                },
                Combobox: function() {
                    return S.Combobox
                },
                ComboboxItem: function() {
                    return S.ComboboxItem
                },
                useMultiSelect: function() {
                    return S.useMultiSelect
                },
                useSingleSelect: function() {
                    return S.useSingleSelect
                },
                ComboboxPopout: function() {
                    return T.ComboboxPopout
                },
                DateInput: function() {
                    return I.DateInput
                },
                Dialog: function() {
                    return m.Dialog
                },
                AnimatedDots: function() {
                    return g.AnimatedDots
                },
                Dots: function() {
                    return g.Dots
                },
                DnDKeyboardHelpBar: function() {
                    return A.DnDKeyboardHelpBar
                },
                DnDProvider: function() {
                    return C.DnDProvider
                },
                isInDndMode: function() {
                    return R.isInDndMode
                },
                useDndStore: function() {
                    return R.useDndStore
                },
                useDndMode: function() {
                    return R.useDndMode
                },
                toggleDndMode: function() {
                    return R.toggleDndMode
                },
                FocusBlock: function() {
                    return N.FocusBlock
                },
                useFocusBlock: function() {
                    return N.useFocusBlock
                },
                useFocusJumpSection: function() {
                    return v.useFocusJumpSection
                },
                useFocusJumpSectionManager: function() {
                    return v.useFocusJumpSectionManager
                },
                FocusJumpSection: function() {
                    return v.FocusJumpSection
                },
                FocusLock: function() {
                    return O.FocusLock
                },
                useFocusLock: function() {
                    return O.useFocusLock
                },
                FocusRing: function() {
                    return D.FocusRing
                },
                FocusRingScope: function() {
                    return D.FocusRingScope
                },
                FocusRingManager: function() {
                    return L.FocusRingManager
                },
                FormContext: function() {
                    return M.FormContext
                },
                useFormContext: function() {
                    return M.useFormContext
                },
                FormContextProvider: function() {
                    return M.FormContextProvider
                },
                FormDivider: function() {
                    return P.FormDivider
                },
                FormErrorBlock: function() {
                    return b.FormErrorBlock
                },
                FormErrorBlockColors: function() {
                    return b.FormErrorBlockColors
                },
                FormItem: function() {
                    return y.FormItem
                },
                FormLabel: function() {
                    return U.FormLabel
                },
                FormNoticeTypes: function() {
                    return G.FormNoticeTypes
                },
                FormNoticeImagePositions: function() {
                    return G.FormNoticeImagePositions
                },
                FormNotice: function() {
                    return G.FormNotice
                },
                FormSection: function() {
                    return w.FormSection
                },
                FormSwitch: function() {
                    return x.FormSwitch
                },
                FormTextTypes: function() {
                    return k.FormTextTypes
                },
                FormText: function() {
                    return k.FormText
                },
                FormTitleTags: function() {
                    return F.FormTitleTags
                },
                FormTitle: function() {
                    return F.FormTitle
                },
                Interactive: function() {
                    return B.Interactive
                },
                Heading: function() {
                    return V.Heading
                },
                HeadingLevel: function() {
                    return H.HeadingLevel
                },
                H: function() {
                    return H.H
                },
                usePrivateHeadingLevel: function() {
                    return H.usePrivateHeadingLevel
                },
                HiddenVisually: function() {
                    return j.HiddenVisually
                },
                KeyCombo: function() {
                    return Y.KeyCombo
                },
                PRETTY_KEYS: function() {
                    return Y.PRETTY_KEYS
                },
                Layer: function() {
                    return W.Layer
                },
                LayerContainer: function() {
                    return W.LayerContainer
                },
                LayerProvider: function() {
                    return W.LayerProvider
                },
                LayerClassName: function() {
                    return W.LayerClassName
                },
                createLayer: function() {
                    return W.createLayer
                },
                getParentLayerContainer: function() {
                    return W.getParentLayerContainer
                },
                ReferencePositionLayer: function() {
                    return K.ReferencePositionLayer
                },
                referencePortalAwareContains: function() {
                    return K.referencePortalAwareContains
                },
                createListScroller: function() {
                    return z.createListScroller
                },
                ListAuto: function() {
                    return Z.ListAuto
                },
                ListNone: function() {
                    return Z.ListNone
                },
                ListThin: function() {
                    return Z.ListThin
                },
                List: function() {
                    return Z.ListThin
                },
                createMasonryListScroller: function() {
                    return q.createMasonryListScroller
                },
                MasonryListScrollerRef: function() {
                    return q.MasonryListScrollerRef
                },
                RenderSection: function() {
                    return q.RenderSection
                },
                RenderItem: function() {
                    return q.RenderItem
                },
                MasonryListScrollerProps: function() {
                    return q.MasonryListScrollerProps
                },
                MasonryListAuto: function() {
                    return X.MasonryListAuto
                },
                MasonryListThin: function() {
                    return X.MasonryListThin
                },
                MasonryList: function() {
                    return X.MasonryListThin
                },
                Menu: function() {
                    return Q.Menu
                },
                MenuSpinner: function() {
                    return Q.MenuSpinner
                },
                MenuSeparator: function() {
                    return J.MenuSeparator
                },
                MenuGroup: function() {
                    return J.MenuGroup
                },
                MenuItem: function() {
                    return J.MenuItem
                },
                MenuCheckboxItem: function() {
                    return J.MenuCheckboxItem
                },
                MenuRadioItem: function() {
                    return J.MenuRadioItem
                },
                MenuControlItem: function() {
                    return J.MenuControlItem
                },
                MenuCustomItemRenderProps: function() {
                    return $.MenuCustomItemRenderProps
                },
                MenuImageUploadControl: function() {
                    return ee.MenuImageUploadControl
                },
                MenuInteractiveCompositeControl: function() {
                    return et.MenuInteractiveCompositeControl
                },
                MenuSearchControl: function() {
                    return en.MenuSearchControl
                },
                MenuSliderControl: function() {
                    return ei.MenuSliderControl
                },
                ConfirmModal: function() {
                    return er.ConfirmModal
                },
                DeclarativeConfirmModal: function() {
                    return er.DeclarativeConfirmModal
                },
                Modal: function() {
                    return es.Modal
                },
                getInteractingModalContext: function() {
                    return ea.getInteractingModalContext
                },
                modalContextFromAppContext: function() {
                    return ea.modalContextFromAppContext
                },
                useModalsStore: function() {
                    return ea.useModalsStore
                },
                openModalLazy: function() {
                    return ea.openModalLazy
                },
                openModal: function() {
                    return ea.openModal
                },
                closeModal: function() {
                    return ea.closeModal
                },
                updateModal: function() {
                    return ea.updateModal
                },
                hasAnyModalOpenSelector: function() {
                    return ea.hasAnyModalOpenSelector
                },
                hasAnyModalOpen: function() {
                    return ea.hasAnyModalOpen
                },
                closeAllModals: function() {
                    return ea.closeAllModals
                },
                hasModalOpenSelector: function() {
                    return ea.hasModalOpenSelector
                },
                hasModalOpen: function() {
                    return ea.hasModalOpen
                },
                ModalCloseButton: function() {
                    return el.ModalCloseButton
                },
                ModalContent: function() {
                    return el.ModalContent
                },
                ModalFooter: function() {
                    return el.ModalFooter
                },
                ModalHeader: function() {
                    return el.ModalHeader
                },
                ModalListContent: function() {
                    return el.ModalListContent
                },
                ModalRoot: function() {
                    return el.ModalRoot
                },
                ModalSize: function() {
                    return el.ModalSize
                },
                ModalTransitionState: function() {
                    return eo.ModalTransitionState
                },
                DEFAULT_MODAL_CONTEXT: function() {
                    return eo.DEFAULT_MODAL_CONTEXT
                },
                POPOUT_MODAL_CONTEXT: function() {
                    return eo.POPOUT_MODAL_CONTEXT
                },
                Modals: function() {
                    return eu.Modals
                },
                useModalContext: function() {
                    return eu.useModalContext
                },
                Paginator: function() {
                    return ec.Paginator
                },
                Progress: function() {
                    return ed.Progress
                },
                ProgressCircle: function() {
                    return e_.ProgressCircle
                },
                StackedProgress: function() {
                    return eE.StackedProgress
                },
                BasePopout: function() {
                    return ef.BasePopout
                },
                LoadingPopout: function() {
                    return ep.LoadingPopout
                },
                Popout: function() {
                    return eh.Popout
                },
                LazyPopout: function() {
                    return eh.LazyPopout
                },
                PopoutCSSAnimator: function() {
                    return eS.PopoutCSSAnimator
                },
                PopoutList: function() {
                    return eT.PopoutList
                },
                RadioGroup: function() {
                    return eI.RadioGroup
                },
                useRadioGroup: function() {
                    return eI.useRadioGroup
                },
                useRadioItem: function() {
                    return eI.useRadioItem
                },
                NameWithRole: function() {
                    return em.NameWithRole
                },
                NameWithRoleAnchor: function() {
                    return em.NameWithRoleAnchor
                },
                RoleDot: function() {
                    return eg.RoleDot
                },
                RoleCircle: function() {
                    return eg.RoleCircle
                },
                ListComputer: function() {
                    return eA.ListComputer
                },
                MasonryListComputer: function() {
                    return eA.MasonryListComputer
                },
                isListItemRow: function() {
                    return eA.isListItemRow
                },
                useResizeObserverSubscription: function() {
                    return eA.useResizeObserverSubscription
                },
                AdvancedScrollerAuto: function() {
                    return eC.AdvancedScrollerAuto
                },
                AdvancedScrollerNone: function() {
                    return eC.AdvancedScrollerNone
                },
                AdvancedScrollerThin: function() {
                    return eC.AdvancedScrollerThin
                },
                AdvancedScroller: function() {
                    return eC.AdvancedScrollerThin
                },
                createAdvancedScroller: function() {
                    return eR.createAdvancedScroller
                },
                createManagedReactiveScroller: function() {
                    return eN.createManagedReactiveScroller
                },
                createScroller: function() {
                    return ev.createScroller
                },
                PinToBottomScrollerAuto: function() {
                    return eO.PinToBottomScrollerAuto
                },
                ScrollerAuto: function() {
                    return eD.ScrollerAuto
                },
                ScrollerNone: function() {
                    return eD.ScrollerNone
                },
                ScrollerThin: function() {
                    return eD.ScrollerThin
                },
                Scroller: function() {
                    return eD.ScrollerThin
                },
                SegmentedControl: function() {
                    return eL.SegmentedControl
                },
                Select: function() {
                    return eM.Select
                },
                SingleSelect: function() {
                    return eM.SingleSelect
                },
                useSingleSelectState: function() {
                    return eM.useSingleSelectState
                },
                useMultiSelectState: function() {
                    return eM.useMultiSelectState
                },
                useVariableSelect: function() {
                    return eM.useVariableSelect
                },
                multiSelect: function() {
                    return eM.multiSelect
                },
                toggleSelect: function() {
                    return eM.toggleSelect
                },
                singleSelect: function() {
                    return eM.singleSelect
                },
                SearchableSelect: function() {
                    return eP.SearchableSelect
                },
                SearchableSelectRef: function() {
                    return eP.SearchableSelectRef
                },
                SelectLooks: function() {
                    return eb.SelectLooks
                },
                Sequencer: function() {
                    return ey.Sequencer
                },
                Shaker: function() {
                    return eU.Shaker
                },
                Shakeable: function() {
                    return eG.Shakeable
                },
                Slide: function() {
                    return ew.Slide
                },
                Slides: function() {
                    return ew.Slides
                },
                Slider: function() {
                    return ex.Slider
                },
                Spinner: function() {
                    return ek.Spinner
                },
                SpinnerTypes: function() {
                    return ek.SpinnerTypes
                },
                AnimatedStatus: function() {
                    return eF.AnimatedStatus
                },
                Status: function() {
                    return eF.Status
                },
                StatusTypes: function() {
                    return eF.StatusTypes
                },
                getStatusColor: function() {
                    return eF.getStatusColor
                },
                getStatusBackdropColor: function() {
                    return eF.getStatusBackdropColor
                },
                getStatusBackdropOpacity: function() {
                    return eF.getStatusBackdropOpacity
                },
                getStatusMask: function() {
                    return eF.getStatusMask
                },
                Switch: function() {
                    return eB.Switch
                },
                TabBar: function() {
                    return eV.TabBar
                },
                Text: function() {
                    return eH.Text
                },
                TextArea: function() {
                    return ej.TextArea
                },
                TextAreaAutosize: function() {
                    return eY.TextAreaAutosize
                },
                TextInput: function() {
                    return eW.TextInput
                },
                InputError: function() {
                    return eW.InputError
                },
                TextInputProps: function() {
                    return eW.TextInputProps
                },
                TimeInput: function() {
                    return eK.TimeInput
                },
                Toast: function() {
                    return ez.Toast
                },
                createToast: function() {
                    return ez.createToast
                },
                useToastStore: function() {
                    return eZ.useToastStore
                },
                showToast: function() {
                    return eZ.showToast
                },
                popToast: function() {
                    return eZ.popToast
                },
                ToastType: function() {
                    return eq.ToastType
                },
                ToastPosition: function() {
                    return eq.ToastPosition
                },
                ToastContainer: function() {
                    return eX.ToastContainer
                },
                Tooltip: function() {
                    return eQ.Tooltip
                },
                TooltipContainer: function() {
                    return eQ.TooltipContainer
                },
                TooltipColors: function() {
                    return eQ.TooltipColors
                },
                TooltipLayer: function() {
                    return eQ.TooltipLayer
                },
                tokens: function() {
                    return eJ.default
                },
                useToken: function() {
                    return e$.useToken
                },
                TransitionGroup: function() {
                    return e0.TransitionGroup
                },
                TransitionStates: function() {
                    return e0.TransitionStates
                },
                ThemeContextProvider: function() {
                    return e1.ThemeContextProvider
                },
                RootThemeContextProvider: function() {
                    return e1.RootThemeContextProvider
                },
                useThemeContext: function() {
                    return e1.useThemeContext
                },
                DisableCustomTheme: function() {
                    return e1.DisableCustomTheme
                },
                UseThemeContext: function() {
                    return e1.UseThemeContext
                },
                TableCell: function() {
                    return e2.TableCell
                },
                TableColumn: function() {
                    return e2.TableColumn
                },
                TableRow: function() {
                    return e2.TableRow
                },
                TableBody: function() {
                    return e2.TableBody
                },
                TableHeader: function() {
                    return e2.TableHeader
                },
                Table: function() {
                    return e2.Table
                },
                useRedesignIconContext: function() {
                    return e5.useRedesignIconContext
                },
                RedesignIconContextProvider: function() {
                    return e5.RedesignIconContextProvider
                }
            });
            var i = n("539826"),
                r = n("413197"),
                s = n("209613"),
                a = n("459462"),
                l = n("913365"),
                o = n("52904"),
                u = n("691609"),
                c = n("247716"),
                d = n("271841"),
                _ = n("659397"),
                E = n("685698"),
                f = n("262448"),
                p = n("227645"),
                h = n("456189"),
                S = n("960486"),
                T = n("923237"),
                I = n("322756"),
                m = n("130969"),
                g = n("709749"),
                A = n("990749"),
                C = n("187641"),
                R = n("57406"),
                N = n("633661"),
                v = n("690977"),
                O = n("311720"),
                D = n("718776"),
                L = n("688817"),
                M = n("516826"),
                P = n("370373"),
                b = n("16256"),
                y = n("298742"),
                U = n("603616"),
                G = n("135411"),
                w = n("392098"),
                x = n("266079"),
                k = n("329272"),
                F = n("818810"),
                B = n("224763"),
                V = n("605451"),
                H = n("860226"),
                j = n("741662"),
                Y = n("533979"),
                W = n("228256"),
                K = n("222163"),
                z = n("73643"),
                Z = n("433600"),
                q = n("304549"),
                X = n("384704"),
                Q = n("71096"),
                J = n("155823"),
                $ = n("916528"),
                ee = n("404417"),
                et = n("836234"),
                en = n("609026"),
                ei = n("873830"),
                er = n("348891"),
                es = n("314569"),
                ea = n("551042"),
                el = n("516256"),
                eo = n("625611"),
                eu = n("388495"),
                ec = n("125814"),
                ed = n("184456"),
                e_ = n("852566"),
                eE = n("443083"),
                ef = n("533785"),
                ep = n("678904"),
                eh = n("442761"),
                eS = n("276335"),
                eT = n("694982"),
                eI = n("105265"),
                em = n("552241"),
                eg = n("236532"),
                eA = n("462977"),
                eC = n("446662"),
                eR = n("858850"),
                eN = n("211009"),
                ev = n("256023"),
                eO = n("617657"),
                eD = n("670914"),
                eL = n("506395"),
                eM = n("935980"),
                eP = n("774811"),
                eb = n("178814"),
                ey = n("981579"),
                eU = n("68643"),
                eG = n("292842"),
                ew = n("265984"),
                ex = n("837443"),
                ek = n("242670"),
                eF = n("391010"),
                eB = n("980672"),
                eV = n("914907"),
                eH = n("577776"),
                ej = n("74307"),
                eY = n("324584"),
                eW = n("240353"),
                eK = n("161814"),
                ez = n("35672"),
                eZ = n("325236"),
                eq = n("159350"),
                eX = n("371557"),
                eQ = n("414055"),
                eJ = n("912557"),
                e$ = n("708253"),
                e0 = n("685639"),
                e1 = n("36763"),
                e2 = n("628400"),
                e5 = n("469563")
        },
        846071: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("993105"),
                r = n("49111"),
                s = n("782340");
            class a {
                get displayMessage() {
                    if (null == this.code) return s.default.Messages.NOTICE_DISPATCH_ERROR;
                    let {
                        path: e
                    } = this.context;
                    switch (this.code) {
                        case r.DispatchErrorCodes.DISK_LOW:
                            let {
                                available: t, required: n
                            } = this.context, a = (0, i.formatSize)(t, {
                                useKibibytes: !0
                            }), l = (0, i.formatSize)(n, {
                                useKibibytes: !0
                            });
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_DISK_LOW.format({
                                required: l,
                                available: a
                            });
                        case r.DispatchErrorCodes.POST_INSTALL_FAILED:
                            let {
                                name: o
                            } = this.context;
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_POST_INSTALL_FAILED.format({
                                name: o
                            });
                        case r.DispatchErrorCodes.FILE_NAME_TOO_LONG:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_FILE_NAME_TOO_LONG;
                        case r.DispatchErrorCodes.POST_INSTALL_CANCELLED:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_POST_INSTALL_CANCELLED;
                        case r.DispatchErrorCodes.IO_PERMISSION_DENIED:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_IO_PERMISSION_DENIED;
                        case r.DispatchErrorCodes.NO_MANIFESTS:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_NO_MANIFESTS;
                        case r.DispatchErrorCodes.NOT_ENTITLED:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_NOT_ENTITLED;
                        case r.DispatchErrorCodes.NOT_DIRECTORY:
                        case r.DispatchErrorCodes.DISK_PERMISSION_DENIED:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_UNWRITABLE.format({
                                path: e
                            });
                        case r.DispatchErrorCodes.INVALID_DRIVE:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_INVALID_DRIVE.format({
                                path: e
                            });
                        case r.DispatchErrorCodes.APPLICATION_LOCK_FAILED:
                            return s.default.Messages.NOTICE_DISPATCH_APPLICATION_LOCK_FAILED;
                        case r.DispatchErrorCodes.DISK_FULL:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_DISK_FULL;
                        case r.DispatchErrorCodes.API_ERROR:
                        case r.DispatchErrorCodes.MAX_REQUEST_RETRIES_EXCEEDED:
                            return s.default.Messages.NOTICE_DISPATCH_API_ERROR;
                        default:
                            return s.default.Messages.NOTICE_DISPATCH_ERROR_WITH_CODE.format({
                                code: "".concat(this.code)
                            })
                    }
                }
                constructor(e) {
                    this.raw = e, null != e.code && (this.code = e.code), null != e.uuid && (this.uuid = e.uuid), null != e.application_id && (this.applicationId = e.application_id), null != e.branch_id && (this.branchId = e.branch_id), null != e.context ? this.context = e.context : this.context = {}
                }
            }
        },
        143068: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2022-07_file_upload_limit",
                label: "File Upload Limit Increase",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });
            var s = r
        },
        700031: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2022-09_free_file_upload_limit",
                label: "Free File Upload Limit Increase",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });
            var s = r
        },
        798609: function(e, t, n) {
            "use strict";
            var i, r, s, a, l, o, u, c, d, _, E, f, p, h, S, T, I, m, g, A, C, R, N, v, O, D;
            n.r(t), n.d(t, {
                PermissionOverwriteType: function() {
                    return i
                },
                EmbeddedActivitySupportedPlatforms: function() {
                    return r
                },
                EmbeddedActivityLabelTypes: function() {
                    return s
                },
                ApplicationDirectoryEntryCarouselItemType: function() {
                    return a
                },
                ApplicationCommandContextType: function() {
                    return l
                },
                ApplicationCommandOptionType: function() {
                    return o
                },
                ApplicationCommandType: function() {
                    return u
                },
                InteractionTypes: function() {
                    return c
                },
                ComponentType: function() {
                    return d
                },
                ButtonStyle: function() {
                    return _
                },
                TextComponentStyle: function() {
                    return E
                },
                InvoiceDiscountTypes: function() {
                    return f
                },
                AuthenticatorType: function() {
                    return p
                }
            }), (h = i || (i = {}))[h.ROLE = 0] = "ROLE", h[h.MEMBER = 1] = "MEMBER", (S = r || (r = {})).IOS = "ios", S.ANDROID = "android", S.WEB = "web", (T = s || (s = {}))[T.NONE = 0] = "NONE", T[T.NEW = 1] = "NEW", T[T.UPDATED = 2] = "UPDATED", (I = a || (a = {}))[I.MEDIA_PROXY = 1] = "MEDIA_PROXY", I[I.YOUTUBE = 2] = "YOUTUBE", (m = l || (l = {}))[m.GUILD = 0] = "GUILD", m[m.BOT_DM = 1] = "BOT_DM", m[m.PRIVATE_CHANNEL = 2] = "PRIVATE_CHANNEL", (g = o || (o = {}))[g.SUB_COMMAND = 1] = "SUB_COMMAND", g[g.SUB_COMMAND_GROUP = 2] = "SUB_COMMAND_GROUP", g[g.STRING = 3] = "STRING", g[g.INTEGER = 4] = "INTEGER", g[g.BOOLEAN = 5] = "BOOLEAN", g[g.USER = 6] = "USER", g[g.CHANNEL = 7] = "CHANNEL", g[g.ROLE = 8] = "ROLE", g[g.MENTIONABLE = 9] = "MENTIONABLE", g[g.NUMBER = 10] = "NUMBER", g[g.ATTACHMENT = 11] = "ATTACHMENT", (A = u || (u = {}))[A.CHAT = 1] = "CHAT", A[A.USER = 2] = "USER", A[A.MESSAGE = 3] = "MESSAGE", (C = c || (c = {}))[C.APPLICATION_COMMAND = 2] = "APPLICATION_COMMAND", C[C.MESSAGE_COMPONENT = 3] = "MESSAGE_COMPONENT", C[C.APPLICATION_COMMAND_AUTOCOMPLETE = 4] = "APPLICATION_COMMAND_AUTOCOMPLETE", C[C.MODAL_SUBMIT = 5] = "MODAL_SUBMIT", (R = d || (d = {}))[R.ACTION_ROW = 1] = "ACTION_ROW", R[R.BUTTON = 2] = "BUTTON", R[R.STRING_SELECT = 3] = "STRING_SELECT", R[R.INPUT_TEXT = 4] = "INPUT_TEXT", R[R.USER_SELECT = 5] = "USER_SELECT", R[R.ROLE_SELECT = 6] = "ROLE_SELECT", R[R.MENTIONABLE_SELECT = 7] = "MENTIONABLE_SELECT", R[R.CHANNEL_SELECT = 8] = "CHANNEL_SELECT", (N = _ || (_ = {}))[N.PRIMARY = 1] = "PRIMARY", N[N.SECONDARY = 2] = "SECONDARY", N[N.SUCCESS = 3] = "SUCCESS", N[N.DESTRUCTIVE = 4] = "DESTRUCTIVE", N[N.LINK = 5] = "LINK", (v = E || (E = {}))[v.SMALL = 1] = "SMALL", v[v.PARAGRAPH = 2] = "PARAGRAPH", (O = f || (f = {}))[O.SUBSCRIPTION_PLAN = 1] = "SUBSCRIPTION_PLAN", O[O.ENTITLEMENT = 2] = "ENTITLEMENT", O[O.PREMIUM_LEGACY_UPGRADE_PROMOTION = 3] = "PREMIUM_LEGACY_UPGRADE_PROMOTION", O[O.PREMIUM_TRIAL = 4] = "PREMIUM_TRIAL", (D = p || (p = {}))[D.WEBAUTHN = 1] = "WEBAUTHN", D[D.TOTP = 2] = "TOTP", D[D.SMS = 3] = "SMS"
        },
        731898: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("773670");

            function r() {
                for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                let [r, s] = i.useState(void 0), [a, l] = i.useState(void 0), o = i.useRef(null);
                return i.useLayoutEffect(() => {
                    let e = o.current,
                        t = null == e ? void 0 : e.ownerDocument.defaultView;
                    if (null != e && null != t) {
                        let n = new t.ResizeObserver(e => {
                            var t, n, i, r, a, u;
                            let c = e[0],
                                d = null == c ? void 0 : null === (n = c.borderBoxSize) || void 0 === n ? void 0 : null === (t = n[0]) || void 0 === t ? void 0 : t.inlineSize,
                                _ = null == c ? void 0 : null === (r = c.borderBoxSize) || void 0 === r ? void 0 : null === (i = r[0]) || void 0 === i ? void 0 : i.blockSize;
                            if (null == d || null == _) {
                                let e = o.current;
                                if (null != e) {
                                    let t = window.getComputedStyle(e);
                                    null == d && (d = parseFloat(null !== (a = t.width) && void 0 !== a ? a : "0")), null == _ && (_ = parseFloat(null !== (u = t.height) && void 0 !== u ? u : "0"))
                                }
                            }
                            s(d), l(_)
                        });
                        return n.observe(e), () => n.disconnect()
                    }
                }, [o.current, ...t]), {
                    ref: o,
                    width: r,
                    height: a
                }
            }
        },
        811425: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsVisible: function() {
                    return o
                }
            });
            var i = n("773670"),
                r = n("561744"),
                s = n("595698");
            let a = {},
                l = new Map([
                    [1, {
                        threshold: 1
                    }]
                ]);

            function o(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                    n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
                    o = (0, r.default)(t => {
                        e(t.isIntersecting)
                    }),
                    u = (0, i.useMemo)(() => {
                        var e;
                        let n;
                        return e = t, null != (n = l.get(e)) ? n : (n = {
                            threshold: e
                        }, l.set(e, n), n)
                    }, [t]);
                return function(e, t) {
                    let n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
                        l = (0, i.useRef)(null),
                        o = (0, r.default)(null != t ? t : a),
                        u = (0, i.useRef)(null);
                    return (0, i.useLayoutEffect)(() => {
                        if (!n) return;
                        null == u.current && (u.current = (0, s.getIntersectionObserver)(o.current));
                        let t = l.current,
                            i = u.current;
                        null != t && null != i && (0, s.watch)(i, t, e)
                    }, [n, e]), (0, i.useEffect)(() => {
                        if (!n) return;
                        let e = l.current,
                            t = u.current;
                        if (null != e && null != t) return () => {
                            (0, s.unwatch)(t, e)
                        }
                    }, [n, t]), l
                }(o.current, u, n)
            }
        },
        634634: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("773670");

            function r(e) {
                let t = (0, i.useRef)(null),
                    n = (0, i.useRef)(null);
                return !Object.is(e, n.current) && (t.current = n.current, n.current = e), t.current
            }
        },
        84339: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("773670");

            function r(e) {
                let t = (0, i.useRef)();
                return (0, i.useEffect)(() => {
                    t.current = e
                }, [e]), t.current
            }
        },
        31695: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("773670"),
                r = n("561744");

            function s(e) {
                let t = (0, r.default)(e);
                (0, i.useEffect)(() => {
                    let e = requestAnimationFrame(function n() {
                        var i;
                        null === (i = t.current) || void 0 === i || i.call(t), e = requestAnimationFrame(n)
                    });
                    return () => cancelAnimationFrame(e)
                }, [])
            }
        },
        841098: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useTheme: function() {
                    return r
                },
                default: function() {
                    return s
                }
            });
            var i = n("819855");

            function r() {
                let {
                    theme: e
                } = (0, i.useThemeContext)();
                return e
            }
            n("49111");
            var s = r
        },
        953260: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                JUMP_TO_GUILD: function() {
                    return _
                }
            });
            var i = n("379881"),
                r = n("15131"),
                s = n("393414"),
                a = n("239380"),
                l = n("42203"),
                o = n("957255"),
                u = n("162771"),
                c = n("677099"),
                d = n("49111");
            let _ = {
                binds: (() => {
                    let e = [];
                    for (let t = 1; t < 10; t++) e.push("mod+".concat(t));
                    return e
                })(),
                comboKeysBindGlobal: !0,
                action(e, t) {
                    let n, _ = parseInt(t.split("+")[1], 10);
                    if (0 === _ && (_ = 10), !isNaN(_) && 0 !== _) {
                        if (null != (n = 1 === _ ? d.ME : (0, r.isFavoritesGuildVisible)(i.default, l.default, o.default) ? 2 === _ ? d.FAVORITES : c.default.getFlattenedGuildIds()[_ - 3] : c.default.getFlattenedGuildIds()[_ - 2])) return n === d.ME && null == u.default.getGuildId() ? ((0, s.transitionTo)(d.Routes.CHANNEL(n)), !1) : ((0, a.transitionToGuild)(n), !1)
                    }
                }
            }
        },
        226445: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                Histogram: function() {
                    return r
                }
            });
            var i = n("618619");
            class r {
                addSample(e) {
                    this.digest.push(e)
                }
                getReport() {
                    var e, t, n, i;
                    let r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [25, 50, 75, 90, 95],
                        s = {};
                    for (let t of r) s[t] = null !== (e = this.digest.percentile(t / 100)) && void 0 !== e ? e : 0;
                    return {
                        min: null !== (t = this.digest.percentile(0)) && void 0 !== t ? t : 0,
                        max: null !== (n = this.digest.percentile(1)) && void 0 !== n ? n : 0,
                        count: null !== (i = this.digest.size()) && void 0 !== i ? i : 0,
                        percentiles: s
                    }
                }
                constructor() {
                    this.digest = new i.Digest
                }
            }
        },
        485328: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var i = n("503976"),
                r = n.n(i),
                s = n("64060"),
                a = n.n(s),
                l = n("953260"),
                o = n("605250"),
                u = n("599110"),
                c = n("773336"),
                d = n("49111");
            let _ = {},
                E = [],
                f = !1,
                p = a(new r(window)),
                h = (0, c.isMac)() ? "cmd" : "ctrl",
                S = (0, c.isMac)() ? "opt" : "alt",
                T = (0, c.isMac)() ? "return" : "enter",
                I = [...l.JUMP_TO_GUILD.binds, "mod+shift+[", "mod+shift+]", "mod+[", "mod+]", "alt+[", "alt+]", "ctrl+shift+tab", "ctrl+tab", "mod+n", "mod+t", "mod+shift+t", "mod+plus", "mod+minus", "mod+0"].map(e => e.replace("mod", h)),
                m = () => [],
                g = [];
            if ((0, c.isDesktop)()) {
                let e = new r(document.documentElement);
                e.bind("backspace", e => e.preventDefault())
            }

            function A(e) {
                let t = [];
                for (let n of Object.values(e)) null != n && t.push(...n.binds);
                return t.map(e => e.replace("mod", h))
            }

            function C(e, t) {
                return (n, i) => (u.default.track(d.AnalyticEvents.KEYBOARD_SHORTCUT_USED, {
                    shortcut_name: e
                }), t(n, i))
            }

            function R(e) {
                for (let [t, n] of Object.entries(e)) {
                    if (null == n) continue;
                    let e = m();
                    !c.isPlatformEmbedded && (e = e.concat(I));
                    let i = n.binds.filter(t => (t = t.replace("mod", h), 0 > e.indexOf(t)));
                    if (0 === i.length) continue;
                    let r = n.comboKeysBindGlobal ? p.bindGlobal : p.bind;
                    if (null != n.action && r.call(p, i, C(t, n.action)), null != n.keyup && r.call(p, i, C(t, n.keyup), "keyup"), null != n.keydown) {
                        let e = i.indexOf("any-character"); - 1 !== e && (! function(e, t) {
                            let n = e => t(e, e.key);
                            document.addEventListener(e, n), g.push(() => document.removeEventListener(e, n))
                        }("keydown", n.keydown), i.splice(e, 1)), i.length > 0 && r.call(p, i, C(t, n.keydown), "keydown")
                    }
                    null != n.keypress && r.call(p, i, C(t, n.keypress), "keypress")
                }
            }
            var N = {
                combokeys: p,
                modKey: h,
                altKey: S,
                returnKey: T,
                setGetKeybindList(e) {
                    m = e
                },
                checkDupes(e) {
                    let t = new Set,
                        n = [],
                        i = A(e);
                    for (let e of i) t.has(e) && n.push(e), t.add(e);
                    n.length > 0 && new(0, o.default)("Keybinds").warn("Duplicate keyboard shortcuts defined:", n)
                },
                setLayout(e) {
                    _ = e
                },
                enable() {
                    !f && (f = !0, this.checkDupes(_), R(_))
                },
                enableTemp(e) {
                    E.push(_), _ = e, R(e), f = !0
                },
                disableTemp() {
                    let e = E.pop();
                    null != e && (_ = e), this.disable(), this.enable()
                },
                disable() {
                    f && (f = !1, g.forEach(e => e()), g = [], p.reset())
                },
                validateKeybind(e) {
                    f && this.hasBind(e) && p.unbind(e)
                },
                hasBind(e) {
                    let t = A(_);
                    return e = (e = e.replace("meta", "cmd")).replace(/right |left /i, "").trim(), t.includes(e)
                }
            }
        },
        316272: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            }), n("287727");
            class i {
                initialize() {
                    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    !this.isInitialized && (this.isInitialized = !0, this._initialize(...t))
                }
                terminate() {
                    this.isInitialized && (this.isInitialized = !1, this._terminate())
                }
                constructor() {
                    this.isInitialized = !1
                }
            }
        },
        668597: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                computeIsMuted: function() {
                    return i
                },
                default: function() {
                    return r
                }
            });

            function i(e) {
                var t;
                let {
                    muted: n,
                    mute_config: i
                } = e;
                return !!n && (null == (t = i) || null == t.end_time || new Date(t.end_time) >= new Date)
            }
            class r {
                reset() {
                    Object.values(this.timers).forEach(e => clearTimeout(e)), this.timers = {}
                }
                setTimer(e, t, n) {
                    var i;
                    if (null == e || null == t) return;
                    let r = null == (i = t).end_time ? null : new Date(i.end_time).getTime() - Date.now();
                    if (null == r) return null;
                    this.timers[e] = setTimeout(n, Math.max(0, r))
                }
                clearTimer(e) {
                    null != e && e in this.timers && (clearTimeout(this.timers[e]), delete this.timers[e])
                }
                constructor() {
                    this.timers = {}
                }
            }
        },
        497407: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("931010"),
                r = n("985365"),
                s = n("49111");

            function a(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                return null != e ? Math.round(e) : t
            }
            class l {
                _initStats() {
                    let e = {
                        effectiveConnectionSpeedBuckets: {},
                        connectionTypeBuckets: {}
                    };
                    return Object.values(s.NetworkConnectionTypes).forEach(t => {
                        e.connectionTypeBuckets[t] = 0
                    }), Object.values(s.NetworkConnectionSpeeds).forEach(t => {
                        e.effectiveConnectionSpeedBuckets[t] = 0
                    }), e
                }
                getStats() {
                    let {
                        _networkStats: e
                    } = this;
                    return {
                        duration_connection_type_wifi: a(e.connectionTypeBuckets[s.NetworkConnectionTypes.WIFI]),
                        duration_connection_type_cellular: a(e.connectionTypeBuckets[s.NetworkConnectionTypes.CELLULAR]),
                        duration_connection_type_ethernet: a(e.connectionTypeBuckets[s.NetworkConnectionTypes.ETHERNET]),
                        duration_connection_type_bluetooth: a(e.connectionTypeBuckets[s.NetworkConnectionTypes.BLUETOOTH]),
                        duration_connection_type_other: a(e.connectionTypeBuckets[s.NetworkConnectionTypes.OTHER]),
                        duration_connection_type_unknown: a(e.connectionTypeBuckets[s.NetworkConnectionTypes.UNKNOWN]),
                        duration_connection_type_none: a(e.connectionTypeBuckets[s.NetworkConnectionTypes.NONE]),
                        duration_effective_connection_speed_2g: a(e.effectiveConnectionSpeedBuckets[s.NetworkConnectionSpeeds.TWO_G]),
                        duration_effective_connection_speed_3g: a(e.effectiveConnectionSpeedBuckets[s.NetworkConnectionSpeeds.THREE_G]),
                        duration_effective_connection_speed_4g: a(e.effectiveConnectionSpeedBuckets[s.NetworkConnectionSpeeds.FOUR_G]),
                        duration_effective_connection_speed_5g: a(e.effectiveConnectionSpeedBuckets[s.NetworkConnectionSpeeds.FIVE_G]),
                        duration_effective_connection_speed_unknown: a(e.effectiveConnectionSpeedBuckets[s.NetworkConnectionSpeeds.UNKNOWN])
                    }
                }
                incrementNetworkStats(e) {
                    let t = (e - this._lastSampleTimestamp) / 1e3,
                        n = r.default.getEffectiveConnectionSpeed();
                    n === s.NetworkConnectionSpeeds.SLOW_TWO_G && (n = s.NetworkConnectionSpeeds.TWO_G);
                    let i = r.default.getType();
                    i === s.NetworkConnectionTypes.WIMAX && (i = s.NetworkConnectionTypes.WIFI), this._networkStats.effectiveConnectionSpeedBuckets[n] += t, this._networkStats.connectionTypeBuckets[i] += t, this._lastSampleTimestamp = e
                }
                constructor() {
                    this._networkStats = this._initStats(), this._lastSampleTimestamp = (0, i.now)()
                }
            }
        },
        376556: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("912557"),
                a = n("691898"),
                l = n("49111");
            let o = [{
                    type: l.PlatformTypes.TWITCH,
                    name: "Twitch",
                    color: s.default.unsafe_rawColors.TWITCH.css,
                    icon: {
                        lightPNG: n("115658"),
                        darkPNG: n("115658"),
                        whitePNG: n("288589"),
                        lightSVG: n("729332"),
                        darkSVG: n("729332"),
                        whiteSVG: n("31439")
                    },
                    enabled: !0,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://www.twitch.tv/".concat(encodeURIComponent(t))
                    },
                    domains: ["twitch.tv", "twitch.com"]
                }, {
                    type: l.PlatformTypes.YOUTUBE,
                    name: "YouTube",
                    color: s.default.unsafe_rawColors.YOUTUBE.css,
                    icon: {
                        lightPNG: n("299893"),
                        darkPNG: n("299893"),
                        whitePNG: n("255284"),
                        lightSVG: n("997771"),
                        darkSVG: n("997771"),
                        whiteSVG: n("223406")
                    },
                    enabled: !0,
                    getPlatformUserUrl: e => {
                        let {
                            id: t
                        } = e;
                        return "https://www.youtube.com/channel/".concat(encodeURIComponent(t))
                    },
                    domains: ["youtube.com", "youtu.be"]
                }, {
                    type: l.PlatformTypes.BATTLENET,
                    name: "Battle.net",
                    color: s.default.unsafe_rawColors.BATTLENET.css,
                    icon: {
                        lightPNG: n("194175"),
                        darkPNG: n("194175"),
                        whitePNG: n("159142"),
                        lightSVG: n("35024"),
                        darkSVG: n("35024"),
                        whiteSVG: n("671223")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.SKYPE,
                    name: "Skype",
                    color: s.default.unsafe_rawColors.SKYPE.css,
                    icon: {
                        lightPNG: n("992221"),
                        darkPNG: n("992221"),
                        whitePNG: n("731368"),
                        lightSVG: n("894025"),
                        darkSVG: n("894025"),
                        whiteSVG: n("645496")
                    },
                    enabled: !1,
                    getPlatformUserUrl: e => {
                        let {
                            id: t
                        } = e;
                        return "skype:".concat(encodeURIComponent(t), "?userinfo")
                    }
                }, {
                    type: l.PlatformTypes.LEAGUE_OF_LEGENDS,
                    name: "League of Legends",
                    color: s.default.unsafe_rawColors.LOL.css,
                    icon: {
                        lightPNG: n("530354"),
                        darkPNG: n("530354"),
                        whitePNG: n("925382"),
                        lightSVG: n("667083"),
                        darkSVG: n("667083"),
                        whiteSVG: n("509949")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.STEAM,
                    name: "Steam",
                    color: s.default.unsafe_rawColors.STEAM.css,
                    icon: {
                        lightPNG: n("777626"),
                        darkPNG: n("877414"),
                        whitePNG: n("877414"),
                        lightSVG: n("566035"),
                        darkSVG: n("309663"),
                        whiteSVG: n("309663")
                    },
                    enabled: !0,
                    getPlatformUserUrl: e => {
                        let {
                            id: t
                        } = e;
                        return "https://steamcommunity.com/profiles/".concat(encodeURIComponent(t))
                    },
                    hasMetadata: !0
                }, {
                    type: l.PlatformTypes.REDDIT,
                    name: "Reddit",
                    color: s.default.unsafe_rawColors.REDDIT.css,
                    icon: {
                        lightPNG: n("373338"),
                        darkPNG: n("373338"),
                        whitePNG: n("479111"),
                        lightSVG: n("977001"),
                        darkSVG: n("977001"),
                        whiteSVG: n("592466")
                    },
                    enabled: !0,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://www.reddit.com/u/".concat(encodeURIComponent(t))
                    },
                    hasMetadata: !0
                }, {
                    type: l.PlatformTypes.FACEBOOK,
                    name: "Facebook",
                    color: s.default.unsafe_rawColors.FACEBOOK.css,
                    icon: {
                        lightPNG: n("879157"),
                        darkPNG: n("879157"),
                        whitePNG: n("259168"),
                        lightSVG: n("870064"),
                        darkSVG: n("870064"),
                        whiteSVG: n("735638")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.TWITTER_LEGACY,
                    name: "Twitter",
                    color: s.default.unsafe_rawColors.TWITTER.css,
                    icon: {
                        lightPNG: n("122630"),
                        darkPNG: n("122630"),
                        whitePNG: n("961232"),
                        lightSVG: n("372786"),
                        darkSVG: n("372786"),
                        whiteSVG: n("387628")
                    },
                    enabled: !1,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://twitter.com/".concat(encodeURIComponent(t))
                    },
                    domains: ["twitter.com"],
                    hasMetadata: !0
                }, {
                    type: l.PlatformTypes.TWITTER,
                    name: "X",
                    color: s.default.unsafe_rawColors.TWITTER.css,
                    icon: {
                        lightPNG: n("483819"),
                        darkPNG: n("980576"),
                        whitePNG: n("192473"),
                        lightSVG: n("955307"),
                        darkSVG: n("552995"),
                        whiteSVG: n("312139")
                    },
                    enabled: !0,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://x.com/".concat(encodeURIComponent(t))
                    },
                    domains: ["x.com"],
                    hasMetadata: !0
                }, {
                    type: l.PlatformTypes.SPOTIFY,
                    name: "Spotify",
                    color: s.default.unsafe_rawColors.SPOTIFY.css,
                    icon: {
                        lightPNG: n("561050"),
                        darkPNG: n("561050"),
                        whitePNG: n("618077"),
                        lightSVG: n("630528"),
                        darkSVG: n("630528"),
                        whiteSVG: n("662418")
                    },
                    enabled: !0,
                    getPlatformUserUrl: e => {
                        let {
                            id: t
                        } = e;
                        return "https://open.spotify.com/user/".concat(encodeURIComponent(t))
                    }
                }, {
                    type: l.PlatformTypes.XBOX,
                    name: "Xbox",
                    color: s.default.unsafe_rawColors.XBOX.css,
                    icon: {
                        lightPNG: n("599004"),
                        darkPNG: n("956204"),
                        whitePNG: n("956204"),
                        lightSVG: n("713106"),
                        darkSVG: n("946662"),
                        whiteSVG: n("946662"),
                        customPNG: n("272378")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.SAMSUNG,
                    name: "Samsung Galaxy",
                    color: s.default.unsafe_rawColors.SAMSUNG.css,
                    icon: {
                        lightPNG: n("768935"),
                        darkPNG: n("768935"),
                        whitePNG: n("629132"),
                        lightSVG: n("869872"),
                        darkSVG: n("869872"),
                        whiteSVG: n("301098")
                    },
                    enabled: !1
                }, {
                    type: l.PlatformTypes.GITHUB,
                    name: "GitHub",
                    color: s.default.unsafe_rawColors.GITHUB.css,
                    icon: {
                        lightPNG: n("321223"),
                        darkPNG: n("646994"),
                        whitePNG: n("646994"),
                        lightSVG: n("94470"),
                        darkSVG: n("375518"),
                        whiteSVG: n("375518")
                    },
                    enabled: !0,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://github.com/".concat(encodeURIComponent(t))
                    },
                    domains: ["github.com"]
                }, {
                    type: l.PlatformTypes.PLAYSTATION,
                    name: "PlayStation Network",
                    color: s.default.unsafe_rawColors.PLAYSTATION.css,
                    icon: {
                        lightPNG: n("322246"),
                        darkPNG: n("964854"),
                        whitePNG: n("964854"),
                        lightSVG: n("154849"),
                        darkSVG: n("895661"),
                        whiteSVG: n("895661")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.PLAYSTATION_STAGING,
                    name: "PlayStation Network (Staging)",
                    color: s.default.unsafe_rawColors.PLAYSTATION.css,
                    icon: {
                        lightPNG: n("964854"),
                        darkPNG: n("322246"),
                        whitePNG: n("322246"),
                        lightSVG: n("895661"),
                        darkSVG: n("154849"),
                        whiteSVG: n("154849")
                    },
                    enabled: !1
                }, {
                    type: l.PlatformTypes.EPIC_GAMES,
                    name: "Epic Games",
                    icon: {
                        lightPNG: n("1308"),
                        darkPNG: n("396128"),
                        whitePNG: n("396128"),
                        lightSVG: n("746621"),
                        darkSVG: n("497894"),
                        whiteSVG: n("497894")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.RIOT_GAMES,
                    name: "Riot Games",
                    icon: {
                        lightPNG: n("300525"),
                        darkPNG: n("300525"),
                        whitePNG: n("501653"),
                        lightSVG: n("704777"),
                        darkSVG: n("704777"),
                        whiteSVG: n("940593")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.PAYPAL,
                    name: "PayPal",
                    icon: {
                        lightPNG: n("347775"),
                        darkPNG: n("347775"),
                        whitePNG: n("770624"),
                        lightSVG: n("524855"),
                        darkSVG: n("524855"),
                        whiteSVG: n("209560")
                    },
                    enabled: !0,
                    hasMetadata: !0
                }, {
                    type: l.PlatformTypes.EBAY,
                    name: "eBay",
                    icon: {
                        lightPNG: n("14366"),
                        darkPNG: n("14366"),
                        whitePNG: n("994873"),
                        lightSVG: n("286611"),
                        darkSVG: n("286611"),
                        whiteSVG: n("376998")
                    },
                    enabled: !0,
                    hasMetadata: !0,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://www.ebay.com/usr/".concat(encodeURIComponent(t))
                    }
                }, {
                    type: l.PlatformTypes.TIKTOK,
                    name: "TikTok",
                    icon: {
                        lightPNG: n("482311"),
                        darkPNG: n("196135"),
                        whitePNG: n("196135"),
                        lightSVG: n("204844"),
                        darkSVG: n("793866"),
                        whiteSVG: n("793866")
                    },
                    enabled: !0,
                    hasMetadata: !0,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://www.tiktok.com/@".concat(encodeURIComponent(t))
                    }
                }, {
                    type: l.PlatformTypes.INSTAGRAM,
                    name: "Instagram",
                    icon: {
                        lightPNG: n("299059"),
                        darkPNG: n("299059"),
                        whitePNG: n("612315"),
                        lightSVG: n("496955"),
                        darkSVG: n("496955"),
                        whiteSVG: n("152071")
                    },
                    enabled: !1,
                    getPlatformUserUrl: e => {
                        let {
                            name: t
                        } = e;
                        return "https://www.instagram.com/".concat(encodeURIComponent(t))
                    }
                }, {
                    type: l.PlatformTypes.CRUNCHYROLL,
                    name: "Crunchyroll",
                    color: s.default.unsafe_rawColors.CRUNCHYROLL.css,
                    icon: {
                        lightPNG: n("211689"),
                        darkPNG: n("211689"),
                        whitePNG: n("211689"),
                        lightSVG: n("350043"),
                        darkSVG: n("350043"),
                        whiteSVG: n("698833")
                    },
                    enabled: !0
                }, {
                    type: l.PlatformTypes.DOMAIN,
                    name: "Domain",
                    icon: {
                        lightPNG: n("145159"),
                        darkPNG: n("523403"),
                        whitePNG: n("523403"),
                        lightSVG: n("994912"),
                        darkSVG: n("153846"),
                        whiteSVG: n("153846")
                    },
                    getPlatformUserUrl: e => {
                        let {
                            id: t
                        } = e;
                        return "https://".concat(t, "/")
                    },
                    get enabled() {
                        return a.DomainConnectionExperiment.getCurrentConfig({
                            location: "ed49a3_1"
                        }).enabled
                    }
                }],
                u = r.keyBy(o, "type"),
                c = {};
            o.forEach(e => {
                var t;
                null === (t = e.domains) || void 0 === t || t.forEach(t => {
                    c[t] = e
                })
            });
            var d = {
                get(e) {
                    var t;
                    return null !== (t = u[e]) && void 0 !== t ? t : null
                },
                getByUrl(e) {
                    let t = new URL(e),
                        n = t.hostname,
                        i = n.startsWith("www.") ? n.slice(4) : n;
                    return c[i]
                },
                isSupported: e => Object.prototype.hasOwnProperty.call(u, e),
                map: e => o.map(e),
                filter(e) {
                    let t = o.filter(e);
                    return t.sort((e, t) => {
                        let {
                            name: n
                        } = e, {
                            name: i
                        } = t;
                        return n.localeCompare(i)
                    }), t
                },
                find: e => o.find(e)
            }
        },
        70513: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("605250"),
                r = n("773336"),
                s = n("49671");
            let a = new i.default("ProgressBarManager");
            var l = new class e {
                setProgress(e, t) {
                    if (!(0, r.isDesktop)()) throw Error("cannot set progress from non-native");
                    if (null != this.taskID && this.taskID !== e) {
                        a.warn("".concat(this.taskID, " is already running. cannot set ").concat(e));
                        return
                    }
                    this.taskID = e, s.default.window.setProgressBar(t)
                }
                clearProgress(e) {
                    if (!(0, r.isDesktop)()) throw Error("cannot clear progress from non-native");
                    if (null == this.taskID) {
                        a.warn("cannot clear progress. No current progress running.");
                        return
                    }
                    if (this.taskID !== e) {
                        a.warn("cannot clear progress of ".concat(e, " when ").concat(this.taskID, " is running"));
                        return
                    }
                    this.taskID = null, s.default.window.setProgressBar(-1)
                }
            }
        },
        199948: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("427964"),
                r = n.n(i);
            let s = [];
            class a {
                static create() {
                    let e = new a;
                    return s.push(e), e.record
                }
                getTotalBytes() {
                    return r.sum(Object.values(this.bytes))
                }
                constructor() {
                    this.bytes = {}, this.record = e => {
                        if (null != e) {
                            for (let t in e.rtp.inbound) {
                                let n = e.rtp.inbound[t];
                                for (let e of n) {
                                    let n = "inbound-".concat(t, "-").concat(e.type);
                                    !(n in this.bytes) && (this.bytes[n] = 0), this.bytes[n] = e.bytesReceived
                                }
                            }
                            for (let t of e.rtp.outbound) {
                                let e = "outbound-".concat(t.type);
                                !(e in this.bytes) && (this.bytes[e] = 0), this.bytes[e] = t.bytesSent
                            }
                        }
                    }
                }
            }
        },
        997722: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return K
                }
            });
            var i, r = n("918003"),
                s = n.n(r),
                a = n("424509"),
                l = n.n(a),
                o = n("498997"),
                u = n("462567"),
                c = n("435653"),
                d = n("435721"),
                _ = n("335990"),
                E = n("931010"),
                f = n("913144"),
                p = n("404118"),
                h = n("673777"),
                S = n("605250"),
                T = n("808122"),
                I = n("601222"),
                m = n("469543"),
                g = n("403770"),
                A = n("834604");
            n("222920");
            var C = n("901946"),
                R = n("42203"),
                N = n("42887"),
                v = n("661919"),
                O = n("590401"),
                D = n("599110"),
                L = n("35468"),
                M = n("773336"),
                P = n("49671"),
                b = n("199948"),
                y = n("422791"),
                U = n("642099"),
                G = n("417040"),
                w = n("716380"),
                x = n("157547"),
                k = n("88313"),
                F = n("531748"),
                B = n("760406"),
                V = n("478696"),
                H = n("49111"),
                j = n("860604"),
                Y = n("782340");
            let W = /^https/.test((i = "https:", "https:")) ? "wss:" : "ws:";
            class K extends d.default {
                get quality() {
                    let e = this.getLastPing();
                    if (this.state !== H.RTCConnectionStates.RTC_CONNECTED || void 0 === e) return H.RTCConnectionQuality.UNKNOWN;
                    if (e > 500 || null != this._outboundLossRate && this._outboundLossRate > 10) return H.RTCConnectionQuality.BAD;
                    if (e > 250 || null != this._outboundLossRate && this._outboundLossRate > 5) return H.RTCConnectionQuality.AVERAGE;
                    else return H.RTCConnectionQuality.FINE
                }
                get endpoint() {
                    return this._endpoint
                }
                set endpoint(e) {
                    if (null == e) this._endpoint = null, this.hostname = null;
                    else {
                        e = "".concat(W, "//").concat(e);
                        let {
                            hostname: t,
                            port: n
                        } = o.parse(e), i = null != n ? parseInt(n) : NaN;
                        null != t && (80 === i || 443 === i) && (e = "".concat(W, "//").concat(t)), this._endpoint = e + "/", this.hostname = t
                    }
                }
                get isSecureFramesEnabled() {
                    return this._secureFramesProtocolVersion > 0
                }
                connect(e, t) {
                    if (this._destroyed) throw Error("RTCConnection.connect(...): Attempting to connect on destroyed instance.");
                    this._backoff.cancel();
                    let {
                        endpoint: n,
                        token: i
                    } = this;
                    if (this.endpoint = e, this.token = t, (n !== this.endpoint || i !== t) && (this._cleanupSocket(), this._mediaSessionId = null, null != n && (this._rtcConnectionId = (0, u.v4)(), f.default.dispatch({
                            type: "RTC_CONNECTION_UPDATE_ID",
                            connection: this
                        }))), null == this.endpoint) {
                        this.setState(H.RTCConnectionStates.AWAITING_ENDPOINT);
                        return
                    }
                    let r = this._socket;
                    null != r && this._cleanupSocket(), (r = this._socket = new G.default(this.endpoint)).on(G.SocketEvent.Connecting, this._handleConnecting.bind(this, r)), r.on(G.SocketEvent.Connect, this._handleConnect.bind(this, r)), r.on(G.SocketEvent.Disconnect, this._handleDisconnect.bind(this, r)), r.on(G.SocketEvent.Resuming, this._handleResuming.bind(this, r)), r.on(G.SocketEvent.Ready, this._handleReady.bind(this, r)), r.on(G.SocketEvent.Speaking, this._handleSpeaking.bind(this, r)), r.on(G.SocketEvent.Video, this._handleVideo.bind(this, r)), r.on(G.SocketEvent.Ping, this._handleControlPing.bind(this)), r.on(G.SocketEvent.ClientDisconnect, this._handleClientDisconnect.bind(this)), r.on(G.SocketEvent.Codecs, this._handleCodecs.bind(this)), r.on(G.SocketEvent.MediaSessionId, this._handleMediaSessionId.bind(this)), r.on(G.SocketEvent.MediaSinkWants, this._handleMediaSinkWants.bind(this)), r.on(G.SocketEvent.VoiceBackendVersion, this._handleCodeVersion.bind(this)), r.on(G.SocketEvent.KeyframeInterval, this._handleKeyframeInterval.bind(this)), r.on(G.SocketEvent.ChannelOptionsUpdateRtcLog, this._handleUpdateRtcLog.bind(this)), r.on(G.SocketEvent.ChannelOptionsUpdateSecureFramesProtocol, this._handleUpdateSecureFramesProtocol.bind(this)), r.on(G.SocketEvent.Flags, this.handleFlags.bind(this)), r.on(G.SocketEvent.Platform, this.handlePlatform.bind(this)), this._connectStartTime = (0, E.now)(), this._connectCount++, this._connecting = !0, null != r && this._socket === r && (this._trackVoiceConnectionConnecting(), this._encountered_socket_failure = !1, r.connect())
                }
                destroy() {
                    var e, t, n, i, r;
                    if (this.logger.info("Destroy RTCConnection"), L.default.removeOnlineCallback(this._handleNetworkOnline), L.default.removeOfflineCallback(this._handleNetworkOffline), (0, M.isDesktop)() && (null === (r = this.powerMonitorListener) || void 0 === r || r.call(this)), this._backoff.cancel(), this._cleanupSocket(), null === (e = this._voiceQuality) || void 0 === e || e.stop(), this._voiceQuality = null, clearInterval(this._voiceQualityPeriodicStatsInterval), this._voiceQualityPeriodicStatsInterval = null, this._voiceQualityPeriodicStatsSequenceId = 0, null === (t = this._voiceDuration) || void 0 === t || t.stop(), this._voiceDuration = null, null === (n = this._videoQuality) || void 0 === n || n.stop(), this._videoQuality = null, this._videoHealthManager = null, null === (i = this._localMediaSinkWantsManager) || void 0 === i || i.reset(), null != this._connection) {
                        let e = this._connection;
                        this._connection = null, e.destroy()
                    }
                    this.removeAllListeners(), this._destroyed = !0
                }
                sendSpeaking(e, t) {
                    let n = this._socket;
                    if (null != n) {
                        let i = N.default.getPacketDelay();
                        n.speaking(e, i, t)
                    }
                }
                sendVideo(e, t, n, i) {
                    let r = this._socket;
                    null != r && (0 !== t && (this._sentVideo = !0), this._sentVideo && r.video(e, t, n, i))
                }
                getPings() {
                    return this._pings
                }
                getAveragePing() {
                    let e = this._pings.slice(0, Math.min(this._pings.length, 20));
                    return 0 === e.length || null == this._socket ? 0 : e.reduce((e, t) => e + t.value, 0) / e.length
                }
                getLastPing() {
                    var e;
                    return null === (e = this._pings[this._pings.length - 1]) || void 0 === e ? void 0 : e.value
                }
                getOutboundLossRate() {
                    return this._outboundLossRate
                }
                getMediaSessionId() {
                    return this._mediaSessionId
                }
                getRTCConnectionId() {
                    return this._rtcConnectionId
                }
                getVoiceVersion() {
                    return this.voiceVersion
                }
                getRtcWorkerVersion() {
                    return this.rtcWorkerVersion
                }
                getDuration() {
                    let e = this._connectCompletedTime > 0 ? (0, E.now)() - this._connectCompletedTime : 0;
                    return e > 0 ? e : 0
                }
                getPacketStats() {
                    var e;
                    return null === (e = this._voiceQuality) || void 0 === e ? void 0 : e.getPacketStats()
                }
                getCreatedTime() {
                    return this._createdTime
                }
                getVideoHealthManager() {
                    return this._videoHealthManager
                }
                pauseStatsCollectionForUser(e, t) {
                    let n = this.getOrCreateVideoQuality();
                    if (null == n) {
                        this.logger.error("pauseStatsCollectionForUser: Unable to create videoQuality.");
                        return
                    }
                    t ? n.addUserToStatsCollectionPausedSet(e) : n.removeUserFromStatsCollectionPausedSet(e)
                }
                setState(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    this.logger.info("RTC connection state: ".concat(this.state, " => ").concat(e)), this.state = e, this.stateHistory.update(this.state), this.emit(y.RTCConnectionEvent.State, e, {
                        hostname: this.hostname,
                        channelId: null != this.rtcServerId ? s(this.rtcServerId).prev().toString() : this.channelId,
                        context: this.context,
                        rtcLogEphemeralKey: this.rtcLogEphemeralKey
                    }, t)
                }
                expeditedHeartbeat(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
                        n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
                        i = this._socket;
                    null != i && i.expeditedHeartbeat(e, t, n) && this._backoff.cancel()
                }
                resetBackoff() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                        t = this._socket;
                    null != t && t.resetBackoff(e) && this._backoff.cancel()
                }
                setAppBackgrounded(e, t) {
                    var n;
                    null === (n = this._localMediaSinkWantsManager) || void 0 === n || n.setAppBackgrounded(e, t)
                }
                setSelectedParticipant(e) {
                    var t;
                    null === (t = this._localMediaSinkWantsManager) || void 0 === t || t.setSelectedParticipant(e)
                }
                setPipOpen(e) {
                    var t;
                    null === (t = this._localMediaSinkWantsManager) || void 0 === t || t.setPipOpen(e)
                }
                setRtcLogMarker(e) {
                    var t;
                    null === (t = this._connection) || void 0 === t || t.setRtcLogMarker(e)
                }
                setClipRecordSSRC(e, t, n, i, r) {
                    var s;
                    let a = (() => {
                        var i, s, a;
                        if (null != r) return r;
                        if ("outbound" === n) throw Error("Do not use setClipRecordSSRC for outbound streams!");
                        if ("audio" === t) return null === (i = this._connection) || void 0 === i ? void 0 : i.getRemoteAudioSSRCForUser(e);
                        if ("video" === t) {
                            let t = null === (s = this._connection) || void 0 === s ? void 0 : s.getRemoteVideoSSRCsForUser(e);
                            return (null !== (a = null == t ? void 0 : t.length) && void 0 !== a ? a : 0) > 1 && this.logger.warn("setClipRecordSSRC: More than one video SSRC for user ".concat(e, "! Behavior undefined.")), null == t ? void 0 : t[0]
                        }
                    })();
                    null != a && (null === (s = this._connection) || void 0 === s || s.setClipRecordSsrc(a, t, n, i))
                }
                set channelId(e) {
                    this._channelId = e, this.channelIds.add(e)
                }
                get channelId() {
                    return this._channelId
                }
                _cleanupSocket() {
                    let e = this._socket;
                    null != e && (e.close(), e.removeAllListeners(), this._socket = null)
                }
                _chooseExperiments(e) {
                    let t = [];
                    this._recordingEnabled && t.push("connection_log"), N.default.supports(j.Features.FIXED_KEYFRAME_INTERVAL) && t.push("fixed_keyframe_interval"), this._selectedExperiments = t
                }
                _handleConnecting(e) {
                    null != this.endpoint && this.logger.info("Connecting to RTC server ".concat(this.endpoint, ", rtc-connection-id: ").concat(this.getRTCConnectionId())), this.setState(H.RTCConnectionStates.CONNECTING)
                }
                _handleConnect(e) {
                    var t, n;
                    let i = this.token;
                    if (null == i) throw Error("RTCConnection._handleConnect(...): Token is missing.");
                    this.logger.info("Connected to RTC server."), e.identify({
                        serverId: null !== (n = null !== (t = this.rtcServerId) && void 0 !== t ? t : this.guildId) && void 0 !== n ? n : this.channelId,
                        userId: this.userId,
                        sessionId: this.sessionId,
                        token: i,
                        maxSecureFramesVersion: N.default.getSupportedSecureFramesProtocolVersion(),
                        video: N.default.supports(j.Features.VIDEO),
                        streamParameters: N.default.getVideoStreamParameters(this.context)
                    }), this.setState(H.RTCConnectionStates.AUTHENTICATING)
                }
                _handleDisconnect(e, t, n, i) {
                    var r, s, a, l, o;
                    this.logger.info("Disconnected from RTC server, clean: ".concat(t, ", code: ").concat(n, ", reason: ").concat(i, ", state: ").concat(this.state)), !t && this._connecting && !this._encountered_socket_failure && (D.default.track(H.AnalyticEvents.VOICE_CONNECTION_SOCKET_FAILURE, {
                        guild_id: this.guildId,
                        channel_id: this.channelId,
                        rtc_connection_id: this.getRTCConnectionId(),
                        hostname: this.hostname,
                        connect_count: this._connectCount,
                        code: n,
                        reason: i
                    }), this._encountered_socket_failure = !0);
                    let u = "Force Close" !== i;
                    if (u) {
                        let e = this._backoff.fail(this.reconnect);
                        this.logger.warn("Disconnect was not clean! reason=".concat(i, ". Reconnecting in ").concat((e / 1e3).toFixed(2), " seconds."))
                    }
                    if (this.state !== H.RTCConnectionStates.DISCONNECTED) {
                        let e = R.default.getChannel(this.channelId),
                            t = null != e ? e.type : null,
                            n = this._videoQuality;
                        if (null != n && this.context === j.MediaEngineContextTypes.DEFAULT) {
                            if (n.stop(), this._sentVideo) {
                                let e = n.getOutboundStats();
                                e.forEach(e => {
                                    var r;
                                    let s = null !== (r = e.num_frames) && void 0 !== r ? r : 0;
                                    s > 0 && D.default.track(H.AnalyticEvents.VIDEO_STREAM_ENDED, {
                                        ...this._getAnalyticsProperties(),
                                        media_session_id: this.getMediaSessionId(),
                                        sender_user_id: this.userId,
                                        channel_type: t,
                                        reason: i,
                                        participant_type: "sender",
                                        guild_region: O.default.getRegion(this.hostname),
                                        hostname: this.hostname,
                                        ...e,
                                        ...n.getNetworkStats(),
                                        ...n.getCodecUsageStats("sender", this.userId),
                                        ...this._soundshareStats.getStats(),
                                        device_performance_class: (0, T.getMediaPerformanceClass)()
                                    })
                                })
                            }
                            let e = n.getInboundParticipants();
                            e.forEach(e => {
                                var r;
                                let s = n.getInboundStats(e),
                                    a = null !== (r = null == s ? void 0 : s.num_frames) && void 0 !== r ? r : 0;
                                a > 0 && D.default.track(H.AnalyticEvents.VIDEO_STREAM_ENDED, {
                                    ...this._getAnalyticsProperties(),
                                    media_session_id: this.getMediaSessionId(),
                                    sender_user_id: e,
                                    channel_type: t,
                                    reason: i,
                                    participant_type: "receiver",
                                    guild_region: O.default.getRegion(this.hostname),
                                    hostname: this.hostname,
                                    ...s,
                                    ...n.getNetworkStats(),
                                    ...n.getCodecUsageStats("receiver", e)
                                })
                            })
                        }
                        let r = O.default.shouldIncludePreferredRegion() ? O.default.getPreferredRegion() : null,
                            s = N.default.getSettings();
                        D.default.track(H.AnalyticEvents.VOICE_DISCONNECT, {
                            ...this._getAnalyticsProperties(),
                            hostname: this.hostname,
                            port: this.port,
                            protocol: this.protocol,
                            reconnect: u,
                            reason: i,
                            duration: this.getDuration(),
                            ...null != this._voiceQuality ? this._voiceQuality.getMosStats() : null,
                            ...null != this._voiceQuality ? this._voiceQuality.getPacketStats() : null,
                            ...null != this._voiceQuality ? this._voiceQuality.getBytesStats() : null,
                            ...null != this._voiceQuality ? this._voiceQuality.getBufferStats() : null,
                            ...null != this._voiceQuality ? this._voiceQuality.getNetworkStats() : null,
                            ...null != this._voiceQuality ? this._voiceQuality.getFrameOpStats() : null,
                            ...null != this._voiceQuality ? this._voiceQuality.getDurationStats() : null,
                            ...null != this._voiceQuality ? this._voiceQuality.getTransportStats() : null,
                            ...null != this._voiceDuration ? this._voiceDuration.getDurationStats() : null,
                            media_session_id: this.getMediaSessionId(),
                            channel_type: t,
                            channel_bitrate: null != e ? e.bitrate : null,
                            cloudflare_best_region: r,
                            connect_count: this._connectCount,
                            ping_average: Math.round(this.getAveragePing()),
                            ping_bad_count: this._pingBadCount,
                            ping_timeout: this._pingTimeouts.length,
                            input_detected: this._inputDetected,
                            no_input_detected_notice: N.default.getNoInputDetectedNotice(),
                            audio_input_mode: s.mode,
                            automatic_audio_input_sensitivity_enabled: s.modeOptions.autoThreshold,
                            audio_input_sensitivity: s.modeOptions.threshold,
                            echo_cancellation_enabled: s.echoCancellation,
                            noise_suppression_enabled: s.noiseSuppression,
                            noise_cancellation_enabled: s.noiseCancellation,
                            automatic_gain_control_enabled: s.automaticGainControl,
                            voice_output_volume: s.outputVolume,
                            encryption_mode: this._encryptionMode,
                            channel_count: this.channelIds.size,
                            input_device: this.getInputDeviceName(),
                            output_device: this.getOutputDeviceName(),
                            device_performance_class: (0, T.getMediaPerformanceClass)(),
                            num_fast_udp_reconnects: null != this._connection ? null === (o = this._connection) || void 0 === o ? void 0 : o.getNumFastUdpReconnects() : null
                        });
                        let a = this.getMediaSessionId();
                        N.default.getMediaEngine().getCodecSurvey().then(e => {
                            let t = JSON.parse(e);
                            if (null == t || null == t.available_video_encoders || null == t.available_video_decoders) throw Error("codec survey is not available");
                            D.default.track(H.AnalyticEvents.VOICE_CODEC_DETECTED, {
                                ...t,
                                rtc_connection_id: this.getRTCConnectionId(),
                                media_session_id: a
                            })
                        }).catch(e => {
                            this.logger.warn(e)
                        })
                    }
                    if (this._pingTimeouts = [], this._pings = [], this._connectCompletedTime = 0, this._pingBadCount = 0, this._inputDetected = !1, this._mediaSessionId = null, null === (r = this._voiceQuality) || void 0 === r || r.stop(), this._voiceQuality = null, clearInterval(this._voiceQualityPeriodicStatsInterval), this._voiceQualityPeriodicStatsInterval = null, this._voiceQualityPeriodicStatsSequenceId = 0, null === (s = this._voiceDuration) || void 0 === s || s.stop(), this._voiceDuration = null, null === (a = this._videoQuality) || void 0 === a || a.stop(), this._videoQuality = null, this._videoHealthManager = null, null === (l = this._localMediaSinkWantsManager) || void 0 === l || l.reset(), null != this._connection) {
                        let e = this._connection;
                        this._connection = null, e.destroy()
                    }
                    this.setState(H.RTCConnectionStates.DISCONNECTED, {
                        willReconnect: u
                    })
                }
                _handleResuming(e) {
                    var t, n;
                    null === (t = this._connection) || void 0 === t || t.fastUdpReconnect(), null === (n = this._connection) || void 0 === n || n.clearAllSpeaking()
                }
                _handleReady(e, t, n, i, r, a, l) {
                    var o;
                    this.setState(H.RTCConnectionStates.RTC_CONNECTING), this.port = n, null != l && this._chooseExperiments(l), 0 === a.length && a.push({
                        type: j.MediaTypes.VIDEO,
                        rid: "100",
                        ssrc: r + 1,
                        rtxSsrc: r + 2,
                        quality: 100,
                        active: !1
                    });
                    let u = N.default.getMediaEngine(),
                        c = u.connect(this.context, {
                            userId: this.userId,
                            channelId: null != this.rtcServerId ? s(this.rtcServerId).prev().toString() : this._channelId,
                            guildId: null !== (o = this.rtcServerId) && void 0 !== o ? o : this.guildId
                        }, {
                            ssrc: r,
                            address: t,
                            port: n,
                            modes: i,
                            experiments: this._selectedExperiments,
                            streamParameters: a,
                            qosEnabled: N.default.getQoS(),
                            ...this._getExtraConnectionOptions()
                        });
                    if (c.setUseElectronVideo(u.supports(j.Features.ELECTRON_VIDEO)), N.default.supports(j.Features.IMAGE_QUALITY_MEASUREMENT)) {
                        let {
                            enabled: e,
                            measurement: t
                        } = A.default.getConfig(!0);
                        e && c.setVideoQualityMeasurement(t)
                    }
                    let d = ["unk"];
                    if (N.default.supports(j.Features.AMD_EXPERIMENTAL_RATE_CONTROL)) {
                        let {
                            amdRelaxedRc: e
                        } = m.default.getCurrentConfig({
                            location: "handleReady"
                        }, {
                            autoTrackExposure: !0
                        });
                        e && d.push("amdRelaxRc")
                    }
                    c.setVideoEncoderExperiments(d.join(",")), c.on(_.BaseConnectionEvent.Speaking, (e, t, n) => {
                        this.userId === e && this.sendSpeaking(t, n), this.emit(y.RTCConnectionEvent.Speaking, e, t)
                    }), c.on(_.BaseConnectionEvent.Video, (e, t, n, i, r, s) => {
                        if (this._handleVideoStreamId({
                                userId: e,
                                streamId: t,
                                audioSsrc: n,
                                videoSsrc: null != i ? i : 0,
                                rtxSsrc: r,
                                videoStreamParameters: s
                            }), this.userId === e) this.sendVideo(null != n ? n : 0, null != i ? i : 0, null != r ? r : 0, s), null == s || s.forEach(t => {
                            100 === t.quality && this.emit(y.RTCConnectionEvent.VideoSourceQualityChanged, this.guildId, this.channelId, e, t.maxResolution, t.maxFrameRate, this.context)
                        })
                    }), c.on(_.BaseConnectionEvent.FirstFrame, (e, t, n) => {
                        null != this._localMediaSinkWantsManager && (this._localMediaSinkWantsManager.setFirstFrameReceived(t), this.emit(y.RTCConnectionEvent.Video, this.guildId, this.channelId, e, n, this.rtcServerId))
                    }), c.on(_.BaseConnectionEvent.Silence, e => {
                        this._inputDetected = this._inputDetected || !e
                    }), c.on(_.BaseConnectionEvent.Connected, (i, r) => {
                        if (this.logger.info("RTC connected to media server: ".concat(t, ":").concat(n)), e !== this._socket) {
                            this.logger.warn("Socket mismatch, disconnecting");
                            return
                        }
                        switch (this._voiceQuality = new V.default(c), this._voiceQuality.start(), this._voiceQualityPeriodicStatsSequenceId = 0, this._voiceQualityPeriodicStatsInterval = setInterval(this._handleVoiceQualityPeriodicsStats, 3e5), this._voiceDuration = new B.default(this.userId, c), this._voiceDuration.start(), this.protocol = i, i) {
                            case "udp":
                                this.logger.info("Sending UDP info to RTC server.", r, this._selectedExperiments), e.once(G.SocketEvent.Encryption, (e, t) => {
                                    c === this._connection && (c.setEncryption(e, t), this._encryptionMode = e)
                                }), e.selectProtocol(i, this.getRTCConnectionId(), r, this._selectedExperiments);
                                break;
                            case "webrtc":
                                this.logger.info("Sending local SDP to RTC server."), e.once(G.SocketEvent.SDP, this._handleSDP.bind(this)), e.selectProtocol(i, this.getRTCConnectionId(), r);
                                break;
                            default:
                                this.logger.error("Unable to determine protocol.");
                                return
                        }
                        this._backoff.succeed()
                    }), c.on(_.BaseConnectionEvent.VideoEncoderFallback, t => {
                        let n = t.filter(e => "video" === e.type).map(e => e.name).join(",");
                        this.logger.info("The originally selected video encoder is not working, fallback to the other available encoders:" + n), e.updateSession({
                            codecs: t
                        })
                    }), c.on(_.BaseConnectionEvent.Error, t => {
                        if (e !== this._socket) return;
                        let n = O.default.shouldIncludePreferredRegion() ? O.default.getPreferredRegion() : null;
                        this.logger.error("Error occurred while connecting to RTC server: ".concat(t)), D.default.track(H.AnalyticEvents.VOICE_CONNECTION_FAILURE, {
                            ...this._getAnalyticsProperties(),
                            hostname: this.hostname,
                            port: this.port,
                            protocol: this.protocol,
                            error: t,
                            cloudflare_best_region: n,
                            connect_count: this._connectCount
                        })
                    }), c.on(_.BaseConnectionEvent.ConnectionStateChange, t => {
                        if (this.logger.info("RTC media connection state change: ".concat(this.state, " => ").concat(t)), e !== this._socket) return;
                        let n = this.state;
                        switch (t) {
                            case j.ConnectionStates.DISCONNECTED:
                                this.setState(H.RTCConnectionStates.RTC_DISCONNECTED);
                                break;
                            case j.ConnectionStates.CONNECTING:
                                this.setState(H.RTCConnectionStates.RTC_CONNECTING);
                                break;
                            case j.ConnectionStates.CONNECTED:
                                this.setState(H.RTCConnectionStates.RTC_CONNECTED);
                                break;
                            case j.ConnectionStates.NO_ROUTE:
                                this.setState(H.RTCConnectionStates.NO_ROUTE);
                                break;
                            case j.ConnectionStates.ICE_CHECKING:
                                this.setState(H.RTCConnectionStates.ICE_CHECKING);
                                break;
                            case j.ConnectionStates.DTLS_CONNECTING:
                                this.setState(H.RTCConnectionStates.DTLS_CONNECTING)
                        }
                        if (n === H.RTCConnectionStates.RTC_CONNECTING && this.state === H.RTCConnectionStates.RTC_DISCONNECTED ? this.reconnect() : this.state === H.RTCConnectionStates.NO_ROUTE && this._backoff.fail(this.reconnect), this.state === H.RTCConnectionStates.RTC_CONNECTED) {
                            var i;
                            let e = O.default.shouldIncludePreferredRegion() ? O.default.getPreferredRegion() : null;
                            this._connecting && D.default.track(H.AnalyticEvents.VOICE_CONNECTION_SUCCESS, {
                                ...this._getAnalyticsProperties(),
                                hostname: this.hostname,
                                port: this.port,
                                protocol: this.protocol,
                                cloudflare_best_region: e,
                                connect_time: (0, E.now)() - (this._connected ? this._connectStartTime : this._createdTime),
                                connect_count: this._connectCount,
                                audio_subsystem: N.default.getMediaEngine().getAudioSubsystem(),
                                audio_layer: N.default.getMediaEngine().getAudioLayer(),
                                media_session_id: this.getMediaSessionId(),
                                ...this.stateHistory.getVoiceConnectionSuccessStats()
                            }), null === (i = this._localMediaSinkWantsManager) || void 0 === i || i.setConnection(c), this._connectCompletedTime = (0, E.now)(), this._connected = !0, this._connecting = !1, this._encountered_socket_failure = !1
                        } else n === H.RTCConnectionStates.RTC_CONNECTED && this.stateHistory.reset(this.state)
                    }), c.on(_.BaseConnectionEvent.Ping, this._handlePing.bind(this)), c.on(_.BaseConnectionEvent.PingTimeout, this._handlePingTimeout.bind(this)), c.on(_.BaseConnectionEvent.OutboundLossRate, this._handleOutboundLossRate.bind(this)), c.on(_.BaseConnectionEvent.SoundshareTrace, this._handleSoundshareTrace.bind(this)), c.on(_.BaseConnectionEvent.LocalVideoDisabled, this._handleLocalVideoDisabled.bind(this)), c.on(_.BaseConnectionEvent.Stats, b.default.create()), c.on(_.BaseConnectionEvent.RemoteStreamsReady, this._handleRemoteStreamsReady.bind(this)), c.setRemoteVideoSinkWants(this._remoteVideoSinkWants), this._connection = c
                }
                _handleSpeaking(e, t, n, i) {
                    let r = this._connection;
                    if (null != r && this.userId !== t) {
                        var s;
                        i !== j.SpeakingFlags.NONE && (r.createUser(t, n), f.default.dispatch({
                            type: "RTC_CONNECTION_USER_CREATE_SSRC",
                            userId: t,
                            ssrc: n,
                            context: this.context
                        })), null === (s = this._localMediaSinkWantsManager) || void 0 === s || s.setAudioSSRC(t, n)
                    }
                }
                handleFlags(e, t) {
                    this.emit(y.RTCConnectionEvent.Flags, e, t)
                }
                handlePlatform(e, t) {
                    this.emit(y.RTCConnectionEvent.Platform, e, t, this.channelId)
                }
                getOrCreateVideoQuality() {
                    if (null != this._connection && null == this._videoQuality) {
                        var e, t, n, i;
                        this._videoQuality = new F.VideoQuality(this._connection), this._videoQuality.start()
                    }
                    return this._videoQuality
                }
                _handleVideoStreamId(e) {
                    var t, n, i, r;
                    let {
                        userId: s,
                        streamId: a,
                        videoSsrc: l,
                        videoStreamParameters: o
                    } = e;
                    if (this.emit(y.RTCConnectionEvent.Video, this.guildId, this.channelId, s, a, this.rtcServerId), null != a && null == this.getOrCreateVideoQuality() && this.logger.error("_handleVideoStreamId: Unable to create videoQuality."), null != this._videoQuality && this.userId === s && o.forEach(e => {
                            var t, n;
                            let i = null !== (t = e.ssrc) && void 0 !== t ? t : 0;
                            i > 0 && (null === (n = this._videoQuality) || void 0 === n || n.setOutboundSsrc(i))
                        }), this.userId !== s) {
                        let e = 0 === l && null === a,
                            r = !e || e && (null === (t = this._videoQuality) || void 0 === t ? void 0 : t.getInboundParticipants().includes(s));
                        r && (null === (n = this._videoQuality) || void 0 === n || n.setInboundUser(s, l), null === (i = this._videoHealthManager) || void 0 === i || i.createUser(s))
                    }
                    null != this._connection && this.userId !== s && (null === (r = this._localMediaSinkWantsManager) || void 0 === r || r.setStreamId(s, a))
                }
                _handleLocalVideoDisabled(e, t) {
                    if (this.userId !== e) {
                        let n = this.getOrCreateVideoQuality();
                        if (null == n) {
                            this.logger.error("_handleLocalVideoDisabled: Unable to create videoQuality.");
                            return
                        }
                        n.setUserVideoDisabled(e, t)
                    }
                }
                _handleRemoteStreamsReady(e) {
                    let t = (0, E.now)() - this._connectStartTime;
                    D.default.track(H.AnalyticEvents.VOICE_CONNECTION_REMOTE_STREAMS_CREATED, {
                        number_of_users: e,
                        duration_ms: t,
                        guild_id: this.guildId,
                        channel_id: this.channelId,
                        rtc_connection_id: this.getRTCConnectionId()
                    })
                }
                _handleVideo(e, t, n, i, r) {
                    let s = this._connection;
                    if (null != s && this.userId !== t) {
                        if (null != this._localMediaSinkWantsManager) {
                            this._localMediaSinkWantsManager.setAudioSSRC(t, n);
                            let e = r.map(e => ({
                                type: j.MediaTypes.VIDEO,
                                rid: e.rid,
                                ssrc: e.ssrc,
                                rtxSsrc: e.rtxSsrc,
                                quality: e.quality,
                                active: i > 0
                            }));
                            0 === e.length && e.push({
                                type: j.MediaTypes.VIDEO,
                                rid: "100",
                                ssrc: i,
                                rtxSsrc: i + 1,
                                quality: 100,
                                active: i > 0
                            }), this._localMediaSinkWantsManager.setVideoSSRCs(t, e)
                        } else {
                            let e = [i];
                            s.createUser(t, n, e)
                        }
                        null == r || r.forEach(e => {
                            100 === e.quality && this.emit(y.RTCConnectionEvent.VideoSourceQualityChanged, this.guildId, this.channelId, t, e.maxResolution, e.maxFrameRate, this.context)
                        })
                    }
                }
                _handleControlPing(e) {
                    !N.default.supports(j.Features.NATIVE_PING) && this._handlePing(e)
                }
                _handlePing(e) {
                    if (void 0 !== e) {
                        for (this._pings.push({
                                time: Date.now(),
                                value: e
                            }); this._pings.length >= 200;) this._pings.shift();
                        e > 500 && this._pingBadCount++, this.emit(y.RTCConnectionEvent.Ping, this._pings, this.quality)
                    }
                }
                _handlePingTimeout(e, t) {
                    this._pingTimeouts.push(e);
                    let n = this._pingTimeouts.length;
                    n >= 3 && this._pingTimeouts[n - 1] === this._pingTimeouts[n - 2] + 1 && this._pingTimeouts[n - 2] === this._pingTimeouts[n - 3] + 1 && this._handlePing(t)
                }
                _handleOutboundLossRate(e) {
                    this._outboundLossRate = e, this.emit(y.RTCConnectionEvent.OutboundLossRate, e)
                }
                _handleSoundshareTrace(e) {
                    this._soundshareStats.traceEvent(void 0, e)
                }
                _getAnalyticsProperties() {
                    return {
                        guild_id: this.guildId,
                        channel_id: this.channelId,
                        rtc_connection_id: this.getRTCConnectionId(),
                        context: this.context,
                        voice_backend_version: this.voiceVersion,
                        rtc_worker_backend_version: this.rtcWorkerVersion
                    }
                }
                _handleClientDisconnect(e) {
                    var t, n, i;
                    let r = this._videoQuality;
                    if (null != r && this.context === j.MediaEngineContextTypes.DEFAULT) {
                        let t = r.getInboundStats(e),
                            s = null !== (n = null == t ? void 0 : t.num_frames) && void 0 !== n ? n : 0;
                        null != t && s > 0 && (D.default.track(H.AnalyticEvents.VIDEO_STREAM_ENDED, {
                            ...this._getAnalyticsProperties(),
                            media_session_id: this.getMediaSessionId(),
                            sender_user_id: e,
                            reason: "User disconnected",
                            participant_type: "receiver",
                            guild_region: O.default.getRegion(this.hostname),
                            hostname: this.hostname,
                            ...t,
                            ...r.getNetworkStats(),
                            ...r.getCodecUsageStats("receiver", e)
                        }), r.destroyUser(e), null === (i = this._videoHealthManager) || void 0 === i || i.deleteUser(e))
                    }
                    let s = this._connection;
                    null != s && s.destroyUser(e), null === (t = this._localMediaSinkWantsManager) || void 0 === t || t.destroyUser(e)
                }
                _handleCodecs(e, t) {
                    let n = this._connection;
                    null != n && null != this.protocol ? n.setCodecs(null != e && "" !== e ? e : j.Codecs.OPUS, null != t && "" !== t ? t : j.Codecs.H264, this.context) : this.logger.warn("Cannot set codecs on connection with protocol:", this.protocol)
                }
                _handleSDP(e) {
                    let t = this._connection;
                    null != t && null != this.protocol ? t.setSDP(e) : this.logger.warn("Cannot set SDP on connection with protocol:", this.protocol)
                }
                async _handleMediaSessionId(e) {
                    var t;
                    this._mediaSessionId = e, this.logger.info("Setting media-session-id: ".concat(e, " for rtc-connection-id: ").concat(this.getRTCConnectionId()));
                    let n = await (0, I.default)();
                    D.default.track(H.AnalyticEvents.MEDIA_SESSION_JOINED, {
                        ...this._getAnalyticsProperties(),
                        media_session_id: this.getMediaSessionId(),
                        parent_media_session_id: this.parentMediaSessionId,
                        channel_type: null === (t = R.default.getChannel(this.channelId)) || void 0 === t ? void 0 : t.type,
                        raw_thermal_state: n
                    }), f.default.dispatch({
                        type: "MEDIA_SESSION_JOINED",
                        mediaSessionId: this.getMediaSessionId(),
                        context: this.context
                    })
                }
                _handleMediaSinkWants(e) {
                    let t = this._connection;
                    this.logger.info("Remote media sink wants: ".concat(JSON.stringify(e))), this._remoteVideoSinkWants = e, null == t || t.setRemoteVideoSinkWants(e)
                }
                _handleCodeVersion(e, t) {
                    this.voiceVersion = e, this.rtcWorkerVersion = t
                }
                _handleKeyframeInterval(e) {
                    let t = this._connection;
                    null != t && null != this.protocol ? t.setKeyframeInterval(e) : this.logger.warn("Cannot set keyframe interval on connection with protocol:", this.protocol)
                }
                _handleUpdateRtcLog(e) {
                    var t;
                    this.rtcLogEphemeralKey = e, null === (t = this._connection) || void 0 === t || t.setRtcLogEphemeralKey(e)
                }
                _handleUpdateSecureFramesProtocol(e) {
                    if (e > 0) {
                        let {
                            canSupportSecureFrames: e
                        } = g.default.getCurrentConfig({
                            location: "rtc_update_sf_protocol"
                        }, {
                            autoTrackExposure: !1
                        });
                        if (!e) {
                            p.default.show({
                                title: Y.default.Messages.FORCED_SECURE_FRAMES_INCOMPATIBLE_TITLE,
                                body: Y.default.Messages.FORCED_SECURE_FRAMES_INCOMPATIBLE_BODY.format(),
                                hideActionSheet: !1
                            }), f.default.dispatch({
                                type: "RTC_CONNECTION_FORCED_SF_DISCONNECT"
                            });
                            return
                        }
                    }
                    if (this._secureFramesProtocolVersion !== e) {
                        var t;
                        e > 0 ? this.logger.info("Enabling secure frames - protocol version: ", e) : this.logger.info("Disabling secure frames"), this._secureFramesProtocolVersion = e, null === (t = this._connection) || void 0 === t || t.setSecureFramesProtocolVersion(e)
                    }
                }
                _getExtraConnectionOptions() {
                    return {}
                }
                shouldReportPeriodicStats(e) {
                    if (e.length > 10) return !1;
                    let {
                        enableSendingVoiceStats: t,
                        percentageOfCalls: n
                    } = C.default.getCurrentConfig({
                        location: "104dee_3"
                    }, {
                        autoTrackExposure: !1
                    });
                    if (!t) return !1;
                    let i = this.getMediaSessionId();
                    if (null == i) return !1;
                    let r = l.v3(i);
                    return !!(r % 100 <= n) || !1
                }
                getInputDeviceName() {
                    var e;
                    let t = N.default.getInputDeviceId(),
                        n = null === (e = N.default.getInputDevices()[t]) || void 0 === e ? void 0 : e.name;
                    return n
                }
                getOutputDeviceName() {
                    var e;
                    let t = N.default.getOutputDeviceId(),
                        n = null === (e = N.default.getOutputDevices()[t]) || void 0 === e ? void 0 : e.name;
                    return n
                }
                constructor({
                    userId: e,
                    sessionId: t,
                    guildId: n,
                    channelId: i,
                    context: r = j.MediaEngineContextTypes.DEFAULT,
                    rtcServerId: s,
                    parentMediaSessionId: a
                }) {
                    var l, o;
                    if (super(), this.reconnect = () => {
                            let e = this._socket;
                            null != e && (this._connected && (this._connectStartTime = (0, E.now)()), !this._connecting && (this._trackVoiceConnectionConnecting(), this._connecting = !0, this._encountered_socket_failure = !1), this._connectCount++, e.close(), e.connect())
                        }, this._handleNetworkOnline = () => {
                            this.expeditedHeartbeat(5e3, "network detected online.")
                        }, this._handleNetworkOffline = () => {
                            this.expeditedHeartbeat(15e3, "network detected offline.", !1)
                        }, this._handlePowerResume = () => {
                            this.expeditedHeartbeat(5e3, "power monitor resumed")
                        }, this._handleVoiceQualityPeriodicsStats = () => {
                            if (null != this._voiceQuality) {
                                let e = this._voiceQuality.getPeriodicStats();
                                if (this.shouldReportPeriodicStats(e)) {
                                    let t = R.default.getChannel(this.channelId),
                                        n = null != t ? t.type : null;
                                    for (let t of e) D.default.track(H.AnalyticEvents.VOICE_QUALITY_PERIODIC_STATS, {
                                        ...this._getAnalyticsProperties(),
                                        media_session_id: this.getMediaSessionId(),
                                        sender_user_id: t.userId,
                                        channel_type: n,
                                        hostname: this.hostname,
                                        frame_op_silent: t.silent,
                                        frame_op_normal: t.normal,
                                        frame_op_merged: t.merged,
                                        frame_op_expanded: t.expanded,
                                        frame_op_accelerated: t.accelerated,
                                        frame_op_preemptive_expanded: t.preemptiveExpanded,
                                        frame_op_cng: t.cng,
                                        accelerate_rate: t.accelerateRate,
                                        expand_rate: t.expandRate,
                                        preemptive_expand_rate: t.preemptiveExpandRate,
                                        speech_expand_rate: t.speechExpandRate,
                                        duration_ms: t.durationMs,
                                        sequence_id: this._voiceQualityPeriodicStatsSequenceId,
                                        input_device: this.getInputDeviceName(),
                                        output_device: this.getOutputDeviceName(),
                                        ping_average: Math.round(this.getAveragePing()),
                                        ping_bad_count: this._pingBadCount
                                    })
                                }
                                this._voiceQualityPeriodicStatsSequenceId++
                            }
                        }, this._trackVoiceConnectionConnecting = () => {
                            D.default.track(H.AnalyticEvents.VOICE_CONNECTION_CONNECTING, {
                                guild_id: this.guildId,
                                channel_id: this.channelId,
                                rtc_connection_id: this.getRTCConnectionId(),
                                hostname: this.hostname,
                                connect_count: this._connectCount
                            })
                        }, this.context = r, this.logger = new S.default("RTCConnection(".concat(null !== (l = null != s ? s : n) && void 0 !== l ? l : i, ", ").concat(this.context, ")")), this.userId = e, this.sessionId = t, this.guildId = n, this._channelId = i, this.channelIds = new Set([i]), this.rtcServerId = s, this.parentMediaSessionId = a, this._endpoint = null, this.hostname = null, this.port = null, this.token = null, this.voiceVersion = null, this.rtcWorkerVersion = null, this.state = H.RTCConnectionStates.AWAITING_ENDPOINT, this.stateHistory = new U.StateHistory(this.state), this._socket = null, this._backoff = new c.default(1e3, 1e4), this._destroyed = !1, this._pings = [], this._pingBadCount = 0, this._pingTimeouts = [], this._mediaSessionId = null, this._voiceQuality = null, this._voiceQualityPeriodicStatsInterval = null, this._voiceQualityPeriodicStatsSequenceId = 0, this._voiceDuration = null, this._videoQuality = null, this._videoHealthManager = null, this._sentVideo = !1, this._outboundLossRate = null, this._createdTime = (0, E.now)(), this._connectStartTime = 0, this._connectCompletedTime = 0, this._rtcConnectionId = (0, u.v4)(), this._connectCount = 0, this._connected = !1, this._connecting = !1, this._encountered_socket_failure = !1, this._inputDetected = !1, this._selectedExperiments = [], this._secureFramesProtocolVersion = 0, r === j.MediaEngineContextTypes.DEFAULT) {
                        let t = N.default.supports(j.Features.FIRST_FRAME_CALLBACK) && N.default.supports(j.Features.REMOTE_USER_MULTI_STREAM),
                            n = (null === (o = R.default.getChannel(this.channelId)) || void 0 === o ? void 0 : o.type) === H.ChannelTypes.GUILD_STAGE_VOICE;
                        this._localMediaSinkWantsManager = new w.default(e, n, t), this._localMediaSinkWantsManager.on(w.RTCMediaSinkWantsManagerEvent.Update, e => {
                            if (this.state === H.RTCConnectionStates.RTC_CONNECTED && null != this._socket) {
                                var t;
                                this.logger.info("Media sink wants: ".concat(JSON.stringify(e))), this._socket.mediaSinkWants(e), null === (t = this._connection) || void 0 === t || t.setLocalVideoSinkWants(e)
                            }
                        }), this._localMediaSinkWantsManager.on(w.RTCMediaSinkWantsManagerEvent.UserSSRCUpdate, (e, t, n) => {
                            var i;
                            null === (i = this._connection) || void 0 === i || i.createUser(e, t, n)
                        })
                    }
                    this._remoteVideoSinkWants = w.DEFAULT_WANTS_FULL, v.default.shouldRecordNextConnection() ? (this._recordingEnabled = !0, h.setShouldRecordNextConnection(!1)) : this._recordingEnabled = !1, this._soundshareStats = new x.default, L.default.addOnlineCallback(this._handleNetworkOnline), L.default.addOfflineCallback(this._handleNetworkOffline), (0, M.isDesktop)() && (this.powerMonitorListener = P.default.remotePowerMonitor.on("resume", this._handlePowerResume))
                }
            }
        },
        422791: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                RTCConnectionEvent: function() {
                    return i
                }
            }), (r = i || (i = {})).State = "state", r.Speaking = "speaking", r.VideoSourceQualityChanged = "video-source-quality-changed", r.Video = "video", r.Flags = "flags", r.Platform = "platform", r.Ping = "ping", r.OutboundLossRate = "outboundlossrate"
        },
        642099: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                StateHistory: function() {
                    return o
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("931010"),
                a = n("713725"),
                l = n("49111");
            class o {
                reset(e) {
                    this.current = null, this.history = [], null != e && this.update(e)
                }
                update(e) {
                    this.current !== e && (this.current = e, this.history.push({
                        state: e,
                        startTime: (0, s.now)()
                    }))
                }
                getVoiceConnectionSuccessStats() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : (0, s.now)(),
                        t = this.getStateDurations(e),
                        n = e => r.sumBy(t, t => t.state === e ? t.durationMs : 0);
                    return {
                        state_awaiting_endpoint_ms: n(l.RTCConnectionStates.AWAITING_ENDPOINT),
                        state_authenticating_ms: n(l.RTCConnectionStates.AUTHENTICATING),
                        state_connecting_ms: n(l.RTCConnectionStates.CONNECTING),
                        state_disconnected_ms: n(l.RTCConnectionStates.DISCONNECTED),
                        state_ice_checking_ms: n(l.RTCConnectionStates.ICE_CHECKING),
                        state_no_route_ms: n(l.RTCConnectionStates.NO_ROUTE),
                        state_rtc_connecting_ms: n(l.RTCConnectionStates.RTC_CONNECTING),
                        state_rtc_disconnected_ms: n(l.RTCConnectionStates.RTC_DISCONNECTED)
                    }
                }
                getStateDurations(e) {
                    if (0 === this.history.length) return [];
                    let t = (0, a.default)(this.history, (e, t) => ({
                        state: e.state,
                        durationMs: t.startTime - e.startTime
                    }));
                    return t.push((() => {
                        let t = r.last(this.history);
                        return {
                            state: t.state,
                            durationMs: e - t.startTime
                        }
                    })()), t
                }
                constructor(e) {
                    this.current = null, this.history = [], null != e && this.update(e)
                }
            }
        },
        417040: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SocketEvent: function() {
                    return c
                },
                default: function() {
                    return C
                }
            });
            var i, r, s, a, l, o, u, c, d = n("161179"),
                _ = n.n(d),
                E = n("435653"),
                f = n("435721"),
                p = n("605250"),
                h = n("313915"),
                S = n("773336"),
                T = n("860604");

            function I() {}(i = l || (l = {}))[i.IDENTIFY = 0] = "IDENTIFY", i[i.SELECT_PROTOCOL = 1] = "SELECT_PROTOCOL", i[i.READY = 2] = "READY", i[i.HEARTBEAT = 3] = "HEARTBEAT", i[i.SELECT_PROTOCOL_ACK = 4] = "SELECT_PROTOCOL_ACK", i[i.SPEAKING = 5] = "SPEAKING", i[i.HEARTBEAT_ACK = 6] = "HEARTBEAT_ACK", i[i.RESUME = 7] = "RESUME", i[i.HELLO = 8] = "HELLO", i[i.RESUMED = 9] = "RESUMED", i[i.VIDEO = 12] = "VIDEO", i[i.CLIENT_DISCONNECT = 13] = "CLIENT_DISCONNECT", i[i.SESSION_UPDATE = 14] = "SESSION_UPDATE", i[i.MEDIA_SINK_WANTS = 15] = "MEDIA_SINK_WANTS", i[i.VOICE_BACKEND_VERSION = 16] = "VOICE_BACKEND_VERSION", i[i.CHANNEL_OPTIONS_UPDATE = 17] = "CHANNEL_OPTIONS_UPDATE", i[i.FLAGS = 18] = "FLAGS", i[i.SPEED_TEST = 19] = "SPEED_TEST", i[i.PLATFORM = 20] = "PLATFORM", (r = o || (o = {}))[r.AUTHENTICATION_FAILED = 4004] = "AUTHENTICATION_FAILED", r[r.INVALID_SESSION = 4006] = "INVALID_SESSION", r[r.SERVER_NOT_FOUND = 4011] = "SERVER_NOT_FOUND", r[r.SERVER_CRASH = 4015] = "SERVER_CRASH", r[r.CANCELED = 4016] = "CANCELED", r[r.HEARTBEAT_TIMEOUT = 4800] = "HEARTBEAT_TIMEOUT", r[r.UNRESUMABLE = 4801] = "UNRESUMABLE", r[r.RESET_BACKOFF = 4802] = "RESET_BACKOFF", (s = u || (u = {}))[s.DISCONNECTED = 0] = "DISCONNECTED", s[s.CONNECTING = 1] = "CONNECTING", s[s.IDENTIFYING = 2] = "IDENTIFYING", s[s.RESUMING = 3] = "RESUMING", s[s.CONNECTED = 4] = "CONNECTED", s[s.RECONNECTING = 5] = "RECONNECTING";

            function m(e) {
                return e.map(e => ({
                    name: e.name,
                    type: e.type,
                    priority: 1e3 * e.priority,
                    payload_type: e.payloadType,
                    rtx_payload_type: e.rtxPayloadType,
                    encode: e.encode,
                    decode: e.decode
                }))
            }

            function g(e) {
                return null == e ? void 0 : e.map(e => ({
                    type: e.type,
                    rid: e.rid,
                    ssrc: e.ssrc,
                    active: e.active,
                    quality: e.quality,
                    rtx_ssrc: e.rtxSsrc,
                    max_bitrate: e.maxBitrate,
                    max_framerate: e.maxFrameRate,
                    max_resolution: null != e.maxResolution ? {
                        type: e.maxResolution.type,
                        width: e.maxResolution.width,
                        height: e.maxResolution.height
                    } : void 0
                }))
            }

            function A(e) {
                var t;
                return null !== (t = null == e ? void 0 : e.map(e => ({
                    type: function(e) {
                        if ("audio" === e) return T.MediaTypes.AUDIO;
                        if ("test" === e) return T.MediaTypes.TEST;
                        if ("screen" === e) return T.MediaTypes.SCREEN;
                        else return T.MediaTypes.VIDEO
                    }(e.type),
                    rid: e.rid,
                    ssrc: e.ssrc,
                    rtxSsrc: e.rtx_ssrc,
                    active: e.active,
                    quality: e.quality,
                    maxBitrate: e.max_bitrate,
                    maxFrameRate: e.max_framerate,
                    maxResolution: null != e.max_resolution ? {
                        type: e.max_resolution.type,
                        width: e.max_resolution.width,
                        height: e.max_resolution.height
                    } : void 0
                }))) && void 0 !== t ? t : []
            }(a = c || (c = {})).Connecting = "connecting", a.Connect = "connect", a.Disconnect = "disconnect", a.Resuming = "resuming", a.Ready = "ready", a.Speaking = "speaking", a.Video = "video", a.Ping = "ping", a.ClientDisconnect = "client-disconnect", a.Codecs = "codecs", a.MediaSessionId = "media-session-id", a.MediaSinkWants = "media-sink-wants", a.VoiceBackendVersion = "voice-backend-version", a.KeyframeInterval = "keyframe-interval", a.ChannelOptionsUpdateRtcLog = "channel-options-update-rtc-log", a.ChannelOptionsUpdateSecureFramesProtocol = "update-secure-frames-protocol", a.Flags = "flags", a.Platform = "platform", a.SDP = "sdp", a.Encryption = "encryption", a.SpeedTest = "speed-test";
            class C extends f.default {
                createWebSocket() {
                    this.logger.info("[CONNECT] ".concat(this.url)), null !== this.webSocket && (this.logger.error("Connect called with already existing websocket"), this.cleanupWebSocket(e => e.close(4e3))), this.connectionStartTime = Date.now(), this.helloTimeout = setTimeout(() => {
                        let e = Date.now() - this.connectionStartTime;
                        this.handleClose(!1, 0, "The connection timed out after ".concat(e, " ms - did not receive OP_HELLO in time."))
                    }, 2e4);
                    let e = this.webSocket = new WebSocket("".concat(this.url, "?v=").concat(7));
                    e.onopen = () => {
                        this.connectionState === u.CONNECTING ? this.emit(c.Connect) : this.connectionState === u.RECONNECTING && this.doResumeOrClose(), this.connectionState = u.CONNECTED;
                        let e = Date.now() - this.connectionStartTime;
                        this.logger.info("[CONNECTED] ".concat(this.url, " in ").concat(e, " ms")), this.emit(c.Ping, Math.round(e / 2))
                    }, e.onmessage = e => {
                        let {
                            op: t,
                            d: n
                        } = this.parseWebSocketMessage(e);
                        switch (h.default.isLoggingGatewayEvents && this.logger.info("~> ".concat(t, ": ").concat(JSON.stringify(n))), t) {
                            case l.HELLO:
                                this.clearHelloTimeout(), this.handleHello(n);
                                break;
                            case l.READY:
                                this.handleReady(n);
                                break;
                            case l.RESUMED:
                                this.handleResumed(n);
                                break;
                            case l.SELECT_PROTOCOL_ACK:
                                this.emit(c.Codecs, n.audio_codec, n.video_codec), n.media_session_id && this.emit(c.MediaSessionId, n.media_session_id), n.sdp ? this.emit(c.SDP, n.sdp) : n.mode && this.emit(c.Encryption, n.mode, n.secret_key), n.keyframe_interval && this.emit(c.KeyframeInterval, n.keyframe_interval), this.resumable = !0;
                                break;
                            case l.SPEAKING:
                                let i = n.speaking;
                                "boolean" == typeof i && (i = i ? T.SpeakingFlags.VOICE : T.SpeakingFlags.NONE), this.emit(c.Speaking, n.user_id, n.ssrc, i);
                                break;
                            case l.HEARTBEAT:
                                this.sendHeartbeat();
                                break;
                            case l.HEARTBEAT_ACK:
                                this.emit(c.Ping, Date.now() - n), this.handleHeartbeatAck(n);
                                break;
                            case l.VIDEO:
                                this.emit(c.Video, n.user_id, n.audio_ssrc, n.video_ssrc, A(n.streams));
                                break;
                            case l.CLIENT_DISCONNECT:
                                this.emit(c.ClientDisconnect, n.user_id);
                                break;
                            case l.SESSION_UPDATE:
                                (null != n.audio_codec || null != n.video_codec) && this.emit(c.Codecs, n.audio_codec, n.video_codec), null != n.media_session_id && this.emit(c.MediaSessionId, n.media_session_id), n.keyframe_interval && this.emit(c.KeyframeInterval, n.keyframe_interval);
                                break;
                            case l.MEDIA_SINK_WANTS:
                                this.emit(c.MediaSinkWants, n);
                                break;
                            case l.VOICE_BACKEND_VERSION:
                                null != n.voice && null != n.rtc_worker && this.emit(c.VoiceBackendVersion, n.voice, n.rtc_worker);
                                break;
                            case l.CHANNEL_OPTIONS_UPDATE:
                                n.rtc_log_ephemeral_key && this.emit(c.ChannelOptionsUpdateRtcLog, n.rtc_log_ephemeral_key), this.emit(c.ChannelOptionsUpdateSecureFramesProtocol, n.forced_secure_frames_protocol || 0);
                                break;
                            case l.SPEED_TEST:
                                this.emit(c.SpeedTest, n.op, n);
                                break;
                            case l.FLAGS:
                                null != n.flags && null != n.user_id && this.emit(c.Flags, n.user_id, n.flags);
                                break;
                            case l.PLATFORM:
                                null != n.platform && null != n.user_id && this.emit(c.Platform, n.user_id, n.platform);
                                break;
                            default:
                                this.logger.info("Unhandled op ".concat(t))
                        }
                    }, e.onerror = () => this.handleClose(!1, 0, "An error with the websocket occurred"), e.onclose = e => {
                        let {
                            wasClean: t,
                            code: n,
                            reason: i
                        } = e;
                        return this.handleClose(t, n, i)
                    }
                }
                send(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        n = this.webSocket;
                    if (null == n || n.readyState !== WebSocket.OPEN) return;
                    let i = JSON.stringify({
                        op: e,
                        d: t
                    });
                    h.default.isLoggingGatewayEvents && this.logger.info("<~ ".concat(i));
                    try {
                        n.send(i)
                    } catch (e) {}
                }
                ping() {
                    this.sendHeartbeat()
                }
                doResumeOrClose() {
                    let e = Date.now(),
                        t = null !== this.serverId && null !== this.token && null !== this.sessionId && this.resumable && (null == this.lastHeartbeatAckTime || e - this.lastHeartbeatAckTime <= 6e4);
                    t ? (this.doResume(), this.lastHeartbeatAckTime = e) : this.disconnect(!1, o.UNRESUMABLE, "Cannot resume connection.")
                }
                doResume() {
                    var e, t;
                    this.logger.info("[RESUME] resuming session. serverId=".concat(null !== (e = this.serverId) && void 0 !== e ? e : "", " sessionId=").concat(null !== (t = this.sessionId) && void 0 !== t ? t : "")), this.emit(c.Resuming), this.connectionState = u.RESUMING, this.send(l.RESUME, {
                        token: this.token,
                        session_id: this.sessionId,
                        server_id: this.serverId
                    })
                }
                handleHello(e) {
                    var t, n, i;
                    if (this.serverVersion = null !== (t = e.v) && void 0 !== t ? t : 3, this.serverVersion <= 3) {
                        let t = S.isPlatformEmbedded ? .25 : .1;
                        this.heartbeatInterval = e.heartbeat_interval * t
                    } else this.heartbeatInterval = e.heartbeat_interval * this.heartbeatIntervalModifier, !S.isPlatformEmbedded && (this.heartbeatInterval = Math.min(5e3, null !== (n = this.heartbeatInterval) && void 0 !== n ? n : NaN));
                    let r = Date.now() - this.connectionStartTime;
                    this.logger.info("[HELLO] heartbeat interval: ".concat(null !== (i = this.heartbeatInterval) && void 0 !== i ? i : "??", ", version: ").concat(this.serverVersion, ", took ").concat(r, " ms")), this.startHeartbeater()
                }
                handleReady(e) {
                    this.backoff.succeed();
                    let t = Date.now() - this.connectionStartTime;
                    this.logger.info("[READY] took ".concat(t, " ms")), this.serverVersion >= 6 && this.send(l.VOICE_BACKEND_VERSION, {}), this.emit(c.Ready, e.ip, e.port, e.modes, e.ssrc, A(e.streams), e.experiments)
                }
                handleResumed(e) {
                    this.backoff.succeed()
                }
                handleClose(e, t, n) {
                    if (this.connectionState = u.DISCONNECTED, e = e || !1, this.cleanupWebSocket(), t === o.AUTHENTICATION_FAILED || t === o.SERVER_CRASH || t === o.SERVER_NOT_FOUND || t === o.INVALID_SESSION) return this.disconnect(e, t, n);
                    if (this.backoff.fails > 3) this.logger.warn("[WS CLOSED] Backoff exceed. Resetting."), this.disconnect(e, t, n);
                    else {
                        let i = this.backoff.fail(() => this.reconnect(e, t, n));
                        this.logger.warn("[WS CLOSED] (clean: ".concat(e.toString(), ", code: ").concat(t, ", reason: ").concat(n, ") retrying in ").concat((i / 1e3).toFixed(2), " seconds."))
                    }
                }
                disconnect(e, t, n) {
                    this.logger.warn("[DISCONNECT] (".concat(e.toString(), ", ").concat(t, ", ").concat(n, ")")), this.cleanupWebSocket(), this.cleanupState(), this.connectionState = u.DISCONNECTED, this.emit(c.Disconnect, e, t, n)
                }
                reconnect(e, t, n) {
                    this.logger.info("[RECONNECT] wasClean=".concat(e.toString(), " code=").concat(t, " reason=").concat(n)), this.cleanupWebSocket(e => e.close(4e3)), this.connectionState = u.RECONNECTING, this.createWebSocket()
                }
                cleanupWebSocket(e) {
                    this.stopHeartbeater(), this.clearHelloTimeout();
                    let t = this.webSocket;
                    if (this.webSocket = null, null != t) t.onopen = I, t.onmessage = I, t.onerror = I, t.onclose = I, null == e || e(t);
                    this.backoff.cancel()
                }
                cleanupState() {
                    this.serverId = null, this.sessionId = null, this.token = null, this.resumable = !1
                }
                parseWebSocketMessage(e) {
                    return JSON.parse(e.data)
                }
                clearHelloTimeout() {
                    null != this.helloTimeout && (clearTimeout(this.helloTimeout), this.helloTimeout = null)
                }
                handleHeartbeatAck(e) {
                    this.logger.info("Heartbeat ACK received"), this.lastHeartbeatAckTime = Date.now(), this.heartbeatAck = !0, null !== this.expeditedHeartbeatTimeout && (clearTimeout(this.expeditedHeartbeatTimeout), this.expeditedHeartbeatTimeout = null, this.logger.info("Expedited heartbeat succeeded"))
                }
                handleHeartbeatTimeout() {
                    this.cleanupWebSocket(e => e.close(4e3));
                    let e = this.backoff.fail(() => this.reconnect(!1, o.HEARTBEAT_TIMEOUT, "Heartbeat timeout."));
                    this.logger.warn("[HEARTBEAT ACK TIMEOUT] reconnecting in ".concat((e / 1e3).toFixed(2), " seconds."))
                }
                startHeartbeater() {
                    _(null != this.heartbeatInterval, "RTCControlSocket: Heartbeat interval should never null here."), this.logger.info("Starting heartbeat with interval: ".concat(this.heartbeatInterval)), null !== this.heartbeater && clearInterval(this.heartbeater), this.heartbeatAck = !0, this.heartbeater = setInterval(() => {
                        this.heartbeatAck ? (this.heartbeatAck = !1, this.sendHeartbeat()) : null === this.expeditedHeartbeatTimeout && this.handleHeartbeatTimeout()
                    }, this.heartbeatInterval)
                }
                sendHeartbeat() {
                    this.logger.info("Sending heartbeat"), this.send(l.HEARTBEAT, Date.now())
                }
                stopHeartbeater() {
                    null !== this.heartbeater && (clearInterval(this.heartbeater), this.heartbeater = null), null !== this.expeditedHeartbeatTimeout && (clearTimeout(this.expeditedHeartbeatTimeout), this.expeditedHeartbeatTimeout = null)
                }
                connect() {
                    return this.connectionState !== u.DISCONNECTED ? (this.logger.error("Cannot start a new connection, connection state is not disconnected"), !1) : (this.connectionState = u.CONNECTING, this.createWebSocket(), this.emit(c.Connecting), !0)
                }
                identify(e) {
                    let {
                        serverId: t,
                        userId: n,
                        sessionId: i,
                        token: r,
                        maxSecureFramesVersion: s,
                        video: a = !1,
                        streamParameters: o
                    } = e;
                    this.serverId = t, this.sessionId = i, this.token = r, this.connectionState = u.IDENTIFYING, this.send(l.IDENTIFY, {
                        server_id: t,
                        user_id: n,
                        session_id: i,
                        token: r,
                        max_secure_frames_version: s,
                        video: a,
                        streams: g(o)
                    })
                }
                expeditedHeartbeat(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "",
                        n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
                    if (null != this.webSocket) this.logger.info("Performing an expedited heartbeat ".concat("" !== t ? "reason: " + t : "")), this.heartbeatAck = !1, this.sendHeartbeat(), null !== this.expeditedHeartbeatTimeout && clearTimeout(this.expeditedHeartbeatTimeout), this.expeditedHeartbeatTimeout = setTimeout(() => {
                        this.expeditedHeartbeatTimeout = null, !1 === this.heartbeatAck && this.handleHeartbeatTimeout()
                    }, e);
                    else {
                        if (n) return this.resetBackoff(t);
                        this.logger.info("Expedited heartbeat requested, but is disconnected and a reset was not " + "requested ".concat("" !== t ? "reason: " + t : ""))
                    }
                    return !1
                }
                resetBackoff() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    return !!(this.backoff.fails > 0) && null == this.webSocket && (this.logger.info("Connection backoff reset ".concat("" !== e ? "for reason: " + e : "")), this.backoff.succeed(), this.reconnect(!1, o.RESET_BACKOFF, "Reset backoff."), !0)
                }
                close() {
                    this.logger.info("CLOSE"), this.cleanupWebSocket(e => e.close(4e3)), this.cleanupState(), this.connectionState = u.DISCONNECTED, this.emit(c.Disconnect, !0, 1e3, "Force Close")
                }
                destroy() {
                    this.close()
                }
                selectProtocol(e, t, n, i) {
                    let r;
                    let s = {};
                    null == n ? r = null : "sdp" in n && null != n.sdp && "" !== n.sdp ? (r = n.sdp, s = {
                        ...n,
                        codecs: m(n.codecs),
                        rtc_connection_id: t
                    }) : "address" in n && null != n.address && "" !== n.address && n.port && null != n.mode && "" !== n.mode && (r = {
                        address: n.address,
                        port: n.port,
                        mode: n.mode
                    }, s = {
                        ...n,
                        codecs: m(n.codecs),
                        rtc_connection_id: t,
                        experiments: i
                    }), this.send(l.SELECT_PROTOCOL, {
                        protocol: e,
                        data: r,
                        ...s
                    })
                }
                updateSession(e) {
                    this.send(l.SESSION_UPDATE, {
                        codecs: m(e.codecs)
                    })
                }
                speaking(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    this.send(l.SPEAKING, {
                        speaking: this.serverVersion <= 3 ? !!e : e,
                        delay: t,
                        ssrc: n
                    })
                }
                video(e, t, n, i) {
                    this.send(l.VIDEO, {
                        audio_ssrc: e,
                        video_ssrc: t,
                        rtx_ssrc: n,
                        streams: g(i)
                    })
                }
                mediaSinkWants(e) {
                    this.serverVersion >= 5 && this.send(l.MEDIA_SINK_WANTS, e)
                }
                speedTest(e, t) {
                    this.send(l.SPEED_TEST, {
                        op: e,
                        ...t
                    })
                }
                setHeartbeatIntervalModifier(e) {
                    this.heartbeatIntervalModifier = e
                }
                constructor(e) {
                    super(), this.logger = new p.default("RTCControlSocket"), this.backoff = new E.default(1e3, 5e3), this.serverVersion = 0, this.url = e, this.webSocket = null, this.connectionState = u.DISCONNECTED, this.helloTimeout = null, this.lastHeartbeatAckTime = null, this.heartbeatInterval = null, this.heartbeater = null, this.heartbeatAck = !0, this.expeditedHeartbeatTimeout = null, this.heartbeatIntervalModifier = 1, this.connectionStartTime = 0, this.sessionId = null, this.serverId = null, this.token = null, this.resumable = !1
                }
            }
        },
        716380: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DEFAULT_WANTS_FULL: function() {
                    return _
                },
                RTCMediaSinkWantsManagerEvent: function() {
                    return r
                },
                default: function() {
                    return f
                }
            });
            var i, r, s = n("435721"),
                a = n("335990"),
                l = n("904897"),
                o = n("708001"),
                u = n("638800"),
                c = n("560528"),
                d = n("49111");
            let _ = {
                    any: 100
                },
                E = -1 !== (0, c.getFirefoxVersion)();
            (i = r || (r = {})).UserSSRCUpdate = "user-ssrc-update", i.Update = "update";
            class f extends s.default {
                getWantsLevel() {
                    let e = this.getVideoParticipantCount();
                    return this.ladder.getMaxSinkValue(e)
                }
                userVideoDisabled(e) {
                    return this.offscreenDisabledUsers[e]
                }
                getAudioSSRCs() {
                    return this.audioSsrcs
                }
                setConnection(e) {
                    var t, n, i, r, s, l;
                    let o = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
                    null === (t = this.connection) || void 0 === t || t.removeListener(a.BaseConnectionEvent.LocalVideoDisabled, this.handleLocalVideoDisabled), null === (n = this.connection) || void 0 === n || n.removeListener(a.BaseConnectionEvent.LocalMute, this.handleLocalMute), null === (i = this.connection) || void 0 === i || i.removeListener(a.BaseConnectionEvent.ActiveSinksChange, this.delayedUpdate), this.connection = e, null === (r = this.connection) || void 0 === r || r.addListener(a.BaseConnectionEvent.LocalVideoDisabled, this.handleLocalVideoDisabled), null === (s = this.connection) || void 0 === s || s.addListener(a.BaseConnectionEvent.LocalMute, this.handleLocalMute), null === (l = this.connection) || void 0 === l || l.addListener(a.BaseConnectionEvent.ActiveSinksChange, this.delayedUpdate), o && this.update()
                }
                setAudioSSRC(e, t) {
                    return t > 0 ? this.audioSsrcs[e] = t : delete this.audioSsrcs[e], this.update()
                }
                setVideoSSRCs(e, t) {
                    var n;
                    let i = t.filter(e => e.active && (null !== (n = e.ssrc) && void 0 !== n ? n : 0) > 0).map(e => {
                        var t;
                        return {
                            quality: null !== (t = e.quality) && void 0 !== t ? t : 100,
                            ssrc: e.ssrc
                        }
                    });
                    if (i.length > 0) this.videoSsrcs[e] = i, this.participants.add(e);
                    else {
                        if (void 0 !== this.videoSsrcs[e])
                            for (let {
                                    ssrc: t
                                }
                                of this.videoSsrcs[e]) delete this.framesReceived[t];
                        delete this.remoteVideoSsrcs[e], delete this.videoSsrcs[e], this.participants.delete(e), this.emit(r.UserSSRCUpdate, e, this.audioSsrcs[e], [])
                    }
                    return this.update(Array.from(this.participants))
                }
                setFirstFrameReceived(e) {
                    return this.framesReceived[e] = !0, this.update()
                }
                setStreamId(e, t) {
                    return null != t ? this.streamIds[e] = t : delete this.streamIds[e], this.update()
                }
                destroyUser(e) {
                    return delete this.audioSsrcs[e], delete this.videoSsrcs[e], this.participants.delete(e), delete this.streamIds[e], this.update(Array.from(this.participants))
                }
                reset() {
                    this.setConnection(null, !1), this.audioSsrcs = {}, this.videoSsrcs = {}, this.remoteVideoSsrcs = {}, this.framesReceived = {}, this.streamIds = {}, this.latestWants = _
                }
                setSelectedParticipant(e) {
                    if (e === this.selectedParticipantId) return this.latestWants;
                    let t = [];
                    if (null != this.selectedParticipantId && this.selectedParticipantId !== this.userId && t.push(this.selectedParticipantId), null != e) {
                        if (this.participants.has(e)) this.selectedParticipantId = e, t.push(e);
                        else {
                            if (this.userId !== e) return console.warn("Participant not found: ".concat(e)), this.latestWants;
                            this.selectedParticipantId = e
                        }
                    } else this.selectedParticipantId = null;
                    return this.update(t.filter(e => {
                        var t;
                        return (null === (t = this.videoSsrcs[e]) || void 0 === t ? void 0 : t.length) > 1
                    }))
                }
                setPipOpen(e) {
                    return (this.pipOpen = e, null != this.selectedParticipantId) ? this.update([this.selectedParticipantId]) : this.latestWants
                }
                setAppBackgrounded(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    for (let [i, r] of Object.entries(this.streamIds))
                        if (this.offscreenDisabledUsers[i] = e, null != r) {
                            var n;
                            let i = !e || t;
                            null === (n = this.connection) || void 0 === n || n.setHasActiveVideoOutputSink(r, i)
                        } return this.update()
                }
                getOffscreenDisabledUsers() {
                    return this.offscreenDisabledUsers
                }
                getVideoParticipantCount() {
                    let e = 0;
                    for (let n of Object.keys(this.videoSsrcs)) {
                        var t;
                        !(null === (t = this.connection) || void 0 === t ? void 0 : t.getLocalVideoDisabled(n)) && e++
                    }
                    return e
                }
                getOffscreenTimeoutMs() {
                    return this.isStageChannel ? 12e4 : 3e4
                }
                constructor(e, t, n, i = new l.MediaSinkWantsLadder) {
                    var s;
                    super(), s = this, this.userId = e, this.isStageChannel = t, this.supportsSeamless = n, this.ladder = i, this.connection = null, this.audioSsrcs = {}, this.videoSsrcs = {}, this.remoteVideoSsrcs = {}, this.framesReceived = {}, this.streamIds = {}, this.offscreenUsers = {}, this.offscreenDisabledUsers = {}, this.latestWants = _, this.participants = new Set, this.selectedParticipantId = null, this.pipOpen = !1, this.videoHealthManager = null, this.delayedUpdate = () => {
                        this.delayedCall.delay()
                    }, this.addLru = (e, t, n) => {
                        if (n.push(e), n.length <= 3) return;
                        let i = -1,
                            r = -1;
                        for (let e = 0; e < n.length; e++) {
                            let s = n[e],
                                a = t - this.offscreenUsers[s];
                            a > i && (i = a, r = e)
                        }
                        this.offscreenDisabledUsers[n[r]] = !0, n.splice(r, 1)
                    }, this.updateOffscreenUsers = () => {
                        var e, t;
                        if (!(null === (e = this.connection) || void 0 === e ? void 0 : e.getActiveOutputSinkTrackingEnabled())) return;
                        let n = Date.now(),
                            i = [];
                        for (let [e, r] of Object.entries(this.streamIds))
                            if (null != r) {
                                if (null === (t = this.connection) || void 0 === t ? void 0 : t.getHasActiveVideoOutputSink(r)) delete this.offscreenUsers[e], delete this.offscreenDisabledUsers[e];
                                else if (null == this.offscreenUsers[e]) this.offscreenUsers[e] = n, this.addLru(e, n, i);
                                else if (!this.offscreenDisabledUsers[e]) {
                                    let t = n - this.offscreenUsers[e];
                                    t >= this.getOffscreenTimeoutMs() ? this.offscreenDisabledUsers[e] = !0 : this.addLru(e, n, i)
                                }
                            } if (i.length > 0) {
                            let e = n + this.getOffscreenTimeoutMs();
                            for (let t of i) e = Math.min(e, this.offscreenUsers[t] + this.getOffscreenTimeoutMs());
                            this.offscreenTimeout.start(e - n, this.update)
                        } else this.offscreenTimeout.stop()
                    }, this.handleLocalVideoDisabled = (e, t) => {
                        this.update()
                    }, this.handleLocalMute = (e, t) => {
                        this.update()
                    }, this.update = function() {
                        var e, t, n;
                        let i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            a = s.getWantsLevel(),
                            l = {
                                any: a
                            };
                        for (let [n, u] of(s.updateOffscreenUsers(), Object.entries(s.videoSsrcs))) {
                            let c = [],
                                _ = !1,
                                E = u[0].ssrc;
                            if ((null === (e = s.connection) || void 0 === e ? void 0 : e.getLocalVideoDisabled(n)) || s.userVideoDisabled(n) && (null === (t = s.videoHealthManager) || void 0 === t ? void 0 : t.getCurrentVideoToggleState(n)) !== d.VideoToggleState.AUTO_PROBING)
                                for (let e of u) l[e.ssrc] = 0;
                            else {
                                let e = n === s.selectedParticipantId && 100 !== a && !s.pipOpen;
                                if (u.length > 1) {
                                    for (let t of u) 100 === t.quality ? e ? (l[t.ssrc] = 100, E = t.ssrc) : l[t.ssrc] = 0 : e ? l[t.ssrc] = 0 : E = t.ssrc;
                                    if (s.supportsSeamless && !s.framesReceived[E])
                                        for (let e of (_ = !0, c = [E], u)) e.ssrc !== E && s.framesReceived[e.ssrc] && (100 === e.quality ? l[e.ssrc] = 100 : l[e.ssrc] = a, c.push(e.ssrc))
                                } else e && (l[E] = 100)
                            }
                            for (let e of ((!s.supportsSeamless || !_) && (c = [E]), u)) !c.includes(e.ssrc) && delete s.framesReceived[e.ssrc];
                            (i.includes(n) || void 0 !== s.remoteVideoSsrcs[n] && !(0, o.default)(s.remoteVideoSsrcs[n], c)) && (s.remoteVideoSsrcs[n] = [...c], s.emit(r.UserSSRCUpdate, n, s.audioSsrcs[n], c))
                        }
                        for (let [e, t] of Object.entries(s.audioSsrcs))(null === (n = s.connection) || void 0 === n ? void 0 : n.getLocalMute(e)) && (l[t] = 0);
                        return E ? s.latestWants : (null != s.connection && !(0, o.default)(s.latestWants, l) && (s.latestWants = l, s.emit(r.Update, l)), l)
                    }, this.delayedCall = new u.DelayedCall(100, this.update), this.offscreenTimeout = new u.Timeout
                }
            }
        },
        666038: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            class i {
                toJS() {
                    return {
                        ...this
                    }
                }
                set(e, t) {
                    return this[e] !== t ? new this.constructor({
                        ...this,
                        [e]: t
                    }) : this
                }
                merge(e) {
                    let t = null;
                    for (let n in e) {
                        if (!e.hasOwnProperty(n)) continue;
                        let i = e[n];
                        this[n] !== i && (null == t && (t = {
                            ...this
                        }), t[n] = e[n])
                    }
                    return null != t ? new this.constructor(t) : this
                }
                update(e, t, n) {
                    null == n && (n = t, t = void 0);
                    let r = this[e];
                    return r instanceof i || (r instanceof Array ? r = [...r] : r instanceof Object && (r = {
                        ...r
                    })), void 0 === r && (r = t), this.set(e, n(r))
                }
            }
        },
        157547: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            class i {
                traceEvent(e, t) {
                    let n;
                    let i = this._report;
                    void 0 !== i[n = "soundshare_state_transition" === t.type ? "soundshare_state_transition_".concat(["detached", "waiting", "attached", "started", "playing", "silence"][t.newState], "_count") : "".concat(t.type, "_count")] ? i[n] < 32767 && i[n]++ : i.soundshare_unknown_event_count++, "pid" in t && (0 === i.soundshare_first_pid && (i.soundshare_first_pid = t.pid), i.soundshare_last_pid = t.pid, this._pids.add(t.pid)), null != e && (null == i.soundshare_first_session && (i.soundshare_first_session = e), i.soundshare_last_session = e)
                }
                getStats() {
                    return {
                        ...this._report,
                        soundshare_unique_pids: this._pids.size
                    }
                }
                constructor() {
                    this._report = {
                        soundshare_attach_requested_count: 0,
                        soundshare_capturing_count: 0,
                        soundshare_capture_stopped_count: 0,
                        soundshare_hooked_count: 0,
                        soundshare_recv_connect_count: 0,
                        soundshare_recv_disconnect_count: 0,
                        soundshare_recv_started_count: 0,
                        soundshare_recv_stopped_count: 0,
                        soundshare_recv_failed_count: 0,
                        soundshare_recv_format_count: 0,
                        soundshare_send_announce_count: 0,
                        soundshare_send_start_count: 0,
                        soundshare_send_stop_count: 0,
                        soundshare_malformed_trace_count: 0,
                        soundshare_audio_detected_count: 0,
                        soundshare_state_transition_detached_count: 0,
                        soundshare_state_transition_waiting_count: 0,
                        soundshare_state_transition_attached_count: 0,
                        soundshare_state_transition_started_count: 0,
                        soundshare_state_transition_playing_count: 0,
                        soundshare_state_transition_silence_count: 0,
                        soundshare_unknown_event_count: 0,
                        soundshare_first_pid: 0,
                        soundshare_last_pid: 0,
                        soundshare_unique_pids: 0,
                        soundshare_first_session: null,
                        soundshare_last_session: null
                    }, this._pids = new Set
                }
            }
        },
        88313: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                VideoHealthManager: function() {
                    return o
                }
            });
            var i = n("427964"),
                r = n("307391"),
                s = n("931010"),
                a = n("591883"),
                l = n("49111");
            class o {
                calculateFps(e, t, n) {
                    if (-1 === this.prevFramesCodec[e]) return this.prevFramesCodec[e] = t, this.prevAggDuration[e] = n, t / n;
                    let i = n - this.prevAggDuration[e];
                    this.prevAggDuration[e] = n;
                    let r = (t - this.prevFramesCodec[e]) / i;
                    return this.prevFramesCodec[e] = t, r
                }
                updateFps(e, t, n) {
                    if (!this.disabled && !this.streamDisabledUsers.has(e)) {
                        let r = this.calculateFps(e, t, n);
                        if ((0, i.isNaN)(r)) return;
                        if (this.perUserFpsWindow[e].push(r), this.perUserFpsWindow[e].length < this.windowLength) return;
                        this.perUserFpsWindow[e].length > this.windowLength && this.perUserFpsWindow[e].shift();
                        let s = this.perUserFpsWindow[e].filter(e => e < this.fpsThreshold).length;
                        s >= this.fpsWindowBorderlineCount ? (this.acceptableConditionsCounter[e] = Math.max(0, --this.acceptableConditionsCounter[e]), 0 === this.acceptableConditionsCounter[e] && (this.logger.info("".concat(e, ": detected poor network quality, turning off video")), this.streamDisabledUsers.add(e), this.currentVideoAutoToggleState[e] = l.VideoToggleState.DISABLED, (0, a.default)(e, l.VideoToggleState.DISABLED), this.startReenableBackoffTimer(e))) : (this.acceptableConditionsCounter[e] = Math.min(1, ++this.acceptableConditionsCounter[e]), this.acceptableConditionsCounter[e] >= 1 && this.currentVideoAutoToggleState[e] === l.VideoToggleState.AUTO_PROBING && (this.currentVideoAutoToggleState[e] = l.VideoToggleState.AUTO_ENABLED, this.logger.info("acceptableConditionsCounter reached threshold 1, will reset and send a AUTO_ENABLED for user ".concat(e)), (0, a.default)(e, l.VideoToggleState.AUTO_ENABLED)))
                    }
                }
                startReenableBackoffTimer(e) {
                    if (this.disabled) return;
                    this.logger.info("startReenableBackoffTimer for user ".concat(e));
                    let {
                        lastBackoffTime: t,
                        expBackoffFactor: n
                    } = this.retryBackoffCache[e];
                    null === t || n > 16 || this.elapsedSeconds((0, s.now)(), t) > 600 ? n = 1 : n *= 2, this.retryBackoffCache[e] = {
                        lastBackoffTime: (0, s.now)(),
                        expBackoffFactor: n
                    };
                    let i = n * this.backoffTimeSec * 1e3;
                    this.logger.info("starting backoff timer with time = ".concat(i, " milliseconds")), this.timeoutIdCache[e] = setTimeout(() => {
                        this.reenableVideo(e)
                    }, i)
                }
                reenableVideo(e) {
                    e in this.perUserFpsWindow && (this.logger.info("reenableVideo called for user ".concat(e, " - time = ").concat((0, s.now)())), this.stateCleanupBeforeEnable(e), this.currentVideoAutoToggleState[e] = l.VideoToggleState.AUTO_PROBING, (0, a.default)(e, l.VideoToggleState.AUTO_PROBING))
                }
                elapsedSeconds(e, t) {
                    return (e - t) / 1e3
                }
                stateCleanupBeforeEnable(e) {
                    this.logger.info("VideoHealthManager::stateCleanupBeforeEnable"), this.perUserFpsWindow[e] = [], this.prevFramesCodec[e] = -1, this.streamDisabledUsers.delete(e)
                }
                getCurrentVideoToggleState(e) {
                    return this.currentVideoAutoToggleState[e]
                }
                createUser(e) {
                    this.logger.info("VideoHealthManager::createUser ".concat(e)), !(e in this.perUserFpsWindow) && (this.perUserFpsWindow[e] = [], this.prevFramesCodec[e] = -1, this.acceptableConditionsCounter[e] = 0, this.currentVideoAutoToggleState[e] = l.VideoToggleState.NONE, this.retryBackoffCache[e] = {
                        lastBackoffTime: null,
                        expBackoffFactor: 1
                    })
                }
                deleteUser(e) {
                    this.logger.info("VideoHealthManager::deleteUser ".concat(e)), delete this.perUserFpsWindow[e], delete this.prevFramesCodec[e], delete this.retryBackoffCache[e], delete this.acceptableConditionsCounter[e], delete this.currentVideoAutoToggleState[e], this.streamDisabledUsers.delete(e), clearTimeout(this.timeoutIdCache[e]), delete this.timeoutIdCache[e]
                }
                disable() {
                    for (let e in this.disabled = !0, this.perUserFpsWindow) this.deleteUser(e)
                }
                constructor(e, t, n, s) {
                    this.logger = new r.default("VideoHealthManager"), this.disabled = !1, this.perUserFpsWindow = {}, this.prevFramesCodec = {}, this.prevAggDuration = {}, this.streamDisabledUsers = new Set, this.retryBackoffCache = {}, this.timeoutIdCache = {}, this.acceptableConditionsCounter = {}, this.currentVideoAutoToggleState = {}, this.windowLength = e, this.fpsThreshold = n, this.fpsWindowBorderlineCount = (0, i.ceil)(e * t), this.backoffTimeSec = s, this.logger.info("constructor with windowLength = ".concat(this.windowLength, ",\n      fpsWindowBorderlineCount = ").concat(this.fpsWindowBorderlineCount, ",\n      fpsThreshold = ").concat(this.fpsThreshold, ",\n      backoffTimeSec = ").concat(s))
                }
            }
        },
        531748: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                VideoQualityEvent: function() {
                    return i
                },
                VideoQuality: function() {
                    return f
                }
            });
            var i, r = n("427964"),
                s = n.n(r),
                a = n("435721"),
                l = n("335990"),
                o = n("931010"),
                u = n("773336"),
                c = n("497407"),
                d = n("44642");

            function _(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                return null != e ? Math.round(e) : t
            }
            class E {
                set value(e) {
                    e && !this.state && (this.begin = this.timestampProducer.now()), !e && this.state && (this.total += this.timestampProducer.now() - Number(this.begin), this.begin = null), this.state = e
                }
                get value() {
                    return this.state
                }
                totalDuration() {
                    return null != this.begin ? this.total + this.timestampProducer.now() - this.begin : this.total
                }
                constructor(e, t) {
                    this.timestampProducer = t, this.total = 0, this.state = e, this.begin = e ? t.now() : null
                }
            }(i || (i = {})).FpsUpdate = "fps-update";
            class f extends a.default {
                addUserToStatsCollectionPausedSet(e) {
                    this.statCollectionPausedUsers.add(e)
                }
                removeUserFromStatsCollectionPausedSet(e) {
                    this.statCollectionPausedUsers.delete(e)
                }
                start() {
                    this.streamStart = this.timestampProducer.now(), this.connection.on(l.BaseConnectionEvent.Stats, this.sampleStats)
                }
                setOutboundSsrc(e) {
                    null == this.outboundStats[e] && (this.outboundStats[e] = new d.OutboundStats(this.timestampProducer))
                }
                getOrCreateInboundStats(e) {
                    return null == this.inboundStats[e] && (this.inboundStats[e] = new d.InboundStats(this.timestampProducer)), this.inboundStats[e]
                }
                setInboundUser(e, t) {
                    let n = this.getOrCreateInboundStats(e);
                    n.setVideoStopped(0 === t, d.VideoStoppedReasons.SenderStopped)
                }
                setUserVideoDisabled(e, t) {
                    let n = this.getOrCreateInboundStats(e);
                    n.setVideoStopped(t, d.VideoStoppedReasons.ClientSideDisableVideo), !t && n.statsWindow.length > 0 && 0 === n.statsWindow[0].packets && (n.startTime = this.timestampProducer.now())
                }
                pause() {
                    !this.paused.value && this.pausedCount++, s.forEach(this.outboundStats, e => {
                        e.statsWindow = []
                    }), s.forEach(this.inboundStats, e => {
                        e.statsWindow = []
                    }), this.updateSendState({
                        paused: !0
                    })
                }
                resume() {
                    this.updateSendState({
                        paused: !1
                    })
                }
                stop() {
                    this.connection.off(l.BaseConnectionEvent.Stats, this.sampleStats), this.streamEnd = this.timestampProducer.now(), this.removeAllListeners()
                }
                getNetworkStats() {
                    return this.networkQuality.getStats()
                }
                getEncoderUsageStats() {
                    let e = new Map;
                    for (let t in this.outboundStats) {
                        let n = new Map;
                        for (let i of this.outboundStats[t].getCodecsUsed()) {
                            let r = i.toUpperCase();
                            n.set(r, _(this.outboundStats[t].codecBuckets[r])), e.set(parseInt(t), n)
                        }
                    }
                    return e
                }
                getDecoderUsageStats() {
                    let e = new Map;
                    for (let t in this.inboundStats) {
                        let n = new Map;
                        for (let i of this.inboundStats[t].getCodecsUsed()) {
                            let r = i.toUpperCase();
                            n.set(r, _(this.inboundStats[t].codecBuckets[r])), e.set(t, n)
                        }
                    }
                    return e
                }
                getCodecUsageStats(e, t) {
                    var n, i, r, s, a, l, o, u, c, _;
                    let E = this.asymmetricCodecUpdates > this.symmetricCodecUpdates,
                        f = new Map;
                    if ("sender" === e || "streamer" === e) {
                        let e = this.getEncoderUsageStats();
                        if (e.size > 0) {
                            let t = [...e.keys()].sort()[0];
                            f = e.get(t)
                        }
                        return {
                            codec_asymmetric_session: E,
                            codec_h264_encode_duration_sec: null !== (n = f.get(d.CodecTypes.H264)) && void 0 !== n ? n : 0,
                            codec_h265_encode_duration_sec: null !== (i = f.get(d.CodecTypes.H265)) && void 0 !== i ? i : 0,
                            codec_vp8_encode_duration_sec: null !== (r = f.get(d.CodecTypes.VP8)) && void 0 !== r ? r : 0,
                            codec_vp9_encode_duration_sec: null !== (s = f.get(d.CodecTypes.VP9)) && void 0 !== s ? s : 0,
                            codec_av1_encode_duration_sec: null !== (a = f.get(d.CodecTypes.AV1)) && void 0 !== a ? a : 0
                        }
                    } {
                        let e = this.getDecoderUsageStats();
                        return e.has(t) && (f = e.get(t)), {
                            codec_asymmetric_session: E,
                            codec_h264_decode_duration_sec: null !== (l = f.get(d.CodecTypes.H264)) && void 0 !== l ? l : 0,
                            codec_h265_decode_duration_sec: null !== (o = f.get(d.CodecTypes.H265)) && void 0 !== o ? o : 0,
                            codec_vp8_decode_duration_sec: null !== (u = f.get(d.CodecTypes.VP8)) && void 0 !== u ? u : 0,
                            codec_vp9_decode_duration_sec: null !== (c = f.get(d.CodecTypes.VP9)) && void 0 !== c ? c : 0,
                            codec_av1_decode_duration_sec: null !== (_ = f.get(d.CodecTypes.AV1)) && void 0 !== _ ? _ : 0
                        }
                    }
                }
                getOutboundStats() {
                    let e = [];
                    return s.forEach(this.outboundStats, (t, n) => {
                        var i, r, s, a;
                        let l;
                        let o = null === (i = this.connection) || void 0 === i ? void 0 : i.getStreamParameters();
                        o.length > 1 && o.forEach(e => {
                            if (parseInt(n) === e.ssrc) {
                                var t;
                                l = null !== (t = e.quality) && void 0 !== t ? t : 50
                            }
                        });
                        let u = [1, 5, 10, 25, 50, 75],
                            c = t.vmafHistogram.getReport(u),
                            E = t.psnrHistogram.getReport(u),
                            f = t.aggregationDuration / 1e3;
                        e.push({
                            ...this.getStats(t),
                            target_fps: f > 0 ? Math.round((null !== (r = t.targetFrames) && void 0 !== r ? r : 0) / f) : 0,
                            target_bitrate_network: f > 0 ? Math.round((null !== (s = t.targetBytesNetwork) && void 0 !== s ? s : 0) * 8 / f) : 0,
                            target_bitrate_max: f > 0 ? Math.round((null !== (a = t.targetBytesMax) && void 0 !== a ? a : 0) * 8 / f) : 0,
                            duration_encoder_nvidia_cuda: _(t.encoderBuckets[d.Encoders.NVIDIA_CUDA]),
                            duration_encoder_nvidia_direct3d: _(t.encoderBuckets[d.Encoders.NVIDIA_DIRECT_3D]),
                            duration_encoder_openh264: _(t.encoderBuckets[d.Encoders.OPENH264]),
                            duration_encoder_videotoolbox: _(t.encoderBuckets[d.Encoders.VIDEOTOOLBOX]),
                            duration_encoder_amd_direct3d: _(t.encoderBuckets[d.Encoders.AMD_DIRECT_3D]),
                            duration_encoder_intel: _(t.encoderBuckets[d.Encoders.INTEL]),
                            duration_encoder_intel_direct3d: _(t.encoderBuckets[d.Encoders.INTEL_DIRECT_3D]),
                            duration_encoder_vp8_libvpx: _(t.encoderBuckets[d.Encoders.VP8_LIBVPX]),
                            duration_encoder_uncategorized: _(t.encoderBuckets[d.Encoders.UNCATEGORIZED]),
                            duration_encoder_unknown: _(t.encoderBuckets[d.Encoders.UNKNOWN]),
                            quality: l,
                            average_encode_time_ms: t.averageEncodeTime,
                            average_encoder_vmaf_score: t.vmafScoreNum > 0 ? t.vmafScoreSum / t.vmafScoreNum : null,
                            encoder_vmaf_score_percentile1: c.count > 0 ? c.percentiles[1] : null,
                            encoder_vmaf_score_percentile5: c.count > 0 ? c.percentiles[5] : null,
                            encoder_vmaf_score_percentile10: c.count > 0 ? c.percentiles[10] : null,
                            encoder_vmaf_score_percentile25: c.count > 0 ? c.percentiles[25] : null,
                            encoder_vmaf_score_percentile50: c.count > 0 ? c.percentiles[50] : null,
                            encoder_vmaf_score_percentile75: c.count > 0 ? c.percentiles[75] : null,
                            average_encoder_psnr_db: t.psnrDbNum > 0 ? t.psnrDbSum / t.psnrDbNum : null,
                            encoder_psnr_db_percentile1: E.count > 0 ? E.percentiles[1] : null,
                            encoder_psnr_db_percentile5: E.count > 0 ? E.percentiles[5] : null,
                            encoder_psnr_db_percentile10: E.count > 0 ? E.percentiles[10] : null,
                            encoder_psnr_db_percentile25: E.count > 0 ? E.percentiles[25] : null,
                            encoder_psnr_db_percentile50: E.count > 0 ? E.percentiles[50] : null,
                            encoder_psnr_db_percentile75: E.count > 0 ? E.percentiles[75] : null,
                            average_outbound_want: t.outboundSinkWantNum > 0 ? t.outboundSinkWantSum / t.outboundSinkWantNum : null
                        })
                    }), e
                }
                getInboundStats(e) {
                    return this.getStats(this.inboundStats[e])
                }
                destroyUser(e) {
                    delete this.inboundStats[e]
                }
                getInboundParticipants() {
                    return Object.keys(this.inboundStats)
                }
                updateSendState(e) {
                    null != e.paused && (this.paused.value = e.paused), null != e.receivers && (this.zeroReceivers.value = 0 === e.receivers);
                    let t = this.paused.value || this.zeroReceivers.value,
                        n = this.videoStopped.value;
                    this.videoStopped.value = t, t !== n && s.forEach(this.outboundStats, e => e.statsWindow = [])
                }
                getStats(e) {
                    if (null == e) return;
                    let t = Number(this.streamStart),
                        n = null != this.streamEnd ? this.streamEnd - t : this.timestampProducer.now() - t,
                        i = Math.max(e.aggregationDuration, 0),
                        r = i / 1e3,
                        s = [1, 5, 10, 25, 50, 75],
                        a = e.cpuHistogram.getReport(),
                        l = e.memoryHistogram.getReport(),
                        o = e.fpsHistogram.getReport(s),
                        u = e.bitrateHistogram.getReport(s),
                        c = e.resolutionHistogram.getReport(s),
                        d = {
                            duration: Math.floor(n / 1e3),
                            duration_aggregation: _(r),
                            duration_stopped_receiving: _(e.videoStoppedDuration.asSeconds()),
                            duration_stream_under_8mbps: _(e.bitrateBuckets[8e6]),
                            duration_stream_under_7mbps: _(e.bitrateBuckets[7e6]),
                            duration_stream_under_6mbps: _(e.bitrateBuckets[6e6]),
                            duration_stream_under_5mbps: _(e.bitrateBuckets[5e6]),
                            duration_stream_under_4mbps: _(e.bitrateBuckets[4e6]),
                            duration_stream_under_3mbps: _(e.bitrateBuckets[3e6]),
                            duration_stream_under_2mbps: _(e.bitrateBuckets[2e6]),
                            duration_stream_under_1_5mbps: _(e.bitrateBuckets[15e5]),
                            duration_stream_under_1mbps: _(e.bitrateBuckets[1e6]),
                            duration_stream_under_0_5mbps: _(e.bitrateBuckets[5e5]),
                            duration_stream_at_0mbps: _(e.bitrateBuckets[0]),
                            duration_fps_under_60: _(e.fpsBuckets[60]),
                            duration_fps_under_55: _(e.fpsBuckets[55]),
                            duration_fps_under_50: _(e.fpsBuckets[50]),
                            duration_fps_under_45: _(e.fpsBuckets[45]),
                            duration_fps_under_40: _(e.fpsBuckets[40]),
                            duration_fps_under_35: _(e.fpsBuckets[35]),
                            duration_fps_under_30: _(e.fpsBuckets[30]),
                            duration_fps_under_25: _(e.fpsBuckets[25]),
                            duration_fps_under_20: _(e.fpsBuckets[20]),
                            duration_fps_under_15: _(e.fpsBuckets[15]),
                            duration_fps_under_10: _(e.fpsBuckets[10]),
                            duration_fps_under_5: _(e.fpsBuckets[5]),
                            duration_fps_at_0: _(e.fpsBuckets[0]),
                            avg_resolution: e.intervalTotal > 0 ? Math.round(e.resolutionTotal / e.intervalTotal) : 0,
                            avg_minor_resolution: e.intervalTotal > 0 ? Math.round(e.minorResolutionTotal / e.intervalTotal) : 0,
                            avg_major_resolution: e.intervalTotal > 0 ? Math.round(e.majorResolutionTotal / e.intervalTotal) : 0,
                            duration_resolution_under_720: _(e.resolutionBuckets[720]),
                            duration_resolution_under_480: _(e.resolutionBuckets[480]),
                            duration_resolution_under_360: _(e.resolutionBuckets[360]),
                            num_pauses: this.pausedCount,
                            duration_paused: _(this.paused.totalDuration() / 1e3),
                            duration_zero_receivers: _(this.zeroReceivers.totalDuration() / 1e3),
                            duration_video_stopped: _(this.videoStopped.totalDuration() / 1e3),
                            client_performance_cpu_percentile25: a.percentiles[25],
                            client_performance_cpu_percentile50: a.percentiles[50],
                            client_performance_cpu_percentile75: a.percentiles[75],
                            client_performance_cpu_percentile90: a.percentiles[90],
                            client_performance_cpu_percentile95: a.percentiles[95],
                            client_performance_memory_percentile25: l.percentiles[25],
                            client_performance_memory_percentile50: l.percentiles[50],
                            client_performance_memory_percentile75: l.percentiles[75],
                            client_performance_memory_percentile90: l.percentiles[90],
                            client_performance_memory_percentile95: l.percentiles[95],
                            client_performance_memory_min: l.min,
                            client_performance_memory_max: l.max,
                            fps_percentile1: o.percentiles[1],
                            fps_percentile5: o.percentiles[5],
                            fps_percentile10: o.percentiles[10],
                            fps_percentile25: o.percentiles[25],
                            fps_percentile50: o.percentiles[50],
                            fps_percentile75: o.percentiles[75],
                            bitrate_percentile1: u.percentiles[1],
                            bitrate_percentile5: u.percentiles[5],
                            bitrate_percentile10: u.percentiles[10],
                            bitrate_percentile25: u.percentiles[25],
                            bitrate_percentile50: u.percentiles[50],
                            bitrate_percentile75: u.percentiles[75],
                            resolution_percentile1: c.percentiles[1],
                            resolution_percentile5: c.percentiles[5],
                            resolution_percentile10: c.percentiles[10],
                            resolution_percentile25: c.percentiles[25],
                            resolution_percentile50: c.percentiles[50],
                            resolution_percentile75: c.percentiles[75],
                            duration_video_effect: _(this.videoEffectDuration.totalDuration() / 1e3)
                        },
                        {
                            bytes: E,
                            framesDropped: f,
                            framesCodecError: p,
                            framesCodec: h,
                            framesNetwork: S,
                            packets: T,
                            packetsLost: I,
                            nackCount: m,
                            pliCount: g,
                            qpSum: A,
                            pauseCount: C,
                            freezeCount: R,
                            totalPausesDuration: N,
                            totalFreezesDuration: v,
                            totalFramesDuration: O,
                            keyframes: D
                        } = e.aggregatedProperties;
                    return {
                        ...d,
                        avg_bitrate: r > 0 ? Math.round((null != E ? E : 0) * 8 / r) : 0,
                        avg_fps: r > 0 ? Math.round((null != h ? h : 0) / r) : 0,
                        num_bytes: E,
                        num_packets_lost: I,
                        num_packets: T,
                        num_frames: S,
                        num_frames_codec_error: p,
                        time_to_first_frame_ms: e.timeToFirstFrame,
                        num_frames_dropped: f,
                        num_nacks: m,
                        num_plis: g,
                        qp_sum: A,
                        receiver_pause_count: C,
                        receiver_freeze_count: R,
                        receiver_total_pauses_duration: N,
                        receiver_total_freezes_duration: v,
                        receiver_total_frames_duration: O,
                        num_keyframes: D
                    }
                }
                receivedStats(e, t, n) {
                    var r, a, l, o;
                    let c = t.transport,
                        _ = (0, u.isWeb)() ? 1 : null !== (a = null === (r = c.receiverReports) || void 0 === r ? void 0 : r.length) && void 0 !== a ? a : 0,
                        E = new Set,
                        f = new Set;
                    if (this.updateSendState({
                            receivers: _
                        }), t.rtp.outbound.filter(e => "video" === e.type).forEach(t => {
                            if (null != t) {
                                var i, r, s, a, l, o;
                                let u = t.ssrc,
                                    _ = this.outboundStats[u];
                                if (null == _ && (console.warn("Unknown outbound video stream with SSRC: ".concat(u)), _ = new d.OutboundStats(this.timestampProducer), this.outboundStats[u] = _), null == _.timeToFirstFrame && (t.framesEncoded > 0 || (null !== (i = t.frameRateInput) && void 0 !== i ? i : 0) > 0) && (_.timeToFirstFrame = Math.max(0, e - _.startTime)), !this.videoStopped.value) {
                                    _.appendAndIncrementStats(d.RawVideoStats.parseOutboundStats(t, e)), _.encoderCodec !== d.CodecTypes.UNKNOWN && E.add(_.encoderCodec);
                                    let i = null === (r = n.find(e => e.ssrc === u)) || void 0 === r ? void 0 : r.maxBitrate;
                                    _.appendTargetRates(null === (s = n.find(e => e.ssrc === u)) || void 0 === s ? void 0 : s.maxFrameRate, null !== (l = t.bitrateTarget) && void 0 !== l ? l : Math.min(null !== (a = c.availableOutgoingBitrate) && void 0 !== a ? a : 0, null != i ? i : 0), i), _.averageEncodeTime = null !== (o = t.averageEncodeTime) && void 0 !== o ? o : 0
                                }
                            }
                        }), !this.paused.value && s.forEach(t.rtp.inbound, (t, n) => {
                            let r = t.find(e => "video" === e.type);
                            if (null != r) {
                                let t = this.inboundStats[n];
                                null == t && (console.warn("Unknown inbound video stream for user: ".concat(n)), t = new d.InboundStats(this.timestampProducer), this.inboundStats[n] = t);
                                let s = 0,
                                    a = 0,
                                    l = d.RawVideoStats.parseInboundStats(r, e);
                                this.statCollectionPausedUsers.has(n) ? [s, a] = t.collectFpsDataDuringProbe(l) : (t.resetAuxillaryStats(), t.appendAndIncrementStats(l), [s, a] = [t.aggregatedProperties.framesCodec, t.aggregationDuration]), this.emit(i.FpsUpdate, n, s, a / 1e3), t.decoderCodec !== d.CodecTypes.UNKNOWN && f.add(t.decoderCodec), null == t.timeToFirstFrame && r.framesDecoded > 0 && (t.timeToFirstFrame = e - t.startTime)
                            }
                        }), 0 !== E.size && 0 !== f.size) {
                        ;
                        if (l = E, o = f, l.size === o.size && Array.from(l).every(e => o.has(e))) this.symmetricCodecUpdates++;
                        else this.asymmetricCodecUpdates++
                    }
                }
                updateSystemResourceStats() {
                    for (let e in this.outboundStats) this.outboundStats[e].addSystemResources();
                    for (let e in this.inboundStats) this.inboundStats[e].addSystemResources()
                }
                updateVideoEffectStats(e) {
                    let t = null == e ? void 0 : e.rtp.outbound.find(e => "video" === e.type);
                    this.videoEffectDuration.value = (null == t ? void 0 : t.type) === "video" && null != t.filter
                }
                constructor(e, t = o.TimeStampProducer) {
                    super(), this.connection = e, this.timestampProducer = t, this.networkQuality = new c.default, this.pausedCount = 0, this.outboundStats = {}, this.inboundStats = {}, this.symmetricCodecUpdates = 0, this.asymmetricCodecUpdates = 0, this.statCollectionPausedUsers = new Set, this.sampleStats = e => {
                        if (null == e) return;
                        let t = this.timestampProducer.now();
                        if (this.networkQuality.incrementNetworkStats(t), this.updateSystemResourceStats(), this.updateVideoEffectStats(e), null == e) return;
                        let n = this.connection.getStreamParameters();
                        this.receivedStats(t, e, n)
                    }, this.paused = new E(!1, t), this.zeroReceivers = new E(!1, t), this.videoStopped = new E(!1, t), this.videoEffectDuration = new E(!1, t)
                }
            }
        },
        44642: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CodecTypes: function() {
                    return l
                },
                Encoders: function() {
                    return o
                },
                VideoStoppedReasons: function() {
                    return c
                },
                parseEncoder: function() {
                    return m
                },
                RawVideoStats: function() {
                    return A
                },
                InboundStats: function() {
                    return C
                },
                OutboundStats: function() {
                    return R
                }
            });
            var i, r, s, a, l, o, u, c, d = n("931010"),
                _ = n("872507"),
                E = n("226445");
            let f = [0, 5e5, 1e6, 15e5, 2e6, 3e6, 4e6, 5e6, 6e6, 7e6, 8e6],
                p = [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],
                h = [720, 480, 360],
                S = ["framesCodec", "framesNetwork", "packets", "packetsLost", "framesDropped", "framesCodecError", "bytes", "nackCount", "pliCount", "qpSum", "freezeCount", "pauseCount", "totalFreezesDuration", "totalPausesDuration", "totalFramesDuration", "keyframes"];
            (i = l || (l = {})).H264 = "H264", i.H265 = "H265", i.VP8 = "VP8", i.VP9 = "VP9", i.AV1 = "AV1", i.UNKNOWN = "UNKNOWN", (r = o || (o = {})).NVIDIA_CUDA = "nvidia_cuda", r.NVIDIA_DIRECT_3D = "nvidia_direct_3d", r.OPENH264 = "openh264", r.VIDEOTOOLBOX = "videotoolbox", r.AMD_DIRECT_3D = "amd_direct_3d", r.INTEL = "intel", r.INTEL_DIRECT_3D = "intel_direct_3d", r.VP8_LIBVPX = "vp8_libvpx", r.UNCATEGORIZED = "uncategorized", r.UNKNOWN = "unknown", (s = u || (u = {})).NVIDIA_DIRECT_3D = "nvidia_direct_3d", s.OPENH264 = "openh264", s.VIDEOTOOLBOX = "videotoolbox", s.AMD_DIRECT_3D = "amd_direct_3d", s.INTEL = "intel", s.INTEL_DIRECT_3D = "intel_direct_3d", s.VP8_LIBVPX = "vp8_libvpx", s.UNCATEGORIZED = "uncategorized", s.UNKNOWN = "unknown";
            let T = Object.freeze({
                    "nvidia: cuda": o.NVIDIA_CUDA,
                    "nvidia: direct3d": o.NVIDIA_DIRECT_3D,
                    "amd: direct3d": o.AMD_DIRECT_3D,
                    "intel: direct3d": o.INTEL_DIRECT_3D,
                    intel: o.INTEL,
                    VideoToolbox: o.VIDEOTOOLBOX,
                    OpenH264: o.OPENH264,
                    libvpx: o.VP8_LIBVPX
                }),
                I = Object.freeze({
                    "nvidia: direct3d": u.NVIDIA_DIRECT_3D,
                    "amd: direct3d": u.AMD_DIRECT_3D,
                    "intel: direct3d": u.INTEL_DIRECT_3D,
                    intel: u.INTEL,
                    VideoToolbox: u.VIDEOTOOLBOX,
                    OpenH264: u.OPENH264,
                    libvpx: u.VP8_LIBVPX
                });

            function m(e) {
                if (null == e) return o.UNKNOWN;
                for (let t of Object.keys(T))
                    if (e.includes(t)) return T[t];
                return o.UNCATEGORIZED
            }(a = c || (c = {}))[a.None = 0] = "None", a[a.ClientSideDisableVideo = 1] = "ClientSideDisableVideo", a[a.SenderStopped = 2] = "SenderStopped";

            function g(e) {
                if (null == e) return l.UNKNOWN;
                if ("H264" === (e = e.toUpperCase())) return l.H264;
                if ("H265" === e) return l.H265;
                if ("VP8" === e) return l.VP8;
                else if ("VP9" === e) return l.VP9;
                else if ("AV1" === e || "AV1X" === e) return l.AV1;
                else return l.UNKNOWN
            }
            class A {
                static parseInboundStats(e, t) {
                    var n, i;
                    let r = new A;
                    return null == e ? r : (r.bytes = e.bytesReceived, r.framesCodec = e.framesDecoded, r.framesCodecError = null !== (n = e.framesDecodeErrors) && void 0 !== n ? n : null, r.framesNetwork = e.framesReceived, r.packets = e.packetsReceived, r.packetsLost = e.packetsLost, r.framesDropped = e.framesDropped, r.resolution = null != e.resolution ? e.resolution.height : 0, r.minorResolution = null != e.resolution ? Math.min(e.resolution.height, e.resolution.width) : 0, r.majorResolution = null != e.resolution ? Math.max(e.resolution.height, e.resolution.width) : 0, r.timestamp = t, r.nackCount = e.nackCount, r.pliCount = e.pliCount, r.decoder = function(e) {
                        if (null == e) return u.UNKNOWN;
                        for (let t of Object.keys(I))
                            if (e.includes(t)) return I[t];
                        return u.UNCATEGORIZED
                    }(e.decoderImplementationName), r.codecType = g(e.codec.name), r.qpSum = 0, r.freezeCount = e.freezeCount, r.pauseCount = e.pauseCount, r.totalFreezesDuration = e.totalFreezesDuration, r.totalPausesDuration = e.totalPausesDuration, r.totalFramesDuration = e.totalFramesDuration, r.keyframes = null !== (i = e.keyFramesDecoded) && void 0 !== i ? i : null, r)
                }
                static parseOutboundStats(e, t) {
                    var n, i, r, s, a, l;
                    let o = new A;
                    return null == e ? o : {
                        bytes: e.bytesSent,
                        framesCodec: e.framesEncoded,
                        framesCodecError: null,
                        framesNetwork: null !== (n = e.framesSent) && void 0 !== n ? n : 0,
                        packets: e.packetsSent,
                        packetsLost: null !== (i = e.packetsLost) && void 0 !== i ? i : 0,
                        framesDropped: 0,
                        resolution: null != e.resolution ? e.resolution.height : 0,
                        minorResolution: null != e.resolution ? Math.min(e.resolution.height, e.resolution.width) : 0,
                        majorResolution: null != e.resolution ? Math.max(e.resolution.height, e.resolution.width) : 0,
                        timestamp: t,
                        encoder: m(e.encoderImplementationName),
                        decoder: null,
                        codecType: g(e.codec.name),
                        nackCount: e.nackCount,
                        pliCount: e.pliCount,
                        qpSum: e.qpSum,
                        freezeCount: 0,
                        pauseCount: 0,
                        totalFreezesDuration: 0,
                        totalPausesDuration: 0,
                        totalFramesDuration: 0,
                        outboundSinkWant: null !== (r = e.sinkWantAsInt) && void 0 !== r ? r : null,
                        vmafScore: null !== (s = e.encoderQualityVmaf) && void 0 !== s ? s : null,
                        psnrDb: null !== (a = e.encoderQualityPsnr) && void 0 !== a ? a : null,
                        keyframes: null !== (l = e.keyFramesEncoded) && void 0 !== l ? l : null
                    }
                }
                constructor() {
                    this.bytes = 0, this.framesCodec = 0, this.framesCodecError = null, this.framesNetwork = 0, this.resolution = 0, this.minorResolution = 0, this.majorResolution = 0, this.timestamp = 0, this.packets = 0, this.packetsLost = 0, this.framesDropped = 0, this.nackCount = 0, this.pliCount = 0, this.encoder = null, this.decoder = null, this.codecType = null, this.qpSum = 0, this.freezeCount = 0, this.pauseCount = 0, this.totalFreezesDuration = 0, this.totalPausesDuration = 0, this.totalFramesDuration = 0, this.vmafScore = null, this.psnrDb = null, this.outboundSinkWant = null, this.keyframes = null
                }
            }
            class C {
                get isVideoStopped() {
                    return this.videoStoppedReason !== c.None
                }
                get videoStoppedDuration() {
                    return this.videoStoppedWatch.elapsed()
                }
                collectAggregationStats(e, t) {
                    for (let i of S) {
                        var n;
                        let r = e[i];
                        if (null === r) continue;
                        let s = null !== (n = t[i]) && void 0 !== n ? n : 0;
                        s > r ? this.aggregatedProperties[i] += r : this.aggregatedProperties[i] += r - s
                    }
                    this.aggregationDuration += e.timestamp - t.timestamp
                }
                collectFpsDataDuringProbe(e) {
                    var t, n;
                    if (this.auxillaryStatsWindow.push(e), this.auxillaryStatsWindow.length < 2) return [0, 0];
                    let i = this.auxillaryStatsWindow[this.auxillaryStatsWindow.length - 1],
                        r = this.auxillaryStatsWindow[this.auxillaryStatsWindow.length - 2];
                    return this.auxillaryAggFramesCodec += (null !== (t = i.framesCodec) && void 0 !== t ? t : 0) - (null !== (n = r.framesCodec) && void 0 !== n ? n : 0), this.auxillaryAggregationDuration += i.timestamp - r.timestamp, this.auxillaryStatsWindow.shift(), [this.auxillaryAggFramesCodec, this.auxillaryAggregationDuration]
                }
                resetAuxillaryStats() {
                    this.auxillaryStatsWindow.length > 0 && (this.auxillaryStatsWindow.splice(0), this.auxillaryAggFramesCodec = 0, this.auxillaryAggregationDuration = 0)
                }
                setVideoStopped(e, t) {
                    if (e) {
                        this.videoStoppedReason |= t, this.videoStoppedWatch.start();
                        return
                    }
                    this.videoStoppedReason &= ~t, this.videoStoppedReason === c.None && (this.statsWindow.splice(0), this.videoStoppedWatch.stop())
                }
                appendAndIncrementStats(e) {
                    if (this.isVideoStopped) return;
                    if (this.statsWindow.push(e), this.statsWindow.length < 2) return;
                    let t = this.statsWindow[this.statsWindow.length - 1],
                        n = this.statsWindow[this.statsWindow.length - 2];
                    this.collectAggregationStats(t, n);
                    let {
                        bytes: i,
                        framesCodec: r,
                        timestamp: s,
                        resolution: a,
                        minorResolution: o,
                        majorResolution: u,
                        encoder: c,
                        decoder: d,
                        codecType: _
                    } = t, {
                        timestamp: E
                    } = n, S = (s - E) / 1e3;
                    if (this.intervalTotal += S, this.resolutionTotal += a * S, this.minorResolutionTotal += o * S, this.majorResolutionTotal += u * S, null != c && null != _ && "encoderBuckets" in this && (this.encoderBuckets[c] += S, this.codecBuckets[_] += S, null != t.codecType && t.codecType !== l.UNKNOWN && (this.encoderCodec = t.codecType), null != e.vmafScore && e.vmafScore >= 0 && (this.vmafScoreNum += 1, this.vmafScoreSum += e.vmafScore, this.vmafHistogram.addSample(e.vmafScore)), null != e.psnrDb && (this.psnrDbNum += 1, this.psnrDbSum += e.psnrDb, this.psnrHistogram.addSample(e.psnrDb)), null != e.outboundSinkWant && 0 !== e.outboundSinkWant && (this.outboundSinkWantNum += 1, this.outboundSinkWantSum += e.outboundSinkWant)), null != d && null != _ && "decoderBuckets" in this && (this.decoderBuckets[d] += S, this.codecBuckets[_] += S, null != t.codecType && t.codecType !== l.UNKNOWN && (this.decoderCodec = t.codecType)), this.statsWindow.length < 6) return;
                    let {
                        bytes: T,
                        framesCodec: I,
                        timestamp: m
                    } = this.statsWindow[this.statsWindow.length - 3];
                    h.forEach(e => {
                        a <= e && (this.resolutionBuckets[e] += S)
                    });
                    let g = (s - m) / 1e3,
                        A = (i - T) * 8 / g,
                        C = (r - I) / g;
                    f.forEach(e => {
                        A <= e && (this.bitrateBuckets[e] += S)
                    }), p.forEach(e => {
                        C <= e && (this.fpsBuckets[e] += S)
                    }), this.resolutionHistogram.addSample(a), this.bitrateHistogram.addSample(A), this.fpsHistogram.addSample(C), this.statsWindow.shift()
                }
                addSystemResources() {
                    let e = _.default.getCurrentCPUUsagePercent(),
                        t = _.default.getCurrentMemoryUsageKB();
                    null != e && this.cpuHistogram.addSample(e), null != t && this.memoryHistogram.addSample(t)
                }
                getCodecsUsed() {
                    let e = new Set;
                    for (let [t, n] of Object.entries(this.codecBuckets)) n > 0 && e.add(t);
                    return e
                }
                constructor(e) {
                    this.decoderBuckets = {
                        nvidia_direct_3d: 0,
                        openh264: 0,
                        videotoolbox: 0,
                        amd_direct_3d: 0,
                        intel: 0,
                        intel_direct_3d: 0,
                        vp8_libvpx: 0,
                        uncategorized: 0,
                        unknown: 0
                    }, this.codecBuckets = {
                        H264: 0,
                        H265: 0,
                        VP8: 0,
                        VP9: 0,
                        AV1: 0,
                        UNKNOWN: 0
                    }, this.statsWindow = [], this.cpuHistogram = new E.Histogram, this.memoryHistogram = new E.Histogram, this.fpsHistogram = new E.Histogram, this.bitrateHistogram = new E.Histogram, this.resolutionHistogram = new E.Histogram, this.decoderCodec = l.UNKNOWN, this.aggregatedProperties = {
                        framesCodec: 0,
                        framesNetwork: 0,
                        packets: 0,
                        packetsLost: 0,
                        framesDropped: 0,
                        framesCodecError: 0,
                        bytes: 0,
                        nackCount: 0,
                        pliCount: 0,
                        qpSum: 0,
                        freezeCount: 0,
                        pauseCount: 0,
                        totalFreezesDuration: 0,
                        totalPausesDuration: 0,
                        totalFramesDuration: 0,
                        keyframes: 0
                    }, this.aggregationDuration = 0, this.bitrateBuckets = {}, this.fpsBuckets = {}, this.resolutionBuckets = {}, this.resolutionTotal = 0, this.minorResolutionTotal = 0, this.majorResolutionTotal = 0, this.intervalTotal = 0, this.auxillaryStatsWindow = [], this.auxillaryAggFramesCodec = 0, this.auxillaryAggregationDuration = 0, this.videoStoppedReason = c.None, this.startTime = e.now(), this.videoStoppedWatch = new d.StopWatch(e), f.forEach(e => {
                        this.bitrateBuckets[e] = 0
                    }), p.forEach(e => {
                        this.fpsBuckets[e] = 0
                    }), h.forEach(e => {
                        this.resolutionBuckets[e] = 0
                    })
                }
            }
            class R extends C {
                appendTargetRates(e, t, n) {
                    if (this.statsWindow.length < 2) return;
                    e = null != e ? e : 0, t = null != t ? t : 0, n = null != n ? n : 0;
                    let i = (this.statsWindow[this.statsWindow.length - 1].timestamp - this.statsWindow[this.statsWindow.length - 2].timestamp) / 1e3;
                    this.targetFrames = this.targetFrames + e * i, this.targetBytesNetwork = this.targetBytesNetwork + t / 8 * i, this.targetBytesMax = this.targetBytesMax + n / 8 * i
                }
                constructor(...e) {
                    super(...e), this.encoderBuckets = {
                        nvidia_cuda: 0,
                        nvidia_direct_3d: 0,
                        openh264: 0,
                        videotoolbox: 0,
                        amd_direct_3d: 0,
                        intel: 0,
                        intel_direct_3d: 0,
                        vp8_libvpx: 0,
                        uncategorized: 0,
                        unknown: 0
                    }, this.encoderCodec = l.UNKNOWN, this.targetFrames = 0, this.targetBytesMax = 0, this.targetBytesNetwork = 0, this.averageEncodeTime = 0, this.vmafScoreSum = 0, this.vmafScoreNum = 0, this.vmafHistogram = new E.Histogram, this.psnrDbSum = 0, this.psnrDbNum = 0, this.psnrHistogram = new E.Histogram, this.outboundSinkWantSum = 0, this.outboundSinkWantNum = 0
                }
            }
        },
        760406: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("595180"),
                r = n("931010");
            class s {
                start() {
                    this.listeningUsers.clear(), this.listening.reset(), this.speaking.reset(), this.participation.reset(), this.connected.reset(), this.connected.start(), this.connection.on(i.BaseConnectionEvent.Speaking, (e, t, n) => {
                        this.userId === e ? this.onSpeaking(0 !== t) : this.onListening(0 !== t, e)
                    })
                }
                onSpeaking(e) {
                    e ? (this.speaking.start(), this.participation.start()) : (this.speaking.stop(), !this.listening.isRunning() && this.participation.stop())
                }
                onListening(e, t) {
                    e ? (this.listeningUsers.add(t), this.listening.start(), this.participation.start()) : this.listeningUsers.delete(t) && 0 === this.listeningUsers.size && (this.listening.stop(), !this.speaking.isRunning() && this.participation.stop())
                }
                stop() {
                    this.speaking.stop(), this.listening.stop(), this.participation.stop(), this.connected.stop()
                }
                getDurationStats() {
                    return {
                        duration_listening_ms: this.listening.elapsed().asMilliseconds(),
                        duration_speaking_ms: this.speaking.elapsed().asMilliseconds(),
                        duration_participation_ms: this.participation.elapsed().asMilliseconds(),
                        duration_connected_ms: this.connected.elapsed().asMilliseconds()
                    }
                }
                constructor(e, t, n = r.TimeStampProducer) {
                    this.userId = e, this.connection = t, this.timestampProducer = n, this.listeningUsers = new Set, this.listening = new r.StopWatch(this.timestampProducer), this.speaking = new r.StopWatch(this.timestampProducer), this.participation = new r.StopWatch(this.timestampProducer), this.connected = new r.StopWatch(this.timestampProducer)
                }
            }
        },
        478696: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("335990"),
                a = n("931010"),
                l = n("497407");
            class o {
                start() {
                    this.connection.on(s.BaseConnectionEvent.Stats, this.sampleStats)
                }
                stop() {
                    this.connection.off(s.BaseConnectionEvent.Stats, this.sampleStats)
                }
                getMosStats() {
                    let e = r.reduce(this.inboundStats, (e, t) => {
                        e.mosSum += t.mosSum, e.mosCount += t.mosCount;
                        for (var n = 0; n < 5; n++) e.mosBuckets[n] += t.mosBuckets[n];
                        return e
                    }, {
                        mosSum: 0,
                        mosCount: 0,
                        mosBuckets: [0, 0, 0, 0, 0]
                    });
                    return {
                        mos_mean: e.mosCount > 0 ? e.mosSum / e.mosCount : 0,
                        mos_1: e.mosBuckets[1],
                        mos_2: e.mosBuckets[2],
                        mos_3: e.mosBuckets[3],
                        mos_4: e.mosBuckets[4]
                    }
                }
                getPacketStats() {
                    let e = r.reduce(this.inboundStats, (e, t) => (e.packetsReceived += t.packetsReceived, e.packetsReceivedLost += t.packetsLost, null != e.fecPacketsReceived && (e.fecPacketsReceived += t.fecPacketsReceived), null != e.fecPacketsDiscarded && (e.fecPacketsDiscarded += t.fecPacketsDiscarded), e), {
                        packetsReceived: 0,
                        packetsReceivedLost: 0,
                        fecPacketsReceived: 0,
                        fecPacketsDiscarded: 0
                    });
                    return {
                        packets_sent: this.outboundStats.packetsSent,
                        packets_sent_lost: this.outboundStats.packetsLost,
                        packets_received: e.packetsReceived,
                        packets_received_lost: e.packetsReceivedLost,
                        fec_packets_received: e.fecPacketsReceived,
                        fec_packets_discarded: e.fecPacketsDiscarded
                    }
                }
                getBytesStats() {
                    let e = r.reduce(this.inboundStats, (e, t) => e + t.bytesReceived, 0);
                    return {
                        bytes_sent: this.outboundStats.bytesSent,
                        bytes_received: e
                    }
                }
                getNetworkStats() {
                    return this.networkQuality.getStats()
                }
                getBufferStats() {
                    let e = r.reduce(this.inboundStats, (e, t) => ((null == e || null != t.bufferStats.audioJitterBuffer && null != e.audioJitterBuffer && t.bufferStats.audioJitterBuffer.p75 > e.audioJitterBuffer.p75) && (e = t.bufferStats), e), null);
                    return {
                        ... function(e) {
                            let t = {};
                            for (let n in e) {
                                let i = e[n];
                                t[n + "_mean"] = null != i ? i.mean : 0, t[n + "_p75"] = null != i ? i.p75 : 0, t[n + "_p95"] = null != i ? i.p95 : 0, t[n + "_p99"] = null != i ? i.p99 : 0, t[n + "_max"] = null != i ? i.max : 0
                            }
                            return t
                        }({
                            audio_jitter_buffer: null != e ? e.audioJitterBuffer : null,
                            audio_jitter_target: null != e ? e.audioJitterTarget : null,
                            audio_jitter_delay: null != e ? e.audioJitterDelay : null,
                            relative_reception_delay: null != e ? e.relativeReceptionDelay : null,
                            relative_playout_delay: null != e ? e.relativePlayoutDelay : null
                        })
                    }
                }
                getFrameOpStats() {
                    let e = r.reduce(this.inboundStats, (e, t) => (null != t.frameOpStats.silent && (e.silent += t.frameOpStats.silent), null != t.frameOpStats.normal && (e.normal += t.frameOpStats.normal), null != t.frameOpStats.merged && (e.merged += t.frameOpStats.merged), null != t.frameOpStats.expanded && (e.expanded += t.frameOpStats.expanded), null != t.frameOpStats.accelerated && (e.accelerated += t.frameOpStats.accelerated), null != t.frameOpStats.preemptiveExpanded && (e.preemptiveExpanded += t.frameOpStats.preemptiveExpanded), null != t.frameOpStats.cng && (e.cng += t.frameOpStats.cng), e), {
                        silent: 0,
                        normal: 0,
                        merged: 0,
                        expanded: 0,
                        accelerated: 0,
                        preemptiveExpanded: 0,
                        cng: 0
                    });
                    return {
                        frame_op_silent: e.silent,
                        frame_op_normal: e.normal,
                        frame_op_merged: e.merged,
                        frame_op_expanded: e.expanded,
                        frame_op_accelerated: e.accelerated,
                        frame_op_preemptive_expanded: e.preemptiveExpanded,
                        frame_op_cng: e.cng
                    }
                }
                getDurationStats() {
                    return {
                        duration_listening: this.duration.listening,
                        duration_speaking: this.duration.speaking,
                        duration_participation: this.duration.participation,
                        duration_connected: this.duration.connected
                    }
                }
                getTransportStats() {
                    return {
                        decryption_failures: this.decryptionFailures,
                        routing_failures: this.routingFailures
                    }
                }
                getPeriodicStats() {
                    let e = [];
                    for (let [p, h] of Object.entries(this.periodicInboundStats)) {
                        let {
                            previous: S,
                            current: T,
                            currentTimestampMs: I,
                            previousTimestampMs: m,
                            numRateSamples: g
                        } = h;
                        if (void 0 !== m && I > m) {
                            var t, n, i, r, s, a, l, o, u, c, d, _, E, f;
                            let A = I - m,
                                C = {
                                    userId: p,
                                    silent: null !== (n = T.silent) && void 0 !== n ? n : 0 - (null !== (t = S.silent) && void 0 !== t ? t : 0),
                                    normal: null !== (r = T.normal) && void 0 !== r ? r : 0 - (null !== (i = S.normal) && void 0 !== i ? i : 0),
                                    merged: null !== (a = T.merged) && void 0 !== a ? a : 0 - (null !== (s = S.merged) && void 0 !== s ? s : 0),
                                    expanded: null !== (o = T.expanded) && void 0 !== o ? o : 0 - (null !== (l = S.expanded) && void 0 !== l ? l : 0),
                                    accelerated: null !== (c = T.accelerated) && void 0 !== c ? c : 0 - (null !== (u = S.accelerated) && void 0 !== u ? u : 0),
                                    preemptiveExpanded: null !== (_ = T.preemptiveExpanded) && void 0 !== _ ? _ : 0 - (null !== (d = S.preemptiveExpanded) && void 0 !== d ? d : 0),
                                    cng: null !== (f = T.cng) && void 0 !== f ? f : 0 - (null !== (E = S.cng) && void 0 !== E ? E : 0),
                                    accelerateRate: h.accelerateRateSum / g,
                                    expandRate: h.expandRateSum / g,
                                    preemptiveExpandRate: h.preemptiveExpandRateSum / g,
                                    speechExpandRate: h.speechExpandRateSum / g,
                                    durationMs: A
                                };
                            C.normal + C.merged + C.expanded + C.accelerated + C.preemptiveExpanded > 0 && e.push(C)
                        }
                        this.periodicInboundStats[p].accelerateRateSum = 0, this.periodicInboundStats[p].expandRateSum = 0, this.periodicInboundStats[p].preemptiveExpandRateSum = 0, this.periodicInboundStats[p].speechExpandRateSum = 0, this.periodicInboundStats[p].numRateSamples = 0, this.periodicInboundStats[p].previous = T, this.periodicInboundStats[p].previousTimestampMs = I
                    }
                    return e
                }
                calculateMos(e, t) {
                    let n = this.calculateR(e, t);
                    return n < 0 ? 1 : n > 100 ? 4.5 : 1 + .035 * n + 71e-7 * n * (n - 60) * (100 - n)
                }
                calculateR(e, t) {
                    return 93.4 - (.024 * e + (e > 177.3 ? .11 * (e - 177.3) : 0)) - (10 + 122 * t / (t + 10))
                }
                constructor(e) {
                    this.connection = e, this.sampleStats = e => {
                        if (null == e) return;
                        this.networkQuality.incrementNetworkStats((0, a.now)()), this.decryptionFailures = e.transport.decryptionFailures, this.routingFailures = e.transport.routingFailures, this.duration.connected++;
                        let t = this.outboundStats.packetsSent,
                            n = r.reduce(this.inboundStats, (e, t) => (e.packetsReceived += t.packetsReceived, e), {
                                packetsReceived: 0
                            });
                        r.forEach(e.rtp.outbound, e => {
                            if ("audio" === e.type) {
                                var t;
                                this.outboundStats = {
                                    packetsSent: e.packetsSent,
                                    bytesSent: e.bytesSent,
                                    packetsLost: null !== (t = e.packetsLost) && void 0 !== t ? t : 0
                                }
                            }
                        }), r.forEach(e.rtp.inbound, (t, n) => {
                            r.forEach(t, t => {
                                if ("audio" === t.type) {
                                    var i, s, a, l, o, u, c, d, _, E, f, p;
                                    let h = null !== (i = e.transport.ping) && void 0 !== i ? i : 0,
                                        S = t.packetsReceived,
                                        T = t.packetsLost,
                                        I = t.bytesReceived,
                                        m = null !== (s = t.fecPacketsReceived) && void 0 !== s ? s : 0,
                                        g = null !== (a = t.fecPacketsDiscarded) && void 0 !== a ? a : 0,
                                        A = null !== (l = t.jitterBuffer) && void 0 !== l ? l : 0,
                                        C = {
                                            audioJitterBuffer: t.audioJitterBuffer,
                                            audioJitterTarget: t.audioJitterTarget,
                                            audioJitterDelay: t.audioJitterDelay,
                                            relativeReceptionDelay: t.relativeReceptionDelay,
                                            relativePlayoutDelay: t.relativePlayoutDelay
                                        },
                                        R = {
                                            silent: t.opSilence,
                                            normal: t.opNormal,
                                            merged: t.opMerge,
                                            expanded: t.opExpand,
                                            accelerated: t.opAccelerate,
                                            preemptiveExpanded: t.opPreemptiveExpand,
                                            cng: t.opCNG
                                        };
                                    if (null != this.inboundStats[n]) {
                                        let e = S - this.inboundStats[n].packetsReceived,
                                            i = T - this.inboundStats[n].packetsLost,
                                            s = 0,
                                            a = this.inboundStats[n].mosBuckets;
                                        e > 0 && i >= 0 && (s = this.calculateMos(h + A, r.clamp(i / (e + i), 0, 1)), a[Math.floor(s)]++), this.inboundStats[n] = {
                                            packetsReceived: S,
                                            bytesReceived: I,
                                            packetsLost: T,
                                            fecPacketsReceived: m,
                                            fecPacketsDiscarded: g,
                                            mos: s,
                                            mosSum: this.inboundStats[n].mosSum + s,
                                            mosCount: this.inboundStats[n].mosCount + (s > 0 ? 1 : 0),
                                            mosBuckets: a,
                                            bufferStats: C,
                                            frameOpStats: R
                                        }, this.periodicInboundStats[n] = {
                                            previousTimestampMs: this.periodicInboundStats[n].previousTimestampMs,
                                            previous: this.periodicInboundStats[n].previous,
                                            currentTimestampMs: Date.now(),
                                            current: R,
                                            accelerateRateSum: this.periodicInboundStats[n].accelerateRateSum + (null !== (o = t.accelerateRate) && void 0 !== o ? o : 0),
                                            expandRateSum: this.periodicInboundStats[n].expandRateSum + (null !== (u = t.expandRate) && void 0 !== u ? u : 0),
                                            preemptiveExpandRateSum: this.periodicInboundStats[n].preemptiveExpandRateSum + (null !== (c = t.preemptiveExpandRate) && void 0 !== c ? c : 0),
                                            speechExpandRateSum: this.periodicInboundStats[n].speechExpandRateSum + (null !== (d = t.speechExpandRate) && void 0 !== d ? d : 0),
                                            numRateSamples: this.periodicInboundStats[n].numRateSamples + 1
                                        }
                                    } else this.inboundStats[n] = {
                                        packetsReceived: S,
                                        bytesReceived: I,
                                        packetsLost: T,
                                        fecPacketsReceived: m,
                                        fecPacketsDiscarded: g,
                                        mos: 0,
                                        mosSum: 0,
                                        mosCount: 0,
                                        mosBuckets: [0, 0, 0, 0, 0],
                                        bufferStats: C,
                                        frameOpStats: R
                                    }, this.periodicInboundStats[n] = {
                                        previousTimestampMs: Date.now(),
                                        previous: R,
                                        currentTimestampMs: Date.now(),
                                        current: R,
                                        accelerateRateSum: null !== (_ = t.accelerateRate) && void 0 !== _ ? _ : 0,
                                        expandRateSum: null !== (E = t.expandRate) && void 0 !== E ? E : 0,
                                        preemptiveExpandRateSum: null !== (f = t.preemptiveExpandRate) && void 0 !== f ? f : 0,
                                        speechExpandRateSum: null !== (p = t.speechExpandRate) && void 0 !== p ? p : 0,
                                        numRateSamples: 1
                                    }
                                }
                            })
                        });
                        let i = !1,
                            s = !1;
                        this.outboundStats.packetsSent > t && (i = !0, this.duration.speaking++);
                        let l = r.reduce(this.inboundStats, (e, t) => (e.packetsReceived += t.packetsReceived, e), {
                            packetsReceived: 0
                        });
                        l.packetsReceived > n.packetsReceived && (s = !0, this.duration.listening++), (i || s) && this.duration.participation++
                    }, this.networkQuality = new l.default, this.inboundStats = {}, this.outboundStats = {
                        packetsSent: 0,
                        bytesSent: 0,
                        packetsLost: 0
                    }, this.duration = {
                        listening: 0,
                        speaking: 0,
                        participation: 0,
                        connected: 0
                    }, this.periodicInboundStats = {}
                }
            }
        },
        241718: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("800762"),
                r = n("316133"),
                s = n("860604");
            class a {
                updateVoiceStates(e, t) {
                    t === this.channelId ? (this.totalParticipants.add(e), this.maxVoiceStateCount = Math.max(r.default.countVoiceStatesForChannel(t), this.maxVoiceStateCount)) : (null == t && e in this.totalSpeakers && (this.totalSpeakers[e] = s.SpeakingFlags.NONE), e === this.userId && null != t && this.setChannelId(t))
                }
                getStats() {
                    return {
                        max_voice_state_count: this.maxVoiceStateCount,
                        total_voice_state_count: this.totalParticipants.size,
                        max_listener_count: this.maxListenerCount,
                        total_listener_count: this.totalListeners.size,
                        max_speaker_count: this.maxSpeakerCount,
                        total_speaker_count: Object.keys(this.totalSpeakers).length
                    }
                }
                setSpeaking(e, t) {
                    if (t !== s.SpeakingFlags.NONE) {
                        let n = i.default.getVoiceStateForChannel(this.channelId, e);
                        if (null != n && !n.selfMute && !n.mute) {
                            this.totalSpeakers[e] = t;
                            let n = Object.values(this.totalSpeakers).filter(e => e !== s.SpeakingFlags.NONE).length;
                            this.maxSpeakerCount = Math.max(this.maxSpeakerCount, n)
                        }
                    } else e in this.totalSpeakers && (this.totalSpeakers[e] = s.SpeakingFlags.NONE);
                    if (this.userId === e) {
                        if (t === this.speaking) return;
                        if (t !== s.SpeakingFlags.NONE) {
                            let e = Object.values(i.default.getVoiceStatesForChannel(this.channelId)).filter(e => e.userId !== this.userId && !e.selfDeaf && !e.deaf);
                            e.forEach(e => this.totalListeners.add(e.userId)), this.maxListenerCount = Math.max(e.length, this.maxListenerCount)
                        }
                        this.speaking = t
                    }
                }
                setChannelId(e) {
                    if (e === this.channelId) return;
                    this.channelId = e, this.totalParticipants = new Set([this.userId]);
                    let t = Object.keys(i.default.getVoiceStatesForChannel(this.channelId));
                    t.forEach(e => this.totalParticipants.add(e)), this.maxVoiceStateCount = t.length, this.speaking = s.SpeakingFlags.NONE, this.maxListenerCount = 0, this.totalListeners = new Set, this.maxSpeakerCount = 0, this.totalSpeakers = {}
                }
                constructor(e, t) {
                    this.maxVoiceStateCount = 1, this.speaking = s.SpeakingFlags.NONE, this.maxListenerCount = 0, this.maxSpeakerCount = 0, this.userId = e, this.setChannelId(t)
                }
            }
        },
        6193: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isHookModuleTooOld: function() {
                    return h
                },
                attachToProcess: function() {
                    return T
                },
                cancelAttachToProcess: function() {
                    return I
                }
            });
            var i, r, s = n("913144"),
                a = n("363658"),
                l = n("546463"),
                o = n("568307"),
                u = n("697218"),
                c = n("599110"),
                d = n("773336"),
                _ = n("50885"),
                E = n("688225"),
                f = n("49111");
            let p = {
                development: [0, 0, 0, 0],
                canary: [1, 0, 30, 10],
                ptb: [1, 0, 1005, 2],
                stable: [1, 0, 9001, 2]
            };

            function h() {
                var e, t, n, i;
                let r = null !== (n = _.default.version) && void 0 !== n ? n : [0, 0, 0];
                (null === (t = _.default) || void 0 === t ? void 0 : null === (e = t.moduleVersions) || void 0 === e ? void 0 : e.discord_hook) != null ? r.push(_.default.moduleVersions.discord_hook) : r.push(0);
                let s = null !== (i = p[_.default.releaseChannel]) && void 0 !== i ? i : p.stable;
                return r < s
            }
            async function S() {
                if (!(0, d.isWindows)()) return Promise.reject(Error("Hook is only available on Windows"));
                if (h()) return Promise.reject(Error("Hook module is too old"));
                await _.default.ensureModule("discord_hook");
                let e = await _.default.requireModule("discord_hook");
                return function(e) {
                    if (null == e.setFlags) return;
                    let t = r.None,
                        n = E.default.getCurrentConfig({
                            location: "edd7d3_1"
                        }, {
                            autoTrackExposure: !1
                        });
                    n.enableCrashReporting && (console.log("Hook: Enabling crash reporting."), t |= r.EnableCrashReporting);
                    let i = u.default.getCurrentUser();
                    null != i && (i.isStaff() || n.enableCrashTrigger) && (console.log("Hook: Enabling crash trigger."), t |= r.EnableCrashTrigger), e.setFlags(t)
                }(e), e
            }(i = r || (r = {}))[i.None = 0] = "None", i[i.EnableCrashReporting = 1] = "EnableCrashReporting", i[i.EnableCrashTrigger = 2] = "EnableCrashTrigger";

            function T(e, t) {
                return S().then(n => {
                    var i;
                    let r = null === (i = o.default.getGameForPID(e)) || void 0 === i ? void 0 : i.name,
                        u = l.default.getGameByName(r);
                    return new Promise(i => {
                        let l = o.default.getOverlayOptionsForPID(e),
                            d = {
                                ...l,
                                elevate: o.default.shouldElevateProcessForPID(e)
                            };
                        null == d.allowHook || d.allowHook ? (n.attachToProcess(e, d, (e, n) => {
                            c.default.track(f.AnalyticEvents.HOOK_RESULT, {
                                game_name: r,
                                game_id: null == u ? null : u.id,
                                success: n,
                                error: e,
                                ...t
                            }), n ? i() : i(e = null != e ? e : "Unknown hook error")
                        }), s.default.wait(() => a.default.clearElevatedProcess())) : i("Hook is disabled for this game")
                    })
                })
            }

            function I(e) {
                return S().then(t => {
                    t.cancelAttachToProcess(e)
                })
            }
        },
        688225: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-05_overlay_hook_crash_detection",
                label: "Detect and report crashes in the overlay hook",
                defaultConfig: {
                    enableCrashReporting: !1,
                    enableCrashTrigger: !1
                },
                treatments: [{
                    id: 1,
                    label: "EnableCrashReporting",
                    config: {
                        enableCrashReporting: !0,
                        enableCrashTrigger: !1
                    }
                }, {
                    id: 2,
                    label: "EnableCrashTrigger",
                    config: {
                        enableCrashReporting: !0,
                        enableCrashTrigger: !0
                    }
                }]
            })
        },
        256955: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("677126"),
                r = n("605250"),
                s = n("773336"),
                a = n("50885");
            (0, i.inject)({
                supported() {
                    try {
                        if (__OVERLAY__);
                        else if (s.isPlatformEmbedded) {
                            let e = (0, i.getVoiceEngine)();
                            if (null == e.VoiceConnection || null == e.setVideoOutputSink && null == e.addVideoOutputSink) throw Error("voe function missing");
                            return !0
                        }
                    } catch (e) {
                        new(0, r.default)("injectMediaEngine").error("Potentially corrupt installation:", e.message)
                    }
                    return !1
                },
                supportsFeature: e => a.default.supportsFeature(e),
                setProcessPriority(e) {
                    a.default.getDiscordUtils().setProcessPriority(e)
                },
                getVoiceEngine: () => a.default.getVoiceEngine()
            })
        },
        432959: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("377849"),
                r = n.n(i);

            function s(e, t) {
                if ("function" == typeof t) {
                    let n = r.localeData(),
                        i = t.bind(n);
                    return (t, n) => i({
                        [e]: () => t
                    }, n)
                }
                return t = Array.isArray(t) ? t : t.format, e => t[e]
            }

            function a(e, t, n) {
                return e < 12 ? n ? "am" : "AM" : n ? "pm" : "PM"
            }

            function l(e) {
                var t, n;
                let i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {
                        var e;
                        let t = r.localeData()._config,
                            {
                                months: n,
                                monthsShort: i,
                                weekdays: l,
                                weekdaysShort: o,
                                weekdaysMin: u,
                                meridiem: c = a,
                                ordinal: d,
                                longDateFormat: _,
                                week: E = {
                                    dow: 0,
                                    doy: 6
                                }
                            } = t;
                        return {
                            months: s("month", n),
                            monthsShort: s("month", i),
                            weekdays: s("day", l),
                            weekdaysShort: s("day", o),
                            weekdaysMin: s("day", u),
                            meridiem: c,
                            ordinal: "string" == typeof(e = d) ? t => e.replace("%d", "".concat(t)) : e,
                            longDateFormat: _,
                            week: E
                        }
                    }(),
                    l = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                t = e, n = i, e = t.replace(/L[L|T|S]{0,3}/g, (e, i) => {
                    if (/^LLLL/.test(e)) return n.longDateFormat.LLLL;
                    if (/^LLL/.test(e)) return n.longDateFormat.LLL + e.slice(3);
                    if (/^LL/.test(e)) return n.longDateFormat.LL + e.slice(2);
                    else if (/^LTS/.test(e)) return n.longDateFormat.LTS + e.slice(3);
                    else if (/^LT/.test(e)) return n.longDateFormat.LT + e.slice(2);
                    else if (/^L/.test(e) && "[" !== t[i - 1]) return n.longDateFormat.L + e.slice(1);
                    return e
                });
                let o = [],
                    u = {
                        month: !1,
                        dayOfYear: !1,
                        date: !1,
                        day: !1,
                        week: !1,
                        isoweek: !1,
                        year: !1,
                        hour: !1,
                        minutes: !1,
                        seconds: !1,
                        millis: !1,
                        offset: !1
                    },
                    c = e;

                function d(e) {
                    o.push("(" + e + ")")
                }

                function _(e) {
                    c = c.slice(e)
                }
                for (; c.length > 0;) {
                    switch (c.charAt(0)) {
                        case "M":
                            if (u.month = !0, /^MMMM/.test(c)) {
                                d('localeData.months(_month, "'.concat(e, '")')), _(4);
                                continue
                            }
                            if (/^MMM/.test(c)) {
                                d('localeData.monthsShort(_month, "'.concat(e, '")')), _(3);
                                continue
                            }
                            if (/^MM/.test(c)) {
                                d('_month+1 < 10 ? "0" : ""'), d("_month+1"), _(2);
                                continue
                            }
                            if (/^Mo/.test(c)) {
                                d('localeData.ordinal(_month, "M")'), _(2);
                                continue
                            }
                            d("_month + 1"), _(1);
                            continue;
                        case "Q":
                            if (u.month = !0, /^Qo/.test(c)) {
                                d('localeData.ordinal((_month + 1) / 3, "Q")'), _(2);
                                continue
                            }
                            d("Math.ceil((_month + 1) / 3)"), _(1);
                            continue;
                        case "D":
                            if (/^DDD/.test(c)) {
                                if (u.dayOfYear = !0, /^DDDD/.test(c)) {
                                    d('_doy < 100 ? "0" : ""'), d('_doy < 10 ? "0" : ""'), d("_doy"), _(4);
                                    continue
                                }
                                if (/^DDDo/.test(c)) {
                                    d('localeData.ordinal(_doy, "DDD")'), _(4);
                                    continue
                                }
                                d("_doy"), _(3);
                                continue
                            }
                            if (u.date = !0, /^DD/.test(c)) {
                                d('_date < 10 ? "0" : ""'), d("_date"), _(2);
                                continue
                            }
                            if (/^Do/.test(c)) {
                                d('localeData.ordinal(_date, "D")'), _(2);
                                continue
                            }
                            d("_date"), _(1);
                            continue;
                        case "d":
                            if (u.day = !0, /^dddd/.test(c)) {
                                d('localeData.weekdays(_day, "'.concat(e, '")')), _(4);
                                continue
                            }
                            if (/^ddd/.test(c)) {
                                d('localeData.weekdaysShort(_day, "'.concat(e, '")')), _(3);
                                continue
                            }
                            if (/^dd/.test(c)) {
                                d('localeData.weekdaysMin(_day, "'.concat(e, '")')), _(2);
                                continue
                            }
                            if (/^do/.test(c)) {
                                d('localeData.ordinal(_day, "d")'), _(2);
                                continue
                            }
                            d("_day"), _(1);
                            continue;
                        case "e":
                            u.day = !0, d("(_day + 7 - " + +i.week.dow + ") % 7"), _(1);
                            continue;
                        case "E":
                            u.day = !0, d("_day === 0 ? 7 : _day"), _(1);
                            continue;
                        case "w":
                            if (u.week = !0, /^ww/.test(c)) {
                                d('_week < 10 ? "0" : ""'), d("_week"), _(2);
                                continue
                            }
                            if (/^wo/.test(c)) {
                                d('localeData.ordinal(_week, "w")'), _(2);
                                continue
                            }
                            d("_week"), _(1);
                            continue;
                        case "W":
                            if (u.isoweek = !0, /^WW/.test(c)) {
                                d('_i_week < 10 ? "0" : ""'), d("_i_week"), _(2);
                                continue
                            }
                            if (/^Wo/.test(c)) {
                                d('localeData.ordinal(_i_week, "W")'), _(2);
                                continue
                            }
                            d("_i_week"), _(1);
                            continue;
                        case "Y":
                            if (u.year = !0, /^YYYY/.test(c)) {
                                d("_year"), _(4);
                                continue
                            }
                            if (/^YY/.test(c)) {
                                d('(_year % 100) < 10 ? "0" : ""'), d("_year % 100"), _(2);
                                continue
                            }
                            d('_year < 9999 ? _year : "+" + _year'), _(1);
                            continue;
                        case "g":
                            if (u.week = !0, /^gggg/.test(c)) {
                                d("_weekYear"), _(4);
                                continue
                            }
                            if (/^gg/.test(c)) {
                                d('(_weekYear % 100) < 10 ? "0" : ""'), d("_weekYear % 100"), _(2);
                                continue
                            }
                            break;
                        case "G":
                            if (u.isoweek = !0, /^GGGG/.test(c)) {
                                d("_i_weekYear"), _(4);
                                continue
                            }
                            if (/^GG/.test(c)) {
                                d('(_i_weekYear % 100) < 10 ? "0" : ""'), d("_i_weekYear % 100"), _(2);
                                continue
                            }
                            break;
                        case "A":
                            u.hour = !0, u.minutes = !0, d("localeData.meridiem(_hour, _mins, false)"), _(1);
                            continue;
                        case "a":
                            u.hour = !0, u.minutes = !0, d("localeData.meridiem(_hour, _mins, true)"), _(1);
                            continue;
                        case "H":
                            if (u.hour = !0, /^HH/.test(c)) {
                                d('_hour < 10 ? "0" : ""'), d("_hour"), _(2);
                                continue
                            }
                            d("_hour"), _(1);
                            continue;
                        case "h":
                            if (u.hour = !0, /^hh/.test(c)) {
                                d('((_hour+11) % 12) < 9 ? "0" : ""'), d("((_hour+11) % 12) + 1"), _(2);
                                continue
                            }
                            d("((_hour+11) % 12) + 1"), _(1);
                            continue;
                        case "k":
                            if (u.hour = !0, /^kk/.test(c)) {
                                d('_hour > 0 && _hour < 10 ? "0" : ""'), d('_hour === 0 ? "24" : _hour'), _(2);
                                continue
                            }
                            d('_hour === 0 ? "24" : _hour'), _(1);
                            continue;
                        case "m":
                            if (u.minutes = !0, /^mm/.test(c)) {
                                d('_mins < 10 ? "0" : ""'), d("_mins"), _(2);
                                continue
                            }
                            d("_mins"), _(1);
                            continue;
                        case "s":
                            if (u.seconds = !0, /^ss/.test(c)) {
                                d('_secs < 10 ? "0" : ""'), d("_secs"), _(2);
                                continue
                            }
                            d("_secs"), _(1);
                            continue;
                        case "S":
                            if (u.millis = !0, /^SSS/.test(c)) {
                                d('_ms < 100 ? "0" : ""'), d('_ms < 10 ? "0" : ""'), d("_ms");
                                let e = /^S{3,9}/.exec(c);
                                if (null == e) throw Error("ms len regex failed");
                                let t = e[0].length;
                                t > 3 && d('"'.concat(Array(t - 2).join("0"), '"')), _(t);
                                continue
                            }
                            if (/^SS/.test(c)) {
                                d('_ms < 100 ? "0" : ""'), d("Math.floor(_ms/10)"), _(2);
                                continue
                            }
                            d("Math.floor(_ms / 100)"), _(1);
                            continue;
                        case "Z":
                            if (u.offset = !0, /^ZZ/.test(c)) {
                                d('_offs >= 0 ? "+" : "-"'), d('_offH < 10 ? "0" : ""'), d("_offH"), d('_offM < 10 ? "0" : ""'), d("_offM"), _(2);
                                continue
                            }
                            d('_offs >= 0 ? "+" : "-"'), d('_offH < 10 ? "0" : ""'), d("_offH"), d('":"'), d('_offM < 10 ? "0" : ""'), d("_offM"), _(1);
                            continue;
                        case "X":
                            d("Math.floor(d / 1000)"), _(1);
                            continue;
                        case "x":
                            d("d.valueOf()"), _(1);
                            continue;
                        case "[":
                            let t = c.indexOf("]");
                            if (-1 === t) {
                                d('"["'), _(1);
                                continue
                            }
                            d(JSON.stringify(c.slice(1, t))), _(t + 1);
                            continue
                    }
                    d(JSON.stringify(c.charAt(0))), _(1)
                }
                let E = "";
                u.date && (E += "var _date = d.get" + (l ? "UTC" : "") + "Date();\n"), u.month && (E += "var _month = d.get" + (l ? "UTC" : "") + "Month();\n"), u.dayOfYear && (E += "var _startOfYear = new Date(d.valueOf());\n_startOfYear.set" + (l ? "UTC" : "") + "Month(0);\n_startOfYear.set" + (l ? "UTC" : "") + "Date(1);\nvar _doy = Math.round((d - _startOfYear) / 864e5) + 1;\n"), u.day && (E += "var _day = d.get" + (l ? "UTC" : "") + "Day();\n"), u.year && (E += "var _year = d.get" + (l ? "UTC" : "") + "FullYear();\n"), u.hour && (E += "var _hour = d.get" + (l ? "UTC" : "") + "Hours();\n"), u.minutes && (E += "var _mins = d.get" + (l ? "UTC" : "") + "Minutes();\n"), u.seconds && (E += "var _secs = d.get" + (l ? "UTC" : "") + "Seconds();\n"), u.millis && (E += "var _ms = d.get" + (l ? "UTC" : "") + "Milliseconds();\n"), u.offset && (l ? E += "var _offs = 0, _absOffs = 0, _offH = 0, _offM = 0;" : E += "var _offs = -d.getTimezoneOffset();\nvar _absOffs = _offs < 0 ? -_offs : _offs;\nvar _offH = Math.floor(_absOffs / 60);\nvar _offM = _absOffs % 60;\n"), u.week && (E += "var _wend = " + (i.week.doy - i.week.dow) + ";\nvar _ddw = " + +i.week.doy + " - d.get" + (l ? "UTC" : "") + "Day();\nif(_ddw > _wend) _ddw -= 7;\nif(_ddw < _wend - 7) _ddw += 7;\nvar _d2 = new Date(d.valueOf());\n_d2.set" + (l ? "UTC" : "") + "Date(d.get" + (l ? "UTC" : "") + "Date() + _ddw);\nvar _soy2 = new Date(_d2.valueOf());\n_soy2.set" + (l ? "UTC" : "") + "Month(0);\n_soy2.set" + (l ? "UTC" : "") + "Date(1);\nvar _doy2 = Math.round((_d2 - _soy2) / 864e5) + 1;\nvar _week = Math.ceil(_doy2 / 7);\nvar _weekYear = _d2.get" + (l ? "UTC" : "") + "FullYear();\n"), u.isoweek && (E += "var _i_wend = 3;\nvar _i_ddw = 4 - d.get" + (l ? "UTC" : "") + "Day();\nif(_i_ddw > _i_wend) _i_ddw -= 7;\nif(_i_ddw < _i_wend - 7) _i_ddw += 7;\nvar _i_d2 = new Date(d.valueOf());\n_i_d2.set" + (l ? "UTC" : "") + "Date(d.get" + (l ? "UTC" : "") + "Date() + _i_ddw);\nvar _i_soy2 = new Date(_i_d2.valueOf());\n_i_soy2.set" + (l ? "UTC" : "") + "Month(0);\n_i_soy2.set" + (l ? "UTC" : "") + "Date(1);\nvar _i_doy2 = Math.round((_i_d2 - _i_soy2) / 864e5) + 1;\nvar _i_week = Math.ceil(_i_doy2 / 7);\nvar _i_weekYear = _i_d2.get" + (l ? "UTC" : "") + "FullYear();\n"), E += 'return (\n"" +\n'.concat(o.join(" +\n"), "\n);");
                let f = Function("d", "localeData", E);
                return e => f(e, i)
            }
        },
        713725: function(e, t, n) {
            "use strict";

            function i(e, t) {
                if (e.length < 2) return [];
                let n = [],
                    i = e[0];
                for (let r = 1; r < e.length; r++) {
                    let s = e[r];
                    n.push(t(i, s)), i = s
                }
                return n
            }
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            })
        },
        180748: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setFontSize: function() {
                    return c
                },
                setMessageGroupSpacing: function() {
                    return d
                },
                setZoom: function() {
                    return _
                },
                enableKeyboardMode: function() {
                    return E
                },
                disableKeyboardMode: function() {
                    return f
                },
                toggleDesaturateUserColors: function() {
                    return p
                },
                toggleDarkSidebar: function() {
                    return h
                },
                keyboardNavigationExplainerModalSeen: function() {
                    return S
                },
                systemPrefersReducedMotionChanged: function() {
                    return T
                },
                setSaturation: function() {
                    return I
                },
                setPrefersReducedMotion: function() {
                    return m
                },
                setSyncForcedColors: function() {
                    return g
                },
                systemColorPreferencesChanged: function() {
                    return A
                },
                systemPrefersContrastChanged: function() {
                    return C
                },
                setAlwaysShowLinkDecorations: function() {
                    return R
                },
                setRoleStyle: function() {
                    return N
                },
                toggleSubmitButton: function() {
                    return v
                },
                toggleSyncProfileThemeWithUserTheme: function() {
                    return O
                }
            });
            var i = n("913144"),
                r = n("452804"),
                s = n("599110"),
                a = n("206230"),
                l = n("49111"),
                o = n("468200"),
                u = n("560241");

            function c(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_FONT_SIZE",
                    fontSize: e
                })
            }

            function d() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_MESSAGE_GROUP_SPACING",
                    messageGroupSpacing: e
                })
            }

            function _(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_ZOOM",
                    zoom: e
                })
            }

            function E() {
                i.default.dispatch({
                    type: "ACCESSIBILITY_KEYBOARD_MODE_ENABLE"
                }), s.default.track(l.AnalyticEvents.KEYBOARD_MODE_TOGGLED, {
                    enabled: !0
                })
            }

            function f() {
                i.default.dispatch({
                    type: "ACCESSIBILITY_KEYBOARD_MODE_DISABLE"
                }), s.default.track(l.AnalyticEvents.KEYBOARD_MODE_TOGGLED, {
                    enabled: !1
                })
            }

            function p() {
                i.default.dispatch({
                    type: "ACCESSIBILITY_DESATURATE_ROLES_TOGGLE"
                })
            }

            function h() {
                i.default.dispatch({
                    type: "ACCESSIBILITY_DARK_SIDEBAR_TOGGLE"
                })
            }

            function S() {
                i.default.dispatch({
                    type: "KEYBOARD_NAVIGATION_EXPLAINER_MODAL_SEEN"
                })
            }

            function T(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SYSTEM_PREFERS_REDUCED_MOTION_CHANGED",
                    systemPrefersReducedMotion: e
                })
            }

            function I(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_SATURATION",
                    saturation: e
                })
            }

            function m(e) {
                let t = a.default.useReducedMotion;
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_PREFERS_REDUCED_MOTION",
                    prefersReducedMotion: e
                });
                let n = a.default.useReducedMotion;
                !t && n ? r.default.applySettingsOverride({
                    gifAutoPlay: {
                        value: !1,
                        reasonKey: o.SettingsOverrideReasonKeys.REDUCED_MOTION
                    },
                    animateEmoji: {
                        value: !1,
                        reasonKey: o.SettingsOverrideReasonKeys.REDUCED_MOTION
                    },
                    animateStickers: {
                        value: u.StickerAnimationSettings.ANIMATE_ON_INTERACTION,
                        reasonKey: o.SettingsOverrideReasonKeys.REDUCED_MOTION_STICKERS
                    }
                }) : t && !n && r.default.clearSettingsOverride("gifAutoPlay", "animateEmoji", "animateStickers")
            }

            function g(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_SYNC_FORCED_COLORS",
                    syncForcedColors: e
                })
            }

            function A(e, t) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SYSTEM_COLOR_PREFERENCES_CHANGED",
                    systemPrefersColorScheme: e,
                    systemForcedColors: t
                })
            }

            function C(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SYSTEM_PREFERS_CONTRAST_CHANGED",
                    systemPrefersContrast: e
                })
            }

            function R(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_ALWAYS_SHOW_LINK_DECORATIONS",
                    alwaysShowLinkDecorations: e
                })
            }

            function N(e) {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SET_ROLE_STYLE",
                    roleStyle: e
                }), s.default.track(l.AnalyticEvents.ROLE_STYLE_SETTING_UPDATED, {
                    role_style: e
                })
            }

            function v() {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SUBMIT_BUTTON_TOGGLE"
                })
            }

            function O() {
                i.default.dispatch({
                    type: "ACCESSIBILITY_SYNC_PROFILE_THEME_WITH_USER_THEME_TOGGLE"
                })
            }
        },
        727538: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                AccessibilityFeatureFlags: function() {
                    return i
                }
            }), (r = i || (i = {}))[r.NONE = 0] = "NONE", r[r.SCREENREADER = 1] = "SCREENREADER", r[r.REDUCED_MOTION = 2] = "REDUCED_MOTION", r[r.REDUCED_MOTION_PREFERS_CROSSFADES = 4194304] = "REDUCED_MOTION_PREFERS_CROSSFADES", r[r.REDUCED_TRANSPARENCY = 4] = "REDUCED_TRANSPARENCY", r[r.HIGH_CONTRAST = 8] = "HIGH_CONTRAST", r[r.BOLD_TEXT = 16] = "BOLD_TEXT", r[r.GRAYSCALE = 32] = "GRAYSCALE", r[r.INVERT_COLORS = 64] = "INVERT_COLORS", r[r.PREFERS_COLOR_SCHEME_LIGHT = 128] = "PREFERS_COLOR_SCHEME_LIGHT", r[r.PREFERS_COLOR_SCHEME_DARK = 256] = "PREFERS_COLOR_SCHEME_DARK", r[r.CHAT_FONT_SCALE_INCREASED = 512] = "CHAT_FONT_SCALE_INCREASED", r[r.CHAT_FONT_SCALE_DECREASED = 1024] = "CHAT_FONT_SCALE_DECREASED", r[r.ZOOM_LEVEL_INCREASED = 2048] = "ZOOM_LEVEL_INCREASED", r[r.ZOOM_LEVEL_DECREASED = 4096] = "ZOOM_LEVEL_DECREASED", r[r.MESSAGE_GROUP_SPACING_INCREASED = 8192] = "MESSAGE_GROUP_SPACING_INCREASED", r[r.MESSAGE_GROUP_SPACING_DECREASED = 16384] = "MESSAGE_GROUP_SPACING_DECREASED", r[r.DARK_SIDEBAR = 32768] = "DARK_SIDEBAR", r[r.REDUCED_MOTION_FROM_USER_SETTINGS = 65536] = "REDUCED_MOTION_FROM_USER_SETTINGS", r[r.SATURATION_LEVEL_DECREASED = 131072] = "SATURATION_LEVEL_DECREASED", r[r.FORCED_COLORS = 262144] = "FORCED_COLORS", r[r.FORCED_COLORS_FROM_USER_SETTINGS = 524288] = "FORCED_COLORS_FROM_USER_SETTINGS", r[r.ROLE_STYLE_ADJUSTED = 1048576] = "ROLE_STYLE_ADJUSTED", r[r.SYNC_PROFILE_THEME_WITH_USER_THEME = 2097152] = "SYNC_PROFILE_THEME_WITH_USER_THEME"
        },
        954016: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ACTIVITY_INVITE_COVER_IMAGE_SIZE: function() {
                    return O
                },
                validStreamURL: function() {
                    return D
                },
                XBOX_ACTIVITY_APPLICATION_ID: function() {
                    return L
                },
                END_GAME_APPLICATION_ID: function() {
                    return M
                },
                JAM_SPACE_APPLICATION_ID: function() {
                    return y
                },
                GARTIC_PHONE_APPLICATION_ID: function() {
                    return U
                },
                COLOR_TOGETHER_APPLICATION_ID: function() {
                    return G
                },
                SPELL_CAST_APPLICATION_ID: function() {
                    return w
                },
                LAND_IO_APPLICATION_ID: function() {
                    return x
                },
                WATCH_YOUTUBE_PROD_APP_ID: function() {
                    return k
                },
                KWIM_APPLICATION_ID: function() {
                    return F
                },
                BOBBLE_LEAGUE_APPLICATION_ID: function() {
                    return B
                },
                CHECKERS_IN_THE_PARK_APP_ID: function() {
                    return V
                },
                CHESS_IN_THE_PARK_APP_ID: function() {
                    return H
                },
                BLAZIN_8S_APPLICATION_ID: function() {
                    return j
                },
                POKER_NIGHT_APPLICATION_ID: function() {
                    return Y
                },
                BYS_LETTER_APP_ID: function() {
                    return W
                },
                BYS_TWOODLE_APP_ID: function() {
                    return K
                },
                CHEF_SHOWDOWN_APPLICATION_ID: function() {
                    return z
                },
                PUTT_PARTY_APPLICATION_ID: function() {
                    return Z
                },
                KRUNKER_STRIKE_APPLICATION_ID: function() {
                    return q
                },
                ImageSizes: function() {
                    return X
                },
                STAFF_RELEASE_PHASES: function() {
                    return Q
                },
                ActivityFeedbackReasons: function() {
                    return f
                },
                ActivityIntent: function() {
                    return p
                },
                ActivityPlatform: function() {
                    return h
                },
                ActivityAccessStatus: function() {
                    return T
                },
                EmbeddedActivityUpdateCodes: function() {
                    return I
                },
                OrientationLockState: function() {
                    return m
                },
                ActivityShelfSlides: function() {
                    return g
                },
                ACTIVITY_SHELF_WEB_MODAL_KEY: function() {
                    return J
                },
                APPLICATIONS_WITH_ALLOWED_POPUPS: function() {
                    return $
                },
                APPLICATIONS_WITH_NO_REFFERER: function() {
                    return ee
                },
                WhatsNewSection: function() {
                    return A
                },
                ActivityScreenOrientation: function() {
                    return C
                },
                ActivityLayoutMode: function() {
                    return R
                },
                DEFAULT_EMBEDDED_ACTIVITY_CONFIG: function() {
                    return en
                },
                SUPPORTED_ACTIVITY_IN_TEXT_CHANNEL_TYPES: function() {
                    return ei
                }
            });
            var i, r, s, a, l, o, u, c, d, _, E, f, p, h, S, T, I, m, g, A, C, R, N = n("798609"),
                v = n("49111");
            let O = 160,
                D = /^https?:\/\/(?:www\.)?(twitch\.tv\/(.+)|youtube.com\/watch\?v=)/,
                L = "438122941302046720",
                M = "773336526917861400",
                P = "880218832743055411",
                b = "1050941315912835122",
                y = "1070087967294631976",
                U = "1007373802981822582",
                G = "1039835161136746497",
                w = "852509694341283871",
                x = "903769130790969345",
                k = "880218394199220334",
                F = "1078728822972764312",
                B = "947957217959759964",
                V = "832013003968348200",
                H = "832012774040141894",
                j = "832025144389533716",
                Y = "755827207812677713",
                W = "879863686565621790",
                K = "902271654783242291",
                z = "1037680572660727838",
                Z = "945737671223947305",
                q = "1011683823555199066",
                X = {
                    SMALL: 64,
                    LARGE: 160
                },
                Q = ["in_development", "activities_team", "employee_release"];
            (i = f || (f = {})).FAILED_LOAD = "FAILED_LOAD", i.LAGGING = "LAGGING", i.CONFUSING = "CONFUSING", i.NOT_FUN = "NOT_FUN", i.OTHER = "OTHER", (r = p || (p = {}))[r.PLAY = 0] = "PLAY", r[r.SPECTATE = 1] = "SPECTATE", (s = h || (h = {})).DESKTOP = "desktop", s.MOBILE = "mobile", (a = S || (S = {})).BETRAYAL_MARKETING_TOOLTIP = "BETRAYAL_MARKETING_TOOLTIP", a.FISHINGTON_MARKETING_TOOLTIP = "FISHINGTON_MARKETING_TOOLTIP", a.POKER_MARKETING_TOOLTIP = "POKER_MARKETING_TOOLTIP", a.YOUTUBE_MARKETING_TOOLTIP = "YOUTUBE_MARKETING_TOOLTIP", (l = T || (T = {}))[l.UNLOCKED = 0] = "UNLOCKED", l[l.NEEDS_NITRO = 1] = "NEEDS_NITRO", (o = I || (I = {}))[o.NO_UPDATE = 0] = "NO_UPDATE", o[o.ACTIVITY_STATE_UPDATE = 1] = "ACTIVITY_STATE_UPDATE", o[o.ACTIVITY_STARTED = 2] = "ACTIVITY_STARTED", o[o.ACTIVITY_ENDED = 3] = "ACTIVITY_ENDED", o[o.USER_JOINED = 4] = "USER_JOINED", o[o.USER_LEFT = 5] = "USER_LEFT", o[o.ACTIVITY_TERMINATED_NO_ELIGIBLE_HOST = 6] = "ACTIVITY_TERMINATED_NO_ELIGIBLE_HOST", (u = m || (m = {}))[u.UNLOCKED = 1] = "UNLOCKED", u[u.PORTRAIT = 2] = "PORTRAIT", u[u.LANDSCAPE = 3] = "LANDSCAPE", (c = g || (g = {}))[c.DIRECTORY = 0] = "DIRECTORY", c[c.SELECT_CHANNEL = 1] = "SELECT_CHANNEL", c[c.DETAIL_PAGE = 2] = "DETAIL_PAGE";
            let J = "activity-shelf",
                $ = new Set(["755600276941176913", P, b, k]),
                ee = new Set([P, b, k]);
            (d = A || (A = {})).DISCORD_TURNS_8 = "DISCORD_TURNS_8", d.GDM_ACTIVITIES = "GDM_ACTIVITIES", d.PUTT_PARTY = "PUTT_PARTY", d.JAMSPACE_OLD = "JAMSPACE", d.JAMSPACE = "JAMSPACE2", d.POKER = "POKER", d.FREE = "FREE", (_ = C || (C = {}))[_.PORTRAIT = 0] = "PORTRAIT", _[_.LANDSCAPE = 1] = "LANDSCAPE", (E = R || (R = {}))[E.FOCUSED = 0] = "FOCUSED", E[E.PIP = 1] = "PIP", E[E.GRID = 2] = "GRID";
            let et = {
                    label_type: N.EmbeddedActivityLabelTypes.NONE,
                    release_phase: "",
                    label_until: null
                },
                en = {
                    application_id: "",
                    requires_age_gate: !1,
                    default_orientation_lock_state: m.UNLOCKED,
                    tablet_default_orientation_lock_state: m.UNLOCKED,
                    supported_platforms: [N.EmbeddedActivitySupportedPlatforms.WEB],
                    client_platform_config: {
                        [N.EmbeddedActivitySupportedPlatforms.WEB]: et,
                        [N.EmbeddedActivitySupportedPlatforms.IOS]: et,
                        [N.EmbeddedActivitySupportedPlatforms.ANDROID]: et
                    },
                    has_csp_exception: !1
                },
                ei = [v.ChannelTypes.GUILD_TEXT, v.ChannelTypes.DM, v.ChannelTypes.GROUP_DM]
        },
        586391: function(e, t, n) {
            "use strict";
            var i, r, s, a;
            n.r(t), n.d(t, {
                AGE_GATE_REGISTER_TIMEOUT_MS: function() {
                    return l
                },
                NEW_USER_AGE_GATE_MODAL_KEY: function() {
                    return o
                },
                EXISTING_USER_AGE_GATE_MODAL_KEY: function() {
                    return u
                },
                AgeGateSource: function() {
                    return i
                },
                AgeGateAnalyticAction: function() {
                    return r
                }
            });
            let l = 72e5,
                o = "new-user-age-gate-modal",
                u = "existing-user-age-gate-modal";
            (s = i || (i = {})).AUTH = "Register Age Gate", s.NEW_USER_FLOW = "NUF", s.CLAIM_ACCOUNT = "Claim Age Gate", s.NSFW_CHANNEL = "NSFW Channel", s.NSFW_SERVER = "NSFW Server", s.NSFW_SERVER_INVITE = "NSFW Server Invite", s.NSFW_VOICE_CHANNEL = "NSFW Voice Channel", s.FAMILY_CENTER = "Family Center", s.REGISTER = "Register", s.DEEP_LINK_PROMPT = "Deep Link Prompt", s.UNSPECIFIED = "Unspecified", (a = r || (r = {})).AGE_GATE_OPEN = "AGE_GATE_OPEN", a.AGE_GATE_CLOSE = "AGE_GATE_CLOSE", a.AGE_GATE_SUBMITTED = "AGE_GATE_SUBMITTED", a.AGE_GATE_SUCCESS = "AGE_GATE_SUCCESS", a.AGE_GATE_FAILURE = "AGE_GATE_FAILURE", a.AGE_GATE_UNDERAGE = "AGE_GATE_UNDERAGE", a.AGE_GATE_PREVENT_UNDERAGE_REGISTRATION = "AGE_GATE_PREVENT_UNDERAGE_REGISTRATION", a.AGE_GATE_LOGOUT_UNDERAGE_NEW_USER = "AGE_GATE_LOGOUT_UNDERAGE_NEW_USER"
        },
        939011: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setCurrentImpression: function() {
                    return l
                },
                cleanupImpression: function() {
                    return o
                },
                setDebugTrackedData: function() {
                    return u
                },
                useImpressionStore: function() {
                    return c
                },
                getLocation: function() {
                    return d
                },
                getImpressionStack: function() {
                    return _
                }
            });
            var i = n("710835"),
                r = n("64379");
            let s = Object.freeze({
                    debugTrackedData: null,
                    impressions: []
                }),
                a = (0, i.default)(e => s),
                l = e => {
                    a.setState(t => ({
                        impressions: [...t.impressions, e]
                    }))
                },
                o = e => {
                    a.setState(t => ({
                        impressions: t.impressions.filter(t => t.sequenceId !== e.sequenceId)
                    }))
                },
                u = (e, t) => {
                    a.setState(() => ({
                        debugTrackedData: {
                            name: e,
                            ...t
                        }
                    }))
                },
                c = a;

            function d() {
                let e = {};
                return a.getState().impressions.forEach(t => {
                    t.type === r.ImpressionTypes.PAGE ? e.page = t.name : e.section = t.name
                }), e
            }

            function _() {
                return a.getState().impressions
            }
        },
        685665: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("376929"),
                a = n.n(s),
                l = n("427964"),
                o = n.n(l);
            let u = r.createContext([]);

            function c(e) {
                let {
                    children: t,
                    currentContext: n
                } = e;
                return (0, i.jsx)(u.Provider, {
                    value: n,
                    children: t
                })
            }

            function d(e, t) {
                if (0 === t.length) return e;
                let n = o.flatten(t);
                return [...e, ...n]
            }

            function _() {
                for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                let [s, l] = r.useState(t), o = r.useContext(u), _ = r.useMemo(() => d(o, s), [s, o]), E = r.useMemo(() => d(o, s.slice(0, s.length - 1)), [s, o]);
                r.useEffect(() => {
                    !a(t, s) && l(t)
                }, [t]);
                let f = r.useCallback(e => {
                    let {
                        children: t
                    } = e;
                    return (0, i.jsx)(c, {
                        currentContext: _,
                        children: t
                    })
                }, [_]);
                return {
                    AnalyticsLocationProvider: f,
                    analyticsLocations: _,
                    sourceAnalyticsLocations: E
                }
            }
        },
        802493: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("498225"),
                r = n("625760"),
                s = n("913144"),
                a = n("271938"),
                l = n("723939");
            r.TableId.KvCache, r.TableId.KvCache;
            class o extends i.Store {
                initialize() {
                    this.waitFor(a.default)
                }
                constructor(...e) {
                    super(...e), this.database = e => l.default.database(null != e ? e : a.default.getId()), this.channels = u(e => new r.GuildEntityDao("guild_channels", r.TableId.KvCache, e)), this.channelsTemp = u(e => new r.GuildDao("guild_channels_temp", r.TableId.KvCache, e)), this.basicChannels = u(e => new r.Dao("basic_channels", r.TableId.KvCache, e)), this.syncedBasicChannels = u(e => new r.Dao("basic_channels_synced", r.TableId.KvCache, e)), this.cache = u(e => new r.Dao("cache", r.TableId.KvCache, e)), this.emojis = u(e => new r.GuildEntityDao("guild_emojis", r.TableId.KvCache, e)), this.guilds = u(e => new r.EntityDao("guilds", r.TableId.KvCache, e)), this.messages = u(e => new r.MessageDao("messages", r.TableId.Messages, e)), this.stickers = u(e => new r.GuildEntityDao("guild_stickers", r.TableId.KvCache, e)), this.versions = u(e => new r.EntityDao("guild_versions", r.TableId.KvCache, e)), this.channelsTransaction = e => this.channels(e.database).upgradeTransaction(e), this.channelsTempTransaction = e => this.channelsTemp(e.database).upgradeTransaction(e), this.basicChannelsTransaction = e => this.basicChannels(e.database).upgradeTransaction(e), this.syncedBasicChannelsTransaction = e => this.syncedBasicChannels(e.database).upgradeTransaction(e), this.cacheTransaction = e => this.cache(e.database).upgradeTransaction(e), this.emojisTransaction = e => this.emojis(e.database).upgradeTransaction(e), this.guildsTransaction = e => this.guilds(e.database).upgradeTransaction(e), this.messagesTransaction = e => this.messages(e.database).upgradeTransaction(e), this.stickersTransaction = e => this.stickers(e.database).upgradeTransaction(e), this.versionsTransaction = e => this.versions(e.database).upgradeTransaction(e)
                }
            }

            function u(e) {
                return function(t) {
                    let n = null != t ? t : l.default.database(a.default.getId());
                    return null == n ? null : e(n)
                }
            }
            var c = new o(s.default, {})
        },
        595525: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                tryLoadAsync: function() {
                    return l
                },
                tryLoadOrResetCacheGateway: function() {
                    return o
                }
            });
            var i = n("913144"),
                r = n("605250"),
                s = n("723939");
            let a = new r.default("TryLoad");
            async function l(e) {
                try {
                    return await e()
                } catch (e) {
                    return a.log("database load failed.", e), null
                }
            }

            function o(e, t) {
                try {
                    return t()
                } catch (t) {
                    return a.log("".concat(e, ": exception thrown, resetting socket."), t, t.stack), s.default.replaceDisableAllDatabases("tryLoadOrResetCacheGateway (".concat(e, ")")), i.default.dispatch({
                        type: "RESET_CONNECTION",
                        badCache: !0
                    }), null
                }
            }
        },
        860255: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("605250"),
                r = n("802493");
            let s = new i.default("ChannelReader");
            class a {
                static getSync(e, t) {
                    let n = performance.now(),
                        i = r.default.channels(e).getManySyncUnsafe(t),
                        a = performance.now() - n;
                    return s.log("synchronously loaded in ".concat(a, "ms (guild: ").concat(t, ", channels: ").concat(i.length, ")")), [i, a]
                }
                static async getAsync(e, t) {
                    let n = performance.now(),
                        i = await r.default.channels(e).getMany(t),
                        a = performance.now() - n;
                    return s.verbose("loaded in ".concat(a, "ms (guild: ").concat(t, ", channels: ").concat(i.length, ")")), i
                }
                static getGuildIdsSync() {
                    try {
                        var e, t;
                        let n = null !== (t = null === (e = r.default.channels()) || void 0 === e ? void 0 : e.getGuildIdsSyncUnsafe()) && void 0 !== t ? t : [],
                            i = n.filter(e => null !== e && "string" == typeof e);
                        return new Set(i)
                    } catch (e) {
                        return s.warn("couldn't get guild ids", e), new Set
                    }
                }
            }
        },
        846527: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var i = n("335143"),
                r = n("913144"),
                s = n("605250"),
                a = n("778689");
            let l = new s.default("BasicChannelCacheStore");
            class o extends i.default {
                hasChannel(e) {
                    return this.channels.has(e)
                }
                hasGuild(e) {
                    return this.guilds.has(e)
                }
                getBasicChannel(e) {
                    var t;
                    return null !== (t = this.channels.get(e)) && void 0 !== t ? t : null
                }
                getGuildBasicChannels(e) {
                    var t;
                    return null !== (t = this.guilds.get(e)) && void 0 !== t ? t : null
                }
                invalidate(e) {
                    this.delete(e)
                }
                restored(e) {
                    this.delete(e)
                }
                initialize() {
                    this.waitFor(a.default)
                }
                handleCacheLoadedLazy(e) {
                    for (let [t, n] of(this.guilds = new Map, this.channels = new Map, e.basicGuildChannels))
                        for (let e of (this.guilds.set(t, Object.fromEntries(n.map(e => [e.id, e]))), n)) this.channels.set(e.id, e)
                }
                handleCacheLoadedLazyNoCache(e) {
                    this.guilds.clear(), this.channels.clear()
                }
                handleConnectionOpen(e) {
                    let t = a.default.allGuildIds();
                    for (let e of this.guilds.keys()) !t.has(e) && this.delete(e)
                }
                handleLogout(e) {
                    this.guilds.clear(), this.channels.clear()
                }
                delete(e) {
                    var t;
                    for (let n in null !== (t = this.guilds.get(e)) && void 0 !== t ? t : {}) this.channels.delete(n);
                    this.guilds.delete(e)
                }
                constructor() {
                    super(r.default, {
                        CACHE_LOADED_LAZY_NO_CACHE: e => this.handleCacheLoadedLazyNoCache(e),
                        CACHE_LOADED_LAZY: e => this.handleCacheLoadedLazy(e),
                        CONNECTION_OPEN: e => this.handleConnectionOpen(e),
                        LOGOUT: e => this.handleLogout(e)
                    }), this.channels = new Map, this.guilds = new Map
                }
            }
            var u = new o
        },
        723939: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var i = n("498225"),
                r = n("625760"),
                s = n("913144"),
                a = n("605250"),
                l = n("271938"),
                o = n("496533");
            let u = new a.default("DatabaseManager");
            class c extends i.Store {
                initialize() {
                    this.waitFor(l.default), this.carefullySpeculativelyOpen(o.getUserId()), this.handleAuthenticationStoreChanged(), l.default.addChangeListener(() => this.handleAuthenticationStoreChanged())
                }
                databaseName(e) {
                    return d(e)
                }
                database(e) {
                    if (null != e) {
                        var t;
                        return null !== (t = this.databases.get(e)) && void 0 !== t ? t : null
                    }
                    return null
                }
                carefullyOpenDatabase(e) {
                    if (null != e && !this.databases.has(e)) {
                        let t = function(e) {
                            return null
                        }(e);
                        u.verbose("added database (".concat(e, " → ").concat(t, ")")), this.databases.set(e, t), this.emitChange()
                    }
                    return this.database(e)
                }
                replaceDisableAllDatabases(e) {
                    for (let t of (u.info("disabling and nulling all databases (reason: ".concat(e, ")")), this.databases.keys())) {
                        let n = this.databases.get(t);
                        null == n || n.disable(e), null == n || n.close(), this.databases.set(t, null)
                    }
                    this.emitChange()
                }
                remove(e) {
                    let t = this.databases.get(e);
                    u.log("removing database (user: ".concat(e, ", database: ").concat(t, ")")), null == t || t.close(), this.databases.delete(e), this.emitChange()
                }
                handleClearCaches() {
                    this.replaceDisableAllDatabases("DatabaseManager (action: CLEAR_CACHES)")
                }
                handleConnectionOpen() {
                    let e = l.default.getId(),
                        t = this.databases.get(e),
                        n = null == t ? void 0 : t.state();
                    null == t && n !== r.DatabaseState.Open && this.remove(e), this.carefullyOpenDatabase(e)
                }
                handleAuthenticationStoreChanged() {
                    let e = l.default.getId(),
                        t = this.activeUserId;
                    if (e !== t) {
                        let n = this.databases.get(t);
                        u.verbose("active user changed (now: ".concat(e, ", was: ").concat(t, ", was: ").concat(n, ")")), null == n || n.close(), o.setUserId(e), this.activeUserId = e, this.databases.delete(t)
                    }
                }
                async carefullySpeculativelyOpen(e) {
                    if (null != e) {
                        let t = await _(e);
                        if (null == t || this.databases.has(e)) u.verbose("discarding speculative database (".concat(e, " → ").concat(t, ")")), null == t || t.close();
                        else u.verbose("added speculative database (".concat(e, " → ").concat(t, ")")), this.databases.set(e, t), this.emitChange()
                    }
                }
                constructor() {
                    super(s.default, {
                        CLEAR_CACHES: () => this.handleClearCaches(),
                        CONNECTION_CLOSED: () => this.handleAuthenticationStoreChanged(),
                        CONNECTION_OPEN: () => this.handleConnectionOpen(),
                        LOGOUT: () => this.handleAuthenticationStoreChanged()
                    }, s.DispatchBand.Early), this.databases = new Map, this.activeUserId = null
                }
            }

            function d(e) {
                return "@account.".concat(e)
            }
            async function _(e) {
                var t;
                return null
            }
            var E = new c
        },
        496533: function(e, t, n) {
            "use strict";

            function i() {
                return null
            }

            function r(e) {}
            n.r(t), n.d(t, {
                getUserId: function() {
                    return i
                },
                setUserId: function() {
                    return r
                }
            })
        },
        519820: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("665618");
            let a = {};
            class l extends i.default.Store {
                getGuild(e) {
                    return a[e]
                }
            }
            l.displayName = "AuthInviteStore";
            var o = new l(r.default, {
                AUTH_INVITE_UPDATE: function(e) {
                    let {
                        invite: t
                    } = e, n = t.guild;
                    if (null == n) return !1;
                    a[n.id] = (0, s.fromInviteGuild)(n)
                }
            })
        },
        573135: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DECORATION_TO_AVATAR_RATIO: function() {
                    return r
                },
                AvatarDecorationBorderSizes: function() {
                    return s
                }
            });
            var i = n("52904");
            let r = 1.2,
                s = {
                    [i.AvatarSizes.SIZE_56]: 4,
                    [i.AvatarSizes.SIZE_80]: 6,
                    [i.AvatarSizes.SIZE_120]: 8
                }
        },
        234251: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isAnimatedAvatarDecoration: function() {
                    return i
                },
                isEqualAvatarDecoration: function() {
                    return r
                },
                parseAvatarDecorationData: function() {
                    return s
                }
            });
            let i = e => e.split("_", 2).includes("a"),
                r = (e, t) => null == e || null == t ? e === t : e.asset === t.asset && e.skuId === t.skuId,
                s = e => "object" == typeof e && null != e && "asset" in e && "string" == typeof e.asset ? "sku_id" in e && "string" == typeof e.sku_id ? {
                    asset: e.asset,
                    skuId: e.sku_id
                } : "skuId" in e && "string" == typeof e.skuId ? {
                    asset: e.asset,
                    skuId: e.skuId
                } : {
                    asset: e.asset
                } : null
        },
        9759: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CAN_VIEW_BROADCASTS_BUCKETS: function() {
                    return s
                },
                default: function() {
                    return a
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-04_broadcasting",
                    label: "Go Live Broadcasting",
                    defaultConfig: {
                        canBroadcast: !1,
                        canViewBroadcasts: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Allow user to Broadcast to friends & guilds",
                        config: {
                            canBroadcast: !0,
                            canViewBroadcasts: !0
                        }
                    }, {
                        id: 2,
                        label: "Cannot broadcast, cannot view broadcasts",
                        config: {
                            canBroadcast: !1,
                            canViewBroadcasts: !0
                        }
                    }]
                }),
                s = r.definition.treatments.filter(e => e.config.canViewBroadcasts).map(e => e.id);
            var a = r
        },
        274870: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsBroadcastingGDM: function() {
                    return a
                },
                getIsBroadcastingGDM: function() {
                    return l
                },
                filterBroadcastingGDMs: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("42203"),
                s = n("9759");

            function a(e) {
                let {
                    canViewBroadcasts: t
                } = s.default.useExperiment({
                    location: "use_is_broadcasting_gdm"
                }, {
                    autoTrackExposure: !1
                }), n = (0, i.useStateFromStores)([r.default], () => r.default.getChannel(e));
                return !!t && !!(null == n ? void 0 : n.isBroadcastChannel())
            }

            function l(e) {
                let {
                    canViewBroadcasts: t
                } = s.default.getCurrentConfig({
                    location: "get_is_broadcasting_gdm"
                }, {
                    autoTrackExposure: !1
                });
                if (!t) return !1;
                let n = r.default.getChannel(e);
                return !!(null == n ? void 0 : n.isBroadcastChannel())
            }

            function o(e) {
                return e.filter(e => {
                    let t = l(e);
                    return !t
                })
            }
        },
        180855: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BUILD_OVERRIDE_TARGET_NAMES: function() {
                    return i
                },
                BUILD_OVERRIDE_EXPIRATION_OPTIONS: function() {
                    return r
                },
                BUILD_OVERRIDE_RELEASE_CHANNEL_OPTIONS: function() {
                    return s
                },
                BUILD_OVERRIDE_COOKIE_NAME: function() {
                    return a
                }
            });
            let i = {
                    discord_marketing: "Discord Marketing",
                    discord_web: "Discord Web",
                    discord_ios: "Discord iOS",
                    discord_android: "Discord Android"
                },
                r = [{
                    value: 3600,
                    label: "1 Hour"
                }, {
                    value: 86400,
                    label: "1 Day"
                }, {
                    value: 259200,
                    label: "3 Days"
                }, {
                    value: 604800,
                    label: "1 Week"
                }, {
                    value: 1209600,
                    label: "2 Weeks"
                }, {
                    value: 1814400,
                    label: "3 Weeks"
                }, {
                    value: 2628e3,
                    label: "1 Month"
                }],
                s = [{
                    value: "all",
                    label: "All"
                }, {
                    value: "canary",
                    label: "Canary"
                }, {
                    value: "ptb",
                    label: "PTB"
                }, {
                    value: "stable",
                    label: "Stable"
                }, {
                    value: "staging",
                    label: "Staging"
                }],
                a = "buildOverride"
        },
        355025: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                APP_VERSION: function() {
                    return c
                },
                getAPIEndpoint: function() {
                    return d
                },
                getBuildOverride: function() {
                    return _
                },
                getBuildOverrideMeta: function() {
                    return E
                },
                probablyHasBuildOverride: function() {
                    return f
                },
                getBuildOverrideExperiments: function() {
                    return p
                },
                isBuildOverrideLink: function() {
                    return S
                },
                validateURL: function() {
                    return m
                }
            });
            var i = n("303222"),
                r = n("498997"),
                s = n("990746"),
                a = n("773336"),
                l = n("253981"),
                o = n("180855");
            n("49111");
            let u = void 0,
                c = (0, a.isAndroid)() ? u.Version.split(" - ")[0] : (0, a.isIOS)() ? u.Version : void 0;

            function d(e) {
                return "".concat(location.protocol, "//").concat(location.host).concat(e)
            }

            function _() {
                let e = l.default.safeParseWithQuery(d("/__development/build_overrides"));
                return null == e ? Promise.resolve(null) : (e.search = null, c && (e.query.version = c), s.default.get({
                    url: r.format(e),
                    oldFormErrors: !0
                }).then(e => e.body || null, () => null))
            }

            function E(e) {
                let t = l.default.safeParseWithQuery(e);
                return null == t ? Promise.resolve(null) : (t.search = null, t.query.meta = "true", c && (t.query.version = c), t.host = window.location.host, s.default.get({
                    url: r.format(t),
                    oldFormErrors: !0
                }).then(e => e.body || null, () => null))
            }

            function f() {
                return -1 !== window.document.cookie.indexOf("".concat(o.BUILD_OVERRIDE_COOKIE_NAME, "="))
            }

            function p() {
                try {
                    var e;
                    let t = i.parse(window.document.cookie)[o.BUILD_OVERRIDE_COOKIE_NAME];
                    if (null == t) return {};
                    let n = JSON.parse(atob(t.substring(t.indexOf(".") + 1)));
                    return null !== (e = n.$meta.experiments) && void 0 !== e ? e : {}
                } catch (e) {
                    return {}
                }
            }
            let h = RegExp("^https://(?:ptb\\.|canary\\.)?(discordapp|discord)\\.com/__development/link?[\\S]+$", "i");

            function S(e) {
                return null != e && h.test(e)
            }
            let T = new Set(["canary.discord.com", "ptb.discord.com", "discord.com", "canary.discordapp.com", "ptb.discordapp.com", "discordapp.com"]),
                I = new Set(["/__development/link", "/__development/link/"]);

            function m(e) {
                let t = l.default.safeParseWithQuery(e);
                if (null == t || !T.has(t.hostname) || !("s" in t.query) || !I.has(t.pathname)) return null;
                for (let e in t.query) "s" !== e && delete t.query[e];
                return {
                    payload: t.query.s,
                    url: r.format(t)
                }
            }
        },
        1544: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                },
                deserializeChannelEntries: function() {
                    return s
                },
                deserializeChannel: function() {
                    return a
                }
            });
            var i = n("754013");

            function r(e) {
                for (let {
                        permissionOverwrites_: t
                    }
                    of e)
                    if (null != t)
                        for (let e in t) {
                            let n = t[e];
                            n.allow = i.default.deserialize(n.allow), n.deny = i.default.deserialize(n.deny)
                        }
            }

            function s(e) {
                for (let [t, n] of e) r(n)
            }

            function a(e) {
                let {
                    permissionOverwrites_: t
                } = e;
                if (null != t)
                    for (let e in t) {
                        let n = t[e];
                        n.allow = i.default.deserialize(n.allow), n.deny = i.default.deserialize(n.deny)
                    }
                return e
            }
        },
        99795: function(e, t, n) {
            "use strict";
            var i, r, s, a, l, o;

            function u(e) {
                return !((null == e ? void 0 : e.type) !== i.STREAM && (null == e ? void 0 : e.type) !== i.HIDDEN_STREAM)
            }

            function c(e) {
                return (null == e ? void 0 : e.type) === i.USER
            }
            n.r(t), n.d(t, {
                ParticipantTypes: function() {
                    return i
                },
                ParticipantSelectionTypes: function() {
                    return r
                },
                VoicePlatforms: function() {
                    return s
                },
                isStreamParticipant: function() {
                    return u
                },
                isUserParticipant: function() {
                    return c
                },
                PIP_WIDTH: function() {
                    return d
                },
                EMOJI_PICKER_EMOJI_TO_SHOW_COUNT: function() {
                    return _
                }
            }), (a = i || (i = {}))[a.STREAM = 0] = "STREAM", a[a.HIDDEN_STREAM = 1] = "HIDDEN_STREAM", a[a.USER = 2] = "USER", a[a.ACTIVITY = 3] = "ACTIVITY", (l = r || (r = {})).NONE = "NONE", l.AUTO = "AUTO", (o = s || (s = {}))[o.DESKTOP = 0] = "DESKTOP", o[o.MOBILE = 1] = "MOBILE", o[o.XBOX = 2] = "XBOX", o[o.PLAYSTATION = 3] = "PLAYSTATION";
            let d = 320,
                _ = 8
        },
        724210: function(e, t, n) {
            "use strict";
            var i, r, s, a;
            n.r(t), n.d(t, {
                StaticChannelRoute: function() {
                    return i
                },
                StaticChannelRoutes: function() {
                    return l
                },
                isStaticChannelRoute: function() {
                    return o
                },
                buildGuildStaticChannelId: function() {
                    return u
                },
                isGuildHomeChannel: function() {
                    return c
                },
                ChannelFlags: function() {
                    return d
                },
                MAX_CHANNEL_TOPIC_LENGTH: function() {
                    return _
                },
                MAX_FORUM_CHANNEL_TOPIC_LENGTH: function() {
                    return E
                },
                StaticChannelId: function() {
                    return r
                },
                StaticChannelIds: function() {
                    return f
                },
                FAKE_PLACEHOLDER_PRIVATE_CHANNEL_ID: function() {
                    return p
                }
            }), (s = i || (i = {})).ROLE_SUBSCRIPTIONS = "role-subscriptions", s.GUILD_SHOP = "shop", s.MEMBER_APPLICATIONS = "member-applications", s.GUILD_HOME = "@home", s.CHANNEL_BROWSER = "channel-browser", s.GUILD_ONBOARDING = "onboarding", s.CUSTOMIZE_COMMUNITY = "customize-community", s.MEMBER_SAFETY = "member-safety";
            let l = new Set(Object.values(i));

            function o(e) {
                return l.has(e)
            }

            function u(e, t) {
                return "".concat(e, "-").concat(t)
            }

            function c(e) {
                return !!(null == e ? void 0 : e.includes(i.GUILD_HOME))
            }
            let d = Object.freeze({
                    GUILD_FEED_REMOVED: 1,
                    PINNED: 2,
                    ACTIVE_CHANNELS_REMOVED: 4,
                    REQUIRE_TAG: 16,
                    IS_SPAM: 32,
                    IS_GUILD_RESOURCE_CHANNEL: 128,
                    CLYDE_AI: 256,
                    IS_SCHEDULED_FOR_DELETION: 512,
                    IS_MEDIA_CHANNEL: 1024,
                    SUMMARIES_DISABLED: 2048,
                    IS_ROLE_SUBSCRIPTION_TEMPLATE_PREVIEW_CHANNEL: 8192,
                    IS_BROADCASTING: 16384,
                    HIDE_MEDIA_DOWNLOAD_OPTIONS: 32768
                }),
                _ = 1024,
                E = 4096;
            (a = r || (r = {})).GUILD_HOME = "home", a.SERVER_GUIDE = "guide", a.CHANNEL_BROWSER = "browse", a.CUSTOMIZE_COMMUNITY = "customize";
            let f = new Set(Object.values(r)),
                p = "131"
        },
        203288: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            });
            var i = n("754013"),
                r = n("498225"),
                s = n("913144"),
                a = n("7331"),
                l = n("736271"),
                o = n("858560"),
                u = n("808388"),
                c = n("828674"),
                d = n("866595"),
                _ = n("38654"),
                E = n("42203"),
                f = n("26989"),
                p = n("305961"),
                h = n("697218"),
                S = n("49111");
            let T = {},
                I = new Set;

            function m(e) {
                let {
                    guildId: t,
                    role: n,
                    isPreviewingRoles: i
                } = e;
                return !!(0, c.isSubscriptionRole)(n) && (!!(i || (0, c.isSubscriptionRoleAvailableForPurchase)(null != n ? n : void 0) || function(e, t) {
                    if (null == e) return !1;
                    let n = h.default.getCurrentUser();
                    if (null == n) return !1;
                    let i = f.default.getMember(t, n.id);
                    return null != i && i.roles.includes(e.id)
                }(n, t)) || !1)
            }

            function g(e, t) {
                if (!t.hasFeature(S.GuildFeatures.CREATOR_MONETIZABLE) && !t.hasFeature(S.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)) return !1;
                let n = _.default.isViewingSubscriptionRoles(t.id);
                for (let i of Object.keys(e.permissionOverwrites)) {
                    let r = t.getRole(i);
                    if (!m({
                            guildId: t.id,
                            role: r,
                            isPreviewingRoles: n
                        })) continue;
                    let s = e.permissionOverwrites[i];
                    if ((0, d.isChannelAccessGrantedBy)(e, s)) return !0
                }
                let r = t.getRole(t.id),
                    s = null != r && !i.default.has(r.permissions, S.Permissions.VIEW_CHANNEL),
                    a = (0, d.isChannelAccessDeniedBy)(e, e.permissionOverwrites[t.id]);
                if (s && !a) {
                    for (let e of Object.values(t.roles))
                        if (m({
                                guildId: t.id,
                                role: e,
                                isPreviewingRoles: n
                            }) && (0, d.isAllChannelsRole)(e)) return !0
                }
                return !1
            }

            function A(e, t) {
                let n = T[e];
                if (null == n) return !1;
                let i = E.default.getChannel(t);
                if (null == i) return !1;
                let r = p.default.getGuild(i.getGuildId());
                if (null == r) return !1;
                let s = n.has(t),
                    a = g(i, r);
                return s !== a && (a ? n.add(t) : n.delete(t), !0)
            }

            function C() {
                T = {}, I.clear()
            }

            function R(e) {
                let {
                    guild: t
                } = e;
                delete T[t.id]
            }

            function N(e) {
                let {
                    guildId: t
                } = e;
                delete T[t]
            }

            function v(e) {
                let {
                    channel: t
                } = e;
                return null != t.guild_id && A(t.guild_id, t.id)
            }
            class O extends r.default.Store {
                initialize() {
                    this.waitFor(p.default, E.default, _.default), o.GuildRoleSubscriptionUsersExperiment.subscribe({
                        location: "1"
                    }, () => C())
                }
                isChannelGated(e, t) {
                    if (null == e) return !1;
                    let n = T[e];
                    return null == n && (! function(e) {
                        let t = p.default.getGuild(e);
                        if (null == t) return;
                        let n = T[e] = new Set;
                        if (!t.hasFeature(S.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED) || !(0, u.isGuildEligibleForRoleSubscriptions)(e) && !(0, a.isExpeditedMonetizationOnboardingGuild)(t)) return;
                        let i = E.default.getMutableGuildChannelsForGuild(e);
                        for (let e in i) {
                            let r = i[e];
                            g(r, t) && n.add(r.id)
                        }
                    }(e), n = T[e]), null != n && n.has(t)
                }
                isChannelGatedAndVisible(e, t) {
                    return null != e && this.isChannelGated(e, t) && !I.has(e)
                }
            }
            O.displayName = "GatedChannelStore";
            var D = new O(s.default, {
                CONNECTION_OPEN: C,
                OVERLAY_INITIALIZE: C,
                CACHE_LOADED_LAZY: C,
                GUILD_CREATE: R,
                GUILD_UPDATE: R,
                GUILD_DELETE: R,
                GUILD_ROLE_CREATE: N,
                GUILD_ROLE_UPDATE: N,
                GUILD_ROLE_DELETE: N,
                IMPERSONATE_UPDATE: N,
                IMPERSONATE_STOP: N,
                CHANNEL_CREATE: v,
                CHANNEL_DELETE: v,
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e, n = !1;
                    for (let e of t) null != e.guild_id && A(e.guild_id, e.id) && (n = !0);
                    return n
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        restrictions: n
                    } = e;
                    (0, l.isRestrictedFromShowingGuildPurchaseEntryPoints)(n) ? I.add(t): I.delete(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_FAILURE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    I.add(t)
                }
            })
        },
        656038: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("754013"),
                r = n("233069"),
                s = n("991170"),
                a = n("809924");

            function l(e) {
                if (null == e) return !1;
                let {
                    type: t
                } = e;
                if (null == e.guild_id || !r.GUILD_NON_CATEGORY_CHANNEL_TYPES.has(t)) return !1;
                if (e.isGuildVocal() && !s.default.canEveryoneRole(a.Permissions.CONNECT, e)) return !0;
                let n = e.permissionOverwrites[e.guild_id];
                return null != n && i.default.has(n.deny, a.Permissions.VIEW_CHANNEL)
            }
        },
        679653: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                computeChannelName: function() {
                    return _
                },
                escapeChannelName: function() {
                    return E
                },
                unescapeChannelName: function() {
                    return f
                },
                default: function() {
                    return p
                }
            });
            var i = n("498225"),
                r = n("274870"),
                s = n("760190"),
                a = n("27618"),
                l = n("697218"),
                o = n("449008"),
                u = n("158998"),
                c = n("49111"),
                d = n("782340");

            function _(e, t, n) {
                var i, s, a;
                let l = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                    _ = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                switch (e.type) {
                    case c.ChannelTypes.DM:
                        let [f] = e.recipients.map(t.getUser).filter(o.isNotNullish);
                        if (null == f) return "???";
                        let p = n.getNickname(f.id),
                            h = null !== (i = null != p ? p : u.default.getName(f)) && void 0 !== i ? i : "???";
                        return l ? "@".concat(h) : h;
                    case c.ChannelTypes.GROUP_DM:
                        let S = (0, r.getIsBroadcastingGDM)(e.id);
                        if ("" !== e.name) return e.name;
                        if (S && null != e.ownerId && "" !== e.ownerId) {
                            let i = t.getUser(e.ownerId),
                                r = null !== (s = n.getNickname(e.ownerId)) && void 0 !== s ? s : u.default.getName(i);
                            return d.default.Messages.BROADCASTING_CHANNEL_NAME.format({
                                name: r
                            })
                        }
                        let T = e.recipients.map(t.getUser).filter(o.isNotNullish),
                            I = T.map(e => null !== (a = n.getNickname(e.id)) && void 0 !== a ? a : u.default.getName(e));
                        if (I.length > 0) return I.join(", ");
                        return d.default.Messages.GROUP_DM_ALONE.format({
                            name: u.default.getName(t.getCurrentUser())
                        });
                    case c.ChannelTypes.GUILD_ANNOUNCEMENT:
                    case c.ChannelTypes.GUILD_TEXT:
                    case c.ChannelTypes.GUILD_FORUM:
                    case c.ChannelTypes.GUILD_MEDIA:
                        if (l) return "#".concat(e.name);
                        return e.name;
                    case c.ChannelTypes.PUBLIC_THREAD:
                    case c.ChannelTypes.PRIVATE_THREAD:
                    case c.ChannelTypes.ANNOUNCEMENT_THREAD:
                    case c.ChannelTypes.GUILD_VOICE:
                    case c.ChannelTypes.GUILD_STAGE_VOICE:
                    case c.ChannelTypes.GUILD_CATEGORY:
                        if (_) return '#"'.concat(E(e.name), '"');
                        if (l && e.isThread()) return '"'.concat(e.name, '"');
                        return e.name;
                    default:
                        return e.name
                }
            }

            function E(e) {
                return e.replace(/\\/g, "\\\\").replace(/"/g, '\\"')
            }

            function f(e) {
                return e.replace(/\\"/g, '"').replace(/\\\\/g, "\\")
            }

            function p(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                return (0, i.useStateFromStores)([l.default, s.default, a.default], () => null == e ? null : _(e, l.default, a.default, t))
            }
        },
        714657: function(e, t, n) {
            "use strict";
            let i, r, s;
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            });
            var a = n("380260"),
                l = n("975162"),
                o = n("913144"),
                u = n("10641"),
                c = n("737292"),
                d = n("161778"),
                _ = n("233069"),
                E = n("42203"),
                f = n("697218"),
                p = n("719923"),
                h = n("158998"),
                S = n("253539"),
                T = n("941719");
            let I = !1,
                m = !0,
                g = !1;

            function A() {
                I = !0
            }

            function C() {
                m && (i = void 0, s = void 0), g = !1, I = !1
            }
            let R = () => {
                    m = !p.default.canUseClientThemes(f.default.getCurrentUser())
                },
                N = () => {
                    var e, t, n, r;
                    let a = null === (t = c.default.getAppearanceSettings()) || void 0 === t ? void 0 : null === (e = t.clientThemeSettings) || void 0 === e ? void 0 : e.backgroundGradientPresetId,
                        l = null === (r = c.default.getAppearanceSettings()) || void 0 === r ? void 0 : null === (n = r.clientThemeSettings) || void 0 === n ? void 0 : n.backgroundGradientAngle;
                    null != a && (i = T.BACKGROUND_GRADIENT_PRESETS_MAP[a]), null != l && (s = l)
                };
            class v extends a.default.Store {
                initialize() {
                    this.waitFor(f.default, d.default, E.default, c.default), this.syncWith([f.default], R), this.syncWith([c.default], N)
                }
                get gradientPreset() {
                    return i
                }
                get gradientAngle() {
                    return s
                }
                getLinearGradient() {
                    var e;
                    return null == this.gradientPreset ? null : (0, S.getLinearGradientForBackgroundGradient)({
                        colors: this.gradientPreset.colors,
                        angle: null !== (e = this.gradientAngle) && void 0 !== e ? e : this.gradientPreset.angle
                    })
                }
                get isEditorOpen() {
                    return I
                }
                get isPreview() {
                    return m
                }
                get isCoachmark() {
                    return g
                }
                get mobilePendingThemeIndex() {
                    return r
                }
            }
            v.displayName = "ClientThemesBackgroundStore";
            var O = new v(o.default, {
                UPDATE_BACKGROUND_GRADIENT_PRESET: e => {
                    let {
                        presetId: t
                    } = e;
                    if (null == t) {
                        i = void 0;
                        return
                    }
                    i = T.BACKGROUND_GRADIENT_PRESETS_MAP[t], s = void 0
                },
                UPDATE_MOBILE_PENDING_THEME_INDEX: e => {
                    let {
                        mobileThemesIndex: t
                    } = e;
                    if (null == t) {
                        r = void 0;
                        return
                    }
                    r = t
                },
                UPDATE_BACKGROUND_GRADIENT_ANGLE: e => {
                    let {
                        angle: t
                    } = e;
                    if (null == t) {
                        s = void 0;
                        return
                    }
                    s = t
                },
                CLIENT_THEMES_EDITOR_OPEN: e => {
                    (function() {
                        I = !0
                    })()
                },
                CLIENT_THEMES_EDITOR_CLOSE: e => {
                    C()
                },
                RESET_PREVIEW_CLIENT_THEME: e => {
                    i = void 0, s = void 0
                },
                CHANNEL_SELECT: e => {
                    let {
                        channelId: t,
                        guildId: n
                    } = e, i = f.default.getCurrentUser();
                    if (null == t || null == n || (0, u.isDismissibleContentDismissed)(l.DismissibleContent.CLIENT_THEMES_COACHMARK) || !(0, h.ageEligibleForPremiumUpsell)(i)) return;
                    let r = E.default.getChannel(t);
                    null != r && (0, _.isGuildTextChannelType)(r.type) && (g = !0, function() {
                        I = !0
                    }())
                },
                LOGOUT: e => {
                    C()
                }
            })
        },
        941719: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BACKGROUND_GRADIENT_PRESETS: function() {
                    return _
                },
                BACKGROUND_GRADIENT_PRESETS_MAP: function() {
                    return E
                }
            });
            var i, r, s = n("427964"),
                a = n("975162"),
                l = n("809924"),
                o = n("782340");
            let u = [{
                    id: a.BackgroundGradientPresetId.MINT_APPLE,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_MINT_APPLE_1,
                        stop: 6.15
                    }, {
                        token: l.Color.BG_GRADIENT_MINT_APPLE_2,
                        stop: 48.7
                    }, {
                        token: l.Color.BG_GRADIENT_MINT_APPLE_3,
                        stop: 93.07
                    }],
                    angle: 180,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_MINT_APPLE,
                    midpointPercentage: 27
                }, {
                    id: a.BackgroundGradientPresetId.CITRUS_SHERBERT,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_CITRUS_SHERBERT_1,
                        stop: 31.1
                    }, {
                        token: l.Color.BG_GRADIENT_CITRUS_SHERBERT_2,
                        stop: 67.09
                    }],
                    angle: 180,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_CITRUS_SHERBERT,
                    midpointPercentage: 27
                }, {
                    id: a.BackgroundGradientPresetId.RETRO_RAINCLOUD,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_RETRO_RAINCLOUD_1,
                        stop: 5.64
                    }, {
                        token: l.Color.BG_GRADIENT_RETRO_RAINCLOUD_2,
                        stop: 26.38
                    }, {
                        token: l.Color.BG_GRADIENT_RETRO_RAINCLOUD_2,
                        stop: 49.92
                    }, {
                        token: l.Color.BG_GRADIENT_RETRO_RAINCLOUD_1,
                        stop: 73.12
                    }],
                    angle: 148.71,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_RETRO_RAINCLOUD,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.HANAMI,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_HANAMI_1,
                        stop: 3.56
                    }, {
                        token: l.Color.BG_GRADIENT_HANAMI_2,
                        stop: 35.49
                    }, {
                        token: l.Color.BG_GRADIENT_HANAMI_3,
                        stop: 68.78
                    }],
                    angle: 38.08,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_HANAMI,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.SUNRISE,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_SUNRISE_1,
                        stop: 8.62
                    }, {
                        token: l.Color.BG_GRADIENT_SUNRISE_2,
                        stop: 48.07
                    }, {
                        token: l.Color.BG_GRADIENT_SUNRISE_3,
                        stop: 76.04
                    }],
                    angle: 154.19,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_SUNRISE,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.COTTON_CANDY,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_COTTON_CANDY_1,
                        stop: 8.5
                    }, {
                        token: l.Color.BG_GRADIENT_COTTON_CANDY_2,
                        stop: 94.28
                    }],
                    angle: 180.14,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_COTTON_CANDY,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.LOFI_VIBES,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_LOFI_VIBES_1,
                        stop: 7.08
                    }, {
                        token: l.Color.BG_GRADIENT_LOFI_VIBES_2,
                        stop: 34.94
                    }, {
                        token: l.Color.BG_GRADIENT_LOFI_VIBES_3,
                        stop: 65.12
                    }, {
                        token: l.Color.BG_GRADIENT_LOFI_VIBES_4,
                        stop: 96.23
                    }],
                    angle: 179.52,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_LOFI_VIBES,
                    midpointPercentage: 27
                }, {
                    id: a.BackgroundGradientPresetId.DESERT_KHAKI,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_DESERT_KHAKI_1,
                        stop: 12.92
                    }, {
                        token: l.Color.BG_GRADIENT_DESERT_KHAKI_2,
                        stop: 32.92
                    }, {
                        token: l.Color.BG_GRADIENT_DESERT_KHAKI_3,
                        stop: 52.11
                    }],
                    angle: 38.99,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_DESERT_KHAKI,
                    midpointPercentage: 50
                }],
                c = [{
                    id: a.BackgroundGradientPresetId.SUNSET,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_SUNSET_1,
                        stop: 27.57
                    }, {
                        token: l.Color.BG_GRADIENT_SUNSET_2,
                        stop: 71.25
                    }],
                    angle: 141.68,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_SUNSET,
                    midpointPercentage: 35
                }, {
                    id: a.BackgroundGradientPresetId.CHROMA_GLOW,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_CHROMA_GLOW_1,
                        stop: 3.94
                    }, {
                        token: l.Color.BG_GRADIENT_CHROMA_GLOW_2,
                        stop: 26.1
                    }, {
                        token: l.Color.BG_GRADIENT_CHROMA_GLOW_3,
                        stop: 39.82
                    }, {
                        token: l.Color.BG_GRADIENT_CHROMA_GLOW_4,
                        stop: 56.89
                    }, {
                        token: l.Color.BG_GRADIENT_CHROMA_GLOW_5,
                        stop: 76.45
                    }],
                    angle: 128.92,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_CHROMA_GLOW,
                    midpointPercentage: 15
                }, {
                    id: a.BackgroundGradientPresetId.FOREST,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_FOREST_1,
                        stop: 11.2
                    }, {
                        token: l.Color.BG_GRADIENT_FOREST_2,
                        stop: 29.93
                    }, {
                        token: l.Color.BG_GRADIENT_FOREST_3,
                        stop: 48.64
                    }, {
                        token: l.Color.BG_GRADIENT_FOREST_4,
                        stop: 67.85
                    }, {
                        token: l.Color.BG_GRADIENT_FOREST_5,
                        stop: 83.54
                    }],
                    angle: 162.27,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_FOREST,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.CRIMSON_MOON,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_CRIMSON_MOON_1,
                        stop: 16.17
                    }, {
                        token: l.Color.BG_GRADIENT_CRIMSON_MOON_2,
                        stop: 72
                    }],
                    angle: 64.92,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_CRIMSON_MOON,
                    midpointPercentage: 30
                }, {
                    id: a.BackgroundGradientPresetId.MIDNIGHT_BLURPLE,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_MIDNIGHT_BLURPLE_1,
                        stop: 11.21
                    }, {
                        token: l.Color.BG_GRADIENT_MIDNIGHT_BLURPLE_2,
                        stop: 61.92
                    }],
                    angle: 48.17,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_MIDNIGHT_BLURPLE,
                    midpointPercentage: 24
                }, {
                    id: a.BackgroundGradientPresetId.MARS,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_MARS_1,
                        stop: 14.61
                    }, {
                        token: l.Color.BG_GRADIENT_MARS_2,
                        stop: 74.62
                    }],
                    angle: 170.82,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_MARS,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.DUSK,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_DUSK_1,
                        stop: 12.84
                    }, {
                        token: l.Color.BG_GRADIENT_DUSK_2,
                        stop: 85.99
                    }],
                    angle: 180,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_DUSK,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.UNDER_THE_SEA,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_UNDER_THE_SEA_1,
                        stop: 1.91
                    }, {
                        token: l.Color.BG_GRADIENT_UNDER_THE_SEA_2,
                        stop: 48.99
                    }, {
                        token: l.Color.BG_GRADIENT_UNDER_THE_SEA_3,
                        stop: 96.35
                    }],
                    angle: 179.14,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_UNDER_THE_SEA,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.RETRO_STORM,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_RETRO_STORM_1,
                        stop: 5.64
                    }, {
                        token: l.Color.BG_GRADIENT_RETRO_STORM_2,
                        stop: 26.38
                    }, {
                        token: l.Color.BG_GRADIENT_RETRO_STORM_2,
                        stop: 49.92
                    }, {
                        token: l.Color.BG_GRADIENT_RETRO_STORM_1,
                        stop: 73.12
                    }],
                    angle: 148.71,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_RETRO_STORM,
                    midpointPercentage: 61
                }, {
                    id: a.BackgroundGradientPresetId.NEON_NIGHTS,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_NEON_NIGHTS_1,
                        stop: 0
                    }, {
                        token: l.Color.BG_GRADIENT_NEON_NIGHTS_2,
                        stop: 50
                    }, {
                        token: l.Color.BG_GRADIENT_NEON_NIGHTS_3,
                        stop: 100
                    }],
                    angle: 180,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_NEON_NIGHTS,
                    midpointPercentage: 50
                }, {
                    id: a.BackgroundGradientPresetId.STRAWBERRY_LEMONADE,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_STRAWBERRY_LEMONADE_1,
                        stop: 18.79
                    }, {
                        token: l.Color.BG_GRADIENT_STRAWBERRY_LEMONADE_2,
                        stop: 49.76
                    }, {
                        token: l.Color.BG_GRADIENT_STRAWBERRY_LEMONADE_3,
                        stop: 80.72
                    }],
                    angle: 161.03,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_STRAWBERRY_LEMONADE,
                    midpointPercentage: 32
                }, {
                    id: a.BackgroundGradientPresetId.AURORA,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_AURORA_1,
                        stop: 10.39
                    }, {
                        token: l.Color.BG_GRADIENT_AURORA_2,
                        stop: 26.87
                    }, {
                        token: l.Color.BG_GRADIENT_AURORA_3,
                        stop: 48.31
                    }, {
                        token: l.Color.BG_GRADIENT_AURORA_4,
                        stop: 64.98
                    }, {
                        token: l.Color.BG_GRADIENT_AURORA_5,
                        stop: 92.5
                    }],
                    angle: 239.16,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_AURORA,
                    midpointPercentage: 34
                }, {
                    id: a.BackgroundGradientPresetId.SEPIA,
                    theme: l.ThemeTypes.DARK,
                    colors: [{
                        token: l.Color.BG_GRADIENT_SEPIA_1,
                        stop: 14.14
                    }, {
                        token: l.Color.BG_GRADIENT_SEPIA_2,
                        stop: 60.35
                    }],
                    angle: 69.98,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_SEPIA,
                    midpointPercentage: 50
                }],
                d = {
                    id: a.BackgroundGradientPresetId.EASTER_EGG,
                    theme: l.ThemeTypes.LIGHT,
                    colors: [{
                        token: l.Color.BG_GRADIENT_EASTER_EGG_1,
                        stop: 4
                    }, {
                        token: l.Color.BG_GRADIENT_EASTER_EGG_2,
                        stop: 96
                    }],
                    angle: 180,
                    getName: () => o.default.Messages.CLIENT_THEMES_GRADIENT_EASTER_EGG,
                    midpointPercentage: 50
                },
                _ = [...u, ...c, d];
            [...c, ...u], (i = r || (r = {}))[i.DARK = 0] = "DARK", i[i.LIGHT = 1] = "LIGHT", i[i.SYSTEM = 2] = "SYSTEM", l.ThemeTypes.DARK, l.ThemeTypes.LIGHT, l.ThemeTypes.DARKER, l.ThemeTypes.LIGHT, l.ThemeTypes.AMOLED, () => o.default.Messages.THEME_MIDNIGHT;
            let E = (0, s.keyBy)(_, "id")
        },
        253539: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getLinearGradientForBackgroundGradient: function() {
                    return s
                },
                areThemesEqualForGradientThemes: function() {
                    return a
                }
            });
            var i = n("449918");
            n("941719");
            var r = n("809924");

            function s(e) {
                let {
                    angle: t,
                    colors: n
                } = e;
                return "linear-gradient(".concat(t, "deg, ").concat(n.map(e => {
                    let {
                        token: t,
                        stop: n
                    } = e;
                    return "".concat((0, i.getColor)(t), " ").concat(n, "%")
                }).join(", "), ")")
            }

            function a(e, t) {
                return e === t || e === r.ThemeTypes.DARK && t === r.ThemeTypes.DARKER || e === r.ThemeTypes.DARKER && t === r.ThemeTypes.DARK || !1
            }
        },
        80028: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ClipsQualitySettings: function() {
                    return a
                },
                ClipsLengthSettings: function() {
                    return l
                },
                ClipsViewerConnectivitySettings: function() {
                    return o
                },
                DEFAULT_KEYBIND: function() {
                    return d
                },
                CLIPS_TOAST_DURATION: function() {
                    return _
                },
                ClipsLogger: function() {
                    return E
                },
                CLIPS_EXPORT_FILENAME: function() {
                    return f
                },
                CURRENT_CLIP_METADATA_VERSION: function() {
                    return p
                },
                CLIPS_HARDWARE_CLASSIFICATION_VERSION: function() {
                    return h
                },
                WINDOWS_HARDWARE_MINIMUM_GPU_REGEX: function() {
                    return S
                },
                WINDOWS_HARDWARE_AUTO_ENABLE_GPU_REGEX: function() {
                    return T
                },
                OSX_HARDWARE_AUTO_ENABLE_GPU_REGEX: function() {
                    return I
                },
                MIN_CLIP_DURATION_SECONDS: function() {
                    return m
                },
                CLIP_NAME_MIN_CHAR_LENGTH: function() {
                    return g
                },
                CLIP_NAME_MAX_CHAR_LENGTH: function() {
                    return A
                },
                CLIPS_EDIT_MODAL_KEY: function() {
                    return C
                },
                CLIPS_GALLERY_MODAL_KEY: function() {
                    return R
                },
                CLIPS_THUMBNAIL_MAX_WIDTH: function() {
                    return N
                },
                CLIPS_THUMBNAIL_MAX_HEIGHT: function() {
                    return v
                },
                CLIP_NAME_TEMPLATE: function() {
                    return O
                }
            });
            var i, r, s, a, l, o, u = n("605250"),
                c = n("718517");
            (i = a || (a = {}))[i.DEFAULT = 0] = "DEFAULT", (r = l || (l = {}))[r.SECONDS_30 = 30 * c.default.Millis.SECOND] = "SECONDS_30", r[r.MINUTES_1 = c.default.Millis.MINUTE] = "MINUTES_1", r[r.MINUTES_2 = 2 * c.default.Millis.MINUTE] = "MINUTES_2", (s = o || (o = {}))[s.ALL = 0] = "ALL", s[s.FRIENDS = 1] = "FRIENDS";
            let d = "alt+c",
                _ = 6 * c.default.Millis.SECOND,
                E = new u.default("Clips"),
                f = e => "Discord_Clip_".concat(e, ".mp4"),
                p = 2,
                h = 1,
                S = /(NVIDIA GeForce GTX (98|10|16).*|Radeon RX 5(500|600|).*|Radeon RX5.*)/,
                T = /(NVIDIA GeForce (RTX (20|30|40).*))|(.*Radeon RX (57|58|59|6|7).*)/,
                I = /(Apple M[12].*)/,
                m = .1,
                g = 0,
                A = 200,
                C = "clips-edit",
                R = "clips-gallery",
                N = 640,
                v = 360,
                O = e => "Clip - ".concat(new Date(e).toLocaleString())
        },
        386045: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return R
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("49671"),
                a = n("374014"),
                l = n("271938"),
                o = n("568307"),
                u = n("568734"),
                c = n("30591"),
                d = n("80028"),
                _ = n("49111");
            let E = "default",
                f = [],
                p = !1,
                h = null,
                S = null,
                T = {},
                I = {
                    clipsEnabled: !1,
                    storageLocation: E,
                    clipsQuality: d.ClipsQualitySettings.DEFAULT,
                    clipsLength: d.ClipsLengthSettings.SECONDS_30,
                    decoupledClipsEnabled: !1,
                    viewerClipsEnabled: !0,
                    viewerConnectivity: d.ClipsViewerConnectivitySettings.ALL
                },
                m = {
                    clipsSettings: I,
                    hardwareClassification: null,
                    hardwareClassificationVersion: 0,
                    newClipIds: [],
                    hasClips: !1
                };
            async function g() {
                if (m.clipsSettings.storageLocation !== E || null == s.default || null == s.default.remoteApp) return;
                let e = await s.default.remoteApp.getPath("documents");
                m.clipsSettings.storageLocation = e, C.emitChange()
            }
            class A extends i.default.DeviceSettingsStore {
                initialize(e) {
                    null != e && (m = e), g(), this.waitFor(o.default)
                }
                getIsSavingClip() {
                    return p
                }
                getClips() {
                    return f
                }
                getUserAgnosticState() {
                    return m
                }
                getSettings() {
                    return m.clipsSettings
                }
                getLastClipsSession() {
                    return S
                }
                getClipsWarningShown(e) {
                    return h === e
                }
                getHardwareClassification() {
                    return m.hardwareClassification
                }
                getHardwareClassificationVersion() {
                    return m.hardwareClassificationVersion
                }
                isClipsEnabledForUser(e) {
                    var t, n;
                    return null !== (n = null === (t = T[e]) || void 0 === t ? void 0 : t.clipsEnabled) && void 0 !== n && n
                }
                isVoiceRecordingAllowedForUser(e) {
                    var t, n;
                    return null !== (n = null === (t = T[e]) || void 0 === t ? void 0 : t.allowVoiceRecording) && void 0 !== n && n
                }
                hasClips() {
                    return m.hasClips
                }
            }
            A.displayName = "ClipsStore", A.persistKey = "ClipsStore", A.migrations = [e => ({
                clipsSettings: null != e ? e : I,
                newClipsCount: 0
            }), e => {
                let t = {
                    ...I,
                    ...e.clipsSettings
                };
                return {
                    ...e,
                    clipsSettings: t
                }
            }, e => {
                var t;
                return {
                    ...e,
                    newClipIds: null !== (t = e.newClipIds) && void 0 !== t ? t : []
                }
            }, e => {
                var t, n;
                return {
                    ...e,
                    hardwareClassification: null !== (t = e.hardwareClassification) && void 0 !== t ? t : null,
                    hardwareClassificationVersion: null !== (n = e.hardwareClassificationVersion) && void 0 !== n ? n : 0
                }
            }, e => {
                var t;
                return {
                    ...e,
                    hasClips: null !== (t = e.hasClips) && void 0 !== t && t
                }
            }, e => ({
                ...e,
                clipsSettings: {
                    ...e.clipsSettings,
                    decoupledClipsEnabled: I.decoupledClipsEnabled
                }
            })];
            let C = new A(r.default, {
                CLIPS_SETTINGS_UPDATE: function(e) {
                    let {
                        settings: t
                    } = e;
                    m = {
                        ...m,
                        clipsSettings: {
                            ...m.clipsSettings,
                            ...t
                        }
                    }
                },
                CLIPS_SAVE_CLIP: function(e) {
                    var t, n, i;
                    let {
                        clip: r
                    } = e;
                    p = !1, S = {
                        applicationName: r.applicationName,
                        ended: !1,
                        ...S,
                        newClipIds: [...null !== (n = null === (t = S) || void 0 === t ? void 0 : t.newClipIds) && void 0 !== n ? n : [], r.id]
                    }, m = {
                        ...m,
                        newClipIds: [...null !== (i = m.newClipIds) && void 0 !== i ? i : [], r.id]
                    }, f = [r, ...f], m.hasClips = !0
                },
                CLIPS_SAVE_CLIP_ERROR: function() {
                    p = !1
                },
                CLIPS_SAVE_CLIP_START: function() {
                    p = !0
                },
                STREAM_START: function(e) {
                    let {
                        sourceName: t,
                        pid: n
                    } = e;
                    if (!m.clipsSettings.clipsEnabled) return !1;
                    let i = t;
                    if (null != n) {
                        var r;
                        let e = o.default.getGameForPID(n);
                        i = null !== (r = null == e ? void 0 : e.name) && void 0 !== r ? r : i
                    }
                    if (null == i || "" === i) return !1;
                    S = {
                        applicationName: i,
                        newClipIds: [],
                        ended: !1
                    }
                },
                STREAM_STOP: function(e) {
                    let {
                        streamKey: t
                    } = e;
                    if (null == S || (0, a.decodeStreamKey)(t).ownerId !== l.default.getId()) return !1;
                    S = 0 === S.newClipIds.length ? null : {
                        ...S,
                        ended: !0
                    }
                },
                CLIPS_CLEAR_CLIPS_SESSION: function() {
                    if (null == S) return !1;
                    S = null
                },
                CLIPS_CLEAR_NEW_CLIP_IDS: function() {
                    m.newClipIds = []
                },
                CLIPS_LOAD_DIRECTORY_SUCCESS: function(e) {
                    m.hasClips = e.clips.length > 0, f = e.clips
                },
                CLIPS_DELETE_CLIP: function(e) {
                    0 === (f = f.filter(t => {
                        let {
                            filepath: n
                        } = t;
                        return n !== e.filepath
                    })).length && (m.hasClips = !1)
                },
                CLIPS_UPDATE_METADATA: function(e) {
                    let {
                        clip: t
                    } = e;
                    for (let [e, n] of f.entries())
                        if (n.id === t.id) {
                            f[e] = t, f = [...f];
                            return
                        }
                },
                RTC_CONNECTION_FLAGS: function(e) {
                    T[e.userId] = {
                        clipsEnabled: (0, u.hasFlag)(e.flags, _.VoiceFlags.CLIPS_ENABLED),
                        allowVoiceRecording: (0, u.hasFlag)(e.flags, _.VoiceFlags.ALLOW_VOICE_RECORDING)
                    }
                },
                CLIPS_SHOW_CALL_WARNING: function(e) {
                    let {
                        channelId: t
                    } = e;
                    h = t
                },
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    t !== h && (h = null)
                },
                CLIPS_CLASSIFY_HARDWARE: function(e) {
                    let {
                        classification: t
                    } = e, n = m.hardwareClassification;
                    m.hardwareClassificationVersion = d.CLIPS_HARDWARE_CLASSIFICATION_VERSION, m.hardwareClassification = t, m.hardwareClassification === c.ClipsHardwareClassification.MEETS_AUTO_ENABLE && n !== c.ClipsHardwareClassification.MEETS_AUTO_ENABLE && (m.clipsSettings.clipsEnabled = !0)
                },
                CLIPS_INIT: function(e) {
                    let {
                        applicationName: t
                    } = e;
                    if (!m.clipsSettings.clipsEnabled) return !1;
                    S = {
                        applicationName: t,
                        newClipIds: [],
                        ended: !1
                    }, p = !1
                }
            });
            var R = C
        },
        30591: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                ClipsHardwareClassification: function() {
                    return i
                }
            }), (r = i || (i = {})).UNKNOWN = "unknown", r.BELOW_MINIMUM = "below_minimum", r.MEETS_MINIMUM = "meets_minimum", r.MEETS_AUTO_ENABLE = "meets_auto_enable"
        },
        680894: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CLYDE_AI_USER_ID: function() {
                    return a
                },
                CLYDE_AI_MENTION_COLOR: function() {
                    return l
                },
                ClydeFeedbackReasons: function() {
                    return r
                },
                getClydeFeedbackReasons: function() {
                    return o
                },
                randomClydeThanks: function() {
                    return u
                }
            });
            var i, r, s = n("782340");
            let a = "1081004946872352958",
                l = 3000177;

            function o() {
                return [{
                    value: r.INACCURATE,
                    label: s.default.Messages.CLYDE_FEEDBACK_OPTION_INACCURATE
                }, {
                    value: r.HARMFUL,
                    label: s.default.Messages.CLYDE_FEEDBACK_OPTION_HARMFUL
                }, {
                    value: r.NOT_HELPFUL,
                    label: s.default.Messages.CLYDE_FEEDBACK_OPTION_NOT_HELPFUL
                }, {
                    value: r.INAPPROPRIATE,
                    label: s.default.Messages.CLYDE_FEEDBACK_OPTION_INAPPROPRIATE
                }, {
                    value: r.OTHER,
                    label: s.default.Messages.CLYDE_FEEDBACK_OPTION_OTHER
                }]
            }

            function u() {
                let e = [s.default.Messages.CLYDE_USER_RATING_THANKS_1, s.default.Messages.CLYDE_USER_RATING_THANKS_2, s.default.Messages.CLYDE_USER_RATING_THANKS_3, s.default.Messages.CLYDE_USER_RATING_THANKS_4, s.default.Messages.CLYDE_USER_RATING_THANKS_5, s.default.Messages.CLYDE_USER_RATING_THANKS_6, s.default.Messages.CLYDE_USER_RATING_THANKS_7, s.default.Messages.CLYDE_USER_RATING_THANKS_8, s.default.Messages.CLYDE_USER_RATING_THANKS_9, s.default.Messages.CLYDE_USER_RATING_THANKS_10];
                return e[Math.floor(Math.random() * e.length)]
            }(i = r || (r = {})).INACCURATE = "INACCURATE", i.HARMFUL = "HARMFUL", i.NOT_HELPFUL = "NOT_HELPFUL", i.INAPPROPRIATE = "INAPPROPRIATE", i.OTHER = "OTHER"
        },
        449918: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getColor: function() {
                    return c
                },
                useColorValue: function() {
                    return d
                },
                useThemedColorValue: function() {
                    return _
                }
            });
            var i = n("773670"),
                r = n("289553"),
                s = n("744196"),
                a = n("912557"),
                l = n("841098"),
                o = n("206230");

            function u(e) {
                return e.toUpperCase().replace(/-/g, "_")
            }

            function c(e) {
                return a.default.unsafe_rawColors[u(e)].css
            }

            function d(e) {
                return null != e ? r.ColorDetails[e] : null
            }

            function _(e, t) {
                let n = (0, l.useTheme)(),
                    r = (0, s.default)([o.default], () => o.default.saturation),
                    c = i.useMemo(() => {
                        if (null == e) return null;
                        let i = a.default.colors[u(e)].resolve({
                                theme: null != t ? t : n,
                                saturation: r
                            }),
                            s = i.hex();
                        return {
                            hex: s
                        }
                    }, [e, r, n, t]);
                return c
            }
            n("49111")
        },
        691898: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EXAMPLE_DOMAIN: function() {
                    return r
                },
                getDnsName: function() {
                    return s
                },
                getHttpName: function() {
                    return a
                },
                DomainConnectionExperiment: function() {
                    return l
                }
            });
            var i = n("862205");
            let r = "example.com",
                s = e => "_discord.".concat(e),
                a = e => "https://".concat(e, "/.well-known/discord"),
                l = (0, i.createExperiment)({
                    id: "2023-07_domain_connection",
                    label: "Domain Connection",
                    kind: "user",
                    defaultConfig: {
                        enabled: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enabled",
                        config: {
                            enabled: !0
                        }
                    }]
                })
        },
        269936: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("694265"),
                r = n("35468");
            n.es(i, t), (0, i.setAwaitOnline)(r.default.awaitOnline)
        },
        7331: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsUserInCreatorMonetizationEligibleCountry: function() {
                    return s
                },
                isUserInCreatorMonetizationEligibleCountry: function() {
                    return a
                },
                useIsExpeditedOnboardingGuild: function() {
                    return l
                },
                isExpeditedMonetizationOnboardingGuild: function() {
                    return o
                },
                useIsMonetizationWaitlistEnabledForGuild: function() {
                    return u
                },
                isMonetizationWaitlistEnabledForGuild: function() {
                    return c
                },
                isCreatorMonetizationNagActivateEnabled: function() {
                    return d
                }
            });
            var i = n("615923"),
                r = n("49111");

            function s() {
                let {
                    isUserEligibleForCreatorMonetization: e
                } = i.CreatorMonetizationCountryAllowlistExperiment.useExperiment({
                    location: "e3bb71_1"
                }, {
                    autoTrackExposure: !1
                });
                return e
            }

            function a() {
                let {
                    isUserEligibleForCreatorMonetization: e
                } = i.CreatorMonetizationCountryAllowlistExperiment.getCurrentConfig({
                    location: "e3bb71_2"
                }, {
                    autoTrackExposure: !1
                });
                return e
            }

            function l(e) {
                let t = function(e) {
                        let {
                            enableFastMonetizationOnboardingForGuild: t
                        } = i.CreatorMonetizationRavenOnboardingGuildExperiment.useExperiment({
                            guildId: null != e ? e : "",
                            location: "e3bb71_3"
                        }, {
                            autoTrackExposure: !0
                        }), {
                            enableFastMonetizationOnboardingForUser: n
                        } = i.CreatorMonetizationRavenOnboardingUserExperiment.useExperiment({
                            location: "e3bb71_4"
                        }, {
                            autoTrackExposure: !1
                        });
                        return null != e && t && n
                    }(null == e ? void 0 : e.id),
                    n = function(e) {
                        let {
                            enableFastMonetizationOnboardingForUser: t
                        } = i.CreatorMonetizationRavenOnboardingUserExperiment.useExperiment({
                            location: "e3bb71_7"
                        }, {
                            autoTrackExposure: !1
                        });
                        return null != e && e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_WHITEGLOVE) && t
                    }(e);
                return t || n
            }

            function o(e) {
                return function(e) {
                    let {
                        enableFastMonetizationOnboardingForGuild: t
                    } = i.CreatorMonetizationRavenOnboardingGuildExperiment.getCurrentConfig({
                        guildId: null != e ? e : "",
                        location: "e3bb71_5"
                    }), {
                        enableFastMonetizationOnboardingForUser: n
                    } = i.CreatorMonetizationRavenOnboardingUserExperiment.getCurrentConfig({
                        location: "e3bb71_6"
                    });
                    return null != e && t && n
                }(null == e ? void 0 : e.id) || function(e) {
                    let {
                        enableFastMonetizationOnboardingForUser: t
                    } = i.CreatorMonetizationRavenOnboardingUserExperiment.getCurrentConfig({
                        location: "e3bb71_8"
                    });
                    return null != e && e.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_WHITEGLOVE) && t
                }(e)
            }

            function u(e) {
                let {
                    enableWaitlist: t
                } = i.CreatorMonetizationOnboardingWaitlistExperiment.useExperiment({
                    guildId: null != e ? e : "",
                    location: "e3bb71_9"
                }, {
                    autoTrackExposure: !1
                });
                return t
            }

            function c(e) {
                let {
                    enableWaitlist: t
                } = i.CreatorMonetizationOnboardingWaitlistExperiment.getCurrentConfig({
                    guildId: null != e ? e : "",
                    location: "e3bb71_10"
                });
                return t
            }

            function d() {
                let {
                    enableCreatorMonetizationNagActivateForUser: e
                } = i.CreatorMonetizationNagActivateExperiment.getCurrentConfig({
                    location: "e3bb71_11"
                }, {
                    autoTrackExposure: !0
                });
                return e
            }
        },
        615923: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CreatorMonetizationCountryAllowlistExperiment: function() {
                    return r
                },
                CreatorMonetizationRavenOnboardingGuildExperiment: function() {
                    return s
                },
                CreatorMonetizationRavenOnboardingUserExperiment: function() {
                    return a
                },
                CreatorMonetizationOnboardingWaitlistExperiment: function() {
                    return l
                },
                CreatorMonetizationNagActivateExperiment: function() {
                    return o
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                    kind: "user",
                    id: "2022-04_creator_monetization_country_allowlist",
                    label: "Creator Monetization Available in Country",
                    defaultConfig: {
                        isUserEligibleForCreatorMonetization: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables users to view Creator Monetization entrypoints",
                        config: {
                            isUserEligibleForCreatorMonetization: !0
                        }
                    }]
                }),
                s = (0, i.createExperiment)({
                    kind: "guild",
                    id: "2022-09_creator_monetization_raven",
                    label: "Creator Monetization Onboarding v2",
                    defaultConfig: {
                        enableFastMonetizationOnboardingForGuild: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables guild to create Guild Role Subscriptions quickly",
                        config: {
                            enableFastMonetizationOnboardingForGuild: !0
                        }
                    }]
                }),
                a = (0, i.createExperiment)({
                    kind: "user",
                    id: "2022-09_creator_monetization_raven_users",
                    label: "Creator Monetization Onboarding v2 Users",
                    defaultConfig: {
                        enableFastMonetizationOnboardingForUser: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables users to create Guild Role Subscriptions quickly",
                        config: {
                            enableFastMonetizationOnboardingForUser: !0
                        }
                    }]
                }),
                l = (0, i.createExperiment)({
                    kind: "guild",
                    id: "2022-11_creator_monetization_onboarding_waitlist",
                    label: "Creator Monetization Onboarding Waitlist",
                    defaultConfig: {
                        enableWaitlist: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables Guilds to (possibly) see the waitlist",
                        config: {
                            enableWaitlist: !0
                        }
                    }]
                }),
                o = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-01_creator_monetization_nag_activate_users",
                    label: "Creator Monetization Nag Activate Users",
                    defaultConfig: {
                        enableCreatorMonetizationNagActivateForUser: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables users to see nag bar to activate server subscriptions",
                        config: {
                            enableCreatorMonetizationNagActivateForUser: !0
                        }
                    }]
                })
        },
        736271: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isRestrictedFromShowingGuildPurchaseEntryPoints: function() {
                    return l
                },
                shouldHideGuildPurchaseEntryPoints: function() {
                    return o
                },
                isRestrictedFromUpdatingCreatorMonetizationSettings: function() {
                    return u
                },
                shouldRestrictUpdatingCreatorMonetizationSettings: function() {
                    return c
                },
                isRestrictedFromMonetizationReapplication: function() {
                    return d
                }
            });
            var i = n("648825"),
                r = n("305961"),
                s = n("139170"),
                a = n("49111");

            function l(e) {
                return null != e && e.includes(s.CreatorMonetizationRestrictions.NEW_PURCHASES_DISABLED)
            }

            function o(e) {
                var t;
                if (null == e) return !1;
                let n = i.default.getMonetizationRestrictionsFetchState(e),
                    s = i.default.getMonetizationRestrictions(e),
                    o = r.default.getGuild(e);
                return n === i.FetchState.FETCHED ? l(s) : null === (t = null == o ? void 0 : o.hasFeature(a.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED)) || void 0 === t || t
            }

            function u(e) {
                return null != e && e.includes(s.CreatorMonetizationRestrictions.SETTINGS_READ_ONLY)
            }

            function c(e) {
                var t;
                if (null == e) return !1;
                let n = i.default.getMonetizationRestrictionsFetchState(e),
                    s = i.default.getMonetizationRestrictions(e),
                    l = r.default.getGuild(e);
                return n === i.FetchState.FETCHED ? u(s) : null === (t = null == l ? void 0 : l.hasFeature(a.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED)) || void 0 === t || t
            }

            function d(e) {
                return null != e && e.includes(s.CreatorMonetizationRestrictions.REAPPLICATION_DISABLED)
            }
        },
        139170: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                CreatorMonetizationRestrictions: function() {
                    return i
                },
                DefaultCreatorMonetizationRestrictions: function() {
                    return s
                }
            }), (r = i || (i = {})).NEW_PURCHASES_DISABLED = "NEW_PURCHASES_DISABLED", r.REAPPLICATION_DISABLED = "REAPPLICATION_DISABLED", r.SETTINGS_READ_ONLY = "SETTINGS_READ_ONLY", r.SUBSCRIPTIONS_ENDED_FULL_REFUND = "SUBSCRIPTIONS_ENDED_FULL_REFUND", r.SUBSCRIPTIONS_ENDED_PRORATED_REFUND = "SUBSCRIPTIONS_ENDED_PRORATED_REFUND";
            let s = [i.NEW_PURCHASES_DISABLED, i.REAPPLICATION_DISABLED, i.SETTINGS_READ_ONLY]
        },
        808122: function(e, t, n) {
            "use strict";

            function i() {
                let e = r();
                return null === e || !!(e >= 31) || !1
            }

            function r() {
                return null
            }
            n.r(t), n.d(t, {
                hasPerformanceForKrispFullband: function() {
                    return i
                },
                getMediaPerformanceClass: function() {
                    return r
                }
            })
        },
        214647: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GET_THERMAL_STATE_NOT_IMPLEMENTED_ERROR_MESSAGE: function() {
                    return i
                }
            });
            let i = "getThermalState not implemented for this client platform"
        },
        347672: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("214647"),
                r = {
                    getThermalState: () => Promise.reject(Error(i.GET_THERMAL_STATE_NOT_IMPLEMENTED_ERROR_MESSAGE))
                }
        },
        601222: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("347672"),
                r = n("214647");
            async function s() {
                let e = null;
                try {
                    e = await i.default.getThermalState()
                } catch (e) {
                    if (e.message === r.GET_THERMAL_STATE_NOT_IMPLEMENTED_ERROR_MESSAGE) return Promise.resolve(null);
                    throw e
                }
                return Promise.resolve(e)
            }
        },
        650033: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("913144");
            let s = {
                    enable_swipe_shortcuts: "Gestures shortcuts - swipe from right to left.",
                    enable_activity_or_message_preview: "If a user has an activity available, show it instead of the last message in DM list",
                    disable_alpha_voice_panel: "Disable new Voice Panel UI: Currently the new voice ui is defaulted ON for staff.  It's not feature complete so if there's something you are missing, or you find a problem, you can disable it here.",
                    highlight_experimental_icons: "Highlight experimental icons",
                    active_now_v2: "Enable Active Now v2 redesign for activity cards",
                    happening_now_summary_card: "Enable Happening Now Card with Summary",
                    enable_last_channel: "Enable launch into last channel",
                    enable_recently_active: "Enable recently active channels",
                    happening_main_tab: "Enable Happening tab containing summaries",
                    navigate_to_last_channel: "Navigate to last channel when selecting a guild.",
                    new_theme_settings: "Enable the new theme settings, with Darker and Lights Out themes",
                    user_channel_emoji_overrides: "Enable user channel emoji overrides",
                    enable_recently_active_summaries: "Enable summaries in recently active view",
                    channel_list_layout_animations: "Enable experimental channel list layout animations",
                    message_preview_animations: "Enable message preview animations",
                    recent_channels_throttle: "Throttle recent channels reordering",
                    disable_day_0_nux_staff: "Disable new onboarding flow and friend screens. Day 0 is ENABLED for staff accounts by default.",
                    enable_day_0_nux_non_staff: "Enable new onboarding flow and friend screens for non-staff accounts.",
                    force_voice_panel: "Force new voice panel to be shown.",
                    enable_server_discovery: "Enable Server Discovery Search on mobile",
                    new_guild_header: "New guild header design",
                    messages_badge_num_channels: "Messages tab badge counts # of unread channels instead of # of unread messages",
                    main_tab_launchpad: "Enable LaunchPad in Main Tab",
                    main_tab_legacy_quick_switcher: "Enable Legacy Quick Switcher in Main Tab",
                    "0g_old_ui_fullwidth_left_panel": "(0g) Old UI: full width left panel",
                    "0g_old_ui_fullwidth_left_panel_no_swiping_or_highlight": "(0g) Old UI: full width left panel. Disabled swiping and selected channel highlight.",
                    recently_visited_section: "Recently visited channels section",
                    "0g_enable_old_UI_messages_tab": "(0g) Enables a separate messages tab in the old UI",
                    disable_new_channel_details: "Enable new channel details sheet",
                    swipe_to_edit: "Enable Swipe-to-Edit",
                    new_panels: "Use panels for chat",
                    new_channels_for_panels: "Use new channel list for panels",
                    panels_split_messages_tab: "Split messages tab for panels",
                    redesign_individual_feature_you_tab: "Enable You tab in the old UI",
                    fullscreen_panels: "Fullscreen panels",
                    disable_theme_key: "Disable reloading the entire app when the theme changes",
                    theme_setting_in_account_sheet: "Show theme settings in the Account action sheet",
                    is_new_search_tab_bar: "Enables the design systems version of the search tab bar",
                    global_panels: "Use global panels for chat",
                    panels_navigator: "Use panels navigator"
                },
                a = {};
            class l extends i.default.DeviceSettingsStore {
                getUserAgnosticState() {
                    return {
                        toggleStates: a
                    }
                }
                initialize(e) {
                    for (var t in s) {
                        var n, i;
                        let r = null !== (i = null == e ? void 0 : null === (n = e.toggleStates) || void 0 === n ? void 0 : n[t]) && void 0 !== i && i;
                        a[t] = r
                    }
                }
                get(e) {
                    var t;
                    return null !== (t = a[e]) && void 0 !== t && t
                }
                set(e, t) {
                    return a[e] = t, t
                }
                all() {
                    return a
                }
                allWithDescriptions() {
                    return Object.entries(a).map(e => {
                        let [t, n] = e;
                        return [t, n, s[t]]
                    })
                }
            }
            l.displayName = "DevToolsDesignTogglesStore", l.persistKey = "DevToolsDesignTogglesStore";
            var o = new l(r.default, {
                DEV_TOOLS_DESIGN_TOGGLE_SET: function(e) {
                    a[e.toggle] = e.value
                }
            })
        },
        362391: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("498225"),
                r = n("650033");

            function s(e) {
                let t = (0, i.useStateFromStores)([r.default], () => r.default.get(e), [e]);
                return t
            }
        },
        916523: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("913144");
            let s = {
                    use_topic_dividers_in_chat: "Use summary topics as divider content in chat instead of string formatted dates.",
                    highlight_redesigned_icons: "Highlight redesigned icons",
                    alt_clips_1: "Use alt clip icon 1",
                    alt_clips_2: "Use alt clip icon 2"
                },
                a = {};
            class l extends i.default.DeviceSettingsStore {
                getUserAgnosticState() {
                    return {
                        toggleStates: a
                    }
                }
                initialize(e) {
                    for (var t in s) {
                        var n, i;
                        let r = null !== (i = null == e ? void 0 : null === (n = e.toggleStates) || void 0 === n ? void 0 : n[t]) && void 0 !== i && i;
                        a[t] = r
                    }
                }
                get(e) {
                    var t;
                    return null !== (t = a[e]) && void 0 !== t && t
                }
                set(e, t) {
                    return a[e] = t, t
                }
                all() {
                    return a
                }
                allWithDescriptions() {
                    return Object.entries(a).map(e => {
                        let [t, n] = e;
                        return [t, n, s[t]]
                    })
                }
            }
            l.displayName = "DevToolsDesignTogglesStore", l.persistKey = "DevToolsDesignTogglesStore";
            var o = new l(r.default, {
                DEV_TOOLS_DESIGN_TOGGLE_WEB_SET: function(e) {
                    a[e.toggle] = e.value
                }
            })
        },
        890503: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("498225"),
                r = n("916523");

            function s(e) {
                let t = (0, i.useStateFromStores)([r.default], () => r.default.get(e), [e]);
                return t
            }
        },
        447621: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DEFAULT_DISCOVERY_CATEGORY_ID: function() {
                    return c
                },
                OTHER_DISCOVERY_CATEGORY_ID: function() {
                    return d
                },
                DEFAULT_EMOJI_DISCOVERABILITY_SETTING: function() {
                    return _
                },
                DISCOVERY_ALL_CATEGORIES_ID: function() {
                    return E
                },
                DISCORD_HUB_ID: function() {
                    return f
                },
                MAX_ALGOLIA_PAGINATOR_RESULTS: function() {
                    return p
                },
                DISCOVERY_SIDEBAR_CATEGORIES: function() {
                    return h
                },
                SUGGESTED_TAGS_FOR_CATEGORIES: function() {
                    return S
                },
                calculateLocaleOptions: function() {
                    return I
                },
                LANGUAGE_OPTIONS: function() {
                    return m
                },
                DISCOVERY_PARTICIPATOR_REQUIREMENT: function() {
                    return g
                },
                DISCOVERY_COMMUNICATOR_REQUIREMENT: function() {
                    return A
                },
                CategoryIcons: function() {
                    return o
                },
                ALLOWED_SOCIAL_LINKS_DOMAINS: function() {
                    return C
                }
            });
            var i, r, s, a, l, o, u = n("782340");
            let c = 0,
                d = 13,
                _ = !0,
                E = -1,
                f = -2,
                p = 1e3,
                h = [{
                    categoryId: -1,
                    icon: "Discover"
                }, {
                    categoryId: 1,
                    icon: "Activity"
                }, {
                    categoryId: 2,
                    icon: "Music"
                }, {
                    categoryId: 6,
                    icon: "Education"
                }, {
                    categoryId: 5,
                    icon: "Science"
                }, {
                    categoryId: 3,
                    icon: "Television"
                }];
            (i = a || (a = {}))[i.GENERAL_CHATTING = 14] = "GENERAL_CHATTING", i[i.GAMING = 1] = "GAMING", i[i.MUSIC = 2] = "MUSIC", i[i.ENTERTAINMENT = 3] = "ENTERTAINMENT", i[i.CREATIVE_ARTS = 4] = "CREATIVE_ARTS", i[i.SCIENCE_AND_TECH = 5] = "SCIENCE_AND_TECH", i[i.EDUCATION = 6] = "EDUCATION", i[i.SPORTS = 7] = "SPORTS", i[i.FASHION_AND_BEAUTY = 8] = "FASHION_AND_BEAUTY", i[i.RELATIONSHIPS_AND_IDENTITY = 9] = "RELATIONSHIPS_AND_IDENTITY", i[i.TRAVEL_AND_FOOD = 10] = "TRAVEL_AND_FOOD", i[i.FITNESS_AND_HEALTH = 11] = "FITNESS_AND_HEALTH", i[i.FINANCE = 12] = "FINANCE", i[i.OTHER = 13] = "OTHER", i[i.EMOJI = 43] = "EMOJI", i[i.BOTS = 49] = "BOTS";
            let S = {
                    [a.GENERAL_CHATTING]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GAMING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ROBLOX, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_TWITCH, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MINECRAFT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_COMMUNITY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_STREAMER, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FORTNITE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ANIME, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ROLEPLAY],
                    [a.GAMING]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MINECRAFT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ROBLOX, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_TWITCH, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FORTNITE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ESPORTS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ROLEPLAY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_VALORANT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_LEAGUEOFLEGENDS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FIVEM],
                    [a.MUSIC]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_EDM, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_RAP, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_KPOP, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MUSIC_PRODUCTION, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_HIPHOP, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SINGING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GAMING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_BTS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_METAL],
                    [a.ENTERTAINMENT]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ANIME, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GAMING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_TWITCH, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MANGA, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MEMES, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_STREAMER, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SOCIAL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_REDDIT],
                    [a.CREATIVE_ARTS]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ART, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ANIME, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_DESIGN, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ANIMATION, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_3D, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_NFT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MANGA, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_DRAWING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_PHOTOGRAPHY],
                    [a.SCIENCE_AND_TECH]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_PROGRAMMING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_TECH, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_CODING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GITHUB, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_OPENSOURCE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_JAVASCRIPT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_CRYPTOCURRENCY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_HARDWARE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SOFTWARE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_LINUX],
                    [a.EDUCATION]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_STUDY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_LANGUAGE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SCHOOL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ENGLISH, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_LEARNING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_HOMEWORK, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_PROGRAMMING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_COLLEGE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_STOCKS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE],
                    [a.SPORTS]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FOOTBALL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_NBA, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_NFL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SOCCER, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_BASKETBALL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FORMULA1, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_PREMIER_LEAGUE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_RACING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_REDDIT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FANTASY_FOOTBALL],
                    [a.FASHION_AND_BEAUTY]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FASHION, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_STREETWEAR, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SNEAKERS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_CLOTHING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_REDDIT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YEEZY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SUPREME, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_HYPEBEAST, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_STYLE],
                    [a.RELATIONSHIPS_AND_IDENTITY]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_LGBTQ, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ANIME, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SOCIAL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FRIENDS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_COMMUNITY],
                    [a.TRAVEL_AND_FOOD]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FOOD, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_DISNEY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_BEVERAGE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SNACKS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_TRAVEL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_DISNEYWORLD],
                    [a.FITNESS_AND_HEALTH]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GYM, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_BODYBUILDING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_EXERCISE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_CALISTHENICS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MENTAL_HEALTH, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SELF_IMPROVEMENT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_EDUCATION, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_CROSSFIT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_NUTRITION, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SPORTS],
                    [a.FINANCE]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_STOCKS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_TRADING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_INVESTING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_BITCOIN, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_CRYPTOCURRENCY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ETHEREUM, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_OPTIONS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_DEFI, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FOREX],
                    [a.OTHER]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GAMING, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_YOUTUBE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_TWITCH, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_COMMUNITY, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ANIME, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_EVENTS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SOCIAL, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MEMES],
                    [a.EMOJI]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_EMOJI, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_EMOTES, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_NITRO, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ANIME, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_CUTE, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GIVEAWAYS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_AESTHETIC, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_ART, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MEMES],
                    [a.BOTS]: [() => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_APPS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_BOTS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_DISCORD_BOT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_GIVEAWAYS, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_SUPPORT, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_FUN, () => u.default.Messages.SERVER_DISCOVERY_SUGGESTED_TAG_MEMES]
                },
                T = ["en-GB"];

            function I() {
                return u.default.getAvailableLocales().map(e => {
                    let t;
                    let {
                        value: i,
                        name: r
                    } = e;
                    try {
                        t = n("442192")("@discordapp/common/images/flags/".concat(e.value, ".png").replace("@discordapp/common/images/flags/", "./"))
                    } catch (e) {
                        t = n("799987")
                    }
                    return "en-US" === i ? {
                        value: i,
                        label: u.default.Messages.ENGLISH_LANGUAGE,
                        image: t
                    } : {
                        value: i,
                        label: r,
                        image: t
                    }
                }).filter(e => !T.includes(e.value))
            }
            I();
            let m = u.default.getLanguages().filter(e => !T.includes(e.code)).map(e => "en-US" === e.code ? {
                    ...e,
                    name: u.default.Messages.en
                } : e),
                g = 40,
                A = 20;
            (r = l || (l = {})).GAME_RECOMMENDATIONS = "Game Recommendations", r.SERVER_RECOMMENDATIONS = "Server Recommendations", (s = o || (o = {}))[s.Activity = 0] = "Activity", s[s.Discover = 1] = "Discover", s[s.Education = 2] = "Education", s[s.Music = 3] = "Music", s[s.Science = 4] = "Science", s[s.Stage = 5] = "Stage", s[s.Television = 6] = "Television";
            let C = {
                facebook: {
                    presentation: "Facebook",
                    baseUrl: "https://facebook.com"
                },
                instagram: {
                    presentation: "Instagram",
                    baseUrl: "https://instagram.com"
                },
                twitter: {
                    presentation: "Twitter",
                    baseUrl: "https://twitter.com"
                },
                tiktok: {
                    presentation: "TikTok",
                    baseUrl: "https://tiktok.com"
                },
                twitch: {
                    presentation: "Twitch",
                    baseUrl: "https://twitch.tv"
                },
                patreon: {
                    presentation: "Patreon",
                    baseUrl: "https://patreon.com"
                },
                reddit: {
                    presentation: "Reddit",
                    baseUrl: "https://reddit.com/r/"
                },
                youtube: {
                    presentation: "YouTube",
                    baseUrl: "https://youtube.com"
                },
                steamcommunity: {
                    presentation: "Steam",
                    baseUrl: "https://steamcommunity.com"
                },
                soundcloud: {
                    presentation: "SoundCloud",
                    baseUrl: "https://soundcloud.com"
                },
                bandcamp: {
                    presentation: "Bandcamp",
                    baseUrl: "https://bandcamp.com"
                },
                github: {
                    presentation: "GitHub",
                    baseUrl: "https://github.com"
                },
                etsy: {
                    presentation: "Etsy",
                    baseUrl: "https://etsy.com"
                }
            }
        },
        197231: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                makeAnalyticsID: function() {
                    return r
                }
            });
            var i = n("462567");

            function r() {
                return (0, i.v4)().replace(/-/g, "")
            }
        },
        994428: function(e, t, n) {
            "use strict";
            var i, r, s, a;
            n.r(t), n.d(t, {
                ContentDismissActionType: function() {
                    return i
                },
                DismissibleContentGroupName: function() {
                    return r
                }
            }), (s = i || (i = {})).PRIMARY = "primary", s.SECONDARY = "secondary", s.DISMISS = "dismiss", s.AUTO = "auto", s.AUTO_DISMISS = "auto_dismiss", s.TAKE_ACTION = "take_action", s.USER_DISMISS = "user_dismiss", s.USER_DISMISS_ALL = "user_dismiss_all", s.UNKNOWN = "unknown", (a = r || (r = {})).GUILD_HEADER_TOOLTIPS = "GUILD_HEADER_TOOLTIPS", a.CHANNEL_NOTICES = "CHANNEL_NOTICES", a.CALL_CHAT_BUTTON = "CALL_CHAT_BUTTON", a.GUILD_FEED_TOP = "GUILD_FEED_TOP", a.MAIN_VIEW_TOOLTIPS = "MAIN_VIEW_TOOLTIPS", a.CHANNEL_HEADER_CALL_BUTTON_TOOLTIPS = "CHANNEL_HEADER_CALL_BUTTON_TOOLTIPS", a.YOU_TAB_ONBOARDING = "YOU_TAB_ONBOARDING", a.SUPER_REACTIONS_SPARKLES = "SUPER_REACTIONS_SPARKLES", a.NOTICE_BAR = "NOTICE_BAR", a.PROFILE_DRAWER_HEADER = "PROFILE_DRAWER_HEADER", a.GUILD_TAKEOVER_MODAL = "GUILD_TAKEOVER_MODAL", a.SIDEBAR = "SIDEBAR", a.MEMBER_LIST_HEADER = "MEMBER_LIST_HEADER"
        },
        495226: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CONTENT_TYPES_WITH_BYPASS_FATIGUE: function() {
                    return r
                }
            });
            var i = n("975162");
            let r = new Set([i.DismissibleContent.APPLICATION_COMMAND_TOOLTIP, i.DismissibleContent.NOW_PLAYING_CONSENT_CARD, i.DismissibleContent.GUILD_INSIGHTS_ACCESS_RATE_NEW, i.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL, i.DismissibleContent.FORUM_CHANNEL_HELPER_CARD, i.DismissibleContent.AUTH_SESSIONS_NEW, i.DismissibleContent.COMMANDS_MIGRATION_UPSELL_MODAL, i.DismissibleContent.HUB_BACK_TO_SCHOOL_UPSELL, i.DismissibleContent.CHANNEL_BROWSER_NUX, i.DismissibleContent.BLACK_FRIDAY_2022_BOGO_ANNOUNCEMENT_MODAL, i.DismissibleContent.GG_ANNOUNCEMENT, i.DismissibleContent.GUILD_ONBOARDING_UPSELL_MODAL, i.DismissibleContent.SEASONAL_GIFTING_COACHMARK_2022, i.DismissibleContent.CLIENT_THEMES_SETTINGS_BADGE, i.DismissibleContent.CLIENT_THEMES_SPARKLE_PREVIEW, i.DismissibleContent.QUEST_1_COMPLETION_TOOLTIP, i.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION, i.DismissibleContent.REMIXING_ENTRYPOINT_EDUCATION_UPSELLS_MOBILE, i.DismissibleContent.GUEST_VOICE_INVITES_MENU_ITEM_NEW_BADGE, i.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL, i.DismissibleContent.CLIPS_ONBOARDING_CLIP_BUTTON_COACHMARK, i.DismissibleContent.CUSTOM_APP_ICONS_NEW_BADGE, i.DismissibleContent.DEKSTOP_CUSTOM_APP_ICON_BADGE, i.DismissibleContent.SETTINGS_PROFILES_COLLECTIBLES_NEW_BADGE, i.DismissibleContent.WHATS_NEW_AVATAR_DECOS_FLIP, i.DismissibleContent.WHATS_NEW_PROFILE_EFFECTS_FLIP, i.DismissibleContent.RECURRING_CONTACT_SYNC_PROMPT, i.DismissibleContent.COLLECTIBLES_PROFILE_BANNER_ANIMATION, i.DismissibleContent.WHATS_NEW_AVATAR_DECOS_NOTIF_BADGE, i.DismissibleContent.WHATS_NEW_PROFILE_EFFECTS_NOTIF_BADGE, i.DismissibleContent.NUX_GUILD_CHANNEL_EXPLAINER, i.DismissibleContent.PROFILE_EFFECT_SHOP_NEW_BADGE, i.DismissibleContent.COLLECTIBLES_SHOP_TAB_NEW_BADGE, i.DismissibleContent.SUPER_REACTION_TOGGLE_EDUCATION_MOBILE, i.DismissibleContent.SUPER_REACTION_TOGGLE_EDUCATION_DESKTOP])
        },
        585653: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                handleDCShownToUser: function() {
                    return r
                },
                handleDCDismissed: function() {
                    return s
                },
                resetDismissibleContentFrameworkStore: function() {
                    return a
                },
                overrideDismissibleContentFramework: function() {
                    return l
                }
            });
            var i = n("913144");
            let r = e => {
                    i.default.dispatch({
                        type: "DCF_HANDLE_DC_SHOWN",
                        dismissibleContent: e
                    })
                },
                s = e => {
                    i.default.dispatch({
                        type: "DCF_HANDLE_DC_DISMISSED",
                        dismissibleContent: e
                    })
                },
                a = () => {
                    i.default.dispatch({
                        type: "DCF_RESET"
                    })
                },
                l = e => {
                    i.default.dispatch({
                        type: "DCF_DAILY_CAP_OVERRIDE",
                        value: e
                    })
                }
        },
        989691: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("599110"),
                a = n("495226"),
                l = n("49111");
            let o = {
                numberOfDCsShownToday: 0,
                dailyCapPeriodStart: null,
                dismissibleContentSeenDuringSession: new Set,
                dailyCapOverridden: !1,
                renderedAtTimestamps: new Map
            };
            class u extends i.default.PersistedStore {
                initialize(e) {
                    if (null != e) {
                        var t;
                        o.numberOfDCsShownToday = null !== (t = e.numberOfDCsShownToday) && void 0 !== t ? t : 0, o.dailyCapPeriodStart = e.dailyCapPeriodStart, o.dailyCapOverridden = e.dailyCapOverridden
                    }
                    o.dismissibleContentSeenDuringSession = new Set
                }
                getState() {
                    return o
                }
                get dailyCapOverridden() {
                    return o.dailyCapOverridden
                }
                getRenderedAtTimestamp(e) {
                    return o.renderedAtTimestamps.get(e)
                }
                hasUserHitDCCap(e) {
                    if (null != e && (a.CONTENT_TYPES_WITH_BYPASS_FATIGUE.has(e) || o.dailyCapOverridden) || null != e && o.dismissibleContentSeenDuringSession.has(e)) return !1;
                    let t = new Date;
                    return t.setHours(0, 0, 0, 0), null != o.dailyCapPeriodStart && o.dailyCapPeriodStart < t.getTime() && (o.numberOfDCsShownToday = 0, o.dailyCapPeriodStart = null), o.numberOfDCsShownToday >= 3
                }
            }
            u.displayName = "DismissibleContentFrameworkStore", u.persistKey = "DismissibleContentFrameworkStore", u.migrations = [e => ({
                ...e
            })];
            var c = new u(r.default, {
                LOGOUT: function() {
                    o = {
                        ...o,
                        dismissibleContentSeenDuringSession: new Set,
                        renderedAtTimestamps: new Map
                    }
                },
                DCF_DAILY_CAP_OVERRIDE: function(e) {
                    let {
                        value: t
                    } = e;
                    o.dailyCapOverridden = t
                },
                DCF_HANDLE_DC_SHOWN: function(e) {
                    let {
                        dismissibleContent: t
                    } = e, n = new Date;
                    if (o.renderedAtTimestamps.set(t, n.getTime()), !a.CONTENT_TYPES_WITH_BYPASS_FATIGUE.has(t) && !o.dailyCapOverridden) {
                        if (!o.dismissibleContentSeenDuringSession.has(t)) {
                            if (o.dismissibleContentSeenDuringSession.add(t), null == o.dailyCapPeriodStart) {
                                let e = new Date;
                                e.setHours(0, 0, 0, 0), o.dailyCapPeriodStart = e.getTime()
                            }
                            o.numberOfDCsShownToday += 1, o.numberOfDCsShownToday > 3 && s.default.track(l.AnalyticEvents.DCF_CAP_EXCEEDED, {
                                cap_type: "daily_cap",
                                dismissible_content: t,
                                shown_dcs: o.numberOfDCsShownToday
                            })
                        }
                    }
                },
                DCF_HANDLE_DC_DISMISSED: function(e) {
                    let {
                        dismissibleContent: t
                    } = e;
                    o.renderedAtTimestamps.delete(t)
                },
                DCF_RESET: function() {
                    o.dailyCapPeriodStart = null, o.numberOfDCsShownToday = 0, o.dismissibleContentSeenDuringSession = new Set
                }
            })
        },
        127746: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CONTENT_TYPES_WITH_BYPASS_HOLDOUT: function() {
                    return r
                }
            });
            var i = n("975162");
            let r = new Set([i.DismissibleContent.ACCOUNT_MULTIACCOUNT_TOOLTIP, i.DismissibleContent.ACTIVITIES_MOBILE_NUX, i.DismissibleContent.ACTIVITIES_MOBILE_VOICE_CONTROLS_TOGGLE_NUX, i.DismissibleContent.AUTH_SESSIONS_NEW, i.DismissibleContent.CHANNEL_NOTICE_CLYDE_NUX, i.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER, i.DismissibleContent.CHANNEL_NOTICE_HUBLINK, i.DismissibleContent.CHANNEL_NOTICE_INVITE, i.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION, i.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER, i.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP, i.DismissibleContent.NAGBAR_NOTICE_POMELO, i.DismissibleContent.VOICE_CHANNEL_EFFECTS_REDUCED_MOTION_TOOLTIP])
        },
        862853: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                addCandidateContent: function() {
                    return I
                },
                removeCandidateContent: function() {
                    return m
                },
                isContentShown: function() {
                    return g
                },
                useIsContentShown: function() {
                    return A
                },
                useIsAnyContentShown: function() {
                    return C
                },
                getCurrentlyShownCounts: function() {
                    return R
                },
                reset: function() {
                    return N
                },
                default: function() {
                    return v
                }
            });
            var i = n("710835"),
                r = n("495226"),
                s = n("543322");
            let a = new s.TaskRunner,
                l = () => ({
                    candidates: new Map,
                    shownFatigableCandidate: null,
                    prevFatigableCandidate: null,
                    recentlyShown: [],
                    currentlyShown: new Set,
                    currentlyShownGroup: new Set,
                    lastWinnerTime: 0
                }),
                o = (0, i.default)(l),
                u = e => ({
                    ...e,
                    candidates: new Map(e.candidates),
                    currentlyShown: new Set(e.currentlyShown),
                    currentlyShownGroup: new Set(e.currentlyShownGroup)
                }),
                c = (e, t) => {
                    var n;
                    return null == t ? e : (null != t.content && e.currentlyShown.delete(t.content), null != t.groupName && e.currentlyShownGroup.delete(t.groupName), (null === (n = e.shownFatigableCandidate) || void 0 === n ? void 0 : n.content) === t.content && (e.shownFatigableCandidate = null), e)
                },
                d = (e, t) => {
                    var n, i;
                    if (null == t) return e;
                    e.currentlyShown.add(t.content);
                    let s = e.recentlyShown.filter(e => e !== t.content);
                    return s.unshift(t.content), s.splice(5), e.recentlyShown = s, null != t.groupName && e.currentlyShownGroup.add(t.groupName), !r.CONTENT_TYPES_WITH_BYPASS_FATIGUE.has(t.content) && (e.shownFatigableCandidate = t, (null === (i = e.prevFatigableCandidate) || void 0 === i ? void 0 : i.content) !== t.content && (e.prevFatigableCandidate = t, e.lastWinnerTime = new Date().getTime())), null === (n = t.onAdded) || void 0 === n || n.call(t), e
                },
                _ = (e, t) => (e.candidates.set(t.content, t), e),
                E = (e, t) => (e.candidates.delete(t.content), e),
                f = (e, t) => d(c(e, e.shownFatigableCandidate), t),
                p = e => null != e.prevFatigableCandidate ? e.candidates.get(e.prevFatigableCandidate.content) : void 0,
                h = e => {
                    let t = [...e.candidates.keys()];
                    return null !== e.prevFatigableCandidate && e.candidates.has(e.prevFatigableCandidate.content) && e.candidates.size > 1 && (t = t.filter(t => {
                        var n;
                        return t !== (null === (n = e.prevFatigableCandidate) || void 0 === n ? void 0 : n.content)
                    })), e.candidates.get(t[Math.floor(Math.random() * t.length)])
                },
                S = e => null != e.prevFatigableCandidate && e.candidates.has(e.prevFatigableCandidate.content) && null == e.shownFatigableCandidate,
                T = e => {
                    if (0 === e.candidates.size) return e;
                    let t = new Date().getTime() - e.lastWinnerTime > 3e5;
                    if (S(e) && !t) return a.unschedule(), f(e, p(e));
                    if (null != e.shownFatigableCandidate && !t || a.scheduled()) return e;
                    let n = new Date().getTime();
                    return null == e.shownFatigableCandidate && n - e.lastWinnerTime < 36e5 ? e : (a.schedule(() => {
                        o.setState(e => {
                            let t = u(e);
                            return f(t, h(t))
                        })
                    }, 250), e)
                },
                I = e => {
                    let t = r.CONTENT_TYPES_WITH_BYPASS_FATIGUE.has(e.content);
                    o.setState(n => {
                        let i = u(n);
                        return t ? d(i, e) : T(_(i, e))
                    })
                },
                m = (e, t) => {
                    o.setState(n => {
                        let i = u(n);
                        return t ? T(c(E(i, e), e)) : c(E(i, e), e)
                    })
                },
                g = e => o.getState().currentlyShown.has(e),
                A = e => o(t => t.currentlyShown.has(e)),
                C = e => o(t => e.some(e => t.currentlyShown.has(e))),
                R = () => {
                    let e = [...o.getState().currentlyShown].filter(e => !r.CONTENT_TYPES_WITH_BYPASS_FATIGUE.has(e)).length,
                        t = o.getState().currentlyShown.size;
                    return [t, e]
                },
                N = () => {
                    o.setState(l), a.unschedule()
                };

            function v(e) {
                return o(e)
            }
        },
        10641: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isDismissibleContentDismissed: function() {
                    return T
                },
                useIsDismissibleContentDismissed: function() {
                    return I
                },
                requestMarkDismissibleContentAsShown: function() {
                    return m
                },
                markDismissibleContentAsDismissed: function() {
                    return g
                }
            });
            var i = n("498225"),
                r = n("975162"),
                s = n("193302"),
                a = n("872173"),
                l = n("374363"),
                o = n("599110"),
                u = n("674268"),
                c = n("495226"),
                d = n("585653"),
                _ = n("989691"),
                E = n("127746"),
                f = n("862853"),
                p = n("846614"),
                h = n("994428"),
                S = n("49111");

            function T(e) {
                var t;
                if ((0, p.disableNewUserDismissibleContent)(e)) return !0;
                let n = null === (t = l.default.settings.userContent) || void 0 === t ? void 0 : t.dismissedContents;
                return null != n && (0, u.hasBit)(n, e)
            }

            function I(e) {
                return (0, i.useStateFromStores)([l.default], () => T(e))
            }

            function m(e, t, n) {
                if ((0, f.isContentShown)(e) || _.default.hasUserHitDCCap(e)) return;
                let i = function(e) {
                    let t = E.CONTENT_TYPES_WITH_BYPASS_HOLDOUT.has(e),
                        {
                            enabled: n
                        } = s.default.getCurrentConfig({
                            location: "isUserSubjectToDCFHoldout"
                        }, {
                            autoTrackExposure: !t
                        });
                    return n && !t
                }(e);
                if (!i) !n && (0, f.addCandidateContent)({
                    content: e,
                    groupName: null == t ? void 0 : t.groupName,
                    onAdded: () => {
                        var n;
                        let [i, s] = (0, f.getCurrentlyShownCounts)();
                        (0, d.handleDCShownToUser)(e), o.default.track(S.AnalyticEvents.DISMISSIBLE_CONTENT_SHOWN, {
                            type: r.DismissibleContent[e],
                            content_count: i,
                            fatigable_content_count: s,
                            group_name: null == t ? void 0 : t.groupName,
                            bypass_fatigue: c.CONTENT_TYPES_WITH_BYPASS_FATIGUE.has(e),
                            guild_id: null == t ? void 0 : t.guildId
                        }), null == t || null === (n = t.onShown) || void 0 === n || n.call(t)
                    }
                })
            }
            async function g(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                ((0, f.isContentShown)(e) || t.forceTrack) && function(e, t) {
                    var n;
                    let [i] = (0, f.getCurrentlyShownCounts)(), s = _.default.getRenderedAtTimestamp(e), a = new Date, l = null == s ? null : a.getTime() - s;
                    o.default.track(S.AnalyticEvents.DISMISSIBLE_CONTENT_DISMISSED, {
                        type: r.DismissibleContent[e],
                        action: null !== (n = null == t ? void 0 : t.dismissAction) && void 0 !== n ? n : h.ContentDismissActionType.UNKNOWN,
                        content_count: i,
                        group_name: null == t ? void 0 : t.groupName,
                        bypass_fatigue: c.CONTENT_TYPES_WITH_BYPASS_FATIGUE.has(e),
                        guild_id: null == t ? void 0 : t.guildId,
                        shown_duration: l
                    })
                }(e, t), (0, d.handleDCDismissed)(e), await (0, a.addDismissedContent)(e);
                let n = !_.default.hasUserHitDCCap();
                (0, f.removeCandidateContent)({
                    content: e,
                    groupName: null == t ? void 0 : t.groupName
                }, n)
            }
        },
        846614: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useNewUserDismissibleContent: function() {
                    return c
                },
                disableNewUserDismissibleContent: function() {
                    return d
                }
            });
            var i = n("500947"),
                r = n("744196"),
                s = n("975162"),
                a = n("271938"),
                l = n("718517");
            let o = {
                    [s.DismissibleContent.MJ_NEW_USER_CHAT_BAR]: 0,
                    [s.DismissibleContent.NUX_GUILD_CHANNEL_EXPLAINER]: 0
                },
                u = l.default.Millis.DAY;

            function c(e) {
                let t = (0, r.default)([a.default], () => a.default.getId()),
                    n = null != t ? i.default.age(t) : 0;
                return e.filter(e => {
                    var t;
                    let i = null !== (t = o[e]) && void 0 !== t ? t : u;
                    return n > i
                })
            }

            function d(e) {
                var t;
                let n = null != a.default.getId() ? i.default.age(a.default.getId()) : 0,
                    r = null !== (t = o[e]) && void 0 !== t ? t : u;
                return n < r
            }
        },
        543322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TaskRunner: function() {
                    return i
                }
            });
            class i {
                schedule(e, t) {
                    this.unschedule(), this.timeoutId = setTimeout(() => {
                        this.timeoutId = null, e()
                    }, t)
                }
                unschedule() {
                    this.scheduled() && (clearTimeout(this.timeoutId), this.timeoutId = null)
                }
                scheduled() {
                    return null !== this.timeoutId
                }
                constructor() {
                    this.timeoutId = null
                }
            }
        },
        958706: function(e, t, n) {
            "use strict";
            var i, r, s, a, l, o;
            n.r(t), n.d(t, {
                EMOJI_MAX_SLOTS: function() {
                    return u
                },
                EMOJI_MAX_LENGTH: function() {
                    return c
                },
                EMOJI_RE: function() {
                    return d
                },
                EMOJI_MAX_FILESIZE_KB: function() {
                    return _
                },
                EMOJI_MAX_FILESIZE: function() {
                    return E
                },
                EmojiSprites: function() {
                    return i
                },
                EmojiDisabledReasons: function() {
                    return r
                },
                EmojiIntention: function() {
                    return s
                },
                isExternalEmojiAllowedForIntention: function() {
                    return p
                }
            });
            let u = 50,
                c = 32,
                d = /[^a-zA-Z0-9_]/g,
                _ = 256,
                E = 1024 * _;
            (a = i || (i = {}))[a.NonDiversityPerRow = 42] = "NonDiversityPerRow", a[a.DiversityPerRow = 10] = "DiversityPerRow", a[a.PickerPerRow = 11] = "PickerPerRow", a[a.PickerCount = 50] = "PickerCount", (l = r || (r = {}))[l.DISALLOW_EXTERNAL = 0] = "DISALLOW_EXTERNAL", l[l.GUILD_SUBSCRIPTION_UNAVAILABLE = 1] = "GUILD_SUBSCRIPTION_UNAVAILABLE", l[l.PREMIUM_LOCKED = 2] = "PREMIUM_LOCKED", l[l.ONLY_GUILD_EMOJIS_ALLOWED = 3] = "ONLY_GUILD_EMOJIS_ALLOWED", l[l.ROLE_SUBSCRIPTION_LOCKED = 4] = "ROLE_SUBSCRIPTION_LOCKED", l[l.ROLE_SUBSCRIPTION_UNAVAILABLE = 5] = "ROLE_SUBSCRIPTION_UNAVAILABLE", (o = s || (s = {}))[o.REACTION = 0] = "REACTION", o[o.STATUS = 1] = "STATUS", o[o.COMMUNITY_CONTENT = 2] = "COMMUNITY_CONTENT", o[o.CHAT = 3] = "CHAT", o[o.GUILD_STICKER_RELATED_EMOJI = 4] = "GUILD_STICKER_RELATED_EMOJI", o[o.GUILD_ROLE_BENEFIT_EMOJI = 5] = "GUILD_ROLE_BENEFIT_EMOJI", o[o.COMMUNITY_CONTENT_ONLY = 6] = "COMMUNITY_CONTENT_ONLY", o[o.SOUNDBOARD = 7] = "SOUNDBOARD", o[o.VOICE_CHANNEL_TOPIC = 8] = "VOICE_CHANNEL_TOPIC";
            let f = new Set([s.COMMUNITY_CONTENT, s.COMMUNITY_CONTENT_ONLY, s.GUILD_STICKER_RELATED_EMOJI, s.GUILD_ROLE_BENEFIT_EMOJI, s.SOUNDBOARD]);

            function p(e) {
                return !f.has(e)
            }
        },
        316217: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                IGNORE_ANALYTICS_BREADCRUMB_EVENTS: function() {
                    return r
                },
                filterThrottle: function() {
                    return s
                }
            });
            var i = n("49111");
            let r = [i.AnalyticEvents.START_SPEAKING, i.AnalyticEvents.START_LISTENING, i.AnalyticEvents.APP_OPENED, i.AnalyticEvents.NOTIFICATION_CLICKED, i.AnalyticEvents.EXPERIMENT_USER_TRIGGERED, i.AnalyticEvents.EXPERIMENT_DM_TRIGGERED, i.AnalyticEvents.EXPERIMENT_GUILD_TRIGGERED];

            function s(e) {
                let {
                    maxBudgetMinute: t,
                    maxBudgetHour: n
                } = e, i = {
                    minute: {
                        slot: 0,
                        budgetUsed: 0
                    },
                    hour: {
                        slot: 0,
                        budgetUsed: 0
                    }
                };
                return () => {
                    let e = Date.now(),
                        r = Math.round(e / 1e3 / 60),
                        s = Math.round(e / 1e3 / 60 / 60);
                    return i.minute.slot !== r && (i.minute.slot = r, i.minute.budgetUsed = 0), i.hour.slot !== s && (i.hour.slot = s, i.hour.budgetUsed = 0), !!(i.minute.budgetUsed < t) && (i.minute.budgetUsed++, !!(i.hour.budgetUsed < n)) && (i.hour.budgetUsed++, !0)
                }
            }
        },
        630915: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("296892").default)({
                kind: "user",
                id: "2023-08_overlay3_out_of_process_enablement",
                label: "Overlay3 - Out of Process Enablement",
                defaultConfig: {
                    useGlobalOverlay: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        useGlobalOverlay: !0
                    }
                }]
            })
        },
        296892: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("773670"),
                r = n("730811"),
                s = n("271938"),
                a = n("442437"),
                l = n("996777"),
                o = n("848601");

            function u(e, t, n) {
                return "guild" === e ? l.default.getGuildExperimentDescriptor(t, n.guildId) : l.default.getUserExperimentDescriptor(t)
            }

            function c(e, t, n, i) {
                var r, s;
                return (null == i ? void 0 : i.aaMode) ? e.defaultConfig : null !== (s = null === (r = n.get(t)) || void 0 === r ? void 0 : r.config) && void 0 !== s ? s : e.defaultConfig
            }

            function d(e) {
                var t, n;
                let d = new Map;
                d.set(o.ExperimentBuckets.NOT_ELIGIBLE, {
                    description: "Not Eligible",
                    config: e.defaultConfig
                }), d.set(o.ExperimentBuckets.CONTROL, {
                    description: "Control Bucket",
                    config: e.defaultConfig
                }), e.treatments.forEach(e => {
                    d.set(e.id, {
                        description: "Treatment ".concat(e.id, ": ").concat(e.label),
                        config: e.config
                    })
                });
                let _ = (t = e.kind, n = {
                    id: e.id,
                    title: e.label,
                    description: [...d.values()].map(e => e.description),
                    buckets: [...d.keys()]
                }, "guild" === t ? (0, a.registerGuildExperiment)(n) : (0, a.registerUserExperiment)(n));

                function E(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        n = arguments.length > 2 ? arguments[2] : void 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                    if (t.exposureType = n ? o.ExposureTypes.AUTO_FALLBACK : o.ExposureTypes.AUTO, t.excluded = !1, null == i) {
                        f(e, t);
                        return
                    }
                    p(e, t, i)
                }

                function f(t) {
                    let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                            excluded: !1,
                            exposureType: o.ExposureTypes.MANUAL
                        },
                        i = u(e.kind, _.id, t);
                    null != i && p(t, n, i)
                }

                function p(e, t, n) {
                    if (null != n) {
                        var i, r, l, u, c;
                        let d = o.ExposureTypes.MANUAL;
                        (0, a.trackExposureToExperiment)(_.id, n, {
                            location: null !== (i = null == e ? void 0 : e.location) && void 0 !== i ? i : "unknown",
                            analyticsLocations: null !== (r = null == t ? void 0 : t.analyticsLocations) && void 0 !== r ? r : [],
                            fingerprint: null !== (u = null !== (l = null == t ? void 0 : t.fingerprint) && void 0 !== l ? l : s.default.getFingerprint()) && void 0 !== u ? u : void 0,
                            excluded: (null == t ? void 0 : t.excluded) || !1,
                            exposureType: null !== (c = null == t ? void 0 : t.exposureType) && void 0 !== c ? c : d
                        })
                    }
                }

                function h(t, n) {
                    let i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                        r = null != i.disable && i.disable,
                        s = u(e.kind, e.id, t),
                        a = null == s || r ? o.ExperimentBuckets.NOT_ELIGIBLE : s.bucket,
                        _ = null == s ? -1 : s.revision,
                        E = c(e, a, d, s);

                    function f() {
                        let i = u(e.kind, e.id, t),
                            s = null == i || r ? o.ExperimentBuckets.NOT_ELIGIBLE : i.bucket,
                            l = null == i ? -1 : i.revision;
                        (s !== a || _ !== l) && (n(c(e, s, d, i), s, l), a = s, _ = l)
                    }
                    return n(E, a, _), l.default.addReactChangeListener(f), () => {
                        l.default.removeReactChangeListener(f)
                    }
                }
                return {
                    useExperiment: function(t) {
                        var n, s, a;
                        let l = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                                autoTrackExposure: !0
                            },
                            _ = null !== (n = l.disable) && void 0 !== n && n,
                            f = !1 !== l.autoTrackExposure,
                            p = u(e.kind, e.id, t),
                            S = null == l.trackExposureOptions ? void 0 : (0, r.default)(null !== (s = l.trackExposureOptions) && void 0 !== s ? s : {}),
                            T = null !== (a = null == p ? void 0 : p.triggerDebuggingEnabled) && void 0 !== a && a,
                            [
                                [I, m, g], A
                            ] = (0, i.useState)(() => {
                                let t = null == p || _ ? o.ExperimentBuckets.NOT_ELIGIBLE : p.bucket;
                                return [c(e, t, d, p), t, null == p ? -1 : p.revision]
                            }),
                            C = (0, r.default)(t);
                        return (0, i.useEffect)(() => {
                            if (_ || !f && !T) return;
                            let e = !1 === f;
                            E(C, S, e)
                        }, [_, f, C, S, m, g, T]), (0, i.useEffect)(() => h(C, (e, t, n) => {
                            A(i => i[0] === e && i[1] === t && i[2] === n ? i : [e, t, n])
                        }, {
                            disable: _
                        }), [_, C]), I
                    },
                    subscribe: h,
                    trackExposure: f,
                    getCurrentConfig: function(t) {
                        let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                                autoTrackExposure: !0
                            },
                            i = u(e.kind, e.id, t);
                        if (null == i || n.disable) return c(e, o.ExperimentBuckets.NOT_ELIGIBLE, d, i);
                        if (!1 !== n.autoTrackExposure || i.triggerDebuggingEnabled) {
                            let e = !1 === n.autoTrackExposure;
                            E(t, n.trackExposureOptions, e, i)
                        }
                        return c(e, i.bucket, d, i)
                    },
                    definition: e,
                    isAAMode: function(t) {
                        let n = u(e.kind, e.id, t);
                        return !!(null == n ? void 0 : n.aaMode)
                    }
                }
            }
        },
        848601: function(e, t, n) {
            "use strict";
            var i, r, s, a, l, o;
            n.r(t), n.d(t, {
                ExperimentBuckets: function() {
                    return i
                },
                ExperimentTypes: function() {
                    return r
                },
                ExposureTypes: function() {
                    return s
                }
            }), (a = i || (i = {}))[a.NOT_ELIGIBLE = -1] = "NOT_ELIGIBLE", a[a.CONTROL = 0] = "CONTROL", a[a.TREATMENT_1 = 1] = "TREATMENT_1", a[a.TREATMENT_2 = 2] = "TREATMENT_2", a[a.TREATMENT_3 = 3] = "TREATMENT_3", a[a.TREATMENT_4 = 4] = "TREATMENT_4", a[a.TREATMENT_5 = 5] = "TREATMENT_5", a[a.TREATMENT_6 = 6] = "TREATMENT_6", a[a.TREATMENT_7 = 7] = "TREATMENT_7", a[a.TREATMENT_8 = 8] = "TREATMENT_8", a[a.TREATMENT_9 = 9] = "TREATMENT_9", a[a.TREATMENT_10 = 10] = "TREATMENT_10", a[a.TREATMENT_11 = 11] = "TREATMENT_11", a[a.TREATMENT_12 = 12] = "TREATMENT_12", a[a.TREATMENT_13 = 13] = "TREATMENT_13", a[a.TREATMENT_14 = 14] = "TREATMENT_14", a[a.TREATMENT_15 = 15] = "TREATMENT_15", a[a.TREATMENT_16 = 16] = "TREATMENT_16", a[a.TREATMENT_17 = 17] = "TREATMENT_17", a[a.TREATMENT_18 = 18] = "TREATMENT_18", a[a.TREATMENT_19 = 19] = "TREATMENT_19", a[a.TREATMENT_20 = 20] = "TREATMENT_20", a[a.TREATMENT_21 = 21] = "TREATMENT_21", a[a.TREATMENT_22 = 22] = "TREATMENT_22", a[a.TREATMENT_23 = 23] = "TREATMENT_23", a[a.TREATMENT_24 = 24] = "TREATMENT_24", a[a.TREATMENT_25 = 25] = "TREATMENT_25", (l = r || (r = {})).NONE_LEGACY = "none", l.GUILD = "guild", l.USER = "user", (o = s || (s = {})).MANUAL = "manual", o.AUTO = "auto", o.AUTO_FALLBACK = "auto_fallback"
        },
        442437: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                trackExposureToExperiment: function() {
                    return a
                },
                registerUserExperiment: function() {
                    return l
                },
                registerGuildExperiment: function() {
                    return o
                },
                overrideBucket: function() {
                    return u
                }
            });
            var i = n("913144"),
                r = n("996777"),
                s = n("848601");

            function a(e, t, n) {
                var i, s;
                r.default.trackExposure({
                    experimentId: e,
                    descriptor: t,
                    location: null == n ? void 0 : n.location,
                    location_stack: null == n ? void 0 : n.analyticsLocations,
                    fingerprint: null == n ? void 0 : n.fingerprint,
                    excluded: null == n ? void 0 : n.excluded,
                    exposureType: null == n ? void 0 : n.exposureType
                })
            }

            function l(e) {
                let {
                    id: t,
                    title: n,
                    description: i,
                    buckets: a
                } = e;
                return (0, r.registerExperiment)({
                    experimentId: t,
                    experimentType: s.ExperimentTypes.USER,
                    title: n,
                    description: i,
                    buckets: a
                }), {
                    id: t
                }
            }

            function o(e) {
                let {
                    id: t,
                    title: n,
                    description: i,
                    buckets: a
                } = e;
                return (0, r.registerExperiment)({
                    experimentId: t,
                    experimentType: s.ExperimentTypes.GUILD,
                    title: n,
                    description: i,
                    buckets: a
                }), {
                    id: t
                }
            }

            function u(e, t) {
                i.default.dispatch({
                    type: "EXPERIMENT_OVERRIDE_BUCKET",
                    experimentId: e,
                    experimentBucket: t
                })
            }
        },
        996777: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                registerExperiment: function() {
                    return q
                },
                default: function() {
                    return ee
                }
            });
            var i = n("161179"),
                r = n.n(i),
                s = n("427964"),
                a = n.n(s),
                l = n("424509"),
                o = n.n(l),
                u = n("173333"),
                c = n("355025"),
                d = n("271938"),
                _ = n("455079"),
                E = n("599110"),
                f = n("366507"),
                p = n("848601"),
                h = n("49111");
            let S = "scientist:triggered",
                T = "exerimentOverrides",
                I = "userExperimentOverrides",
                m = "guildExperimentOverrides",
                g = !1,
                A = {},
                C = {},
                R = {},
                N = {},
                v = {},
                O = {},
                D = {},
                L = "staging" === window.GLOBAL_ENV.RELEASE_CHANNEL,
                M = {};

            function P(e) {
                let t = M[e];
                if (void 0 !== t) return t;
                {
                    let t = o.v3(e);
                    return M[e] = t, t
                }
            }
            let b = {
                title: "Unnamed Experiment",
                description: "No description provided"
            };

            function y(e) {
                var t;
                return ((null !== (t = e.flags) && void 0 !== t ? t : 0) & h.UserFlags.STAFF) === h.UserFlags.STAFF || null != e.personal_connection_id || !1
            }

            function U(e, t, n) {
                let i = t.triggerDebuggingEnabled && void 0 !== n && n.length > 0;
                if (t.type === p.ExperimentTypes.USER) return i ? "".concat(t.type, "|").concat(e, "|").concat(n) : "".concat(t.type, "|").concat(e);
                if (t.type === p.ExperimentTypes.GUILD) return i ? "".concat(t.type, "|").concat(e, "|").concat(t.guildId, "|").concat(n) : "".concat(t.type, "|").concat(e, "|").concat(t.guildId);
                throw Error()
            }

            function G(e) {
                if (e.type === p.ExperimentTypes.USER) return P("".concat(e.bucket, "|").concat(e.revision));
                if (e.type === p.ExperimentTypes.GUILD) return P("".concat(e.bucket, "|").concat(e.revision, "|").concat(e.guildId));
                throw Error()
            }
            let w = Date.now();

            function x(e, t, n) {
                let i = A[U(e, t, n)];
                if (null == i) return !1;
                let r = Date.now() - i.time > 6048e5;
                return !r && i.hash === G(t)
            }

            function k(e) {
                let {
                    experimentId: t,
                    descriptor: n,
                    location: i,
                    location_stack: r,
                    context: s,
                    fingerprint: a,
                    excluded: l,
                    exposureType: o
                } = e, u = x(t, n, i);
                if (u) return !1;
                let c = o === p.ExposureTypes.AUTO_FALLBACK && n.triggerDebuggingEnabled;
                if (n.type === p.ExperimentTypes.USER) {
                    let e = {
                        name: t,
                        revision: n.revision,
                        population: n.population,
                        bucket: n.bucket,
                        location: i,
                        location_stack: r,
                        hash_result: n.hashResult,
                        excluded: l,
                        exposure_type: o
                    };
                    null != s && (e.context_guild_id = s.guildId);
                    let u = c ? h.AnalyticEvents.EXPERIMENT_USER_TRIGGERED_FALLBACK : h.AnalyticEvents.EXPERIMENT_USER_TRIGGERED;
                    E.default.track(u, e, {
                        flush: !0,
                        fingerprint: a
                    })
                } else if (n.type === p.ExperimentTypes.GUILD) {
                    let e = c ? h.AnalyticEvents.EXPERIMENT_GUILD_TRIGGERED_FALLBACK : h.AnalyticEvents.EXPERIMENT_GUILD_TRIGGERED;
                    E.default.track(e, {
                        name: t,
                        revision: n.revision,
                        bucket: n.bucket,
                        guild_id: n.guildId,
                        location: i,
                        location_stack: r,
                        hash_result: n.hashResult,
                        excluded: l,
                        exposure_type: o
                    }, {
                        flush: !0,
                        fingerprint: a
                    })
                }
                A[U(t, n, i)] = {
                    time: Date.now(),
                    hash: G(n)
                }, Z(A)
            }

            function F(e) {
                let [t, n] = e;
                return null != f.GUILD_FILTERS[t] ? (0, f.GUILD_FILTERS)[t](n) : null
            }

            function B(e) {
                let [t, n] = e;
                return {
                    buckets: t.map(e => {
                        let [t, n] = e;
                        return {
                            bucket: t,
                            positions: n.map(e => {
                                let {
                                    s: t,
                                    e: n
                                } = e;
                                return {
                                    start: t,
                                    end: n
                                }
                            })
                        }
                    }),
                    filters: n.map(F),
                    rawFilterData: n
                }
            }

            function V(e) {
                !L && "CONNECTION_OPEN" === e.type && y(e.user) && (L = !0), R = {}, N = {}, v = {};
                let t = "CONNECTION_OPEN" === e.type || null == e.fingerprint || e.fingerprint === d.default.getFingerprint(),
                    {
                        experiments: n,
                        guildExperiments: i
                    } = e;
                t && (n.forEach(e => {
                    let [t, n, i, r, s, a, l, o] = e;
                    R[t] = {
                        type: "user",
                        revision: n,
                        population: s,
                        bucket: i,
                        override: 0 === r,
                        hashResult: null != a ? a : -1,
                        aaMode: 1 === l,
                        triggerDebuggingEnabled: 1 === o
                    }
                }), null != i && i.forEach(e => {
                    let [t, n, i, r, s, a, l, o, u, c] = e;
                    N[t] = {
                        hashKey: n,
                        revision: i,
                        populations: r.map(B),
                        overrides: function(e) {
                            let t = {};
                            if (null == e) return t;
                            for (let {
                                    b: n,
                                    k: i
                                }
                                of e)
                                for (let e of i) t[e] = n;
                            return t
                        }(s),
                        overridesFormatted: (null != a ? a : []).map(e => e.map(B)),
                        holdoutName: null != l ? l : null,
                        holdoutBucket: null != o ? o : null,
                        aaMode: 1 === u,
                        triggerDebuggingEnabled: 1 === c
                    }
                })), g = !0
            }

            function H(e, t, n) {
                let i = null;
                for (let {
                        buckets: s,
                        filters: a
                    }
                    of t) {
                    var r = !0;
                    if (null != a) {
                        for (let t of a)
                            if (null != t && !t(e)) {
                                r = !1;
                                break
                            }
                    }
                    if (!r) continue;
                    let t = s.find(e => {
                        let {
                            positions: t
                        } = e;
                        return t.some(e => {
                            let {
                                start: t,
                                end: i
                            } = e;
                            return n >= t && n < i
                        })
                    });
                    if ((i = null != t ? t.bucket : p.ExperimentBuckets.CONTROL) === p.ExperimentBuckets.NOT_ELIGIBLE) break;
                    return i
                }
                return null
            }

            function j(e) {
                let t = {};
                for (let i in e) {
                    var n;
                    let r = e[i];
                    for (let e of (t[i] = {
                            ...r
                        }, t[i].populations)) e.filters = e.rawFilterData.map(F);
                    for (let e of null !== (n = t[i].overridesFormatted) && void 0 !== n ? n : [])
                        for (let t of e) t.filters = t.rawFilterData.map(F)
                }
                return t
            }

            function Y(e) {
                let {
                    serializedExperimentStore: t,
                    user: n
                } = e;
                !L && y(n) && (L = !0), g = t.hasLoadedExperiments, A = t.trackedExposureExperiments, R = t.loadedUserExperiments, O = t.userExperimentOverrides, D = t.guildExperimentOverrides, N = j(t.loadedGuildExperiments), v = {}
            }

            function W() {
                g = !0
            }

            function K(e) {
                let {
                    isSwitchingAccount: t
                } = e;
                u.default.remove(S), !t && (u.default.remove(T), u.default.remove(I), u.default.remove(m), O = {}, D = {}), R = {}, A = {}, g = !1
            }

            function z() {
                g = !1, A = {}, u.default.remove(S)
            }

            function Z(e) {
                u.default.set(S, {
                    v: 1,
                    e: e
                })
            }

            function q(e) {
                let {
                    experimentId: t,
                    experimentType: n,
                    title: i,
                    description: r,
                    buckets: s
                } = e;
                C = {
                    ...C,
                    [t]: {
                        type: n,
                        title: i,
                        description: r,
                        buckets: s
                    }
                }
            }

            function X(e) {
                let t, n, {
                        store: i,
                        renderFunctions: s
                    } = e,
                    a = "function" == typeof i.getExperimentId ? i.getExperimentId() : null;
                if (!a) throw Error("Experiment Store must have a static getExperimentId method defined");
                let l = "function" == typeof i.getMetaData ? i.getMetaData() : b;
                Object.keys(s).forEach(e => {
                    if (e === p.ExperimentTypes.NONE_LEGACY) return;
                    r(null != s[e], "Unexpected missing renderFunctions"), t = e;
                    let i = Object.keys(s[e]).map(e => parseInt(e));
                    n = i
                }), q({
                    experimentId: a,
                    experimentType: null != t ? t : p.ExperimentTypes.USER,
                    title: l.title,
                    description: l.description,
                    buckets: null != n ? n : []
                })
            }

            function Q(e) {
                let {
                    experimentId: t,
                    experimentBucket: n
                } = e, i = C[t];
                if (null == i) return !1;
                for (let e of (null == n ? (O = {
                        ...O
                    }, delete O[t], D = {
                        ...D
                    }, delete D[t]) : "user" === i.type ? O = {
                        ...O,
                        [t]: {
                            type: i.type,
                            revision: 1,
                            population: 0,
                            bucket: n,
                            override: !0
                        }
                    } : D = {
                        ...D,
                        [t]: {
                            type: i.type,
                            revision: 1,
                            bucket: n,
                            override: !0
                        }
                    }, [O, D]))
                    for (let t in e) null == C[t] && delete O[t];
                u.default.set(I, O), u.default.set(m, D)
            }

            function J(e) {
                let {
                    guild: t
                } = e;
                for (let e in v) {
                    let [n] = e.split(":");
                    t.id === n && delete v[e]
                }
            }
            class $ extends _.default {
                initialize() {
                    A = function() {
                        let e = u.default.get(S);
                        if (null == e || 1 !== e.v) return {};
                        let t = e.e,
                            n = Date.now(),
                            i = !1;
                        for (let e in t) n - t[e].time > 6048e5 && (delete t[e], i = !0);
                        return i && Z(t), t
                    }(), ! function() {
                        var e, t, n;
                        let i = [null !== (e = u.default.get(T)) && void 0 !== e ? e : {}, null !== (t = u.default.get(I)) && void 0 !== t ? t : {}, null !== (n = u.default.get(m)) && void 0 !== n ? n : {}];
                        O = {}, D = {};
                        let r = !a.isEmpty(i[0]);
                        for (let e of i)
                            for (let t in e) {
                                let n = e[t];
                                null == n || n.type !== p.ExperimentTypes.USER && n.type !== p.ExperimentTypes.GUILD || null == n.bucket || !0 !== n.override || n.fromCookie ? (delete e[t], r = !0) : n.type === p.ExperimentTypes.USER ? O[t] = n : D[t] = n
                            }
                        let s = (0, c.getBuildOverrideExperiments)();
                        for (let e in s) O[e] = {
                            type: p.ExperimentTypes.USER,
                            revision: 1,
                            population: 0,
                            override: !0,
                            fromCookie: !0,
                            bucket: s[e]
                        }, D[e] = {
                            type: p.ExperimentTypes.GUILD,
                            revision: 1,
                            override: !0,
                            fromCookie: !0,
                            bucket: s[e]
                        }, r = !0;
                        r && (u.default.set(I, O), u.default.set(m, D))
                    }()
                }
                takeSnapshot() {
                    return {
                        version: $.LATEST_SNAPSHOT_VERSION,
                        data: {
                            loadedUserExperiments: this.getAllUserExperimentDescriptors(),
                            loadedGuildExperiments: this.getGuildExperiments()
                        }
                    }
                }
                get hasLoadedExperiments() {
                    return g
                }
                hasRegisteredExperiment(e) {
                    return null != C[e]
                }
                getUserExperimentDescriptor(e) {
                    if (g && L) {
                        let t = O[e];
                        if (null != t) return t
                    }
                    let t = P(e);
                    return R["".concat(t)]
                }
                getGuildExperimentDescriptor(e, t) {
                    if (g) {
                        let t = D[e];
                        if (L && null != t) return t
                    }
                    let n = "".concat(t, ":").concat(e);
                    if (n in v) return v[n];
                    let i = function e(t, n) {
                        var i, r;
                        let s = P(n),
                            a = N["".concat(s)];
                        if (null == a) return null;
                        let {
                            revision: l,
                            aaMode: o
                        } = a, u = a.overrides[t];
                        if (null != u) return u === p.ExperimentBuckets.NOT_ELIGIBLE ? null : {
                            type: p.ExperimentTypes.GUILD,
                            guildId: t,
                            revision: l,
                            bucket: u,
                            override: !0,
                            hashResult: -1
                        };
                        let c = "".concat(null !== (i = a.hashKey) && void 0 !== i ? i : n, ":").concat(t),
                            d = P(c),
                            _ = d % 1e4,
                            E = null,
                            f = null !== (r = a.overridesFormatted) && void 0 !== r ? r : [];
                        for (let e of f)
                            if (null !== (E = H(t, e, _))) return {
                                type: p.ExperimentTypes.GUILD,
                                guildId: t,
                                revision: a.revision,
                                bucket: E,
                                override: !0,
                                hashResult: _
                            };
                        if (null == (E = H(t, a.populations, _))) return null;
                        if (null != a.holdoutName && null != a.holdoutBucket && a.holdoutName !== n) {
                            let n = e(t, a.holdoutName);
                            if ((null == n ? void 0 : n.bucket) != null && (!0 !== n.override && k({
                                    experimentId: a.holdoutName,
                                    descriptor: n
                                }), (null == n ? void 0 : n.bucket) === a.holdoutBucket)) return null
                        }
                        return {
                            type: p.ExperimentTypes.GUILD,
                            guildId: t,
                            revision: a.revision,
                            bucket: E,
                            hashResult: _,
                            aaMode: o
                        }
                    }(t, e);
                    return v[n] = i, i
                }
                getUserExperimentBucket(e) {
                    let t = this.getUserExperimentDescriptor(e);
                    return null != t ? t.bucket : p.ExperimentBuckets.NOT_ELIGIBLE
                }
                getGuildExperimentBucket(e, t) {
                    let n = this.getGuildExperimentDescriptor(e, t);
                    return null != n ? n.bucket : p.ExperimentBuckets.NOT_ELIGIBLE
                }
                getAllUserExperimentDescriptors() {
                    return R
                }
                getGuildExperiments() {
                    return N
                }
                getRegisteredExperiments() {
                    return C
                }
                getAllExperimentOverrideDescriptors() {
                    return L ? {
                        ...O,
                        ...D
                    } : {}
                }
                getExperimentOverrideDescriptor(e) {
                    var t;
                    return g && L ? null !== (t = O[e]) && void 0 !== t ? t : D[e] : null
                }
                getAllExperimentAssignments() {
                    let e = {},
                        t = {};
                    for (let n in Object.keys(C).forEach(e => {
                            t[P("".concat(e))] = e
                        }), R) {
                        let i = t[n];
                        null != i && (e[i] = R[n].bucket)
                    }
                    for (let t in v) {
                        let n = v[t];
                        null != n && (e[t] = n.bucket)
                    }
                    return e
                }
                getSerializedState() {
                    let e = {};
                    for (let t in N)
                        for (let n of (e[t] = JSON.parse(JSON.stringify(N[t])), e[t].populations)) n.filters = [];
                    return {
                        hasLoadedExperiments: g,
                        trackedExposureExperiments: A,
                        loadedUserExperiments: R,
                        loadedGuildExperiments: e,
                        userExperimentOverrides: O,
                        guildExperimentOverrides: D
                    }
                }
                hasExperimentTrackedExposure(e, t, n) {
                    return x(e, t, n)
                }
                constructor() {
                    super(), this.trackExposure = k, this.loadCache = e => {
                        if (null != e.experiments) R = e.experiments.loadedUserExperiments, N = j(e.experiments.loadedGuildExperiments);
                        else {
                            let e = this.readSnapshot($.LATEST_SNAPSHOT_VERSION);
                            null != e && (R = e.loadedUserExperiments, N = j(e.loadedGuildExperiments))
                        }
                    }, this.registerActionHandlers({
                        LOGOUT: K,
                        LOGIN_SUCCESS: z,
                        CONNECTION_OPEN: V,
                        EXPERIMENTS_FETCH_SUCCESS: V,
                        OVERLAY_INITIALIZE: Y,
                        CACHE_LOADED: this.loadCache,
                        EXPERIMENTS_FETCH_FAILURE: W,
                        EXPERIMENT_REGISTER_LEGACY: X,
                        EXPERIMENT_OVERRIDE_BUCKET: Q,
                        GUILD_CREATE: J,
                        GUILD_UPDATE: J
                    })
                }
            }
            $.displayName = "ExperimentStore", $.LATEST_SNAPSHOT_VERSION = 1;
            var ee = new $
        },
        366507: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GUILD_FILTERS: function() {
                    return _
                }
            });
            var i = n("918003"),
                r = n.n(i),
                s = n("424509"),
                a = n.n(s),
                l = n("519820"),
                o = n("525065"),
                u = n("305961");

            function c(e, t, n) {
                let i = r(e),
                    s = null != t ? r(t) : null,
                    a = null != n ? r(n) : null;
                return !(null != s && i.lesser(s) || null != a && i.greater(a)) && !0
            }

            function d(e) {
                let t, n;
                for (let [i, r] of e) switch (i) {
                    case a.v3("min_id"):
                        t = r;
                        break;
                    case a.v3("max_id"):
                        n = r
                }
                return {
                    min: t,
                    max: n
                }
            }
            let _ = {
                [a.v3("guild_ids")]: e => {
                    let t = [];
                    for (let [n, i] of e)
                        if (n === a.v3("guild_ids")) t = i;
                    return e => t.includes(e)
                },
                [a.v3("guild_id_range")]: e => {
                    let {
                        min: t,
                        max: n
                    } = d(e);
                    return e => c(e, t, n)
                },
                [a.v3("guild_member_count_range")]: e => {
                    let {
                        min: t,
                        max: n
                    } = d(e);
                    return e => {
                        let i = o.default.getMemberCount(e);
                        return null != i && c(i, t, n)
                    }
                },
                [a.v3("guild_has_feature")]: e => {
                    let [
                        [, t]
                    ] = e;
                    return e => {
                        var n;
                        let i = null !== (n = u.default.getGuild(e)) && void 0 !== n ? n : l.default.getGuild(e);
                        return null != i && t.some(e => i.hasFeature(e))
                    }
                },
                [a.v3("guild_hub_types")]: e => {
                    let [
                        [, t]
                    ] = e;
                    return e => {
                        var n;
                        let i = null !== (n = u.default.getGuild(e)) && void 0 !== n ? n : l.default.getGuild(e);
                        return null != i && "number" == typeof i.hubType && t.some(e => i.hubType === e)
                    }
                },
                [a.v3("guild_has_vanity_url")]: e => {
                    let [
                        [, t]
                    ] = e;
                    return e => {
                        var n;
                        let i = null !== (n = u.default.getGuild(e)) && void 0 !== n ? n : l.default.getGuild(e);
                        if (null == i) return !1;
                        let r = null != i.vanityURLCode;
                        return t === r
                    }
                },
                [a.v3("guild_in_range_by_hash")]: e => {
                    let t, n;
                    for (let [r, s] of e) switch (r) {
                        case a.v3("hash_key"):
                            t = s;
                            break;
                        case a.v3("target"):
                            var i;
                            n = null !== (i = parseInt(s)) && void 0 !== i ? i : 0
                    }
                    return e => {
                        let i = a.v3("".concat(t, ":").concat(e));
                        return (i > 0 ? i + i : i >>> 0) % 1e4 < n
                    }
                }
            }
        },
        862205: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createExperiment: function() {
                    return i.default
                }
            });
            var i = n("296892")
        },
        13030: function(e, t, n) {
            "use strict";
            var i, r, s, a;
            n.r(t), n.d(t, {
                ExpressionPickerViewType: function() {
                    return i
                },
                CHAT_INPUT_BUTTON_CLASSNAME: function() {
                    return l
                },
                MIN_EXPRESSION_PICKER_WIDTH: function() {
                    return o
                },
                ExpressionPickerWidths: function() {
                    return r
                }
            }), (s = i || (i = {})).EMOJI = "emoji", s.GIF = "gif", s.STICKER = "sticker", s.SOUNDBOARD = "soundboard";
            let l = "expression-picker-chat-input-button",
                o = 498;
            (a = r || (r = {})).MIN = "min", a.MAX = "max", i.EMOJI, i.GIF, i.STICKER, i.EMOJI, i.STICKER
        },
        733589: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = n("106919").default
        },
        106919: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            let i = new class e {
                enterPipMode() {
                    return Promise.resolve()
                }
                setEnabled(e) {}
                setSelectedStream(e) {}
                setMirrored(e) {}
                setPipAspectRatio(e, t) {}
                addOnPipModeChangedListener(e) {}
                isEnabled() {
                    return !1
                }
            };
            var r = i
        },
        379881: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var i = n("498225"),
                r = n("975162"),
                s = n("913144"),
                a = n("374363"),
                l = n("233069"),
                o = n("49111");
            let u = {},
                c = !1;

            function d() {
                var e, t, n;
                c = null !== (n = null === (e = a.default.settings.favorites) || void 0 === e ? void 0 : e.muted) && void 0 !== n && n, u = {};
                let i = null === (t = a.default.settings.favorites) || void 0 === t ? void 0 : t.favoriteChannels;
                if (null == i) return !1;
                for (let e in i) {
                    let t = i[e];
                    u[e] = {
                        id: e,
                        nickname: "" !== t.nickname ? t.nickname : null,
                        type: t.type,
                        order: t.position,
                        parentId: "0" !== t.parentId ? t.parentId : null
                    }
                }
            }
            class _ extends i.default.Store {
                initialize() {
                    this.waitFor(a.default), d(), this.syncWith([a.default], d)
                }
                getFavoriteChannels() {
                    return u
                }
                get favoriteServerMuted() {
                    return c
                }
                isFavorite(e) {
                    return null != e && null != u[e]
                }
                getFavorite(e) {
                    if (null != e) return u[e]
                }
                getCategoryRecord(e) {
                    if (e in u && u[e].type === r.FavoriteChannelType.CATEGORY) {
                        var t, n;
                        return t = u[e], (0, l.createChannelRecord)({
                            id: t.id,
                            name: null !== (n = t.nickname) && void 0 !== n ? n : "",
                            type: o.ChannelTypes.GUILD_CATEGORY,
                            position: t.order,
                            guild_id: o.FAVORITES
                        })
                    }
                    return null
                }
                getNickname(e) {
                    var t;
                    let n = this.getFavorite(e);
                    return null !== (t = null == n ? void 0 : n.nickname) && void 0 !== t ? t : void 0
                }
            }
            _.displayName = "FavoriteStore";
            var E = new _(s.default, {})
        },
        695838: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FAVORITES_RAW_GUILD_ID: function() {
                    return s
                },
                FAVORITES_GUILD_RECORD: function() {
                    return a
                }
            });
            var i = n("813006"),
                r = n("49111");
            let s = "373",
                a = new i.default({
                    id: s,
                    name: "Favorites",
                    description: "The place for all your favorite channels!",
                    ownerId: "234",
                    verificationLevel: r.VerificationLevels.NONE,
                    region: "",
                    joinedAt: new Date,
                    defaultMessageNotifications: 0,
                    mfaLevel: r.MFALevels.NONE,
                    explicitContentFilter: 0,
                    maxMembers: 5e5,
                    nsfwLevel: r.GuildNSFWContentLevel.DEFAULT
                })
        },
        498139: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2021-09_favorites_server",
                label: "Enable fancy super-alpha favorites server.",
                defaultConfig: {
                    favoritesEnabled: !1,
                    canShow: !0
                },
                treatments: [{
                    id: 1,
                    label: "It is on.",
                    config: {
                        favoritesEnabled: !0,
                        canShow: !0
                    }
                }, {
                    id: 2,
                    label: "It is forced off",
                    config: {
                        favoritesEnabled: !1,
                        canShow: !1
                    }
                }]
            })
        },
        106682: function(e, t, n) {
            "use strict";

            function i(e, t, n) {
                let i = new n.constructor(n.toJS());
                return i.position_ = t.order, null != t.nickname && (i.name = t.nickname), null != t.parentId && t.parentId in e && (i.parent_id = t.parentId), i
            }
            n.r(t), n.d(t, {
                createFavoritesChannelRecord: function() {
                    return i
                }
            })
        },
        15131: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isFavoritesGuildVisible: function() {
                    return d
                },
                default: function() {
                    return _
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("42203"),
                l = n("957255"),
                o = n("379881"),
                u = n("498139"),
                c = n("809924");

            function d(e, t, n) {
                let i = e.getFavoriteChannels();
                if (r.isEmpty(i)) return !1;
                let {
                    canShow: s
                } = u.default.getCurrentConfig({
                    location: "7993a7_1"
                }, {
                    autoTrackExposure: !1
                });
                if (!s) return !1;
                let a = Object.keys(i).filter(e => {
                    let i = t.getChannel(e);
                    return null != i && (!!i.isPrivate() || n.can(c.Permissions.VIEW_CHANNEL, i))
                });
                return !r.isEmpty(a) && !0
            }

            function _() {
                let {
                    canShow: e
                } = u.default.useExperiment({
                    location: "7993a7_2"
                }, {
                    autoTrackExposure: !1
                }), t = (0, s.useStateFromStores)([o.default, a.default, l.default], () => e && d(o.default, a.default, l.default));
                return t
            }
        },
        76393: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("235660"),
                a = n("800762");
            let l = null,
                o = null,
                u = new Set,
                c = {},
                d = {},
                _ = new Set,
                E = Object.freeze({});
            class f extends i.default.DeviceSettingsStore {
                initialize(e) {
                    null != e && (d = e.lastSelectedDeviceByPlatform), this.waitFor(s.default, a.default)
                }
                getUserAgnosticState() {
                    return {
                        lastSelectedDeviceByPlatform: d
                    }
                }
                getDevicesForPlatform(e) {
                    var t;
                    return null !== (t = c[e]) && void 0 !== t ? t : E
                }
                getLastSelectedDeviceByPlatform(e) {
                    return d[e]
                }
                getDevice(e, t) {
                    var n;
                    return null === (n = c[e]) || void 0 === n ? void 0 : n[t]
                }
                getFetchingDevices(e) {
                    return _.has(e)
                }
                getPendingDeviceCommands() {
                    return u
                }
                getRemoteSessionId() {
                    return l
                }
                getAwaitingRemoteSessionInfo() {
                    return o
                }
            }
            f.displayName = "GameConsoleStore", f.persistKey = "GameConsoleStore";
            var p = new f(r.default, {
                REMOTE_SESSION_CONNECT: function(e) {
                    let {
                        sessionId: t
                    } = e;
                    l = t, o = null
                },
                REMOTE_SESSION_DISCONNECT: function() {
                    l = null, o = null
                },
                WAIT_FOR_REMOTE_SESSION: function(e) {
                    let {
                        sessionType: t,
                        nonce: n,
                        channelId: i,
                        deviceId: r,
                        commandId: s
                    } = e;
                    o = {
                        type: t,
                        nonce: n,
                        channelId: i,
                        startedAt: Date.now(),
                        deviceId: r,
                        commandId: s
                    }
                },
                GAME_CONSOLE_FETCH_DEVICES_START: function(e) {
                    let {
                        platform: t
                    } = e;
                    _.add(t)
                },
                GAME_CONSOLE_FETCH_DEVICES_SUCCESS: function(e) {
                    let {
                        platform: t,
                        devices: n
                    } = e;
                    _.delete(t);
                    let i = c[t] = {},
                        r = {};
                    for (let e of n) i[e.id] = e, d[t] === e.id && (r[t] = e.id);
                    d = r
                },
                GAME_CONSOLE_FETCH_DEVICES_FAIL: function(e) {
                    let {
                        platform: t
                    } = e;
                    _.delete(t)
                },
                GAME_CONSOLE_SELECT_DEVICE: function(e) {
                    let {
                        platform: t,
                        deviceId: n
                    } = e;
                    d[t] = n
                }
            })
        },
        831610: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            let i = /\\/g;

            function r(e) {
                return e.replace(i, "/")
            }
        },
        706530: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                StreamIssueReportReasons: function() {
                    return s
                },
                DARWIN_SOUNDSHARE_VERSION: function() {
                    return o
                },
                WINDOWS_SOUNDSHARE_VERSION: function() {
                    return u
                },
                WINDOWS_GRAPHICS_CAPTURE_VERSION: function() {
                    return c
                },
                StreamTypes: function() {
                    return a
                },
                STREAM_NOTIFY_GUILD_MAX_SIZE: function() {
                    return d
                }
            });
            var i, r, s, a, l = n("681357");
            (i = s || (s = {})).BLACK_SCREEN = "BLACK_SCREEN", i.BLURRY = "BLURRY", i.LAGGING = "LAGGING", i.OUT_OF_SYNC = "OUT_OF_SYNC", i.AUDIO_MISSING = "AUDIO_MISSING", i.AUDIO_POOR = "AUDIO_POOR", i.GAME_ISSUE = "GAME_ISSUE", i.STREAM_STOPPED = "STREAM_STOPPED", i.NO_ISSUE = "NO_ISSUE", i.OTHER = "OTHER";
            let o = ">=19.0.0",
                u = ">=10.0.17763",
                c = ">=10.0.22000";
            (r = a || (a = {})).GUILD = "guild", r.CALL = "call";
            let d = l.Notifications.StreamNotificationsGuildMaxSize
        },
        374014: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isStreamKey: function() {
                    return r
                },
                decodeStreamKey: function() {
                    return s
                },
                encodeStreamKey: function() {
                    return a
                }
            });
            var i = n("706530");

            function r(e) {
                return null != e && (e.startsWith(i.StreamTypes.GUILD) || e.startsWith(i.StreamTypes.CALL))
            }

            function s(e) {
                let t = e.split(":"),
                    n = t[0];
                switch (n) {
                    case i.StreamTypes.GUILD: {
                        let [e, n, i, r] = t;
                        return {
                            streamType: e,
                            guildId: n,
                            channelId: i,
                            ownerId: r
                        }
                    }
                    case i.StreamTypes.CALL: {
                        let [e, n, i] = t;
                        return {
                            streamType: e,
                            channelId: n,
                            ownerId: i
                        }
                    }
                    default:
                        throw Error("Unknown stream type ".concat(n))
                }
            }

            function a(e) {
                let {
                    streamType: t,
                    guildId: n,
                    channelId: r,
                    ownerId: s
                } = e;
                switch (t) {
                    case i.StreamTypes.GUILD:
                        return [t, n, r, s].join(":");
                    case i.StreamTypes.CALL:
                        return [t, r, s].join(":");
                    default:
                        throw Error("Unknown stream type ".concat(t))
                }
            }
        },
        756898: function(e, t, n) {
            "use strict";

            function i(e, t) {
                return null != t && e.startsWith("window:".concat(t))
            }
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            })
        },
        681937: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getAutomodQuarantinedProfileFlags: function() {
                    return a
                },
                getAutomodQuarantinedGuildMemberFlags: function() {
                    return l
                },
                hasAutomodQuarantinedProfile: function() {
                    return o
                }
            });
            var i = n("568734"),
                r = n("657944");
            let s = [r.GuildMemberFlags.AUTOMOD_QUARANTINED_BIO, r.GuildMemberFlags.AUTOMOD_QUARANTINED_USERNAME_OR_GUILD_NICKNAME];

            function a(e) {
                if (null == e) return new Set;
                let t = new Set(s.reduce((t, n) => ((0, i.hasFlag)(null != e ? e : 0, n) && t.push(n), t), []));
                return t
            }

            function l(e) {
                return null == e ? new Set : a(e.flags)
            }

            function o(e) {
                var t;
                return null != e && null != e.flags && s.some(n => (0, i.hasFlag)(null !== (t = e.flags) && void 0 !== t ? t : 0, n))
            }
        },
        509: function(e, t, n) {
            "use strict";

            function i(e) {
                return null != e && new Date(e) > new Date
            }

            function r(e) {
                return i(null == e ? void 0 : e.communicationDisabledUntil)
            }
            n.r(t), n.d(t, {
                isCommunicationDisabled: function() {
                    return i
                },
                isMemberCommunicationDisabled: function() {
                    return r
                }
            })
        },
        903639: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DisableCommunicationDuration: function() {
                    return r
                },
                getFriendlyDurationString: function() {
                    return o
                },
                getDisableCommunicationDurationOptions: function() {
                    return u
                },
                GUILD_COMMUNICATION_DISABLED_RESOURCE_LINK: function() {
                    return c
                },
                DISMISSED_COMMUNICATION_DISABLED_NOTIFICATION_GUILDS_KEY: function() {
                    return d
                },
                SET_COMMUNICATION_DISABLED_MODAL_NAME: function() {
                    return _
                },
                CLEAR_COMMUNICATION_DISABLED_MODAL_NAME: function() {
                    return E
                },
                MAX_REASON_LENGTH: function() {
                    return f
                }
            });
            var i, r, s = n("701909"),
                a = n("49111"),
                l = n("782340");

            function o(e) {
                switch (e) {
                    case r.DURATION_60_SEC:
                        return l.default.Messages.DURATION_SECS.format({
                            secs: 60
                        });
                    case r.DURATION_5_MIN:
                        return l.default.Messages.DURATION_MINS.format({
                            mins: 5
                        });
                    case r.DURATION_10_MIN:
                        return l.default.Messages.DURATION_MINS.format({
                            mins: 10
                        });
                    case r.DURATION_1_HOUR:
                        return l.default.Messages.DURATION_HOURS.format({
                            hours: 1
                        });
                    case r.DURATION_1_DAY:
                        return l.default.Messages.DURATION_DAYS.format({
                            days: 1
                        });
                    case r.DURATION_1_WEEK:
                        return l.default.Messages.DURATION_WEEKS.format({
                            weeks: 1
                        });
                    default:
                        return
                }
            }(i = r || (r = {}))[i.DURATION_60_SEC = 60] = "DURATION_60_SEC", i[i.DURATION_5_MIN = 300] = "DURATION_5_MIN", i[i.DURATION_10_MIN = 600] = "DURATION_10_MIN", i[i.DURATION_1_HOUR = 3600] = "DURATION_1_HOUR", i[i.DURATION_1_DAY = 86400] = "DURATION_1_DAY", i[i.DURATION_1_WEEK = 604800] = "DURATION_1_WEEK";
            let u = () => Object.keys(r).filter(e => isNaN(Number(e))).map(e => {
                    var t;
                    let n = null !== (t = o(r[e])) && void 0 !== t ? t : "";
                    return {
                        label: n,
                        value: r[e]
                    }
                }),
                c = s.default.getArticleURL(a.HelpdeskArticles.DISABLE_GUILD_COMMUNICATION),
                d = "GuildCommunicationDisabledDismissedGuilds",
                _ = "Set Communication Disabled Modal",
                E = "Clear Communication Disabled Modal",
                f = 512
        },
        564568: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCommunicationDisabledNoticeStore: function() {
                    return c
                },
                clearCommunicationDisabledNotice: function() {
                    return d
                }
            });
            var i = n("710835"),
                r = n("47370"),
                s = n("711638"),
                a = n("173333"),
                l = n("903639");
            let o = (0, s.default)((e, t) => ({
                    notificationDismissedInGuilds: function() {
                        var e;
                        let t = null !== (e = a.default.get(l.DISMISSED_COMMUNICATION_DISABLED_NOTIFICATION_GUILDS_KEY)) && void 0 !== e ? e : [];
                        return new Set(t)
                    }(),
                    dismissNotification: n => {
                        let i = t().notificationDismissedInGuilds;
                        i.add(n), a.default.set(l.DISMISSED_COMMUNICATION_DISABLED_NOTIFICATION_GUILDS_KEY, i), e({
                            notificationDismissedInGuilds: i
                        })
                    },
                    resetNotification: n => {
                        let i = t().notificationDismissedInGuilds;
                        i.has(n) && (i.delete(n), a.default.set(l.DISMISSED_COMMUNICATION_DISABLED_NOTIFICATION_GUILDS_KEY, i), e({
                            notificationDismissedInGuilds: i
                        }))
                    }
                })),
                u = (0, i.default)(o);

            function c(e) {
                let [t, n] = u(e => [e.notificationDismissedInGuilds, e.dismissNotification], r.default);
                return [!t.has(e), n]
            }

            function d(e) {
                return o.getState().resetNotification(e)
            }
        },
        560208: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getMessagesFromGuildFeedFetch: function() {
                    return a
                },
                getThreadsFromGuildFeedFetch: function() {
                    return l
                }
            });
            var i = n("402924"),
                r = n("449008");

            function s(e) {
                let t = e.children.map(e => s(e));
                return [e.messages.map(e => e.message), ...t].flat()
            }

            function a(e) {
                return e.results.items.flatMap(e => {
                    switch (e.type) {
                        case i.GuildFeedItemTypes.MESSAGE:
                        case i.GuildFeedItemTypes.FORUM_POST:
                            return [e.message];
                        case i.GuildFeedItemTypes.MESSAGE_BUNDLE:
                            return e.messages.map(e => e.message);
                        case i.GuildFeedItemTypes.CONVERSATION:
                            return s(e.root);
                        default:
                            (0, r.assertNever)(e)
                    }
                }).filter(r.isNotNullish)
            }

            function l(e) {
                return e.results.items.flatMap(e => {
                    let t = [];
                    switch (e.type) {
                        case i.GuildFeedItemTypes.MESSAGE:
                            t.push(e.message.thread);
                            break;
                        case i.GuildFeedItemTypes.FORUM_POST:
                            t.push(e.message.thread, e.thread);
                            break;
                        case i.GuildFeedItemTypes.MESSAGE_BUNDLE:
                            t.push(...e.messages.map(e => e.message.thread));
                            break;
                        case i.GuildFeedItemTypes.CONVERSATION:
                            t.push(...s(e.root).map(e => e.thread));
                            break;
                        default:
                            (0, r.assertNever)(e)
                    }
                    return t
                }).filter(r.isNotNullish)
            }
        },
        657944: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                GuildMemberFlags: function() {
                    return i
                }
            }), (r = i || (i = {}))[r.DID_REJOIN = 1] = "DID_REJOIN", r[r.COMPLETED_ONBOARDING = 2] = "COMPLETED_ONBOARDING", r[r.BYPASSES_VERIFICATION = 4] = "BYPASSES_VERIFICATION", r[r.STARTED_ONBOARDING = 8] = "STARTED_ONBOARDING", r[r.IS_GUEST = 16] = "IS_GUEST", r[r.STARTED_HOME_ACTIONS = 32] = "STARTED_HOME_ACTIONS", r[r.COMPLETED_HOME_ACTIONS = 64] = "COMPLETED_HOME_ACTIONS", r[r.AUTOMOD_QUARANTINED_USERNAME_OR_GUILD_NICKNAME = 128] = "AUTOMOD_QUARANTINED_USERNAME_OR_GUILD_NICKNAME", r[r.AUTOMOD_QUARANTINED_BIO = 256] = "AUTOMOD_QUARANTINED_BIO"
        },
        591023: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isActionedApplicationStatus: function() {
                    return r
                },
                isSubmittedApplicationStatus: function() {
                    return s
                },
                isApprovedAndAcked: function() {
                    return a
                },
                isActionedAndNotAcked: function() {
                    return l
                }
            });
            var i = n("567054");

            function r(e) {
                return e === i.GuildJoinRequestApplicationStatuses.APPROVED || e === i.GuildJoinRequestApplicationStatuses.REJECTED
            }

            function s(e) {
                return e === i.GuildJoinRequestApplicationStatuses.SUBMITTED
            }

            function a(e) {
                return e.applicationStatus === i.GuildJoinRequestApplicationStatuses.APPROVED && null != e.lastSeen
            }

            function l(e) {
                return r(e.applicationStatus) && null == e.lastSeen
            }
        },
        567054: function(e, t, n) {
            "use strict";
            var i, r, s, a, l, o, u, c;
            n.r(t), n.d(t, {
                MAX_RESULTS_PER_PAGE: function() {
                    return d
                },
                MAX_VISIBLE_PAGES: function() {
                    return _
                },
                VerificationFormFieldTypes: function() {
                    return i
                },
                GuildJoinRequestSortOrders: function() {
                    return s
                },
                GuildJoinRequestApplicationStatuses: function() {
                    return a
                },
                isTermsFormField: function() {
                    return E
                }
            });
            let d = 25,
                _ = 4;

            function E(e) {
                return null != e && e.field_type === i.TERMS
            }(l = i || (i = {})).TERMS = "TERMS", l.TEXT_INPUT = "TEXT_INPUT", l.PARAGRAPH = "PARAGRAPH", l.MULTIPLE_CHOICE = "MULTIPLE_CHOICE", l.VERIFICATION = "VERIFICATION", (o = r || (r = {})).EMAIL = "email", o.PHONE = "phone", (u = s || (s = {})).TIMESTAMP_DESC = "NEWEST", u.TIMESTAMP_ASC = "OLDEST", (c = a || (a = {})).STARTED = "STARTED", c.SUBMITTED = "SUBMITTED", c.REJECTED = "REJECTED", c.APPROVED = "APPROVED"
        },
        982527: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                joinRequestFromServer: function() {
                    return d
                },
                default: function() {
                    return f
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("813006"),
                a = n("697218"),
                l = n("591023");
            let o = {},
                u = !1,
                c = {};

            function d(e) {
                return {
                    id: e.id,
                    guildId: e.guild_id,
                    userId: e.user_id,
                    user: e.user,
                    createdAt: e.created_at,
                    formResponses: e.form_responses,
                    rejectionReason: e.rejection_reason,
                    applicationStatus: e.application_status,
                    actionedAt: e.actioned_at,
                    actionedByUser: e.actioned_by_user,
                    lastSeen: e.last_seen
                }
            }

            function _(e) {
                let {
                    guildId: t,
                    request: n
                } = e;
                if (null == n) return;
                let i = d(n),
                    r = a.default.getCurrentUser();
                if (null != r && i.userId !== r.id) return !1;
                (0, l.isApprovedAndAcked)(i) ? delete o[t]: o[t] = i
            }
            class E extends i.default.Store {
                getRequest(e) {
                    return o[e]
                }
                computeGuildIds() {
                    return Object.values(o).map(e => null == e ? void 0 : e.guildId).filter(e => null != e)
                }
                getJoinRequestGuild(e) {
                    return null != c[e] ? new s.default(c[e]) : null
                }
                get hasFetchedRequestToJoinGuilds() {
                    return u
                }
            }
            E.displayName = "UserGuildJoinRequestStore";
            var f = new E(r.default, {
                CONNECTION_OPEN: function(e) {
                    let {
                        guildJoinRequests: t
                    } = e;
                    u = !1, c = {}, o = {}, t.forEach(e => {
                        let {
                            guild_id: t
                        } = e;
                        null != t && (o[t] = d(e))
                    })
                },
                GUILD_JOIN_REQUEST_UPDATE: _,
                GUILD_JOIN_REQUEST_CREATE: _,
                USER_GUILD_JOIN_REQUEST_UPDATE: function(e) {
                    let {
                        request: t,
                        guildId: n
                    } = e;
                    if (null == t) {
                        delete o[n];
                        return
                    }
                    let i = d(t);
                    (0, l.isApprovedAndAcked)(i) ? delete o[n]: o[n] = i
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    delete o[t.id]
                },
                USER_JOIN_REQUEST_GUILDS_FETCH: function(e) {
                    let {
                        guilds: t
                    } = e;
                    u = !0, t.forEach(e => {
                        let {
                            id: t,
                            name: n,
                            features: i,
                            icon: r
                        } = e;
                        c[t] = {
                            id: t,
                            name: n,
                            features: i,
                            icon: r
                        }
                    })
                },
                MEMBER_VERIFICATION_FORM_UPDATE: function(e) {
                    let {
                        form: t,
                        guildId: n
                    } = e;
                    if ((null == t ? void 0 : t.guild) != null) {
                        let {
                            id: e,
                            name: i,
                            icon: r,
                            features: s
                        } = t.guild;
                        c[n] = {
                            id: e,
                            name: i,
                            icon: r,
                            features: null != s ? s : []
                        }
                    }
                },
                INVITE_ACCEPT_SUCCESS: function(e) {
                    let {
                        invite: t
                    } = e, {
                        guild: n,
                        join_request: i
                    } = t;
                    if (null != n && null != i) {
                        let {
                            guild_id: e
                        } = i;
                        o[e] = d(i);
                        let {
                            id: t,
                            name: r,
                            icon: s,
                            features: a
                        } = n;
                        c[t] = {
                            id: t,
                            name: r,
                            icon: s,
                            features: null != a ? a : []
                        }
                    }
                },
                ACK_APPROVED_GUILD_JOIN_REQUEST: function(e) {
                    let {
                        guildId: t
                    } = e;
                    delete o[t]
                }
            })
        },
        562980: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MemberSafetyPagePermissions: function() {
                    return s
                }
            });
            var i = n("754013"),
                r = n("49111");
            let s = i.default.combine(r.Permissions.ADMINISTRATOR, r.Permissions.MANAGE_GUILD, r.Permissions.BAN_MEMBERS, r.Permissions.KICK_MEMBERS, r.Permissions.MODERATE_MEMBERS, r.Permissions.MANAGE_ROLES, r.Permissions.MANAGE_NICKNAMES)
        },
        648747: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                canChannelBeDefault: function() {
                    return l
                }
            }), n("498225");
            var i = n("203288"),
                r = n("42203"),
                s = n("991170"),
                a = n("49111");

            function l(e, t) {
                return i.default.isChannelGated(e, t) || s.default.canEveryoneRole(a.Permissions.VIEW_CHANNEL, r.default.getChannel(t))
            }
        },
        471706: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildOnboardingStatus: function() {
                    return r
                },
                isOnboarding: function() {
                    return o
                },
                default: function() {
                    return _
                }
            });
            var i, r, s = n("498225"),
                a = n("913144"),
                l = n("49111");

            function o(e) {
                return null != e && [r.STARTED, r.READY].includes(e)
            }(i = r || (r = {})).STARTED = "started", i.READY = "ready", i.COMPLETED = "completed", i.NOT_APPLICABLE = "not_applicable";
            let u = {},
                c = {};
            class d extends s.default.Store {
                shouldShowOnboarding(e) {
                    if (e === l.ME || e === l.FAVORITES) return !1;
                    let t = u[e];
                    return !!o(t) || !1
                }
                getOnboardingStatus(e) {
                    return u[e]
                }
                resetOnboardingStatus(e) {
                    u[e] = r.STARTED, c[e] = "cover"
                }
                getCurrentOnboardingStep(e) {
                    var t;
                    return null !== (t = c[e]) && void 0 !== t ? t : "cover"
                }
            }
            d.displayName = "GuildOnboardingStore";
            var _ = new d(a.default, {
                LOGOUT: function() {
                    u = {}, c = {}
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    delete u[t.id], delete c[t.id]
                },
                GUILD_ONBOARDING_START: function(e) {
                    let {
                        guildId: t
                    } = e;
                    u[t] = r.STARTED
                },
                GUILD_ONBOARDING_PROMPTS_FETCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        enabled: n
                    } = e;
                    if (u[t] !== r.STARTED) return !1;
                    n ? u[t] = r.READY : u[t] = r.NOT_APPLICABLE
                },
                GUILD_ONBOARDING_PROMPTS_FETCH_FAILURE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    u[t] = r.NOT_APPLICABLE
                },
                GUILD_ONBOARDING_COMPLETE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    u[t] = r.COMPLETED
                },
                GUILD_ONBOARDING_SET_STEP: function(e) {
                    let {
                        guildId: t,
                        step: n
                    } = e;
                    c[t] = n
                },
                CONNECTION_OPEN: function() {
                    c = {}
                }
            })
        },
        380710: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useGuildOnboardingSettingsAvailable: function() {
                    return h
                },
                isGuildOnboardingSettingsAvailable: function() {
                    return S
                },
                isBlockedByOnboarding: function() {
                    return T
                },
                getChannelCoverageForOnboarding: function() {
                    return m
                },
                useChannelCoverageForOnboarding: function() {
                    return g
                },
                isChattableChannelId: function() {
                    return A
                },
                isChattableChannel: function() {
                    return C
                },
                useIsChattableChannel: function() {
                    return R
                },
                getMinimumSetOfDefaultChannelIds: function() {
                    return N
                },
                getChattableDefaultChannels: function() {
                    return D
                },
                useChattableDefaultChannels: function() {
                    return L
                },
                getSelectedRoleIds: function() {
                    return M
                },
                getSelectedChannelIds: function() {
                    return P
                }
            });
            var i = n("498225"),
                r = n("656038"),
                s = n("42203"),
                a = n("923959"),
                l = n("305961"),
                o = n("957255"),
                u = n("568734"),
                c = n("449008"),
                d = n("991170"),
                _ = n("648747"),
                E = n("49111"),
                f = n("657944");
            let p = new Date(16824888e5);

            function h(e) {
                let t = (0, i.useStateFromStores)([l.default], () => l.default.getGuild(e)),
                    n = !!(null == t ? void 0 : t.hasFeature(E.GuildFeatures.COMMUNITY)),
                    r = o.default.can(E.Permissions.MANAGE_GUILD, t),
                    s = o.default.can(E.Permissions.MANAGE_ROLES, t);
                return n && r && s
            }

            function S(e) {
                let t = l.default.getGuild(e),
                    n = !!(null == t ? void 0 : t.hasFeature(E.GuildFeatures.COMMUNITY)),
                    i = o.default.can(E.Permissions.MANAGE_GUILD, t),
                    r = o.default.can(E.Permissions.MANAGE_ROLES, t);
                return n && i && r
            }

            function T(e, t) {
                var n;
                if (null == e || !e.hasFeature(E.GuildFeatures.GUILD_ONBOARDING) || null == t || null == t.joinedAt || new Date(t.joinedAt) < p) return !1;
                let i = null !== (n = t.flags) && void 0 !== n ? n : 0;
                return u.hasFlag(i, f.GuildMemberFlags.STARTED_ONBOARDING) && !u.hasFlag(i, f.GuildMemberFlags.COMPLETED_ONBOARDING)
            }

            function I(e, t, n) {
                let i = new Set;
                e.forEach(e => {
                    e.options.forEach(e => {
                        var t;
                        null == e || null === (t = e.channelIds) || void 0 === t || t.forEach(e => {
                            i.add(e)
                        })
                    })
                }), t.forEach(e => i.add(e));
                let s = n.filter(e => !e.isCategory() && !e.isThread() && !(0, r.default)(e)),
                    a = s.filter(e => i.has(e.id) || null != e.parent_id && i.has(e.parent_id)),
                    l = s.filter(e => !i.has(e.id) && !(null != e.parent_id && i.has(e.parent_id)));
                return [a, l]
            }

            function m(e, t, n) {
                let i = a.default.getChannels(e);
                return I(t, n, i[0, a.GUILD_SELECTABLE_CHANNELS_KEY].map(e => {
                    let {
                        channel: t
                    } = e;
                    return t
                }))
            }

            function g(e, t, n) {
                let r = (0, i.useStateFromStores)([a.default], () => a.default.getChannels(e));
                return I(t, n, r[0, a.GUILD_SELECTABLE_CHANNELS_KEY].map(e => {
                    let {
                        channel: t
                    } = e;
                    return t
                }))
            }

            function A(e) {
                let t = s.default.getChannel(e);
                return C(t)
            }

            function C(e) {
                return !!(null != e && (0, _.canChannelBeDefault)(e.guild_id, e.id)) && (e.isForumChannel() ? d.default.canEveryoneRole(E.Permissions.SEND_MESSAGES_IN_THREADS, e) : d.default.canEveryoneRole(E.Permissions.SEND_MESSAGES, e))
            }

            function R(e) {
                let t = (0, i.useStateFromStores)([s.default], () => s.default.getChannel(e));
                return (0, c.isNotNullish)(t) && C(t)
            }

            function N(e, t, n) {
                let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : () => !0,
                    r = O(e, t).map(e => e.id).filter(i);
                return n.forEach(t => {
                    var n, s;
                    if (!t.required) return;
                    let a = O(e, null !== (s = null === (n = t.options[0]) || void 0 === n ? void 0 : n.channelIds) && void 0 !== s ? s : []).map(e => e.id),
                        l = t.options.reduce((t, n) => {
                            if (null == n.channelIds) return [];
                            let s = O(e, n.channelIds),
                                a = s.map(e => e.id).filter(e => i(e) && !r.includes(e));
                            return a.length < t.length ? a : t
                        }, a);
                    r.push(...l)
                }), r
            }

            function v(e, t) {
                let n = e.filter(e => {
                    let n = t.find(t => {
                        let {
                            channel: n
                        } = t;
                        return n.id === e
                    });
                    return C(null == n ? void 0 : n.channel)
                });
                return n
            }

            function O(e, t) {
                let n = a.default.getChannels(e),
                    i = n[a.GUILD_SELECTABLE_CHANNELS_KEY];
                return i.filter(e => {
                    let {
                        channel: n
                    } = e;
                    return (0, _.canChannelBeDefault)(n.guild_id, n.id) && (t.includes(n.id) && !n.isCategory() || !n.isThread() && null != n.parent_id && t.includes(n.parent_id))
                }).map(e => {
                    let {
                        channel: t
                    } = e;
                    return t
                })
            }

            function D(e, t) {
                let n = O(e, t),
                    i = a.default.getChannels(e),
                    r = i[a.GUILD_SELECTABLE_CHANNELS_KEY],
                    s = v(n.map(e => {
                        let {
                            id: t
                        } = e;
                        return t
                    }), r);
                return [s, n]
            }

            function L(e, t) {
                let n = function(e, t) {
                        let n = (0, i.useStateFromStores)([a.default], () => a.default.getChannels(e)),
                            r = n[a.GUILD_SELECTABLE_CHANNELS_KEY];
                        return r.filter(e => {
                            let {
                                channel: n
                            } = e;
                            return (0, _.canChannelBeDefault)(n.guild_id, n.id) && (t.includes(n.id) && !n.isCategory() || !n.isThread() && null != n.parent_id && t.includes(n.parent_id))
                        }).map(e => {
                            let {
                                channel: t
                            } = e;
                            return t
                        })
                    }(e, t),
                    r = (0, i.useStateFromStores)([a.default], () => a.default.getChannels(e)),
                    s = r[a.GUILD_SELECTABLE_CHANNELS_KEY],
                    l = v(n.map(e => {
                        let {
                            id: t
                        } = e;
                        return t
                    }), s);
                return [l, n]
            }

            function M(e) {
                return new Set(e.map(e => e.roleIds).flat().filter(c.isNotNullish))
            }

            function P(e) {
                return new Set(e.map(e => e.channelIds).flat().filter(c.isNotNullish))
            }
        },
        698882: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NO_SETTINGS: function() {
                    return s
                },
                default: function() {
                    return E
                }
            });
            var i = n("498225"),
                r = n("913144");
            let s = {
                    enabled: !1
                },
                a = [],
                l = {},
                o = new Set,
                u = {};

            function c(e) {
                var t;
                let n = null === (t = l[e]) || void 0 === t ? void 0 : t.newMemberActions;
                return null == n ? null : (u[e] = n, u[e])
            }

            function d(e) {
                let {
                    homeSettings: t,
                    guildId: n
                } = e;
                null != n && (null == t && (l[n] = s), l[n] = t, c(n), o.delete(n))
            }
            class _ extends i.default.Store {
                getSettings(e) {
                    var t;
                    return null == e ? null : null !== (t = l[e]) && void 0 !== t ? t : s
                }
                getNewMemberActions(e) {
                    var t;
                    return null == e || (null === (t = this.getSettings(e)) || void 0 === t ? void 0 : t.newMemberActions) == null ? null : null == u[e] ? c(e) : u[e]
                }
                getActionForChannel(e, t) {
                    var n;
                    let i = this.getSettings(e);
                    return null == i ? null : (null !== (n = i.newMemberActions) && void 0 !== n ? n : []).find(e => e.channelId === t)
                }
                hasMemberAction(e, t) {
                    return null != this.getActionForChannel(e, t)
                }
                getResourceChannels(e) {
                    var t, n;
                    return null !== (n = null === (t = l[e]) || void 0 === t ? void 0 : t.resourceChannels) && void 0 !== n ? n : a
                }
                getResourceForChannel(e, t) {
                    if (null == e) return null;
                    let n = this.getResourceChannels(e);
                    return n === a ? null : n.find(e => e.channelId === t)
                }
                getIsLoading(e) {
                    return null != e && o.has(e)
                }
                getWelcomeMessage(e) {
                    var t;
                    if (null != e) return null === (t = l[e]) || void 0 === t ? void 0 : t.welcomeMessage
                }
                hasSettings(e) {
                    return null != e && null != l[e]
                }
                getEnabled(e) {
                    var t, n;
                    return null != e && null !== (n = null === (t = l[e]) || void 0 === t ? void 0 : t.enabled) && void 0 !== n && n
                }
                getNewMemberAction(e, t) {
                    var n, i, r;
                    return null == e || null == t ? null : null !== (r = null === (i = l[e]) || void 0 === i ? void 0 : null === (n = i.newMemberActions) || void 0 === n ? void 0 : n.find(e => e.channelId === t)) && void 0 !== r ? r : null
                }
            }
            _.displayName = "GuildOnboardingHomeSettingsStore";
            var E = new _(r.default, {
                GUILD_HOME_SETTINGS_FETCH_START: function(e) {
                    let {
                        guildId: t
                    } = e;
                    o.add(t)
                },
                GUILD_HOME_SETTINGS_FETCH_SUCCESS: d,
                GUILD_HOME_SETTINGS_FETCH_FAIL: function(e) {
                    let {
                        guildId: t
                    } = e;
                    o.delete(t)
                },
                GUILD_HOME_SETTINGS_UPDATE_SUCCESS: d,
                GUILD_HOME_SETTINGS_TOGGLE_ENABLED: function(e) {
                    let {
                        guildId: t,
                        enabled: n
                    } = e, i = l[t];
                    if (null == i) return !1;
                    i.enabled = n
                },
                GUILD_RESOURCE_CHANNEL_UPDATE_SUCCESS: function(e) {
                    var t;
                    let {
                        guildId: n,
                        resourceChannel: i
                    } = e, r = l[n];
                    if (null == r) return !1;
                    r.resourceChannels = null !== (t = r.resourceChannels) && void 0 !== t ? t : [];
                    let s = r.resourceChannels.findIndex(e => e.channelId === i.channelId);
                    return -1 !== s && (r.resourceChannels[s] = {
                        ...i
                    }, !0)
                },
                GUILD_NEW_MEMBER_ACTION_UPDATE_SUCCESS: function(e) {
                    var t;
                    let {
                        guildId: n,
                        action: i
                    } = e, r = l[n];
                    if (null == r) return !1;
                    r.newMemberActions = null !== (t = r.newMemberActions) && void 0 !== t ? t : [];
                    let s = r.newMemberActions.findIndex(e => e.channelId === i.channelId);
                    return -1 !== s && (r.newMemberActions[s] = {
                        ...i
                    }, !0)
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    if (null == l[t.id]) return !1;
                    delete l[t.id], delete u[t.id]
                }
            })
        },
        233706: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useOnboardingHomeAdminExperiment: function() {
                    return a
                },
                getOnboardingHomeAdminExperiment: function() {
                    return l
                },
                useOptionalOnboardingHomeAdminExperiment: function() {
                    return o
                },
                getOptionalOnboardingHomeAdminExperiment: function() {
                    return u
                },
                default: function() {
                    return c
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                    kind: "guild",
                    id: "2023-02_onboarding_home_admin",
                    label: "[ADMIN] Home as a community onboarding surface",
                    defaultConfig: {
                        homeSettingsEnabled: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Show the Onboarding Version of Home in Admin Settings",
                        config: {
                            homeSettingsEnabled: !0
                        }
                    }]
                }),
                s = (0, i.createExperiment)({
                    kind: "guild",
                    id: "2023-05_optional_onboarding_home_admin",
                    label: "[ADMIN] Make server guide optional",
                    defaultConfig: {
                        serverGuideOptional: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Optional",
                        config: {
                            serverGuideOptional: !0
                        }
                    }]
                });

            function a(e) {
                return r.useExperiment({
                    guildId: e,
                    location: "259c05_1"
                }, {
                    autoTrackExposure: !0
                })
            }

            function l(e) {
                return r.getCurrentConfig({
                    guildId: e,
                    location: "259c05_2"
                })
            }

            function o(e) {
                return s.useExperiment({
                    guildId: e,
                    location: "259c05_3"
                }, {
                    autoTrackExposure: !0
                })
            }

            function u(e) {
                return s.getCurrentConfig({
                    guildId: e,
                    location: "259c05_4"
                })
            }
            var c = r
        },
        6263: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useOnboardingHomeExperiment: function() {
                    return l
                },
                default: function() {
                    return o
                }
            });
            var i = n("862205"),
                r = n("49111");
            let s = new Date(168264e7),
                a = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-02_onboarding_home",
                    label: "Home as a community onboarding surface",
                    defaultConfig: {
                        showOnboardingHome: !1,
                        enableDevItems: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Show the Onboarding Version of Home",
                        config: {
                            showOnboardingHome: !0,
                            enableDevItems: !1
                        }
                    }, {
                        id: 2,
                        label: "Onboarding Home DEV",
                        config: {
                            showOnboardingHome: !0,
                            enableDevItems: !0
                        }
                    }, {
                        id: 3,
                        label: "Show the Onboarding Version of Home",
                        config: {
                            showOnboardingHome: !0,
                            enableDevItems: !1
                        }
                    }]
                });

            function l(e, t) {
                var n;
                let i = __OVERLAY__ || null == e || e.id === r.ME || e.id === r.FAVORITES || !e.hasFeature(r.GuildFeatures.COMMUNITY) || !e.hasFeature(r.GuildFeatures.GUILD_SERVER_GUIDE) || !e.hasFeature(r.GuildFeatures.GUILD_ONBOARDING),
                    l = new Date(null !== (n = null == t ? void 0 : t.joinedAt) && void 0 !== n ? n : 0);
                return a.useExperiment({
                    location: "d98574_1"
                }, {
                    disable: i,
                    autoTrackExposure: null != t && l >= s
                })
            }
            var o = a
        },
        290886: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanSeeOnboardingHome: function() {
                    return I
                },
                canSeeOnboardingHome: function() {
                    return m
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("744196"),
                a = n("380710"),
                l = n("38654"),
                o = n("21121"),
                u = n("42203"),
                c = n("26989"),
                d = n("305961"),
                _ = n("698882"),
                E = n("233706"),
                f = n("6263"),
                p = n("363176"),
                h = n("49111"),
                S = n("724210");

            function T(e) {
                var t;
                let n = e.id,
                    {
                        homeSettingsEnabled: i
                    } = E.default.getCurrentConfig({
                        guildId: n,
                        location: "61eef9_1"
                    }, {
                        autoTrackExposure: !1
                    }),
                    r = (null !== (t = _.default.getNewMemberActions(n)) && void 0 !== t ? t : []).length > 0,
                    s = _.default.getEnabled(n);
                return i && r && e.hasFeature(h.GuildFeatures.COMMUNITY) && !(e.hasFeature(h.GuildFeatures.GUILD_ONBOARDING) && !s)
            }

            function I(e) {
                let t = (0, s.default)([d.default], () => d.default.getGuild(e)),
                    n = (0, s.default)([c.default], () => c.default.getSelfMember(e)),
                    {
                        showOnboardingHome: i
                    } = (0, f.useOnboardingHomeExperiment)(t, n),
                    {
                        homeSettingsEnabled: o
                    } = E.default.useExperiment({
                        guildId: e,
                        location: "61eef9_2"
                    }, {
                        autoTrackExposure: !1
                    }),
                    _ = (0, s.default)([l.default], () => l.default.isFullServerPreview(e)),
                    I = (0, p.default)(e),
                    m = (0, s.default)([u.default], () => u.default.getMutableGuildChannelsForGuild(e));
                if (null == t || __OVERLAY__ || e === h.ME || e === h.FAVORITES) return !1;
                if (_) return T(t);
                let g = o && (0, a.isGuildOnboardingSettingsAvailable)(e) && t.hasFeature(h.GuildFeatures.GUILD_ONBOARDING) && t.hasFeature(h.GuildFeatures.GUILD_SERVER_GUIDE),
                    A = r.some(r.values(m), e => e.hasFlag(S.ChannelFlags.IS_GUILD_RESOURCE_CHANNEL));
                return !(!I && !A) && (i && t.hasFeature(h.GuildFeatures.GUILD_ONBOARDING) && t.hasFeature(h.GuildFeatures.GUILD_SERVER_GUIDE) || g) && t.hasFeature(h.GuildFeatures.COMMUNITY)
            }

            function m(e) {
                let t = d.default.getGuild(e),
                    {
                        showOnboardingHome: n
                    } = f.default.getCurrentConfig({
                        location: "61eef9_3"
                    }, {
                        autoTrackExposure: !1
                    }),
                    {
                        homeSettingsEnabled: i
                    } = E.default.getCurrentConfig({
                        guildId: e,
                        location: "61eef9_4"
                    }),
                    r = l.default.isFullServerPreview(e);
                if (null == t || __OVERLAY__ || e === h.ME || e === h.FAVORITES || (0, o.isInMainTabsExperiment)()) return !1;
                if (r) return T(t);
                let s = i && (0, a.isGuildOnboardingSettingsAvailable)(e) && t.hasFeature(h.GuildFeatures.GUILD_ONBOARDING) && t.hasFeature(h.GuildFeatures.GUILD_SERVER_GUIDE);
                return (n && t.hasFeature(h.GuildFeatures.GUILD_ONBOARDING) && t.hasFeature(h.GuildFeatures.GUILD_SERVER_GUIDE) || s) && t.hasFeature(h.GuildFeatures.COMMUNITY)
            }
        },
        363176: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getIsNewMember: function() {
                    return u
                },
                default: function() {
                    return c
                }
            });
            var i = n("498225"),
                r = n("38654"),
                s = n("26989"),
                a = n("718517"),
                l = n("568734"),
                o = n("657944");

            function u(e) {
                var t;
                let n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    i = (null == e ? void 0 : e.joinedAt) == null ? null : new Date(e.joinedAt),
                    r = new Date;
                return !!n || null != i && r.getTime() - i.getTime() < a.default.Millis.WEEK && !(0, l.hasFlag)(null !== (t = null == e ? void 0 : e.flags) && void 0 !== t ? t : 0, o.GuildMemberFlags.COMPLETED_HOME_ACTIONS)
            }

            function c(e) {
                let t = (0, i.useStateFromStores)([s.default], () => s.default.getSelfMember(e)),
                    n = (0, i.useStateFromStores)([r.default], () => r.default.isFullServerPreview(e));
                return u(t, n)
            }
        },
        858560: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildRoleSubscriptionsExperiment: function() {
                    return s
                },
                GuildRoleSubscriptionUsersExperiment: function() {
                    return a
                },
                GuildRoleSubscriptionMaxTiersExperiment: function() {
                    return l
                },
                GuildRoleSubscriptionsTierTemplatesExperiment: function() {
                    return o
                },
                GuildRoleSubscriptionsTierTemplatesUserExperiment: function() {
                    return u
                }
            });
            var i = n("862205"),
                r = n("677795");
            let s = (0, i.createExperiment)({
                    kind: "guild",
                    id: "2021-06_guild_role_subscriptions",
                    label: "Guild Role Subscriptions",
                    defaultConfig: {
                        enableRoleSubscriptionsForGuild: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables guild to create Guild Role Subscriptions",
                        config: {
                            enableRoleSubscriptionsForGuild: !0
                        }
                    }]
                }),
                a = (0, i.createExperiment)({
                    kind: "user",
                    id: "2021-08_guild_role_subscription_users",
                    label: "Guild Role Subscription Users",
                    defaultConfig: {
                        enableRoleSubscriptionsForUser: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables users to create Guild Role Subscriptions",
                        config: {
                            enableRoleSubscriptionsForUser: !0
                        }
                    }]
                });
            (0, i.createExperiment)({
                kind: "guild",
                id: "2022-01_guild_role_subscription_trials",
                label: "Guild Role Subscription Trials",
                defaultConfig: {
                    enableRoleSubscriptionTrialsForGuild: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enables guild to create Guild Role Subscription Trials",
                    config: {
                        enableRoleSubscriptionTrialsForGuild: !0
                    }
                }]
            }), (0, i.createExperiment)({
                kind: "user",
                id: "2022-06_native_mobile_role_subscription_management",
                label: "Mobile Guild Role Subscription Management",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable native role subscription management for mobile",
                    config: {
                        enabled: !0
                    }
                }]
            });
            let l = (0, i.createExperiment)({
                kind: "guild",
                id: "2022-07_guild_role_subscriptions_variable_max_tiers",
                label: "Guild Role Subscription Max Tiers",
                defaultConfig: {
                    enabled: !1,
                    maxTiers: r.MAX_SUBSCRIPTION_TIERS
                },
                treatments: [4, 5, 6].map(e => ({
                    id: e,
                    label: "Enables {n} maximum published tiers",
                    config: {
                        enabled: !0,
                        maxTiers: e
                    }
                }))
            });
            (0, i.createExperiment)({
                kind: "guild",
                id: "2022-12_mobile_guild_role_subscription_team_setup",
                label: "Mobile Guild Role Subscription Team Setup",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enables guild to allow payout team setup on mobile",
                    config: {
                        enabled: !0
                    }
                }]
            });
            let o = (0, i.createExperiment)({
                    kind: "guild",
                    id: "2023-03_server_subscriptions_tier_templates",
                    label: "Server Subscriptions Tier Templates",
                    defaultConfig: {
                        enabled: !1,
                        showCreatorPortalLink: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "299 basic tier + no link",
                        config: {
                            enabled: !0,
                            showCreatorPortalLink: !1
                        }
                    }, {
                        id: 2,
                        label: "399 basic tier + no link",
                        config: {
                            enabled: !0,
                            showCreatorPortalLink: !1
                        }
                    }, {
                        id: 3,
                        label: "399 basic tier + link",
                        config: {
                            enabled: !0,
                            showCreatorPortalLink: !0
                        }
                    }]
                }),
                u = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-04_server_subscriptions_tier_templates_user",
                    label: "Server Subscriptions Tier Templates",
                    defaultConfig: {
                        enabled: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enable tier templates for user",
                        config: {
                            enabled: !0
                        }
                    }]
                })
        },
        677795: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MAX_SUBSCRIPTION_TIERS: function() {
                    return E
                },
                RESPONSIVE_MOBILE_WIDTH_SIZE_QUERY: function() {
                    return f
                },
                RESPONSIVE_MOBILE_HEIGHT_SMALL_QUERY: function() {
                    return p
                },
                GuildRoleSubscriptionBenefitTypes: function() {
                    return o
                },
                GuildRoleSubscriptionFormat: function() {
                    return u
                },
                TIER_TRIAL_INTERVALS: function() {
                    return h
                },
                UserGuildRoleSubscriptionRelationship: function() {
                    return c
                },
                CREATOR_REVENUE_PORTAL_URL: function() {
                    return S
                },
                CREATOR_REVENUE_SHARE_PERCENTAGE: function() {
                    return T
                },
                SERVER_SUBSCRIPTIONS_PREMIUM_CHECKLIST_EDUCATIONAL_URLS: function() {
                    return I
                }
            });
            var i, r, s, a, l, o, u, c, d = n("646718"),
                _ = n("809924");
            let E = 3,
                f = "(max-width: 485px)",
                p = "(max-height: 450px)";
            (i = l || (l = {})).GATING = "GATING", i.GROUP = "GROUP", i.DETAILS = "DETAILS", i.BENEFITS = "BENEFITS", i.CHANNEL_BENEFITS = "CHANNEL_BENEFITS", i.INTANGIBLE_BENEFITS = "INTANGIBLE_BENEFITS ", i.DESIGN = "DESIGN", i.CONFIRMATION = "CONFIRMATION", i.MEMBERS = "MEMBERS", (r = o || (o = {}))[r.CHANNEL = 1] = "CHANNEL", r[r.INTANGIBLE = 2] = "INTANGIBLE", (s = u || (u = {}))[s.SOME_CHANNELS = 0] = "SOME_CHANNELS", s[s.ALL_CHANNELS = 1] = "ALL_CHANNELS";
            let h = [{
                interval: d.SubscriptionIntervalTypes.DAY,
                interval_count: 1
            }, {
                interval: d.SubscriptionIntervalTypes.DAY,
                interval_count: 7
            }];
            (a = c || (c = {}))[a.NONE = 0] = "NONE", a[a.IN_SUBSCRIPTION_SERVER = 1] = "IN_SUBSCRIPTION_SERVER", a[a.SUBSCRIBED = 2] = "SUBSCRIBED";
            let S = "https://".concat(_.PRIMARY_DOMAIN, "/creators"),
                T = 90,
                I = Object.freeze({
                    PROMO_PAGE_GUIDE: "https://discord.com/creators/say-hello-to-promo-pages-our-new-server-subscriptions-feature",
                    CASE_STUDIES: "https://discord.com/creator-portal/learn-from-creators?tab=creator-case-studies",
                    SUBSCRIPTION_OFFERING_GUIDE: "https://discord.com/creators/offering-inspiration-",
                    TIER_STRUCTURE_GUIDE: "https://discord.com/creators/server-subs-102-to-tier-or-not-to-tier"
                })
        },
        808388: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useGuildEligibleForRoleSubscriptions: function() {
                    return s
                },
                isGuildEligibleForRoleSubscriptions: function() {
                    return a
                },
                useRoleSubscriptionMaxTiersExperiment: function() {
                    return l
                },
                hasEnabledMonetization: function() {
                    return u
                },
                isGuildEligibleForTierTemplates: function() {
                    return c
                },
                useGuildEligibleForTierTemplates: function() {
                    return d
                },
                useShowCreatorPortalLinkForTierTemplates: function() {
                    return _
                },
                isUserEligibleForTierTemplates: function() {
                    return E
                },
                useUserEligibleForTierTemplates: function() {
                    return f
                }
            }), n("7331");
            var i = n("858560"),
                r = n("49111");

            function s(e) {
                let {
                    enableRoleSubscriptionsForGuild: t
                } = i.GuildRoleSubscriptionsExperiment.useExperiment({
                    guildId: null != e ? e : "",
                    location: "504714_1"
                }, {
                    autoTrackExposure: !0
                }), {
                    enableRoleSubscriptionsForUser: n
                } = i.GuildRoleSubscriptionUsersExperiment.useExperiment({
                    location: "504714_2"
                }, {
                    autoTrackExposure: !1
                });
                return null != e && t && n
            }

            function a(e) {
                let {
                    enableRoleSubscriptionsForGuild: t
                } = i.GuildRoleSubscriptionsExperiment.getCurrentConfig({
                    guildId: null != e ? e : "",
                    location: "504714_3"
                }), {
                    enableRoleSubscriptionsForUser: n
                } = i.GuildRoleSubscriptionUsersExperiment.getCurrentConfig({
                    location: "504714_4"
                }, {
                    autoTrackExposure: !1
                });
                return null != e && t && n
            }

            function l(e) {
                return i.GuildRoleSubscriptionMaxTiersExperiment.useExperiment({
                    guildId: null != e ? e : "",
                    location: "504714_7"
                })
            }
            let o = [r.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED, r.GuildFeatures.CREATOR_MONETIZABLE, r.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL],
                u = e => null != e && o.some(t => e.hasFeature(t));

            function c(e) {
                let {
                    enabled: t
                } = i.GuildRoleSubscriptionsTierTemplatesExperiment.getCurrentConfig({
                    guildId: null != e ? e : "",
                    location: "504714_9"
                }, {
                    autoTrackExposure: !1
                });
                return t
            }

            function d(e) {
                let {
                    enabled: t
                } = i.GuildRoleSubscriptionsTierTemplatesExperiment.useExperiment({
                    guildId: null != e ? e : "",
                    location: "504714_10"
                }, {
                    autoTrackExposure: !1
                });
                return t
            }

            function _(e) {
                let {
                    showCreatorPortalLink: t
                } = i.GuildRoleSubscriptionsTierTemplatesExperiment.useExperiment({
                    guildId: null != e ? e : "",
                    location: "504714_11"
                }, {
                    autoTrackExposure: !1
                });
                return t
            }

            function E() {
                let {
                    enabled: e
                } = i.GuildRoleSubscriptionsTierTemplatesUserExperiment.getCurrentConfig({
                    location: "504714_12"
                }, {
                    autoTrackExposure: !1
                });
                return e
            }

            function f() {
                let {
                    enabled: e
                } = i.GuildRoleSubscriptionsTierTemplatesUserExperiment.useExperiment({
                    location: "504714_13"
                }, {
                    autoTrackExposure: !1
                });
                return e
            }
        },
        648825: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FetchState: function() {
                    return r
                },
                default: function() {
                    return L
                }
            });
            var i, r, s = n("161179"),
                a = n.n(s),
                l = n("498225"),
                o = n("810479"),
                u = n("913144"),
                c = n("139170");

            function d(e) {
                return "guild:".concat(e)
            }

            function _(e) {
                return "subscription_listing:".concat(e)
            }

            function E(e) {
                return "application:".concat(e)
            }

            function f(e) {
                return "plan:".concat(e)
            }(i = r || (r = {}))[i.NOT_FETCHED = 0] = "NOT_FETCHED", i[i.FETCHING = 1] = "FETCHING", i[i.FETCHED = 2] = "FETCHED";
            let p = new o.default(e => [d(e.guild_id), ...e.subscription_listings_ids.map(_)], e => e.id),
                h = new o.default(e => [E(e.application_id), f(e.subscription_plans[0].id)], e => e.id),
                S = {},
                T = new Set,
                I = {},
                m = {},
                g = {},
                A = {},
                C = new Map;

            function R(e) {
                return p.values(d(e))
            }

            function N(e) {
                var t;
                for (let n of (p.set(e.id, e), C.set(e.guild_id, e.application_id), null !== (t = e.subscription_listings) && void 0 !== t ? t : [])) v(n)
            }

            function v(e) {
                h.set(e.id, e)
            }
            let O = [];
            class D extends l.default.Store {
                getSubscriptionGroupListingsForGuildFetchState(e) {
                    var t;
                    return null !== (t = S[e]) && void 0 !== t ? t : r.NOT_FETCHED
                }
                getDidFetchListingForSubscriptionPlanId(e) {
                    return T.has(e)
                }
                getSubscriptionGroupListing(e) {
                    return p.get(e)
                }
                getSubscriptionGroupListingsForGuild(e) {
                    return R(e)
                }
                getSubscriptionGroupListingForSubscriptionListing(e) {
                    let t = p.values(_(e));
                    return a(t.length <= 1, "Found multiple group listings for listing"), t[0]
                }
                getSubscriptionListing(e) {
                    return h.get(e)
                }
                getSubscriptionListingsForGuild(e) {
                    var t;
                    let n = null === (t = this.getSubscriptionGroupListingsForGuild(e)[0]) || void 0 === t ? void 0 : t.application_id;
                    return null != n ? h.values(E(n)) : O
                }
                getSubscriptionListingForPlan(e) {
                    let t = h.values(f(e));
                    return a(t.length <= 1, "Found multiple listings for plan"), t[0]
                }
                getSubscriptionSettings(e) {
                    return I[e]
                }
                getSubscriptionTrial(e) {
                    return m[e]
                }
                getMonetizationRestrictions(e) {
                    return g[e]
                }
                getMonetizationRestrictionsFetchState(e) {
                    var t;
                    return null !== (t = A[e]) && void 0 !== t ? t : r.NOT_FETCHED
                }
                getApplicationIdForGuild(e) {
                    return C.get(e)
                }
            }
            D.displayName = "GuildRoleSubscriptionsStore";
            var L = new D(u.default, {
                CONNECTION_OPEN: function() {
                    p.clear(), h.clear(), S = {}, T.clear(), I = {}, m = {}, g = {}, A = {}, C.clear()
                },
                GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTIONS_SETTINGS: function(e) {
                    let {
                        settings: t
                    } = e;
                    I[t.guild_id] = t
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS: function(e) {
                    let {
                        guildId: t
                    } = e;
                    for (let e of (S[t] = r.FETCHING, R(t)))
                        for (let t of (p.delete(e.id), e.subscription_listings_ids)) h.delete(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        groupListings: n,
                        settings: i,
                        subscriptionTrials: s
                    } = e;
                    for (let e of (S[t] = r.FETCHED, n)) N(e);
                    for (let e of (I[t] = i, s)) m[e.id] = e
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTINGS_FAILURE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    S[t] = r.FETCHED
                },
                GUILD_ROLE_SUBSCRIPTIONS_UPDATE_GROUP_LISTING: function(e) {
                    let {
                        listing: t
                    } = e;
                    N(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_DELETE_GROUP_LISTING: function(e) {
                    let {
                        groupListingId: t
                    } = e;
                    p.delete(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTING_FOR_PLAN: function(e) {
                    let {
                        planId: t
                    } = e;
                    T.add(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_LISTING_FOR_PLAN_SUCCESS: function(e) {
                    let {
                        groupListing: t
                    } = e;
                    N(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_CREATE_LISTING: function(e) {
                    let {
                        listing: t,
                        groupListing: n
                    } = e;
                    v(t), N(n)
                },
                GUILD_ROLE_SUBSCRIPTIONS_UPDATE_LISTING: function(e) {
                    let {
                        listing: t
                    } = e;
                    v(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_DELETE_LISTING: function(e) {
                    let {
                        listingId: t
                    } = e;
                    return h.delete(t)
                },
                GUILD_ROLE_SUBSCRIPTIONS_UPDATE_SUBSCRIPTION_TRIAL: function(e) {
                    let {
                        subscriptionTrial: t
                    } = e;
                    m[t.id] = t
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS: function(e) {
                    let {
                        guildId: t
                    } = e;
                    A[t] = r.FETCHING
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        restrictions: n
                    } = e;
                    g[t] = n, A[t] = r.FETCHED
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_FAILURE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    A[t] = r.FETCHED, g[t] = c.DefaultCreatorMonetizationRestrictions
                },
                GUILD_ROLE_SUBSCRIPTIONS_FETCH_RESTRICTIONS_ABORTED: function(e) {
                    let {
                        guildId: t
                    } = e;
                    A[t] = r.NOT_FETCHED
                }
            })
        },
        828674: function(e, t, n) {
            "use strict";

            function i(e) {
                var t;
                return (null == e ? void 0 : null === (t = e.tags) || void 0 === t ? void 0 : t.subscription_listing_id) != null
            }

            function r(e) {
                var t;
                return (null == e ? void 0 : null === (t = e.tags) || void 0 === t ? void 0 : t.available_for_purchase) !== void 0
            }
            n.r(t), n.d(t, {
                isSubscriptionRole: function() {
                    return i
                },
                isSubscriptionRoleAvailableForPurchase: function() {
                    return r
                }
            })
        },
        866595: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isAllChannelsRole: function() {
                    return s
                },
                isChannelAccessDeniedBy: function() {
                    return a
                },
                isChannelAccessGrantedBy: function() {
                    return l
                }
            });
            var i = n("754013"),
                r = n("49111");

            function s(e) {
                return i.default.has(e.permissions, r.Permissions.VIEW_CHANNEL)
            }

            function a(e, t) {
                return null != t && (!!i.default.has(t.deny, r.Permissions.VIEW_CHANNEL) || e.isGuildVocal() && i.default.has(t.deny, r.Permissions.CONNECT))
            }

            function l(e, t) {
                return !(null == t || a(e, t)) && !!i.default.has(t.allow, r.Permissions.VIEW_CHANNEL) && (!e.isGuildVocal() || i.default.has(t.allow, r.Permissions.CONNECT))
            }
        },
        745049: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GUILD_EVENT_MAX_DESCRIPTION_LENGTH: function() {
                    return S
                },
                MAX_EVENT_LOCATION_LENGTH: function() {
                    return T
                },
                ANALYTICS_GUILD_EVENTS_MODAL_NAME: function() {
                    return I
                },
                FAKE_EVENT_ID: function() {
                    return m
                },
                GuildScheduledEventStatus: function() {
                    return u
                },
                GuildScheduledEventStatusDone: function() {
                    return g
                },
                GuildScheduledEventEntityTypes: function() {
                    return c
                },
                GuildScheduledEventNotificationTypes: function() {
                    return d
                },
                GuildScheduledEventPrivacyLevel: function() {
                    return _
                },
                EntityChannelTypes: function() {
                    return A
                },
                ENTITY_TYPES_REQUIRED_ENTITY_METADATA: function() {
                    return C
                },
                ENTITY_TYPES_REQUIRED_CHANNEL_ID: function() {
                    return R
                },
                EventDetailSections: function() {
                    return E
                },
                MAX_RSVP_USER_DISPLAY_COUNT: function() {
                    return N
                },
                NEW_EVENT_WINDOW_MILLISECONDS: function() {
                    return v
                },
                EVENT_STARTING_SOON_WINDOW_MILLISECONDS: function() {
                    return O
                },
                ACKED_RECENTLY_WINDOW_DAYS: function() {
                    return D
                },
                UpcomingGuildEventNoticeTypes: function() {
                    return f
                }
            });
            var i, r, s, a, l, o, u, c, d, _, E, f, p = n("718517"),
                h = n("49111");
            let S = 1e3,
                T = 100,
                I = "Guild Events Modal",
                m = "-1";
            (i = u || (u = {}))[i.SCHEDULED = 1] = "SCHEDULED", i[i.ACTIVE = 2] = "ACTIVE", i[i.COMPLETED = 3] = "COMPLETED", i[i.CANCELED = 4] = "CANCELED";
            let g = new Set([u.COMPLETED, u.CANCELED]);
            (r = c || (c = {}))[r.NONE = 0] = "NONE", r[r.STAGE_INSTANCE = 1] = "STAGE_INSTANCE", r[r.VOICE = 2] = "VOICE", r[r.EXTERNAL = 3] = "EXTERNAL", (s = d || (d = {}))[s.EVENT_START = 1] = "EVENT_START", (a = _ || (_ = {}))[a.PUBLIC = 1] = "PUBLIC", a[a.GUILD_ONLY = 2] = "GUILD_ONLY";
            let A = {
                    [c.STAGE_INSTANCE]: h.ChannelTypes.GUILD_STAGE_VOICE,
                    [c.VOICE]: h.ChannelTypes.GUILD_VOICE
                },
                C = new Set([c.EXTERNAL]),
                R = new Set([c.STAGE_INSTANCE, c.VOICE]);
            (l = E || (E = {}))[l.EVENT_INFO = 0] = "EVENT_INFO", l[l.RSVP_LIST = 1] = "RSVP_LIST";
            let N = 100,
                v = 2 * p.default.Millis.DAY,
                O = 12 * p.default.Millis.HOUR,
                D = 4;
            (o = f || (f = {})).NEW_EVENT = "Upcoming Event Notice", o.EVENT_STARTING_SOON = "Event Starting Soon Notice"
        },
        859973: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                convertToTimeOfADay: function() {
                    return E
                },
                timeAtSpecificDay: function() {
                    return p
                },
                TimeOptions: function() {
                    return S
                }
            });
            var i = n("377849"),
                r = n.n(i),
                s = n("888400");
            let a = /^[0]+/,
                l = /:00/,
                o = /(AM|ΠΜ|सुबह)/i,
                u = /(PM|ΜΜ|शाम)/i,
                c = /\s+/,
                d = e => e.replace(a, "").replace(l, "").replace(o, "").replace(c, ""),
                _ = e => e.replace(a, "").replace(u, "").replace(c, ""),
                E = (e, t) => {
                    let n = t.toUpperCase().trim();
                    if (n.length > 0) {
                        let t = r("".concat(null == e ? void 0 : e.format("YYYY-MM-DD"), " ").concat(n), "YYYY-MM-DD LT");
                        if (d(t.format("LT")) === d(n)) return t
                    }
                },
                f = r("2021-04-12T00:00:00"),
                p = (e, t) => e.clone().hours(t.hour()).minutes(t.minutes()).seconds(0),
                h = (e, t) => e.value.unix() - t.value.unix();
            class S {
                lookupByValue(e) {
                    if (null == e) return;
                    let t = p(f, e);
                    return this._index[t.unix()]
                }
                _createLabel(e) {
                    return (0, s.dateFormat)(e.locale(r.locale()), this.labelFormat)
                }
                _generateTimeOptions() {
                    this.options = [], this._index = {};
                    let e = r(f),
                        t = r(e).add(1, "day"),
                        n = r(e);
                    for (; n < t;) {
                        let e = this._createNewOption(n.clone());
                        this.options.push(e), this._index[e.value.unix()] = e.value, n.add(this.intervalInMinutes, "minutes")
                    }
                }
                _createNewOption(e) {
                    let t = p(f, e),
                        n = this._createLabel(t);
                    return {
                        label: n,
                        value: t
                    }
                }
                _addNewOption(e) {
                    let t = p(f, e),
                        n = this._createLabel(t);
                    return this._index[t.unix()] = t, this.options.push({
                        label: n,
                        value: t
                    }), this.options.sort(h), e
                }
                _guessOptions(e) {
                    let t = [];
                    if (/[:\\.]/.test(e)) {
                        let n = E(f, e);
                        if (null != n) {
                            t.push(n.clone());
                            let i = n.add({
                                hours: 12
                            });
                            i.isBefore(f.clone().add({
                                hours: 24
                            })) && _(i.format("LT")) === _(e) && t.push(i)
                        }
                    }
                    return t
                }
                getOptions(e) {
                    let t = this._guessOptions(e);
                    if (!(t.length > 0)) return this.options;
                    {
                        let e = [...this.options];
                        return t.forEach(t => {
                            null == this.lookupByValue(t) && e.push(this._createNewOption(t))
                        }), e.sort(h), e
                    }
                }
                selectValue(e) {
                    let t = this.lookupByValue(e);
                    return null == t ? this._addNewOption(e) : t
                }
                constructor({
                    intervalInMinutes: e = 15,
                    labelFormat: t = "LT"
                } = {}) {
                    if (this.options = [], this._index = {}, e <= 0) throw Error("intervalInMinutes should be positive number, got ".concat(e));
                    this.intervalInMinutes = e, this.labelFormat = t, this._generateTimeOptions()
                }
            }
        },
        627869: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                UserUnreadSettings: function() {
                    return i
                }
            }), (r = i || (i = {}))[r.NULL = 0] = "NULL", r[r.ALL_MESSAGES = 1] = "ALL_MESSAGES", r[r.MENTIONS_AND_HIGHLIGHTS = 2] = "MENTIONS_AND_HIGHLIGHTS"
        },
        674644: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildsNodeType: function() {
                    return r
                },
                GuildsTree: function() {
                    return u
                },
                createGuildNode: function() {
                    return c
                },
                createFolderNode: function() {
                    return d
                }
            });
            var i, r, s = n("161179"),
                a = n.n(s),
                l = n("427964");

            function o() {
                return Math.floor(4294967296 * Math.random())
            }(i = r || (r = {})).ROOT = "root", i.FOLDER = "folder", i.GUILD = "guild";
            class u {
                getSnapshot() {
                    return {
                        root: this.root,
                        nodes: this.nodes
                    }
                }
                loadSnapshot(e) {
                    this.root = e.root, this.nodes = e.nodes, this.version++
                }
                moveNextTo(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    this._pluckNode(e);
                    let i = null != t.parentId ? this.nodes[t.parentId] : this.root,
                        s = i.children.indexOf(t);
                    return a(!(e.type === r.FOLDER && i.type === r.FOLDER), "[GUILDS TREE] Tried moving a folder (".concat(e.id, ") inside of another folder (").concat(i.id, ")")), a(s >= 0, "[GUILDS TREE] target node (".concat(t.id, ") did not exist within its specified parent (").concat(t.parentId, ")")), i.children = [...i.children], i.children.splice(s + (n ? 1 : 0), 0, e), e.parentId = i.id, this.version++, this
                }
                moveInto(e, t) {
                    let n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
                    this._pluckNode(e);
                    let i = n ? t.children.length : 0;
                    return t.children = [...t.children], t.children.splice(i, 0, e), e.parentId = t.id, this.version++, this
                }
                addNode(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.root,
                        n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
                    return a(e.type !== r.ROOT, "[GUILDS TREE] Tried adding another root node into the tree"), a(null != e.id, "[GUILDS TREE] Tried adding a node without an id"), a(null == this.nodes[e.id], "[GUILDS TREE] Tried adding a node that already exists (".concat(e.id, ")")), this.nodes[e.id] = e, this.version++, this.moveInto(e, t, n)
                }
                removeNode(e) {
                    return a(e !== this.root, "[GUILDS TREE] Tried removing the root node from the tree"), a(null != e.id, "[GUILDS TREE] Tried removing a node without an id"), this._pluckNode(e), e.parentId = void 0, delete this.nodes[e.id], this.version++, this
                }
                replaceNode(e, t) {
                    a(e !== this.root, "[GUILDS TREE] Tried replacing the root node of the tree"), a(null != e.id, "[GUILDS TREE] Tried replacing a node without an id"), a(null != t.id, "[GUILDS TREE] Tried replacing a node with one that does not have an id"), a(t.type !== r.ROOT, "[GUILDS TREE] Tried adding another root node into the tree");
                    let n = null != e.parentId ? this.nodes[e.parentId] : this.root,
                        i = n.children.indexOf(e);
                    return a(i >= 0, "[GUILDS TREE] existing node (".concat(e.id, ") did not exist within its specified parent (").concat(e.parentId, ")")), n.children = [...n.children], n.children.splice(i, 1, t), t.parentId = n.id, e.parentId = void 0, delete this.nodes[e.id], this.nodes[t.id] = t, this.version++, this
                }
                cloneNode(e) {
                    return (0, l.clone)(e)
                }
                convertToFolder(e) {
                    let t = o();
                    for (; null != this.getNode(t);) t = o();
                    let n = {
                        type: r.FOLDER,
                        id: t,
                        expanded: !1,
                        children: []
                    };
                    return this.replaceNode(e, n), this.removeNode(e), this.addNode(e, n, !1), this.version++, n
                }
                allNodes() {
                    return Object.values(this.nodes)
                }
                getNode(e) {
                    return this.nodes[e]
                }
                getRoots() {
                    return this.root.children
                }
                get size() {
                    return this.allNodes().length
                }
                sortedGuildNodes() {
                    return function e(t) {
                        return t.type === r.GUILD ? [t] : null == t.children ? [] : t.children.map(t => e(t)).flat()
                    }(this.root)
                }
                _pluckNode(e) {
                    let t = null != e.parentId ? this.nodes[e.parentId] : this.root;
                    a(null != t, "[GUILDS TREE] source node (".concat(e.id, ") had a parent id (").concat(e.parentId, ") which doesn't exist in the tree"));
                    let n = t.children;
                    a(null != n, "[GUILDS TREE] source node (".concat(e.id, ") had a parent id (").concat(e.parentId, ") which contains no children")), t.children = n.filter(t => t !== e), e.parentId = void 0, this.version++
                }
                constructor() {
                    this.root = {
                        type: r.ROOT,
                        children: []
                    }, this.nodes = {}, this.version = 0
                }
            }

            function c(e, t) {
                return {
                    type: r.GUILD,
                    id: e,
                    parentId: t,
                    children: [],
                    unavailable: !1
                }
            }

            function d(e, t) {
                var n, i, s;
                return {
                    type: r.FOLDER,
                    id: e.folderId,
                    parentId: t,
                    name: null !== (n = e.folderName) && void 0 !== n ? n : void 0,
                    color: null !== (i = e.folderColor) && void 0 !== i ? i : void 0,
                    expanded: null !== (s = e.expanded) && void 0 !== s && s,
                    children: []
                }
            }
        },
        991207: function(e, t, n) {
            "use strict";
            var i;
            n.r(t), n.d(t, {
                FileTypes: function() {
                    return i
                }
            }), (i || (i = {})).MP4 = "video/mp4"
        },
        407063: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getDevicePixelRatio: function() {
                    return c.default
                },
                isImageLoaded: function() {
                    return h
                },
                loadImage: function() {
                    return S
                },
                getBestMediaProxySize: function() {
                    return T
                },
                getImageSrc: function() {
                    return I
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("703275"),
                a = n.n(s),
                l = n("126617"),
                o = n("435653"),
                u = n("35468"),
                c = n("547630"),
                d = n("49111");
            let _ = [16, 20, 22, 24, 28, 32, 40, 44, 48, 56, 60, 64, 80, 96, 100, 128, 160, 240, 256, 300, 320, 480, 512, 600, 640, 1024, 1280, 1536, 2048, 3072, 4096],
                E = new a({
                    max: 1e3
                });

            function f(e) {
                let t = new Image;
                t.onerror = function(e, t) {
                    null == e.backoff && (e.backoff = new o.default);
                    let {
                        backoff: n
                    } = e;
                    return async () => {
                        await u.default.isOnline(), n.fails < 5 ? n.fail(() => {
                            f(e)
                        }) : p(!0, e, t)
                    }
                }(e, t), t.onload = () => {
                    let {
                        backoff: n
                    } = e;
                    null != n && n.succeed(), p(!1, e, t)
                }, t.src = e.url
            }

            function p(e, t, n) {
                let {
                    callbacks: i,
                    url: r
                } = t;
                if (e) E.del(r);
                else {
                    let {
                        width: e,
                        height: i
                    } = n;
                    t = {
                        url: r,
                        loaded: !0,
                        width: e,
                        height: i
                    }, E.set(r, t)
                }
                null != i && i.forEach(n => n(e, t))
            }

            function h(e) {
                let t = E.get(e);
                return null != t && t.loaded
            }

            function S(e, t) {
                let n = E.get(e);
                if (null != n && n.loaded) return null != t && u.default.awaitOnline().then(() => {
                    null != n && null != n.callbacks && n.callbacks.forEach(t => {
                        null != n ? t(!1, n) : t(!0, {
                            url: e,
                            loaded: !0
                        })
                    })
                }), d.NOOP;
                {
                    let i;
                    return null == n && (n = {
                        url: e,
                        loaded: !1
                    }, E.set(e, n), f(n)), null != t && (i = t.bind(null), null == n.callbacks && (n.callbacks = new Set), n.callbacks.add(i)), () => {
                        null != i && null != n && (null != n.callbacks && n.callbacks.delete(i), null != n.backoff && n.backoff.cancel())
                    }
                }
            }

            function T(e) {
                var t;
                return null !== (t = _.find(t => e <= t)) && void 0 !== t ? t : _[_.length - 1]
            }

            function I(e) {
                let {
                    src: t,
                    width: n,
                    height: i,
                    maxWidth: s,
                    maxHeight: a,
                    ratio: o = 1,
                    format: u = null
                } = e, d = n, _ = i;
                o < 1 && (d = Math.round(n * o), _ = Math.round(i * o)), null != s && (d = Math.min(d, s)), null != a && (_ = Math.min(_, a));
                let E = (0, c.default)();
                return d *= E,
                    function(e) {
                        let {
                            src: t,
                            sourceWidth: n,
                            sourceHeight: i,
                            targetWidth: s,
                            targetHeight: a,
                            format: o = null
                        } = e, [u, c] = function(e) {
                            let [t, n] = e.split("?");
                            return [t, l.parse(n)]
                        }(t);
                        return null != o && (c.format = o), (s !== n || a !== i) && (c.width = 0 | s, c.height = 0 | a), !r.isEmpty(c) && (u += "?" + l.stringify(c)), u
                    }({
                        src: t,
                        sourceWidth: n,
                        sourceHeight: i,
                        targetWidth: d,
                        targetHeight: _ *= E,
                        format: u
                    })
            }
        },
        694187: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getFilters: function() {
                    return o
                },
                processImage: function() {
                    return u
                },
                default: function() {
                    return d
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("371642"),
                a = n("991207"),
                l = n("782340");

            function o() {
                return [{
                    name: l.default.Messages.IMAGES,
                    extensions: ["jpg", "jpeg", "png", "gif"]
                }]
            }

            function u(e, t, n) {
                ! function(e, t) {
                    if (null != e) {
                        let n = new FileReader;
                        n.onload = n => {
                            var i;
                            "string" == typeof(null === (i = n.target) || void 0 === i ? void 0 : i.result) && t(n.target.result, e)
                        }, n.readAsDataURL(e)
                    }
                }(e, i => {
                    if (e.type === a.FileTypes.MP4) return t(i, e);
                    let r = new Image;
                    r.src = i, r.onload = () => {
                        t(i, e)
                    }, r.onerror = () => {
                        n()
                    }
                })
            }
            class c extends r.PureComponent {
                componentDidMount() {
                    this._isMounted = !0
                }
                activateUploadDialogue() {
                    var e;
                    null === (e = this._ref.current) || void 0 === e || e.activateUploadDialogue()
                }
                render() {
                    let {
                        multiple: e,
                        disabled: t,
                        className: n,
                        tabIndex: r,
                        "aria-label": a,
                        filters: l
                    } = this.props;
                    return (0, i.jsx)(s.default, {
                        ref: this._ref,
                        onChange: this.handleFileChange,
                        filters: null != l ? l : o(),
                        multiple: e,
                        disabled: t,
                        className: n,
                        tabIndex: r,
                        "aria-label": a
                    })
                }
                constructor(...e) {
                    super(...e), this._ref = r.createRef(), this._isMounted = !1, this.handleFileChange = e => {
                        let {
                            onFileSizeError: t,
                            maxFileSizeBytes: n
                        } = this.props;
                        if (e.stopPropagation(), e.preventDefault(), null != e.currentTarget.files)
                            for (let i = 0; i < e.currentTarget.files.length; i++) {
                                let r = e.currentTarget.files[i];
                                if (r.size > n) {
                                    null == t || t(n, r.size);
                                    continue
                                }
                                u(r, this.handleFileRead, this.handleFileError)
                            }
                    }, this.handleFileRead = (e, t) => {
                        let {
                            onChange: n
                        } = this.props;
                        this._isMounted && n(e, t)
                    }, this.handleFileError = async () => {
                        let {
                            openUploadError: e
                        } = await n.el("336522").then(n.bind(n, "336522"));
                        e({
                            title: l.default.Messages.PREMIUM_ALERT_ERROR_TITLE,
                            help: l.default.Messages.UNABLE_TO_PROCESS_IMAGE
                        })
                    }
                }
            }
            c.defaultProps = {
                multiple: !0,
                tabIndex: -1,
                maxFileSizeBytes: 1 / 0
            };
            var d = c
        },
        38654: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("305961"),
                a = n("568734"),
                l = n("507950"),
                o = n("49111"),
                u = n("397336");
            let c = {};
            class d extends i.default.Store {
                hasViewingRoles() {
                    return Object.keys(c).length > 0
                }
                isViewingRoles(e) {
                    return null != e && null != c[e]
                }
                getViewingRoles(e) {
                    var t;
                    return null === (t = c[e]) || void 0 === t ? void 0 : t.roles
                }
                getViewingRolesTimestamp(e) {
                    var t;
                    return null != e ? null === (t = c[e]) || void 0 === t ? void 0 : t.timestamp : null
                }
                getData(e) {
                    return c[e]
                }
                isFullServerPreview(e) {
                    var t;
                    return (null === (t = c[e]) || void 0 === t ? void 0 : t.type) === l.ImpersonateType.NEW_MEMBER
                }
                isOptInEnabled(e) {
                    let t = c[e];
                    return null != t && t.type === l.ImpersonateType.NEW_MEMBER && t.optInEnabled
                }
                isOnboardingEnabled(e) {
                    let t = c[e];
                    return null != t && t.type === l.ImpersonateType.NEW_MEMBER && t.onboardingEnabled
                }
                getViewingChannels(e) {
                    let t = c[e];
                    return null == t || t.type !== l.ImpersonateType.NEW_MEMBER ? null : t.optInChannels
                }
                getOnboardingResponses(e) {
                    let t = c[e];
                    return null == t || t.type !== l.ImpersonateType.NEW_MEMBER ? null : t.onboardingResponses
                }
                getMemberOptions(e) {
                    let t = c[e];
                    return null == t || t.type !== l.ImpersonateType.NEW_MEMBER ? null : t.memberOptions
                }
                isChannelOptedIn(e, t) {
                    let n = this.getViewingChannels(e);
                    return null != n && n.has(t)
                }
                isViewingSubscriptionRoles(e) {
                    var t;
                    return null != e && (null === (t = c[e]) || void 0 === t ? void 0 : t.type) === l.ImpersonateType.ROLE_SUBSCRIPTION
                }
                getImpersonateType(e) {
                    if (null == e) return null;
                    let t = c[e];
                    return null == t ? null : t.type
                }
                getBackNavigationSection(e) {
                    if (null == e) return o.GuildSettingsSections.ROLES;
                    let t = c[e];
                    if (null == t) return o.GuildSettingsSections.ROLES;
                    switch (t.type) {
                        case l.ImpersonateType.ROLES:
                            return t.returnToSection;
                        case l.ImpersonateType.ROLE_SUBSCRIPTION:
                            return o.GuildSettingsSections.ROLE_SUBSCRIPTIONS;
                        case l.ImpersonateType.NEW_MEMBER:
                            return o.GuildSettingsSections.ONBOARDING;
                        default:
                            return o.GuildSettingsSections.ROLES
                    }
                }
            }
            d.displayName = "ImpersonateStore";
            var _ = new d(r.default, {
                IMPERSONATE_UPDATE: function(e) {
                    let {
                        guildId: t,
                        data: n
                    } = e;
                    delete n.roles[t], c[t] = {
                        ...n,
                        timestamp: Date.now()
                    }
                },
                IMPERSONATE_STOP: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == c[t]) return !1;
                    delete c[t]
                },
                GUILD_ROLE_DELETE: function(e) {
                    let {
                        guildId: t,
                        roleId: n
                    } = e;
                    if (null == c[t]) return !1;
                    delete c[t].roles[n]
                },
                USER_GUILD_SETTINGS_CHANNEL_UPDATE_BULK: function(e) {
                    var t;
                    let {
                        guildId: n,
                        overrides: i
                    } = e;
                    if (null == n || null == c[n]) return !1;
                    let r = c[n];
                    if (null == r || r.type !== l.ImpersonateType.NEW_MEMBER) return !1;
                    let s = null !== (t = r.optInChannels) && void 0 !== t ? t : new Set;
                    return Object.keys(i).forEach(e => {
                        var t;
                        let n = i[e];
                        a.hasFlag(null !== (t = n.flags) && void 0 !== t ? t : 0, u.ChannelNotificationSettingsFlags.OPT_IN_ENABLED) ? s.add(e) : s.delete(e)
                    }), r.optInChannels = s, !0
                },
                GUILD_ONBOARDING_SELECT_OPTION: function(e) {
                    var t;
                    let {
                        guildId: n,
                        optionId: i,
                        selected: r,
                        removedOptionIds: s
                    } = e;
                    if (null == n || null == c[n]) return !1;
                    let a = c[n];
                    if (null == a || a.type !== l.ImpersonateType.NEW_MEMBER) return !1;
                    let o = null !== (t = a.onboardingResponses) && void 0 !== t ? t : new Set;
                    return null != s && s.length > 0 && s.forEach(e => o.delete(e)), r ? o.add(i) : o.delete(i), a.onboardingResponses = o, !0
                },
                GUILD_MEMBER_UPDATE_LOCAL: function(e) {
                    let {
                        guildId: t,
                        roles: n,
                        flags: i
                    } = e;
                    if (null == t) return !1;
                    let r = c[t],
                        a = s.default.getGuild(t);
                    return null != a && null != r && (null != n && (r.roles = n.reduce((e, t) => {
                        let n = a.getRole(t);
                        return null != n && (e[t] = n), e
                    }, {})), null != i && r.type === l.ImpersonateType.NEW_MEMBER && (r.memberOptions.flags = i), !0)
                }
            })
        },
        507950: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                ImpersonateType: function() {
                    return i
                }
            }), (r = i || (i = {})).ROLES = "ROLES", r.NEW_MEMBER = "NEW_MEMBER", r.ROLE_SUBSCRIPTION = "ROLE_SUBSCRIPTION"
        },
        886167: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                guildInventorySettingsFromServer: function() {
                    return i
                },
                guildInventorySettingsToServer: function() {
                    return r
                }
            });
            let i = e => {
                    var t;
                    return null == e ? e : {
                        isEmojiPackCollectible: null === (t = e.is_emoji_pack_collectible) || void 0 === t || t
                    }
                },
                r = e => null == e ? e : {
                    is_emoji_pack_collectible: e.isEmojiPackCollectible
                }
        },
        894282: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                KeyboardEventKey: function() {
                    return s.Key
                },
                FOCUS_SECTION_JUMP_KEY: function() {
                    return a
                },
                NavigationKeyShortcutMap: function() {
                    return l
                },
                NavigationShortcuts: function() {
                    return o
                },
                KeyboardKeysUpdated: function() {
                    return r
                }
            });
            var i, r, s = n("691796");
            let a = s.Key.F6,
                l = new Map([
                    [s.Key.F6, "f6"],
                    [s.Key.Tab, "tab"],
                    [s.Key.ArrowDown, "down"],
                    [s.Key.ArrowUp, "up"],
                    [s.Key.ArrowLeft, "left"],
                    [s.Key.ArrowRight, "right"],
                    [s.Key.Home, "home"],
                    [s.Key.End, "end"]
                ]),
                o = new Set(["tab", "shift+tab", "down", "up", "left", "right", "home", "end"]);
            (i = r || (r = {})).ENTER = "Enter", i.TAB = "Tab", i.SPACE = " ", i.ESCAPE = "Escape", i.SHIFT = "Shift"
        },
        15649: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("782340");

            function r(e) {
                let t = i.default.getLocale().toLowerCase();
                return t in e ? e[t] : e.default
            }
        },
        267567: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("26989"),
                a = n("305961"),
                l = n("697218"),
                o = n("49111");
            let u = [],
                c = {},
                d = null,
                _ = null;

            function E(e) {
                let t = u.indexOf(e);
                if (t > -1) {
                    let n = [...u];
                    return n.splice(t, 1), u = n, delete c[e], !0
                }
                return !1
            }

            function f(e) {
                return !(e === o.ME || u.includes(e)) && (u = [...u, e], !0)
            }
            class p extends i.default.Store {
                initialize() {
                    this.waitFor(a.default, l.default)
                }
                setHistorySnapshot(e) {
                    d = e
                }
                getHistorySnapshot() {
                    return d
                }
                lurkingGuildIds() {
                    return u
                }
                mostRecentLurkedGuildId() {
                    return 0 === u.length ? null : u[u.length - 1]
                }
                isLurking(e) {
                    var t;
                    let n = s.default.isCurrentUserGuest(e),
                        i = null === (t = a.default.getGuild(e)) || void 0 === t ? void 0 : t.isLurker();
                    return !!(!n && i)
                }
                getLurkingSource() {
                    return _
                }
                getLoadId(e) {
                    return null != e ? c[e] : null
                }
            }
            p.displayName = "LurkingStore";
            var h = new p(r.default, {
                CONNECTION_OPEN: function() {
                    let e = Object.values(a.default.getGuilds()).reduce((e, t) => {
                        let n = t.isLurker();
                        return n ? [...e, t.id] : e
                    }, []);
                    u = e
                },
                GUILD_JOIN: function(e) {
                    let {
                        guildId: t,
                        lurker: n,
                        source: i,
                        directoryChannelId: r,
                        loadId: s
                    } = e;
                    if (n) {
                        var a, l;
                        switch (f(t), a = t, null != (l = s) && (c[a] = l), i) {
                            case o.JoinGuildSources.MOBILE_GUILD_DISCOVERY:
                                _ = {
                                    type: o.JoinGuildSources.MOBILE_GUILD_DISCOVERY
                                };
                                break;
                            case o.JoinGuildSources.DIRECTORY_ENTRY:
                                _ = {
                                    type: o.JoinGuildSources.DIRECTORY_ENTRY,
                                    directoryChannelId: r
                                };
                                break;
                            default:
                                _ = null
                        }
                        return !0
                    }
                    return !1
                },
                GUILD_STOP_LURKING: function(e) {
                    let {
                        ignoredGuildIds: t
                    } = e, n = function(e) {
                        let t = new Set([...null != e ? e : []]);
                        return [...u].reduce((e, n) => t.has(n) ? e : E(n) || e, !1)
                    }(t);
                    return n && (d = null, _ = null), n
                },
                GUILD_STOP_LURKING_FAILURE: function(e) {
                    let {
                        lurkingGuildId: t,
                        lurkingSource: n
                    } = e;
                    return f(t), _ = n, !0
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e, n = null == t.joined_at;
                    return !!(!n && u.includes(t.id)) && (E(t.id), d = null, _ = null, !0)
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    return !!u.includes(t.id) && (E(t.id), d = null, _ = null, !0)
                },
                GUILD_MEMBER_ADD: function(e) {
                    var t;
                    let {
                        guildId: n,
                        joinedAt: i,
                        user: r
                    } = e, s = r.id === (null === (t = l.default.getCurrentUser()) || void 0 === t ? void 0 : t.id);
                    return !!(s && null != i && u.includes(n)) && (E(n), d = null, _ = null, !0)
                }
            })
        },
        916863: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-08_mobile_redesign_0g_mini",
                label: "Tabs V2 - 0g Mini",
                defaultConfig: {
                    showRedesign: !1,
                    showMinimalChannelList: !1,
                    showFullWidthPanel: !1,
                    showRecentChannels: !1,
                    showNotificationTimer: !1
                },
                treatments: [{
                    id: 1,
                    label: "Minimal Channel List",
                    config: {
                        showRedesign: !0,
                        showMinimalChannelList: !0,
                        showFullWidthPanel: !1,
                        showRecentChannels: !1,
                        showNotificationTimer: !1
                    }
                }, {
                    id: 2,
                    label: "Full Width Panel",
                    config: {
                        showRedesign: !1,
                        showMinimalChannelList: !1,
                        showFullWidthPanel: !0,
                        showRecentChannels: !1,
                        showNotificationTimer: !1
                    }
                }, {
                    id: 3,
                    label: "Recent Channels",
                    config: {
                        showRedesign: !0,
                        showMinimalChannelList: !1,
                        showFullWidthPanel: !1,
                        showRecentChannels: !0,
                        showNotificationTimer: !1
                    }
                }, {
                    id: 4,
                    label: "Notification Timer",
                    config: {
                        showRedesign: !0,
                        showMinimalChannelList: !1,
                        showFullWidthPanel: !1,
                        showRecentChannels: !1,
                        showNotificationTimer: !0
                    }
                }, {
                    id: 5,
                    label: "Base redesign",
                    config: {
                        showRedesign: !0,
                        showMinimalChannelList: !1,
                        showFullWidthPanel: !1,
                        showRecentChannels: !1,
                        showNotificationTimer: !1
                    }
                }]
            })
        },
        126198: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isRecentChannelsEnabled: function() {
                    return o
                }
            }), n("773670"), n("173333");
            var i = n("650033");
            n("362391");
            var r = n("862205");
            n("996777");
            let s = [{
                    id: 2,
                    label: "App Navbar Always Visible",
                    config: {
                        showRedesign: !0,
                        recentChannels: !1,
                        launchIntoLastChannel: !1
                    }
                }, {
                    id: 3,
                    label: "App Navbar Always Visible + Keep Channel",
                    config: {
                        showRedesign: !0,
                        recentChannels: !1,
                        launchIntoLastChannel: !1
                    }
                }, {
                    id: 4,
                    label: "Recent channels",
                    config: {
                        showRedesign: !0,
                        recentChannels: !0,
                        launchIntoLastChannel: !1
                    }
                }, {
                    id: 5,
                    label: "Launch into last channel",
                    config: {
                        showRedesign: !0,
                        recentChannels: !1,
                        launchIntoLastChannel: !0
                    }
                }, {
                    id: 6,
                    label: "Plain Redesign",
                    config: {
                        showRedesign: !0,
                        recentChannels: !1,
                        launchIntoLastChannel: !1
                    }
                }],
                a = (0, r.createExperiment)({
                    kind: "user",
                    id: "2023-06_mobile_redesign_curry_existing_users",
                    label: "Tabs V2 - Curry Existing Users",
                    defaultConfig: {
                        showRedesign: !1,
                        recentChannels: !1,
                        launchIntoLastChannel: !1
                    },
                    treatments: s
                }),
                l = (0, r.createExperiment)({
                    kind: "user",
                    id: "2023-06_mobile_redesign_curry_new_users",
                    label: "Tabs V2 - Curry New Users",
                    defaultConfig: {
                        showRedesign: !1,
                        recentChannels: !1,
                        launchIntoLastChannel: !1
                    },
                    treatments: s
                });

            function o() {
                var e;
                if (i.default.get("enable_recently_active")) return !0;
                return e = "recentChannels", !!a.getCurrentConfig({
                    location: "bcf97c_3"
                }, {
                    autoTrackExposure: !1
                })[e] || !!l.getCurrentConfig({
                    location: "bcf97c_4"
                }, {
                    autoTrackExposure: !1
                })[e] || !1
            }
        },
        21121: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getRootNavigationRefIfInExperiment: function() {
                    return p
                },
                isInMainTabsExperiment: function() {
                    return h
                },
                useInMainTabsExperiment: function() {
                    return S
                }
            }), n("773670");
            var i, r, s = n("710835"),
                a = n("173333");
            n("996777"), n("697218"), n("916863"), n("126198"), n("900226"), n("985268"), n("699145"), n("102425"), n("460609");
            var l = n("693051"),
                o = n("139404"),
                u = n("61796"),
                c = n("264325"),
                d = n("18108");
            (r = i || (i = {}))[r.GDM = 0] = "GDM", r[r.EXISTING_USERS = 1] = "EXISTING_USERS", r[r.NEW_USERS = 2] = "NEW_USERS";
            let _ = "tabs-v2-experiment-key",
                E = (0, s.default)((e, t) => ({
                    _experimentCacheInitialized: !1,
                    _experimentEnabled: !1,
                    getExperimentEnabled() {
                        if (!(0, u.isMainTabsExperimentPlatformSupported)()) return !1;
                        let {
                            _experimentCacheInitialized: e,
                            _experimentEnabled: n
                        } = t();
                        if (!e) throw Error("MainTabsV2ExperimentStore: Experiment cache not initialized");
                        return n
                    },
                    setExperimentEnabled: t => {
                        e({
                            _experimentEnabled: t
                        }), a.default.set(_, t)
                    },
                    setInitialized: () => {
                        e(e => e._experimentCacheInitialized ? e : {
                            _experimentCacheInitialized: !0,
                            _experimentEnabled: !0 === a.default.get(_)
                        })
                    }
                }));

            function f() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : (0, o.isMobileRedesignDisabled)(),
                    t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : E.getState().getExperimentEnabled(),
                    i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : (0, c.isTabsUIEnabledManually)();
                return !!(0, u.isMainTabsExperimentPlatformSupported)() && (!t && e ? ((0, d.updateIsInTabsUI)(!1), !1) : i ? ((0, d.updateIsInTabsUI)(!0), !0) : (!t && (0, d.updateIsInTabsUI)(n), n))
            }

            function p() {
                return h() ? (0, l.getRootNavigationRef)() : void 0
            }

            function h() {
                return f()
            }

            function S() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                    t = (0, o.useMobileRedesignDisabled)(),
                    n = E(e => e.getExperimentEnabled()),
                    i = (0, c.useIsTabsUIEnabledManually)();
                return f(t, e, n, i)
            }
        },
        900226: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("862205");
            (0, i.createExperiment)({
                kind: "user",
                id: "2023-02_tabs_v2",
                label: "Tabs V2 - GDM Bucketing",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Tabs V2",
                    config: {
                        enabled: !0
                    }
                }]
            }), (0, i.createExperiment)({
                kind: "user",
                id: "2023-03_mobile_re_design_existing_users",
                label: "Tabs V2 - Existing Users",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Tabs V2",
                    config: {
                        enabled: !0
                    }
                }]
            }), (0, i.createExperiment)({
                kind: "user",
                id: "2023-02_mobile_redesign_new_users",
                label: "Tabs V2 - New Users",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Tabs V2",
                    config: {
                        enabled: !0
                    }
                }]
            }), (0, i.createExperiment)({
                kind: "user",
                id: "2023-04_mobile_redesign_0c_new_users",
                label: "Tabs V2 - New Users Phase 0c",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Tabs V2",
                    config: {
                        enabled: !0
                    }
                }]
            }), (0, i.createExperiment)({
                kind: "user",
                id: "2023-04_mobile_redesign_0d_new_users",
                label: "Tabs V2 - New Users Phase 0d",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Tabs V2",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        985268: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-09_mobile_redesign_hfu",
                label: "Tabs V2 - HFU Iteration",
                defaultConfig: {
                    showRedesign: !1,
                    showMessagesTab: !1,
                    showLaunchpadPullTab: !1,
                    showMinimalChannelList: !1,
                    showQuickswitcherTab: !1,
                    showLaunchpadTab: !1,
                    showFullWidthPanel: !1,
                    showFullWidthPanelNoSwipingOrSelected: !1
                },
                treatments: [{
                    id: 1,
                    label: "DM Tab",
                    config: {
                        showRedesign: !1,
                        showMessagesTab: !0,
                        showLaunchpadPullTab: !1,
                        showMinimalChannelList: !1,
                        showQuickswitcherTab: !1,
                        showLaunchpadTab: !1,
                        showFullWidthPanel: !1,
                        showFullWidthPanelNoSwipingOrSelected: !1
                    }
                }, {
                    id: 2,
                    label: "Launchpad Pull Tab",
                    config: {
                        showRedesign: !0,
                        showMessagesTab: !1,
                        showLaunchpadPullTab: !0,
                        showMinimalChannelList: !1,
                        showQuickswitcherTab: !1,
                        showLaunchpadTab: !1,
                        showFullWidthPanel: !1,
                        showFullWidthPanelNoSwipingOrSelected: !1
                    }
                }, {
                    id: 3,
                    label: "Minimal Channel List",
                    config: {
                        showRedesign: !0,
                        showMessagesTab: !1,
                        showLaunchpadPullTab: !1,
                        showMinimalChannelList: !0,
                        showQuickswitcherTab: !1,
                        showLaunchpadTab: !1,
                        showFullWidthPanel: !1,
                        showFullWidthPanelNoSwipingOrSelected: !1
                    }
                }, {
                    id: 4,
                    label: "Quickswitcher Tab",
                    config: {
                        showRedesign: !0,
                        showMessagesTab: !1,
                        showLaunchpadPullTab: !1,
                        showMinimalChannelList: !1,
                        showQuickswitcherTab: !0,
                        showLaunchpadTab: !1,
                        showFullWidthPanel: !1,
                        showFullWidthPanelNoSwipingOrSelected: !1
                    }
                }, {
                    id: 5,
                    label: "Launchpad Tab",
                    config: {
                        showRedesign: !0,
                        showMessagesTab: !1,
                        showLaunchpadPullTab: !1,
                        showMinimalChannelList: !1,
                        showQuickswitcherTab: !1,
                        showLaunchpadTab: !0,
                        showFullWidthPanel: !1,
                        showFullWidthPanelNoSwipingOrSelected: !1
                    }
                }, {
                    id: 6,
                    label: "Base redesign",
                    config: {
                        showRedesign: !0,
                        showMessagesTab: !1,
                        showLaunchpadPullTab: !1,
                        showMinimalChannelList: !1,
                        showQuickswitcherTab: !1,
                        showLaunchpadTab: !1,
                        showFullWidthPanel: !1,
                        showFullWidthPanelNoSwipingOrSelected: !1
                    }
                }, {
                    id: 7,
                    label: "Full width panel",
                    config: {
                        showRedesign: !1,
                        showMessagesTab: !1,
                        showLaunchpadPullTab: !1,
                        showMinimalChannelList: !1,
                        showQuickswitcherTab: !1,
                        showLaunchpadTab: !1,
                        showFullWidthPanel: !0,
                        showFullWidthPanelNoSwipingOrSelected: !1
                    }
                }, {
                    id: 8,
                    label: "Full width panel (disabled swiping & selected channel highlight)",
                    config: {
                        showRedesign: !1,
                        showMessagesTab: !1,
                        showLaunchpadPullTab: !1,
                        showMinimalChannelList: !1,
                        showQuickswitcherTab: !1,
                        showLaunchpadTab: !1,
                        showFullWidthPanel: !1,
                        showFullWidthPanelNoSwipingOrSelected: !0
                    }
                }]
            })
        },
        699145: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MainTabsV2OnePercentExperimentExistingUsers: function() {
                    return a
                },
                MainTabsV2OnePercentExperimentNewUsers: function() {
                    return l
                }
            });
            var i = n("862205");
            let r = {
                    showRedesign: !1,
                    showPanels: !1
                },
                s = [{
                    id: 1,
                    label: "Redesign",
                    config: {
                        showRedesign: !0,
                        showPanels: !1
                    }
                }, {
                    id: 2,
                    label: "Panels",
                    config: {
                        showRedesign: !0,
                        showPanels: !0
                    }
                }],
                a = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-10_mobile_redesign_one_percent_existing_users",
                    label: "Tabs V2 - One Percent - Existing Users",
                    defaultConfig: r,
                    treatments: s
                }),
                l = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-10_mobile_redesign_one_percent_new_users",
                    label: "Tabs V2 - One Percent - New Users",
                    defaultConfig: r,
                    treatments: s
                })
        },
        102425: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MainTabsV2PanelsExperimentExistingUsers: function() {
                    return a
                },
                MainTabsV2PanelsExperimentNewUsers: function() {
                    return l
                }
            });
            var i = n("862205");
            let r = {
                    showRedesign: !1,
                    showNewPanels: !1,
                    isSplitMessagesTab: !1
                },
                s = [{
                    id: 1,
                    label: "Merged Server + DM tab",
                    config: {
                        showRedesign: !0,
                        showNewPanels: !0,
                        isSplitMessagesTab: !1
                    }
                }, {
                    id: 2,
                    label: "Split DM Tab",
                    config: {
                        showRedesign: !0,
                        showNewPanels: !0,
                        isSplitMessagesTab: !0
                    }
                }, {
                    id: 3,
                    label: "Base redesign",
                    config: {
                        showRedesign: !0,
                        showNewPanels: !1,
                        isSplitMessagesTab: !1
                    }
                }],
                a = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-09_mobile_redesign_panels_existing_users",
                    label: "Tabs V2 - Panels - Existing Users",
                    defaultConfig: r,
                    treatments: s
                }),
                l = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-09_mobile_redesign_panels_new_users",
                    label: "Tabs V2 - Panels - New Users",
                    defaultConfig: r,
                    treatments: s
                })
        },
        460609: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getCombinedMainTabsV2PhaseOneExperimentValue: function() {
                    return f
                }
            });
            var i = n("862205"),
                r = n("916863"),
                s = n("985268"),
                a = n("699145"),
                l = n("102425"),
                o = n("140567");
            let u = {
                    location: "Main Tabs Phase One"
                },
                c = {
                    showRedesign: !1,
                    showNewVoiceUI: !1,
                    showNewNotificationCenter: !1,
                    showNewSearch: !1,
                    showDay0: !1
                },
                d = [{
                    id: 1,
                    label: "Redesign Base",
                    config: {
                        showRedesign: !0,
                        showNewVoiceUI: !1,
                        showNewNotificationCenter: !1,
                        showNewSearch: !1,
                        showDay0: !1
                    }
                }, {
                    id: 2,
                    label: "Redesign + Voice UI",
                    config: {
                        showRedesign: !0,
                        showNewVoiceUI: !0,
                        showNewNotificationCenter: !1,
                        showNewSearch: !1,
                        showDay0: !1
                    }
                }, {
                    id: 3,
                    label: "Redesign + Notification Center",
                    config: {
                        showRedesign: !0,
                        showNewVoiceUI: !1,
                        showNewNotificationCenter: !0,
                        showNewSearch: !1,
                        showDay0: !1
                    }
                }, {
                    id: 4,
                    label: "Redesign + Search",
                    config: {
                        showRedesign: !0,
                        showNewVoiceUI: !1,
                        showNewNotificationCenter: !1,
                        showNewSearch: !0,
                        showDay0: !1
                    }
                }, {
                    id: 5,
                    label: "Redesign + Everything",
                    config: {
                        showRedesign: !0,
                        showNewVoiceUI: !0,
                        showNewNotificationCenter: !0,
                        showNewSearch: !0,
                        showDay0: !0
                    }
                }, {
                    id: 6,
                    label: "Redesign + Day 0",
                    config: {
                        showRedesign: !0,
                        showNewVoiceUI: !1,
                        showNewNotificationCenter: !1,
                        showNewSearch: !1,
                        showDay0: !0
                    }
                }],
                _ = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-08_mobile_redesign_phase_one_existing_users",
                    label: "Tabs V2 - Phase One - Existing Users",
                    defaultConfig: c,
                    treatments: d
                }),
                E = (0, i.createExperiment)({
                    kind: "user",
                    id: "2023-08_mobile_redesign_phase_one_new_users",
                    label: "Tabs V2 - Phase One - New Users",
                    defaultConfig: c,
                    treatments: d
                });

            function f(e) {
                if (_.getCurrentConfig(u, {
                        autoTrackExposure: !1
                    })[e] || E.getCurrentConfig(u, {
                        autoTrackExposure: !1
                    })[e]) return !0;
                let {
                    isStaff: t,
                    isStaffPersonal: n
                } = o.default.getCurrentConfig(u, {
                    autoTrackExposure: !1
                });
                if (t || n) return !0;
                let i = r.default.getCurrentConfig(u, {
                    autoTrackExposure: !1
                }).showRedesign;
                if (i) return !0;
                let c = s.default.getCurrentConfig(u, {
                    autoTrackExposure: !1
                }).showRedesign;
                if (c) return !0;
                let d = l.MainTabsV2PanelsExperimentExistingUsers.getCurrentConfig(u, {
                    autoTrackExposure: !1
                }).showRedesign;
                if (d) return !0;
                let f = l.MainTabsV2PanelsExperimentNewUsers.getCurrentConfig(u, {
                    autoTrackExposure: !1
                }).showRedesign;
                if (f) return !0;
                let p = a.MainTabsV2OnePercentExperimentExistingUsers.getCurrentConfig(u, {
                    autoTrackExposure: !1
                }).showRedesign;
                if (p) return !0;
                let h = a.MainTabsV2OnePercentExperimentNewUsers.getCurrentConfig(u, {
                    autoTrackExposure: !1
                }).showRedesign;
                return !!h || !1
            }
        },
        140567: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-09_mobile_redesign_staff",
                label: "Tabs V2 - Staff",
                defaultConfig: {
                    isStaff: !1,
                    isStaffPersonal: !1
                },
                treatments: [{
                    id: 1,
                    label: "Staff",
                    config: {
                        isStaff: !0,
                        isStaffPersonal: !1
                    }
                }, {
                    id: 2,
                    label: "Staff Personal",
                    config: {
                        isStaff: !1,
                        isStaffPersonal: !0
                    }
                }]
            })
        },
        693051: function(e, t, n) {
            "use strict";

            function i() {}
            n.r(t), n.d(t, {
                getRootNavigationRef: function() {
                    return i
                }
            })
        },
        139404: function(e, t, n) {
            "use strict";

            function i() {
                return !1
            }

            function r() {
                return !1
            }
            n.r(t), n.d(t, {
                useMobileRedesignDisabled: function() {
                    return i
                },
                isMobileRedesignDisabled: function() {
                    return r
                }
            })
        },
        61796: function(e, t, n) {
            "use strict";

            function i() {
                return !1
            }
            n.r(t), n.d(t, {
                isMainTabsExperimentPlatformSupported: function() {
                    return i
                }
            })
        },
        264325: function(e, t, n) {
            "use strict";

            function i() {
                return !1
            }

            function r() {
                return !1
            }
            n.r(t), n.d(t, {
                useIsTabsUIEnabledManually: function() {
                    return i
                },
                isTabsUIEnabledManually: function() {
                    return r
                }
            })
        },
        18108: function(e, t, n) {
            "use strict";
            let i, r;
            n.r(t), n.d(t, {
                updateIsInTabsUI: function() {
                    return c
                },
                updateIsInNewPanels: function() {
                    return d
                }
            });
            var s = n("621919"),
                a = n("827032"),
                l = n("599110"),
                o = n("286235");

            function u() {
                let e = i ? r ? s.DesignIds.DESIGN_TABS_IA : s.DesignIds.DESIGN_IA : s.DesignIds.CLASSIC_IA;
                l.default.extendSuperProperties({
                    design_id: e
                }), a.addGlobalTag("design_id", e), o.default.setTags({
                    design_id: "".concat(e)
                })
            }

            function c(e) {
                i !== e && (i = e, u())
            }

            function d(e) {
                r !== e && (r = e, u())
            }
        },
        446411: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isOnGlobalPanels: function() {
                    return s
                }
            });
            var i = n("650033");
            n("362391");
            var r = n("21121");

            function s() {
                return !!(0, r.isInMainTabsExperiment)() && i.default.get("global_panels")
            }
        },
        934306: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isOnNewPanels: function() {
                    return d
                },
                isSplitMessagesTab: function() {
                    return _
                },
                isSplitMessagesTabAndOnMessagesTab: function() {
                    return E
                },
                shouldHandleNewPanelsRoute: function() {
                    return f
                }
            });
            var i = n("650033");
            n("362391");
            var r = n("21121"),
                s = n("699145"),
                a = n("102425"),
                l = n("18108"),
                o = n("446411"),
                u = n("491246"),
                c = n("49111");

            function d() {
                return (0, r.isInMainTabsExperiment)() ? !!(0, o.isOnGlobalPanels)() || (i.default.get("new_panels") || a.MainTabsV2PanelsExperimentExistingUsers.getCurrentConfig({
                    location: "isOnNewPanels"
                }, {
                    autoTrackExposure: !1
                }).showNewPanels || a.MainTabsV2PanelsExperimentNewUsers.getCurrentConfig({
                    location: "isOnNewPanels"
                }, {
                    autoTrackExposure: !1
                }).showNewPanels || s.MainTabsV2OnePercentExperimentExistingUsers.getCurrentConfig({
                    location: "isOnNewPanels"
                }, {
                    autoTrackExposure: !1
                }).showPanels || s.MainTabsV2OnePercentExperimentNewUsers.getCurrentConfig({
                    location: "isOnNewPanels"
                }, {
                    autoTrackExposure: !1
                }).showPanels ? ((0, l.updateIsInNewPanels)(!0), !0) : ((0, l.updateIsInNewPanels)(!1), !1)) : ((0, l.updateIsInNewPanels)(!1), !1)
            }

            function _() {
                return !!(0, r.isInMainTabsExperiment)() && (!!(!d() || (0, o.isOnGlobalPanels)() || i.default.get("panels_split_messages_tab")) || !!a.MainTabsV2PanelsExperimentExistingUsers.getCurrentConfig({
                    location: "isSplitMessagesTab"
                }, {
                    autoTrackExposure: !1
                }).isSplitMessagesTab || !!a.MainTabsV2PanelsExperimentNewUsers.getCurrentConfig({
                    location: "isSplitMessagesTab"
                }, {
                    autoTrackExposure: !1
                }).isSplitMessagesTab || !!s.MainTabsV2OnePercentExperimentExistingUsers.getCurrentConfig({
                    location: "isSplitMessagesTab"
                }, {
                    autoTrackExposure: !1
                }).showPanels || !!s.MainTabsV2OnePercentExperimentNewUsers.getCurrentConfig({
                    location: "isSplitMessagesTab"
                }, {
                    autoTrackExposure: !1
                }).showPanels || !1)
            }

            function E() {
                if (!_()) return !1;
                let e = (0, u.default)();
                return (null == e ? void 0 : e.name) === "messages"
            }

            function f(e) {
                return !(!d() || (0, o.isOnGlobalPanels)()) && (!_() || null != e && e !== c.ME)
            }
        },
        491246: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("693051");

            function r() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : (0, i.getRootNavigationRef)(),
                    t = (null == e ? void 0 : e.isReady()) === !0 ? null == e ? void 0 : e.getCurrentRoute() : void 0;
                return t
            }
        },
        746800: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2022-11_rtx40xx_gpu_screenshare_with_av1",
                label: "Test how AV1 works on windows with RTX40xx GPUs for screenshare",
                defaultConfig: {
                    signalAV1Support: !1
                },
                treatments: [{
                    id: 1,
                    label: "Screenshare with AV1",
                    config: {
                        signalAV1Support: !0
                    }
                }]
            })
        },
        469543: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-09_amd_relaxed_rate_control",
                label: "Alternative rate control proposal for AMD encoder",
                defaultConfig: {
                    amdRelaxedRc: !1
                },
                treatments: [{
                    id: 1,
                    label: "AMD relaxed rate control",
                    config: {
                        amdRelaxedRc: !0
                    }
                }]
            })
        },
        584687: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-09_decoupled_game_clipping",
                label: "Test decoupled game clipping",
                defaultConfig: {
                    enableDecoupledGameClipping: !1
                },
                treatments: [{
                    id: 1,
                    label: "Decoupled Game Clipping",
                    config: {
                        enableDecoupledGameClipping: !0
                    }
                }]
            })
        },
        334280: function(e, t, n) {
            "use strict";
            n.r(t), (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-02_h265_android",
                label: "Test how h265 works on android for DM calls",
                defaultConfig: {
                    signalH265SupportAndroid: !1
                },
                treatments: [{
                    id: 1,
                    label: "Calling with H.265",
                    config: {
                        signalH265SupportAndroid: !0
                    }
                }]
            })
        },
        705500: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-06_h265_macos",
                label: "Test how h265 works on macos",
                defaultConfig: {
                    signalH265SupportMacOS: !1
                },
                treatments: [{
                    id: 1,
                    label: "Calling with H.265",
                    config: {
                        signalH265SupportMacOS: !0
                    }
                }]
            })
        },
        715440: function(e, t, n) {
            "use strict";
            n.r(t), (0, n("862205").createExperiment)({
                kind: "user",
                id: "2022-10_h265_dm_call",
                label: "Test how h265 works on ios/macos for DM calls",
                defaultConfig: {
                    signalH265SupportApple: !1
                },
                treatments: [{
                    id: 1,
                    label: "Calling with H.265",
                    config: {
                        signalH265SupportApple: !0
                    }
                }]
            })
        },
        238847: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-07_h265_for_windows_with_nvidia",
                label: "Test how h265 works on Windows with Nvidia nvenc codec",
                defaultConfig: {
                    signalH265SupportNvenc: !1
                },
                treatments: [{
                    id: 1,
                    label: "Calling with H.265",
                    config: {
                        signalH265SupportNvenc: !0
                    }
                }]
            })
        },
        981699: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2021-06_hdr_screen_capture",
                label: "HDR Screen Capture",
                defaultConfig: {
                    hdrCaptureMode: "never"
                },
                treatments: [{
                    id: 1,
                    label: "Always",
                    config: {
                        hdrCaptureMode: "always"
                    }
                }, {
                    id: 2,
                    label: "Permitted Devices Only",
                    config: {
                        hdrCaptureMode: "permittedDevicesOnly"
                    }
                }]
            })
        },
        140622: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-08_full_band_krisp_android_",
                label: "Let us control if full band is enabled on Android",
                defaultConfig: {
                    allowSettingFullbandAndroid: !1
                },
                treatments: [{
                    id: 1,
                    label: "Load full band krisp model",
                    config: {
                        allowSettingFullbandAndroid: !0
                    }
                }]
            })
        },
        16001: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2021-08_max_sync_delay",
                label: "Overrides the default max sync delay for AV streams in WebRTC",
                defaultConfig: {
                    maxSyncDelayOverride: 0
                },
                treatments: [{
                    id: 1,
                    label: "Use 3 seconds as max sync delay",
                    config: {
                        maxSyncDelayOverride: 3e3
                    }
                }]
            })
        },
        631508: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2021-02_quartz_video_source",
                label: "Quartz Video Source",
                defaultConfig: {
                    useQuartzCapturer: !1,
                    allowScreenCaptureKit: !1
                },
                treatments: [{
                    id: 1,
                    label: "gotta go fast",
                    config: {
                        useQuartzCapturer: !0,
                        allowScreenCaptureKit: !1
                    }
                }, {
                    id: 2,
                    label: "2fast 2furious",
                    config: {
                        useQuartzCapturer: !0,
                        allowScreenCaptureKit: !0
                    }
                }]
            })
        },
        403770: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-08_secure_frames_encryption",
                label: "Allowing testing secure frames for voice/video",
                defaultConfig: {
                    canSupportSecureFrames: !1
                },
                treatments: [{
                    id: 1,
                    label: "Can support secure frames for voice/video",
                    config: {
                        canSupportSecureFrames: !0
                    }
                }]
            })
        },
        445620: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-10_video_hook_disable",
                label: "Video Hook disable on Windows 11",
                defaultConfig: {
                    videoHookEnabled: !0
                },
                treatments: [{
                    id: 1,
                    label: "Video Hook disabled",
                    config: {
                        videoHookEnabled: !1
                    }
                }]
            })
        },
        834604: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2023-08_video_quality_measurement_v1",
                label: "Video Quality Measurement",
                defaultConfig: {
                    enabled: !1,
                    measurement: ""
                },
                treatments: [{
                    id: 1,
                    label: "Measure PSNR [DEPRECATED DO NOT USE]",
                    config: {
                        enabled: !0,
                        measurement: "psnr"
                    }
                }, {
                    id: 2,
                    label: "Measure PSNR Only",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb"
                    }
                }, {
                    id: 3,
                    label: "Measure VMAF Only",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityVmaf_v061"
                    }
                }, {
                    id: 4,
                    label: "Measure PSNR and VMAF",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb,imageQualityVmaf_v061"
                    }
                }, {
                    id: 5,
                    label: "Measure PSNR Only, 5000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb:5000"
                    }
                }, {
                    id: 6,
                    label: "Measure VMAF Only, 5000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityVmaf_v061:5000"
                    }
                }, {
                    id: 7,
                    label: "Measure PSNR and VMAF, 5000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb:5000,imageQualityVmaf_v061:5000"
                    }
                }, {
                    id: 8,
                    label: "Measure PSNR Only, 10000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb:10000"
                    }
                }, {
                    id: 9,
                    label: "Measure VMAF Only, 10000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityVmaf_v061:10000"
                    }
                }, {
                    id: 10,
                    label: "Measure PSNR and VMAF, 10000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb:10000,imageQualityVmaf_v061:10000"
                    }
                }, {
                    id: 11,
                    label: "Measure PSNR Only, 30000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb:30000"
                    }
                }, {
                    id: 12,
                    label: "Measure VMAF Only, 30000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityVmaf_v061:30000"
                    }
                }, {
                    id: 13,
                    label: "Measure PSNR and VMAF, 30000ms",
                    config: {
                        enabled: !0,
                        measurement: "imageQualityWebrtcPsnrDb:30000,imageQualityVmaf_v061:30000"
                    }
                }]
            });
            var s = {
                isFeatureSupportedOnPlatform: () => !0,
                getConfig(e) {
                    let t = r.getCurrentConfig({
                        location: "e1c55b_1"
                    }, {
                        autoTrackExposure: e
                    });
                    return !this.isFeatureSupportedOnPlatform() && (t.enabled = !1), t
                }
            }
        },
        353500: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2021-03_videotoolbox_rate_optimization",
                label: "VideoToolbox Rate Control Optimizations",
                defaultConfig: {
                    useExperimentalRateControl: !1
                },
                treatments: [{
                    id: 1,
                    label: "On",
                    config: {
                        useExperimentalRateControl: !0
                    }
                }]
            })
        },
        103979: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2023-10_viewer_clipping",
                label: "Test viewer side clipping",
                defaultConfig: {
                    enableSideEncoderViewerClipping: !1,
                    enableEndEncoderViewerClipping: !1
                },
                treatments: [{
                    id: 1,
                    label: "Viewer Clipping with side encoder",
                    config: {
                        enableSideEncoderViewerClipping: !0,
                        enableEndEncoderViewerClipping: !1
                    }
                }, {
                    id: 2,
                    label: "Viewer Clipping with enc encoder",
                    config: {
                        enableSideEncoderViewerClipping: !1,
                        enableEndEncoderViewerClipping: !0
                    }
                }]
            })
        },
        591883: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("913144"),
                r = n("860604");

            function s(e, t) {
                i.default.wait(() => {
                    i.default.dispatch({
                        type: "AUDIO_SET_LOCAL_VIDEO_DISABLED",
                        context: r.MediaEngineContextTypes.DEFAULT,
                        userId: e,
                        videoToggleState: t,
                        persist: !1,
                        isAutomatic: !0
                    })
                })
            }
        },
        222920: function(e, t, n) {
            "use strict";
            n.r(t), (0, n("862205").createExperiment)({
                kind: "user",
                id: "2021-09_ios_screenshare_resolution_profiles",
                label: "iOS: Screenshare resolution profiles",
                defaultConfig: {
                    profile: 0
                },
                treatments: [{
                    id: 1,
                    label: "Permanent old resolution",
                    config: {
                        profile: 1
                    }
                }, {
                    id: 2,
                    label: "Old resolution for 10s",
                    config: {
                        profile: 2
                    }
                }, {
                    id: 3,
                    label: "Wait 3s after 1st frame capture",
                    config: {
                        profile: 3
                    }
                }, {
                    id: 4,
                    label: "Wait 3s to capture 1st frame",
                    config: {
                        profile: 4
                    }
                }]
            })
        },
        122530: function(e, t, n) {
            "use strict";
            let i, r;
            n.r(t), n.d(t, {
                default: function() {
                    return o
                },
                setVideoToggleAnalyticsParams: function() {
                    return u
                }
            });
            var s = n("599110"),
                a = n("49111"),
                l = n("860604");

            function o(e, t, n) {
                var l, o;
                s.default.track(a.AnalyticEvents.VIDEO_TOGGLED, {
                    video_toggle_reason: t,
                    toggled_user_id: e,
                    rtc_connection_id: null === (l = i) || void 0 === l ? void 0 : l(),
                    media_session_id: null === (o = r) || void 0 === o ? void 0 : o(),
                    video_health_manager_window_length: null,
                    video_health_manager_poor_fps_ratio: null,
                    video_health_manager_fps_threshold: null,
                    is_video_shown: n,
                    video_health_manager_backoff_time_seconds: null
                })
            }

            function u(e, t) {
                i = e, r = t
            }
        },
        827032: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                addGlobalTag: function() {
                    return r
                },
                getGlobalTagsArray: function() {
                    return s
                }
            });
            let i = {};

            function r(e, t) {
                i[e] = t
            }

            function s() {
                return Object.keys(i).map(e => "".concat(e, ":").concat(i[e]))
            }
        },
        489269: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("913144"),
                r = class e {
                    static setPermission(e, t) {
                        i.default.dispatch({
                            type: "SET_NATIVE_PERMISSION",
                            permissionType: e,
                            state: t
                        })
                    }
                }
        },
        426685: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NativePermissionBaseUtils: function() {
                    return u
                }
            });
            var i = n("599110"),
                r = n("489269"),
                s = n("581892"),
                a = n("180524"),
                l = n("49111"),
                o = n("782340");
            class u {
                async requestAuthorization(e, t, n) {
                    if ("function" != typeof t) throw Error("requestAuthorization: Was provided with not a function for ".concat(e, "."));
                    i.default.track(l.AnalyticEvents.PERMISSIONS_REQUESTED, {
                        type: e
                    });
                    let s = await t() === a.NativePermissionStatus.AUTHORIZED,
                        o = s ? a.NativePermissionStates.ACCEPTED : a.NativePermissionStates.DENIED;
                    return r.default.setPermission(e, o), !s && n.showAuthorizationError && this.showAlert(e), s
                }
                requestPermission(e, t) {
                    let n = u.defaultNativePermissionsRequestOptions(t);
                    return this.requestPermissionCore(e, n)
                }
                hasPermission(e, t) {
                    let n = u.defaultNativePermissionsRequestOptions(t);
                    return this.hasPermissionCore(e, n)
                }
                showAlert(e) {
                    let t = {
                            [a.NativePermissionTypes.CAMERA]: "".concat(o.default.Messages.NO_CAMERA_ACCESS, ". ").concat(o.default.Messages.ENABLE_PRIVACY_ACCESS),
                            [a.NativePermissionTypes.AUDIO]: "".concat(o.default.Messages.NO_MICRPHONE_ACCESS, ". ").concat(o.default.Messages.ENABLE_PRIVACY_ACCESS),
                            [a.NativePermissionTypes.PHOTOS]: "".concat(o.default.Messages.NO_PHOTOS_ACCESS, ". ").concat(o.default.Messages.ENABLE_PRIVACY_ACCESS),
                            [a.NativePermissionTypes.INPUT_MONITORING]: "".concat(o.default.Messages.NO_INPUT_MONITORING_ACCESS, ". ").concat(o.default.Messages.ENABLE_PRIVACY_ACCESS),
                            [a.NativePermissionTypes.CONTACTS]: "".concat(o.default.Messages.NO_CONTACTS_ACCESS, ". ").concat(o.default.Messages.ENABLE_PRIVACY_ACCESS)
                        },
                        n = t[e];
                    null != n && this.openAlertModal({
                        title: o.default.Messages.SYSTEM_PERMISSION_GRANT,
                        body: n,
                        onConfirm: () => this.openSettings(e),
                        cancelText: o.default.Messages.CANCEL,
                        confirmText: o.default.Messages.DEVICE_SETTINGS
                    })
                }
                static defaultNativePermissionsRequestOptions(e) {
                    let t = {
                        showAuthorizationError: !0
                    };
                    return null == e ? t : {
                        ...t,
                        ...e
                    }
                }
                constructor() {
                    this.storage = new s.default
                }
            }
        },
        180524: function(e, t, n) {
            "use strict";
            var i, r, s, a, l, o, u, c;
            n.r(t), n.d(t, {
                NativePermissionStatus: function() {
                    return i
                },
                NativePermissionStates: function() {
                    return r
                },
                NativePermissionTypes: function() {
                    return s
                }
            }), (l = i || (i = {})).AUTHORIZED = "authorized", l.DENIED = "denied", l.RESTRICTED = "restricted", l.UNDETERMINED = "undetermined", (o = r || (r = {})).DISMISSED = "dismissed", o.DENIED = "denied", o.ACCEPTED = "accepted", o.NO_DEVICES = "no_devices", o.ERROR = "error", o.NONE = "none", (u = s || (s = {})).AUDIO = "audio", u.CAMERA = "camera", u.STORAGE = "storage", u.NOTIFICATIONS = "notifications", u.PHOTOS = "photos", u.CONTACTS = "contacts", u.INPUT_MONITORING = "input_monitoring", u.SCREEN_RECORDING = "screen_recording", (c = a || (a = {}))[c.UNDETERMINED = 0] = "UNDETERMINED", c[c.DENIED = 1] = "DENIED", c[c.AUTHORIZED = 2] = "AUTHORIZED", c[c.PROVISIONAL = 3] = "PROVISIONAL", c[c.EPHEMERAL = 4] = "EPHEMERAL"
        },
        66265: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("913144"),
                r = n("316272"),
                s = n("773336"),
                a = n("197881"),
                l = n("180524"),
                o = n("49111");
            class u extends r.default {
                isEnabled() {
                    return (0, s.isDesktop)() && (0, s.isMac)() && !a.ProcessArgs.isDiscordTestSet()
                }
                _initialize() {
                    this.isEnabled() && i.default.subscribe("AUDIO_SET_MODE", this.handleAudioSetMode)
                }
                _terminate() {
                    this.isEnabled() && i.default.unsubscribe("AUDIO_SET_MODE", this.handleAudioSetMode)
                }
                handleAudioSetMode(e) {
                    let {
                        mode: t
                    } = e;
                    if (t === o.InputModes.PUSH_TO_TALK) {
                        let e = n("928609").default;
                        e.requestPermission(l.NativePermissionTypes.INPUT_MONITORING)
                    }
                }
            }
            var c = new u
        },
        581892: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("599110"),
                a = n("180524"),
                l = n("49111");
            let o = {
                permissionStates: {}
            };
            class u extends i.default.DeviceSettingsStore {
                initialize(e) {
                    o = null != e ? e : o
                }
                getUserAgnosticState() {
                    return o
                }
                hasPermission(e) {
                    let t = o.permissionStates,
                        n = t[e];
                    return null != n && n === a.NativePermissionStates.ACCEPTED
                }
                handleSetNativePermission(e) {
                    let {
                        state: t,
                        permissionType: n
                    } = e, i = o.permissionStates, r = i[n];
                    i[n] = t, r !== t && s.default.track(l.AnalyticEvents.PERMISSIONS_ACKED, {
                        type: n,
                        action: t,
                        previous_action: null != r ? r : a.NativePermissionStates.NONE
                    })
                }
                constructor() {
                    super(r.default, {
                        SET_NATIVE_PERMISSION: e => this.handleSetNativePermission(e)
                    })
                }
            }
            u.displayName = "NativePermissionStore", u.persistKey = "NativePermissionsStore";
            var c = u
        },
        912067: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("426685");
            class r extends i.NativePermissionBaseUtils {
                requestPermissionCore(e, t) {
                    return Promise.resolve(!0)
                }
                hasPermissionCore(e, t) {
                    return Promise.resolve(!0)
                }
                openSettings(e) {}
                didHavePermission(e) {
                    return !0
                }
                openAlertModal(e) {}
            }
            var s = new r
        },
        928609: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                NativePermissionsRequestOptions: function() {
                    return l.NativePermissionsRequestOptions
                },
                default: function() {
                    return o
                }
            });
            var r = n("773336"),
                s = n("197881"),
                a = n("66265"),
                l = n("426685");
            a.default.initialize();
            var o = i = s.ProcessArgs.isDiscordTestSet() ? n("912067").default : (0, r.isDesktop)() ? n("401717").default : n("912067").default
        },
        401717: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("404118"),
                r = n("50885"),
                s = n("426685"),
                a = n("180524");
            class l extends s.NativePermissionBaseUtils {
                requestPermissionCore(e, t) {
                    var n;
                    return this.asyncify(null === (n = this.nativeUtils) || void 0 === n ? void 0 : n.nativePermssionRequestAuthorization, e, t)
                }
                hasPermissionCore(e, t) {
                    var n;
                    return this.asyncify(null === (n = this.nativeUtils) || void 0 === n ? void 0 : n.nativePermssionHasAuthorization, e, t)
                }
                asyncify(e, t, n) {
                    let i = l.requestTypeLookup[t];
                    return void 0 === i ? Promise.resolve(!0) : this.requestAuthorization(t, () => null == e ? Promise.resolve(a.NativePermissionStatus.AUTHORIZED) : new Promise((t, n) => e(t, i)), n)
                }
                openSettings(e) {
                    var t;
                    if ((null === (t = this.nativeUtils) || void 0 === t ? void 0 : t.nativePermissionOpenSettings) == null) return;
                    let n = l.requestTypeLookup[e];
                    void 0 !== n && this.nativeUtils.nativePermissionOpenSettings(n)
                }
                didHavePermission(e) {
                    return this.storage.hasPermission(e)
                }
                openAlertModal(e) {
                    let {
                        title: t,
                        body: n,
                        onConfirm: r,
                        cancelText: s,
                        confirmText: a
                    } = e;
                    i.default.show({
                        title: t,
                        body: n,
                        onConfirm: r,
                        cancelText: s,
                        confirmText: a
                    })
                }
                constructor(...e) {
                    super(...e), this.nativeUtils = r.default.getDiscordUtils()
                }
            }
            l.requestTypeLookup = {
                [a.NativePermissionTypes.CAMERA]: r.NativePermissionRequestType.Camera,
                [a.NativePermissionTypes.AUDIO]: r.NativePermissionRequestType.Microphone,
                [a.NativePermissionTypes.PHOTOS]: r.NativePermissionRequestType.Photo,
                [a.NativePermissionTypes.INPUT_MONITORING]: r.NativePermissionRequestType.InputMonitoring,
                [a.NativePermissionTypes.SCREEN_RECORDING]: r.NativePermissionRequestType.ScreenRecording
            };
            var o = new l
        },
        6791: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                OVERLAY_SUPPORTED: function() {
                    return h
                },
                OverlayNudgeTypes: function() {
                    return u
                },
                getOverlayNotificationGroup: function() {
                    return S
                },
                OverlayNotificationGroup: function() {
                    return d
                },
                OverlayNotificationType: function() {
                    return _
                },
                OverlayNotificationAction: function() {
                    return E
                },
                BackgroundOpacityClasses: function() {
                    return T
                },
                OverlayMethod: function() {
                    return f
                },
                OpacityBounds: function() {
                    return I
                }
            });
            var i, r, s, a, l, o, u, c, d, _, E, f, p = n("773336");
            let h = p.isPlatformEmbedded && ((0, p.isWindows)() || !1);

            function S(e) {
                switch (e) {
                    case _.NewsNudge:
                    case _.WelcomeNudge:
                    case _.GoLiveNudge:
                    case _.GoLiveNonVoiceNudge:
                    case _.StartBroadcastNotification:
                        return d.Nudge;
                    case _.TextChat:
                        return d.TextChat;
                    case _.ActivityUserJoin:
                    case _.ActivityInvite:
                        return d.Activity;
                    case _.IncomingCall:
                        return d.VoiceCall;
                    case _.ClipsReminderNotification:
                    case _.ClipsNotification:
                        return d.Clips;
                    case _.OverlayCrashed:
                    default:
                        return d.Other
                }
            }(i = u || (u = {}))[i.WELCOME = 0] = "WELCOME", i[i.NEWS = 1] = "NEWS", i[i.GO_LIVE_VOICE = 2] = "GO_LIVE_VOICE", i[i.GO_LIVE_NON_VOICE = 3] = "GO_LIVE_NON_VOICE", i[i.BROADCAST = 4] = "BROADCAST", (r = c || (c = {})).PRIMARY = "PRIMARY", r.BRAND = "BRAND", r.DANGER = "DANGER", (s = d || (d = {}))[s.Nudge = 0] = "Nudge", s[s.TextChat = 1] = "TextChat", s[s.VoiceCall = 2] = "VoiceCall", s[s.Activity = 3] = "Activity", s[s.Clips = 4] = "Clips", s[s.Other = 5] = "Other", (a = _ || (_ = {})).NewsNudge = "News Nudge", a.WelcomeNudge = "Welcome Nudge", a.TextChat = "Text Chat", a.ActivityUserJoin = "Activity User Join", a.ActivityInvite = "Activity Invite", a.IncomingCall = "Incoming Call", a.GoLiveNudge = "Go Live Nudge", a.GoLiveNonVoiceNudge = "Go Live Non Voice Nudge", a.OverlayCrashed = "Overlay Crashed", a.StartBroadcastNotification = "Start Broadcast Notification", a.ClipsReminderNotification = "Clips Reminder Notification", a.ClipsNotification = "Clips Notification", (l = E || (E = {}))[l.Viewed = 0] = "Viewed", l[l.Clicked = 1] = "Clicked";
            let T = Object.freeze({
                LOW: "background-opacity-low",
                MEDIUM: "background-opacity-medium",
                HIGH: "background-opacity-high",
                FULL: "background-opacity-full",
                DISABLED: null
            });
            (o = f || (f = {}))[o.Default = 0] = "Default", o[o.Hook = 1] = "Hook", o[o.Global = 2] = "Global";
            let I = Object.freeze({
                BOTTOM: 0,
                LOWER: .25,
                UPPER: .75,
                TOP: 1
            })
        },
        32128: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                OverlayStoredSettings: function() {
                    return o
                }
            });
            var i, r, s = n("173333"),
                a = n("630915"),
                l = n("6791");
            (i = r || (r = {})).Version1 = "OverlayStore", i.Version2 = "overlayEnabled", i.Version3 = "OverlayStore3";
            class o {
                static get enabled() {
                    return o.load().enabled
                }
                static get method() {
                    let e = a.default.getCurrentConfig({
                        location: "1"
                    }, {
                        autoTrackExposure: !1
                    });
                    if (null != e && e.useGlobalOverlay) switch (o.load().method) {
                        case l.OverlayMethod.Default:
                        case l.OverlayMethod.Global:
                            return l.OverlayMethod.Global
                    }
                    return l.OverlayMethod.Hook
                }
                static update(e) {
                    let t = o.load();
                    if ("boolean" == typeof e.enabled && (t.enabled = e.enabled), typeof e.method == typeof l.OverlayMethod.Default) {
                        var n;
                        t.method = null !== (n = e.method) && void 0 !== n ? n : l.OverlayMethod.Default
                    }
                    t.save()
                }
                save() {
                    let e = {
                        enabled: this.enabled,
                        method: this.method
                    };
                    s.default.set(r.Version3, e)
                }
                static load() {
                    return null == o._loaded && (o._loaded = o.loadInternal()), o._loaded
                }
                static loadInternal() {
                    let e = s.default.get(r.Version1);
                    if (null != e) {
                        let t = "boolean" == typeof e.enabled ? e.enabled : l.OVERLAY_SUPPORTED,
                            n = new o(t, l.OverlayMethod.Default);
                        return n.save(), s.default.remove(r.Version1), n
                    }
                    let t = s.default.get(r.Version2);
                    if (null != t) {
                        let e = "boolean" == typeof t ? t : l.OVERLAY_SUPPORTED,
                            n = new o(e, l.OverlayMethod.Default);
                        return n.save(), s.default.remove(r.Version2), n
                    }
                    let n = s.default.get(r.Version3);
                    if (null != n) {
                        var i, a;
                        return new o(null !== (i = n.enabled) && void 0 !== i ? i : l.OVERLAY_SUPPORTED, null !== (a = n.method) && void 0 !== a ? a : l.OverlayMethod.Default)
                    }
                    let u = new o(l.OVERLAY_SUPPORTED, l.OverlayMethod.Default);
                    return u.save(), u
                }
                constructor(e, t) {
                    this.enabled = e, this.method = t
                }
            }
            o._loaded = null
        },
        400205: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("517001"),
                a = n("646718");
            let l = "OverridePremiumTypeStore",
                o = {
                    premiumTypeOverride: a.UNSELECTED_PREMIUM_TYPE_OVERRIDE,
                    premiumTypeActual: a.UNSELECTED_PREMIUM_TYPE_OVERRIDE
                };

            function u(e) {
                let {
                    user: t
                } = e;
                o.premiumTypeActual = (0, s.getPremiumTypeFromRawValue)(t.premium_type)
            }
            class c extends i.default.PersistedStore {
                initialize(e) {
                    if (null != e) {
                        o = e;
                        return
                    }
                    o.premiumTypeOverride = a.UNSELECTED_PREMIUM_TYPE_OVERRIDE
                }
                getPremiumTypeOverride() {
                    return o.premiumTypeOverride
                }
                getPremiumTypeActual() {
                    return o.premiumTypeActual
                }
                getState() {
                    return o
                }
                get premiumType() {
                    return o.premiumTypeOverride
                }
            }
            c.displayName = l, c.persistKey = l;
            var d = new c(r.default, {
                SET_PREMIUM_TYPE_OVERRIDE: function(e) {
                    let {
                        premiumType: t
                    } = e;
                    o.premiumTypeOverride = t
                },
                CURRENT_USER_UPDATE: u,
                CONNECTION_OPEN: u
            })
        },
        646718: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PremiumTypes: function() {
                    return I
                },
                UNSELECTED_PREMIUM_TYPE_OVERRIDE: function() {
                    return B
                },
                PREMIUM_TYPE_OVERRIDE_OPTIONS: function() {
                    return V
                },
                PremiumTypeOrder: function() {
                    return H
                },
                PREMIUM_SUBSCRIPTION_APPLICATION: function() {
                    return j
                },
                PremiumSubscriptionSKUs: function() {
                    return m
                },
                ACTIVE_PREMIUM_SKUS: function() {
                    return Y
                },
                PremiumSubscriptionSKUToPremiumType: function() {
                    return W
                },
                SubscriptionPlans: function() {
                    return g
                },
                PREMIUM_PLANS: function() {
                    return K
                },
                PREMIUM_TIER_2_PLANS: function() {
                    return z
                },
                PREMIUM_GUILD_SUBSCRIPTION_PLANS: function() {
                    return Z
                },
                MULTI_MONTH_PLANS: function() {
                    return q
                },
                PREMIUM_MONTHLY_PLANS: function() {
                    return X
                },
                PREMIUM_SKU_TO_MONTHLY_PLAN: function() {
                    return Q
                },
                PREMIUM_SKU_TO_YEARLY_PLAN: function() {
                    return J
                },
                SubscriptionIntervalTypes: function() {
                    return A
                },
                SubscriptionPlanInfo: function() {
                    return $
                },
                GUILD_BOOST_COST_FOR_PREMIUM_USER_DISCOUNT_PERCENT: function() {
                    return ee
                },
                NUM_FREE_GUILD_BOOSTS_WITH_PREMIUM: function() {
                    return et
                },
                DEFAULT_MAX_INVOICE_PAYMENT_DAYS: function() {
                    return en
                },
                PAID_SUBSCRIPTION_MAX_INVOICE_PAYMENT_DAYS: function() {
                    return ei
                },
                MAX_ACCOUNT_HOLD_DAYS: function() {
                    return er
                },
                BLACK_FRIDAY_2020_GIFT_CODE_BATCH_ID: function() {
                    return es
                },
                STICKERS_GIFT_CODE_BATCH_ID: function() {
                    return ea
                },
                USER_PREMIUM_SUBSCRIPTION_TRIAL_EXPIRES_APPROACHING_5_DAY_THRESHOLD: function() {
                    return el
                },
                MAX_PAYMENT_PROCESSING_TIME_DAYS: function() {
                    return eo
                },
                PREMIUM_TIER_2_LIKELIHOOD_TRIAL_ID: function() {
                    return eu
                },
                PREMIUM_TIER_2_REACTIVATION_TRIAL_ID: function() {
                    return ec
                },
                PREMIUM_TIER_2_HFU_ONE_WEEK_TRIAL_ID: function() {
                    return ed
                },
                PREMIUM_TIER_2_HFU_TWO_WEEK_TRIAL_ID: function() {
                    return e_
                },
                PREMIUM_TIER_2_HFU_ONE_MONTH_TRIAL_ID: function() {
                    return eE
                },
                PREMIUM_TIER_2_AUTH3_TRIAL_ID: function() {
                    return ef
                },
                PREMIUM_TIER_2_REFERRAL_TRIAL_ID: function() {
                    return ep
                },
                PREMIUM_TIER_0_LIKELIHOOD_TRIAL_ID: function() {
                    return eh
                },
                PREMIUM_TIER_2_TRIAL_FOR_EVERYONE_TRIAL_ID: function() {
                    return eS
                },
                PREMIUM_TIER_2_3P_ONE_MONTH_TRIAL_ID: function() {
                    return eT
                },
                PREMIUM_TIER_2_LIKELIHOOD_DISCOUNT_ID: function() {
                    return eI
                },
                DEVTOOLS_TRIAL_IDS: function() {
                    return em
                },
                SubscriptionTrials: function() {
                    return eg
                },
                PremiumUpsellTypes: function() {
                    return C
                },
                PurchasedFlags: function() {
                    return R
                },
                SKU_ID_PURCHASED_FLAGS: function() {
                    return eA
                },
                OUTBOUND_PROMOTION_REDEMPTION_EXPIRATION_WINDOW: function() {
                    return eC
                },
                MAX_PREMIUM_TIER_0_ATTACHMENT_SIZE: function() {
                    return eR
                },
                IncrementalStickerCountsByTier: function() {
                    return eN
                },
                TotalStickerCountsByTier: function() {
                    return ev
                },
                TotalSoundboardSoundCountsByTier: function() {
                    return eO
                },
                BoostedGuildFeatures: function() {
                    return eD
                },
                ORDERED_PREMIUM_SUBSCRIPTION_PLANS: function() {
                    return eL
                },
                AnalyticsPremiumFeatureNames: function() {
                    return N
                },
                AnalyticsPremiumFeatureTiers: function() {
                    return v
                },
                DISCOUNTS: function() {
                    return eM
                },
                StreamQualities: function() {
                    return O
                },
                StreamQualitiesToPremiumType: function() {
                    return eP
                },
                PremiumMarketingEntrypoints: function() {
                    return D
                },
                InboundPromotionErrorCodes: function() {
                    return L
                },
                PremiumUserLimits: function() {
                    return eb
                },
                PremiumTutorialSteps: function() {
                    return ey
                },
                PremiumTutorialSubsteps: function() {
                    return M
                },
                PremiumTutorialSubstepsOrder: function() {
                    return eU
                },
                PremiumTutorialSubstepsToStepMap: function() {
                    return eG
                },
                PremiumTutorialStepOrder: function() {
                    return ew
                },
                PremiumFeatureHelperActions: function() {
                    return P
                },
                PremiumTutorialStepsAnalyticEvents: function() {
                    return ex
                },
                PremiumTutorialSubstepsAnalyticEvents: function() {
                    return ek
                },
                BoostingUpsellAction: function() {
                    return y
                },
                ReferralTrialsAnalyticSteps: function() {
                    return U
                },
                LegacyPricingCountries: function() {
                    return eF
                }
            });
            var i, r, s, a, l, o, u, c, d, _, E, f, p, h, S, T, I, m, g, A, C, R, N, v, O, D, L, M, P, b, y, U, G = n("377849"),
                w = n.n(G),
                x = n("975162"),
                k = n("49111"),
                F = n("958706");
            (i = I || (I = {}))[i.TIER_1 = 1] = "TIER_1", i[i.TIER_2 = 2] = "TIER_2", i[i.TIER_0 = 3] = "TIER_0";
            let B = void 0,
                V = [{
                    value: null,
                    label: "Non-Nitro"
                }, {
                    value: I.TIER_0,
                    label: "Basic"
                }, {
                    value: I.TIER_1,
                    label: "Classic"
                }, {
                    value: I.TIER_2,
                    label: "Standard"
                }],
                H = Object.freeze({
                    [I.TIER_0]: 0,
                    [I.TIER_1]: 1,
                    [I.TIER_2]: 2
                }),
                j = "521842831262875670";
            (r = m || (m = {})).NONE = "628379670982688768", r.TIER_0 = "978380684370378762", r.TIER_1 = "521846918637420545", r.TIER_2 = "521847234246082599", r.GUILD = "590663762298667008", r.LEGACY = "521842865731534868";
            let Y = [m.NONE, m.TIER_0, m.TIER_1, m.TIER_2, m.GUILD],
                W = Object.freeze({
                    [m.TIER_0]: I.TIER_0,
                    [m.TIER_1]: I.TIER_1,
                    [m.TIER_2]: I.TIER_2,
                    [m.LEGACY]: I.TIER_2
                });
            (s = g || (g = {})).NONE_MONTH = "628379151761408000", s.NONE_YEAR = "628381571568631808", s.PREMIUM_MONTH_TIER_0 = "978380692553465866", s.PREMIUM_YEAR_TIER_0 = "1024422698568122368", s.PREMIUM_MONTH_TIER_1 = "511651871736201216", s.PREMIUM_YEAR_TIER_1 = "511651876987469824", s.PREMIUM_MONTH_TIER_2 = "511651880837840896", s.PREMIUM_YEAR_TIER_2 = "511651885459963904", s.PREMIUM_MONTH_GUILD = "590665532894740483", s.PREMIUM_YEAR_GUILD = "590665538238152709", s.NONE_3_MONTH = "944265614527037440", s.NONE_6_MONTH = "944265636643602432", s.PREMIUM_3_MONTH_TIER_2 = "642251038925127690", s.PREMIUM_6_MONTH_TIER_2 = "944037208325619722", s.PREMIUM_3_MONTH_GUILD = "944037355453415424", s.PREMIUM_6_MONTH_GUILD = "944037391444738048", s.PREMIUM_MONTH_LEGACY = "511651856145973248", s.PREMIUM_YEAR_LEGACY = "511651860671627264";
            let K = new Set([g.PREMIUM_MONTH_TIER_0, g.PREMIUM_YEAR_TIER_0, g.PREMIUM_MONTH_TIER_1, g.PREMIUM_YEAR_TIER_1, g.PREMIUM_MONTH_TIER_2, g.PREMIUM_3_MONTH_TIER_2, g.PREMIUM_6_MONTH_TIER_2, g.PREMIUM_YEAR_TIER_2, g.PREMIUM_MONTH_LEGACY, g.PREMIUM_YEAR_LEGACY]),
                z = new Set([g.PREMIUM_MONTH_TIER_2, g.PREMIUM_3_MONTH_TIER_2, g.PREMIUM_6_MONTH_TIER_2, g.PREMIUM_YEAR_TIER_2]),
                Z = new Set([g.PREMIUM_MONTH_GUILD, g.PREMIUM_3_MONTH_GUILD, g.PREMIUM_6_MONTH_GUILD, g.PREMIUM_YEAR_GUILD]),
                q = new Set([g.PREMIUM_3_MONTH_TIER_2, g.PREMIUM_6_MONTH_TIER_2, g.PREMIUM_3_MONTH_GUILD, g.PREMIUM_6_MONTH_GUILD]),
                X = new Set([g.PREMIUM_MONTH_TIER_0, g.PREMIUM_MONTH_TIER_1, g.PREMIUM_MONTH_TIER_2]),
                Q = Object.freeze({
                    [m.TIER_0]: g.PREMIUM_MONTH_TIER_0,
                    [m.TIER_1]: g.PREMIUM_MONTH_TIER_1,
                    [m.TIER_2]: g.PREMIUM_MONTH_TIER_2,
                    [m.NONE]: void 0,
                    [m.GUILD]: void 0,
                    [m.LEGACY]: void 0
                }),
                J = Object.freeze({
                    [m.TIER_0]: g.PREMIUM_YEAR_TIER_0,
                    [m.TIER_1]: g.PREMIUM_YEAR_TIER_1,
                    [m.TIER_2]: g.PREMIUM_YEAR_TIER_2,
                    [m.NONE]: void 0,
                    [m.GUILD]: void 0,
                    [m.LEGACY]: void 0
                });
            (a = A || (A = {}))[a.MONTH = 1] = "MONTH", a[a.YEAR = 2] = "YEAR", a[a.DAY = 3] = "DAY";
            let $ = Object.freeze({
                    [g.NONE_MONTH]: {
                        id: g.NONE_MONTH,
                        name: "None Monthly",
                        skuId: m.NONE,
                        interval: A.MONTH,
                        intervalCount: 1
                    },
                    [g.NONE_YEAR]: {
                        id: g.NONE_YEAR,
                        name: "None Yearly",
                        skuId: m.NONE,
                        interval: A.YEAR,
                        intervalCount: 1
                    },
                    [g.PREMIUM_MONTH_TIER_0]: {
                        id: g.PREMIUM_MONTH_TIER_0,
                        name: "Nitro Basic Monthly",
                        premiumType: I.TIER_0,
                        skuId: m.TIER_0,
                        interval: A.MONTH,
                        intervalCount: 1
                    },
                    [g.PREMIUM_YEAR_TIER_0]: {
                        id: g.PREMIUM_YEAR_TIER_0,
                        name: "Nitro Basic Yearly",
                        premiumType: I.TIER_0,
                        skuId: m.TIER_0,
                        interval: A.YEAR,
                        intervalCount: 1
                    },
                    [g.PREMIUM_MONTH_TIER_1]: {
                        id: g.PREMIUM_MONTH_TIER_1,
                        name: "Nitro Classic Monthly",
                        premiumType: I.TIER_1,
                        skuId: m.TIER_1,
                        interval: A.MONTH,
                        intervalCount: 1
                    },
                    [g.PREMIUM_YEAR_TIER_1]: {
                        id: g.PREMIUM_YEAR_TIER_1,
                        name: "Nitro Classic Yearly",
                        premiumType: I.TIER_1,
                        skuId: m.TIER_1,
                        interval: A.YEAR,
                        intervalCount: 1
                    },
                    [g.PREMIUM_MONTH_TIER_2]: {
                        id: g.PREMIUM_MONTH_TIER_2,
                        name: "Nitro Monthly",
                        premiumType: I.TIER_2,
                        skuId: m.TIER_2,
                        interval: A.MONTH,
                        intervalCount: 1
                    },
                    [g.PREMIUM_YEAR_TIER_2]: {
                        id: g.PREMIUM_YEAR_TIER_2,
                        name: "Nitro Yearly",
                        premiumType: I.TIER_2,
                        skuId: m.TIER_2,
                        interval: A.YEAR,
                        intervalCount: 1
                    },
                    [g.PREMIUM_MONTH_GUILD]: {
                        id: g.PREMIUM_MONTH_GUILD,
                        name: "Nitro Server Boost Monthly",
                        skuId: m.GUILD,
                        interval: A.MONTH,
                        intervalCount: 1
                    },
                    [g.PREMIUM_YEAR_GUILD]: {
                        id: g.PREMIUM_YEAR_GUILD,
                        name: "Nitro Server Boost Yearly",
                        skuId: m.GUILD,
                        interval: A.YEAR,
                        intervalCount: 1
                    },
                    [g.PREMIUM_3_MONTH_TIER_2]: {
                        id: g.PREMIUM_3_MONTH_TIER_2,
                        name: "Nitro Three Month",
                        premiumType: I.TIER_2,
                        skuId: m.TIER_2,
                        interval: A.MONTH,
                        intervalCount: 3
                    },
                    [g.PREMIUM_6_MONTH_TIER_2]: {
                        id: g.PREMIUM_6_MONTH_TIER_2,
                        name: "Nitro Six Month",
                        premiumType: I.TIER_2,
                        skuId: m.TIER_2,
                        interval: A.MONTH,
                        intervalCount: 6
                    },
                    [g.PREMIUM_3_MONTH_GUILD]: {
                        id: g.PREMIUM_3_MONTH_GUILD,
                        name: "Nitro Server Boost Three Month",
                        skuId: m.GUILD,
                        interval: A.MONTH,
                        intervalCount: 3
                    },
                    [g.PREMIUM_6_MONTH_GUILD]: {
                        id: g.PREMIUM_6_MONTH_GUILD,
                        name: "Nitro Server Boost Six Month",
                        skuId: m.GUILD,
                        interval: A.MONTH,
                        intervalCount: 6
                    },
                    [g.NONE_3_MONTH]: {
                        id: g.NONE_3_MONTH,
                        name: "None Three Month",
                        skuId: m.NONE,
                        interval: A.MONTH,
                        intervalCount: 3
                    },
                    [g.NONE_6_MONTH]: {
                        id: g.NONE_6_MONTH,
                        name: "None Six Month",
                        skuId: m.NONE,
                        interval: A.MONTH,
                        intervalCount: 6
                    },
                    [g.PREMIUM_MONTH_LEGACY]: {
                        id: g.PREMIUM_MONTH_LEGACY,
                        name: "Nitro Monthly (Legacy)",
                        premiumType: I.TIER_2,
                        skuId: m.LEGACY,
                        interval: A.MONTH,
                        intervalCount: 1
                    },
                    [g.PREMIUM_YEAR_LEGACY]: {
                        id: g.PREMIUM_YEAR_LEGACY,
                        name: "Nitro Classic Yearly (Legacy)",
                        premiumType: I.TIER_2,
                        skuId: m.LEGACY,
                        interval: A.YEAR,
                        intervalCount: 1
                    }
                }),
                ee = 30,
                et = 2,
                en = 3,
                ei = 7,
                er = 30,
                es = "775514091874680832",
                ea = "845031178288889946",
                el = 432e6,
                eo = 14,
                eu = "520373071933079552",
                ec = "902329034132684800",
                ed = "983601860436819968",
                e_ = "983601860436819969",
                eE = "984244797441048577",
                ef = "1004850445463584768",
                ep = "1073698058383917056",
                eh = "1070132870233980928",
                eS = "1161363847311785984",
                eT = "844502143447597056",
                eI = "1150904354090532864",
                em = [
                    ["Tier 2 Likelihood", eu],
                    ["Tier 2 Reactivation", ec],
                    ["Tier 0 Likelihood", eh],
                    ["Tier 2 Two Week HFU", e_],
                    ["Tier 2 Two Week TFE", eS]
                ],
                eg = Object.freeze({
                    [eu]: {
                        id: eu,
                        skus: [m.TIER_2]
                    },
                    [ec]: {
                        id: ec,
                        skus: [m.TIER_2]
                    },
                    [ed]: {
                        id: ed,
                        skus: [m.TIER_2]
                    },
                    [e_]: {
                        id: e_,
                        skus: [m.TIER_2]
                    },
                    [eE]: {
                        id: eE,
                        skus: [m.TIER_2]
                    },
                    [ef]: {
                        id: ef,
                        skus: [m.TIER_2]
                    },
                    [eh]: {
                        id: eh,
                        skus: [m.TIER_0]
                    },
                    [ep]: {
                        id: ep,
                        skus: [m.TIER_2]
                    },
                    [eS]: {
                        id: eS,
                        skus: [m.TIER_2]
                    }
                });
            (l = C || (C = {})).ANIMATED_GUILD_BANNER_TOOLTIP = "animated_guild_banner_tooltip", l.EMOJI_PICKER_SEARCH = "emoji_picker_search", l.EMOJI_PICKER_EMOJI_CLICKED = "emoji_picker_emoji_clicked", l.EMOJI_PICKER_STICKER_CLICKED = "emoji_picker_sticker_clicked", l.EMOJI_PICKER_REACTION_EMOJI_CLICKED = "emoji_picker_reaction_emoji_clicked", l.EMOJI_PICKER_SUPER_REACTION_EMOJI_CLICKED = "emoji_picker_super_reaction_emoji_clicked", l.EMOJI_PICKER_STATUS_EMOJI_CLICKED = "emoji_picker_status_emoji_clicked", l.EMOJI_PICKER_TOP_SERVER_EMOJI_CLICKED = "emoji_picker_top_server_emoji_clicked", l.EMOJI_PICKER_NEWLY_ADDED_EMOJI_CLICKED = "emoji_picker_newly_added_emoji_clicked", l.EMOJI_AUTOCOMPLETE_INLINE = "emoji_autocomplete_inline", l.EMOJI_AUTOCOMPLETE_MODAL = "emoji_autocomplete_modal", l.EMOJI_IN_MESSAGE_HOVER = "emoji_in_message_hover", l.EMOJI_IN_REACTION_HOVER = "emoji_in_reaction_hover", l.EMOJI_IN_BURST_REACTION_HOVER = "emoji_in_burst_reaction_hover", l.EMOJI_IN_BURST_REACTION_HOVER_UPSELL = "emoji_in_burst_reaction_hover_upsell", l.STICKER_IN_MESSAGE_HOVER = "sticker_in_message_hover", l.EMPTY_STICKER_PICKER_UPSELL = "empty_sticker_picker_upsell", l.STREAM_QUALITY_INDICATOR = "stream_quality_indicator", l.GIFT_STREAM_QUALITY_INDICATOR = "gift_stream_quality_indicator", l.STREAM_QUALITY_UPSELL = "stream_quality_upsell", l.MESSAGE_LENGTH_UPSELL = "message_length_upsell", l.MESSAGE_LENGTH_IN_EDITOR_UPSELL = "message_length_in_editor_upsell", l.CUSTOM_PROFILE_UPSELL = "custom profiles upsell modal", l.CUSTOM_PROFILE_TRY_OUT_UPSELL = "try out custom profile in settings upsell", l.VIDEO_BACKGROUNDS_MODAL = "video backgrounds modal", l.VIDEO_BACKGROUNDS_INLINE = "video backgrounds inline", l.GUILD_CAP_INLINE_SERVER_LIST = "guild_cap_inline_server_list", l.GUILD_PREMIUM_UPSELL_MODAL = "premium guild premium upsell modal", l.GUILD_CAP_INLINE_INVITE_MODAL = "guild_cap_inline_invite_modal", l.GUILD_CAP_MODAL_UPSELL = "guild_cap_modal_upsell", l.PREMIUM_GUILD_IDENTITY_MODAL = "premium guild identity upsell alert", l.CUSTOM_PROFILE_SETTINGS_BANNER_BUTTON = "custom profiles settings banner upsell", l.CUSTOM_PROFILES_PROFILE_BANNER_SOCIAL_UPSELL = "custom profiles profile banner social upsell", l.STICKER_PICKER_UPSELL = "sticker_picker_upsell", l.ANIMATED_AVATAR_PREVIEW_GIF_MODAL = "animated avatar preview gif modal", l.PREMIUM_PROGRESS_BAR = "premium_progress_bar_tooltip", l.INVITE_SPLASH_UPSELL = "premium_invite_splash_upsell", l.ANIMATED_USER_AVATAR_MODAL = "animated user avatar upsell modal", l.UPLOAD_ERROR_UPSELL = "upload error upsell", l.PREMIUM_GUILD_MEMBER_PROFILE_UPSELL_INLINE = "premium guild member profile upsell inline", l.CONCURRENT_ACTIVITIES = "Concurrent Activities", l.PREMIUM_UNCANCEL_WINBACK_MODAL_VIEWED = "premium_uncancel_winback_modal_viewed", l.ANIMATED_VIDEO_BACKGROUND_NEW_PRESET = "animated_video_background_new_preset", l.LOW_PRICE_EXPERIMENT_TOOLTIP = "low_price_experiment_tooltip", l.PREMIUM_PROFILE_BADGE_UPSELL = "premium_profile_badge_upsell", l.AGGREGATE_PREMIUM_UPSELL_MODAL_FEATURE_EMOJI = "emoji", l.AGGREGATE_PREMIUM_UPSELL_MODAL_FEATURE_PROFILE_CUSTOMIZATION = "profile customization", l.AGGREGATE_PREMIUM_UPSELL_MODAL_FEATURE_HD_STREAMING = "hd streaming", l.AGGREGATE_PREMIUM_UPSELL_MODAL_FEATURE_LARGER_FILE_UPLOADS = "larger file uploads", l.AGGREGATE_PREMIUM_UPSELL_MODAL_FEATURE_BOGO = "bogo", l.VOICE_CHANNEL_EFFECTS_UPSELL = "voice_channel_effects_upsell", l.VOICE_CHANNEL_EFFECTS_BAR_EMOJI_UPSELL = "Voice Channel Effect Bar Emoji Upsell", l.VOICE_CHANNEL_EFFECTS_TOGGLE_CLICKED = "voice_channel_effects_toggle_clicked", l.VOICE_CHANNEL_EFFECTS_TOGGLE_CLICKED_EXPANDED = "voice_channel_effects_toggle_clicked_expanded", l.PROFILE_THEME_UPSELL_MODAL = "profile_theme_upsell_modal", l.PROFILE_EFFECTS_INLINE_SETTINGS = "profile_effects_inline_settings", l.PROFILE_EFFECTS_INLINE_SETTINGS_MOBILE = "profile_effects_inline_settings_mobile", l.HIGH_VIDEO_QUALITY_UPSELL = "high_video_quality_upsell", l.PREMIUM_PROFILE_TRY_IT_OUT = "premium_profile_try_it_out", l.BURST_REACTION_RAIL_UPSELL = "burst_reaction_rail_upsell", l.BURST_REACTION_UPSELL = "burst_reaction_upsell", l.BURST_REACTION_QUICK_ACTION_UPSELL = "burst_reaction_quick_action_upsell", l.BURST_REACTION_CONTEXT_MENU_UPSELL = "burst_reaction_context_menu_upsell", l.PREMIUM_CLIENT_THEME_TRY_IT_OUT = "premium_client_theme_try_it_out", l.PREMIUM_CLIENT_THEME_SETTINGS_UPSELL = "premium_client_theme_settings_upsell", l.VIDEO_STAGE_LIMIT = "video_stage_limit", l.SOUND_PICKER_SOUND_CLICKED = "sound_picker_sound_clicked", l.APP_ICON_UPSELL = "app_icon_upsell", l.COLLECTIBLES_SHOP = "collectibles_shop", l.COLLECTIBLES_PROFILE_SETTINGS_UPSELL = "collectibles_profile_settings_upsell", l.COLLECTIBLES_PREMIUM_MARKETING_PAGE_UPSELL = "collectibles_premium_marketing_page_upsell", l.CLIPS_GUILD_SIDEBAR_COACHMARK_PREMIUM_EARLY_ACCESS_UPSELL = "clips_guild_sidebar_coachmark_premium_early_access_upsell", l.CLIPS_GO_LIVE_PREMIUM_EARLY_ACCESS_ROADBLOCK_UPSELL = "clips_go_live_premium_early_access_roadblock_upsell", (o = R || (R = {}))[o.PREMIUM_TIER_1 = 1] = "PREMIUM_TIER_1", o[o.PREMIUM_TIER_2 = 2] = "PREMIUM_TIER_2", o[o.GUILD_BOOST = 4] = "GUILD_BOOST", o[o.PREMIUM_TIER_0 = 8] = "PREMIUM_TIER_0";
            let eA = Object.freeze({
                    [m.TIER_0]: R.PREMIUM_TIER_0,
                    [m.TIER_1]: R.PREMIUM_TIER_1,
                    [m.TIER_2]: R.PREMIUM_TIER_2,
                    [m.GUILD]: R.GUILD_BOOST
                }),
                eC = w.duration(30, "days"),
                eR = 52428800,
                eN = {
                    [k.BoostedGuildTiers.NONE]: 5,
                    [k.BoostedGuildTiers.TIER_1]: 10,
                    [k.BoostedGuildTiers.TIER_2]: 15,
                    [k.BoostedGuildTiers.TIER_3]: 30
                },
                ev = {
                    [k.BoostedGuildTiers.NONE]: eN[k.BoostedGuildTiers.NONE],
                    [k.BoostedGuildTiers.TIER_1]: eN[k.BoostedGuildTiers.NONE] + eN[k.BoostedGuildTiers.TIER_1],
                    [k.BoostedGuildTiers.TIER_2]: eN[k.BoostedGuildTiers.NONE] + eN[k.BoostedGuildTiers.TIER_1] + eN[k.BoostedGuildTiers.TIER_2],
                    [k.BoostedGuildTiers.TIER_3]: eN[k.BoostedGuildTiers.NONE] + eN[k.BoostedGuildTiers.TIER_1] + eN[k.BoostedGuildTiers.TIER_2] + eN[k.BoostedGuildTiers.TIER_3]
                },
                eO = {
                    [k.BoostedGuildTiers.NONE]: 8,
                    [k.BoostedGuildTiers.TIER_1]: 24,
                    [k.BoostedGuildTiers.TIER_2]: 36,
                    [k.BoostedGuildTiers.TIER_3]: 48
                },
                eD = Object.freeze({
                    [k.BoostedGuildTiers.NONE]: {
                        features: [],
                        limits: {
                            emoji: F.EMOJI_MAX_SLOTS,
                            bitrate: k.BITRATE_MAX,
                            fileSize: k.MAX_ATTACHMENT_SIZE,
                            screenShareQualityFramerate: 30,
                            screenShareQualityResolution: "720p",
                            soundboardSounds: eO[k.BoostedGuildTiers.NONE],
                            maxConcurrentActivities: 2,
                            stickers: ev[k.BoostedGuildTiers.NONE],
                            stageVideoUsers: k.MAX_STAGE_VIDEO_USER_LIMIT_TIER01
                        }
                    },
                    [k.BoostedGuildTiers.TIER_1]: {
                        features: [k.GuildFeatures.INVITE_SPLASH, k.GuildFeatures.ANIMATED_ICON],
                        limits: {
                            emoji: 100,
                            bitrate: 128e3,
                            fileSize: k.MAX_ATTACHMENT_SIZE,
                            screenShareQualityFramerate: 60,
                            screenShareQualityResolution: "720p",
                            soundboardSounds: eO[k.BoostedGuildTiers.TIER_1],
                            maxConcurrentActivities: 3,
                            stickers: ev[k.BoostedGuildTiers.TIER_1],
                            stageVideoUsers: k.MAX_STAGE_VIDEO_USER_LIMIT_TIER01
                        }
                    },
                    [k.BoostedGuildTiers.TIER_2]: {
                        features: [k.GuildFeatures.INVITE_SPLASH, k.GuildFeatures.ANIMATED_ICON, k.GuildFeatures.BANNER, k.GuildFeatures.ROLE_ICONS],
                        limits: {
                            emoji: 150,
                            bitrate: 256e3,
                            fileSize: 52428800,
                            screenShareQualityFramerate: 60,
                            screenShareQualityResolution: "1080p",
                            soundboardSounds: eO[k.BoostedGuildTiers.TIER_2],
                            maxConcurrentActivities: 5,
                            stickers: ev[k.BoostedGuildTiers.TIER_2],
                            stageVideoUsers: k.MAX_STAGE_VIDEO_USER_LIMIT_TIER2
                        }
                    },
                    [k.BoostedGuildTiers.TIER_3]: {
                        features: [k.GuildFeatures.INVITE_SPLASH, k.GuildFeatures.ANIMATED_ICON, k.GuildFeatures.BANNER, k.GuildFeatures.ANIMATED_BANNER, k.GuildFeatures.VANITY_URL, k.GuildFeatures.ROLE_ICONS],
                        limits: {
                            emoji: 250,
                            bitrate: 384e3,
                            fileSize: 104857600,
                            screenShareQualityFramerate: 60,
                            screenShareQualityResolution: "1080p",
                            soundboardSounds: eO[k.BoostedGuildTiers.TIER_3],
                            maxConcurrentActivities: Number.MAX_SAFE_INTEGER,
                            stickers: ev[k.BoostedGuildTiers.TIER_3],
                            stageVideoUsers: k.MAX_STAGE_VIDEO_USER_LIMIT_TIER3
                        }
                    }
                }),
                eL = [g.PREMIUM_MONTH_TIER_0, g.PREMIUM_YEAR_TIER_0, g.PREMIUM_MONTH_TIER_1, g.PREMIUM_YEAR_TIER_1, g.PREMIUM_MONTH_TIER_2, g.PREMIUM_3_MONTH_TIER_2, g.PREMIUM_6_MONTH_TIER_2, g.PREMIUM_YEAR_TIER_2];
            (u = N || (N = {})).SOUNDBOARD_PLAY = "soundboard play", u.PROFILE_THEME_COLOR = "profile_theme_color", u.PROFILE_BANNER = "profile_banner", u.ANIMATED_AVATAR = "animated_avatar", u.AVATAR_DECORATION = "avatar_decoration", u.CLIENT_THEME = "client_theme", u.SHARED_CANVAS = "shared_canvas", u.PROFILE_EFFECT = "profile_effect", (c = v || (v = {})).FREE = "free", c.PREMIUM_STANDARD = "premium-standard";
            let eM = {
                [g.PREMIUM_YEAR_TIER_0]: 16,
                [g.PREMIUM_YEAR_TIER_1]: 16,
                [g.PREMIUM_YEAR_TIER_2]: 16,
                [g.PREMIUM_6_MONTH_TIER_2]: 8,
                [g.PREMIUM_3_MONTH_TIER_2]: 5
            };
            (d = O || (O = {})).HIGH_STREAMING_QUALITY = "high_streaming_quality", d.MID_STREAMING_QUALITY = "mid_streaming_quality";
            let eP = Object.freeze({
                [O.HIGH_STREAMING_QUALITY]: I.TIER_2,
                [O.MID_STREAMING_QUALITY]: I.TIER_1
            });
            (_ = D || (D = {}))[_.UserSettings = 0] = "UserSettings", _[_.ApplicationStoreHome = 1] = "ApplicationStoreHome", (E = L || (L = {})).USER_NOT_VERIFIED = "user_not_verified", E.NO_CODE_BODY = "no_code_body", E.NO_PROMOTION = "no_promotion", E.CODE_CLAIMED = "code_claimed", E.EXISTING_SUBSCRIBER = "existing_subscriber", E.PREVIOUS_SUBSCRIBER = "previous_subscriber", E.BLOCKED_PAYMENT = "blocked_payment";
            let eb = Object.freeze({
                    [I.TIER_0]: {
                        fileSize: eR
                    },
                    [I.TIER_1]: {
                        fileSize: 52428800
                    },
                    [I.TIER_2]: {
                        fileSize: 524288e3
                    }
                }),
                ey = Object.freeze({
                    PROFILE_CUSTOMIZATION: x.DismissibleContent.NITRODUCTION_STEP_PROFILE_CUSTOMIZATION,
                    BOOSTING: x.DismissibleContent.NITRODUCTION_STEP_BOOSTING,
                    CUSTOM_EMOJI: x.DismissibleContent.NITRODUCTION_STEP_CUSTOM_EMOJI
                });
            (f = M || (M = {}))[f.PROFILE_CUSTOMIZATION_AVATAR = 0] = "PROFILE_CUSTOMIZATION_AVATAR", f[f.PROFILE_CUSTOMIZATION_AVATAR_DECORATIONS = 1] = "PROFILE_CUSTOMIZATION_AVATAR_DECORATIONS", f[f.PROFILE_CUSTOMIZATION_BANNER = 2] = "PROFILE_CUSTOMIZATION_BANNER", f[f.PROFILE_CUSTOMIZATION_THEME = 3] = "PROFILE_CUSTOMIZATION_THEME", f[f.PROFILE_CUSTOMIZATION_GUILD_PROFILES = 4] = "PROFILE_CUSTOMIZATION_GUILD_PROFILES", f[f.BOOSTING_GUILD_MENU_ITEM = 5] = "BOOSTING_GUILD_MENU_ITEM", f[f.BOOSTING_GUILD_BANNER = 6] = "BOOSTING_GUILD_BANNER", f[f.CUSTOM_EMOJI_GENERAL = 7] = "CUSTOM_EMOJI_GENERAL", f[f.CUSTOM_EMOJI_TRY_IT_OUT = 8] = "CUSTOM_EMOJI_TRY_IT_OUT";
            let eU = Object.freeze({
                    [ey.PROFILE_CUSTOMIZATION]: [M.PROFILE_CUSTOMIZATION_AVATAR, M.PROFILE_CUSTOMIZATION_AVATAR_DECORATIONS, M.PROFILE_CUSTOMIZATION_BANNER, M.PROFILE_CUSTOMIZATION_THEME, M.PROFILE_CUSTOMIZATION_GUILD_PROFILES],
                    [ey.BOOSTING]: [M.BOOSTING_GUILD_MENU_ITEM, M.BOOSTING_GUILD_BANNER],
                    [ey.CUSTOM_EMOJI]: [M.CUSTOM_EMOJI_GENERAL, M.CUSTOM_EMOJI_TRY_IT_OUT]
                }),
                eG = Object.freeze({
                    [M.PROFILE_CUSTOMIZATION_AVATAR]: ey.PROFILE_CUSTOMIZATION,
                    [M.PROFILE_CUSTOMIZATION_AVATAR_DECORATIONS]: ey.PROFILE_CUSTOMIZATION,
                    [M.PROFILE_CUSTOMIZATION_BANNER]: ey.PROFILE_CUSTOMIZATION,
                    [M.PROFILE_CUSTOMIZATION_THEME]: ey.PROFILE_CUSTOMIZATION,
                    [M.PROFILE_CUSTOMIZATION_GUILD_PROFILES]: ey.PROFILE_CUSTOMIZATION,
                    [M.BOOSTING_GUILD_MENU_ITEM]: ey.BOOSTING,
                    [M.BOOSTING_GUILD_BANNER]: ey.BOOSTING,
                    [M.CUSTOM_EMOJI_GENERAL]: ey.CUSTOM_EMOJI,
                    [M.CUSTOM_EMOJI_TRY_IT_OUT]: ey.CUSTOM_EMOJI
                }),
                ew = Object.freeze([ey.PROFILE_CUSTOMIZATION, ey.BOOSTING, ey.CUSTOM_EMOJI]);
            (p = P || (P = {})).EXPLORE_ALL_PERKS_CLICKED = "explore_all_perks_clicked", p.HELPER_COLLAPSED = "helper_collapsed", p.HELPER_UNCOLLAPSED = "helper_uncollapsed", p.UNLOCK_EMOJI_CLICKED = "unlock_emoji_clicked", p.CUSTOM_PROFILES_CLICKED = "custom_profiles_clicked", p.SERVER_BOOSTS_CLICKED = "server_boosts_clicked", p.HELPER_DISMISSED = "premium_feature_helper_dismissed", p.HELPER_RENDERED = "premium_feature_helper_rendered", (h = b || (b = {})).EMOJI_TUTORIAL_STARTED = "emoji_tutorial_started", h.EMOJI_INTRO_VIEWED = "emoji_intro_viewed", h.EMOJI_PROMPT_VIEWED = "emoji_prompt_viewed", h.CUSTOM_PROFILE_TUTORIAL_STARTED = "custom_profile_tutorial_started", h.CUSTOM_PROFILE_AVATAR_INTRO_VIEWED = "custom_profile_avatar_intro_viewed", h.CUSTOM_PROFILE_AVATAR_DECORATIONS_VIEWED = "custom_profile_avatar_decorations_viewed", h.CUSTOM_PROFILE_BANNER_INTRO_VIEWED = "custom_profile_banner_intro_viewed", h.CUSTOM_PROFILE_THEME_INTRO_VIEWED = "custom_profile_theme_intro_viewed", h.SERVER_PROFILE_INTRO_VIEWED = "server_profile_intro_viewed", h.SERVER_BOOST_TUTORIAL_STARTED = "server_boost_tutorial_started", h.BOOST_INTRO_VIEWED = "boost_intro_viewed", h.BOOST_PROMPT_VIEWED = "boost_prompt_viewed";
            let ex = Object.freeze({
                    [ey.PROFILE_CUSTOMIZATION]: b.CUSTOM_PROFILE_TUTORIAL_STARTED,
                    [ey.BOOSTING]: b.SERVER_BOOST_TUTORIAL_STARTED,
                    [ey.CUSTOM_EMOJI]: b.EMOJI_TUTORIAL_STARTED
                }),
                ek = Object.freeze({
                    [M.PROFILE_CUSTOMIZATION_AVATAR]: b.CUSTOM_PROFILE_AVATAR_INTRO_VIEWED,
                    [M.PROFILE_CUSTOMIZATION_AVATAR_DECORATIONS]: b.CUSTOM_PROFILE_AVATAR_DECORATIONS_VIEWED,
                    [M.PROFILE_CUSTOMIZATION_BANNER]: b.CUSTOM_PROFILE_BANNER_INTRO_VIEWED,
                    [M.PROFILE_CUSTOMIZATION_THEME]: b.CUSTOM_PROFILE_THEME_INTRO_VIEWED,
                    [M.PROFILE_CUSTOMIZATION_GUILD_PROFILES]: b.SERVER_PROFILE_INTRO_VIEWED,
                    [M.BOOSTING_GUILD_MENU_ITEM]: b.BOOST_INTRO_VIEWED,
                    [M.BOOSTING_GUILD_BANNER]: b.BOOST_PROMPT_VIEWED,
                    [M.CUSTOM_EMOJI_GENERAL]: b.EMOJI_INTRO_VIEWED,
                    [M.CUSTOM_EMOJI_TRY_IT_OUT]: b.EMOJI_PROMPT_VIEWED
                });
            (S = y || (y = {})).BOOST = "boost", S.DISMISS = "dismiss", (T = U || (U = {})).BADGE_TOOLTIP_VIEWED = "share_nitro_bagde_tooltip_viewed", T.BADGE_CLICKED = "share_nitro_badge_clicked", T.FLOW_STARTED = "share_nitro_flow_started", T.FLOW_COMPLETED = "share_nitro_flow_completed";
            let eF = new Set(["PL", "TR"])
        },
        45120: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            class i {
                constructor(e, t, n) {
                    this.name = e, this.description = n, this.getFeatureValue = t, Object.defineProperty(this, "getFeatureValue", {
                        value: t,
                        configurable: !1,
                        writable: !1
                    })
                }
            }
        },
        240577: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getBasePlanIdForSubscriptionItems: function() {
                    return r
                }
            });
            var i = n("646718");

            function r(e, t, n) {
                let r = e.find(e => {
                    let t = i.SubscriptionPlanInfo[e.planId];
                    return null != t && null != t.premiumType
                });
                if (null == r) {
                    if (e.length > 0) {
                        let r = i.SubscriptionPlanInfo[e[0].planId];
                        t = r.interval, n = r.intervalCount
                    }
                    return function(e) {
                        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            n = Object.keys(i.SubscriptionPlanInfo).find(n => {
                                let r = i.SubscriptionPlanInfo[n];
                                return null != r && r.skuId === i.PremiumSubscriptionSKUs.NONE && r.interval === e && r.intervalCount === t
                            });
                        return null != n ? n : i.SubscriptionPlans.NONE_MONTH
                    }(t, n)
                }
                return r.planId
            }
        },
        643619: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                coalesceInvoiceItems: function() {
                    return s
                },
                createInvoiceItemFromServer: function() {
                    return a
                }
            });
            var i = n("427964"),
                r = n.n(i);

            function s(e) {
                let t = (e, t) => e.subscriptionPlanId === t.subscriptionPlanId && e.subscriptionPlanPrice === t.subscriptionPlanPrice && e.amount === t.amount && r.isEqual(e.discounts, t.discounts),
                    n = [],
                    i = new Set;
                e.map(e => {
                    for (let r of n)
                        if (t(r, e)) {
                            i.add(r.subscriptionPlanId), r.quantity += e.quantity;
                            return
                        } n.push({
                        ...e
                    })
                });
                let s = n.map(e => {
                    let t = {
                        ...e
                    };
                    return i.has(e.subscriptionPlanId) && (t.amount = t.amount * t.quantity, t.discounts = t.discounts.map(e => ({
                        ...e,
                        amount: e.amount * t.quantity
                    }))), t
                });
                return s
            }

            function a(e) {
                return {
                    id: e.id,
                    subscriptionPlanId: e.subscription_plan_id,
                    subscriptionPlanPrice: e.subscription_plan_price,
                    amount: e.amount,
                    quantity: e.quantity,
                    discounts: e.discounts
                }
            }
        },
        432155: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ANIMATED_EMOJIS: function() {
                    return d
                },
                EMOJIS_EVERYWHERE: function() {
                    return _
                },
                STICKERS_EVERYWHERE: function() {
                    return E
                },
                SOUNDBOARD_EVERYWHERE: function() {
                    return f
                },
                CUSTOM_CALL_SOUNDS: function() {
                    return p
                },
                ANIMATED_AVATAR: function() {
                    return h
                },
                CUSTOM_DISCRIMINATOR: function() {
                    return S
                },
                PREMIUM_GUILD_MEMBER_PROFILE: function() {
                    return T
                },
                PROFILE_BADGES: function() {
                    return I
                },
                PROFILE_PREMIUM_FEATURES: function() {
                    return m
                },
                COLLECTIBLES: function() {
                    return g
                },
                APP_ICONS: function() {
                    return A
                },
                CLIENT_THEMES: function() {
                    return C
                },
                BOOST_DISCOUNT: function() {
                    return R
                },
                FREE_BOOSTS: function() {
                    return N
                },
                HOST_PREMIUM_ACTIVITIES: function() {
                    return v
                },
                STREAM_MID_QUALITY: function() {
                    return O
                },
                STREAM_HIGH_QUALITY: function() {
                    return D
                },
                FANCY_VOICE_CHANNEL_REACTIONS: function() {
                    return L
                },
                INSTALL_PREMIUM_APPLICATIONS: function() {
                    return M
                },
                REDEEM_PREMIUM_PERKS: function() {
                    return P
                },
                VIDEO_FILTER_ASSETS: function() {
                    return b
                },
                INCREASED_GUILD_LIMIT: function() {
                    return y
                },
                INCREASED_MESSAGE_LENGTH: function() {
                    return U
                },
                INCREASED_VIDEO_UPLOAD_QUALITY: function() {
                    return G
                },
                UPLOAD_LARGE_FILES: function() {
                    return w
                },
                canUserUse: function() {
                    return k
                }
            });
            var i = n("605250"),
                r = n("886551"),
                s = n("45120"),
                a = n("715757"),
                l = n("646718");
            let o = new i.default("ProductCatalog.tsx"),
                u = Object.freeze({
                    [l.PremiumTypes.TIER_0]: l.PremiumSubscriptionSKUs.TIER_0,
                    [l.PremiumTypes.TIER_1]: l.PremiumSubscriptionSKUs.TIER_1,
                    [l.PremiumTypes.TIER_2]: l.PremiumSubscriptionSKUs.TIER_2
                });
            class c extends s.default {
                constructor(e, t) {
                    super(e, e => (function(e, t) {
                        if (null == t || null == t.premiumType) return !1;
                        try {
                            let n = u[t.premiumType];
                            if (null == n) return o.warn("Cannot find the corresponding SKU to the user's premium type ".concat(t.premiumType)), !1;
                            let i = x[n];
                            if (null == i) return o.warn("Cannot find the corresponding product catalog entry to the user's SKU ".concat(n, " and premium type ").concat(t.premiumType)), !1;
                            return i.skuFeatures.includes(e)
                        } catch (e) {
                            var n;
                            o.error("Error while retrieving user's feature access: ".concat(null !== (n = e.message) && void 0 !== n ? n : JSON.stringify(e)))
                        }
                        return !1
                    })(this, e), t)
                }
            }
            let d = new c("animatedEmojis"),
                _ = new c("emojisEverywhere"),
                E = new c("stickersEverywhere"),
                f = new c("soundboardEverywhere"),
                p = new c("customCallSounds"),
                h = new c("animatedAvatar"),
                S = new c("customDiscriminator"),
                T = new c("premiumGuildMemberProfile"),
                I = new c("profileBadges"),
                m = new c("profilePremiumFeatures", "custom banner and avatar decoration"),
                g = new c("collectibles"),
                A = new c("appIcons"),
                C = new c("clientThemes"),
                R = new c("boostDiscount"),
                N = new c("freeBoosts"),
                v = new c("hostPremiumActivities"),
                O = new c("streamMidQuality"),
                D = new c("streamHighQuality"),
                L = new c("fancyVoiceChannelReactions"),
                M = new c("installPremiumApplications"),
                P = new c("redeemPremiumPerks"),
                b = new c("videoFilterAssets");
            new s.default("increasedFileUploadSize", r.getUserMaxFileSize);
            let y = new c("increasedGuildLimit"),
                U = new c("increasedMessageLength"),
                G = new c("increasedVideoUploadQuality"),
                w = new c("uploadLargeFiles"),
                x = Object.freeze({
                    [l.PremiumSubscriptionSKUs.TIER_0]: new a.default(l.PremiumSubscriptionSKUs.TIER_0, [d, _, E, I, b, G, w, A]),
                    [l.PremiumSubscriptionSKUs.TIER_1]: new a.default(l.PremiumSubscriptionSKUs.TIER_1, [d, _, h, S, I, R, O, L, G, w, A]),
                    [l.PremiumSubscriptionSKUs.TIER_2]: new a.default(l.PremiumSubscriptionSKUs.TIER_2, [d, _, E, f, p, h, S, T, I, m, C, R, N, v, O, D, L, M, P, b, y, U, G, w, A, g])
                });

            function k(e, t) {
                return e.getFeatureValue(t)
            }
        },
        715757: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            class i {
                constructor(e, t) {
                    this.skuId = e, this.skuFeatures = t
                }
            }
        },
        193302: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2023-10_dcf_holdout",
                label: "DCF Holdout",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Users will only see DCs that bypass the holdout",
                    config: {
                        enabled: !0
                    }
                }]
            });
            var s = r
        },
        669073: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TrialRedemptionDefaultPlanExperiment: function() {
                    return r
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2023-03_trial_redemption_default_to_monthly_plan",
                label: "Trial Redemption Default To Monthly Plan",
                defaultConfig: {
                    defaultToMonthlyPlan: !1
                },
                treatments: [{
                    id: 1,
                    label: "Set default plan to monthly plan",
                    config: {
                        defaultToMonthlyPlan: !0
                    }
                }]
            })
        },
        946028: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createPrivateChannelIntegration: function() {
                    return r
                }
            });
            var i = n("653047");

            function r(e) {
                return {
                    ...e,
                    application: i.default.createFromServer(e.application)
                }
            }
        },
        208127: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isReadStateStaffExperimentEnabled: function() {
                    return s
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2022-1_read_state_staff",
                label: "Read State Staff",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Refresh after enabling",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function s() {
                return r.getCurrentConfig({
                    location: "8fcc83_1"
                }, {
                    autoTrackExposure: !1
                }).enabled
            }
        },
        877275: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i, r = n("648564");
            (i || (i = {})).INVITE_ACCEPT = "invite_accept";
            var s = i;
            r.OpenThreadAnalyticsLocations.EMBED, r.OpenThreadAnalyticsLocations.FORUM, i.INVITE_ACCEPT
        },
        393414: function(e, t, n) {
            "use strict";
            let i, r, s;
            n.r(t), n.d(t, {
                transitionTo: function() {
                    return h
                },
                transitionToGuild: function() {
                    return S
                },
                replaceWith: function() {
                    return T
                },
                getHistory: function() {
                    return I
                },
                getLastRouteChangeSource: function() {
                    return m
                },
                getLastRouteChangeSourceLocationStack: function() {
                    return g
                },
                isValidFingerprintRoute: function() {
                    return A
                },
                getFingerprintLocation: function() {
                    return C
                },
                hasNavigated: function() {
                    return R
                },
                back: function() {
                    return N
                },
                forward: function() {
                    return v
                }
            });
            var a = n("710431"),
                l = n("605250"),
                o = n("659500");
            n("877275");
            var u = n("49111");
            let c = new l.default("Routing/Utils"),
                d = [u.RelativeMarketingURLs.DEVELOPER_PORTAL];
            i = __OVERLAY__ ? (0, a.createMemoryHistory)() : (0, a.createBrowserHistory)();
            let _ = !1,
                E = i.listen((e, t) => {
                    "REPLACE" !== t && (_ = !0, E())
                });

            function f() {
                return !o.ComponentDispatch.hasSubscribers(u.ComponentActions.MODAL_CLOSE) && (n("144747").default.close(), !0)
            }

            function p(e, t) {
                return !!("string" == typeof e && d.some(t => e.startsWith(t))) && (c.log("".concat(t, " - route to external path ").concat(e)), window.dispatchEvent(new Event("beforeunload")), window.location[t](e), !0)
            }

            function h(e, t, n, a) {
                !p(e, "assign") && (c.log("transitionTo - Transitioning to ".concat(e)), null != n && (null == t ? t = {
                    source: n
                } : t.source = n), null == t ? i.push(e) : i.push({
                    pathname: e,
                    ...t
                }), r = n, s = a)
            }

            function S(e, t, n, i, r) {
                c.log("transitionToGuild - Transitioning to ".concat(JSON.stringify({
                    guildId: e,
                    channelId: t,
                    messageId: n
                }))), h(u.Routes.CHANNEL(e, t, n), null != r ? r : null, i)
            }

            function T(e, t, n) {
                !p(e, "replace") && (c.log("Replacing route with ".concat(e)), "string" == typeof e ? i.replace(e, t) : i.replace(e), r = n)
            }

            function I() {
                return i
            }

            function m() {
                return r
            }

            function g() {
                return s
            }

            function A(e) {
                if (null == e) {
                    var t;
                    e = null !== (t = i.location.pathname) && void 0 !== t ? t : ""
                }
                return !e.startsWith(u.Routes.HANDOFF) && !0
            }

            function C(e) {
                if (null == e) {
                    var t;
                    e = null !== (t = i.location.pathname) && void 0 !== t ? t : ""
                }
                if (e.startsWith(u.Routes.LOGIN)) return u.PageAnalyticsLocations.LOGIN;
                if (e.startsWith(u.Routes.REGISTER)) return u.PageAnalyticsLocations.REGISTER;
                if (e.startsWith(u.Routes.INVITE(""))) return u.PageAnalyticsLocations.INVITE;
                else if (e.startsWith(u.Routes.VERIFY)) return u.PageAnalyticsLocations.VERIFY;
                else if (e.startsWith(u.Routes.DISABLE_EMAIL_NOTIFICATIONS)) return u.PageAnalyticsLocations.DISABLE_EMAIL_NOTIFICATIONS;
                else if (e.startsWith(u.Routes.DISABLE_SERVER_HIGHLIGHT_NOTIFICATIONS)) return u.PageAnalyticsLocations.DISABLE_SERVER_HIGHLIGHT_NOTIFICATIONS;
                else if (e.startsWith(u.Routes.REJECT_IP)) return u.PageAnalyticsLocations.REJECT_IP;
                else if (e.startsWith(u.Routes.REJECT_MFA)) return u.PageAnalyticsLocations.REJECT_MFA;
                else if (e.startsWith(u.Routes.AUTHORIZE_IP)) return u.PageAnalyticsLocations.AUTHORIZE_IP;
                else if (e.startsWith(u.Routes.AUTHORIZE_PAYMENT)) return u.PageAnalyticsLocations.AUTHORIZE_PAYMENT;
                else if (e.startsWith(u.Routes.RESET)) return u.PageAnalyticsLocations.RESET;
                else if (e.startsWith(u.Routes.REPORT)) return u.PageAnalyticsLocations.REPORT;
                return e
            }

            function R() {
                return _
            }

            function N() {
                f() && (r = null, i.goBack())
            }

            function v() {
                f() && (r = null, i.goForward())
            }
        },
        239380: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getChannelIdForGuildTransition: function() {
                    return f
                },
                transitionToGuild: function() {
                    return p
                }
            });
            var i = n("650033"),
                r = n("471706"),
                s = n("290886"),
                a = n("21121"),
                l = n("934306"),
                o = n("42203"),
                u = n("923959"),
                c = n("18494"),
                d = n("393414"),
                _ = n("49111"),
                E = n("724210");

            function f(e) {
                var t;
                let n = c.default.getChannelId(e),
                    i = null === (t = u.default.getDefaultChannel(e)) || void 0 === t ? void 0 : t.id;
                if (n === E.StaticChannelRoute.GUILD_ONBOARDING && !r.default.shouldShowOnboarding(e) || n === E.StaticChannelRoute.GUILD_HOME && !(0, s.canSeeOnboardingHome)(e)) return i;
                let a = o.default.getChannel(n);
                return null == a || a.isGuildVocal() ? i : n
            }

            function p(e, t) {
                let n = !(0, a.isInMainTabsExperiment)() || (0, l.shouldHandleNewPanelsRoute)(e) || i.default.get("navigate_to_last_channel") ? f(e) : void 0;
                (0, d.transitionTo)(_.Routes.CHANNEL(e, n), {
                    navigationReplace: (0, l.shouldHandleNewPanelsRoute)(e) || i.default.get("navigate_to_last_channel"),
                    ...t
                })
            }
        },
        861309: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var i = n("282948").default
        },
        648030: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var i = n("161179"),
                r = n.n(i),
                s = n("427964"),
                a = n.n(s),
                l = n("599110"),
                o = n("861309"),
                u = n("694352"),
                c = n("846678"),
                d = n("49111");
            let _ = "RPC_STORE_WAIT",
                E = [];
            class f {
                registerTransport(e) {
                    e.on("connect", e => this.handleConnect(e)), e.on("request", (e, t) => this.handleRequest(e, t)), e.on("disconnect", (e, t) => this.handleDisconnect(e, t))
                }
                handleConnect(e) {
                    this.sockets.add(e), this.onConnect(e);
                    let t = {
                        v: e.version,
                        config: {
                            cdn_host: window.GLOBAL_ENV.CDN_HOST,
                            api_endpoint: window.GLOBAL_ENV.API_ENDPOINT,
                            environment: "production"
                        }
                    };
                    if (e.transport === d.TransportTypes.IPC) {
                        let n = this.getCurrentUser();
                        if (null == n) {
                            e.close(d.RPCCloseCodes.CLOSE_NORMAL, "User logged out");
                            return
                        }
                        t.user = (0, u.default)(n)
                    }
                    this.dispatch(e, null, d.RPCCommands.DISPATCH, d.RPCEvents.READY, t)
                }
                handleDisconnect(e, t) {
                    this.removeSubscriptions(e), this.sockets.delete(e), this.onDisconnect(e, t)
                }
                handleRequest(e, t) {
                    var n;
                    new Promise(n => {
                        if (null == t.nonce || "" === t.nonce) throw new o.default(d.RPCErrors.INVALID_PAYLOAD, "Payload requires a nonce");
                        let i = t.cmd,
                            r = this.commands[i];
                        if (null == r) throw new o.default(d.RPCErrors.INVALID_COMMAND, "Invalid command: ".concat(t.cmd));
                        if (!(0, c.default)(e.authorization.scopes, r.scope)) throw new o.default(d.RPCErrors.INVALID_PERMISSIONS, "Not authenticated or invalid scope");
                        n(r)
                    }).then(e => new Promise(async (n, i) => {
                        if (null != e.validation) {
                            let s = await this.getJoi();
                            r(null != e.validation, "command.validation must not be null"), s.validate(t.args, e.validation(s), {
                                convert: !1
                            }, t => {
                                if (null != t) {
                                    i(new o.default(d.RPCErrors.INVALID_PAYLOAD, t.message));
                                    return
                                }
                                n(e)
                            })
                        } else n(e)
                    })).then(i => i.handler({
                        socket: e,
                        server: this,
                        cmd: t.cmd,
                        evt: t.evt,
                        nonce: t.nonce,
                        args: null !== (n = t.args) && void 0 !== n ? n : {},
                        isSocketConnected: () => this.sockets.has(e)
                    })).then(n => this.dispatch(e, t.nonce, t.cmd, null, n)).catch(n => {
                        let {
                            code: i,
                            message: r
                        } = n;
                        return this.error(e, t.nonce, t.cmd, i, r)
                    })
                }
                setCommandHandler(e, t) {
                    this.commands[e] = t
                }
                setEventHandler(e, t) {
                    this.events[e] = t
                }
                dispatch(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : d.RPCCommands.DISPATCH,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                        r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
                    e.send({
                        cmd: n,
                        data: r,
                        evt: i,
                        nonce: t
                    })
                }
                error(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : d.RPCCommands.DISPATCH,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : d.RPCErrors.UNKNOWN_ERROR,
                        r = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "Unknown Error";
                    l.default.track(d.AnalyticEvents.RPC_SERVER_ERROR_CAUGHT, {
                        command: n,
                        code: i,
                        message: r
                    }), this.dispatch(e, t, n, d.RPCEvents.ERROR, {
                        code: i,
                        message: r
                    })
                }
                isSubscribed(e, t) {
                    return void 0 !== this.subscriptions.find(n => n.socket.application.id === e && n.evt === t)
                }
                getSubscription(e, t, n) {
                    return this.subscriptions.find(i => i.socket === e && i.evt === t && a.isEqual(i.args, n))
                }
                addSubscription(e, t, n) {
                    let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                        r = this.dispatch.bind(this, e, null, d.RPCCommands.DISPATCH, t);
                    null == this.getSubscription(e, t, n) && this.subscriptions.push({
                        update: i,
                        dispatch: r,
                        prevState: i ? i({
                            prevState: null,
                            dispatch: r
                        }) : null,
                        socket: e,
                        evt: t,
                        args: n
                    })
                }
                removeSubscription(e, t, n) {
                    a.remove(this.subscriptions, i => i.socket === e && i.evt === t && a.isEqual(i.args, n))
                }
                removeSubscriptions(e) {
                    a.remove(this.subscriptions, t => t.socket === e)
                }
                dispatchToSubscriptions(e, t, n, i) {
                    var r;
                    if (!(null != i && "" !== i && (r = i, E.includes(r) || (E.unshift(r), E.splice(50), 0)))) this.subscriptions.forEach(i => {
                        var r, s, l;
                        if (i.evt === e) {
                            if (("function" != typeof t || t(i)) && ("object" != typeof t || (s = t, l = null !== (r = i.args) && void 0 !== r ? r : {}, a.isEqual(s, a.pick(l, Object.keys(s)))))) this.dispatch(i.socket, null, d.RPCCommands.DISPATCH, i.evt, n)
                        }
                    })
                }
                updateSubscriptions() {
                    this.subscriptions.forEach(e => {
                        e.update && (e.prevState = e.update(e))
                    })
                }
                storeWait(e, t, n) {
                    let i = t();
                    if (i || 0 === n) return Promise.resolve(i);
                    let r = a.uniqueId(),
                        s = () => this.removeSubscription(e, _, {
                            uniqueId: r
                        });
                    return new Promise((i, a) => {
                        let l = setTimeout(() => {
                            s(), a(Error("timeout"))
                        }, 1e3 * n);
                        this.addSubscription(e, _, {
                            uniqueId: r
                        }, () => {
                            let e = t();
                            e && (clearTimeout(l), i(e))
                        })
                    }).then(e => (s(), e))
                }
                constructor(e) {
                    this.getCurrentUser = () => null, this.onConnect = () => {}, this.onDisconnect = () => {}, this.events = {}, this.commands = {}, this.sockets = new Set, this.subscriptions = [], this.getJoi = e
                }
            }
        },
        694352: function(e, t, n) {
            "use strict";

            function i(e) {
                let {
                    id: t,
                    username: n,
                    discriminator: i,
                    globalName: r,
                    avatar: s,
                    avatarDecoration: a,
                    bot: l,
                    flags: o,
                    premiumType: u
                } = e;
                return {
                    id: t,
                    username: n,
                    discriminator: i,
                    global_name: r,
                    avatar: s,
                    avatar_decoration_data: null != a ? {
                        asset: a.asset,
                        sku_id: a.skuId
                    } : null,
                    bot: l,
                    flags: o,
                    premium_type: null != u ? u : 0
                }
            }
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            })
        },
        846678: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("49111");

            function r(e, t) {
                if (null == t) return !0;
                if ("string" == typeof t) return e.includes(t);
                if ("object" != typeof t) return !1;
                let n = t[i.RPC_SCOPE_CONFIG.ANY],
                    r = t[i.RPC_SCOPE_CONFIG.ALL];
                return !!(Array.isArray(n) && n.some(t => e.includes(t)) || Array.isArray(r) && r.every(t => e.includes(t))) || !1
            }
        },
        261131: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("269936"),
                r = n("648030");
            let s = async () => {
                let {
                    default: e
                } = await (0, i.importWithRetry)({
                    createPromise: () => n.el("438382").then(n.t.bind(n, "438382", 21)),
                    webpackId: "438382"
                });
                return e
            };
            var a = new r.default(s)
        },
        901946: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2023-08_periodic_voice_stats",
                label: "Periodic Voice Stats",
                defaultConfig: {
                    enableSendingVoiceStats: !1,
                    percentageOfCalls: 0
                },
                treatments: [{
                    id: 1,
                    label: "Enable sending periodic voice stats for 100% of calls",
                    config: {
                        enableSendingVoiceStats: !0,
                        percentageOfCalls: 100
                    }
                }, {
                    id: 2,
                    label: "Enable sending periodic voice stats for 50% of calls",
                    config: {
                        enableSendingVoiceStats: !0,
                        percentageOfCalls: 50
                    }
                }, {
                    id: 3,
                    label: "Enable sending periodic voice stats for 20% of calls",
                    config: {
                        enableSendingVoiceStats: !0,
                        percentageOfCalls: 20
                    }
                }, {
                    id: 4,
                    label: "Enable sending periodic voice stats for 10% of calls",
                    config: {
                        enableSendingVoiceStats: !0,
                        percentageOfCalls: 10
                    }
                }, {
                    id: 5,
                    label: "Enable sending periodic voice stats for 5% of calls",
                    config: {
                        enableSendingVoiceStats: !0,
                        percentageOfCalls: 5
                    }
                }]
            });
            var s = r
        },
        468200: function(e, t, n) {
            "use strict";
            var i, r, s, a;
            n.r(t), n.d(t, {
                MuteUntilSeconds: function() {
                    return i
                },
                SettingsOverrideReasonKeys: function() {
                    return r
                }
            }), (s = i || (i = {}))[s.MINUTES_15 = 900] = "MINUTES_15", s[s.HOURS_1 = 3600] = "HOURS_1", s[s.HOURS_3 = 10800] = "HOURS_3", s[s.HOURS_8 = 28800] = "HOURS_8", s[s.HOURS_24 = 86400] = "HOURS_24", s[s.ALWAYS = -1] = "ALWAYS", (a = r || (r = {})).REDUCED_MOTION = "REDUCED_MOTION", a.REDUCED_MOTION_STICKERS = "REDUCED_MOTION_STICKERS"
        },
        923510: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MODERATE_STAGE_CHANNEL_PERMISSIONS: function() {
                    return s
                },
                STAGE_CHANNEL_DISABLED_PERMISSIONS: function() {
                    return a
                },
                UPDATE_STAGE_CHANNEL_MODERATOR_PERMISSIONS: function() {
                    return l
                },
                JOIN_VOCAL_CHANNEL_PERMISSIONS: function() {
                    return o
                },
                LURKER_STAGE_CHANNEL_PERMISSIONS_ALLOWLIST: function() {
                    return u
                }
            });
            var i = n("754013"),
                r = n("49111");
            let s = i.default.combine(r.Permissions.MANAGE_CHANNELS, r.Permissions.MUTE_MEMBERS, r.Permissions.MOVE_MEMBERS);
            i.default.combine(r.Permissions.MANAGE_CHANNELS, r.Permissions.MANAGE_ROLES);
            let a = new Set([r.Permissions.SPEAK, r.Permissions.REQUEST_TO_SPEAK, r.Permissions.USE_VAD]),
                l = i.default.combine(s, r.Permissions.MANAGE_ROLES),
                o = i.default.combine(r.Permissions.CONNECT, r.Permissions.VIEW_CHANNEL),
                u = i.default.combine(o, r.Permissions.READ_MESSAGE_HISTORY, r.Permissions.REQUEST_TO_SPEAK, r.Permissions.SPEAK, r.Permissions.USE_VAD)
        },
        834052: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("745049");
            let a = {},
                l = {};

            function o(e, t) {
                var n;
                let i = null !== (n = a[e]) && void 0 !== n ? n : {},
                    r = {
                        ...i
                    };
                null == t || t.forEach(e => {
                    l[e.channel_id] = e, r[e.channel_id] = e
                }), a[e] = r
            }

            function u(e) {
                let {
                    instance: t
                } = e;
                o(t.guild_id, [t])
            }

            function c(e, t) {
                var n;
                if (delete l[t], null == e) return;
                let i = null !== (n = a[e]) && void 0 !== n ? n : {},
                    r = {
                        ...i
                    };
                delete r[t], a[e] = r
            }
            class d extends i.default.Store {
                getStageInstanceByChannel(e) {
                    if (null != e) return l[e]
                }
                isLive(e) {
                    return null != this.getStageInstanceByChannel(e)
                }
                isPublic(e) {
                    var t;
                    return (null === (t = this.getStageInstanceByChannel(e)) || void 0 === t ? void 0 : t.privacy_level) === s.GuildScheduledEventPrivacyLevel.PUBLIC
                }
                getStageInstancesByGuild(e) {
                    var t;
                    return null == e ? {} : null !== (t = a[e]) && void 0 !== t ? t : {}
                }
                getAllStageInstances() {
                    return Object.values(l)
                }
            }
            d.displayName = "StageInstanceStore";
            var _ = new d(r.default, {
                CONNECTION_OPEN: function(e) {
                    let {
                        guilds: t
                    } = e;
                    a = {}, l = {}, t.forEach(e => o(e.id, e.stage_instances))
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    o(t.id, t.stage_instances)
                },
                GUILD_DELETE: function(e) {
                    var t;
                    let {
                        guild: n
                    } = e, i = null !== (t = a[n.id]) && void 0 !== t ? t : {};
                    delete a[n.id], Object.keys(i).forEach(e => {
                        delete l[e]
                    })
                },
                STAGE_INSTANCE_CREATE: u,
                STAGE_INSTANCE_UPDATE: u,
                STAGE_INSTANCE_DELETE: function(e) {
                    let {
                        instance: t
                    } = e;
                    c(t.guild_id, t.channel_id)
                },
                CHANNEL_DELETE: function(e) {
                    let {
                        channel: t
                    } = e;
                    c(t.guild_id, t.id)
                },
                LOGOUT: function() {
                    l = {}, a = {}
                }
            })
        },
        559980: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                AMOLEDThemeState: function() {
                    return i
                }
            }), (r = i || (i = {}))[r.HIDDEN = 0] = "HIDDEN", r[r.OFF = 1] = "OFF", r[r.ON = 2] = "ON"
        },
        755624: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("913144"),
                l = n("668597"),
                o = n("233069"),
                u = n("271938");
            let c = {},
                d = new l.default,
                _ = new Set;

            function E(e) {
                c = r(c).reject(t => t.guildId === e).keyBy("threadId").value()
            }

            function f(e) {
                var t;
                null === (t = e.threads) || void 0 === t || t.forEach(p)
            }

            function p(e) {
                o.ALL_CHANNEL_TYPES.has(e.type) && null != e.member && (c[e.id] = {
                    threadId: e.id,
                    guildId: e.guild_id,
                    flags: e.member.flags,
                    muted: e.member.muted,
                    muteConfig: e.member.muteConfig,
                    joinTimestamp: new Date(e.member.joinTimestamp)
                }, h(e.id))
            }

            function h(e) {
                let t = c[e];
                d.clearTimer(e), !0 === t.muted ? ((_ = new Set(_)).add(e), d.setTimer(e, t.muteConfig, () => {
                    c[e].muted = !1, (_ = new Set(_)).delete(e), I.emitChange()
                })) : (_ = new Set(_)).delete(e)
            }

            function S(e) {
                let {
                    guildId: t,
                    members: n
                } = e;
                null != t && null != n && n.forEach(e => {
                    c[e.id] = {
                        threadId: e.id,
                        guildId: t,
                        flags: e.flags,
                        muted: e.muted,
                        muteConfig: e.muteConfig,
                        joinTimestamp: new Date(e.joinTimestamp)
                    }, h(e.id)
                })
            }
            class T extends s.default.Store {
                hasJoined(e) {
                    return e in c
                }
                joinTimestamp(e) {
                    var t;
                    return null === (t = c[e]) || void 0 === t ? void 0 : t.joinTimestamp
                }
                flags(e) {
                    var t;
                    return null === (t = c[e]) || void 0 === t ? void 0 : t.flags
                }
                getInitialOverlayState() {
                    return Object.values(c)
                }
                getMuteConfig(e) {
                    var t;
                    return null === (t = c[e]) || void 0 === t ? void 0 : t.muteConfig
                }
                getMutedThreads() {
                    return _
                }
                isMuted(e) {
                    return _.has(e)
                }
            }
            T.displayName = "JoinedThreadsStore";
            let I = new T(a.default, {
                CONNECTION_OPEN: function(e) {
                    d.reset(), _ = new Set, c = {}, e.guilds.forEach(e => {
                        f(e)
                    })
                },
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        joinedThreads: t
                    } = e;
                    c = r(t).map(e => ({
                        ...e,
                        joinTimestamp: new Date(e.joinTimestamp)
                    })).keyBy("threadId").value()
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    E(t.id), f(t)
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    E(t.id)
                },
                THREAD_CREATE: function(e) {
                    let {
                        channel: t
                    } = e;
                    p(t)
                },
                THREAD_LIST_SYNC: S,
                SEARCH_FINISH: S,
                LOAD_THREADS_SUCCESS: S,
                LOAD_ARCHIVED_THREADS_SUCCESS: S,
                THREAD_DELETE: function(e) {
                    let {
                        channel: t
                    } = e;
                    if (!(t.id in c)) return !1;
                    c = {
                        ...c
                    }, delete c[t.id]
                },
                THREAD_MEMBER_UPDATE: function(e) {
                    if (u.default.getId() !== e.userId) return !1;
                    c[e.id] = {
                        threadId: e.id,
                        guildId: e.guildId,
                        flags: e.flags,
                        muted: e.muted,
                        muteConfig: e.muteConfig,
                        joinTimestamp: new Date(e.joinTimestamp)
                    }, h(e.id)
                },
                THREAD_MEMBER_LOCAL_UPDATE: function(e) {
                    let {
                        id: t,
                        userId: n,
                        guildId: i,
                        isJoining: r
                    } = e;
                    if (u.default.getId() !== n || null === i) return !1;
                    r ? c[t] = {
                        threadId: t,
                        guildId: i,
                        flags: 0,
                        muted: !0,
                        muteConfig: {
                            end_time: void 0
                        },
                        joinTimestamp: new Date
                    } : delete c[t]
                },
                THREAD_MEMBERS_UPDATE: function(e) {
                    var t, n;
                    let i = !1;
                    return (null === (t = e.removedMemberIds) || void 0 === t ? void 0 : t.includes(u.default.getId())) && e.id in c && (c = {
                        ...c
                    }, delete c[e.id], i = !0), null === (n = e.addedMembers) || void 0 === n || n.forEach(t => {
                        t.userId === u.default.getId() && ((c = {
                            ...c
                        })[e.id] = {
                            threadId: e.id,
                            guildId: e.guildId,
                            flags: t.flags,
                            muted: t.muted,
                            muteConfig: t.muteConfig,
                            joinTimestamp: new Date(t.joinTimestamp)
                        }, h(e.id), i = !0)
                    }), i
                }
            });
            var m = I
        },
        526311: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                doesThreadMembersActionAffectMe: function() {
                    return r
                }
            });
            var i = n("271938");

            function r(e) {
                var t, n;
                let r = i.default.getId();
                return null != r && (!!((null === (t = e.removedMemberIds) || void 0 === t ? void 0 : t.includes(r)) || (null === (n = e.addedMembers) || void 0 === n ? void 0 : n.some(e => e.userId === r))) || !1)
            }
        },
        648564: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DEFAULT_AUTO_ARCHIVE_DURATION: function() {
                    return u
                },
                MAX_THREAD_MESSAGE_COUNT_OLD: function() {
                    return c
                },
                MAX_THREAD_MESSAGE_COUNT: function() {
                    return d
                },
                MAX_THREAD_MEMBERS_PREVIEW: function() {
                    return _
                },
                MAX_THREAD_UNREAD_MESSAGE_COUNT: function() {
                    return E
                },
                ThreadMemberFlags: function() {
                    return f
                },
                OpenThreadAnalyticsLocations: function() {
                    return s
                },
                getThreadNotificationOptions: function() {
                    return p
                },
                ThreadSortOrderReadableForAnalytics: function() {
                    return a
                },
                FORUM_POST_CREATION_UPLOAD_ERRORS: function() {
                    return h
                },
                FORUM_POST_CREATION_AUTOMOD_ERRORS: function() {
                    return S
                }
            });
            var i, r, s, a, l = n("49111"),
                o = n("782340");
            let u = 4320,
                c = 50,
                d = 1e5,
                _ = 50,
                E = 25,
                f = {
                    HAS_INTERACTED: 1,
                    ALL_MESSAGES: 2,
                    ONLY_MENTIONS: 4,
                    NO_MESSAGES: 8
                };

            function p() {
                return [{
                    setting: f.ALL_MESSAGES,
                    label: o.default.Messages.FORM_LABEL_ALL_MESSAGES
                }, {
                    setting: f.ONLY_MENTIONS,
                    label: o.default.Messages.FORM_LABEL_ONLY_MENTIONS.format()
                }, {
                    setting: f.NO_MESSAGES,
                    label: o.default.Messages.FORM_LABEL_NOTHING
                }]
            }(i = s || (s = {})).EMBED = "Embed", i.BROWSER = "Thread Browser", i.POPOUT = "Active Threads Popout", i.CHANNEL_LIST = "Channel List", i.GUILD_ACTIVE_THREADS_MODAL = "Guild Active Threads Modal", i.INBOX = "Inbox", i.FORUM = "Forum", i.VOICE_AUTO_OPEN = "Voice Auto Open", (r = a || (a = {})).LATEST_ACTIVITY = "Last Message", r.CREATION_DATE = "Creation";
            let h = new Set([l.AbortCodes.TOO_MANY_ATTACHMENTS, l.AbortCodes.EXPLICIT_CONTENT, l.AbortCodes.ENTITY_TOO_LARGE]),
                S = new Set([l.AbortCodes.AUTOMOD_MESSAGE_BLOCKED, l.AbortCodes.AUTOMOD_TITLE_BLOCKED])
        },
        963903: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                Environments: function() {
                    return i
                }
            }), (r = i || (i = {})).STAGING = "staging", r.DEVELOPMENT = "development", r.PRODUCTION = "production", r.TEST = "test"
        },
        517001: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                validatePremiumType: function() {
                    return o
                },
                isStaffEnv: function() {
                    return c
                },
                isStaffEnvRawData: function() {
                    return d
                },
                getPremiumTypeFromRawValue: function() {
                    return _
                }
            });
            var i = n("161179"),
                r = n.n(i),
                s = n("568734"),
                a = n("963903"),
                l = n("49111");

            function o(e, t, n) {
                !e && void 0 !== t && r(n === t, "Premium type should not change for non-staff users")
            }

            function u(e) {
                return "production" === a.Environments.TEST && null != e ? e : "production"
            }

            function c(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
                    n = u(t) === a.Environments.DEVELOPMENT || window.GLOBAL_ENV.RELEASE_CHANNEL === a.Environments.STAGING;
                if (n) return !0;
                if (null == e) return !1;
                let i = e.isStaff() || e.isStaffPersonal();
                return i
            }

            function d(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
                    n = u(t) === a.Environments.DEVELOPMENT || window.GLOBAL_ENV.RELEASE_CHANNEL === a.Environments.STAGING;
                return !!n || null != e && (!!(null != e.flags && (0, s.hasFlag)(e.flags, l.UserFlags.STAFF)) || null != e.personal_connection_id)
            }

            function _(e) {
                return void 0 !== e ? e === l.PREMIUM_TYPE_NONE ? null : e : e
            }
        },
        705873: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("49111");

            function r(e) {
                var t;
                return ((null !== (t = e.flags) && void 0 !== t ? t : 0) & i.UserFlags.STAFF) === i.UserFlags.STAFF || (null == e ? void 0 : e.personal_connection_id) != null
            }
        },
        891760: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                shouldReadWriteAudioSettings: function() {
                    return s
                }
            });
            var i = n("862205");
            let r = (0, i.createExperiment)({
                kind: "user",
                id: "2022-09_remote_audio_settings",
                label: "Remote Audio Settings",
                defaultConfig: {
                    readWriteRemoteSettings: !1
                },
                treatments: [{
                    id: 1,
                    label: "Read/write remote audio settings",
                    config: {
                        readWriteRemoteSettings: !0
                    }
                }]
            });

            function s() {
                return r.getCurrentConfig({
                    location: "da0fa6_1"
                }, {
                    autoTrackExposure: !1
                }).readWriteRemoteSettings
            }
        },
        116319: function(e, t, n) {
            "use strict";
            var i, r;
            n.r(t), n.d(t, {
                SystemThemeState: function() {
                    return i
                }
            }), (r = i || (i = {}))[r.UNSET = 0] = "UNSET", r[r.OFF = 1] = "OFF", r[r.ON = 2] = "ON", r[r.UNAVAILABLE = 3] = "UNAVAILABLE"
        },
        161778: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            });
            var r = n("498225"),
                s = n("975162"),
                a = n("912557"),
                l = n("819855"),
                o = n("913144"),
                u = n("206230"),
                c = n("253539"),
                d = n("21121");
            n("831588");
            var _ = n("922932"),
                E = n("773336"),
                f = n("737292"),
                p = n("168973"),
                h = n("374363"),
                S = n("116319"),
                T = n("49111"),
                I = n("941719");
            let m = T.ThemeTypes.DARK,
                g = m,
                A = null,
                C = !1;

            function R() {
                var e, t;
                if (__OVERLAY__) return T.ThemeTypes.DARK;
                if (u.default.syncForcedColors && "active" === u.default.systemForcedColors && null != i) return i;
                let n = p.default.useSystemTheme;
                if (n === S.SystemThemeState.ON && null != i) return i;
                let r = null !== (t = null === (e = f.default.getAppearanceSettings()) || void 0 === e ? void 0 : e.theme) && void 0 !== t ? t : m,
                    s = !1;
                try {
                    s = (0, d.isInMainTabsExperiment)()
                } catch {}
                return s && r === T.ThemeTypes.DARK ? T.ThemeTypes.DARKER : r
            }

            function N() {
                var e;
                let t = null === (e = h.default.settings.appearance) || void 0 === e ? void 0 : e.theme;
                return m = t === s.Theme.LIGHT ? T.ThemeTypes.LIGHT : T.ThemeTypes.DARK, O()
            }

            function v() {
                return O()
            }

            function O() {
                let e = R();
                return e !== g && (g = e, !0)
            }
            class D extends r.default.PersistedStore {
                initialize(e) {
                    (null == e ? void 0 : e.theme) != null && (m = e.theme, g = R()), this.waitFor(p.default, f.default, h.default, u.default)
                }
                getState() {
                    return {
                        theme: this.theme
                    }
                }
                get darkSidebar() {
                    return (0, l.isThemeLight)(this.theme) && p.default.darkSidebar && !C
                }
                get theme() {
                    return R()
                }
                get systemTheme() {
                    return A
                }
                get systemPrefersColorScheme() {
                    return i
                }
                get isSystemThemeAvailable() {
                    return null !== A
                }
            }
            D.displayName = "ThemeStore", D.persistKey = "ThemeStore";
            var L = new D(o.default, {
                CONNECTION_OPEN: N,
                LOGIN_SUCCESS: v,
                LOGOUT: function(e) {
                    return !e.isSwitchingAccount && m !== T.ThemeTypes.DARK && (m = T.ThemeTypes.DARK, function() {
                        !__OVERLAY__ && E.isPlatformEmbedded && _.default.setApplicationBackgroundColor((0, l.isThemeDark)(R()) ? a.default.unsafe_rawColors.PRIMARY_700.resolve({
                            saturation: u.default.saturation
                        }).hsl() : a.default.unsafe_rawColors.WHITE_500.resolve({
                            saturation: u.default.saturation
                        }).hsl())
                    }(), O())
                },
                OVERLAY_INITIALIZE: N,
                SELECTIVELY_SYNCED_USER_SETTINGS_UPDATE: v,
                UNSYNCED_USER_SETTINGS_UPDATE: v,
                USER_SETTINGS_PROTO_UPDATE: N,
                UPDATE_BACKGROUND_GRADIENT_PRESET: function(e) {
                    var t, n;
                    let {
                        presetId: i
                    } = e;
                    m = null != i && null !== (n = null === (t = I.BACKGROUND_GRADIENT_PRESETS_MAP[i]) || void 0 === t ? void 0 : t.theme) && void 0 !== n ? n : R();
                    let r = null != i;
                    return C !== r ? (C = r, !0) : function() {
                        let e = R();
                        return !!(0, c.areThemesEqualForGradientThemes)(m, g) && (g = e, !0)
                    }()
                },
                RESET_PREVIEW_CLIENT_THEME: N,
                SYSTEM_THEME_CHANGE: function(e) {
                    let {
                        systemTheme: t
                    } = e;
                    return A = t, O()
                },
                ACCESSIBILITY_SYSTEM_COLOR_PREFERENCES_CHANGED: function(e) {
                    return i = e.systemPrefersColorScheme, O()
                },
                ACCESSIBILITY_DARK_SIDEBAR_TOGGLE: function() {
                    return (0, l.isThemeLight)(R())
                }
            })
        },
        168973: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var i, r, s, a, l = n("427964"),
                o = n.n(l),
                u = n("498225"),
                c = n("173333"),
                d = n("913144"),
                _ = n("116319"),
                E = n("49111");
            n("504593");
            var f = n("13030"),
                p = n("559980");
            (i = s || (s = {})).DATA_SAVER = "data_saver", i.STANDARD = "standard", i.BEST = "best", (r = a || (a = {})).VERY_LOW = "very_low", r.LOW = "low", r.MEDIUM = "medium", r.HIGH = "high", r.VERY_HIGH = "very_high";
            let h = (window.innerWidth - E.CHANNEL_SIDEBAR_WIDTH) / 2,
                S = s.STANDARD,
                T = null,
                I = {};
            class m extends u.default.DeviceSettingsStore {
                initialize(e) {
                    var t;
                    (I = null != e ? e : {}).darkSidebar = null !== (t = I.darkSidebar) && void 0 !== t ? t : function() {
                        var e;
                        let t = u.default.PersistedStore.migrateAndReadStoreState("AccessibilityStore", []).state;
                        return null !== (e = null == t ? void 0 : t.darkSidebar) && void 0 !== e && e
                    }()
                }
                getUserAgnosticState() {
                    return I
                }
                get displayCompactAvatars() {
                    var e;
                    return null !== (e = I.displayCompactAvatars) && void 0 !== e && e
                }
                get lowQualityImageMode() {
                    var e;
                    return null !== (e = I.lowQualityImageMode) && void 0 !== e && e
                }
                get videoUploadQuality() {
                    var e;
                    return null !== (e = I.videoUploadQuality) && void 0 !== e ? e : S
                }
                get dataSavingMode() {
                    var e, t;
                    return null !== (t = null !== (e = I.dataSavingMode) && void 0 !== e ? e : I.lowQualityImageMode) && void 0 !== t && t
                }
                get expressionPickerWidth() {
                    var e;
                    return null !== (e = I.expressionPickerWidth) && void 0 !== e ? e : f.ExpressionPickerWidths.MIN
                }
                get messageRequestSidebarWidth() {
                    var e;
                    return null !== (e = I.messageRequestSidebarWidth) && void 0 !== e ? e : E.DEFAULT_MESSAGE_REQUEST_SIDEBAR_WIDTH
                }
                get threadSidebarWidth() {
                    var e;
                    return null !== (e = I.threadSidebarWidth) && void 0 !== e ? e : E.DEFAULT_CHAT_SIDEBAR_WIDTH
                }
                get postSidebarWidth() {
                    var e;
                    return null !== (e = I.postSidebarWidth) && void 0 !== e ? e : h
                }
                get callChatSidebarWidth() {
                    var e;
                    return null !== (e = I.callChatSidebarWidth) && void 0 !== e ? e : E.DEFAULT_CHAT_SIDEBAR_WIDTH
                }
                get homeSidebarWidth() {
                    var e;
                    return null !== (e = I.homeSidebarWidth) && void 0 !== e ? e : (null == T && (T = Math.max((window.innerWidth - E.CHANNEL_SIDEBAR_WIDTH) * .4, E.DEFAULT_CHAT_SIDEBAR_WIDTH)), T)
                }
                get callHeaderHeight() {
                    return I.callHeaderHeight
                }
                get activityPanelHeight() {
                    return I.activityPanelHeight
                }
                get useSystemTheme() {
                    var e;
                    return null !== (e = I.useSystemTheme) && void 0 !== e ? e : _.SystemThemeState.UNSET
                }
                get useAMOLEDTheme() {
                    var e;
                    return null !== (e = I.useAMOLEDTheme) && void 0 !== e ? e : p.AMOLEDThemeState.HIDDEN
                }
                get disableVoiceChannelChangeAlert() {
                    var e;
                    return null !== (e = I.disableVoiceChannelChangeAlert) && void 0 !== e && e
                }
                get disableEmbeddedActivityPopOutAlert() {
                    var e;
                    return null !== (e = I.disableEmbeddedActivityPopOutAlert) && void 0 !== e && e
                }
                get disableActivityHardwareAccelerationPrompt() {
                    var e;
                    return null !== (e = I.disableActivityHardwareAccelerationPrompt) && void 0 !== e && e
                }
                get disableInviteWithTextChannelActivityLaunch() {
                    var e;
                    return null !== (e = I.disableInviteWithTextChannelActivityLaunch) && void 0 !== e && e
                }
                get disableHideSelfStreamAndVideoConfirmationAlert() {
                    var e;
                    return null !== (e = I.disableHideSelfStreamAndVideoConfirmationAlert) && void 0 !== e && e
                }
                get pushUpsellUserSettingsDismissed() {
                    var e;
                    return null !== (e = I.pushUpsellDismissed) && void 0 !== e && e
                }
                get disableActivityHostLeftNitroUpsell() {
                    var e;
                    return null !== (e = I.disableActivityHostLeftNitroUpsell) && void 0 !== e && e
                }
                get disableCallUserConfirmationPrompt() {
                    var e;
                    return null !== (e = I.disableCallUserConfirmationPrompt) && void 0 !== e && e
                }
                get disableApplicationSubscriptionCancellationSurvey() {
                    var e;
                    return null !== (e = I.disableApplicationSubscriptionCancellationSurvey) && void 0 !== e && e
                }
                get enableAndroidChatListAnimations() {
                    var e;
                    return null !== (e = I.enableAndroidChatListAnimations) && void 0 !== e && e
                }
                get darkSidebar() {
                    var e;
                    return null !== (e = I.darkSidebar) && void 0 !== e && e
                }
                get useMobileChatCustomRenderer() {
                    var e;
                    return null !== (e = I.useMobileChatCustomRenderer) && void 0 !== e && e
                }
            }
            m.displayName = "UnsyncedUserSettingsStore", m.persistKey = "UnsyncedUserSettingsStore", m.migrations = [() => {
                let e = c.default.get("UserSettingsStore");
                return c.default.remove("UserSettingsStore"), o.pick(e, "dataSavingMode", "videoUploadQuality", "lowQualityImageMode", "useSystemTheme", "expressionPickerWidth", "disableVoiceChannelChangeAlert", "disableHideSelfStreamAndVideoConfirmationAlert", "pushUpsellDismissed", "disableEmbeddedActivityPopOutAlert", "disableActivityHardwareAccelerationPrompt", "disableInviteWithTextChannelActivityLaunch", "disableActivityHostLeftNitroUpsell", "disableCallUserConfirmationPrompt", "disableApplicationSubscriptionCancellationSurvey", "enableAndroidChatListAnimations")
            }];
            var g = new m(d.default, {
                UNSYNCED_USER_SETTINGS_UPDATE: function(e) {
                    I = {
                        ...I,
                        ...e.settings
                    }
                },
                LOGOUT: function() {
                    I = {
                        useSystemTheme: I.useSystemTheme,
                        darkSidebar: I.darkSidebar
                    }
                },
                LOGIN_SUCCESS: function() {
                    null == I && (I = {})
                },
                REGISTER_SUCCESS: function() {},
                ACCESSIBILITY_DARK_SIDEBAR_TOGGLE: function() {
                    return I.darkSidebar = !I.darkSidebar, !0
                }
            })
        },
        653047: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("666038"),
                r = n("315102"),
                s = n("331082"),
                a = n("766274"),
                l = n("954016");
            let o = {
                    [l.POKER_NIGHT_APPLICATION_ID]: 7,
                    [l.END_GAME_APPLICATION_ID]: 12
                },
                u = e => {
                    let t = {
                        os: e.os,
                        name: e.name
                    };
                    return null != e.arguments && (t.arguments = e.arguments), null != e.is_launcher && (t.isLauncher = e.is_launcher), t
                };
            class c extends i.default {
                static createFromServer(e) {
                    var t;
                    return new c({
                        ...e,
                        thirdPartySkus: e.third_party_skus,
                        overlayWarn: e.overlay_warn,
                        overlayCompatibilityHook: e.overlay_compatibility_hook,
                        hook: e.hook,
                        primarySkuId: e.primary_sku_id,
                        storeListingSkuId: e.store_listing_sku_id,
                        guildId: e.guild_id,
                        guild: e.guild,
                        publishers: null != e.publishers ? e.publishers.map(s.default.createFromServer) : [],
                        developers: null != e.developers ? e.developers.map(s.default.createFromServer) : [],
                        eulaId: e.eula_id,
                        slug: e.slug,
                        coverImage: e.cover_image,
                        bot: null != e.bot ? new a.default(e.bot) : null,
                        flags: null !== (t = e.flags) && void 0 !== t ? t : 0,
                        maxParticipants: e.max_participants,
                        tags: e.tags,
                        embeddedActivityConfig: e.embedded_activity_config,
                        roleConnectionsVerificationUrl: e.role_connections_verification_url
                    })
                }
                getIconURL(e) {
                    return null != this.icon ? r.default.getGameAssetURL({
                        id: this.id,
                        hash: this.icon,
                        size: e
                    }) : null
                }
                getIconSource(e) {
                    return null != this.icon ? r.default.getGameAssetSource({
                        id: this.id,
                        hash: this.icon,
                        size: e
                    }) : null
                }
                getSplashURL(e) {
                    return null != this.splash ? r.default.getGameAssetURL({
                        id: this.id,
                        hash: this.splash,
                        size: e,
                        keepAspectRatio: !0
                    }) : null
                }
                getCoverImageURL(e) {
                    return null != this.coverImage ? r.default.getApplicationIconURL({
                        id: this.id,
                        icon: this.coverImage,
                        size: e
                    }) : null
                }
                getMaxParticipants() {
                    var e, t;
                    return null !== (t = null !== (e = this.maxParticipants) && void 0 !== e ? e : o[this.id]) && void 0 !== t ? t : 0
                }
                get destinationSkuId() {
                    return null != this.storeListingSkuId ? this.storeListingSkuId : this.primarySkuId
                }
                constructor(e) {
                    var t, n, i;
                    super(), this.id = e.id, this.name = e.name, this.icon = e.icon || null, this.splash = e.splash || null, this.overlay = e.overlay || !1, this.overlayWarn = e.overlayWarn || !1, this.overlayCompatibilityHook = e.overlayCompatibilityHook || !1, this.hook = null === (t = e.hook) || void 0 === t || t, this.aliases = e.aliases || [], this.publishers = e.publishers || [], this.developers = e.developers || [], this.primarySkuId = e.primarySkuId, this.storeListingSkuId = e.storeListingSkuId, this.guildId = e.guildId || null, this.guild = e.guild || null, this.thirdPartySkus = e.thirdPartySkus || [], this.executables = (e.executables || []).map(u), this.hashes = e.hashes || [], this.description = e.description || null, this.eulaId = e.eulaId || null, this.slug = e.slug || null, this.bot = e.bot || null, this.coverImage = e.coverImage || null, this.flags = null !== (n = e.flags) && void 0 !== n ? n : 0, this.tags = null !== (i = e.tags) && void 0 !== i ? i : [], this.maxParticipants = e.maxParticipants, this.embeddedActivityConfig = e.embedded_activity_config, this.type = e.type, this.team = e.team, this.roleConnectionsVerificationUrl = e.roleConnectionsVerificationUrl
                }
            }
        },
        807085: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("666038"),
                r = n("782340");
            class s extends i.default {
                static createFromServer(e) {
                    return new s({
                        id: e.id,
                        liveBuildId: e.live_build_id,
                        name: e.name
                    })
                }
                getName(e) {
                    return null != this.name ? this.name : this.id === e ? r.default.Messages.APPLICATION_BRANCH_NAME_MASTER : r.default.Messages.APPLICATION_BRANCH_NAME_UNKNOWN
                }
                constructor(e) {
                    super(), this.id = e.id, this.liveBuildId = e.liveBuildId, this.name = e.name
                }
            }
        },
        233069: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isGuildSelectableChannelType: function() {
                    return p
                },
                ALL_CHANNEL_TYPES: function() {
                    return h
                },
                isGuildTextChannelType: function() {
                    return T
                },
                GUILD_WEBHOOK_CHANNEL_TYPES: function() {
                    return I
                },
                GUILD_CHANNEL_TYPES: function() {
                    return m
                },
                isGuildChannelType: function() {
                    return g
                },
                GUILD_VOCAL_CHANNEL_TYPES: function() {
                    return A
                },
                isGuildVocalChannelType: function() {
                    return C
                },
                SILENT_JOIN_LEAVE_CHANNEL_TYPES: function() {
                    return R
                },
                isPrivate: function() {
                    return v
                },
                isMultiUserDM: function() {
                    return D
                },
                TEXT_CHANNEL_TYPES: function() {
                    return L
                },
                isTextChannel: function() {
                    return M
                },
                isVoiceChannel: function() {
                    return b
                },
                isGuildReadableType: function() {
                    return U
                },
                THREAD_CHANNEL_TYPES: function() {
                    return G
                },
                THREADED_CHANNEL_TYPES: function() {
                    return w
                },
                isThread: function() {
                    return x
                },
                isReadableType: function() {
                    return F
                },
                GUILD_NON_CATEGORY_CHANNEL_TYPES: function() {
                    return B
                },
                EDITABLE_CHANNEL_TYPES: function() {
                    return V
                },
                TOGGLE_ANNOUNCEMENT_CHANNEL_TYPES: function() {
                    return H
                },
                TOPIC_CHANNEL_TYPES: function() {
                    return j
                },
                NSFW_CHANNEL_TYPES: function() {
                    return Y
                },
                CREATEABLE_NON_VOCAL_CHANNEL_NAME_TYPES: function() {
                    return W
                },
                SLOWMODE_CHANNEL_TYPES: function() {
                    return K
                },
                EDITABLE_VOICE_SETTINGS_TYPES: function() {
                    return z
                },
                VOICE_THREAD_PARENT_CHANNEL_TYPES: function() {
                    return Z
                },
                getAccessPermissions: function() {
                    return et
                },
                getBasicAccessPermissions: function() {
                    return en
                },
                ChannelRecordBase: function() {
                    return ea
                },
                UnknownChannelRecord: function() {
                    return el
                },
                GuildTextualChannelRecord: function() {
                    return eu
                },
                PrivateChannelRecord: function() {
                    return ed
                },
                DMChannelRecord: function() {
                    return e_
                },
                createChannelRecordFromServer: function() {
                    return ep
                },
                createChannelRecordFromInvite: function() {
                    return eh
                },
                castChannelRecord: function() {
                    return eT
                },
                createChannelRecord: function() {
                    return eI
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("925149"),
                a = n("497411"),
                l = n("754013"),
                o = n("287088"),
                u = n("923510"),
                c = n("834052"),
                d = n("568734"),
                _ = n("49111"),
                E = n("724210");
            let f = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_STORE, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_DIRECTORY, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA, _.ChannelTypes.DM, _.ChannelTypes.GROUP_DM]);

            function p(e) {
                return f.has(e)
            }
            let h = new Set([_.ChannelTypes.DM, _.ChannelTypes.GROUP_DM, _.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE, _.ChannelTypes.GUILD_CATEGORY, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_STORE, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_DIRECTORY, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA]),
                S = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD]);

            function T(e) {
                return S.has(e)
            }
            let I = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE]),
                m = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE, _.ChannelTypes.GUILD_CATEGORY, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_STORE, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_DIRECTORY, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA]);

            function g(e) {
                return m.has(e)
            }
            _.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA;
            let A = new Set([_.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE]);

            function C(e) {
                return "SELECTABLE" !== e && A.has(e)
            }
            let R = new Set([_.ChannelTypes.GUILD_STAGE_VOICE]),
                N = new Set([_.ChannelTypes.DM, _.ChannelTypes.GROUP_DM]);

            function v(e) {
                return N.has(e)
            }
            let O = new Set([_.ChannelTypes.GROUP_DM]);

            function D(e) {
                return O.has(e)
            }
            let L = new Set([_.ChannelTypes.DM, _.ChannelTypes.GROUP_DM, _.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD]);

            function M(e) {
                return L.has(e)
            }
            let P = new Set([_.ChannelTypes.DM, _.ChannelTypes.GROUP_DM, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD]);

            function b(e) {
                return P.has(e)
            }
            let y = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_DIRECTORY, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA, _.ChannelTypes.DM, _.ChannelTypes.GROUP_DM]);

            function U(e) {
                return y.has(e)
            }
            let G = new Set([_.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD]),
                w = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA]);

            function x(e) {
                return G.has(e)
            }
            let k = new Set([_.ChannelTypes.DM, _.ChannelTypes.GROUP_DM, _.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA, _.ChannelTypes.GUILD_DIRECTORY, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE]);

            function F(e) {
                return k.has(e)
            }
            let B = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_STORE, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_DIRECTORY, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA]),
                V = new Set([_.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_CATEGORY, _.ChannelTypes.GUILD_STORE, _.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE, _.ChannelTypes.GUILD_DIRECTORY, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA]),
                H = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT]),
                j = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA]),
                Y = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE]),
                W = new Set([_.ChannelTypes.GUILD_ANNOUNCEMENT, _.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA, _.ChannelTypes.ANNOUNCEMENT_THREAD]),
                K = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA, _.ChannelTypes.ANNOUNCEMENT_THREAD, _.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE]),
                z = new Set([_.ChannelTypes.PUBLIC_THREAD, _.ChannelTypes.PRIVATE_THREAD, _.ChannelTypes.GUILD_VOICE, _.ChannelTypes.GUILD_STAGE_VOICE]),
                Z = new Set([_.ChannelTypes.GUILD_TEXT, _.ChannelTypes.GUILD_FORUM, _.ChannelTypes.GUILD_MEDIA]);

            function q(e) {
                let t = {};
                return null == e || e.forEach(e => {
                    t[e.id] = {
                        id: e.id,
                        type: e.type,
                        allow: l.default.deserialize(e.allow),
                        deny: l.default.deserialize(e.deny)
                    }
                }), t
            }

            function X(e) {
                return null == e ? {} : r.reduce(e, (e, t) => (e[t.id] = t.nick, e), {})
            }

            function Q(e) {
                return null == e ? [] : e.map(e => ({
                    id: e.id,
                    name: e.name,
                    emojiId: 0 !== e.emoji_id ? e.emoji_id : void 0,
                    emojiName: e.emoji_name,
                    moderated: e.moderated
                }))
            }

            function J(e) {
                return null != e ? {
                    id: e.id,
                    name: e.name
                } : void 0
            }
            let $ = l.default.combine(_.Permissions.CONNECT, _.Permissions.VIEW_CHANNEL),
                ee = _.BasicPermissions.CONNECT | _.BasicPermissions.VIEW_CHANNEL;

            function et(e) {
                return C(e) ? $ : _.Permissions.VIEW_CHANNEL
            }

            function en(e) {
                return C(e) ? ee : _.BasicPermissions.VIEW_CHANNEL
            }
            class ei {
                constructor(e) {
                    var t, n, i;
                    this.id = e.id, this.type = null !== (t = e.type) && void 0 !== t ? t : _.ChannelTypes.GUILD_TEXT, this.name = null !== (n = e.name) && void 0 !== n ? n : "", this.guild_id = null !== (i = e.guild_id) && void 0 !== i ? i : null
                }
            }

            function er(e) {
                return "topic" in e && (e.topic_ = e.topic, delete e.topic), "position" in e && (e.position_ = e.position, delete e.position), "permissionOverwrites" in e && (e.permissionOverwrites_ = e.permissionOverwrites, delete e.permissionOverwrites), "bitrate" in e && (e.bitrate_ = e.bitrate, delete e.bitrate), "userLimit" in e && (e.userLimit_ = e.userLimit, delete e.userLimit), "nsfw" in e && (e.nsfw_ = e.nsfw, delete e.nsfw), "rateLimitPerUser" in e && (e.rateLimitPerUser_ = e.rateLimitPerUser, delete e.rateLimitPerUser), "flags" in e && (e.flags_ = e.flags, delete e.flags), e
            }
            let es = Object.freeze({});
            class ea extends ei {
                get permissionOverwrites() {
                    var e;
                    return null !== (e = this.permissionOverwrites_) && void 0 !== e ? e : es
                }
                get topic() {
                    var e;
                    return null !== (e = this.topic_) && void 0 !== e ? e : ""
                }
                get position() {
                    var e;
                    return null !== (e = this.position_) && void 0 !== e ? e : 0
                }
                get bitrate() {
                    var e;
                    return null !== (e = this.bitrate_) && void 0 !== e ? e : _.BITRATE_DEFAULT
                }
                get userLimit() {
                    var e;
                    return null !== (e = this.userLimit_) && void 0 !== e ? e : 0
                }
                get nsfw() {
                    var e;
                    return null !== (e = this.nsfw_) && void 0 !== e && e
                }
                get rateLimitPerUser() {
                    var e;
                    return null !== (e = this.rateLimitPerUser_) && void 0 !== e ? e : 0
                }
                get flags() {
                    var e;
                    return null !== (e = this.flags_) && void 0 !== e ? e : 0
                }
                toJS() {
                    return {
                        ...this
                    }
                }
                set(e, t) {
                    return this.merge(er({
                        [e]: t
                    }))
                }
                merge(e) {
                    let t = null,
                        n = er(e);
                    for (let e in n) n.hasOwnProperty(e) && this[e] !== n[e] && (null == t && (t = this.toJS()), t[e] = n[e]);
                    return null != t ? new this.constructor(t) : this
                }
                computeLurkerPermissionsAllowList() {
                    if (this.isGuildStageVoice() && c.default.isPublic(this.id)) return u.LURKER_STAGE_CHANNEL_PERMISSIONS_ALLOWLIST
                }
                isNSFW() {
                    return this.nsfw
                }
                isManaged() {
                    return null != this.application_id
                }
                isPrivate() {
                    return v(this.type)
                }
                isGroupDM() {
                    return this.type === _.ChannelTypes.GROUP_DM
                }
                isMultiUserDM() {
                    return D(this.type)
                }
                isDM() {
                    return this.type === _.ChannelTypes.DM
                }
                isSystemDM() {
                    return !1
                }
                isArchivedThread() {
                    var e;
                    return this.isThread() && (null === (e = this.threadMetadata) || void 0 === e ? void 0 : e.archived) === !0
                }
                isLockedThread() {
                    var e;
                    return this.isThread() && (null === (e = this.threadMetadata) || void 0 === e ? void 0 : e.locked) === !0
                }
                isScheduledForDeletion() {
                    return this.hasFlag(E.ChannelFlags.IS_SCHEDULED_FOR_DELETION)
                }
                isBroadcastChannel() {
                    return this.hasFlag(E.ChannelFlags.IS_BROADCASTING)
                }
                isArchivedLockedThread() {
                    var e, t;
                    return G.has(this.type) && (null === (e = this.threadMetadata) || void 0 === e ? void 0 : e.archived) === !0 && (null === (t = this.threadMetadata) || void 0 === t ? void 0 : t.locked) === !0
                }
                isForumPost() {
                    return this.type === _.ChannelTypes.PUBLIC_THREAD && null != this.parentChannelThreadType && _.ChannelTypesSets.GUILD_THREADS_ONLY.has(this.parentChannelThreadType)
                }
                isCategory() {
                    return this.type === _.ChannelTypes.GUILD_CATEGORY
                }
                isVocal() {
                    return b(this.type)
                }
                isGuildVocal() {
                    return C(this.type)
                }
                isGuildVocalOrThread() {
                    return this.isGuildVocal() || this.isVocalThread()
                }
                isGuildVoice() {
                    return this.type === _.ChannelTypes.GUILD_VOICE
                }
                isGuildStageVoice() {
                    return this.type === _.ChannelTypes.GUILD_STAGE_VOICE
                }
                isListenModeCapable() {
                    return this.isGuildStageVoice()
                }
                isThread() {
                    return x(this.type)
                }
                isAnnouncementThread() {
                    return this.type === _.ChannelTypes.ANNOUNCEMENT_THREAD
                }
                isVocalThread() {
                    return this.type === _.ChannelTypes.PUBLIC_THREAD || this.type === _.ChannelTypes.PRIVATE_THREAD
                }
                isActiveThread() {
                    var e;
                    return this.isThread() && (null === (e = this.threadMetadata) || void 0 === e ? void 0 : e.archived) !== !0
                }
                isDirectory() {
                    return this.type === _.ChannelTypes.GUILD_DIRECTORY
                }
                isForumLikeChannel() {
                    return this.isForumChannel() || this.isMediaChannel()
                }
                isForumChannel() {
                    return this.type === _.ChannelTypes.GUILD_FORUM
                }
                isMediaChannel() {
                    return this.type === _.ChannelTypes.GUILD_MEDIA
                }
                isMediaPost() {
                    return this.type === _.ChannelTypes.PUBLIC_THREAD && this.parentChannelThreadType === _.ChannelTypes.GUILD_MEDIA
                }
                isRoleSubscriptionTemplatePreviewChannel() {
                    return this.hasFlag(E.ChannelFlags.IS_ROLE_SUBSCRIPTION_TEMPLATE_PREVIEW_CHANNEL)
                }
                isOwner(e) {
                    return this.ownerId === e
                }
                getGuildId() {
                    return this.guild_id
                }
                getApplicationId() {
                    return this.application_id
                }
                getDefaultSortOrder() {
                    var e;
                    return null !== (e = this.defaultSortOrder) && void 0 !== e ? e : a.ThreadSortOrder.LATEST_ACTIVITY
                }
                getDefaultLayout() {
                    return this.isMediaChannel() ? s.ForumLayout.GRID : null == this.defaultForumLayout || this.defaultForumLayout === s.ForumLayout.DEFAULT ? s.ForumLayout.LIST : this.defaultForumLayout
                }
                get accessPermissions() {
                    return et(this.type)
                }
                hasFlag(e) {
                    return (0, d.hasFlag)(this.flags, e)
                }
            }
            class el extends ea {
                static fromServer(e, t) {
                    var n, i, r;
                    let s = {
                        application_id: e.application_id,
                        appliedTags: e.applied_tags,
                        availableTags: null != e.available_tags ? Q(e.available_tags) : void 0,
                        bitrate_: e.bitrate,
                        defaultAutoArchiveDuration: e.default_auto_archive_duration,
                        defaultForumLayout: e.default_forum_layout,
                        defaultReactionEmoji: null != e.default_reaction_emoji ? {
                            emojiId: 0 !== e.default_reaction_emoji.emoji_id ? e.default_reaction_emoji.emoji_id : void 0,
                            emojiName: e.default_reaction_emoji.emoji_name
                        } : void 0,
                        defaultSortOrder: e.default_sort_order,
                        defaultThreadRateLimitPerUser: e.default_thread_rate_limit_per_user,
                        flags_: e.flags,
                        guild_id: null !== (n = null != t ? t : e.guild_id) && void 0 !== n ? n : null,
                        icon: e.icon,
                        iconEmoji: J(e.icon_emoji),
                        id: e.id,
                        isMessageRequest: e.is_message_request,
                        isMessageRequestTimestamp: e.is_message_request_timestamp,
                        isSpam: e.is_spam,
                        lastMessageId: e.last_message_id,
                        lastPinTimestamp: e.last_pin_timestamp,
                        member: null != e.member ? {
                            flags: e.member.flags,
                            muted: e.member.muted,
                            muteConfig: e.member.mute_config,
                            joinTimestamp: e.member.join_timestamp
                        } : void 0,
                        memberCount: e.member_count,
                        memberIdsPreview: e.member_ids_preview,
                        memberListId: e.member_list_id,
                        messageCount: e.message_count,
                        name: null !== (i = e.name) && void 0 !== i ? i : "",
                        nicks: X(e.nicks),
                        nsfw_: e.nsfw,
                        originChannelId: e.origin_channel_id,
                        ownerId: e.owner_id,
                        parent_id: e.parent_id,
                        parentChannelThreadType: void 0,
                        permissionOverwrites_: q(e.permission_overwrites),
                        position_: e.position,
                        rateLimitPerUser_: e.rate_limit_per_user,
                        rawRecipients: null != e.recipients ? e.recipients : [],
                        recipients: null != e.recipients ? e.recipients.map(e => e.id) : [],
                        rtcRegion: e.rtc_region,
                        safetyWarnings: e.safety_warnings,
                        template: e.template,
                        themeColor: e.theme_color,
                        threadMetadata: null != e.thread_metadata ? {
                            archived: e.thread_metadata.archived,
                            autoArchiveDuration: e.thread_metadata.auto_archive_duration,
                            archiveTimestamp: e.thread_metadata.archive_timestamp,
                            createTimestamp: e.thread_metadata.create_timestamp,
                            locked: e.thread_metadata.locked,
                            invitable: null === (r = e.thread_metadata.invitable) || void 0 === r || r
                        } : void 0,
                        topic_: e.topic,
                        status: e.status,
                        totalMessageSent: e.total_message_sent,
                        type: null != e.type ? e.type : _.ChannelTypes.UNKNOWN,
                        userLimit_: e.user_limit,
                        version: e.version,
                        videoQualityMode: e.video_quality_mode
                    };
                    return (0, o.dangerouslyCast)(s, el)
                }
                constructor(e) {
                    super(e), this.application_id = e.application_id, this.appliedTags = e.appliedTags, this.availableTags = e.availableTags, this.bitrate_ = e.bitrate_, this.defaultAutoArchiveDuration = e.defaultAutoArchiveDuration, this.defaultForumLayout = e.defaultForumLayout, this.defaultReactionEmoji = e.defaultReactionEmoji, this.defaultSortOrder = e.defaultSortOrder, this.defaultThreadRateLimitPerUser = e.defaultThreadRateLimitPerUser, this.flags_ = e.flags_, this.icon = e.icon, this.iconEmoji = e.iconEmoji, this.isMessageRequest = e.isMessageRequest, this.isMessageRequestTimestamp = e.isMessageRequestTimestamp, this.isSpam = e.isSpam, this.lastMessageId = e.lastMessageId, this.lastPinTimestamp = e.lastPinTimestamp, this.member = e.member, this.memberCount = e.memberCount, this.memberIdsPreview = e.memberIdsPreview, this.memberListId = e.memberListId, this.messageCount = e.messageCount, this.nicks = e.nicks, this.nsfw_ = e.nsfw_, this.originChannelId = e.originChannelId, this.ownerId = e.ownerId, this.parent_id = e.parent_id, this.parentChannelThreadType = e.parentChannelThreadType, this.permissionOverwrites_ = e.permissionOverwrites_, this.position_ = e.position_, this.rateLimitPerUser_ = e.rateLimitPerUser_, this.rawRecipients = e.rawRecipients, this.recipients = e.recipients, this.rtcRegion = e.rtcRegion, this.safetyWarnings = e.safetyWarnings, this.template = e.template, this.themeColor = e.themeColor, this.threadMetadata = e.threadMetadata, this.topic_ = e.topic_, this.status = e.status, this.userLimit_ = e.userLimit_, this.version = e.version, this.videoQualityMode = e.videoQualityMode
                }
            }
            class eo extends ea {
                static fromServer(e, t) {
                    var n, i, r, s;
                    let a = {
                        application_id: e.application_id,
                        bitrate_: e.bitrate,
                        flags_: e.flags,
                        guild_id: null !== (n = null != t ? t : e.guild_id) && void 0 !== n ? n : null,
                        iconEmoji: J(e.icon_emoji),
                        id: e.id,
                        lastMessageId: e.last_message_id,
                        lastPinTimestamp: e.last_pin_timestamp,
                        memberListId: e.member_list_id,
                        name: null !== (i = e.name) && void 0 !== i ? i : "",
                        nsfw_: null !== (r = e.nsfw) && void 0 !== r && r,
                        originChannelId: e.origin_channel_id,
                        parent_id: e.parent_id,
                        permissionOverwrites_: q(e.permission_overwrites),
                        position_: e.position,
                        rateLimitPerUser_: null !== (s = e.rate_limit_per_user) && void 0 !== s ? s : 0,
                        rtcRegion: e.rtc_region,
                        themeColor: e.theme_color,
                        topic_: e.topic,
                        status: e.status,
                        type: null != e.type ? e.type : _.ChannelTypes.GUILD_VOICE,
                        userLimit_: e.user_limit,
                        version: e.version,
                        videoQualityMode: e.video_quality_mode
                    };
                    return eT(a)
                }
                constructor(e) {
                    var t;
                    super(e), this.application_id = e.application_id, this.bitrate_ = e.bitrate_, this.flags_ = e.flags_, this.iconEmoji = e.iconEmoji, this.lastMessageId = e.lastMessageId, this.lastPinTimestamp = e.lastPinTimestamp, this.memberListId = e.memberListId, this.nsfw_ = e.nsfw_, this.originChannelId = e.originChannelId, this.parent_id = e.parent_id, this.permissionOverwrites_ = null !== (t = e.permissionOverwrites_) && void 0 !== t ? t : {}, this.position_ = e.position_, this.rateLimitPerUser_ = e.rateLimitPerUser_, this.rtcRegion = e.rtcRegion, this.themeColor = e.themeColor, this.topic_ = e.topic_, this.userLimit_ = e.userLimit_, this.version = e.version, this.videoQualityMode = e.videoQualityMode, this.status = e.status
                }
            }
            class eu extends ea {
                static fromServer(e, t) {
                    var n, i, r, s;
                    let a = {
                        application_id: e.application_id,
                        defaultAutoArchiveDuration: e.default_auto_archive_duration,
                        defaultThreadRateLimitPerUser: e.default_thread_rate_limit_per_user,
                        flags_: e.flags,
                        guild_id: null !== (n = null != t ? t : e.guild_id) && void 0 !== n ? n : null,
                        iconEmoji: J(e.icon_emoji),
                        id: e.id,
                        lastMessageId: e.last_message_id,
                        lastPinTimestamp: e.last_pin_timestamp,
                        memberListId: e.member_list_id,
                        name: null !== (i = e.name) && void 0 !== i ? i : "",
                        nsfw_: null !== (r = e.nsfw) && void 0 !== r && r,
                        parent_id: e.parent_id,
                        permissionOverwrites_: q(e.permission_overwrites),
                        position_: e.position,
                        rateLimitPerUser_: null !== (s = e.rate_limit_per_user) && void 0 !== s ? s : 0,
                        themeColor: e.theme_color,
                        topic_: e.topic,
                        type: null != e.type ? e.type : _.ChannelTypes.GUILD_TEXT,
                        version: e.version
                    };
                    return eT(a)
                }
                constructor(e) {
                    var t;
                    super(e), this.application_id = e.application_id, this.defaultAutoArchiveDuration = e.defaultAutoArchiveDuration, this.defaultThreadRateLimitPerUser = e.defaultThreadRateLimitPerUser, this.flags_ = e.flags_, this.iconEmoji = e.iconEmoji, this.lastMessageId = e.lastMessageId, this.lastPinTimestamp = e.lastPinTimestamp, this.memberListId = e.memberListId, this.nsfw_ = e.nsfw_, this.parent_id = e.parent_id, this.permissionOverwrites_ = null !== (t = e.permissionOverwrites_) && void 0 !== t ? t : {}, this.position_ = e.position_, this.rateLimitPerUser_ = e.rateLimitPerUser_, this.themeColor = e.themeColor, this.topic_ = e.topic_, this.version = e.version
                }
            }
            class ec extends ea {
                static fromServer(e, t) {
                    var n, i, r, s;
                    let a = {
                        availableTags: null != e.available_tags ? Q(e.available_tags) : [],
                        defaultAutoArchiveDuration: e.default_auto_archive_duration,
                        defaultForumLayout: e.default_forum_layout,
                        defaultReactionEmoji: null != e.default_reaction_emoji ? {
                            emojiId: 0 !== e.default_reaction_emoji.emoji_id ? e.default_reaction_emoji.emoji_id : void 0,
                            emojiName: e.default_reaction_emoji.emoji_name
                        } : void 0,
                        defaultSortOrder: e.default_sort_order,
                        defaultThreadRateLimitPerUser: e.default_thread_rate_limit_per_user,
                        flags_: e.flags,
                        guild_id: null !== (n = null != t ? t : e.guild_id) && void 0 !== n ? n : null,
                        iconEmoji: J(e.icon_emoji),
                        id: e.id,
                        lastMessageId: e.last_message_id,
                        lastPinTimestamp: e.last_pin_timestamp,
                        memberListId: e.member_list_id,
                        name: null !== (i = e.name) && void 0 !== i ? i : "",
                        nsfw_: null !== (r = e.nsfw) && void 0 !== r && r,
                        parent_id: e.parent_id,
                        permissionOverwrites_: q(e.permission_overwrites),
                        position_: e.position,
                        rateLimitPerUser_: null !== (s = e.rate_limit_per_user) && void 0 !== s ? s : 0,
                        template: e.template,
                        themeColor: e.theme_color,
                        topic_: e.topic,
                        type: null != e.type ? e.type : _.ChannelTypes.GUILD_TEXT,
                        version: e.version
                    };
                    return (0, o.dangerouslyCast)(a, ec)
                }
                constructor(e) {
                    var t, n;
                    super(e), this.availableTags = null !== (t = e.availableTags) && void 0 !== t ? t : [], this.defaultAutoArchiveDuration = e.defaultAutoArchiveDuration, this.defaultForumLayout = e.defaultForumLayout, this.defaultReactionEmoji = e.defaultReactionEmoji, this.defaultSortOrder = e.defaultSortOrder, this.defaultThreadRateLimitPerUser = e.defaultThreadRateLimitPerUser, this.flags_ = e.flags_, this.iconEmoji = e.iconEmoji, this.lastMessageId = e.lastMessageId, this.lastPinTimestamp = e.lastPinTimestamp, this.memberListId = e.memberListId, this.nsfw_ = e.nsfw_, this.parent_id = e.parent_id, this.permissionOverwrites_ = null !== (n = e.permissionOverwrites_) && void 0 !== n ? n : {}, this.position_ = e.position_, this.rateLimitPerUser_ = e.rateLimitPerUser_, this.template = e.template, this.themeColor = e.themeColor, this.topic_ = e.topic_, this.version = e.version
                }
            }
            class ed extends ea {
                static fromServer(e) {
                    var t, n;
                    let i = {
                        application_id: e.application_id,
                        flags_: e.flags,
                        guild_id: null,
                        icon: e.icon,
                        id: e.id,
                        isMessageRequest: e.is_message_request,
                        isMessageRequestTimestamp: e.is_message_request_timestamp,
                        isSpam: null !== (t = e.is_spam) && void 0 !== t && t,
                        lastMessageId: e.last_message_id,
                        lastPinTimestamp: e.last_pin_timestamp,
                        name: null !== (n = e.name) && void 0 !== n ? n : "",
                        nicks: X(e.nicks),
                        ownerId: e.owner_id,
                        rawRecipients: null != e.recipients ? e.recipients : [],
                        recipients: null != e.recipients ? e.recipients.map(e => e.id) : [],
                        safetyWarnings: e.safety_warnings,
                        type: null != e.type ? e.type : _.ChannelTypes.DM
                    };
                    return (0, o.dangerouslyCast)(i, ed)
                }
                isSystemDM() {
                    let e = this.rawRecipients[0];
                    return this.type === _.ChannelTypes.DM && null != e && !0 === e.system
                }
                getRecipientId() {
                    return this.recipients[0]
                }
                addRecipient(e, t, n) {
                    if (e === n) return this;
                    {
                        var i;
                        let n = this.set("recipients", r.uniq([...null !== (i = this.recipients) && void 0 !== i ? i : [], e]));
                        return null == t ? n : n.set("nicks", {
                            ...n.nicks,
                            [e]: t
                        })
                    }
                }
                removeRecipient(e) {
                    return this.set("recipients", r.without(this.recipients, e))
                }
                constructor(e) {
                    var t, n, i;
                    super(e), this.application_id = e.application_id, this.flags_ = e.flags_, this.icon = e.icon, this.isMessageRequest = e.isMessageRequest, this.isMessageRequestTimestamp = e.isMessageRequestTimestamp, this.isSpam = e.isSpam, this.lastMessageId = e.lastMessageId, this.lastPinTimestamp = e.lastPinTimestamp, this.nicks = e.nicks, this.ownerId = e.ownerId, this.rawRecipients = null !== (t = e.rawRecipients) && void 0 !== t ? t : [], this.recipients = null !== (n = e.recipients) && void 0 !== n ? n : [], this.safetyWarnings = null !== (i = e.safetyWarnings) && void 0 !== i ? i : []
                }
            }
            class e_ extends ed {}
            class eE extends ea {
                static fromServer(e, t) {
                    var n, i, r, s, a;
                    let l = {
                        appliedTags: null !== (n = e.applied_tags) && void 0 !== n ? n : [],
                        bitrate_: e.bitrate,
                        flags_: e.flags,
                        guild_id: null !== (i = null != t ? t : e.guild_id) && void 0 !== i ? i : null,
                        id: e.id,
                        lastMessageId: e.last_message_id,
                        lastPinTimestamp: e.last_pin_timestamp,
                        member: null != e.member ? {
                            flags: e.member.flags,
                            muted: e.member.muted,
                            muteConfig: e.member.mute_config,
                            joinTimestamp: e.member.join_timestamp
                        } : void 0,
                        memberCount: e.member_count,
                        memberIdsPreview: e.member_ids_preview,
                        messageCount: e.message_count,
                        name: null !== (r = e.name) && void 0 !== r ? r : "",
                        nsfw_: null !== (s = e.nsfw) && void 0 !== s && s,
                        ownerId: e.owner_id,
                        parent_id: e.parent_id,
                        parentChannelThreadType: e.parentChannelThreadType,
                        rateLimitPerUser_: e.rate_limit_per_user,
                        rtcRegion: e.rtc_region,
                        threadMetadata: null != e.thread_metadata ? {
                            archived: e.thread_metadata.archived,
                            autoArchiveDuration: e.thread_metadata.auto_archive_duration,
                            archiveTimestamp: e.thread_metadata.archive_timestamp,
                            createTimestamp: e.thread_metadata.create_timestamp,
                            locked: e.thread_metadata.locked,
                            invitable: null === (a = e.thread_metadata.invitable) || void 0 === a || a
                        } : void 0,
                        totalMessageSent: e.total_message_sent,
                        type: null != e.type ? e.type : _.ChannelTypes.PUBLIC_THREAD,
                        userLimit_: e.user_limit,
                        videoQualityMode: e.video_quality_mode
                    };
                    return (0, o.dangerouslyCast)(l, eE)
                }
                constructor(e) {
                    var t;
                    super(e), this.appliedTags = null !== (t = e.appliedTags) && void 0 !== t ? t : [], this.bitrate_ = e.bitrate_, this.flags_ = e.flags_, this.lastMessageId = e.lastMessageId, this.lastPinTimestamp = e.lastPinTimestamp, this.member = e.member, this.memberCount = e.memberCount, this.memberIdsPreview = e.memberIdsPreview, this.messageCount = e.messageCount, this.nsfw_ = e.nsfw_, this.ownerId = e.ownerId, this.parent_id = e.parent_id, this.parentChannelThreadType = e.parentChannelThreadType, this.rateLimitPerUser_ = e.rateLimitPerUser_, this.rtcRegion = e.rtcRegion, this.threadMetadata = e.threadMetadata, this.userLimit_ = e.userLimit_, this.videoQualityMode = e.videoQualityMode
                }
            }
            let ef = {
                [_.ChannelTypes.DM]: ed.fromServer,
                [_.ChannelTypes.GROUP_DM]: ed.fromServer,
                [_.ChannelTypes.GUILD_TEXT]: eu.fromServer,
                [_.ChannelTypes.GUILD_VOICE]: eo.fromServer,
                [_.ChannelTypes.GUILD_STAGE_VOICE]: eo.fromServer,
                [_.ChannelTypes.GUILD_CATEGORY]: eu.fromServer,
                [_.ChannelTypes.GUILD_ANNOUNCEMENT]: eu.fromServer,
                [_.ChannelTypes.GUILD_STORE]: eu.fromServer,
                [_.ChannelTypes.ANNOUNCEMENT_THREAD]: eE.fromServer,
                [_.ChannelTypes.PUBLIC_THREAD]: eE.fromServer,
                [_.ChannelTypes.PRIVATE_THREAD]: eE.fromServer,
                [_.ChannelTypes.GUILD_DIRECTORY]: eu.fromServer,
                [_.ChannelTypes.GUILD_FORUM]: ec.fromServer,
                [_.ChannelTypes.GUILD_MEDIA]: ec.fromServer
            };

            function ep(e, t) {
                var n, i;
                let r = null !== (i = ef[null !== (n = e.type) && void 0 !== n ? n : _.ChannelTypes.GUILD_TEXT]) && void 0 !== i ? i : el.fromServer;
                return r(e, t)
            }

            function eh(e) {
                return eI(e)
            }
            let eS = {
                [_.ChannelTypes.DM]: e_,
                [_.ChannelTypes.GROUP_DM]: class e extends ed {},
                [_.ChannelTypes.GUILD_TEXT]: class e extends eu {},
                [_.ChannelTypes.GUILD_VOICE]: class e extends eo {},
                [_.ChannelTypes.GUILD_STAGE_VOICE]: class e extends eo {},
                [_.ChannelTypes.GUILD_CATEGORY]: class e extends eu {},
                [_.ChannelTypes.GUILD_ANNOUNCEMENT]: class e extends eu {},
                [_.ChannelTypes.GUILD_STORE]: class e extends eu {},
                [_.ChannelTypes.ANNOUNCEMENT_THREAD]: eE,
                [_.ChannelTypes.PUBLIC_THREAD]: eE,
                [_.ChannelTypes.PRIVATE_THREAD]: eE,
                [_.ChannelTypes.GUILD_DIRECTORY]: class e extends eu {},
                [_.ChannelTypes.GUILD_FORUM]: ec,
                [_.ChannelTypes.GUILD_MEDIA]: ec
            };

            function eT(e) {
                var t, n;
                let i = null !== (n = eS[null !== (t = e.type) && void 0 !== t ? t : _.ChannelTypes.GUILD_TEXT]) && void 0 !== n ? n : el;
                return (0, o.dangerouslyCast)(e, i)
            }

            function eI(e) {
                var t, n;
                let i = null !== (n = eS[null !== (t = e.type) && void 0 !== t ? t : _.ChannelTypes.GUILD_TEXT]) && void 0 !== n ? n : el;
                return new i(er(e))
            }
        },
        331082: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("666038");
            class r extends i.default {
                static createFromServer(e) {
                    return new r(e)
                }
                constructor(e) {
                    super(), this.id = e.id, this.name = e.name
                }
            }
        },
        984273: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("666038"),
                r = n("719923"),
                s = n("49111");
            class a extends i.default {
                static createFromServer(e) {
                    var t, n;
                    return new a({
                        id: e.id,
                        skuId: e.sku_id,
                        applicationId: e.application_id,
                        userId: e.user_id,
                        gifterId: e.gifter_user_id,
                        type: e.type,
                        branches: null !== (t = e.branches) && void 0 !== t ? t : [],
                        startsAt: null != e.starts_at ? new Date(e.starts_at) : null,
                        endsAt: null != e.ends_at ? new Date(e.ends_at) : null,
                        subscriptionId: e.subscription_id,
                        subscriptionPlanId: null != e.subscription_plan ? e.subscription_plan.id : null,
                        parentId: null != e.parent_id ? e.parent_id : null,
                        consumed: null != e.consumed ? e.consumed : null,
                        giftCodeBatchId: null !== (n = e.gift_code_batch_id) && void 0 !== n ? n : null,
                        giftStyle: e.gift_style,
                        guildId: e.guild_id,
                        deleted: e.deleted
                    })
                }
                get isGiftable() {
                    return this.type === s.EntitlementTypes.USER_GIFT && null == this.gifterId
                }
                isValid(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                    if (this.isGiftable || this.deleted) return !1;
                    if (this.type === s.EntitlementTypes.PREMIUM_SUBSCRIPTION) {
                        let n = t.get(this.skuId);
                        if (null != n && !n.premium || !r.default.canInstallPremiumApplications(e)) return !1
                    }
                    let i = new Date;
                    if (null != this.startsAt && i < this.startsAt || null != this.endsAt && i >= this.endsAt) return !1;
                    if (null != n) {
                        if (0 === this.branches.length) {
                            if (this.applicationId !== n) return !1
                        } else if (!this.branches.includes(n)) return !1
                    }
                    return !0
                }
                constructor(e) {
                    super(), this.id = e.id, this.skuId = e.skuId, this.applicationId = e.applicationId, this.userId = e.userId, this.gifterId = e.gifterId, this.type = e.type, this.branches = e.branches, this.startsAt = e.startsAt, this.endsAt = e.endsAt, this.subscriptionId = e.subscriptionId, this.subscriptionPlanId = e.subscriptionPlanId, this.parentId = e.parentId, this.consumed = e.consumed, this.giftCodeBatchId = e.giftCodeBatchId, this.giftStyle = e.giftStyle, this.guildId = e.guildId, this.deleted = e.deleted
                }
            }
        },
        813006: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("666038"),
                r = n("315102"),
                s = n("605136"),
                a = n("299039"),
                l = n("159885"),
                o = n("49111"),
                u = n("958706"),
                c = n("646718");
            class d extends i.default {
                getSafetyAlertsChannelId() {
                    var e;
                    return null !== (e = this.safetyAlertsChannelId) && void 0 !== e ? e : this.publicUpdatesChannelId
                }
                getIconURL(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    return r.default.getGuildIconURL({
                        id: this.id,
                        size: e,
                        icon: this.icon,
                        canAnimate: t
                    })
                }
                getIconSource(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    return r.default.getAnimatableSourceWithFallback(t, t => r.default.getGuildIconSource({
                        id: this.id,
                        size: e,
                        icon: this.icon,
                        canAnimate: t
                    }))
                }
                getApplicationId() {
                    return this.application_id
                }
                toString() {
                    var e;
                    return null !== (e = this.name) && void 0 !== e ? e : ""
                }
                get acronym() {
                    return (0, l.getAcronym)(this.name)
                }
                isOwner(e) {
                    let t = "string" == typeof e ? e : null != e ? e.id : null;
                    return this.ownerId === t
                }
                isOwnerWithRequiredMfaLevel(e) {
                    return (!!e.mfaEnabled || this.mfaLevel !== o.MFALevels.ELEVATED) && this.isOwner(e)
                }
                isNew() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 7,
                        t = a.default.extractTimestamp(this.id);
                    return Date.now() - t < 864e5 * e
                }
                isLurker() {
                    return null == this.joinedAt
                }
                hasFeature(e) {
                    return this.features.has(e)
                }
                getRole(e) {
                    return this.roles[e]
                }
                getMaxEmojiSlots() {
                    return Math.max(this.hasFeature(o.GuildFeatures.MORE_EMOJI) ? 200 : u.EMOJI_MAX_SLOTS, c.BoostedGuildFeatures[this.premiumTier].limits.emoji)
                }
                getMaxRoleSubscriptionEmojiSlots() {
                    return 25
                }
                getMaxSoundboardSlots() {
                    return c.BoostedGuildFeatures[this.premiumTier].limits.soundboardSounds
                }
                isCommunity() {
                    return this.hasFeature(o.GuildFeatures.COMMUNITY)
                }
                hasVerificationGate() {
                    return this.hasFeature(o.GuildFeatures.MEMBER_VERIFICATION_GATE_ENABLED) && this.hasFeature(o.GuildFeatures.COMMUNITY)
                }
                hasCommunityInfoSubheader() {
                    return this.hasFeature(o.GuildFeatures.COMMUNITY) && this.hasFeature(o.GuildFeatures.DISCOVERABLE)
                }
                canHaveRaidActivityAlerts() {
                    return !this.hasFeature(o.GuildFeatures.COMMUNITY) && this.hasFeature(o.GuildFeatures.NON_COMMUNITY_RAID_ALERTS) || this.hasFeature(o.GuildFeatures.COMMUNITY) && !this.hasFeature(o.GuildFeatures.RAID_ALERTS_DISABLED)
                }
                upsertRole(e) {
                    return this.update("roles", t => (t[e.id] = e, (0, s.sortClientRoles)(this.id, Object.values(t))))
                }
                deleteRole(e) {
                    return this.update("roles", t => (delete t[e], t))
                }
                updateJoinedAt(e) {
                    return this.set("joinedAt", "string" == typeof e ? new Date(e) : e)
                }
                constructor(e) {
                    var t, n, i, r;
                    super();
                    let s = new Set(Array.from(e.features || []));
                    this.id = e.id, this.name = e.name || "", this.description = e.description || null, this.ownerId = e.ownerId || null, this.icon = e.icon || null, this.splash = e.splash || null, this.banner = e.banner || null, this.homeHeader = e.homeHeader || null, this.features = s, this.preferredLocale = e.preferredLocale || "en-US", this.roles = e.roles || {}, this.afkChannelId = e.afkChannelId || null, this.afkTimeout = e.afkTimeout, this.systemChannelId = e.systemChannelId || null, this.verificationLevel = e.verificationLevel || o.VerificationLevels.NONE, this.joinedAt = null != e.joinedAt ? new Date(e.joinedAt) : e.joinedAt, this.defaultMessageNotifications = e.defaultMessageNotifications || o.UserNotificationSettings.ALL_MESSAGES, this.mfaLevel = e.mfaLevel || o.MFALevels.NONE, this.application_id = e.application_id || null, this.explicitContentFilter = e.explicitContentFilter || o.GuildExplicitContentFilterTypes.DISABLED, this.vanityURLCode = e.vanityURLCode || void 0, this.premiumTier = e.premiumTier || o.BoostedGuildTiers.NONE, this.premiumSubscriberCount = e.premiumSubscriberCount || 0, this.premiumProgressBarEnabled = e.premiumProgressBarEnabled || !1, this.systemChannelFlags = e.systemChannelFlags, this.discoverySplash = e.discoverySplash || null, this.rulesChannelId = e.rulesChannelId || null, this.safetyAlertsChannelId = e.safetyAlertsChannelId || null, this.publicUpdatesChannelId = e.publicUpdatesChannelId || null, this.maxStageVideoChannelUsers = e.maxStageVideoChannelUsers || -1, this.maxVideoChannelUsers = e.maxVideoChannelUsers || -1, this.maxMembers = e.maxMembers || -1, this.nsfwLevel = null !== (t = e.nsfwLevel) && void 0 !== t ? t : o.GuildNSFWContentLevel.DEFAULT, this.applicationCommandCounts = null !== (n = e.applicationCommandCounts) && void 0 !== n ? n : {}, this.hubType = e.hubType, this.latestOnboardingQuestionId = null !== (i = e.latestOnboardingQuestionId) && void 0 !== i ? i : null, this.inventorySettings = null !== (r = e.inventorySettings) && void 0 !== r ? r : null
                }
            }
        },
        370999: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("377849"),
                r = n.n(i),
                s = n("666038"),
                a = n("546463"),
                l = n("568734"),
                o = n("984273"),
                u = n("49111");
            class c extends s.default {
                static createFromServer(e) {
                    return new c({
                        id: e.application.id,
                        branchId: e.branch_id,
                        entitlements: null != e.entitlements ? e.entitlements.map(e => o.default.createFromServer(e)) : [],
                        branch: e.branch,
                        flags: e.flags,
                        createdAt: e.created_at,
                        sku: {
                            id: e.sku.id,
                            type: e.sku.type,
                            premium: e.sku.premium,
                            preorderReleaseAt: null != e.sku.preorder_release_at ? r(e.sku.preorder_release_at) : null,
                            preorderApproximateReleaseDate: null != e.sku.preorder_approximate_release_date ? e.sku.preorder_approximate_release_date : null
                        }
                    })
                }
                static createForTestMode(e) {
                    return new c({
                        id: e.id,
                        entitlements: [],
                        branchId: e.branch.id,
                        branch: e.branch,
                        flags: u.LibraryApplicationFlags.ENTITLED,
                        createdAt: e.branch.created_at,
                        sku: {
                            id: e.skuId,
                            type: u.SKUTypes.DURABLE_PRIMARY,
                            premium: !1
                        },
                        isTestMode: !0
                    })
                }
                getFlags() {
                    return this.flags
                }
                hasFlag(e) {
                    return l.hasFlag(this.flags, e)
                }
                isHidden() {
                    return this.hasFlag(u.LibraryApplicationFlags.HIDDEN)
                }
                isOverlayEnabled() {
                    return !this.hasFlag(u.LibraryApplicationFlags.OVERLAY_DISABLED)
                }
                isMasterBranch() {
                    return this.branchId === this.id
                }
                isDiscordApplication() {
                    return !0
                }
                isEntitled(e, t) {
                    return !!this.isTestMode || this.entitlements.some(n => n.isValid(e, t, this.branchId))
                }
                isPreorder() {
                    return null != this.sku.preorderReleaseAt || null != this.sku.preorderApproximateReleaseDate
                }
                getDistributor() {
                    return u.Distributors.DISCORD
                }
                getBranchName() {
                    return null != this.branch ? this.branch.name : "master"
                }
                getBranchedName(e) {
                    return this.isMasterBranch() || null == this.branch ? e.name : "".concat(e.name, " (").concat(this.branch.name, ")")
                }
                getSkuIdForAnalytics() {
                    return this.sku.id
                }
                getAnalyticsData() {
                    let e = a.default.getGame(this.id);
                    return {
                        application_id: null != e ? e.id : null,
                        application_name: null != e ? e.name : null,
                        sku_id: this.getSkuIdForAnalytics(),
                        launcher_platform: this.getDistributor()
                    }
                }
                constructor(e) {
                    super(), this.id = e.id, this.createdAt = e.createdAt, this.flags = e.flags, this.branchId = e.branchId, this.entitlements = e.entitlements, this.branch = e.branch, this.sku = e.sku, this.isTestMode = e.isTestMode || !1
                }
            }
        },
        519023: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                LocalizedPricingPromoRecord: function() {
                    return r
                }
            });
            var i = n("666038");
            class r extends i.default {
                static createFromServer(e) {
                    var t, n;
                    return new r({
                        planId: e.plan_id,
                        countryCode: e.country_code,
                        amount: null === (t = e.price) || void 0 === t ? void 0 : t.amount,
                        currency: null === (n = e.price) || void 0 === n ? void 0 : n.currency,
                        paymentSourceTypes: e.payment_source_types
                    })
                }
                constructor(e) {
                    super(), this.planId = e.planId, this.countryCode = e.countryCode, this.amount = e.amount, this.currency = e.currency, this.paymentSourceTypes = e.paymentSourceTypes
                }
            }
        },
        865146: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                },
                CreditCardSourceRecord: function() {
                    return o
                },
                PaypalSourceRecord: function() {
                    return u
                },
                SofortSourceRecord: function() {
                    return c
                },
                GiropaySourceRecord: function() {
                    return d
                },
                Przelewy24SourceRecord: function() {
                    return _
                },
                EPSSourceRecord: function() {
                    return E
                },
                IdealSourceRecord: function() {
                    return f
                },
                PaysafeSourceRecord: function() {
                    return p
                },
                GcashSourceRecord: function() {
                    return h
                },
                GrabPayMySourceRecord: function() {
                    return S
                },
                MomoWalletSourceRecord: function() {
                    return T
                },
                VenmoSourceRecord: function() {
                    return I
                },
                KaKaoPaySourceRecord: function() {
                    return m
                },
                GoPayWalletSourceRecord: function() {
                    return g
                },
                BancontactSourceRecord: function() {
                    return A
                },
                CashAppSourceRecord: function() {
                    return C
                }
            });
            var i = n("666038"),
                r = n("568734"),
                s = n("449008"),
                a = n("49111");
            class l extends i.default {
                static createFromServer(e) {
                    var t;
                    let n = null !== (t = e.billing_address) && void 0 !== t ? t : {},
                        i = {
                            id: e.id,
                            type: e.type,
                            paymentGateway: e.payment_gateway,
                            invalid: e.invalid,
                            isDefault: e.default,
                            billingAddress: {
                                name: n.name,
                                line1: n.line_1,
                                line2: n.line_2,
                                city: n.city,
                                postalCode: n.postal_code,
                                state: n.state,
                                country: n.country
                            },
                            country: e.country,
                            flags: e.flags
                        };
                    switch (e.type) {
                        case a.PaymentSourceTypes.CARD:
                            let r = new o({
                                ...i,
                                brand: e.brand,
                                last4: e.last_4,
                                expiresMonth: e.expires_month,
                                expiresYear: e.expires_year
                            });
                            return r;
                        case a.PaymentSourceTypes.PAYPAL:
                            return new u({
                                ...i,
                                email: e.email
                            });
                        case a.PaymentSourceTypes.VENMO:
                            return new I({
                                ...i,
                                username: e.username
                            });
                        case a.PaymentSourceTypes.SEPA_DEBIT:
                        case a.PaymentSourceTypes.SOFORT:
                            return new c({
                                ...i,
                                email: e.email
                            });
                        case a.PaymentSourceTypes.GIROPAY:
                            return new d({
                                ...i
                            });
                        case a.PaymentSourceTypes.PRZELEWY24:
                            return new _({
                                ...i,
                                email: e.email,
                                bank: e.bank
                            });
                        case a.PaymentSourceTypes.EPS:
                            return new E({
                                ...i,
                                bank: e.bank
                            });
                        case a.PaymentSourceTypes.PAYSAFE_CARD:
                            return new p({
                                ...i
                            });
                        case a.PaymentSourceTypes.GCASH:
                            return new h({
                                ...i
                            });
                        case a.PaymentSourceTypes.GRABPAY_MY:
                            return new S({
                                ...i
                            });
                        case a.PaymentSourceTypes.MOMO_WALLET:
                            return new T({
                                ...i
                            });
                        case a.PaymentSourceTypes.KAKAOPAY:
                            return new m({
                                ...i
                            });
                        case a.PaymentSourceTypes.GOPAY_WALLET:
                            return new g({
                                ...i
                            });
                        case a.PaymentSourceTypes.BANCONTACT:
                            return new A({
                                ...i
                            });
                        case a.PaymentSourceTypes.IDEAL:
                            return new f({
                                ...i,
                                bank: e.bank
                            });
                        case a.PaymentSourceTypes.CASH_APP:
                            return new C({
                                ...i,
                                username: e.username
                            });
                        default:
                            (0, s.assertNever)(e)
                    }
                }
                static createFromSerialized(e) {
                    let t = e.type;
                    switch (t) {
                        case a.PaymentSourceTypes.CARD:
                            return new o(e);
                        case a.PaymentSourceTypes.PAYPAL:
                            return new u(e);
                        case a.PaymentSourceTypes.SOFORT:
                        case a.PaymentSourceTypes.SEPA_DEBIT:
                            return new c(e);
                        case a.PaymentSourceTypes.GIROPAY:
                            return new d(e);
                        case a.PaymentSourceTypes.PRZELEWY24:
                            return new _(e);
                        case a.PaymentSourceTypes.PAYSAFE_CARD:
                            return new p(e);
                        case a.PaymentSourceTypes.GCASH:
                            return new h(e);
                        case a.PaymentSourceTypes.GRABPAY_MY:
                            return new S(e);
                        case a.PaymentSourceTypes.MOMO_WALLET:
                            return new T(e);
                        case a.PaymentSourceTypes.VENMO:
                            return new I(e);
                        case a.PaymentSourceTypes.KAKAOPAY:
                            return new m(e);
                        case a.PaymentSourceTypes.GOPAY_WALLET:
                            return new g(e);
                        case a.PaymentSourceTypes.BANCONTACT:
                            return new A(e);
                        case a.PaymentSourceTypes.EPS:
                            return new E(e);
                        case a.PaymentSourceTypes.IDEAL:
                            return new f(e);
                        case a.PaymentSourceTypes.CASH_APP:
                            return new C(e);
                        default:
                            (0, s.assertNever)(t)
                    }
                }
                hasFlag(e) {
                    return (0, r.hasFlag)(this.flags, e)
                }
                get paymentMethodCountry() {
                    return null != this.country && "" !== this.country ? this.country : this.billingAddress.country
                }
                constructor(e) {
                    var t, n, i, r;
                    if (super(), !Object.values(a.PaymentSourceTypes).includes(e.type)) throw Error("Unrecognized payment source type ".concat(e.type));
                    this.id = e.id, this.type = e.type, this.paymentGateway = e.paymentGateway, this.invalid = null !== (t = e.invalid) && void 0 !== t && t, this.billingAddress = null !== (n = e.billingAddress) && void 0 !== n ? n : {}, this.isDefault = e.isDefault, this.flags = null !== (i = e.flags) && void 0 !== i ? i : 0, this.country = null !== (r = e.country) && void 0 !== r ? r : ""
                }
            }
            class o extends l {
                constructor(e) {
                    var t, n, i, r;
                    if (super(e), e.type !== a.PaymentSourceTypes.CARD) throw Error("Cannot instantiate CreditCardSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.CARD));
                    this.brand = null !== (t = e.brand) && void 0 !== t ? t : "", this.last4 = null !== (n = e.last4) && void 0 !== n ? n : "", this.expiresMonth = null !== (i = e.expiresMonth) && void 0 !== i ? i : 0, this.expiresYear = null !== (r = e.expiresYear) && void 0 !== r ? r : 0
                }
            }
            class u extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.PAYPAL) throw Error("Cannot instantiate PaypalSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.PAYPAL));
                    this.email = e.email || ""
                }
            }
            class c extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.SOFORT && e.type !== a.PaymentSourceTypes.SEPA_DEBIT) throw Error("Cannot instantiate SofortSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.SOFORT, " or ") + a.PaymentSourceTypes.SEPA_DEBIT);
                    this.email = e.email || ""
                }
            }
            class d extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.GIROPAY) throw Error("Cannot instantiate GiropaySourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.GIROPAY))
                }
            }
            class _ extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.PRZELEWY24) throw Error("Cannot instantiate Przelewy24SourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.PRZELEWY24));
                    this.email = e.email || "", this.bank = e.bank
                }
            }
            class E extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.EPS) throw Error("Cannot instantiate EPSSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.EPS));
                    this.bank = e.bank
                }
            }
            class f extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.IDEAL) throw Error("Cannot instantiate IdealSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.IDEAL));
                    this.bank = e.bank
                }
            }
            class p extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.PAYSAFE_CARD) throw Error("Cannot instantiate PaysafeSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.PAYSAFE_CARD))
                }
            }
            class h extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.GCASH) throw Error("Cannot instantiate GcashSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.GCASH))
                }
            }
            class S extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.GRABPAY_MY) throw Error("Cannot instantiate GrabPayMySourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.GRABPAY_MY))
                }
            }
            class T extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.MOMO_WALLET) throw Error("Cannot instantiate MomoWalletSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.MOMO_WALLET))
                }
            }
            class I extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.VENMO) throw Error("Cannot instantiate VenmoSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.VENMO));
                    this.username = e.username || ""
                }
            }
            class m extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.KAKAOPAY) throw Error("Cannot instantiate KaKaoPaySourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.KAKAOPAY))
                }
            }
            class g extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.GOPAY_WALLET) throw Error("Cannot instantiate GoPayWalletSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.GOPAY_WALLET))
                }
            }
            class A extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.BANCONTACT) throw Error("Cannot instantiate BancontactSourceRecord with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.BANCONTACT))
                }
            }
            class C extends l {
                constructor(e) {
                    if (super(e), e.type !== a.PaymentSourceTypes.CASH_APP) throw Error("Cannot instantiate Cashapp with type: ".concat(e.type, ", must be ").concat(a.PaymentSourceTypes.CASH_APP));
                    this.username = e.username || ""
                }
            }
        },
        137406: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("377849"),
                r = n.n(i),
                s = n("666038"),
                a = n("568734"),
                l = n("653047"),
                o = n("49111");
            let u = ["500428425362931713", "451550535720501248", "471376328319303681", "466696214818193408"];
            class c extends s.default {
                static createFromServer(e) {
                    var t, n, i, s, a;
                    let {
                        price: o
                    } = e;
                    return new c({
                        id: e.id,
                        type: e.type,
                        applicationId: e.application_id,
                        application: null != e.application ? l.default.createFromServer(e.application) : null,
                        productLine: e.product_line,
                        name: null !== (t = e.name) && void 0 !== t ? t : "",
                        releaseDate: null != e.release_date ? r(e.release_date) : null,
                        preorderReleaseAt: null != e.preorder_release_at ? r(e.preorder_release_at) : null,
                        preorderApproximateReleaseDate: e.preorder_approximate_release_date,
                        summary: e.summary,
                        features: new Set(e.features),
                        genres: new Set(e.genres),
                        dependentSkuId: e.dependent_sku_id,
                        manifests: e.manifests,
                        availableRegions: e.available_regions,
                        accessType: e.access_type,
                        systemRequirements: e.system_requirements,
                        contentRating: e.content_rating,
                        contentRatingAgency: e.content_rating_agency,
                        legalNotice: e.legal_notice,
                        price: null != o ? {
                            amount: o.amount,
                            currency: o.currency,
                            saleAmount: o.sale_amount,
                            salePercentage: o.sale_percentage,
                            premium: o.premium
                        } : null,
                        premium: null !== (n = e.premium) && void 0 !== n && n,
                        showAgeGate: e.show_age_gate || !1,
                        restricted: e.restricted || !1,
                        slug: null !== (i = e.slug) && void 0 !== i ? i : "",
                        exclusive: e.exclusive || !1,
                        locales: null !== (s = e.locales) && void 0 !== s ? s : ["en-US"],
                        flags: e.flags,
                        externalPurchaseUrl: e.external_purchase_url,
                        deleted: null !== (a = e.deleted) && void 0 !== a && a
                    })
                }
                get supportedOperatingSystems() {
                    let e = null != this.systemRequirements ? Object.keys(this.systemRequirements) : [];
                    return e.length > 0 ? e : [o.OperatingSystems.WINDOWS]
                }
                get isOnSale() {
                    return null != this.price && null != this.price.saleAmount
                }
                isGiftable() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.price;
                    return this.type === o.SKUTypes.DURABLE_PRIMARY && this.available && this.requiresPayment && null != e && o.GIFTABLE_CURRENCIES.has(e.currency) && null == this.externalPurchaseUrl
                }
                getPrice() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                        {
                            price: n
                        } = this;
                    if (null == n) return null;
                    if (null != e) {
                        var i;
                        let t = null === (i = n.premium) || void 0 === i ? void 0 : i[e];
                        if (null != t) return {
                            amount: t.amount,
                            currency: n.currency
                        }
                    }
                    return t && null != n.saleAmount ? {
                        amount: n.saleAmount,
                        currency: n.currency
                    } : {
                        amount: n.amount,
                        currency: n.currency
                    }
                }
                getDisplaySalePercentage() {
                    return null == this.price || null == this.price.salePercentage ? null : "-".concat(this.price.salePercentage, "%")
                }
                get requiresPayment() {
                    let e = this.getPrice();
                    return !this.premium && null != e && e.amount > 0
                }
                get isTheGameAwardsWinner() {
                    return u.includes(this.id)
                }
                get available() {
                    return (0, a.hasFlag)(this.flags, o.SKUFlags.AVAILABLE) || null != this.externalPurchaseUrl
                }
                isAvailableForDistribution() {
                    return this.available && null != this.getPrice() && null == this.externalPurchaseUrl && (!this.premium || (0, a.hasFlag)(this.flags, o.SKUFlags.PREMIUM_AND_DISTRIBUTION))
                }
                isAvailable() {
                    return (0, a.hasFlag)(this.flags, o.SKUFlags.AVAILABLE)
                }
                isPremiumPerk() {
                    return this.premium && ((0, a.hasFlag)(this.flags, o.SKUFlags.PREMIUM_PURCHASE) || (0, a.hasFlag)(this.flags, o.SKUFlags.PREMIUM_AND_DISTRIBUTION))
                }
                hasFeature(e) {
                    return this.features.has(e)
                }
                isPreorder() {
                    return null != this.preorderReleaseAt || null != this.preorderApproximateReleaseDate
                }
                constructor(e) {
                    super(), this.id = e.id, this.type = e.type, this.applicationId = e.applicationId, this.application = e.application, this.productLine = e.productLine, this.name = e.name, this.preorderReleaseAt = e.preorderReleaseAt, this.preorderApproximateReleaseDate = e.preorderApproximateReleaseDate, this.releaseDate = e.releaseDate, this.summary = e.summary, this.features = e.features, this.genres = e.genres, this.dependentSkuId = e.dependentSkuId, this.manifests = e.manifests, this.availableRegions = e.availableRegions, this.accessType = e.accessType, this.systemRequirements = e.systemRequirements, this.contentRating = e.contentRating, this.contentRatingAgency = e.contentRatingAgency, this.legalNotice = e.legalNotice, this.price = e.price, this.premium = e.premium, this.showAgeGate = e.showAgeGate, this.restricted = e.restricted, this.slug = e.slug, this.exclusive = e.exclusive, this.locales = e.locales, this.flags = e.flags, this.externalPurchaseUrl = e.externalPurchaseUrl || null, this.deleted = e.deleted
                }
            }
        },
        195358: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("666038"),
                r = n("643619");
            class s extends i.default {
                static createInvoiceFromServer(e) {
                    return new s({
                        id: e.id,
                        invoiceItems: e.invoice_items.map(r.createInvoiceItemFromServer),
                        total: e.total,
                        subtotal: e.subtotal,
                        currency: e.currency,
                        tax: e.tax,
                        taxInclusive: e.tax_inclusive,
                        subscriptionPeriodStart: new Date(e.subscription_period_start),
                        subscriptionPeriodEnd: new Date(e.subscription_period_end),
                        status: e.status
                    })
                }
                constructor(e) {
                    super(), this.id = e.id, this.invoiceItems = e.invoiceItems, this.total = e.total, this.subtotal = e.subtotal, this.currency = e.currency, this.tax = e.tax, this.taxInclusive = e.taxInclusive, this.subscriptionPeriodStart = e.subscriptionPeriodStart, this.subscriptionPeriodEnd = e.subscriptionPeriodEnd, this.status = e.status
                }
            }
        },
        797647: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getPriceFromServer: function() {
                    return l
                },
                isNoneSubscription: function() {
                    return o
                },
                default: function() {
                    return u
                }
            });
            var i = n("666038"),
                r = n("49111"),
                s = n("646718");
            class a extends i.default {
                static createFromServer(e) {
                    let t = {};
                    null != e.prices && (t = Object.keys(e.prices).reduce((t, n) => {
                        if (null == e.prices) return t;
                        let i = e.prices[n];
                        return t[n] = {
                            countryPrices: {
                                countryCode: i.country_prices.country_code,
                                prices: i.country_prices.prices.map(t => l(t, e.tax_inclusive))
                            },
                            paymentSourcePrices: Object.entries(i.payment_source_prices).reduce((t, n) => {
                                let [i, r] = n;
                                return t[i] = r.map(t => l(t, e.tax_inclusive)), t
                            }, {})
                        }, t
                    }, {}));
                    let n = {
                        id: e.id,
                        name: e.name,
                        interval: e.interval,
                        intervalCount: e.interval_count,
                        taxInclusive: e.tax_inclusive,
                        skuId: e.sku_id,
                        currency: e.currency,
                        price: e.price,
                        prices: t,
                        premiumUserPrice: e.discount_price
                    };
                    return null != e.fallback_price && 0 !== e.fallback_price && Object.assign(n, {
                        fallbackPrice: e.fallback_price,
                        fallbackCurrency: e.fallback_currency,
                        fallbackPremiumUserPrice: e.fallback_discount_price
                    }), new a(n)
                }
                get premiumSubscriptionType() {
                    switch (this.skuId) {
                        case s.PremiumSubscriptionSKUs.LEGACY:
                        case s.PremiumSubscriptionSKUs.TIER_2:
                            return s.PremiumTypes.TIER_2;
                        case s.PremiumSubscriptionSKUs.TIER_1:
                            return s.PremiumTypes.TIER_1;
                        case s.PremiumSubscriptionSKUs.TIER_0:
                            return s.PremiumTypes.TIER_0;
                        default:
                            return null
                    }
                }
                get isGiftableCurrency() {
                    return r.GIFTABLE_CURRENCIES.has(this.currency)
                }
                get giftPrice() {
                    if (this.isGiftableCurrency) return this.price;
                    if ("number" == typeof this.fallbackPrice) return this.fallbackPrice;
                    throw Error("Missing fallback price for non-giftable currency")
                }
                get giftCurrency() {
                    if (this.isGiftableCurrency) return this.currency;
                    if ("string" == typeof this.fallbackCurrency) return this.fallbackCurrency;
                    throw Error("Missing fallback currency for non-giftable currency")
                }
                get giftPremiumUserPrice() {
                    return this.isGiftableCurrency ? this.premiumUserPrice : this.fallbackPremiumUserPrice
                }
                getPrice() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    return e ? this.giftPrice : this.price
                }
                getCurrency() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    return e ? this.giftCurrency : this.currency
                }
                getPremiumUserPrice() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    return e ? this.giftPremiumUserPrice : this.premiumUserPrice
                }
                constructor(e) {
                    super(), this.id = e.id, this.name = e.name, this.interval = e.interval, this.intervalCount = e.intervalCount, this.taxInclusive = e.taxInclusive, this.skuId = e.skuId, this.currency = e.currency, this.price = e.price, this.premiumUserPrice = e.premiumUserPrice, this.prices = e.prices, e.fallbackPrice && (this.fallbackPrice = e.fallbackPrice, this.fallbackCurrency = e.fallbackCurrency, this.fallbackPremiumUserPrice = e.fallbackPremiumUserPrice)
                }
            }

            function l(e, t) {
                return {
                    amount: e.amount,
                    currency: e.currency,
                    tax: 0,
                    taxInclusive: t
                }
            }

            function o(e) {
                return [s.SubscriptionPlans.NONE_MONTH, s.SubscriptionPlans.NONE_3_MONTH, s.SubscriptionPlans.NONE_6_MONTH, s.SubscriptionPlans.NONE_YEAR].includes(e)
            }
            var u = a
        },
        388290: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SubscriptionRecord: function() {
                    return _
                },
                default: function() {
                    return E
                }
            });
            var i = n("161179"),
                r = n.n(i),
                s = n("666038"),
                a = n("240577"),
                l = n("773336"),
                o = n("195358"),
                u = n("49111"),
                c = n("646718");

            function d(e) {
                return {
                    id: e.id,
                    planId: e.plan_id,
                    quantity: e.quantity
                }
            }
            class _ extends s.default {
                static createFromServer(e) {
                    return new _({
                        id: e.id,
                        type: e.type,
                        createdAt: new Date(e.created_at),
                        canceledAt: null != e.canceled_at ? new Date(e.canceled_at) : null,
                        currentPeriodStart: new Date(e.current_period_start),
                        currentPeriodEnd: new Date(e.current_period_end),
                        status: e.status,
                        paymentSourceId: e.payment_source_id,
                        paymentGateway: e.payment_gateway,
                        paymentGatewayPlanId: e.payment_gateway_plan_id,
                        paymentGatewaySubscriptionId: e.payment_gateway_subscription_id,
                        trialId: e.trial_id,
                        trialEndsAt: e.trial_ends_at,
                        items: e.items.map(d),
                        renewalMutations: null != e.renewal_mutations ? {
                            items: e.renewal_mutations.items.map(d),
                            paymentGatewayPlanId: e.renewal_mutations.payment_gateway_plan_id
                        } : null,
                        streakStartedAt: null != e.streak_started_at ? new Date(e.streak_started_at) : null,
                        currency: e.currency,
                        metadata: e.metadata,
                        useStorekitResubscribe: e.use_storekit_resubscribe,
                        price: e.price,
                        userId: e.user_id,
                        ...null != e.latest_invoice ? {
                            latestInvoice: o.default.createInvoiceFromServer(e.latest_invoice)
                        } : {}
                    })
                }
                getCurrentSubscriptionPlanIdForGroup(e) {
                    var t;
                    return null === (t = this.items.find(t => e.includes(t.planId))) || void 0 === t ? void 0 : t.planId
                }
                get isPremium() {
                    return this.type === u.SubscriptionTypes.PREMIUM
                }
                get planIdForCurrencies() {
                    let e;
                    return this.isPremium ? (r(this.planIdFromItems, "Premium subscription has no planId for currencies"), e = this.planIdFromItems) : e = this.planId, e
                }
                get planIdFromItems() {
                    return this.getCurrentSubscriptionPlanIdForGroup(Object.values(c.SubscriptionPlans))
                }
                get isPurchasedViaApple() {
                    return this.paymentGateway === u.PaymentGateways.APPLE
                }
                get isPurchasedViaGoogle() {
                    return this.paymentGateway === u.PaymentGateways.GOOGLE
                }
                get isPurchasedExternally() {
                    return this.isPurchasedViaApple || this.isPurchasedViaGoogle
                }
                get isOnPlatformMatchingExternalPaymentGateway() {
                    return this.isPurchasedViaApple && (0, l.isIOS)() || this.isPurchasedViaGoogle && (0, l.isAndroid)()
                }
                get hasExternalPlanChange() {
                    return this.isPurchasedExternally && null != this.renewalMutations && this.paymentGatewayPlanId !== this.renewalMutations.paymentGatewayPlanId
                }
                get hasPremiumNitroMonthly() {
                    return null != this.items.find(e => e.planId === c.SubscriptionPlans.PREMIUM_MONTH_TIER_2)
                }
                constructor(e) {
                    super(), this.id = e.id, this.type = e.type, this.items = e.items, this.createdAt = e.createdAt, this.canceledAt = e.canceledAt, this.currentPeriodStart = e.currentPeriodStart, this.currentPeriodEnd = e.currentPeriodEnd, this.status = e.status, this.paymentSourceId = e.paymentSourceId, this.paymentGateway = e.paymentGateway, this.paymentGatewayPlanId = e.paymentGatewayPlanId, this.paymentGatewaySubscriptionId = e.paymentGatewaySubscriptionId, this.trialId = e.trialId, this.trialEndsAt = e.trialEndsAt, this.renewalMutations = e.renewalMutations, this.currency = e.currency, this.metadata = e.metadata, this.latestInvoice = e.latestInvoice, this.useStorekitResubscribe = e.useStorekitResubscribe, this.price = e.price, this.userId = e.userId;
                    let t = this.renewalMutations,
                        n = e.items[0].planId,
                        i = null;
                    if (e.type === u.SubscriptionTypes.PREMIUM) {
                        let r = c.SubscriptionPlanInfo[e.items[0].planId],
                            s = r.interval,
                            l = r.intervalCount;
                        n = (0, a.getBasePlanIdForSubscriptionItems)(e.items, s, l), null != t && (i = (0, a.getBasePlanIdForSubscriptionItems)(t.items, s, l))
                    } else null != t && t.items.length > 0 && (i = t.items[0].planId);
                    this.planId = n, this.additionalPlans = e.items.filter(e => e.planId !== n), null != t && null != i && (t.planId = i, t.additionalPlans = t.items.filter(e => e.planId !== i))
                }
            }
            var E = _
        },
        766274: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("754013"),
                r = n("666038"),
                s = n("234251"),
                a = n("315102"),
                l = n("299039"),
                o = n("49111"),
                u = n("680894"),
                c = n("646718");
            class d extends r.default {
                get createdAt() {
                    return new Date(l.default.extractTimestamp(this.id))
                }
                hasVerifiedEmailOrPhone() {
                    return !0 === this.verified || null != this.phone
                }
                getAvatarURL(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        i = null != e ? this.guildMemberAvatars[e] : void 0;
                    return null != i && null != e ? a.default.getGuildMemberAvatarURLSimple({
                        guildId: e,
                        avatar: i,
                        userId: this.id,
                        canAnimate: n
                    }) : a.default.getUserAvatarURL(this, n, t)
                }
                addGuildAvatarHash(e, t) {
                    if (this.guildMemberAvatars[e] === t) return this;
                    let n = {
                        ...this.guildMemberAvatars,
                        [e]: t
                    };
                    return this.merge({
                        guildMemberAvatars: n
                    })
                }
                removeGuildAvatarHash(e) {
                    if (void 0 === this.guildMemberAvatars[e]) return this;
                    let t = {
                        ...this.guildMemberAvatars,
                        [e]: void 0
                    };
                    return this.merge({
                        guildMemberAvatars: t
                    })
                }
                getAvatarSource(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        n = arguments.length > 2 ? arguments[2] : void 0;
                    if (null != e) {
                        let i = this.guildMemberAvatars[e];
                        if (null != i) return a.default.getAnimatableSourceWithFallback(t, t => a.default.makeSource(a.default.getGuildMemberAvatarURLSimple({
                            guildId: e,
                            avatar: i,
                            userId: this.id,
                            canAnimate: t,
                            size: n
                        })))
                    }
                    return a.default.getAnimatableSourceWithFallback(t, e => a.default.getUserAvatarSource({
                        id: this.id,
                        avatar: this.avatar,
                        discriminator: this.discriminator,
                        bot: this.bot
                    }, e, n))
                }
                isClaimed() {
                    return null != this.email || null != this.phone
                }
                isPhoneVerified() {
                    return null != this.phone
                }
                toString() {
                    return "" !== this.username ? this.username : "???"
                }
                get tag() {
                    return "".concat(this.username, "#").concat("".concat(this.discriminator).padStart(4, "0"))
                }
                hasPurchasedFlag(e) {
                    return (this.purchasedFlags & e) === e
                }
                hasPremiumUsageFlag(e) {
                    return (this.premiumUsageFlags & e) === e
                }
                hasHadSKU(e) {
                    let t = c.SKU_ID_PURCHASED_FLAGS[e];
                    return null != t && this.hasPurchasedFlag(t)
                }
                hasHadPremium() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        t = this.hasHadSKU(c.PremiumSubscriptionSKUs.TIER_0),
                        n = this.hasHadSKU(c.PremiumSubscriptionSKUs.TIER_1),
                        i = this.hasHadSKU(c.PremiumSubscriptionSKUs.TIER_2);
                    if (e === c.PremiumTypes.TIER_1) return n;
                    if (e === c.PremiumTypes.TIER_2) return i;
                    if (e === c.PremiumTypes.TIER_0) return t;
                    else return t || n || i
                }
                hasFreePremium() {
                    return this.isStaff() || this.hasFlag(o.UserFlags.PARTNER) || this.isStaffPersonal()
                }
                hasUrgentMessages() {
                    return this.hasFlag(o.UserFlags.HAS_UNREAD_URGENT_MESSAGES)
                }
                isNonUserBot() {
                    return this.isSystemUser() || this.bot && this.discriminator === o.NON_USER_BOT_DISCRIMINATOR
                }
                isLocalBot() {
                    return this.bot && this.id === o.LOCAL_BOT_ID
                }
                isVerifiedBot() {
                    return this.isSystemUser() || this.isLocalBot() || this.hasFlag(o.UserFlags.VERIFIED_BOT)
                }
                isSystemUser() {
                    return !0 === this.system
                }
                isClyde() {
                    return this.id === u.CLYDE_AI_USER_ID
                }
                hasAvatarForGuild(e) {
                    return null != e && null != this.guildMemberAvatars[e]
                }
                isPomelo() {
                    return "0" === this.discriminator
                }
                get avatarDecoration() {
                    return this.avatarDecorationData
                }
                set avatarDecoration(e) {
                    this.avatarDecorationData = (0, s.parseAvatarDecorationData)(e)
                }
                constructor(e) {
                    var t, n, r, s, a, l, u, c, d, _, E, f, p, h, S, T, I, m, g, A, C, R, N, v, O, D, L, M, P;
                    super(), this.hasFlag = e => !1, this.isStaff = () => !1, this.isStaffPersonal = () => !1, this.hasAnyStaffLevel = () => !1;
                    let b = null !== (n = e.premium_type) && void 0 !== n ? n : e.premiumType;
                    this.id = e.id, this.username = null !== (r = e.username) && void 0 !== r ? r : "", this.discriminator = null !== (s = e.discriminator) && void 0 !== s ? s : o.NON_USER_BOT_DISCRIMINATOR, this.avatar = null !== (a = e.avatar) && void 0 !== a ? a : null, this.avatarDecoration = null !== (l = e.avatar_decoration_data) && void 0 !== l ? l : e.avatarDecorationData, this.email = null !== (u = e.email) && void 0 !== u ? u : null, this.verified = null !== (c = e.verified) && void 0 !== c && c, this.bot = null !== (d = e.bot) && void 0 !== d && d, this.system = null !== (_ = e.system) && void 0 !== _ && _, this.mfaEnabled = null !== (f = null !== (E = e.mfa_enabled) && void 0 !== E ? E : e.mfaEnabled) && void 0 !== f && f, this.mobile = null !== (p = e.mobile) && void 0 !== p && p, this.desktop = null !== (h = e.desktop) && void 0 !== h && h, this.premiumType = b === o.PREMIUM_TYPE_NONE ? null : b, this.flags = null !== (S = e.flags) && void 0 !== S ? S : 0, this.publicFlags = null !== (I = null !== (T = e.public_flags) && void 0 !== T ? T : e.publicFlags) && void 0 !== I ? I : 0, this.purchasedFlags = null !== (g = null !== (m = e.purchased_flags) && void 0 !== m ? m : e.purchasedFlags) && void 0 !== g ? g : 0, this.premiumUsageFlags = null !== (C = null !== (A = e.premium_usage_flags) && void 0 !== A ? A : e.premiumUsageFlags) && void 0 !== C ? C : 0, this.phone = null !== (R = e.phone) && void 0 !== R ? R : null, this.nsfwAllowed = null !== (N = e.nsfw_allowed) && void 0 !== N ? N : e.nsfwAllowed, this.guildMemberAvatars = null !== (v = e.guildMemberAvatars) && void 0 !== v ? v : {}, this.hasBouncedEmail = null !== (D = null !== (O = e.has_bounced_email) && void 0 !== O ? O : e.hasBouncedEmail) && void 0 !== D && D, this.personalConnectionId = null !== (M = null !== (L = e.personal_connection_id) && void 0 !== L ? L : e.personalConnectionId) && void 0 !== M ? M : null, this.globalName = null !== (P = e.global_name) && void 0 !== P ? P : e.globalName, Object.defineProperties(this, {
                        hasFlag: {
                            writable: !1,
                            configurable: !1,
                            value: e => {
                                if (e <= 1073741824) return ((this.flags | this.publicFlags) & e) === e;
                                let t = i.default.deserialize(this.flags),
                                    n = i.default.deserialize(this.publicFlags),
                                    r = i.default.deserialize(e);
                                return i.default.has(i.default.combine(t, n), r)
                            }
                        },
                        isStaff: {
                            writable: !1,
                            configurable: !1,
                            value: () => this.hasFlag(o.UserFlags.STAFF)
                        },
                        isStaffPersonal: {
                            writable: !1,
                            configurable: !1,
                            value: () => !this.hasFlag(o.UserFlags.STAFF) && null != this.personalConnectionId
                        },
                        hasAnyStaffLevel: {
                            writable: !1,
                            configurable: !1,
                            value: () => this.hasFlag(o.UserFlags.STAFF) || this.hasFlag(o.UserFlags.COLLABORATOR) || this.hasFlag(o.UserFlags.RESTRICTED_COLLABORATOR)
                        }
                    }), (null === (t = this.globalName) || void 0 === t ? void 0 : t.length) === 0 && (this.globalName = null)
                }
            }
            new d({
                id: "0"
            })
        },
        628454: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("666038");
            class r extends i.default {
                isVoiceMuted() {
                    return this.selfMute || this.mute || this.suppress || null != this.requestToSpeakTimestamp
                }
                isVoiceDeafened() {
                    return this.selfDeaf || this.deaf
                }
                constructor(e) {
                    super(), this.userId = e.userId || "", this.channelId = e.channelId || null, this.sessionId = e.sessionId || null, this.mute = e.mute || !1, this.deaf = e.deaf || !1, this.selfMute = e.selfMute || !1, this.selfDeaf = e.selfDeaf || !1, this.selfVideo = e.selfVideo || !1, this.selfStream = e.selfStream || !1, this.suppress = e.suppress || !1, this.requestToSpeakTimestamp = e.requestToSpeakTimestamp
                }
            }
        },
        271938: function(e, t, n) {
            "use strict";
            let i, r;
            n.r(t), n.d(t, {
                default: function() {
                    return ec
                }
            });
            var s = n("161179"),
                a = n.n(s),
                l = n("620099"),
                o = n("540799"),
                u = n("498225"),
                c = n("990746"),
                d = n("173333"),
                _ = n("913144"),
                E = n("798609"),
                f = n("821316"),
                p = n("605250"),
                h = n("393414"),
                S = n("705873"),
                T = n("599110"),
                I = n("831588"),
                m = n("222038"),
                g = n("286235"),
                A = n("72177"),
                C = n("455079"),
                R = n("49111"),
                N = n("586391");
            let v = n("551042").hasModalOpen,
                O = new p.default("AuthenticationStore"),
                D = "fingerprint",
                L = "email_cache",
                M = "user_id_cache",
                P = null,
                b = null,
                y = null,
                U = null,
                G = null,
                w = null,
                x = null,
                k = R.LoginStates.NONE,
                F = R.RegistrationStates.NONE,
                B = !1,
                V = [],
                H = "",
                j = !1,
                Y = null,
                W = !1,
                K = !1,
                z = "",
                Z = !1,
                q = !1,
                X = {},
                Q = {},
                J = null,
                $ = null,
                ee = null;

            function et(e) {
                let t = null != l.default.getToken(),
                    n = null != d.default.get(R.TOKEN_KEY);
                O.verbose(e, {
                    tokenManagerHasToken: t,
                    storageHasToken: n
                })
            }

            function en() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                if (G = d.default.get(D), null != $) return $;
                let t = null != G ? G : l.default.getToken();
                !(!(0, h.isValidFingerprintRoute)() || !e && null != t || A.default.isHandoffAvailable()) && ei({
                    withGuildExperiments: !0
                })
            }

            function ei(e) {
                let {
                    withGuildExperiments: t
                } = e, n = {}, i = T.default.getSuperPropertiesBase64();
                null != i && (n["X-Super-Properties"] = i), null != G && (n["X-Fingerprint"] = G), $ = c.default.get({
                    url: R.Endpoints.EXPERIMENTS,
                    query: {
                        with_guild_experiments: t
                    },
                    headers: n,
                    context: {
                        location: (0, h.getFingerprintLocation)()
                    },
                    retries: 3,
                    oldFormErrors: !0
                }).then(e => {
                    let {
                        fingerprint: t,
                        assignments: n,
                        guild_experiments: i
                    } = e.body;
                    t && _.default.dispatch({
                        type: "FINGERPRINT",
                        fingerprint: t
                    }), _.default.dispatch({
                        type: "EXPERIMENTS_FETCH_SUCCESS",
                        fingerprint: t,
                        experiments: n,
                        guildExperiments: i
                    }), $ = null
                }, () => {
                    $ = null, _.default.dispatch({
                        type: "EXPERIMENTS_FETCH_FAILURE"
                    })
                })
            }

            function er() {
                w = G, G = null, d.default.remove(D)
            }

            function es(e, t) {
                et("setAuthToken called."), l.default.setToken(e, t)
            }

            function ea() {
                et("removeAuthToken called."), l.default.removeToken()
            }

            function el() {
                B = !0, eo(), _.default.wait(() => {
                    (0, h.transitionTo)(R.Routes.REGISTER)
                })
            }

            function eo(e) {
                et("handleLogout called."), ea(), er(), !(null == e ? void 0 : e.isSwitchingAccount) && en(), u.default.PersistedStore.clearAll({
                    omit: ["InstallationManagerStore", "AgeGateStore", "NativePermissionsStore", "MultiAccountStore", "DraftStore", "OverlayStoreV2", "StreamerModeStore", "LoginRequiredActionStore"],
                    type: (null == e ? void 0 : e.isSwitchingAccount) ? "user-data-only" : "all"
                }), C.default.clearAll(), f.clear(), g.default.clearUser(), d.default.remove(M), P = null, k = (null == e ? void 0 : e.isSwitchingAccount) ? R.LoginStates.LOGGING_IN : R.LoginStates.NONE, F = R.RegistrationStates.NONE, H = "", z = "", Y = null, j = !1, Z = !1, q = !1, X = {}, Q = {}
            }
            class eu extends u.default.Store {
                initialize() {
                    P = d.default.get(M), b = d.default.get(L), ee = d.default.get("login_cache"), null == l.default.getToken() && en()
                }
                getEmail() {
                    return b
                }
                getLogin() {
                    return ee
                }
                didVerifyFail() {
                    return Z
                }
                getVerifyErrors() {
                    return X
                }
                didVerifySucceed() {
                    return q
                }
                getLoginStatus() {
                    return k
                }
                getRegisterStatus() {
                    return F
                }
                getId() {
                    return P
                }
                getSessionId() {
                    return y
                }
                getAuthSessionIdHash() {
                    return U
                }
                getToken() {
                    return (0, I.getToken)()
                }
                isAuthenticated() {
                    return (0, I.isAuthenticated)()
                }
                getFingerprint() {
                    return G
                }
                getAnalyticsToken() {
                    return x
                }
                getErrors() {
                    return Q
                }
                getMFATicket() {
                    return H
                }
                getMFASMS() {
                    return j
                }
                getMFATotp() {
                    return W
                }
                getMFABackup() {
                    return K
                }
                getMFAWebAuthn() {
                    return Y
                }
                getMFAMethods() {
                    let e = [];
                    return null != Y && e.push({
                        type: "webauthn",
                        challenge: Y
                    }), W && e.push({
                        type: "totp",
                        backup_codes_allowed: K
                    }), K && e.push({
                        type: "backup"
                    }), j && e.push({
                        type: "sms"
                    }), e
                }
                hasTOTPEnabled() {
                    return V.includes(E.AuthenticatorType.TOTP)
                }
                hasSMSEnabled() {
                    return V.includes(E.AuthenticatorType.SMS)
                }
                hasWebAuthnEnabled() {
                    return V.includes(E.AuthenticatorType.WEBAUTHN)
                }
                getMaskedPhone() {
                    return z
                }
                getCredentials() {
                    if (null == i) throw Error("no credentials");
                    return i
                }
                getVerifyingUserId() {
                    return J
                }
                getCurrentRegistrationOptions() {
                    return r
                }
                allowLogoutRedirect() {
                    return !B
                }
                getWebAuthnChallenge() {
                    return Y
                }
            }
            eu.displayName = "AuthenticationStore";
            var ec = new eu(_.default, {
                CONNECTION_OPEN: function(e) {
                    var t;
                    let {
                        user: n,
                        sessionId: i,
                        authSessionIdHash: r,
                        analyticsToken: s,
                        auth: a
                    } = e;
                    et("handleConnectionOpen called"), g.default.setUser(n.id, n.username, null !== (t = n.email) && void 0 !== t ? t : void 0, (0, S.default)(n)), y = i, U = r, x = s, P = n.id, b = n.email, void 0 !== a && (V = a.authenticator_types), d.default.set(L, n.email), d.default.set(M, n.id)
                },
                OVERLAY_INITIALIZE: function(e) {
                    var t;
                    let {
                        user: n,
                        sessionId: i,
                        analyticsToken: r,
                        token: s
                    } = e;
                    g.default.setUser(n.id, n.username, null !== (t = n.email) && void 0 !== t ? t : void 0, (0, S.default)(n)), y = i, x = r, es(s), er(), P = n.id, d.default.set(M, n.id)
                },
                CONNECTION_CLOSED: function(e) {
                    let {
                        code: t
                    } = e;
                    if (et("handleConnectionClosed called with code ".concat(t, ".")), 4004 === t) {
                        if (B || v(N.NEW_USER_AGE_GATE_MODAL_KEY) || v(N.EXISTING_USER_AGE_GATE_MODAL_KEY)) {
                            el();
                            return
                        }
                        T.default.track(R.AnalyticEvents.APP_USER_DEAUTHENTICATED, {
                            user_id: d.default.get(M)
                        }), eo(), setImmediate(() => (0, h.transitionTo)(R.Routes.DEFAULT_LOGGED_OUT))
                    }
                },
                AUTH_SESSION_CHANGE: function(e) {
                    let {
                        authSessionIdHash: t
                    } = e;
                    null != t && (U = t)
                },
                LOGIN: function(e) {
                    Q = {}, k = R.LoginStates.LOGGING_IN, z = "", r = null, null != e.login && (ee = e.login)
                },
                LOGIN_SUCCESS: function(e) {
                    let {
                        token: t
                    } = e;
                    k = R.LoginStates.NONE, es(t), er(), H = "", j = !1, Y = null, z = ""
                },
                LOGIN_FAILURE: function(e) {
                    let {
                        error: t
                    } = e;
                    H = "", j = !1, Y = null, k = null != (Q = function(e) {
                        if (Object.keys(e.fields).length > 0) return e.fields;
                        let t = {
                            message: e.message
                        };
                        return null != e.retryAfter && (t.retry_after = e.retryAfter), t
                    }(t)).date_of_birth ? R.LoginStates.LOGIN_AGE_GATE : R.LoginStates.NONE
                },
                LOGIN_MFA_WEBAUTHN: function() {
                    k = R.LoginStates.LOGGING_IN_MFA_WEBAUTHN
                },
                LOGIN_MFA_WEBAUTHN_TO_TOTP: function() {
                    if (k !== R.LoginStates.MFA_WEBAUTHN_STEP && k !== R.LoginStates.LOGGING_IN_MFA_WEBAUTHN) return !1;
                    k = R.LoginStates.MFA_STEP
                },
                LOGIN_MFA_STEP: function(e) {
                    let {
                        ticket: t,
                        sms: n,
                        webauthn: i,
                        backup: r,
                        totp: s
                    } = e;
                    null != t && (H = t, j = n, z = "", Y = null != i ? i : null, K = r, W = s), Q = {}, k = null != i && m.hasWebAuthn ? R.LoginStates.MFA_WEBAUTHN_STEP : R.LoginStates.MFA_STEP
                },
                LOGIN_MFA: function() {
                    k = R.LoginStates.LOGGING_IN_MFA
                },
                LOGIN_MFA_FAILURE: function(e) {
                    let {
                        message: t
                    } = e;
                    k = k === R.LoginStates.LOGGING_IN_MFA_WEBAUTHN ? R.LoginStates.MFA_WEBAUTHN_STEP : R.LoginStates.MFA_STEP, Q = {
                        code: t
                    }
                },
                LOGIN_MFA_SMS: function() {
                    k = R.LoginStates.LOGGING_IN_MFA_SMS
                },
                LOGIN_MFA_SMS_REQUEST_SUCCESS: function(e) {
                    let {
                        phone: t
                    } = e;
                    k = R.LoginStates.MFA_SMS_STEP, z = t
                },
                LOGIN_MFA_SMS_FAILURE: function(e) {
                    let {
                        message: t
                    } = e;
                    k = R.LoginStates.MFA_SMS_STEP, Q = {
                        code: t
                    }
                },
                LOGIN_ACCOUNT_SCHEDULED_FOR_DELETION: function(e) {
                    k = R.LoginStates.ACCOUNT_SCHEDULED_FOR_DELETION, i = e.credentials
                },
                LOGIN_ACCOUNT_DISABLED: function(e) {
                    k = R.LoginStates.ACCOUNT_DISABLED, i = e.credentials
                },
                LOGIN_PASSWORD_RECOVERY_PHONE_VERIFICATION: function() {
                    k = R.LoginStates.PASSWORD_RECOVERY_PHONE_VERIFICATION
                },
                LOGIN_PHONE_IP_AUTHORIZATION_REQUIRED: function() {
                    k = R.LoginStates.PHONE_IP_AUTHORIZATION
                },
                LOGIN_RESET: function(e) {
                    let {
                        isMultiAccount: t
                    } = e;
                    Q = {}, k = R.LoginStates.NONE, H = "", j = !1, Y = null, r = null, i = null, !t && (ea(), en(!1))
                },
                LOGIN_STATUS_RESET: function() {
                    k = R.LoginStates.NONE
                },
                SET_LOGIN_CREDENTIALS: function(e) {
                    let {
                        login: t,
                        password: n
                    } = e;
                    i = {
                        login: t,
                        password: n
                    }
                },
                LOGOUT: eo,
                FINGERPRINT: function(e) {
                    let t = e.fingerprint;
                    null == G ? null != t ? (T.default.track(R.AnalyticEvents.USER_FINGERPRINT_CHANGED, {
                        old_fingerprint: null != w ? (0, o.extractId)(w) : null,
                        new_fingerprint: (0, o.extractId)(t)
                    }), G = t, w = t, d.default.set(D, G)) : en() : null != t && G !== t && T.default.track(R.AnalyticEvents.EXTERNAL_FINGERPRINT_DROPPED, {
                        fingerprint: (0, o.extractId)(G),
                        dropped_fingerprint: (0, o.extractId)(t)
                    })
                },
                REGISTER_SAVE_FORM: function(e) {
                    let {
                        form: t
                    } = e;
                    r = t, F = R.RegistrationStates.REGISTER_AGE_GATE
                },
                REGISTER: function(e) {
                    let {
                        birthday: t
                    } = e;
                    Q = {}, null != t && (a(null != r, "Got birthday in multistep registration without existing form"), r = {
                        ...r,
                        birthday: t
                    }), F = R.RegistrationStates.REGISTERING
                },
                REGISTER_SUCCESS: function(e) {
                    let {
                        token: t
                    } = e;
                    F = R.RegistrationStates.NONE, r = null, es(t), er()
                },
                REGISTER_FAILURE: function(e) {
                    let {
                        error: t
                    } = e;
                    Q = function(e) {
                        let t = {};
                        if (t.error_code = e.code, null != e.errors) {
                            for (let n of Object.keys(e.errors)) t[n] = [e.getFirstFieldErrorMessage(n)];
                            return t
                        }
                        return t.message = e.message, null != e.retryAfter && (t.retry_after = e.retryAfter), t
                    }(t), F = null != t.getFieldErrors("date_of_birth") ? R.RegistrationStates.REGISTER_AGE_GATE : R.RegistrationStates.REGISTER_WITH_ERROR
                },
                VERIFY_FAILURE: function(e) {
                    let {
                        errors: t
                    } = e;
                    Z = !0, q = !1, X = null != t ? t : {}
                },
                VERIFY_SUCCESS: function(e) {
                    q = !0, Z = !1, X = {}, J = e.verifyingUserId
                },
                START_SESSION: function() {
                    if (0 === Object.keys(Q).length) return !1;
                    Q = {}
                },
                FORGOT_PASSWORD_REQUEST: function() {
                    k = R.LoginStates.FORGOT_PASSWORD, Q = {}
                },
                FORGOT_PASSWORD_SENT: function() {
                    k = R.LoginStates.NONE, Q = {}
                },
                UPDATE_TOKEN: function(e) {
                    let {
                        token: t,
                        userId: n
                    } = e;
                    et("handleUpdateToken called"), es(t, n), er()
                },
                EXPERIMENTS_FETCH: ei,
                CURRENT_USER_UPDATE: function(e) {
                    let {
                        user: t
                    } = e;
                    P = t.id, b = t.email, void 0 !== t.authenticator_types && (V = t.authenticator_types), d.default.set(L, t.email), d.default.set(M, t.id)
                },
                AGE_GATE_LOGOUT_UNDERAGE_NEW_USER: el,
                CLEAR_AUTHENTICATION_ERRORS: function() {
                    Q = {}
                }
            }, _.DispatchBand.Early)
        },
        366679: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("498225"),
                r = n("913144");
            let s = n("860604").DEFAULT_VOICE_BITRATE;
            class a extends i.default.Store {
                get bitrate() {
                    return s
                }
            }
            a.displayName = "BitRateStore";
            var l = new a(r.default, {
                SET_CHANNEL_BITRATE: function(e) {
                    s = e.bitrate
                }
            })
        },
        72177: function(e, t, n) {
            "use strict";
            let i, r, s;
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("462567"),
                l = n("498225"),
                o = n("173333"),
                u = n("638800"),
                c = n("913144"),
                d = n("697796"),
                _ = n("766274"),
                E = n("922932"),
                f = n("773336"),
                p = n("197881");
            let h = "BrowserHandoffStore",
                S = !1,
                T = new u.Timeout;

            function I() {
                null != i && null != r && (window.open("".concat(i, "&key=").concat(r)), E.default.focus(null, !0))
            }

            function m() {
                r = null, T.stop(), S = !1, o.default.set(h, S)
            }

            function g() {
                m()
            }
            class A extends l.default.Store {
                initialize() {
                    !1 !== o.default.get(h) && (S = f.isPlatformEmbedded && "stable" === window.GLOBAL_ENV.RELEASE_CHANNEL)
                }
                isHandoffAvailable() {
                    return !p.ProcessArgs.isDisallowPopupsSet() && S
                }
                get user() {
                    return s
                }
                get key() {
                    return r
                }
            }
            A.displayName = "BrowserHandoffStore";
            var C = new A(c.default, {
                RPC_SERVER_READY: function(e) {
                    i = "".concat(location.protocol, "//").concat(location.host, "/handoff?rpc=").concat(e.port), I()
                },
                BROWSER_HANDOFF_BEGIN: function(e) {
                    if (null != r) return !1;
                    r = (0, a.v4)(), T.start(e.timeout, () => (0, d.handoffEnd)()), I()
                },
                BROWSER_HANDOFF_FROM_APP: function(e) {
                    let {
                        handoffKey: t,
                        handoffToken: n,
                        timeout: i
                    } = e;
                    if (null == t || null == n) return !1;
                    S = !0, T.start(i, () => (0, d.handoffEnd)())
                },
                BROWSER_HANDOFF_UNAVAILABLE: m,
                BROWSER_HANDOFF_SET_USER: function(e) {
                    s = new _.default(e.user)
                },
                LOGIN: g,
                LOGIN_SUCCESS: g,
                LOGOUT: g,
                REGISTER: g
            })
        },
        533222: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("173333"),
                l = n("913144"),
                o = n("860604");
            let u = "CertifiedDeviceStore",
                c = {},
                d = {},
                _ = 0;

            function E(e, t, n) {
                let i = d[e];
                return null != i ? n(i) : t
            }

            function f(e, t) {
                let n = c[e];
                null != n && n.forEach(e => delete d[e.id]), c[e] = t, t.forEach(e => d[e.id] = e)
            }
            class p extends s.default.Store {
                initialize() {
                    let e = a.default.get(u);
                    null != e && r.forEach(e, (e, t) => {
                        e.forEach(e => {
                            "audioinput" === e.type && e.hardwareMute && (e.hardwareMute = !1)
                        }), f(t, e)
                    })
                }
                isCertified(e) {
                    return null != d[e]
                }
                getCertifiedDevice(e) {
                    return d[e]
                }
                getCertifiedDeviceName(e, t) {
                    let n = this.getCertifiedDevice(e);
                    return null != n ? "".concat(n.vendor.name, " ").concat(n.model.name) : t
                }
                getCertifiedDeviceByType(e) {
                    return r.find(d, t => t.type === e)
                }
                isHardwareMute(e) {
                    return E(e, !1, e => e.type === o.DeviceTypes.AUDIO_INPUT && e.hardwareMute)
                }
                hasEchoCancellation(e) {
                    return E(e, !1, e => e.type === o.DeviceTypes.AUDIO_INPUT && e.echoCancellation)
                }
                hasNoiseSuppression(e) {
                    return E(e, !1, e => e.type === o.DeviceTypes.AUDIO_INPUT && e.noiseSuppression)
                }
                hasAutomaticGainControl(e) {
                    return E(e, !1, e => e.type === o.DeviceTypes.AUDIO_INPUT && e.automaticGainControl)
                }
                getVendor(e) {
                    return E(e, null, e => e.vendor)
                }
                getModel(e) {
                    return E(e, null, e => e.model)
                }
                getRevision() {
                    return _
                }
            }
            p.displayName = "CertifiedDeviceStore";
            var h = new p(l.default, {
                CERTIFIED_DEVICES_SET: function(e) {
                    let {
                        applicationId: t,
                        devices: n
                    } = e;
                    f(t, n), a.default.set(u, c), _++
                }
            })
        },
        42203: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return er
                }
            });
            var i, r, s = n("427964"),
                a = n.n(s),
                l = n("379279"),
                o = n("500947"),
                u = n("498225"),
                c = n("913144"),
                d = n("802493"),
                _ = n("595525"),
                E = n("860255"),
                f = n("846527"),
                p = n("1544"),
                h = n("605250"),
                S = n("379881"),
                T = n("560208"),
                I = n("233069"),
                m = n("271938"),
                g = n("305961"),
                A = n("697218"),
                C = n("49111");
            let R = new h.default("ChannelStore"),
                N = {},
                v = {},
                O = {},
                D = {},
                L = null,
                M = {},
                P = {},
                b = 0,
                y = {},
                U = {},
                G = new Set,
                w = 0,
                x = 0;

            function k(e, t, n) {
                if (null == e || !G.has(e) || 0 === t && f.default.hasGuild(e)) return;
                R.verbose("hydrating guild (guild: ".concat(e, ", trace: ").concat(n, ")"));
                let i = d.default.database(),
                    r = null != i ? (0, _.tryLoadOrResetCacheGateway)("ensureGuildLoaded(".concat(e, ")"), () => E.default.getSync(i, e)) : null;
                if (null == r) {
                    G.delete(e), f.default.restored(e), R.log("load returned null; early returning (guild: ".concat(e, ", database: ").concat(i, ")"));
                    return
                }
                let [s, a] = r;
                for (let t of ((0, p.default)(s), x += 1, G.delete(e), f.default.restored(e), l.default.mark("❗", "loaded guild channels (guild: ".concat(e, ")"), a), s)) !Object.hasOwn(v, t.id) && (t.type === C.ChannelTypes.GUILD_VOICE && delete t.status, K((0, I.castChannelRecord)(t)));
                R.verbose("hydration complete (guild: ".concat(e, ", channels: ").concat(s.length, ", guilds_loaded: ").concat(x, ")"))
            }

            function F(e, t, n) {
                if (G.size > 0 && !Object.hasOwn(v, e) && !Object.hasOwn(D, e) && !Object.hasOwn(M, e) && !Object.hasOwn(U, e) && 1 === t) {
                    let i = f.default.getBasicChannel(e);
                    (null == i ? void 0 : i.guild_id) != null && k(i.guild_id, t, n)
                }
            }

            function B(e) {
                if (null != O[e]) {
                    for (let t of Object.keys(O[e])) delete v[t];
                    delete O[e]
                }
            }

            function V(e) {
                var t, n, i, r;
                return F(e, 0, "getBasicChannel"), null !== (r = null !== (i = null !== (n = null !== (t = v[e]) && void 0 !== t ? t : D[e]) && void 0 !== n ? n : M[e]) && void 0 !== i ? i : U[e]) && void 0 !== r ? r : f.default.getBasicChannel(e)
            }

            function H(e) {
                var t, n, i;
                return F(e, 1, "getChannel"), null !== (i = null !== (n = null !== (t = v[e]) && void 0 !== t ? t : D[e]) && void 0 !== n ? n : M[e]) && void 0 !== i ? i : U[e]
            }

            function j(e) {
                e.isPrivate() ? Y(e) : e.isThread() ? W(e) : I.GUILD_CHANNEL_TYPES.has(e.type) && function(e) {
                    K(e)
                }(e)
            }

            function Y(e) {
                D[e.id] = e, e.type === C.ChannelTypes.DM && (P[e.getRecipientId()] = e.id), b += 1
            }

            function W(e) {
                let t = v[e.parent_id];
                M[e.id] = e.merge({
                    nsfw: (null == t ? void 0 : t.nsfw) === !0,
                    parentChannelThreadType: null == t ? void 0 : t.type
                }), e.isScheduledForDeletion() && c.default.dispatch({
                    type: "THREAD_DELETE",
                    channel: e
                })
            }

            function K(e) {
                var t, n;
                let {
                    id: i,
                    guild_id: r
                } = e;
                v[i] = e, O[r] = null !== (t = O[r]) && void 0 !== t ? t : {}, O[r][i] = e, y[r] = (null !== (n = y[r]) && void 0 !== n ? n : 0) + 1
            }(i = r || (r = {}))[i.Basic = 0] = "Basic", i[i.Full = 1] = "Full";

            function z(e) {
                if (G.add(e.id), null != e.channels)
                    for (let t of (B(e.id), G.delete(e.id), f.default.restored(e.id), e.channels)) K(t);
                if (null != e.channelUpdates) {
                    let t = e.channelUpdates;
                    for (let n of ((t.writes.length > 0 || t.deletes.length > 0) && f.default.invalidate(e.id), t.deletes)) J(v[n]);
                    for (let e of t.writes) K(e)
                }
                if (null != e.threads)
                    for (let t of e.threads) W(t)
            }

            function Z() {
                P = {}, v = {}, O = {}, y = {}, D = {}, M = {}, G = new Set
            }

            function q(e) {
                for (let t of (Z(), e.channels)) j((0, p.deserializeChannel)((0, I.castChannelRecord)(t)));
                G = new Set(e.guilds.map(e => e.id))
            }

            function X(e) {
                if (!I.ALL_CHANNEL_TYPES.has(e.channel.type)) return !1;
                let t = H(e.channel.id);
                if (null == t) t = e.channel;
                else {
                    var n;
                    t = t.merge({
                        ...e.channel.toJS(),
                        bitrate: null !== (n = e.channel.bitrate) && void 0 !== n ? n : t.bitrate
                    })
                }
                j(t)
            }

            function Q(e) {
                let {
                    threads: t
                } = e;
                t.forEach(e => {
                    I.ALL_CHANNEL_TYPES.has(e.type) && j((0, I.createChannelRecordFromServer)(e))
                })
            }

            function J(e) {
                if (null == e) return;
                let t = e.guild_id;
                e.id in D && delete D[e.id], e.id in v && delete v[e.id], e.id in M && delete M[e.id], null != t && null != O[t] && e.id in O[t] && delete O[t][e.id], ! function(e) {
                    if (null == e.guild_id || I.THREAD_CHANNEL_TYPES.has(e.type))(0, I.isPrivate)(e.type) && (b += 1);
                    else {
                        var t;
                        y[e.guild_id] = (null !== (t = y[e.guild_id]) && void 0 !== t ? t : 0) + 1
                    }
                }(e)
            }

            function $(e) {
                var t, n;
                let {
                    channel: i
                } = e, r = null !== (n = null !== (t = v[i.id]) && void 0 !== t ? t : D[i.id]) && void 0 !== n ? n : M[i.id];
                if (null == r) return !1;
                J(r), ! function(e) {
                    if ("basicPermissions" in e || e.type !== C.ChannelTypes.DM) return;
                    let t = e.getRecipientId(),
                        n = P[t];
                    n === e.id && delete P[t]
                }(r)
            }

            function ee(e) {
                let {
                    messages: t
                } = e;
                for (let e of t) null != e.thread && !(e.thread.id in M) && I.ALL_CHANNEL_TYPES.has(e.thread.type) && W((0, I.createChannelRecordFromServer)(e.thread))
            }

            function et(e) {
                null != e && !(e.id in M) && I.ALL_CHANNEL_TYPES.has(e.type) && W((0, I.createChannelRecordFromServer)(e))
            }

            function en() {
                for (let e in U = {}, S.default.getFavoriteChannels()) {
                    let t = S.default.getCategoryRecord(e);
                    null != t && (U[e] = t)
                }
            }
            class ei extends u.default.Store {
                initialize() {
                    this.waitFor(f.default, A.default, g.default, S.default), this.syncWith([S.default], en)
                }
                hasChannel(e) {
                    return null != V(e)
                }
                getBasicChannel(e) {
                    if (null != e) return V(e)
                }
                getChannel(e) {
                    if (null != e) return H(e)
                }
                loadAllGuildAndPrivateChannelsFromDisk() {
                    for (let e of g.default.getGuildIds()) k(e, 1, "loadAllGuildAndPrivateChannelsFromDisk");
                    return {
                        ...v,
                        ...D
                    }
                }
                getChannelIds(e) {
                    var t, n;
                    return (k(e, 0, "getChannelIds"), null == e) ? Object.keys(D) : Object.keys(null !== (n = null !== (t = f.default.getGuildBasicChannels(e)) && void 0 !== t ? t : O[e]) && void 0 !== n ? n : N)
                }
                getMutablePrivateChannels() {
                    return D
                }
                getMutableBasicGuildChannelsForGuild(e) {
                    var t, n;
                    return k(e, 0, "getMutableBasicGuildChannelsForGuild"), null !== (n = null !== (t = f.default.getGuildBasicChannels(e)) && void 0 !== t ? t : O[e]) && void 0 !== n ? n : N
                }
                getMutableGuildChannelsForGuild(e) {
                    var t;
                    return k(e, 1, "getMutableGuildChannelsForGuild"), null !== (t = O[e]) && void 0 !== t ? t : N
                }
                getSortedPrivateChannels() {
                    return a(D).values().sort((e, t) => o.default.compare(e.lastMessageId, t.lastMessageId)).reverse().value()
                }
                getDMFromUserId(e) {
                    if (null != e) return P[e]
                }
                getDMUserIds() {
                    return Object.keys(P)
                }
                getPrivateChannelsVersion() {
                    return b
                }
                getGuildChannelsVersion(e) {
                    var t;
                    return null !== (t = y[e]) && void 0 !== t ? t : 0
                }
                getAllThreadsForParent(e) {
                    return a.values(M).filter(t => t.parent_id === e)
                }
                getInitialOverlayState() {
                    return {
                        ...v,
                        ...D,
                        ...M
                    }
                }
            }
            ei.displayName = "ChannelStore";
            var er = new ei(c.default, {
                BACKGROUND_SYNC: function(e) {
                    let {
                        guilds: t
                    } = e, n = O;
                    v = {}, O = {}, y = {}, t.forEach(e => {
                        if ("unavailable" === e.data_mode) a.forEach(n[e.id], K);
                        else if ("partial" === e.data_mode) {
                            var t, i;
                            a.forEach(n[e.id], K);
                            let r = null !== (i = e.partial_updates.deleted_channel_ids) && void 0 !== i ? i : [];
                            r.length > 0 && (k(e.id, 1, "handleBackgroundSync"), r.forEach(e => J(v[e]))), null === (t = e.partial_updates.channels) || void 0 === t || t.forEach(t => K((0, I.createChannelRecordFromServer)(t, e.id)))
                        } else B(e.id), G.delete(e.id), f.default.restored(e.id), e.channels.forEach(t => K((0, I.createChannelRecordFromServer)(t, e.id)))
                    })
                },
                CACHE_LOADED_LAZY: function(e) {
                    if (null != e.privateChannels)
                        for (let t of e.privateChannels) j((0, I.castChannelRecord)(t));
                    for (let [t, n] of e.guildChannels)
                        for (let e of n) j((0, I.castChannelRecord)(e));
                    e.guilds.length, G = new Set(e.guilds.map(e => e.id))
                },
                CACHE_LOADED: q,
                CHANNEL_CREATE: function(e) {
                    j(e.channel)
                },
                CHANNEL_DELETE: $,
                CHANNEL_RECIPIENT_ADD: function(e) {
                    let t = H(e.channelId),
                        n = m.default.getId();
                    return (null == t ? !!void 0 : !!t.isPrivate()) && (j(t.addRecipient(e.user.id, e.nick, n)), !0)
                },
                CHANNEL_RECIPIENT_REMOVE: function(e) {
                    let t = H(e.channelId);
                    return (null == t ? !!void 0 : !!t.isPrivate()) && (j(t.removeRecipient(e.user.id)), !0)
                },
                CHANNEL_UPDATES: function(e) {
                    let t = e.channels.some(e => {
                        let t = H(e.id);
                        return e.nsfw !== (null == t ? void 0 : t.nsfw) || e.type !== (null == t ? void 0 : t.type)
                    });
                    for (let t of e.channels) j(t);
                    t && Object.values(M).forEach(e => j(e))
                },
                CONNECTION_OPEN_SUPPLEMENTAL: function(e) {
                    let {
                        lazyPrivateChannels: t
                    } = e;
                    null != L && (D = {}, L.forEach(Y)), t.forEach(Y)
                },
                CONNECTION_OPEN: function(e) {
                    let t = O;
                    for (let n of (P = {}, v = {}, O = {}, M = {}, y = {}, G = new Set, L = e.initialPrivateChannels, e.initialPrivateChannels.forEach(Y), e.guilds)) "partial" === n.dataMode && a.forEach(t[n.id], K), z(n);
                    en()
                },
                GUILD_CREATE: function(e) {
                    z(e.guild)
                },
                GUILD_DELETE: function(e) {
                    B(e.guild.id), G.delete(e.guild.id), f.default.invalidate(e.guild.id)
                },
                GUILD_FEED_FETCH_SUCCESS: function(e) {
                    let {
                        data: t
                    } = e, n = !1, i = (0, T.getThreadsFromGuildFeedFetch)(t);
                    for (let e of i) !(e.id in M) && I.ALL_CHANNEL_TYPES.has(e.type) && (W((0, I.createChannelRecordFromServer)(e)), n = !0);
                    return n
                },
                LOAD_ARCHIVED_THREADS_SUCCESS: Q,
                LOAD_MESSAGES_AROUND_SUCCESS: ee,
                LOAD_MESSAGES_SUCCESS: ee,
                LOAD_THREADS_SUCCESS: Q,
                LOGOUT: function() {
                    Z()
                },
                OVERLAY_INITIALIZE: q,
                SEARCH_FINISH: function(e) {
                    let {
                        messages: t,
                        threads: n,
                        channels: i
                    } = e;
                    for (let e of t)
                        for (let t of e) et(t.thread);
                    n.forEach(et), null == i || i.forEach(e => {
                        j((0, I.createChannelRecordFromServer)(e))
                    })
                },
                THREAD_CREATE: X,
                THREAD_DELETE: $,
                THREAD_LIST_SYNC: function(e) {
                    let {
                        threads: t
                    } = e;
                    t.forEach(e => {
                        I.ALL_CHANNEL_TYPES.has(e.type) && j(e)
                    })
                },
                THREAD_UPDATE: X,
                VOICE_CHANNEL_STATUS_UPDATE: function(e) {
                    let t = H(e.id);
                    null != t && j(t = t.set("status", e.status))
                }
            })
        },
        86878: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("913144");
            let l = {};
            class o extends s.default.Store {
                isConnected(e) {
                    return null != l[e]
                }
                get connections() {
                    return r.values(l)
                }
                getApplication(e) {
                    return l[e]
                }
                getAllConnections() {
                    return l
                }
            }
            o.displayName = "ConnectedAppsStore";
            var u = new o(a.default, {
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        connectedApps: t
                    } = e;
                    l = {
                        ...t
                    }
                },
                RPC_APP_CONNECTED: function(e) {
                    let {
                        application: t
                    } = e;
                    if (null == t.id) return !1;
                    let n = t.id;
                    null == l[n] && (l[n] = {
                        count: 0,
                        id: t.id,
                        name: t.name,
                        icon: t.icon,
                        coverImage: t.coverImage,
                        authenticated: !1
                    }), l[n].count++
                },
                RPC_APP_AUTHENTICATED: function(e) {
                    let {
                        application: t
                    } = e;
                    null != t.id && null != l[t.id] && (l[t.id].authenticated = !0)
                },
                RPC_APP_DISCONNECTED: function(e) {
                    let {
                        application: t
                    } = e;
                    null != t.id && null != l[t.id] && (l[t.id].count--, 0 === l[t.id].count && delete l[t.id])
                }
            })
        },
        368694: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("517001"),
                a = n("305961"),
                l = n("697218"),
                o = n("848601"),
                u = n("963903");
            let c = "production" === u.Environments.DEVELOPMENT || window.GLOBAL_ENV.RELEASE_CHANNEL === u.Environments.STAGING;

            function d() {
                c = (0, s.isStaffEnv)(l.default.getCurrentUser())
            }
            class _ extends i.default.Store {
                initialize() {
                    this.waitFor(l.default, a.default), Object.defineProperties(this, {
                        isDeveloper: {
                            configurable: !1,
                            get: () => c
                        }
                    }), d(), setTimeout(() => Object.freeze(this))
                }
                getExperimentDescriptor() {
                    return c ? {
                        type: "developer",
                        name: "discord_dev_testing",
                        revision: 1,
                        override: !0,
                        bucket: o.ExperimentBuckets.TREATMENT_1
                    } : null
                }
                constructor(...e) {
                    super(...e), this.isDeveloper = !1
                }
            }
            _.displayName = "DeveloperExperimentStore";
            var E = new _(r.default, {
                CONNECTION_OPEN: d,
                OVERLAY_INITIALIZE: d,
                CURRENT_USER_UPDATE: d
            })
        },
        313915: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var i = n("435653"),
                r = n("620099"),
                s = n("498225"),
                a = n("990746"),
                l = n("173333"),
                o = n("913144"),
                u = n("527015"),
                c = n("286235"),
                d = n("49111");
            let _ = (() => {
                    let e = "".concat(location.protocol, "//").concat(location.host, "/__development/source_maps"),
                        t = null,
                        n = new i.default(5e3, 6e4, !0),
                        s = () => {
                            a.default.put({
                                url: e,
                                headers: {
                                    Authorization: r.default.getToken()
                                },
                                oldFormErrors: !0
                            }).then(e => {
                                401 === e.status || 403 === e.status ? (t = null, (0, u.setDeveloperOptionSettings)({
                                    sourceMapsEnabled: !1
                                })) : 200 !== e.status ? t = setTimeout(s, n.fail()) : (n.succeed(), t = setTimeout(s, 750 * e.body.sourceMapCookieTTLSeconds))
                            }, () => {
                                t = setTimeout(s, n.fail())
                            })
                        };
                    return {
                        set: n => {
                            let i = null != t;
                            n !== i && (n ? t = setTimeout(s, 0) : (clearTimeout(t), t = null, a.default.delete({
                                url: e,
                                headers: {
                                    Authorization: r.default.getToken()
                                },
                                oldFormErrors: !0
                            })))
                        }
                    }
                })(),
                E = "DeveloperOptionsStore",
                f = {
                    trace: !1,
                    canary: !1,
                    logGatewayEvents: !1,
                    logOverlayEvents: !1,
                    logAnalyticsEvents: !1,
                    sourceMapsEnabled: !1,
                    axeEnabled: !1,
                    analyticsDebuggerEnabled: !1,
                    bugReporterEnabled: !0,
                    idleStatusIndicatorEnabled: !1,
                    appDirectoryIncludesInactiveCollections: !1
                },
                p = {
                    ...f
                };

            function h(e) {
                p = {
                    ...f,
                    ...p,
                    ...e
                }, _.set(p.sourceMapsEnabled), l.default.set(E, p)
            }
            class S extends s.default.Store {
                initialize() {
                    let e = l.default.get(E);
                    null != e && (p = {
                        ...f,
                        ...e
                    })
                }
                get isTracingRequests() {
                    return p.trace
                }
                get isForcedCanary() {
                    return p.canary
                }
                get isLoggingGatewayEvents() {
                    return p.logGatewayEvents
                }
                get isLoggingOverlayEvents() {
                    return p.logOverlayEvents
                }
                get isLoggingAnalyticsEvents() {
                    return p.logAnalyticsEvents
                }
                get isAxeEnabled() {
                    return p.axeEnabled
                }
                get sourceMapsEnabled() {
                    return p.sourceMapsEnabled
                }
                get isAnalyticsDebuggerEnabled() {
                    return p.analyticsDebuggerEnabled
                }
                get isBugReporterEnabled() {
                    return p.bugReporterEnabled
                }
                get isIdleStatusIndicatorEnabled() {
                    return p.idleStatusIndicatorEnabled
                }
                get appDirectoryIncludesInactiveCollections() {
                    return p.appDirectoryIncludesInactiveCollections
                }
                getDebugOptionsHeaderValue() {
                    Object.keys(p).map(e => p[e]);
                    let e = Object.keys(p).filter(e => p[e]);
                    return e.join(",")
                }
            }
            S.displayName = "DeveloperOptionsStore";
            var T = new S(o.default, {
                LOGOUT: function(e) {
                    h(f)
                },
                CONNECTION_OPEN: function(e) {
                    var t;
                    let n = ((null !== (t = e.user.flags) && void 0 !== t ? t : 0) & d.UserFlags.STAFF) === d.UserFlags.STAFF,
                        i = n || null != e.user.personal_connection_id;
                    n && _.set(p.sourceMapsEnabled), c.default.setTags({
                        isStaff: i.toString()
                    })
                },
                DEVELOPER_OPTIONS_UPDATE_SETTINGS: function(e) {
                    let {
                        settings: t
                    } = e;
                    h(t)
                }
            })
        },
        760190: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("996777");
            class a extends i.default.Store {
                initialize() {
                    this.waitFor(s.default)
                }
                get hasLoadedExperiments() {
                    return s.default.hasLoadedExperiments
                }
                getExperimentBucket(e) {
                    return s.default.getUserExperimentBucket(e)
                }
                getEligibleExperiment(e) {
                    return s.default.getUserExperimentDescriptor(e)
                }
                getEligibleExperiments() {
                    return s.default.getAllUserExperimentDescriptors()
                }
                getRegisteredExperiments() {
                    return s.default.getRegisteredExperiments()
                }
                getExperimentOverrides() {
                    return s.default.getAllExperimentOverrideDescriptors()
                }
                getOverrideExperimentDescriptor(e) {
                    return s.default.getExperimentOverrideDescriptor(e)
                }
            }

            function l() {
                return !0
            }
            a.displayName = "LegacyExperimentStore";
            var o = new a(r.default, {
                LOGOUT: l,
                LOGIN_SUCCESS: l,
                CONNECTION_OPEN: l,
                EXPERIMENTS_FETCH_SUCCESS: l,
                OVERLAY_INITIALIZE: l,
                CACHE_LOADED: l,
                EXPERIMENTS_FETCH_FAILURE: l,
                EXPERIMENT_REGISTER_LEGACY: l,
                EXPERIMENT_OVERRIDE_BUCKET: l
            })
        },
        546463: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var i, r = n("427964"),
                s = n.n(r),
                a = n("498225"),
                l = n("173333"),
                o = n("913144"),
                u = n("845579"),
                c = n("653047"),
                d = n("449008"),
                _ = n("773336");
            let E = "GameStoreReportedGames",
                f = "DETECTABLE",
                p = {},
                h = new Set,
                S = {},
                T = {},
                I = {},
                m = {},
                g = null !== (i = l.default.get(E)) && void 0 !== i ? i : {},
                A = "",
                C = {},
                R = null;

            function N(e, t) {
                return "".concat(e, ":").concat(null != t ? t : "null")
            }

            function v(e) {
                if ("applicationIds" in e && null != e.applicationIds)
                    for (let t of e.applicationIds) C[t] = !0;
                else C[f] = !0
            }

            function O(e) {
                if ("applicationIds" in e && null != e.applicationIds)
                    for (let t of e.applicationIds) C[t] = !1;
                else C[f] = !1
            }

            function D(e) {
                for (let {
                        distributor: t,
                        id: n
                    }
                    of(p[e.id] = e, S[e.name.toLowerCase()] = e, e.thirdPartySkus)) T[N(t, n)] = e;
                for (let t of e.aliases) S[t.toLowerCase()] = e;
                if ((0, _.isDesktop)())
                    for (let t of e.executables) I[t.name] = e;
                delete C[e.id]
            }
            class L extends a.default.PersistedStore {
                initialize(e) {
                    if (null != e && (null != e.detectableGamesEtag && (A = e.detectableGamesEtag), null != e.detectableGames))
                        for (let t of Object.values(e.detectableGames)) {
                            let e = new c.default(t);
                            D(e), h.add(e.id)
                        }
                }
                getState() {
                    let e = [];
                    for (let t of h) {
                        let n = p[t];
                        null != n && e.push(n)
                    }
                    return {
                        detectableGamesEtag: A,
                        detectableGames: e
                    }
                }
                get games() {
                    return s.values(p)
                }
                getGame(e) {
                    return p[e]
                }
                getDetectableGame(e) {
                    if (h.has(e)) return p[e]
                }
                getGameByName(e) {
                    if (null == e) return null;
                    let t = e.toLowerCase();
                    return Object.prototype.hasOwnProperty.call(S, t) ? S[t] : null
                }
                get fetching() {
                    for (let e of s.values(C))
                        if (e) return e;
                    return !1
                }
                get detectableGamesEtag() {
                    return A
                }
                get lastFetched() {
                    return R
                }
                getGameByDistributorGame(e, t) {
                    return T[N(e, t)]
                }
                getGameByExecutable(e) {
                    return I[e]
                }
                getGameByGameData(e) {
                    var t, n;
                    let i;
                    if (null == e.exePath) return null;
                    let r = e.exePath.split("/").pop(),
                        s = e.exePath.split("/").slice(-2).join("/");
                    if (null != e.name) {
                        if (null != (i = this.getGameByName(e.name)) && null != i.executables) {
                            let e = i.executables.map(e => e.name);
                            if (e.includes(r) || e.includes(s)) return i
                        } else if (null != i) return null
                    }
                    return null !== (n = null !== (t = this.getGameByExecutable(r)) && void 0 !== t ? t : this.getGameByExecutable(s)) && void 0 !== n ? n : i
                }
                getApplicationsForGuild(e) {
                    return null == m[e] ? null : m[e].map(e => p[e]).filter(d.isNotNullish)
                }
                shouldReport(e) {
                    let t = null != this.getGameByName(e),
                        n = null != g[e];
                    return u.ShowCurrentGame.getSetting() && !C[f] && !(t || n)
                }
                markGameReported(e) {
                    g[e] = !0, l.default.set(E, g)
                }
                isFetching(e) {
                    return !0 === C[e]
                }
                didFetchingFail(e) {
                    return !1 === C[e]
                }
                getFetchingOrFailedFetchingIds() {
                    return [...Object.entries(C).map(e => {
                        let [t] = e;
                        return t
                    })]
                }
            }
            L.displayName = "GameStore", L.persistKey = "GameStore";
            var M = new L(o.default, {
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        applications: t
                    } = e;
                    for (let e of t) D(new c.default(e))
                },
                GAMES_DATABASE_FETCH: v,
                GAMES_DATABASE_FETCH_FAIL: O,
                GAMES_DATABASE_UPDATE: function(e) {
                    let {
                        games: t,
                        etag: n
                    } = e;
                    for (let e of (null != n && A !== n && (A = n), t)) {
                        let t = c.default.createFromServer(e);
                        D(t), h.add(t.id)
                    }
                    delete C[f], R = Date.now()
                },
                STORE_LISTING_FETCH_SUCCESS: function(e) {
                    let {
                        storeListing: t
                    } = e;
                    if (null == t.sku.application) return !1;
                    D(c.default.createFromServer(t.sku.application))
                },
                LIBRARY_FETCH_SUCCESS: function(e) {
                    let {
                        libraryApplications: t
                    } = e;
                    for (let e of t) D(c.default.createFromServer(e.application))
                },
                GIFT_CODE_RESOLVE_SUCCESS: function(e) {
                    let {
                        giftCode: t
                    } = e, n = t.store_listing;
                    if (null == n || null == n.sku.application) return !1;
                    D(c.default.createFromServer(n.sku.application))
                },
                APPLICATION_FETCH: function(e) {
                    let {
                        applicationId: t
                    } = e;
                    null != t && (C[t] = !0)
                },
                APPLICATION_FETCH_FAIL: function(e) {
                    let {
                        applicationId: t
                    } = e;
                    null != t && (C[t] = !1)
                },
                APPLICATION_FETCH_SUCCESS: function(e) {
                    let {
                        application: t
                    } = e;
                    D(c.default.createFromServer(t))
                },
                GUILD_APPLICATIONS_FETCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        applications: n
                    } = e;
                    for (let e of (m[t] = n.map(e => e.id), n)) D(c.default.createFromServer(e))
                },
                APPLICATIONS_FETCH: v,
                APPLICATIONS_FETCH_FAIL: O,
                APPLICATIONS_FETCH_SUCCESS: function(e) {
                    let {
                        applications: t
                    } = e;
                    if (0 === t.length) return !1;
                    t.forEach(e => D(c.default.createFromServer(e)))
                },
                BILLING_PAYMENTS_FETCH_SUCCESS: function(e) {
                    let {
                        payments: t
                    } = e, n = new Set;
                    return t.forEach(e => {
                        let t = null != e.sku ? e.sku.application : null;
                        null != t && !n.has(t.id) && D(c.default.createFromServer(t))
                    }), n.size > 0
                },
                PAYMENT_UPDATE: function(e) {
                    let {
                        payment: t
                    } = e, n = null != t.sku ? t.sku.application : null;
                    return null != n && (D(c.default.createFromServer(n)), !0)
                },
                ENTITLEMENTS_GIFTABLE_FETCH_SUCCESS: function(e) {
                    let {
                        entitlements: t
                    } = e;
                    for (let e of t) null != e.sku && null != e.sku.application && D(c.default.createFromServer(e.sku.application))
                },
                INVITE_RESOLVE_SUCCESS: function(e) {
                    let {
                        invite: t
                    } = e;
                    return null != t.target_application && (D(c.default.createFromServer(t.target_application)), !0)
                }
            })
        },
        341542: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("913144"),
                l = n("605250"),
                o = n("305961");
            let u = new l.default("GuildAvailabilityStore"),
                c = new Set;

            function d(e) {
                c = new Set(e.unavailableGuilds), e.unavailableGuilds.length > 0 && u.warn("".concat(e.unavailableGuilds.length, " guilds are unavailable on connection open: ").concat(e.unavailableGuilds))
            }

            function _(e) {
                if (!c.has(e.guild.id)) return !1;
                c.delete(e.guild.id), u.info("Guild has become available: ".concat(e.guild.id))
            }
            class E extends s.default.Store {
                initialize() {
                    this.waitFor(o.default)
                }
                isUnavailable(e) {
                    return null != e && c.has(e)
                }
                get totalGuilds() {
                    return r.size(o.default.getGuilds()) + c.size
                }
                get totalUnavailableGuilds() {
                    return c.size
                }
                get unavailableGuilds() {
                    return Array.from(c)
                }
            }
            E.displayName = "GuildAvailabilityStore";
            var f = new E(a.default, {
                CONNECTION_OPEN: d,
                OVERLAY_INITIALIZE: d,
                GUILD_UNAVAILABLE: function(e) {
                    if (c.has(e.guildId)) return !1;
                    let t = o.default.getGuild(e.guildId),
                        n = "???";
                    null != t && null != t.name && (n = t.name), u.warn("Guild has gone unavailable: ".concat(e.guildId, " (").concat(n, ")")), c.add(e.guildId)
                },
                GUILD_DELETE: function(e) {
                    !0 !== e.guild.unavailable && c.delete(e.guild.id)
                },
                GUILD_CREATE: _,
                GUILD_UPDATE: _
            })
        },
        923959: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GUILD_SELECTABLE_CHANNELS_KEY: function() {
                    return C
                },
                GUILD_VOCAL_CHANNELS_KEY: function() {
                    return R
                },
                default: function() {
                    return K
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("754013"),
                a = n("498225"),
                l = n("913144"),
                o = n("203288"),
                u = n("679653"),
                c = n("379881"),
                d = n("106682"),
                _ = n("233069"),
                E = n("991170"),
                f = n("271938"),
                p = n("42203"),
                h = n("26989"),
                S = n("305961"),
                T = n("957255"),
                I = n("27618"),
                m = n("697218"),
                g = n("49111"),
                A = n("782340");
            let C = "SELECTABLE",
                R = "VOCAL",
                N = null,
                v = {},
                O = {},
                D = {},
                L = null,
                M = {},
                P = {
                    comparator: -1,
                    channel: (0, _.createChannelRecord)({
                        id: "null",
                        type: g.ChannelTypes.GUILD_CATEGORY,
                        name: A.default.Messages.UNCATEGORIZED
                    })
                },
                b = G("null"),
                y = [],
                U = {};

            function G(e) {
                return {
                    id: e,
                    [C]: [],
                    [R]: [],
                    [g.ChannelTypes.GUILD_CATEGORY]: [P],
                    count: 0
                }
            }

            function w(e, t) {
                let {
                    comparator: n
                } = e, {
                    comparator: i
                } = t;
                return n - i
            }

            function x() {
                v = {}, M = {}, O = {}, D = {}, null != N && k(N)
            }

            function k(e) {
                var t;
                let n = G(e);
                return v[e] = n, M[e] = [], ! function(e) {
                        let {
                            id: t
                        } = e, n = function(e) {
                            if (e === g.FAVORITES) return function() {
                                let e = {},
                                    t = c.default.getFavoriteChannels();
                                for (let n in t) {
                                    let i = p.default.getChannel(n);
                                    if (null == i) continue;
                                    let r = t[n],
                                        s = (0, d.createFavoritesChannelRecord)(t, r, i);
                                    e[n] = {
                                        channel: s,
                                        comparator: s.position
                                    }
                                }
                                return e
                            }();
                            let t = {},
                                n = p.default.getMutableGuildChannelsForGuild(e);
                            for (let e in n) t[e] = {
                                channel: n[e],
                                comparator: n[e].position
                            };
                            return t
                        }(t);
                        r.forEach(n, n => {
                            var i;
                            let r = n.channel;
                            if (e.count += 1, _.GUILD_NON_CATEGORY_CHANNEL_TYPES.has(r.type) && !T.default.can(g.Permissions.VIEW_CHANNEL, r) && !o.default.isChannelGated(r.guild_id, r.id) && r.id !== L) return;
                            let s = (i = r.type, (0, _.isGuildSelectableChannelType)(i) ? C : (0, _.isGuildVocalChannelType)(i) ? R : i);
                            r.type === g.ChannelTypes.GUILD_DIRECTORY && (null == M[t] && (M[t] = []), M[t].push(n)), null != e[s] && e[s].push(n)
                        })
                    }(n), (t = n)[C].sort(w), t[R].sort(w), t[g.ChannelTypes.GUILD_CATEGORY].sort(w),
                    function(e) {
                        let t = O[e.id] = {},
                            n = {};
                        e[C].forEach(e => {
                            let {
                                channel: i
                            } = e, r = (0, u.computeChannelName)(i, m.default, I.default), s = Object.prototype.hasOwnProperty.call(n, r) ? n[r] : null;
                            null == s ? n[r] = 1 : (n[r] = s + 1, r += "~".concat(s)), t[i.id] = {
                                id: i.id,
                                name: r
                            }
                        })
                    }(n),
                    function(e) {
                        let t = m.default.getCurrentUser();
                        (function(e, t) {
                            let n = S.default.getGuild(t);
                            if (null != n && H(e, n)) return !0;
                            let i = v[t];
                            null == i && (i = k(t));
                            let {
                                [C]: r, [R]: s
                            } = i;
                            for (let {
                                    channel: t
                                }
                                of r)
                                if (H(e, t)) return !0;
                            for (let {
                                    channel: t
                                }
                                of s)
                                if (H(e, t)) return !0;
                            return !1
                        })(t, e) ? D[e] = !0: delete D[e]
                    }(e), n
            }

            function F(e) {
                let {
                    guild: {
                        id: t
                    }
                } = e;
                if (null == t) return !1;
                v[t] = void 0, N === t && k(t)
            }

            function B(e) {
                let {
                    channel: {
                        guild_id: t
                    }
                } = e;
                if (null == t) return !1;
                v[t] = void 0, t === N && k(t)
            }

            function V(e) {
                let {
                    guildId: t
                } = e;
                v[t] = void 0, t === N && k(t)
            }

            function H(e, t) {
                return s.default.hasAny(E.default.computePermissions({
                    user: e,
                    context: t,
                    checkElevated: !1
                }), g.ElevatedPermissions)
            }

            function j(e, t) {
                var n;
                L = t;
                let i = null !== (n = null == e ? void 0 : e.getGuildId()) && void 0 !== n ? n : null;
                if (null == i) return !1;
                v[i] = void 0, i === N && k(i)
            }

            function Y() {
                k(g.FAVORITES)
            }
            class W extends a.default.Store {
                initialize() {
                    this.waitFor(S.default, h.default, p.default, T.default, f.default, o.default, c.default), this.syncWith([c.default], Y)
                }
                getAllGuilds() {
                    return v
                }
                getChannels(e) {
                    var t;
                    let n;
                    return null != e ? (null == (n = v[t = e]) && (n = k(t)), n) : b
                }
                getDefaultChannel(e) {
                    let t = this.getChannels(e)[C],
                        n = t.find(e => T.default.can(g.Permissions.VIEW_CHANNEL, e.channel));
                    return null != n ? n.channel : null
                }
                getSelectableChannelIds(e) {
                    return this.getChannels(e)[C].map(e => {
                        let {
                            channel: t
                        } = e;
                        return t.id
                    })
                }
                getSelectableChannels(e) {
                    return this.getChannels(e)[C]
                }
                getVocalChannelIds(e) {
                    return this.getChannels(e)[R].map(e => {
                        let {
                            channel: t
                        } = e;
                        return t.id
                    })
                }
                getDirectoryChannelIds(e) {
                    var t, n;
                    return null !== (n = null === (t = M[e]) || void 0 === t ? void 0 : t.map(e => {
                        let {
                            channel: t
                        } = e;
                        return t.id
                    })) && void 0 !== n ? n : y
                }
                hasSelectableChannel(e, t) {
                    return this.getSelectableChannelIds(e).includes(t)
                }
                hasElevatedPermissions(e) {
                    return D[e] || !1
                }
                hasChannels(e) {
                    return this.getChannels(e).count > 0
                }
                hasCategories(e) {
                    return this.getChannels(e)[g.ChannelTypes.GUILD_CATEGORY].length > 1
                }
                getTextChannelNameDisambiguations(e) {
                    var t;
                    return null != e && null !== (t = O[e]) && void 0 !== t ? t : U
                }
            }
            W.displayName = "GuildChannelStore";
            var K = new W(l.default, {
                BACKGROUND_SYNC: x,
                CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (N = null != t ? t : null, null == t || null != v[t]) return !1;
                    k(t)
                },
                CONNECTION_OPEN: x,
                OVERLAY_INITIALIZE: x,
                CACHE_LOADED_LAZY: x,
                GUILD_CREATE: F,
                GUILD_UPDATE: F,
                GUILD_DELETE: function(e) {
                    let {
                        guild: {
                            id: t
                        }
                    } = e;
                    return delete v[t], delete O[t], delete D[t], delete M[t], !0
                },
                GUILD_MEMBER_UPDATE: function(e) {
                    let {
                        guildId: t,
                        user: n
                    } = e;
                    if (f.default.getId() !== n.id) return !1;
                    v[t] = void 0, t === N && k(t)
                },
                CHANNEL_CREATE: B,
                CHANNEL_DELETE: B,
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e, n = !1;
                    for (let e of t) {
                        let {
                            guild_id: t
                        } = e;
                        null != t && (v[t] = void 0, n = !0, N === t && k(t))
                    }
                    return n
                },
                GUILD_ROLE_CREATE: V,
                GUILD_ROLE_UPDATE: V,
                GUILD_ROLE_DELETE: V,
                IMPERSONATE_UPDATE: V,
                IMPERSONATE_STOP: V,
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return null == t && null != L ? j(p.default.getChannel(L), null) : j(p.default.getChannel(t), t)
                },
                VOICE_CHANNEL_STATUS_UPDATE: function(e) {
                    let t = p.default.getBasicChannel(e.id);
                    null != t && null != t.guild_id && k(t.guild_id)
                },
                VOICE_STATE_UPDATES: function(e) {
                    let {
                        voiceStates: t
                    } = e;
                    return t.reduce((e, t) => {
                        let {
                            channelId: n,
                            sessionId: i
                        } = t;
                        return f.default.getSessionId() !== i ? e : j(p.default.getChannel(n), n) || e
                    }, !1)
                }
            })
        },
        926787: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EMPTY_DISCOVERABLE_GUILDS_SECTION: function() {
                    return h
                },
                default: function() {
                    return L
                }
            });
            var i, r, s = n("161179"),
                a = n.n(s),
                l = n("427964"),
                o = n.n(l),
                u = n("498225");
            n("708001");
            var c = n("913144"),
                d = n("197231"),
                _ = n("271938"),
                E = n("251013"),
                f = n("49111"),
                p = n("447621");
            (i = r || (r = {})).UNSET = "unset", i.FETCHING = "fetching", i.FAILED = "failed", i.SUCCEEDED = "succeeded";
            let h = {
                    guilds: [],
                    total: 0,
                    offset: 0,
                    limit: 0,
                    loading: !1,
                    isFirstLoad: !0
                },
                S = {
                    [f.GuildDiscoverySections.FEATURED]: {
                        ...h
                    },
                    [f.GuildDiscoverySections.GAMES_YOU_PLAY]: {
                        ...h
                    },
                    [f.GuildDiscoverySections.MISC]: {
                        ...h
                    },
                    [f.GuildDiscoverySections.SEARCH]: {},
                    [p.DISCOVERY_ALL_CATEGORIES_ID]: {
                        ...h
                    }
                },
                T = "",
                I = !1,
                m = r.UNSET,
                g = null,
                A = p.DISCOVERY_ALL_CATEGORIES_ID,
                C = p.DISCOVERY_ALL_CATEGORIES_ID,
                R = null,
                N = [],
                v = (0, d.makeAnalyticsID)();

            function O(e) {
                return {
                    id: e.id,
                    name: e.name,
                    description: e.description,
                    splash: e.splash,
                    banner: e.banner,
                    icon: e.icon,
                    features: new Set(e.features),
                    presenceCount: e.approximate_presence_count,
                    memberCount: e.approximate_member_count,
                    premiumSubscriptionCount: e.premium_subscription_count,
                    preferredLocale: e.preferred_locale,
                    discoverySplash: e.discovery_splash,
                    emojis: e.emojis,
                    emojiCount: e.emoji_count,
                    keywords: e.keywords
                }
            }
            class D extends u.default.Store {
                initialize() {
                    this.waitFor(_.default)
                }
                isFetching() {
                    return I || null == g || null == E.default.lastFetched
                }
                isFetchingSearch() {
                    return m === r.FETCHING
                }
                hasSearchError() {
                    return m === r.FAILED
                }
                getDiscoverableGuilds() {
                    return S
                }
                getCurrentCategoryId() {
                    return A
                }
                getCurrentHomepageCategoryId() {
                    return C
                }
                getSearchIndex() {
                    return R
                }
                getMostRecentQuery() {
                    return T
                }
                getTopCategoryCounts(e) {
                    var t;
                    return null === (t = S[f.GuildDiscoverySections.SEARCH][e]) || void 0 === t ? void 0 : t.resultCounts
                }
                getSeenGuildIds() {
                    return N
                }
                getLoadId() {
                    return v
                }
            }
            D.displayName = "GuildDiscoveryStore";
            var L = new D(c.default, {
                GUILD_DISCOVERY_SEARCH_INIT: function(e) {
                    let {
                        index: t
                    } = e;
                    R = t
                },
                GUILD_DISCOVERY_FETCH_START: function(e) {
                    let {
                        section: t
                    } = e;
                    I = !0, S = {
                        ...S,
                        [t]: {
                            ...S[t],
                            loading: !0
                        }
                    }
                },
                GUILD_DISCOVERY_FETCH_SUCCESS: function(e) {
                    let {
                        guilds: t,
                        section: n,
                        total: i,
                        offset: r,
                        limit: s
                    } = e;
                    I = !1, g = Date.now(), v = (0, d.makeAnalyticsID)();
                    let a = o.map(t, O);
                    S = {
                        ...S,
                        [n]: {
                            guilds: a,
                            offset: r,
                            limit: s,
                            total: i,
                            loading: !1,
                            isFirstLoad: !1
                        }
                    }
                },
                GUILD_DISCOVERY_FETCH_FAILURE: function(e) {
                    let {
                        section: t
                    } = e;
                    I = !1, S = {
                        ...S,
                        [t]: {
                            ...h,
                            loading: !1
                        }
                    }
                },
                GUILD_DISCOVERY_POPULAR_FETCH_START: function(e) {
                    let {
                        categoryId: t
                    } = e;
                    I = !0, S = {
                        ...S,
                        [t]: {
                            ...h,
                            ...S[t],
                            loading: !0
                        }
                    }
                },
                GUILD_DISCOVERY_POPULAR_FETCH_SUCCESS: function(e) {
                    let {
                        categoryId: t,
                        guilds: n
                    } = e;
                    I = !1, g = Date.now();
                    let i = o.map(n, O);
                    S = {
                        ...S,
                        [t]: {
                            ...h,
                            guilds: i,
                            loading: !1,
                            isFirstLoad: !1
                        }
                    }
                },
                GUILD_DISCOVERY_POPULAR_FETCH_FAILURE: function(e) {
                    let {
                        categoryId: t
                    } = e;
                    I = !1, S = {
                        ...S,
                        [t]: {
                            ...h,
                            loading: !1
                        }
                    }
                },
                GUILD_DISCOVERY_SEARCH_FETCH_START: function(e) {
                    var t;
                    let {
                        section: n,
                        query: i,
                        categoryId: s
                    } = e;
                    a("search" === n, "This action only supports search it seems"), m = r.FETCHING, S = {
                        ...S,
                        [n]: {
                            ...S[n],
                            [i]: {
                                ...S[n][i],
                                [s]: {
                                    ...null === (t = S[n][i]) || void 0 === t ? void 0 : t[s],
                                    loading: !0
                                }
                            }
                        }
                    }, T = i
                },
                GUILD_DISCOVERY_SEARCH_FETCH_SUCCESS: function(e) {
                    var t;
                    let {
                        section: n,
                        guilds: i,
                        total: s,
                        offset: l,
                        limit: o,
                        query: u,
                        categoryId: c
                    } = e;
                    a("search" === n, "This action only supports search it seems");
                    let d = i.map(O);
                    S = {
                        ...S,
                        [n]: {
                            ...S[n],
                            [u]: {
                                ...S[n][u],
                                [c]: {
                                    ...null === (t = S[n][u]) || void 0 === t ? void 0 : t[c],
                                    guilds: d,
                                    total: s,
                                    offset: l,
                                    limit: o,
                                    loading: !1
                                }
                            }
                        }
                    }, T = u, m = r.SUCCEEDED
                },
                GUILD_DISCOVERY_SEARCH_FETCH_FAILURE: function(e) {
                    var t;
                    let {
                        section: n,
                        query: i,
                        categoryId: s
                    } = e;
                    a("search" === n, "This action only supports search it seems"), m = r.FAILED, S = {
                        ...S,
                        [n]: {
                            ...S[n],
                            [i]: {
                                ...S[n][i],
                                [s]: {
                                    ...null === (t = S[n][i]) || void 0 === t ? void 0 : t[s],
                                    loading: !1
                                }
                            }
                        }
                    }
                },
                GUILD_DISCOVERY_SELECT_CATEGORY: function(e) {
                    let {
                        categoryId: t,
                        isHomepage: n
                    } = e;
                    A = t, n && (C = t)
                },
                GUILD_DISCOVERY_CLEAR_SEARCH: function() {
                    T = ""
                },
                GUILD_DISCOVERY_SEARCH_UPDATE_COUNTS: function(e) {
                    let {
                        nbHits: t,
                        facets: n,
                        query: i
                    } = e, r = [];
                    if (null != n) {
                        var s;
                        let e = null !== (s = n["categories.id"]) && void 0 !== s ? s : {};
                        delete e[p.DEFAULT_DISCOVERY_CATEGORY_ID], r = Object.entries(e).map(e => {
                            let [t, n] = e;
                            return [parseInt(t, 10), n]
                        }).sort((e, t) => t[1] - e[1]).slice(0, 7)
                    }
                    S = {
                        ...S,
                        [f.GuildDiscoverySections.SEARCH]: {
                            ...S[f.GuildDiscoverySections.SEARCH],
                            [i]: {
                                ...S[f.GuildDiscoverySections.SEARCH][i],
                                resultCounts: [
                                    [p.DISCOVERY_ALL_CATEGORIES_ID, Math.min(p.MAX_ALGOLIA_PAGINATOR_RESULTS, t)], ...r
                                ]
                            }
                        }
                    }
                },
                GUILD_DISCOVERY_SEARCH_COUNTS_FAIL: function(e) {
                    let {
                        query: t
                    } = e;
                    S = {
                        ...S,
                        [f.GuildDiscoverySections.SEARCH]: {
                            ...S[f.GuildDiscoverySections.SEARCH],
                            [t]: {
                                ...S[f.GuildDiscoverySections.SEARCH][t],
                                resultCounts: null
                            }
                        }
                    }
                },
                GUILD_DISCOVERY_GUILD_SEEN: function(e) {
                    let {
                        guildId: t
                    } = e;
                    !N.includes(t) && N.push(t)
                },
                GUILD_DISCOVERY_CLEAR_SEEN_GUILDS: function() {
                    N = []
                }
            })
        },
        525065: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var i = n("498225"),
                r = n("913144");
            let s = {},
                a = {};

            function l(e) {
                let {
                    invite: t
                } = e, {
                    guild: n,
                    approximate_presence_count: i
                } = t;
                if ((null == n ? void 0 : n.id) == null || null == i) return !1;
                a[n.id] = i
            }
            class o extends i.default.Store {
                getMemberCounts() {
                    return s
                }
                getMemberCount(e) {
                    return null != e ? s[e] : null
                }
                getOnlineCount(e) {
                    return null != e ? a[e] : null
                }
            }
            o.displayName = "GuildMemberCountStore";
            var u = new o(r.default, {
                CONNECTION_OPEN: function(e) {
                    let {
                        guilds: t
                    } = e;
                    s = {}, t.forEach(e => {
                        s[e.id] = e.member_count
                    })
                },
                OVERLAY_INITIALIZE: function(e) {
                    s = {
                        ...e.guildMemberCounts
                    }
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    s[t.id] = t.member_count
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    if (null == s[t.id] && null == a[t.id]) return !1;
                    delete s[t.id], delete a[t.id]
                },
                GUILD_MEMBER_LIST_UPDATE: function(e) {
                    let {
                        guildId: t,
                        memberCount: n
                    } = e, i = s[t];
                    if (i === n) return !1;
                    s[t] = n
                },
                INVITE_ACCEPT_SUCCESS: l,
                INVITE_RESOLVE_SUCCESS: l,
                ONLINE_GUILD_MEMBER_COUNT_UPDATE: function(e) {
                    let {
                        guildId: t,
                        count: n
                    } = e;
                    if (null == t || null == n) return !1;
                    a[t] = n
                }
            })
        },
        26989: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getUserIdFromCommunicationDisabledUserKey: function() {
                    return G
                },
                getGuildIdFromCommunicationDisabledUserKey: function() {
                    return w
                },
                default: function() {
                    return Z
                }
            });
            var i, r, s = n("427964"),
                a = n.n(s),
                l = n("253824"),
                o = n("498225"),
                u = n("913144"),
                c = n("605250"),
                d = n("509"),
                _ = n("564568"),
                E = n("38654"),
                f = n("568734"),
                p = n("449008"),
                h = n("271938"),
                S = n("42203"),
                T = n("305961"),
                I = n("657944");
            let m = new c.default("GuildMemberStore"),
                g = {},
                A = {},
                C = {},
                R = !1,
                N = 0,
                v = 0,
                O = {},
                D = {},
                L = {
                    added: [],
                    removed: []
                };

            function M(e, t) {
                if (null == t.communicationDisabledUntil || !(0, d.isMemberCommunicationDisabled)(t)) return P(e, t.userId);
                let n = U(e, t.userId),
                    i = C[n];
                i !== t.communicationDisabledUntil && (0, d.isMemberCommunicationDisabled)(t) && (C[n] = t.communicationDisabledUntil, b(n))
            }

            function P(e, t) {
                if (null != t) {
                    let n = U(e, t);
                    null != C[n] && b(n), y(U(e, t))
                } else
                    for (let t in C) {
                        let n = w(t);
                        n === e && (b(t), y(t))
                    }
            }

            function b(e) {
                N += 1, O[e] = N
            }

            function y(e) {
                G(e) === h.default.getId() && (0, _.clearCommunicationDisabledNotice)(w(e)), delete C[e]
            }

            function U(e, t) {
                let n = [];
                return n[r.GUILD] = e, n[r.USER] = t, n.join("-")
            }

            function G(e) {
                return e.split("-")[r.USER]
            }

            function w(e) {
                return e.split("-")[r.GUILD]
            }

            function x(e, t) {
                var n, i, r, s, a;
                let o, u, c, d, _;
                if (0 === t.length) return {
                    colorString: void 0,
                    colorRoleId: void 0,
                    hoistRoleId: void 0,
                    iconRoleId: void 0,
                    highestRoleId: void 0
                };
                for (let n of t) {
                    let t = e[n];
                    if (null == t) continue;
                    (null == _ || t.position > _.position) && (_ = t), t.color > 0 && (null == u || t.position > u.position) && (u = t), t.hoist && (null == c || t.position > c.position) && (c = t);
                    let i = null != t.icon || null != t.unicodeEmoji;
                    i && (null == d || t.position > d.position) && (d = t)
                }
                return null != u && (null == u.colorString && u.color > 0 && (u.colorString = (0, l.int2hex)(u.color)), o = null !== (a = u.colorString) && void 0 !== a ? a : void 0), {
                    colorString: o,
                    colorRoleId: null === (n = u) || void 0 === n ? void 0 : n.id,
                    iconRoleId: null === (i = d) || void 0 === i ? void 0 : i.id,
                    hoistRoleId: null === (r = c) || void 0 === r ? void 0 : r.id,
                    highestRoleId: null === (s = _) || void 0 === s ? void 0 : s.id
                }
            }

            function k(e) {
                let {
                    userId: t,
                    nick: n,
                    guildId: i,
                    avatar: r,
                    guildRoles: s,
                    roles: a,
                    premiumSince: l,
                    isPending: o,
                    joinedAt: u,
                    communicationDisabledUntil: c,
                    unusualDMActivityUntil: d,
                    fullProfileLoadedTimestamp: _,
                    flags: f
                } = e, {
                    colorString: p,
                    colorRoleId: S,
                    iconRoleId: T,
                    hoistRoleId: I,
                    highestRoleId: m
                } = x(s, a), C = {
                    userId: t,
                    nick: n,
                    guildId: i,
                    avatar: r,
                    roles: a,
                    colorString: p,
                    colorRoleId: S,
                    iconRoleId: T,
                    hoistRoleId: I,
                    highestRoleId: m,
                    premiumSince: l,
                    isPending: o,
                    joinedAt: u,
                    communicationDisabledUntil: c,
                    unusualDMActivityUntil: d,
                    fullProfileLoadedTimestamp: _,
                    flags: f
                }, R = g[i];
                if (null == R) return C;
                if (t === h.default.getId()) {
                    if (E.default.isViewingRoles(i) || E.default.isFullServerPreview(i)) {
                        let e = E.default.getViewingRoles(i);
                        A[i] = {
                            ...C,
                            ...E.default.getMemberOptions(i),
                            roles: null != e ? Object.keys(e) : []
                        }
                    } else null != A[i] && delete A[i]
                }
                return C
            }(i = r || (r = {}))[i.GUILD = 0] = "GUILD", i[i.USER = 1] = "USER";

            function F(e) {
                e.guilds.forEach(e => {
                    H(e)
                })
            }

            function B(e) {
                var t;
                let {
                    guildId: n,
                    user: i,
                    nick: r,
                    avatar: s,
                    roles: a,
                    premiumSince: l,
                    isPending: o,
                    joinedAt: u,
                    communicationDisabledUntil: c,
                    unusualDMActivityUntil: d,
                    flags: _
                } = e, E = g[n];
                if (null == E) return !1;
                let f = T.default.getGuild(n);
                if (null == f) return m.warn("Guild ".concat(n, " not found during GUILD_MEMBER_UPDATE.")), !1;
                E[i.id] = k({
                    userId: i.id,
                    nick: r,
                    guildId: n,
                    avatar: s,
                    guildRoles: f.roles,
                    roles: a,
                    premiumSince: l,
                    isPending: o,
                    joinedAt: u,
                    communicationDisabledUntil: c,
                    unusualDMActivityUntil: d,
                    fullProfileLoadedTimestamp: null === (t = E[i.id]) || void 0 === t ? void 0 : t.fullProfileLoadedTimestamp,
                    flags: _
                }), M(n, E[i.id])
            }

            function V(e, t) {
                let n = g[e];
                if (null == n) return !1;
                let i = T.default.getGuild(e);
                return null == i ? (m.warn("Guild ".concat(e, " not found during GUILD_MEMBERS_CHUNK.")), !1) : (t.forEach(t => {
                    var r;
                    let s = n[t.user.id];
                    n[t.user.id] = k({
                        userId: t.user.id,
                        nick: t.nick,
                        guildId: e,
                        avatar: t.avatar,
                        guildRoles: i.roles,
                        roles: t.roles,
                        premiumSince: t.premium_since,
                        isPending: t.pending,
                        joinedAt: t.joined_at,
                        communicationDisabledUntil: t.communication_disabled_until,
                        flags: t.flags,
                        fullProfileLoadedTimestamp: null == s ? void 0 : s.fullProfileLoadedTimestamp,
                        unusualDMActivityUntil: null !== (r = t.unusual_dm_activity_until) && void 0 !== r ? r : null == s ? void 0 : s.unusualDMActivityUntil
                    }), M(e, n[t.user.id])
                }), v++, !0)
            }

            function H(e) {
                let t = e.id;
                !(t in g) && (g[e.id] = {});
                let n = T.default.getGuild(t);
                if (null == n) return !1;
                let i = g[t];
                for (let s of e.members) {
                    var r;
                    let a = s.user.id,
                        l = i[a],
                        o = k({
                            userId: a,
                            nick: s.nick,
                            guildId: e.id,
                            avatar: s.avatar,
                            guildRoles: n.roles,
                            roles: s.roles,
                            premiumSince: s.premium_since,
                            isPending: s.pending,
                            joinedAt: s.joined_at,
                            communicationDisabledUntil: s.communication_disabled_until,
                            fullProfileLoadedTimestamp: null == l ? void 0 : l.fullProfileLoadedTimestamp,
                            flags: s.flags,
                            unusualDMActivityUntil: null !== (r = s.unusual_dm_activity_until) && void 0 !== r ? r : null == l ? void 0 : l.unusualDMActivityUntil
                        });
                    i[a] = o, M(t, o)
                }
                return !0
            }

            function j(e) {
                let t = g[e.guildId];
                if (null == t) return !1;
                let n = T.default.getGuild(e.guildId);
                if (null == n) return m.warn("Guild ".concat(e.guildId, " not found during ").concat(e.type, ".")), !1;
                for (let i of Object.keys(t)) {
                    let r = t[i];
                    if (null != r.roles && r.roles.length > 0 || null != r.colorString || null != r.hoistRoleId) t[i] = k({
                        userId: i,
                        nick: r.nick,
                        guildId: e.guildId,
                        avatar: r.avatar,
                        guildRoles: n.roles,
                        roles: r.roles,
                        premiumSince: r.premiumSince,
                        isPending: r.isPending,
                        joinedAt: r.joinedAt,
                        flags: r.flags,
                        fullProfileLoadedTimestamp: null == r ? void 0 : r.fullProfileLoadedTimestamp
                    }), M(e.guildId, t[i])
                }
            }

            function Y(e) {
                let {
                    guildId: t
                } = e, n = g[t];
                if (null == n) return !1;
                let i = T.default.getGuild(t);
                if (null == i) return m.warn("Guild ".concat(t, " not found during IMPERSONATE_UPDATE.")), !1;
                let r = h.default.getId(),
                    s = n[r];
                n[r] = k({
                    userId: r,
                    nick: s.nick,
                    guildId: t,
                    avatar: s.avatar,
                    guildRoles: i.roles,
                    roles: s.roles,
                    premiumSince: s.premiumSince,
                    isPending: s.isPending,
                    joinedAt: s.joinedAt,
                    communicationDisabledUntil: s.communicationDisabledUntil,
                    fullProfileLoadedTimestamp: s.fullProfileLoadedTimestamp,
                    flags: s.flags
                })
            }

            function W(e) {
                var t;
                let {
                    message: n,
                    guildId: i
                } = e;
                (null === (t = n.resolved) || void 0 === t ? void 0 : t.members) != null && null != i && H({
                    id: i,
                    members: Object.entries(n.resolved.members).map(e => {
                        var t, i;
                        let [r, s] = e, a = null === (i = n.resolved) || void 0 === i ? void 0 : null === (t = i.users) || void 0 === t ? void 0 : t[r];
                        if (null != a) return {
                            ...s,
                            user: a
                        }
                    }).filter(e => null != e)
                })
            }

            function K(e) {
                let {
                    messages: t
                } = e;
                t.forEach(e => (function(e) {
                    var t;
                    if ((null === (t = e.resolved) || void 0 === t ? void 0 : t.members) == null) return;
                    let n = S.default.getChannel(e.channel_id);
                    !(null == n || n.isPrivate()) && H({
                        id: n.guild_id,
                        members: Object.entries(e.resolved.members).map(t => {
                            var n, i;
                            let [r, s] = t, a = null === (i = e.resolved) || void 0 === i ? void 0 : null === (n = i.users) || void 0 === n ? void 0 : n[r];
                            if (null != a) return {
                                ...s,
                                user: a
                            }
                        }).filter(e => null != e)
                    })
                })(e))
            }
            class z extends o.default.Store {
                initialize() {
                    this.waitFor(T.default, h.default, E.default)
                }
                getMutableAllGuildsAndMembers() {
                    return g
                }
                memberOf(e) {
                    return a(g).toPairs().filter(t => {
                        let [n, i] = t;
                        return null != i[e]
                    }).map(e => {
                        let [t] = e;
                        return t
                    }).value()
                }
                getNicknameGuildsMapping(e) {
                    let t = {};
                    for (let i in g) {
                        var n;
                        let r = g[i],
                            s = null === (n = r[e]) || void 0 === n ? void 0 : n.nick;
                        null != s && (!Object.prototype.hasOwnProperty.call(t, s) && (t[s] = []), t[s].push(i))
                    }
                    return t
                }
                getNicknames(e) {
                    return Object.keys(this.getNicknameGuildsMapping(e))
                }
                isMember(e, t) {
                    if (null == e || null == t) return !1;
                    let n = g[e];
                    return null != n && null != n[t]
                }
                isGuestOrLurker(e, t) {
                    var n;
                    if (null == e || null == t) return !1;
                    let i = g[e];
                    return null != i && (null === (n = i[t]) || void 0 === n ? void 0 : n.joinedAt) == null
                }
                isCurrentUserGuest(e) {
                    if (null == e) return !1;
                    let t = h.default.getId(),
                        n = g[e];
                    if (null == n || null == n[t]) return !1;
                    let i = n[t].flags;
                    return null != i && (0, f.hasFlag)(i, I.GuildMemberFlags.IS_GUEST)
                }
                getMemberIds(e) {
                    if (null == e) return [];
                    let t = g[e];
                    return null == t ? [] : Object.keys(t)
                }
                getMembers(e) {
                    if (null == e) return [];
                    let t = g[e];
                    return null == t ? [] : Object.values(t)
                }
                getTrueMember(e, t) {
                    let n = g[e];
                    return null != n ? n[t] : null
                }
                getMember(e, t) {
                    let n = this.getTrueMember(e, t);
                    if (null != n && t === h.default.getId() && (E.default.isViewingRoles(e) || E.default.isFullServerPreview(e))) {
                        var i;
                        return null !== (i = A[e]) && void 0 !== i ? i : n
                    }
                    return n
                }
                getSelfMember(e) {
                    return this.getMember(e, h.default.getId())
                }
                getNick(e, t) {
                    if (null == e || null == t) return null;
                    let n = this.getMember(e, t);
                    return null != n ? n.nick : null
                }
                getCommunicationDisabledUserMap() {
                    return C
                }
                getCommunicationDisabledVersion() {
                    return N
                }
                getPendingRoleUpdates(e) {
                    var t;
                    return null !== (t = D[e]) && void 0 !== t ? t : L
                }
                getMemberRoleWithPendingUpdates(e, t) {
                    var n, i;
                    let r = null !== (i = null === (n = this.getMember(e, t)) || void 0 === n ? void 0 : n.roles) && void 0 !== i ? i : [],
                        s = D[e];
                    return null == s ? r : a.difference(a.union(r, s.added), s.removed)
                }
                getMemberVersion() {
                    return v
                }
            }
            z.displayName = "GuildMemberStore";
            var Z = new z(u.default, {
                CONNECTION_OPEN: function(e) {
                    R ? R = !1 : g = {}, C = {}, F(e)
                },
                CONNECTION_OPEN_SUPPLEMENTAL: function(e) {
                    F(e)
                },
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        guildMembers: t
                    } = e;
                    g = {
                        ...t
                    }
                },
                CACHE_LOADED: function(e) {
                    let {
                        guildMembers: t
                    } = e;
                    R = !0, g = {
                        ...t
                    }
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    return H(t)
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    delete g[t.id], P(t.id)
                },
                GUILD_MEMBER_ADD: B,
                GUILD_MEMBER_UPDATE: B,
                GUILD_MEMBER_UPDATE_LOCAL: function(e) {
                    var t, n, i;
                    let {
                        guildId: r,
                        roles: s,
                        addedRoleIds: l,
                        removedRoleIds: o,
                        flags: u
                    } = e, c = h.default.getId(), d = g[r], _ = null != d ? d[c] : null;
                    if (null == _) return !1;
                    let E = T.default.getGuild(r);
                    if (null == E) return !1;
                    let f = null !== (t = D[r]) && void 0 !== t ? t : {};
                    D[r] = {
                        added: a.difference(a.union(null !== (n = f.added) && void 0 !== n ? n : [], l), null != o ? o : []),
                        removed: a.difference(a.union(null !== (i = f.removed) && void 0 !== i ? i : [], o), null != l ? l : [])
                    }, d[c] = k({
                        userId: c,
                        guildId: r,
                        nick: _.nick,
                        avatar: _.avatar,
                        guildRoles: E.roles,
                        roles: null != s ? s : _.roles,
                        premiumSince: _.premiumSince,
                        isPending: _.isPending,
                        joinedAt: _.joinedAt,
                        flags: null != u ? u : _.flags,
                        fullProfileLoadedTimestamp: _.fullProfileLoadedTimestamp
                    })
                },
                GUILD_MEMBERS_CHUNK: function(e) {
                    return V(e.guildId, e.members)
                },
                GUILD_MEMBER_REMOVE: function(e) {
                    let {
                        guildId: t,
                        user: n
                    } = e, i = g[t];
                    if (null == i || null == i[n.id]) return !1;
                    delete i[n.id], P(t, n.id), v++
                },
                THREAD_MEMBER_LIST_UPDATE: function(e) {
                    let {
                        guildId: t,
                        members: n
                    } = e;
                    return V(t, n.map(e => e.member).filter(p.isNotNullish))
                },
                THREAD_MEMBERS_UPDATE: function(e) {
                    let {
                        guildId: t,
                        addedMembers: n
                    } = e;
                    return null != n && V(t, n.map(e => e.member).filter(p.isNotNullish))
                },
                LOAD_ARCHIVED_THREADS_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        owners: n
                    } = e;
                    return V(t, n)
                },
                LOAD_FORUM_POSTS: function(e) {
                    let {
                        guildId: t,
                        threads: n
                    } = e;
                    return V(t, Object.values(n).map(e => e.owner).filter(p.isNotNullish))
                },
                GUILD_ROLE_UPDATE: j,
                GUILD_ROLE_DELETE: j,
                GUILD_ROLE_MEMBER_REMOVE: function(e) {
                    let {
                        guildId: t,
                        userId: n,
                        roleId: i
                    } = e, r = g[t];
                    if (null == r) return !1;
                    let s = T.default.getGuild(t);
                    if (null == s) return m.warn("Guild ".concat(t, " not found during GUILD_MEMBER_UPDATE.")), !1;
                    let a = r[n];
                    if (null == a || !a.roles.includes(i)) return !1;
                    a.roles = a.roles.filter(e => e !== i);
                    let l = x(s.roles, a.roles);
                    return r[n] = {
                        ...a,
                        ...l
                    }, !0
                },
                GUILD_ROLE_MEMBER_ADD: function(e) {
                    let {
                        guildId: t,
                        userId: n,
                        roleId: i
                    } = e, r = g[t];
                    if (null == r) return !1;
                    let s = T.default.getGuild(t);
                    if (null == s) return m.warn("Guild ".concat(t, " not found during GUILD_MEMBER_UPDATE.")), !1;
                    let a = r[n];
                    if (null == a || a.roles.includes(i)) return !1;
                    a.roles.push(i);
                    let l = x(s.roles, a.roles);
                    return r[n] = {
                        ...a,
                        ...l
                    }, !0
                },
                GUILD_MEMBER_PROFILE_UPDATE: function(e) {
                    let {
                        guildMember: t,
                        guildId: n
                    } = e, i = g[n];
                    if (null == i) return !1;
                    let r = T.default.getGuild(n);
                    if (null == r) return m.warn("Guild ".concat(n, " not found during GUILD_MEMBER_UPDATE.")), !1;
                    i[t.user.id] = k({
                        userId: t.user.id,
                        nick: t.nick,
                        guildId: n,
                        avatar: t.avatar,
                        guildRoles: r.roles,
                        roles: t.roles,
                        premiumSince: t.premium_since,
                        isPending: t.pending,
                        joinedAt: t.joined_at,
                        communicationDisabledUntil: t.communication_disabled_until,
                        unusualDMActivityUntil: t.unusual_dm_activity_until,
                        flags: t.flags,
                        fullProfileLoadedTimestamp: Date.now()
                    }), M(n, i[t.user.id])
                },
                IMPERSONATE_UPDATE: Y,
                IMPERSONATE_STOP: Y,
                PASSIVE_UPDATE_V1: function(e) {
                    return null != e.members && V(e.guildId, e.members)
                },
                CLEAR_PENDING_CHANNEL_AND_ROLE_UPDATES: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == t) return !1;
                    delete D[t]
                },
                LOCAL_MESSAGES_LOADED: function(e) {
                    var t, n;
                    if (null == e.guildId || null == T.default.getGuild(e.guildId)) return !1;
                    R = !0, g[e.guildId] = null !== (t = g[e.guildId]) && void 0 !== t ? t : {};
                    let i = !1;
                    for (let t of (R = !0, g[e.guildId] = null !== (n = g[e.guildId]) && void 0 !== n ? n : {}, e.members)) null == g[e.guildId][t.userId] && (i = !0, g[e.guildId][t.userId] = t);
                    return i
                },
                MESSAGE_CREATE: W,
                MESSAGE_UPDATE: W,
                LOAD_MESSAGES_SUCCESS: K,
                LOAD_MESSAGES_AROUND_SUCCESS: K,
                LOAD_PINNED_MESSAGES_SUCCESS: K,
                LOAD_RECENT_MENTIONS_SUCCESS: K,
                SEARCH_FINISH: function(e) {
                    let {
                        messages: t
                    } = e;
                    t.forEach(e => K({
                        messages: e
                    }))
                },
                MEMBER_SAFETY_GUILD_MEMBER_SEARCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        members: n
                    } = e, i = n.map(e => {
                        let {
                            member: t
                        } = e;
                        return t
                    });
                    return V(t, i)
                }
            })
        },
        778689: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var i = n("498225"),
                r = n("913144");
            class s extends i.Store {
                allGuildIds() {
                    return this.guildIds
                }
                isMember(e) {
                    return this.guildIds.has(e)
                }
                handleConnectionOpen(e) {
                    this.guildIds = new Set([...e.guilds.map(e => e.id), ...e.unavailableGuilds])
                }
                handleCacheLoaded(e) {
                    this.guildIds = new Set(e.guilds.map(e => e.id))
                }
                handleGuildCreate(e) {
                    this.guildIds.add(e.guild.id)
                }
                handleGuildDelete(e) {
                    !0 !== e.guild.unavailable && this.guildIds.delete(e.guild.id)
                }
                constructor() {
                    super(r.default, {
                        CACHE_LOADED_LAZY: e => this.handleCacheLoaded(e),
                        CACHE_LOADED: e => this.handleCacheLoaded(e),
                        CONNECTION_OPEN: e => this.handleConnectionOpen(e),
                        GUILD_CREATE: e => this.handleGuildCreate(e),
                        GUILD_DELETE: e => this.handleGuildDelete(e)
                    }, r.DispatchBand.Early), this.guildIds = new Set
                }
            }
            var a = new s
        },
        305961: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var r = n("427964"),
                s = n.n(r),
                a = n("498225"),
                l = n("913144"),
                o = n("813006"),
                u = n("665618"),
                c = n("605136"),
                d = n("271938"),
                _ = n("49111"),
                E = n("695838");
            let f = {},
                p = !1;

            function h(e) {
                f = {}, i = 0, null != e.guilds && s.forEach(e.guilds, e => {
                    i++, f[e.id] = u.fromSerializedGuildRecord(e)
                })
            }

            function S(e) {
                let {
                    guildId: t,
                    role: n
                } = e, i = f[t];
                null != i && (f = {
                    ...f,
                    [i.id]: i.upsertRole(c.fromServerRole(n))
                })
            }
            class T extends a.default.Store {
                getGuild(e) {
                    if (null != e) return e === _.FAVORITES ? E.FAVORITES_GUILD_RECORD : f[e]
                }
                getGuilds() {
                    return f
                }
                getGuildIds() {
                    return Object.keys(f)
                }
                getGuildCount() {
                    return i
                }
                isLoaded() {
                    return p
                }
            }
            T.displayName = "GuildStore";
            var I = new T(l.default, {
                BACKGROUND_SYNC: function(e) {
                    for (let t of e.guilds) {
                        let e = f[t.id];
                        if (null == e || "unavailable" === t.data_mode) return;
                        f[t.id] = u.fromBackgroundSync(t, e)
                    }
                    i = Object.keys(f).length
                },
                CONNECTION_OPEN: function(e) {
                    p = !0, f = {}, i = 0, e.guilds.forEach(e => {
                        i++, f[e.id] = u.fromServer(e)
                    })
                },
                OVERLAY_INITIALIZE: function(e) {
                    var t;
                    f = {}, i = 0, null === (t = e.guilds) || void 0 === t || t.forEach(e => {
                        i++, f[e.id] = new o.default(e)
                    })
                },
                CACHE_LOADED: h,
                CACHE_LOADED_LAZY: h,
                GUILD_CREATE: function(e) {
                    let t = u.fromServer(e.guild, f[e.guild.id]);
                    null == f[t.id] && i++, f = {
                        ...f,
                        [t.id]: t
                    }
                },
                GUILD_UPDATE: function(e) {
                    let t = u.fromServerUpdate(e.guild, f[e.guild.id]);
                    null == f[t.id] && i++, f = {
                        ...f,
                        [t.id]: t
                    }
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    if (null == f[t.id] || t.unavailable) return !1;
                    f = {
                        ...f
                    }, delete f[t.id], i--
                },
                GUILD_ROLE_CREATE: S,
                GUILD_ROLE_UPDATE: S,
                GUILD_ROLE_DELETE: function(e) {
                    let {
                        guildId: t,
                        roleId: n
                    } = e, i = f[t];
                    null != i && (f = {
                        ...f,
                        [t]: i.deleteRole(n)
                    })
                },
                GUILD_MEMBER_ADD: function(e) {
                    let {
                        guildId: t,
                        joinedAt: n,
                        user: i
                    } = e, r = d.default.getId(), s = f[t];
                    if (r !== i.id || null == s) return !1;
                    let a = "string" == typeof n ? new Date(n) : n;
                    if (a === s.joinedAt || null == a) return !1;
                    f = {
                        ...f,
                        [t]: s.updateJoinedAt(a)
                    }
                },
                GUILD_APPLICATION_COMMAND_INDEX_UPDATE: function(e) {
                    let {
                        guildId: t,
                        applicationCommandCounts: n
                    } = e, i = f[t];
                    if (null == i) return !1;
                    f = {
                        ...f,
                        [i.id]: i.merge({
                            applicationCommandCounts: n
                        })
                    }
                },
                GUILD_SETTINGS_SUBMIT_SUCCESS: function() {
                    return !0
                }
            })
        },
        855867: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("49111");
            let a = {};
            class l extends i.default.Store {
                getHookError(e) {
                    return a[e]
                }
            }
            l.displayName = "HookErrorStore";
            var o = new l(r.default, {
                MEDIA_ENGINE_SET_GO_LIVE_SOURCE: function() {
                    a = {}
                },
                MEDIA_ENGINE_SOUNDSHARE_TRANSMITTING: function() {
                    delete a[s.MediaEngineHookTypes.SOUND]
                },
                MEDIA_ENGINE_SOUNDSHARE_FAILED: function(e) {
                    let {
                        errorMessage: t,
                        errorCode: n
                    } = e;
                    a[s.MediaEngineHookTypes.SOUND] = {
                        errorMessage: t,
                        errorCode: n
                    }
                }
            })
        },
        560733: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("49111");
            let a = 0;
            class l extends i.default.Store {
                getId() {
                    return a
                }
            }
            l.displayName = "InstanceIdStore";
            var o = new l(r.default, {
                RPC_SERVER_READY: function(e) {
                    let {
                        port: t
                    } = e;
                    a = s.RPC_STARTING_PORT - t
                }
            })
        },
        686470: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("173333"),
                l = n("913144"),
                o = n("370999"),
                u = n("568734"),
                c = n("964889"),
                d = n("271938"),
                _ = n("49111");
            let E = "LibraryApplicationStore";

            function f() {
                var e;
                return null !== (e = a.default.get(E)) && void 0 !== e ? e : {}
            }
            let p = !1,
                h = {},
                S = {},
                T = new Set,
                I = {},
                m = {},
                g = !1;

            function A() {
                a.default.set(E, {
                    ...f(),
                    activeLaunchOptionIds: m
                })
            }

            function C() {
                a.default.set(E, {
                    ...f(),
                    activeLibraryApplicationBranchIds: I
                })
            }

            function R(e) {
                for (let t of e) {
                    let e = o.default.createFromServer(t),
                        n = (0, c.getComboId)(e.id, e.branchId);
                    h[n] = e
                }
            }

            function N(e) {
                let {
                    libraryApplication: t
                } = e, n = o.default.createFromServer(t), i = (0, c.getComboId)(n.id, n.branchId);
                h[i] = n, T.delete(i)
            }

            function v(e, t) {
                var n;
                let i = (0, c.getComboId)(e, t);
                return null !== (n = h[i]) && void 0 !== n ? n : S[i]
            }

            function O() {
                return {
                    ...S,
                    ...h
                }
            }
            class D extends s.default.Store {
                initialize() {
                    this.waitFor(d.default);
                    let e = a.default.get(E);
                    null != e && (null == e.activeLaunchOptionIds ? A() : m = e.activeLaunchOptionIds, null == e.activeLibraryApplicationBranchIds ? C() : I = e.activeLibraryApplicationBranchIds)
                }
                get libraryApplications() {
                    return function(e) {
                        let t = O();
                        return Object.keys(t).forEach(n => {
                            !e(t[n]) && delete t[n]
                        }), t
                    }(e => !e.isHidden())
                }
                getAllLibraryApplications() {
                    return O()
                }
                hasLibraryApplication() {
                    return Object.keys(O()).length > 0
                }
                hasApplication(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        i = v(e, t);
                    return !(null == i || !n && i.isHidden()) && (0, c.isUserEntitledToLibraryApplication)(i)
                }
                getLibraryApplication(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        i = v(e, t);
                    return n && null != i ? (0, c.isUserEntitledToLibraryApplication)(i) ? i : null : i
                }
                getActiveLibraryApplication(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        n = I[e];
                    if (null != n) {
                        var i;
                        let r = (0, c.getComboId)(e, n),
                            s = null !== (i = h[r]) && void 0 !== i ? i : S[r];
                        if (null != s && (0, c.isUserEntitledToLibraryApplication)(s) && (t || !s.isHidden())) return s
                    }
                    let r = O();
                    for (let n in r)
                        if (r[n].id === e) {
                            let e = r[n];
                            if ((0, c.isUserEntitledToLibraryApplication)(e) && (t || !e.isHidden())) return e
                        }
                }
                isUpdatingFlags(e, t) {
                    return T.has((0, c.getComboId)(e, t))
                }
                getActiveLaunchOptionId(e, t) {
                    return m[(0, c.getComboId)(e, t)]
                }
                get fetched() {
                    return p
                }
                get entitledBranchIds() {
                    return r(O()).values().filter(e => (0, c.isUserEntitledToLibraryApplication)(e)).map(e => e.branchId).value()
                }
                get hasRemovedLibraryApplicationThisSession() {
                    return g
                }
                whenInitialized(e) {
                    this.addConditionalChangeListener(() => {
                        if (p) return setImmediate(e), !1
                    })
                }
            }
            D.displayName = "LibraryApplicationStore";
            var L = new D(l.default, {
                LOGOUT: function() {
                    p = !1
                },
                LIBRARY_FETCH_SUCCESS: function(e) {
                    let {
                        libraryApplications: t
                    } = e;
                    h = {}, R(t), p = !0
                },
                SKU_PURCHASE_SUCCESS: function(e) {
                    let {
                        libraryApplications: t
                    } = e;
                    R(t)
                },
                LIBRARY_APPLICATION_FLAGS_UPDATE_START: function(e) {
                    let {
                        applicationId: t,
                        branchId: n,
                        flags: i
                    } = e, r = (0, c.getComboId)(t, n), s = v(t, n);
                    null != s && !s.isHidden() && u.hasFlag(i, _.LibraryApplicationFlags.HIDDEN) && (g = !0), T.add(r)
                },
                LIBRARY_APPLICATION_FLAGS_UPDATE_SUCCESS: N,
                LIBRARY_APPLICATION_UPDATE: N,
                LIBRARY_APPLICATION_ACTIVE_LAUNCH_OPTION_UPDATE: function(e) {
                    let {
                        applicationId: t,
                        branchId: n,
                        launchOptionId: i
                    } = e;
                    m[(0, c.getComboId)(t, n)] = i, A()
                },
                LIBRARY_APPLICATION_ACTIVE_BRANCH_UPDATE: function(e) {
                    let {
                        applicationId: t,
                        branchId: n
                    } = e;
                    if (I[t] === n) return !1;
                    I[t] = n, C()
                },
                LIBRARY_APPLICATIONS_TEST_MODE_ENABLED: function(e) {
                    let {
                        libraryApplications: t
                    } = e;
                    for (let e of t) {
                        let t = (0, c.getComboId)(e.id, e.branchId);
                        S[t] = e
                    }
                },
                DEVELOPER_TEST_MODE_RESET: function() {
                    S = {}
                }
            })
        },
        42887: function(e, t, n) {
            "use strict";
            let i, r, s, a;
            n.r(t), n.d(t, {
                default: function() {
                    return t_
                }
            }), n("256955");
            var l, o, u, c, d = n("161179"),
                _ = n.n(d),
                E = n("427964"),
                f = n.n(E),
                p = n("190735"),
                h = n.n(p),
                S = n("498225"),
                T = n("335990"),
                I = n("173333"),
                m = n("638800"),
                g = n("913144"),
                A = n("49671"),
                C = n("6193"),
                R = n("386045"),
                N = n("605250"),
                v = n("808122"),
                O = n("733589"),
                D = n("746800"),
                L = n("584687");
            n("334280");
            var M = n("705500");
            n("715440");
            var P = n("238847"),
                b = n("981699"),
                y = n("140622"),
                U = n("16001"),
                G = n("631508"),
                w = n("403770"),
                x = n("445620"),
                k = n("353500"),
                F = n("103979"),
                B = n("122530"),
                V = n("928609"),
                H = n("891760"),
                j = n("374363"),
                Y = n("599110"),
                W = n("922932"),
                K = n("773336"),
                z = n("286235"),
                Z = n("50885"),
                q = n("13798"),
                X = n("271938"),
                Q = n("366679"),
                J = n("533222"),
                $ = n("42203"),
                ee = n("760190"),
                et = n("855867"),
                en = n("945956"),
                ei = n("568307"),
                er = n("417021"),
                es = n("123647"),
                ea = n("49111"),
                el = n("706530"),
                eo = n("180524"),
                eu = n("397336"),
                ec = n("860604"),
                ed = n("782340");
            let e_ = new N.default("MediaEngineStore");
            (l = u || (u = {}))[l.DETACHED = 0] = "DETACHED", l[l.WAITING = 1] = "WAITING", l[l.ATTACHED = 2] = "ATTACHED", l[l.STARTED = 3] = "STARTED", l[l.PLAYING = 4] = "PLAYING", l[l.SILENCE = 5] = "SILENCE", (o = c || (c = {}))[o.FAILED = -1] = "FAILED", o[o.OK = 0] = "OK", o[o.ACE_INSTALL_FAILED = 4] = "ACE_INSTALL_FAILED", o[o.ACE_NOT_AUTHORIZED = 5] = "ACE_NOT_AUTHORIZED";
            let eE = "MediaEngineStore",
                ef = {
                    left: 1,
                    right: 1
                };

            function ep() {
                let e = {
                    mode: ea.InputModes.VOICE_ACTIVITY,
                    modeOptions: {
                        threshold: -60,
                        autoThreshold: K.isPlatformEmbedded || __OVERLAY__,
                        vadUseKrisp: !0,
                        vadLeading: 5,
                        vadTrailing: 25,
                        delay: 20,
                        shortcut: []
                    },
                    vadUseKrispSettingVersion: 0,
                    ncUseKrispSettingVersion: 0,
                    ncUseKrispjsSettingVersion: 0,
                    av1EnabledSettingVersion: 0,
                    hardwareClipEncodeSettingVersion: 0,
                    mute: !1,
                    deaf: !1,
                    echoCancellation: !0,
                    noiseSuppression: !1,
                    automaticGainControl: !0,
                    noiseCancellation: !0,
                    experimentalEncoders: !1,
                    hardwareH264: !0,
                    silenceWarning: !0,
                    attenuation: 0,
                    attenuateWhileSpeakingSelf: !1,
                    attenuateWhileSpeakingOthers: !0,
                    localMutes: {},
                    disabledLocalVideos: {},
                    videoToggleStateMap: {},
                    localVolumes: {},
                    localPans: {},
                    inputVolume: ec.DEFAULT_VOLUME,
                    outputVolume: ec.DEFAULT_VOLUME,
                    inputDeviceId: ec.DEFAULT_DEVICE_ID,
                    outputDeviceId: ec.DEFAULT_DEVICE_ID,
                    videoDeviceId: ec.DEFAULT_DEVICE_ID,
                    qos: !1,
                    qosMigrated: !1,
                    videoHook: eh.supports(ec.Features.VIDEO_HOOK),
                    experimentalSoundshare2: null,
                    openH264: !0,
                    av1Enabled: !0,
                    h265Enabled: !0,
                    hardwareClipEncode: !0,
                    vadThrehsoldMigrated: !1,
                    aecDumpEnabled: !1
                };
                return e
            }
            let eh = (0, T.initializeMediaEngine)((0, T.determineMediaEngine)()),
                eS = {},
                eT = new Set([ec.MediaEngineContextTypes.DEFAULT]),
                eI = eh.supports(ec.Features.AUTO_ENABLE),
                em = !1,
                eg = ec.MediaEngineContextTypes.STREAM,
                eA = {
                    [ec.DEFAULT_DEVICE_ID]: e9(ed.default.Messages.NO_INPUT_DEVICES)
                },
                eC = {
                    [ec.DEFAULT_DEVICE_ID]: e9(ed.default.Messages.NO_OUTPUT_DEVICES)
                },
                eR = {
                    [ec.DEFAULT_DEVICE_ID]: e9(ed.default.Messages.NO_VIDEO_DEVICES)
                },
                eN = !1,
                ev = !1,
                eO = !1,
                eD = !1,
                eL = !1,
                eM = ec.DISABLED_DEVICE_ID,
                eP = !1,
                eb = !1,
                ey = !1,
                eU = null,
                eG = !1,
                ew = !1,
                ex = !1,
                ek = !1,
                eF = !1,
                eB = null,
                eV = !1,
                eH = ea.SoundshareEnableState.NOT_ENABLED,
                ej = !1,
                eY = !1;
            V.default.hasPermission(eo.NativePermissionTypes.AUDIO, {
                showAuthorizationError: !1
            }), V.default.hasPermission(eo.NativePermissionTypes.CAMERA, {
                showAuthorizationError: !1
            });
            let eW = new Set,
                eK = !1,
                ez = !1,
                eZ = {},
                eq = {};

            function eX() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT,
                    t = eS[e];
                return null == t && (t = ep(), eS[e] = t), t
            }

            function eQ(e) {
                let t = eX(e.context);
                e.setInputMode(t.mode, {
                    vadThreshold: t.modeOptions.threshold,
                    vadAutoThreshold: t.modeOptions.autoThreshold,
                    vadUseKrisp: t.modeOptions.vadUseKrisp && function() {
                        return eF || !1
                    }(),
                    vadLeading: t.modeOptions.vadLeading,
                    vadTrailing: t.modeOptions.vadTrailing,
                    pttReleaseDelay: t.modeOptions.delay
                })
            }

            function eJ(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.DEFAULT_VOLUME;
                return f.clamp(e, 0, t)
            }

            function e$(e) {
                let t = eX(e.context),
                    n = !eI || t.mute || t.deaf;
                e.context === ec.MediaEngineContextTypes.DEFAULT && (n = n || eN || ev || eO || !V.default.didHavePermission(eo.NativePermissionTypes.AUDIO)), e.setSelfMute(n), e.setSelfDeaf(t.deaf)
            }

            function e0() {
                var e, t, n;
                let r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : eL,
                    a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : s,
                    l = s;
                if ((null == l ? void 0 : l.desktopSource) != null && l.desktopSource.id !== (null == a ? void 0 : null === (e = a.desktopSource) || void 0 === e ? void 0 : e.id) && (null != l.desktopSource.soundshareId && (0, K.isWindows)() && C.cancelAttachToProcess(l.desktopSource.soundshareId), eh.setGoLiveSource(null, eg)), (null == l ? void 0 : l.cameraSource) != null && (l.cameraSource.videoDeviceGuid !== (null == a ? void 0 : null === (t = a.cameraSource) || void 0 === t ? void 0 : t.videoDeviceGuid) || l.cameraSource.audioDeviceGuid !== (null == a ? void 0 : null === (n = a.cameraSource) || void 0 === n ? void 0 : n.audioDeviceGuid)) && eh.setGoLiveSource(null, eg), (eL || r) && (eM = (eL = r) ? te(eR, eX().videoDeviceId) : ec.DISABLED_DEVICE_ID, eh.setVideoInputDevice(eM)), s = a, null != a) {
                    let e = {
                        resolution: a.quality.resolution,
                        frameRate: a.quality.frameRate
                    };
                    if (null != a.desktopSource) {
                        let {
                            useQuartzCapturer: t,
                            allowScreenCaptureKit: n
                        } = G.default.getCurrentConfig({
                            location: "f627ab_1"
                        }, {
                            autoTrackExposure: !1
                        }), {
                            hdrCaptureMode: r
                        } = b.default.getCurrentConfig({
                            location: "f627ab_2"
                        }, {
                            autoTrackExposure: !1
                        });
                        eh.setGoLiveSource({
                            desktopDescription: {
                                id: a.desktopSource.id,
                                soundshareId: a.desktopSource.soundshareId,
                                useVideoHook: e4(!0) && eX().videoHook,
                                useGraphicsCapture: !0,
                                useLoopback: i.getExperimentalSoundshare(),
                                useQuartzCapturer: t,
                                allowScreenCaptureKit: n && eh.supports(ec.Features.SCREEN_CAPTURE_KIT),
                                hdrCaptureMode: r
                            },
                            quality: e
                        }, eg)
                    }
                    null != a.cameraSource && eh.setGoLiveSource({
                        cameraDescription: {
                            videoDeviceGuid: a.cameraSource.videoDeviceGuid,
                            audioDeviceGuid: a.cameraSource.audioDeviceGuid
                        },
                        quality: e
                    }, eg)
                }
            }

            function e1(e) {
                let t, n;
                if (null == e) return {};
                let i = e.sourcePid;
                if (null != i) {
                    let e = ei.default.getGameForPID(i);
                    t = null == e ? void 0 : e.name, n = null == e ? void 0 : e.id
                }
                return {
                    soundshare_session: e.soundshareSession,
                    share_game_name: t,
                    share_game_id: n
                }
            }

            function e2(e, t, n, i) {
                var r;
                let s = null !== (r = null == e ? void 0 : e.soundshareSession) && void 0 !== r ? r : "";
                null == eq[s] && (eq[s] = new Set);
                let a = null != t && !eq[s].has(t);
                a && eq[s].add(t), (null == t || a) && Y.default.track(ea.AnalyticEvents.SOUNDSHARE_FAILED, {
                    soundshare_failure_code: t,
                    soundshare_failure_reason: n,
                    soundshare_failure_will_retry: i,
                    ...e1(e)
                })
            }

            function e5(e) {
                let t = eX(),
                    n = t.inputDeviceId;
                if (e.setEchoCancellation(J.default.hasEchoCancellation(n) || t.echoCancellation), e.setNoiseSuppression(J.default.hasNoiseSuppression(n) || t.noiseSuppression), e.setAutomaticGainControl(J.default.hasAutomaticGainControl(n) || t.automaticGainControl), e.setNoiseCancellation(t.noiseCancellation), (0, K.isWeb)()) {
                    let n = t.noiseCancellation ? -150 : -100;
                    e.setSilenceThreshold(n)
                }
            }

            function e4(e) {
                var t;
                return !!(0, K.isWindows)() && (!h.satisfies(null === (t = A.default) || void 0 === t ? void 0 : t.os.release, el.WINDOWS_GRAPHICS_CAPTURE_VERSION) || x.default.getCurrentConfig({
                    location: "f627ab_16"
                }, {
                    autoTrackExposure: e
                }).videoHookEnabled)
            }
            let e3 = new class {
                start() {
                    !this.started && (this.started = !0, eh.on(T.MediaEngineEvent.Silence, this.handleSilence))
                }
                stop() {
                    this.started && (this.started = !1, null != this.stateChangeTimeout && (clearTimeout(this.stateChangeTimeout), this.stateChangeTimeout = null), eh.removeListener(T.MediaEngineEvent.Silence, this.handleSilence), g.default.dispatch({
                        type: "AUDIO_INPUT_DETECTED",
                        inputDetected: null
                    }))
                }
                update() {
                    let e = eX();
                    !eG && en.default.getState() === ea.RTCConnectionStates.RTC_CONNECTED && e.mode === ea.InputModes.VOICE_ACTIVITY && e.silenceWarning ? this.start() : this.stop()
                }
                reset() {
                    this.stop(), this.update()
                }
                constructor() {
                    this.noVoiceTimeout = 5e3, this.voiceTimeout = 1500, this.started = !1, this.handleSilence = e => {
                        let t = !e;
                        null != this.stateChangeTimeout && clearTimeout(this.stateChangeTimeout), this.stateChangeTimeout = setTimeout(() => {
                            this.stateChangeTimeout = null, this.started && (g.default.dispatch({
                                type: "AUDIO_INPUT_DETECTED",
                                inputDetected: t
                            }), e && (ew = !0))
                        }, t ? this.voiceTimeout : this.noVoiceTimeout)
                    }
                }
            };

            function e6(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.MediaEngineContextTypes.DEFAULT,
                    n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
                    i = eX(t);
                return Object.assign(i, e), !__OVERLAY__ && n && I.default.set(eE, eS), i
            }

            function e7() {
                !eI && eh.enable().then(() => g.default.dispatch({
                    type: "MEDIA_ENGINE_SET_AUDIO_ENABLED",
                    enabled: !0,
                    unmute: !1
                }))
            }

            function e9(e) {
                return {
                    id: ec.DEFAULT_DEVICE_ID,
                    index: 0,
                    name: e,
                    disabled: !0
                }
            }

            function e8(e, t) {
                if (0 === e.length) {
                    let e = e9(t);
                    return {
                        [e.id]: e
                    }
                }
                return f(e).map(e => ({
                    id: e.id,
                    index: e.index,
                    name: e.name,
                    disabled: !1
                })).keyBy("id").value()
            }

            function te(e, t) {
                var n;
                let i = null !== (n = e[t]) && void 0 !== n ? n : f(e).values().first();
                return null != i ? i.id : t
            }

            function tt() {
                var e, t;
                let n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                    i = null !== (e = j.default.settings.audioContextSettings) && void 0 !== e ? e : {
                        user: {},
                        stream: {}
                    };
                for (let e of Object.keys(i)) {
                    let r = e === eu.ProtoAudioSettingsContextTypes.USER ? ec.MediaEngineContextTypes.DEFAULT : ec.MediaEngineContextTypes.STREAM,
                        s = r === ec.MediaEngineContextTypes.STREAM ? ec.DEFAULT_STREAM_VOLUME : ec.DEFAULT_VOLUME,
                        a = null !== (t = i[e]) && void 0 !== t ? t : {},
                        {
                            localMutes: l,
                            localVolumes: o
                        } = eX(r);
                    for (let [e, t] of Object.entries(a)) t.muted ? l[e] = !0 : delete l[e], t.volume !== s ? o[e] = t.volume : delete o[e], eh.eachConnection(n => {
                        n.setLocalVolume(e, t.volume), n.setLocalMute(e, t.muted)
                    }, r);
                    if (n) {
                        let e = new Set([...Object.keys(l), ...Object.keys(o)]);
                        for (let t of e) null == a[t] && (delete l[t], delete o[t], eh.eachConnection(e => {
                            e.setLocalVolume(t, s), e.setLocalMute(t, !1)
                        }, r))
                    }
                    e6({
                        localMutes: l,
                        localVolumes: o
                    }, r)
                }
            }

            function tn(e) {
                if (null == i) return e_.info("Error: trying to get soundshare id before MediaEngineStore is instantiated."), {
                    soundshareId: null,
                    soundshareSession: ""
                };
                {
                    let t = i.getExperimentalSoundshare() ? e : W.default.getAudioPid(e),
                        n = "";
                    return null != t && (n = W.default.generateSessionFromPid(t)), {
                        soundshareId: t,
                        soundshareSession: n
                    }
                }
            }

            function ti(e, t, n) {
                (0, K.isWindows)() && C.attachToProcess(e, {
                    soundshare_session: t
                }).then(t => {
                    null != t && !ei.default.shouldContinueWithoutElevatedProcessForPID(e) && g.default.wait(() => {
                        g.default.dispatch(n(t))
                    })
                })
            }

            function tr(e) {
                let t = eX();
                Y.default.track(ea.AnalyticEvents.VOICE_PROCESSING, {
                    echo_cancellation: t.echoCancellation,
                    noise_cancellation: t.noiseCancellation,
                    noise_suppression: t.noiseSuppression,
                    automatic_gain_control: t.automaticGainControl,
                    location: e
                })
            }

            function ts() {
                let e = eX(),
                    t = e.inputDeviceId,
                    n = J.default.hasEchoCancellation(t) || e.echoCancellation,
                    i = J.default.hasNoiseSuppression(t) || e.noiseSuppression,
                    r = J.default.hasAutomaticGainControl(t) || e.automaticGainControl,
                    s = e.noiseCancellation;
                eh.setLoopback(ez, {
                    echoCancellation: n,
                    noiseSuppression: i,
                    automaticGainControl: r,
                    noiseCancellation: s
                })
            }

            function ta() {
                return eF || !1
            }
            async function tl() {
                try {
                    await Z.default.ensureModule("discord_krisp"), Z.default.requireModule("discord_krisp"), eF = !0, i.emitChange()
                } catch (t) {
                    e_.warn("Failed to load Krisp module: ".concat(t.message)), z.default.captureException(t);
                    let e = ec.NoiseCancellerError.INITIALIZED;
                    if (t.message.includes(": ")) {
                        let n = parseInt(t.message.substring(t.message.indexOf(": ") + 1));
                        e = isNaN(n) || 0 === n ? ec.NoiseCancellerError.INITIALIZED : n
                    }
                    Y.default.track(ea.AnalyticEvents.VOICE_PROCESSING, {
                        noise_canceller_error: e
                    }), e6({
                        noiseCancellation: !1
                    })
                } finally {
                    ek = !1
                }
            }

            function to(e) {
                let {
                    section: t
                } = e;
                return t === ea.UserSettingsSections.VOICE && e7(), !1
            }

            function tu(e) {
                eH = e === c.OK ? ea.SoundshareEnableState.ENABLED : e === c.ACE_NOT_AUTHORIZED ? ea.SoundshareEnableState.ENABLING : e === c.FAILED || e === c.ACE_INSTALL_FAILED ? ea.SoundshareEnableState.FAILED_TO_ENABLE : ea.SoundshareEnableState.NOT_ENABLED
            }
            async function tc() {
                if (eH === ea.SoundshareEnableState.ENABLING) return;
                eH = ea.SoundshareEnableState.ENABLING;
                let e = {};
                try {
                    let t = await eh.enableSoundshare();
                    tu(t.code), e = {
                        status_code: t.code,
                        message: t.message
                    }
                } catch (t) {
                    e_.warn("Failed to enable macOS soundshare: ".concat(t)), tu(c.FAILED), e = {
                        status_code: c.FAILED,
                        message: "".concat(t)
                    }
                } finally {
                    i.emitChange(), Y.default.track(ea.AnalyticEvents.SOUNDSHARE_ENABLE, e)
                }
            }
            class td extends S.default.Store {
                initialize() {
                    eh.on(T.MediaEngineEvent.Connection, e => {
                        let {
                            maxSyncDelayOverride: t
                        } = U.default.getCurrentConfig({
                            location: "f627ab_3"
                        }, {
                            autoTrackExposure: !1
                        });
                        t > 0 && eh.setMaxSyncDelayOverride(t), eQ(e), e$(e), e5(e);
                        let n = eX();
                        e.setAttenuation(n.attenuation, n.attenuateWhileSpeakingSelf, n.attenuateWhileSpeakingOthers), e.setQoS(n.qos), e.setExperimentalEncoders(n.experimentalEncoders), e.setHardwareH264(n.hardwareH264);
                        let {
                            useExperimentalRateControl: r
                        } = k.default.getCurrentConfig({
                            location: "f627ab_4"
                        }, {
                            autoTrackExposure: !1
                        });
                        r && e.setExperimentFlag(ec.ExperimentFlags.VIDEOTOOLBOX_RATE_CONTROL, !0);
                        {
                            let {
                                signalH265SupportMacOS: t
                            } = M.default.getCurrentConfig({
                                location: "f627ab_8"
                            }, {
                                autoTrackExposure: !0
                            });
                            t && e.setExperimentFlag(ec.ExperimentFlags.SIGNAL_H265_SUPPORT, !0);
                            let {
                                signalH265SupportNvenc: n
                            } = P.default.getCurrentConfig({
                                location: "f627ab_9"
                            }, {
                                autoTrackExposure: !0
                            });
                            n && e.setExperimentFlag(ec.ExperimentFlags.SIGNAL_H265_SUPPORT, !0)
                        }
                        let {
                            signalAV1Support: a
                        } = D.default.getCurrentConfig({
                            location: "f627ab_10"
                        }, {
                            autoTrackExposure: !0
                        });
                        a && e.setExperimentFlag(ec.ExperimentFlags.SIGNAL_AV1_SUPPORT, !0);
                        let {
                            allowSettingFullbandAndroid: l
                        } = y.default.getCurrentConfig({
                            location: "f627ab_14"
                        }, {
                            autoTrackExposure: !0
                        });
                        if (l && eh.setHasFullbandPerformance((0, v.hasPerformanceForKrispFullband)()), R.default.getSettings().clipsEnabled) {
                            let {
                                enableSideEncoderViewerClipping: t,
                                enableEndEncoderViewerClipping: n
                            } = F.default.getCurrentConfig({
                                location: "f627ab_15"
                            }, {
                                autoTrackExposure: !1
                            });
                            t ? e.setExperimentFlag(ec.ExperimentFlags.VIEWER_CLIP_WITH_SIDE_ENCODER, !0) : n && e.setExperimentFlag(ec.ExperimentFlags.VIEWER_CLIP_WITH_END_ENCODER, !0)
                        }
                        for (let t of (n = eX(e.context), e.setPostponeDecodeLevel(100), Object.keys(n.localMutes))) t !== X.default.getId() && e.setLocalMute(t, n.localMutes[t]);
                        for (let t of Object.keys(n.localVolumes)) t !== X.default.getId() && e.setLocalVolume(t, n.localVolumes[t]);
                        for (let t of Object.keys(n.localPans)) {
                            let i = n.localPans[t];
                            e.setLocalPan(t, i.left, i.right)
                        }
                        for (let t of Object.keys(n.disabledLocalVideos)) e.setLocalVideoDisabled(t, n.disabledLocalVideos[t]);
                        e.on(T.BaseConnectionEvent.Speaking, (t, n) => {
                            g.default.dispatch({
                                type: "SPEAKING",
                                context: e.context,
                                userId: t,
                                speakingFlags: n
                            })
                        }), e.context === ec.MediaEngineContextTypes.DEFAULT && (eP = !1, e.on(T.BaseConnectionEvent.SpeakingWhileMuted, () => {
                            eP = !0, i.emitChange()
                        })), e.on(T.BaseConnectionEvent.DesktopSourceEnd, () => {
                            g.default.dispatch({
                                type: "MEDIA_ENGINE_SET_GO_LIVE_SOURCE",
                                settings: {
                                    context: e.context
                                }
                            })
                        }), e.on(T.BaseConnectionEvent.SoundshareAttached, () => {
                            var e, t;
                            (null === (e = s) || void 0 === e ? void 0 : e.desktopSource) != null && Y.default.track(ea.AnalyticEvents.SOUNDSHARE_ATTACHED, e1(null === (t = s) || void 0 === t ? void 0 : t.desktopSource))
                        }), e.on(T.BaseConnectionEvent.SoundshareFailed, e => {
                            var t;
                            let {
                                failureCode: n,
                                failureReason: i,
                                willRetry: r
                            } = e;
                            e2(null === (t = s) || void 0 === t ? void 0 : t.desktopSource, n, i, r)
                        }), e.on(T.BaseConnectionEvent.SoundshareSpeaking, () => {
                            var e, t;
                            (null === (e = s) || void 0 === e ? void 0 : e.desktopSource) != null && (Y.default.track(ea.AnalyticEvents.SOUNDSHARE_TRANSMITTING, e1(null === (t = s) || void 0 === t ? void 0 : t.desktopSource)), null != et.default.getHookError(ea.MediaEngineHookTypes.SOUND) && g.default.wait(() => g.default.dispatch({
                                type: "MEDIA_ENGINE_SOUNDSHARE_TRANSMITTING"
                            })))
                        });
                        let o = new m.Timeout;
                        e.on(T.BaseConnectionEvent.SoundshareTrace, e => {
                            switch (e.type) {
                                case "soundshare_attach_requested":
                                    o.start(5e3, () => {
                                        g.default.dispatch({
                                            type: "MEDIA_ENGINE_SOUNDSHARE_FAILED",
                                            errorMessage: "Sound Hook Failed"
                                        })
                                    });
                                    break;
                                case "soundshare_recv_failed":
                                    var t, n;
                                    let i = e.reason,
                                        r = e.code,
                                        a = e.retry;
                                    (null === (t = s) || void 0 === t ? void 0 : t.desktopSource) != null && (e2(null === (n = s) || void 0 === n ? void 0 : n.desktopSource, r, i, a), !a && (o.stop(), g.default.wait(() => g.default.dispatch({
                                        type: "MEDIA_ENGINE_SOUNDSHARE_FAILED",
                                        errorMessage: i,
                                        errorCode: r
                                    }))));
                                    break;
                                case "soundshare_state_transition":
                                    e.newState === u.PLAYING && (o.stop(), g.default.wait(() => g.default.dispatch({
                                        type: "MEDIA_ENGINE_SOUNDSHARE_TRANSMITTING"
                                    })))
                            }
                        }), e.on(T.BaseConnectionEvent.InteractionRequired, e => {
                            g.default.dispatch({
                                type: "MEDIA_ENGINE_INTERACTION_REQUIRED",
                                required: e
                            })
                        }), e.on(T.BaseConnectionEvent.VideoHookInitialize, (e, t, n, i, r, a) => {
                            var l, o;
                            (null === (l = s) || void 0 === l ? void 0 : l.desktopSource) != null && Y.default.track(ea.AnalyticEvents.VIDEOHOOK_INITIALIZED, {
                                backend: e,
                                format: t,
                                framebuffer_format: n,
                                sample_count: i,
                                success: r,
                                reinitialization: a,
                                ...e1(null === (o = s) || void 0 === o ? void 0 : o.desktopSource)
                            })
                        }), e.on(T.BaseConnectionEvent.ScreenshareFinish, (t, n, i, r, a, l, o, u, c, d, _, E, f, p) => {
                            (0, er.getSystemAnalyticsInfo)().then(h => {
                                var S;
                                let T = null;
                                if (null != h) {
                                    let {
                                        cpu_brand: e,
                                        cpu_vendor: t,
                                        cpu_memory: n,
                                        gpu_brand: i,
                                        gpu_memory: r
                                    } = h;
                                    T = {
                                        cpu_brand: e,
                                        cpu_vendor: t,
                                        cpu_memory: n,
                                        gpu_brand: i,
                                        gpu_memory: r
                                    }
                                }
                                Y.default.track(ea.AnalyticEvents.SCREENSHARE_FINISHED, {
                                    screenshare_frames: t,
                                    videohook_frames: n,
                                    hybrid_dxgi_frames: i,
                                    hybrid_gdi_frames: r,
                                    hybrid_videohook_frames: a,
                                    hybrid_graphics_capture_frames: l,
                                    hybrid_capture_method_switches: o,
                                    quartz_frames: u,
                                    screencapturekit_frames: p,
                                    go_live_camera_frames: f,
                                    total_frames: (null != t ? t : 0) + (null != n ? n : 0) + (null != i ? i : 0) + (null != r ? r : 0) + (null != a ? a : 0) + (null != l ? l : 0) + (null != u ? u : 0) + (null != p ? p : 0) + (null != f ? f : 0),
                                    desktop_capturer_type: c,
                                    media_session_id: en.default.getMediaSessionId(),
                                    rtc_connection_id: en.default.getRTCConnectionId(),
                                    context: e.context,
                                    screens: d,
                                    windows: _,
                                    activity: E,
                                    ...T,
                                    ...e1(null === (S = s) || void 0 === S ? void 0 : S.desktopSource)
                                })
                            })
                        }), e.on(T.BaseConnectionEvent.NoiseCancellationError, e => {
                            e_.warn("noisecancellererror event: ".concat(e)), eV = !0, Y.default.track(ea.AnalyticEvents.VOICE_PROCESSING, {
                                noise_canceller_error: e
                            }), g.default.dispatch({
                                type: "AUDIO_SET_NOISE_SUPPRESSION",
                                enabled: !0
                            }), g.default.dispatch({
                                type: "AUDIO_SET_NOISE_CANCELLATION",
                                enabled: !1
                            }), g.default.dispatch({
                                type: "MEDIA_ENGINE_NOISE_CANCELLATION_ERROR",
                                code: e
                            })
                        }), e.on(T.BaseConnectionEvent.VoiceActivityDetectorError, e => {
                            e_.warn("voiceactivitydetectorerror event: ".concat(e)), Y.default.track(ea.AnalyticEvents.VOICE_PROCESSING, {
                                noise_canceller_error: e
                            }), g.default.dispatch({
                                type: "AUDIO_SET_MODE",
                                context: ec.MediaEngineContextTypes.DEFAULT,
                                mode: ea.InputModes.VOICE_ACTIVITY,
                                options: {
                                    ...eX(ec.MediaEngineContextTypes.DEFAULT).modeOptions,
                                    vadUseKrisp: !1
                                }
                            }), g.default.dispatch({
                                type: "MEDIA_ENGINE_VOICE_ACTIVITY_DETECTION_ERROR",
                                code: e
                            })
                        }), e.on(T.BaseConnectionEvent.VideoState, t => {
                            g.default.dispatch({
                                type: "MEDIA_ENGINE_VIDEO_STATE_CHANGED",
                                videoState: t,
                                context: e.context
                            })
                        }), e.on(T.BaseConnectionEvent.Destroy, () => {
                            o.stop()
                        }), e.setBitRate(Q.default.bitrate), e.applyVideoQualityMode(es.default.mode)
                    }), eh.on(T.MediaEngineEvent.DeviceChange, (e, t, n) => {
                        g.default.dispatch({
                            type: "MEDIA_ENGINE_DEVICES",
                            inputDevices: e,
                            outputDevices: t,
                            videoDevices: n
                        })
                    }), eh.on(T.MediaEngineEvent.VolumeChange, (e, t) => {
                        g.default.dispatch({
                            type: "AUDIO_VOLUME_CHANGE",
                            inputVolume: e,
                            outputVolume: t
                        })
                    }), eh.on(T.MediaEngineEvent.DesktopSourceEnd, () => {
                        g.default.dispatch({
                            type: "MEDIA_ENGINE_SET_GO_LIVE_SOURCE",
                            settings: null
                        })
                    }), eh.on(T.MediaEngineEvent.AudioPermission, e => {
                        eY = !0, g.default.dispatch({
                            type: "MEDIA_ENGINE_PERMISSION",
                            kind: "audio",
                            granted: e
                        })
                    }), eh.on(T.MediaEngineEvent.VideoPermission, e => {
                        g.default.dispatch({
                            type: "MEDIA_ENGINE_PERMISSION",
                            kind: "video",
                            granted: e
                        })
                    }), eh.on(T.MediaEngineEvent.WatchdogTimeout, async () => {
                        let e;
                        try {
                            await W.default.submitLiveCrashReport({
                                message: {
                                    message: "Voice Watchdog Timeout"
                                }
                            })
                        } catch (t) {
                            "number" == typeof t.status && (e = t.status)
                        }
                        e_.warn("Watchdog timeout, report submission status: ".concat(null != e ? e : 200)), Y.default.track(ea.AnalyticEvents.VOICE_WATCHDOG_TIMEOUT, {
                            minidump_submission_error: e
                        })
                    }), eh.on(T.MediaEngineEvent.VideoInputInitialized, e => {
                        Y.default.track(ea.AnalyticEvents.VIDEO_INPUT_INITIALIZED, {
                            device_name: e.description.name,
                            time_to_first_frame_ms: e.initializationTimerExpired ? null : Math.round(1e3 * e.timeToFirstFrame),
                            timed_out: e.initializationTimerExpired,
                            activity: e.entropy
                        })
                    }), eh.on(T.MediaEngineEvent.ClipsRecordingRestartNeeded, () => {
                        g.default.dispatch({
                            type: "CLIPS_RESTART"
                        })
                    }), eh.on(T.MediaEngineEvent.ClipsInitFailure, (e, t) => {
                        g.default.wait(() => {
                            g.default.dispatch({
                                type: "CLIPS_INIT_FAILURE",
                                errMsg: e,
                                applicationName: t
                            })
                        })
                    }), e3.reset(), ! function() {
                        var e;
                        let t = I.default.get("audio");
                        null != t && (I.default.set(eE, {
                                [ec.MediaEngineContextTypes.DEFAULT]: t
                            }), I.default.remove("audio")), eS = null !== (e = I.default.get(eE)) && void 0 !== e ? e : {}, f.each(eS, e => {
                                if (f.defaultsDeep(e, ep()), null != e.modeOptions && "string" == typeof e.modeOptions.shortcut && (e.modeOptions.shortcut = (0, q.toCombo)(e.modeOptions.shortcut)), null != e.modeOptions && 4 !== e.vadUseKrispSettingVersion && (e.vadUseKrispSettingVersion = 4, e.modeOptions.vadUseKrisp = !0), !e.qosMigrated && (e.qosMigrated = !0, e.qos = !1), !e.vadThrehsoldMigrated) {
                                    var t;
                                    e.vadThrehsoldMigrated = !0, (null === (t = e.modeOptions) || void 0 === t ? void 0 : t.threshold) === -40 && (e.modeOptions.threshold = -60)
                                }(0, K.isWeb)() ? 1 !== e.ncUseKrispjsSettingVersion && (e.ncUseKrispjsSettingVersion = 1, e.noiseSuppression = !1, e.noiseCancellation = !0): 1 !== e.ncUseKrispSettingVersion && (e.ncUseKrispSettingVersion = 1, e.noiseSuppression = !1, e.noiseCancellation = !0), 1 !== e.av1EnabledSettingVersion && (e.av1EnabledSettingVersion = 1, e.av1Enabled = !0), 1 !== e.hardwareClipEncodeSettingVersion && (e.hardwareClipEncodeSettingVersion = 1, e.hardwareClipEncode = !0)
                            }),
                            function() {
                                let e = eX();
                                eh.setAudioInputDevice(e.inputDeviceId), eh.setAudioOutputDevice(e.outputDeviceId), e0(), eh.setInputVolume(e.inputVolume), eh.setOutputVolume(e.outputVolume), eh.setH264Enabled(e.openH264), eh.setAv1Enabled(e.av1Enabled), eh.setAecDump(e.aecDumpEnabled), eh.setHardwareClipEncode(e.hardwareClipEncode)
                            }()
                    }(), ((0, K.isMac)() || (0, K.isWindows)() || (0, K.isLinux)()) && !__OVERLAY__ && !ek && !eF ? (ek = !0, tl()) : (0, K.isWeb)() && eh.supports(ec.Features.NOISE_CANCELLATION) ? (eF = !0, i.emitChange()) : (0, K.isWeb)() && e6({
                        noiseCancellation: !1
                    }), (0, K.isMac)() && eh.supports(ec.Features.SOUNDSHARE) ? eh.getSoundshareStatus().then(e => {
                        tu(e)
                    }).catch(e => {
                        e_.warn("Failed to check if soundshare is enabled: ".concat(e))
                    }) : eH = ea.SoundshareEnableState.ENABLED, eZ = {
                        [ec.Features.VIDEO]: eh.supports(ec.Features.VIDEO),
                        [ec.Features.DESKTOP_CAPTURE]: eh.supports(ec.Features.DESKTOP_CAPTURE),
                        [ec.Features.HYBRID_VIDEO]: eh.supports(ec.Features.HYBRID_VIDEO)
                    }, this.waitFor(X.default, J.default, $.default, et.default, en.default, ei.default, V.default.storage, j.default, ee.default)
                }
                supports(e) {
                    return eh.supports(e)
                }
                supportsInApp(e) {
                    return eZ[e] || eh.supports(e)
                }
                isSupported() {
                    return eh.supported()
                }
                isExperimentalEncodersSupported() {
                    return eh.supports(ec.Features.EXPERIMENTAL_ENCODERS)
                }
                isNoiseSuppressionSupported() {
                    return eh.supports(ec.Features.NOISE_SUPPRESSION)
                }
                isNoiseCancellationSupported() {
                    return eF || !1
                }
                isNoiseCancellationError() {
                    return eV
                }
                isAutomaticGainControlSupported() {
                    return eh.supports(ec.Features.AUTOMATIC_GAIN_CONTROL)
                }
                isAdvancedVoiceActivitySupported() {
                    return eF || !1
                }
                isAecDumpSupported() {
                    return eh.supports(ec.Features.AEC_DUMP)
                }
                isSimulcastSupported() {
                    return eh.supports(ec.Features.VIDEO) && eh.supports(ec.Features.SIMULCAST)
                }
                getAecDump() {
                    return eX().aecDumpEnabled
                }
                getMediaEngine() {
                    return eh
                }
                getVideoComponent() {
                    return eh.supports(ec.Features.DIRECT_VIDEO) && eh.setUseDirectVideo(!0), eh.Video
                }
                getCameraComponent() {
                    return eh.supports(ec.Features.DIRECT_VIDEO) && eh.setUseDirectVideo(!0), eh.Camera
                }
                isEnabled() {
                    return eI
                }
                isMute() {
                    return this.isSelfMute() || eN
                }
                isDeaf() {
                    return this.isSelfDeaf() || eD
                }
                hasContext(e) {
                    return null != eS[e]
                }
                isSelfMutedTemporarily() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return e === ec.MediaEngineContextTypes.DEFAULT && ev
                }
                isSelfMute() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return !this.isEnabled() || eX(e).mute || !V.default.didHavePermission(eo.NativePermissionTypes.AUDIO) || this.isSelfDeaf(e) || e === ec.MediaEngineContextTypes.DEFAULT && eO
                }
                isHardwareMute() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return !this.isMute() && !this.isSelfMutedTemporarily(e) && J.default.isHardwareMute(this.getInputDeviceId())
                }
                isSelfDeaf() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return !this.isSupported() || eX(e).deaf
                }
                isVideoEnabled() {
                    return eL && ey
                }
                isVideoAvailable() {
                    return Object.values(eR).some(e => {
                        let {
                            disabled: t
                        } = e;
                        return !t
                    })
                }
                isScreenSharing() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.STREAM;
                    return eg === e && null != s
                }
                isSoundSharing() {
                    var e;
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.STREAM;
                    return eg === t && null != s && (null === (e = s.desktopSource) || void 0 === e ? void 0 : e.soundshareId) != null
                }
                isLocalMute(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.MediaEngineContextTypes.DEFAULT;
                    return e !== X.default.getId() && (eX(t).localMutes[e] || !1)
                }
                supportsDisableLocalVideo() {
                    return eh.supports(ec.Features.DISABLE_VIDEO)
                }
                isLocalVideoDisabled(e) {
                    var t;
                    let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.MediaEngineContextTypes.DEFAULT;
                    return null !== (t = eX(n).disabledLocalVideos[e]) && void 0 !== t && t
                }
                getVideoToggleState(e) {
                    var t;
                    let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.MediaEngineContextTypes.DEFAULT;
                    return null !== (t = eX(n).videoToggleStateMap[e]) && void 0 !== t ? t : ea.VideoToggleState.NONE
                }
                isLocalVideoAutoDisabled(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.MediaEngineContextTypes.DEFAULT;
                    return t === ec.MediaEngineContextTypes.DEFAULT && eW.has(e)
                }
                isAnyLocalVideoAutoDisabled() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return e === ec.MediaEngineContextTypes.DEFAULT && eW.size > 0
                }
                isMediaFilterSettingLoading() {
                    return ej
                }
                isNativeAudioPermissionReady() {
                    return eY
                }
                getGoLiveSource() {
                    return s
                }
                getGoLiveContext() {
                    return eg
                }
                getLocalPan(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.MediaEngineContextTypes.DEFAULT,
                        n = eX(t).localPans[e];
                    return null != n ? n : ef
                }
                getLocalVolume(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : ec.MediaEngineContextTypes.DEFAULT,
                        n = t === ec.MediaEngineContextTypes.STREAM,
                        i = n ? ec.DEFAULT_STREAM_VOLUME : ec.DEFAULT_VOLUME,
                        r = eX(t).localVolumes[e];
                    return null != r ? r : i
                }
                getInputVolume() {
                    return eX().inputVolume
                }
                getOutputVolume() {
                    return eX().outputVolume
                }
                getMode() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return eX(e).mode
                }
                getModeOptions() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return eX(e).modeOptions
                }
                getShortcuts() {
                    let e = {};
                    return f.each(eS, (t, n) => {
                        let {
                            mode: i,
                            modeOptions: {
                                shortcut: r
                            }
                        } = t;
                        i === ea.InputModes.PUSH_TO_TALK && eT.has(n) && (e[n] = r)
                    }), e
                }
                getInputDeviceId() {
                    return te(eA, eX().inputDeviceId)
                }
                getOutputDeviceId() {
                    return te(eC, eX().outputDeviceId)
                }
                getVideoDeviceId() {
                    return te(eR, eX().videoDeviceId)
                }
                getInputDevices() {
                    return eA
                }
                getOutputDevices() {
                    return eC
                }
                getVideoDevices() {
                    return eR
                }
                getEchoCancellation() {
                    let e = eX();
                    return J.default.hasEchoCancellation(e.inputDeviceId) || e.echoCancellation
                }
                getH265Enabled() {
                    return eX().h265Enabled
                }
                getLoopback() {
                    return eh.getLoopback()
                }
                getNoiseSuppression() {
                    let e = eX();
                    return J.default.hasNoiseSuppression(e.inputDeviceId) || e.noiseSuppression
                }
                getAutomaticGainControl() {
                    let e = eX();
                    return J.default.hasAutomaticGainControl(e.inputDeviceId) || e.automaticGainControl
                }
                getNoiseCancellation() {
                    return eX().noiseCancellation
                }
                getExperimentalEncoders() {
                    return eX().experimentalEncoders
                }
                getHardwareH264() {
                    return eX().hardwareH264
                }
                getEnableSilenceWarning() {
                    return eX().silenceWarning
                }
                getDebugLogging() {
                    return eh.getDebugLogging()
                }
                getQoS() {
                    return eX().qos
                }
                getAttenuation() {
                    return eX().attenuation
                }
                getAttenuateWhileSpeakingSelf() {
                    return eX().attenuateWhileSpeakingSelf
                }
                getAttenuateWhileSpeakingOthers() {
                    return eX().attenuateWhileSpeakingOthers
                }
                getAudioSubsystem() {
                    return eh.getAudioSubsystem()
                }
                getSettings() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT;
                    return eX(e)
                }
                getState() {
                    return {
                        settingsByContext: eS,
                        inputDevices: eA,
                        outputDevices: eC,
                        appSupported: eZ,
                        krispModuleLoaded: eF,
                        goLiveSource: s,
                        goLiveContext: eg
                    }
                }
                getInputDetected() {
                    return eU
                }
                getNoInputDetectedNotice() {
                    return ew
                }
                getPacketDelay() {
                    return K.isPlatformEmbedded || this.getMode() !== ea.InputModes.VOICE_ACTIVITY ? 0 : this.getModeOptions().vadLeading
                }
                setCanHavePriority(e, t) {
                    eh.eachConnection(n => n.setCanHavePriority(e, t))
                }
                isInteractionRequired() {
                    return em
                }
                getVideoHook() {
                    return eX().videoHook
                }
                supportsVideoHook() {
                    return e4(!1) && eh.supports(ec.Features.VIDEO_HOOK)
                }
                getExperimentalSoundshare() {
                    let e = eX().experimentalSoundshare2;
                    return this.supportsExperimentalSoundshare() && (null == e || e)
                }
                supportsExperimentalSoundshare() {
                    var e;
                    return eh.supports(ec.Features.EXPERIMENTAL_SOUNDSHARE) && h.satisfies(null === (e = A.default) || void 0 === e ? void 0 : e.os.release, el.WINDOWS_SOUNDSHARE_VERSION)
                }
                getOpenH264() {
                    return eX().openH264
                }
                getAv1Enabled() {
                    return eX().av1Enabled
                }
                getHardwareClipEncode() {
                    return eX().hardwareClipEncode
                }
                getEverSpeakingWhileMuted() {
                    return eP
                }
                getSoundshareEnabled() {
                    return eH
                }
                supportsEnableSoundshare() {
                    var e;
                    return (0, K.isMac)() && eh.supports(ec.Features.SOUNDSHARE) && h.satisfies(null === (e = A.default) || void 0 === e ? void 0 : e.os.release, el.DARWIN_SOUNDSHARE_VERSION)
                }
                getVideoStreamParameters() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ec.MediaEngineContextTypes.DEFAULT,
                        t = this.supports(ec.Features.VIDEO) ? [{
                            rid: "100",
                            type: e === ec.MediaEngineContextTypes.DEFAULT ? ec.MediaTypes.VIDEO : ec.MediaTypes.SCREEN,
                            quality: 100
                        }] : [];
                    return this.isSimulcastSupported() && e === ec.MediaEngineContextTypes.DEFAULT && t.push({
                        rid: "50",
                        type: ec.MediaTypes.VIDEO,
                        quality: 50
                    }), t
                }
                getSupportedSecureFramesProtocolVersion() {
                    let {
                        canSupportSecureFrames: e
                    } = w.default.getCurrentConfig({
                        location: "MediaEngineStore"
                    });
                    return e ? eh.getSupportedSecureFramesProtocolVersion() : 0
                }
            }
            td.displayName = "MediaEngineStore";
            var t_ = i = new td(g.default, {
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t,
                        channelId: n,
                        currentVoiceChannelId: i,
                        video: r
                    } = e;
                    if (i !== n && e0(r, null), null != t || null == n) {
                        ex = !1;
                        return
                    }
                    if (ex) return;
                    ex = !0;
                    let s = eX();
                    (s.mute || s.deaf) && (e6({
                        deaf: !1,
                        mute: !1
                    }), eh.eachConnection(e$))
                },
                VOICE_STATE_UPDATES: function(e) {
                    let {
                        voiceStates: t
                    } = e;
                    return t.reduce((e, t) => {
                        if (r === t.sessionId) {
                            eN = t.mute || t.suppress, eD = t.deaf, eh.eachConnection(e$);
                            let e = null != t.guildId && null != t.channelId && null != eB && eB !== t.channelId,
                                n = !e && eL;
                            return e0(n), eB = t.channelId, !0
                        }
                        return !__OVERLAY__ && t.userId === X.default.getId() && null == en.default.getChannelId() && e0(!1, null), e
                    }, !1)
                },
                CONNECTION_OPEN: function(e) {
                    r = e.sessionId, eN = !1, eD = !1, (0, H.shouldReadWriteAudioSettings)() && tt()
                },
                CONNECTION_CLOSED: function() {
                    r = null
                },
                RTC_CONNECTION_STATE: function(e) {
                    switch (e.state) {
                        case ea.RTCConnectionStates.CONNECTING:
                            e7();
                            break;
                        case ea.RTCConnectionStates.RTC_CONNECTING:
                            eG = !1, ew = !1;
                            break;
                        case ea.RTCConnectionStates.RTC_CONNECTED:
                            e0();
                            break;
                        case ea.RTCConnectionStates.DISCONNECTED:
                            (function() {
                                if (0 === eW.size) return;
                                let e = ec.MediaEngineContextTypes.DEFAULT,
                                    {
                                        disabledLocalVideos: t
                                    } = eX(e);
                                eW.forEach(n => {
                                    _(t[n], "If you are auto-disabled, then you are also disabled."), delete t[n], eh.eachConnection(e => e.setLocalVideoDisabled(n, !1), e)
                                }), eW.clear(), e6({
                                    disabledLocalVideos: t
                                }, e, !1)
                            })()
                    }
                    e3.update()
                },
                AUDIO_SET_TEMPORARY_SELF_MUTE: function(e) {
                    let {
                        mute: t
                    } = e;
                    ev = t, eh.eachConnection(e$)
                },
                AUDIO_TOGGLE_SELF_MUTE: function(e) {
                    let {
                        context: t
                    } = e, {
                        mute: n,
                        deaf: i
                    } = eX(t);
                    if (t === ec.MediaEngineContextTypes.DEFAULT && (V.default.requestPermission(eo.NativePermissionTypes.AUDIO), eO)) return !1;
                    !(n = !i && !n) && (i = !1), e6({
                        mute: n,
                        deaf: i
                    }, t), eh.eachConnection(e$)
                },
                AUDIO_TOGGLE_SELF_DEAF: function(e) {
                    let {
                        context: t
                    } = e, n = eX(t);
                    e6({
                        deaf: !n.deaf
                    }, t), eh.eachConnection(e$)
                },
                AUDIO_TOGGLE_LOCAL_MUTE: function(e) {
                    let {
                        context: t,
                        userId: n
                    } = e;
                    if (n === X.default.getId()) return;
                    let {
                        localMutes: i
                    } = eX(t);
                    i[n] ? delete i[n] : i[n] = !0, e6({
                        localMutes: i
                    }, t), eh.eachConnection(e => e.setLocalMute(n, i[n] || !1), t)
                },
                AUDIO_SET_LOCAL_VIDEO_DISABLED: function(e) {
                    var t, n, i, r, s, a, l, o;
                    let {
                        context: u,
                        userId: c,
                        videoToggleState: d,
                        persist: E,
                        isAutomatic: f
                    } = e;
                    _(!(E && f), "These are not allowed to both be true.");
                    let p = d === ea.VideoToggleState.DISABLED,
                        {
                            disabledLocalVideos: h
                        } = eX(u),
                        S = null !== (t = h[c]) && void 0 !== t && t,
                        T = eW.has(c),
                        I = d === ea.VideoToggleState.AUTO_ENABLED || d === ea.VideoToggleState.MANUAL_ENABLED;
                    _(!(T && !S), "If you are auto-disabled, then you are also disabled.");
                    let m = p !== S,
                        g = u === ec.MediaEngineContextTypes.DEFAULT,
                        A = f && m && g,
                        C = E && m && g,
                        {
                            videoToggleStateMap: R
                        } = eX(u);
                    if (R[c] === ea.VideoToggleState.AUTO_PROBING && d === ea.VideoToggleState.AUTO_ENABLED && (0, B.default)(c, p ? ec.VideoToggleReason.AUTO_DISABLE : ec.VideoToggleReason.AUTO_ENABLE, I), R[c] = d, e6({
                            videoToggleStateMap: R
                        }, u, E), d === ea.VideoToggleState.AUTO_PROBING ? null === (n = en.default.getRTCConnection()) || void 0 === n || n.pauseStatsCollectionForUser(c, !0) : null === (i = en.default.getRTCConnection()) || void 0 === i || i.pauseStatsCollectionForUser(c, !1), !eK && (e_.info("isAutoDisableAllowed=".concat(eK, " - disabling VideoHealthManager")), null === (s = en.default.getRTCConnection()) || void 0 === s || null === (r = s.getVideoHealthManager()) || void 0 === r || r.disable()), A) {
                        if (!p && !T || p && !eK) return;
                        (0, B.default)(c, p ? ec.VideoToggleReason.AUTO_DISABLE : ec.VideoToggleReason.AUTO_ENABLE, I), p ? eW.add(c) : eW.delete(c)
                    } else C && (T && !p ? (e_.info("disallowing auto-disable for this session because of manual override by user"), eK = !1, null === (l = en.default.getRTCConnection()) || void 0 === l || null === (a = l.getVideoHealthManager()) || void 0 === a || a.disable(), (0, B.default)(c, ec.VideoToggleReason.MANUAL_REENABLE, I)) : (0, B.default)(c, p ? ec.VideoToggleReason.MANUAL_DISABLE : ec.VideoToggleReason.MANUAL_ENABLE, I));
                    g && !p && eW.delete(c), p ? h[c] = !0 : delete h[c], e6({
                        disabledLocalVideos: h
                    }, u, E), eh.eachConnection(e => e.setLocalVideoDisabled(c, null !== (o = h[c]) && void 0 !== o && o), u)
                },
                AUDIO_SET_LOCAL_VOLUME: function(e) {
                    let {
                        context: t,
                        userId: n,
                        volume: i
                    } = e;
                    if (n === X.default.getId()) return;
                    let r = t === ec.MediaEngineContextTypes.STREAM,
                        s = r ? ec.DEFAULT_STREAM_VOLUME : ec.DEFAULT_VOLUME,
                        {
                            localVolumes: a
                        } = eX(t);
                    i === s ? delete a[n] : a[n] = i, e6({
                        localVolumes: a
                    }, t), eh.eachConnection(e => e.setLocalVolume(n, i), t)
                },
                AUDIO_SET_LOCAL_PAN: function(e) {
                    let {
                        context: t,
                        userId: n,
                        left: i,
                        right: r
                    } = e, {
                        localPans: s
                    } = eX(t);
                    s[n] = {
                        left: i,
                        right: r
                    }, e6({
                        localPans: s
                    }, t), eh.eachConnection(e => e.setLocalPan(n, i, r), t)
                },
                AUDIO_SET_MODE: function(e) {
                    let {
                        context: t,
                        mode: n,
                        options: i
                    } = e;
                    e6({
                        mode: n,
                        modeOptions: i
                    }, t), eh.eachConnection(eQ), e3.update()
                },
                AUDIO_SET_INPUT_VOLUME: function(e) {
                    let {
                        volume: t
                    } = e;
                    e6({
                        inputVolume: eJ(t)
                    }), eh.setInputVolume(t)
                },
                AUDIO_SET_OUTPUT_VOLUME: function(e) {
                    let {
                        volume: t
                    } = e;
                    e6({
                        outputVolume: t
                    }), eh.setOutputVolume(t)
                },
                AUDIO_SET_INPUT_DEVICE: function(e) {
                    let {
                        id: t
                    } = e;
                    e6({
                        inputDeviceId: t = te(eA, t)
                    }), eh.setAudioInputDevice(t)
                },
                AUDIO_SET_OUTPUT_DEVICE: function(e) {
                    let {
                        id: t
                    } = e;
                    e6({
                        outputDeviceId: t = te(eC, t)
                    }), eh.setAudioOutputDevice(t)
                },
                AUDIO_SET_ECHO_CANCELLATION: function(e) {
                    let t = e6({
                        echoCancellation: e.enabled
                    });
                    eh.eachConnection(e => e.setEchoCancellation(t.echoCancellation)), ts(), tr(e.location)
                },
                MEDIA_ENGINE_SET_H265: function(e) {
                    let t = e6({
                        h265Enabled: e.enabled
                    });
                    eh.setH265Enabled(t.h265Enabled)
                },
                AUDIO_SET_LOOPBACK: function(e) {
                    let {
                        enabled: t
                    } = e;
                    return ez = t, ts()
                },
                AUDIO_SET_NOISE_SUPPRESSION: function(e) {
                    let t = e6({
                        noiseSuppression: e.enabled
                    });
                    eh.eachConnection(e => e.setNoiseSuppression(t.noiseSuppression)), ts(), tr(e.location)
                },
                AUDIO_SET_AUTOMATIC_GAIN_CONTROL: function(e) {
                    let t = e6({
                        automaticGainControl: e.enabled
                    });
                    eh.eachConnection(e => e.setAutomaticGainControl(t.automaticGainControl)), ts(), tr(e.location)
                },
                AUDIO_SET_NOISE_CANCELLATION: function(e) {
                    let t = e6({
                        noiseCancellation: e.enabled
                    });
                    eh.eachConnection(e => e.setNoiseCancellation(t.noiseCancellation)), ts(), tr(e.location)
                },
                AUDIO_SET_DISPLAY_SILENCE_WARNING: function(e) {
                    e6({
                        silenceWarning: e.enabled
                    }), e3.update()
                },
                AUDIO_SET_DEBUG_LOGGING: function(e) {
                    eh.setDebugLogging(e.enabled)
                },
                MEDIA_ENGINE_SET_VIDEO_HOOK: function(e) {
                    e6({
                        videoHook: e.enabled
                    })
                },
                MEDIA_ENGINE_SET_EXPERIMENTAL_SOUNDSHARE: function(e) {
                    e6({
                        experimentalSoundshare2: e.enabled
                    })
                },
                AUDIO_SET_ATTENUATION: function(e) {
                    let {
                        attenuation: t,
                        attenuateWhileSpeakingSelf: n,
                        attenuateWhileSpeakingOthers: i
                    } = e, r = e6({
                        attenuation: t,
                        attenuateWhileSpeakingSelf: n,
                        attenuateWhileSpeakingOthers: i
                    });
                    eh.eachConnection(e => e.setAttenuation(r.attenuation, r.attenuateWhileSpeakingSelf, r.attenuateWhileSpeakingOthers))
                },
                AUDIO_SET_QOS: function(e) {
                    let {
                        enabled: t
                    } = e;
                    e6({
                        qos: t
                    }), eh.eachConnection(e => e.setQoS(t))
                },
                MEDIA_ENGINE_DEVICES: function(e) {
                    let {
                        inputDevices: t,
                        outputDevices: n,
                        videoDevices: i
                    } = e;
                    ! function(e) {
                        let t = eA;
                        if (eA = e8(e, ed.default.Messages.NO_INPUT_DEVICES), !f.isEqual(eA, t)) {
                            let e = eX(),
                                t = te(eA, e.inputDeviceId);
                            eh.setAudioInputDevice(t)
                        }
                    }(t), ! function(e) {
                        let t = eC;
                        if (eC = e8(e, ed.default.Messages.NO_OUTPUT_DEVICES), !f.isEqual(eC, t)) {
                            let e = eX(),
                                t = te(eC, e.outputDeviceId);
                            eh.setAudioOutputDevice(t)
                        }
                    }(n), ! function(e) {
                        ey = e.length > 0;
                        let t = eR;
                        if (eR = e8(e, ed.default.Messages.NO_VIDEO_DEVICES), eL && !f.isEqual(eR, t)) {
                            var n;
                            let e = void 0 !== eR[eM],
                                i = eM === ec.DEFAULT_DEVICE_ID && (null === (n = t[ec.DEFAULT_DEVICE_ID]) || void 0 === n ? void 0 : n.disabled);
                            e0(e || i)
                        }
                    }(i)
                },
                AUDIO_VOLUME_CHANGE: function(e) {
                    let {
                        inputVolume: t,
                        outputVolume: n
                    } = e;
                    e6({
                        inputVolume: eJ(t),
                        outputVolume: n
                    })
                },
                AUDIO_RESET: function() {
                    I.default.remove(eE), location.reload()
                },
                AUDIO_INPUT_DETECTED: function(e) {
                    let {
                        inputDetected: t
                    } = e;
                    eU = t, !eG && eU && (eG = !0, e3.update())
                },
                AUDIO_SET_SUBSYSTEM: function(e) {
                    eh.setAudioSubsystem(e.subsystem)
                },
                MEDIA_ENGINE_SET_AUDIO_ENABLED: function(e) {
                    eI = e.enabled, e.unmute && e6({
                        mute: !1,
                        deaf: !1
                    }), eh.eachConnection(e$)
                },
                MEDIA_ENGINE_SET_VIDEO_ENABLED: function(e) {
                    let {
                        enabled: t
                    } = e;
                    V.default.requestPermission(eo.NativePermissionTypes.CAMERA), e0(t)
                },
                MEDIA_ENGINE_PERMISSION: function(e) {
                    let {
                        kind: t,
                        granted: n
                    } = e;
                    if (!n) switch (t) {
                        case "audio":
                            eI = !1, eh.eachConnection(e$);
                            break;
                        case "video":
                            e0(!1)
                    }
                },
                MEDIA_ENGINE_SET_GO_LIVE_SOURCE: function(e) {
                    var t, n, i, r, a;
                    let {
                        settings: l
                    } = e;
                    if ((null == l ? void 0 : l.desktopSettings) != null) {
                        ;
                        let e = null,
                            i = null,
                            {
                                sourceId: r,
                                sound: o
                            } = l.desktopSettings,
                            u = null !== (t = l.context) && void 0 !== t ? t : ec.MediaEngineContextTypes.DEFAULT,
                            c = null !== (n = l.qualityOptions) && void 0 !== n ? n : {
                                resolution: 720,
                                frameRate: 30
                            },
                            d = W.default.getPidFromDesktopSource(r);
                        K.isPlatformEmbedded && !0 === o && ({
                            soundshareId: e,
                            soundshareSession: i
                        } = tn(d), null != e && ti(e, i, e => ({
                            type: "MEDIA_ENGINE_SOUNDSHARE_FAILED",
                            errorMessage: e
                        }))), (a = u) !== eg && (null != s && eh.setGoLiveSource(null, eg), eg = a);
                        let _ = u === ec.MediaEngineContextTypes.STREAM && eL;
                        e0(_, {
                            desktopSource: {
                                id: r,
                                sourcePid: d,
                                soundshareId: e,
                                soundshareSession: i
                            },
                            quality: {
                                resolution: c.resolution,
                                frameRate: c.frameRate
                            }
                        })
                    } else if ((null == l ? void 0 : l.cameraSettings) != null) {
                        let e = null !== (i = l.context) && void 0 !== i ? i : ec.MediaEngineContextTypes.DEFAULT,
                            {
                                videoDeviceGuid: t,
                                audioDeviceGuid: n
                            } = l.cameraSettings,
                            s = e === ec.MediaEngineContextTypes.STREAM && eL,
                            a = null !== (r = l.qualityOptions) && void 0 !== r ? r : {
                                resolution: 720,
                                frameRate: 30
                            };
                        e0(s, {
                            cameraSource: {
                                videoDeviceGuid: t,
                                audioDeviceGuid: n
                            },
                            quality: {
                                resolution: a.resolution,
                                frameRate: a.frameRate
                            }
                        })
                    } else e0(eL, null)
                },
                MEDIA_ENGINE_SET_VIDEO_DEVICE: function(e) {
                    let {
                        id: t
                    } = e;
                    e6({
                        videoDeviceId: t = te(eR, t)
                    }), e0()
                },
                MEDIA_ENGINE_SET_EXPERIMENTAL_ENCODERS: function(e) {
                    let t = e6({
                        experimentalEncoders: e.enabled
                    });
                    eh.eachConnection(e => e.setExperimentalEncoders(t.experimentalEncoders))
                },
                MEDIA_ENGINE_INTERACTION_REQUIRED: function(e) {
                    return em !== e.required && (em = e.required, !e.required && eh.interact(), !0)
                },
                USER_SETTINGS_MODAL_INIT: to,
                USER_SETTINGS_MODAL_SET_SECTION: to,
                CERTIFIED_DEVICES_SET: function() {
                    return eh.eachConnection(e5), !1
                },
                RPC_APP_CONNECTED: function(e) {
                    let {
                        application: t
                    } = e;
                    eT.add(t.id)
                },
                RPC_APP_DISCONNECTED: function(e) {
                    let {
                        application: t
                    } = e;
                    eT.delete(t.id)
                },
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        mediaEngineState: t
                    } = e;
                    eS = t.settingsByContext, eA = t.inputDevices, eC = t.outputDevices, eZ = t.appSupported, eF = t.krispModuleLoaded, eg = t.goLiveContext
                },
                MEDIA_ENGINE_SET_OPEN_H264: function(e) {
                    let {
                        enabled: t
                    } = e, n = e6({
                        openH264: t
                    });
                    eh.setH264Enabled(n.openH264)
                },
                MEDIA_ENGINE_SET_HARDWARE_H264: function(e) {
                    let {
                        enabled: t
                    } = e, n = e6({
                        hardwareH264: t
                    });
                    eh.eachConnection(e => e.setHardwareH264(n.hardwareH264))
                },
                MEDIA_ENGINE_SET_AV1: function(e) {
                    let {
                        enabled: t
                    } = e, n = e6({
                        av1Enabled: t
                    });
                    eh.setAv1Enabled(n.av1Enabled)
                },
                MEDIA_ENGINE_SET_HARDWARE_CLIP_ENCODE: function(e) {
                    let {
                        enabled: t
                    } = e, n = e6({
                        hardwareClipEncode: t
                    });
                    eh.setHardwareClipEncode(n.hardwareClipEncode)
                },
                APP_STATE_UPDATE: function(e) {
                    let {
                        state: t
                    } = e, n = O.default.isEnabled();
                    if (t === ea.AppStates.BACKGROUND && eL && !n) eb = !0, e0(!1);
                    else {
                        if (t !== ea.AppStates.ACTIVE || !eb) return !1;
                        eb = !1, e0(!0)
                    }
                    return !0
                },
                SET_CHANNEL_BITRATE: function(e) {
                    eh.eachConnection(t => t.setBitRate(e.bitrate))
                },
                SET_VAD_PERMISSION: function(e) {
                    let {
                        hasPermission: t
                    } = e, n = !t;
                    if (n === eO) return !1;
                    eO = n, eh.eachConnection(e$)
                },
                SET_NATIVE_PERMISSION: function(e) {
                    let {
                        state: t,
                        permissionType: n
                    } = e, i = t === eo.NativePermissionStates.ACCEPTED;
                    switch (n) {
                        case eo.NativePermissionTypes.AUDIO:
                            eY = !0, eh.eachConnection(e$);
                            break;
                        case eo.NativePermissionTypes.CAMERA:
                            !i && eL && e0(!1);
                            break;
                        default:
                            return !1
                    }
                },
                SET_CHANNEL_VIDEO_QUALITY_MODE: function(e) {
                    eh.eachConnection(t => t.applyVideoQualityMode(e.mode))
                },
                MEDIA_ENGINE_SET_AEC_DUMP: function(e) {
                    let {
                        enabled: t
                    } = e, n = e6({
                        aecDumpEnabled: t
                    });
                    eh.setAecDump(n.aecDumpEnabled)
                },
                CHANNEL_DELETE: function() {
                    if (!eL && null == s || null != en.default.getRTCConnectionId()) return !1;
                    e0(!1, null)
                },
                MEDIA_ENGINE_NOISE_CANCELLATION_ERROR_RESET: function() {
                    return !!eV && (eV = !1, !0)
                },
                MEDIA_ENGINE_ENABLE_SOUNDSHARE: function() {
                    tc(), ! function() {
                        var e, t;
                        let n = i.isSoundSharing(),
                            r = null === (e = i.getGoLiveSource()) || void 0 === e ? void 0 : e.desktopSource;
                        if (null != r) {
                            let e = null !== (t = r.soundshareId) && void 0 !== t ? t : 0,
                                s = i.getExperimentalSoundshare();
                            n && eh.setSoundshareSource(e, s, eg)
                        }
                    }()
                },
                MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS: function(e) {
                    let {
                        settings: t
                    } = e;
                    eh.applyMediaFilterSettings(t).finally(() => {
                        ej = !1, i.emitChange()
                    })
                },
                MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS_START: function() {
                    ej = !0
                },
                MEDIA_ENGINE_APPLY_MEDIA_FILTER_SETTINGS_ERROR: function() {
                    ej = !1
                },
                USER_SETTINGS_PROTO_UPDATE: function(e) {
                    let {
                        settings: {
                            type: t
                        },
                        local: n,
                        wasSaved: i
                    } = e;
                    if (!(0, H.shouldReadWriteAudioSettings)() || t !== eu.UserSettingsTypes.PRELOADED_USER_SETTINGS || n || null != i) return !1;
                    tt(!0)
                },
                CLIPS_INIT: function(e) {
                    let {
                        sourceId: t,
                        applicationName: n
                    } = e, {
                        enableDecoupledGameClipping: r
                    } = L.default.getCurrentConfig({
                        location: "handleClipsInit"
                    }, {
                        autoTrackExposure: !0
                    }), s = R.default.getSettings().decoupledClipsEnabled;
                    if (!r || !s || null == A.default) return;
                    let l = null,
                        o = null,
                        u = {
                            resolution: 720,
                            frameRate: 30
                        },
                        c = W.default.getPidFromDesktopSource(t);
                    null == c && g.default.wait(() => {
                        g.default.dispatch({
                            type: "CLIPS_INIT_FAILURE",
                            errMsg: "Failed to get pid for ".concat(t),
                            applicationName: n
                        })
                    }), {
                        soundshareId: l,
                        soundshareSession: o
                    } = tn(c);
                    let d = {
                        desktopSource: {
                            id: t,
                            sourcePid: c,
                            soundshareId: l,
                            soundshareSession: o
                        },
                        quality: u
                    };
                    null != a && a.desktopSource.id !== d.desktopSource.id && (eh.setClipsSource(null), (0, K.isWindows)() && null != a.desktopSource.soundshareId && C.cancelAttachToProcess(a.desktopSource.soundshareId)), null != l && ti(l, o, e => ({
                        type: "CLIPS_INIT_FAILURE",
                        errMsg: e,
                        applicationName: n
                    })), a = d;
                    let {
                        useQuartzCapturer: _,
                        allowScreenCaptureKit: E
                    } = G.default.getCurrentConfig({
                        location: "f627ab_11"
                    }, {
                        autoTrackExposure: !1
                    }), {
                        hdrCaptureMode: f
                    } = b.default.getCurrentConfig({
                        location: "f627ab_12"
                    }, {
                        autoTrackExposure: !1
                    });
                    eh.setClipsSource({
                        desktopDescription: {
                            id: a.desktopSource.id,
                            soundshareId: a.desktopSource.soundshareId,
                            useVideoHook: e4(!1) && eX().videoHook,
                            useGraphicsCapture: !0,
                            useLoopback: i.getExperimentalSoundshare(),
                            useQuartzCapturer: _,
                            allowScreenCaptureKit: E && eh.supports(ec.Features.SCREEN_CAPTURE_KIT),
                            hdrCaptureMode: f
                        },
                        quality: u,
                        applicationName: n
                    })
                }
            })
        },
        985365: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("35468"),
                a = n("49111");
            let l = a.NetworkConnectionTypes.UNKNOWN,
                o = a.NetworkConnectionSpeeds.UNKNOWN,
                u = null;

            function c(e) {
                var t;
                l = null != e.type ? e.type : a.NetworkConnectionTypes.UNKNOWN, o = null !== (t = e.effectiveSpeed) && void 0 !== t ? t : a.NetworkConnectionSpeeds.UNKNOWN, u = e.serviceProvider, _.emitChange()
            }
            class d extends i.default.Store {
                initialize() {
                    s.default.getNetworkInformation().then(c), s.default.addChangeCallback(c)
                }
                getType() {
                    return l
                }
                getEffectiveConnectionSpeed() {
                    return o
                }
                getServiceProvider() {
                    return u
                }
            }
            d.displayName = "NetworkStore";
            let _ = new d(r.default, {});
            var E = _
        },
        957255: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return W
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("754013"),
                a = n("498225"),
                l = n("913144"),
                o = n("560208"),
                u = n("38654"),
                c = n("267567"),
                d = n("834052"),
                _ = n("755624"),
                E = n("526311"),
                f = n("233069"),
                p = n("813006"),
                h = n("766274"),
                S = n("845078"),
                T = n("991170"),
                I = n("42203"),
                m = n("926787"),
                g = n("26989"),
                A = n("305961"),
                C = n("697218"),
                R = n("49111"),
                N = n("562980");
            let v = {},
                O = {},
                D = {},
                L = 0;

            function M(e) {
                let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                    n = v[e];
                if (null != n) return n;
                let i = C.default.getCurrentUser();
                if (null == i) return T.default.NONE;
                let r = A.default.getGuild(e);
                return null == r ? T.default.NONE : v[e] = T.default.computePermissions({
                    user: i,
                    context: r,
                    checkElevated: t
                })
            }

            function P(e) {
                var t;
                let n = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                    i = C.default.getCurrentUser();
                if (null == i) return T.default.NONE;
                let s = I.default.getChannel(e);
                if (null == s) return T.default.NONE;
                let a = s.getGuildId(),
                    l = null != a && (c.default.isLurking(a) || (null === (t = g.default.getMember(a, i.id)) || void 0 === t ? void 0 : t.isPending));
                return !s.isScheduledForDeletion() && !l && r.isEmpty(s.permissionOverwrites) && null != a ? M(a) : T.default.computePermissions({
                    user: i,
                    context: s,
                    checkElevated: n
                })
            }

            function b(e) {
                let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                    n = O[e];
                return null != n ? n : O[e] = P(e, t)
            }

            function y(e) {
                if (null != e) {
                    var t;
                    D[e] = (null !== (t = D[e]) && void 0 !== t ? t : 0) + 1
                }
            }

            function U() {
                for (let e in v = {}, O = {}, D) D[e] += 1;
                L += 1
            }

            function G() {
                U()
            }

            function w() {
                U()
            }

            function x(e) {
                var t;
                let {
                    user: n
                } = e;
                if (n.id !== (null === (t = C.default.getCurrentUser()) || void 0 === t ? void 0 : t.id)) return !1;
                U()
            }

            function k() {
                return !0
            }

            function F(e) {
                let {
                    guildId: t
                } = e;
                delete v[t];
                let n = I.default.getMutableBasicGuildChannelsForGuild(t);
                r.forEach(n, e => {
                    delete O[e.id]
                }), L += 1, y(t)
            }

            function B(e) {
                let {
                    instance: t
                } = e, n = I.default.getChannel(t.channel_id);
                if (null == n) return !1;
                let i = C.default.getCurrentUser(),
                    r = T.default.computePermissions({
                        user: i,
                        context: n
                    });
                if (r === O[n.id]) return !1;
                O[n.id] = r, L += 1
            }

            function V(e) {
                let {
                    guildId: t
                } = e;
                delete v[t];
                let n = I.default.getMutableBasicGuildChannelsForGuild(t);
                r.forEach(n, e => {
                    delete O[e.id]
                }), L += 1, y(t)
            }

            function H(e, t, n, i) {
                let r = T.default.NONE;
                if (e instanceof f.ChannelRecordBase) {
                    if (f.THREAD_CHANNEL_TYPES.has(e.type)) {
                        let r = I.default.getChannel(e.parent_id);
                        return null == r ? T.default.NONE : T.default.applyThreadPermissions(e, H(r, t, n, i), _.default.hasJoined(e.id))
                    }
                    r = b(e.id)
                } else e instanceof p.default && (r = M(e.id));
                return void 0 !== t || void 0 !== n || void 0 !== i ? T.default.computePermissions({
                    user: C.default.getCurrentUser(),
                    context: e,
                    overwrites: t,
                    roles: n,
                    checkElevated: !0,
                    excludeGuildPermissions: i
                }) : r
            }
            class j extends a.default.Store {
                initialize() {
                    this.waitFor(C.default, A.default, I.default, g.default, m.default, _.default, d.default, u.default)
                }
                getChannelPermissions(e) {
                    return f.THREAD_CHANNEL_TYPES.has(e.type) ? P(e.id) : b(e.id)
                }
                getGuildPermissions(e) {
                    return M(e.id)
                }
                getGuildPermissionProps(e) {
                    let t = C.default.getCurrentUser();
                    return {
                        canManageGuild: this.can(R.Permissions.MANAGE_GUILD, e),
                        canManageChannels: this.can(R.Permissions.MANAGE_CHANNELS, e),
                        canManageRoles: this.can(R.Permissions.MANAGE_ROLES, e),
                        canManageBans: this.can(R.Permissions.BAN_MEMBERS, e),
                        canManageNicknames: this.can(R.Permissions.MANAGE_NICKNAMES, e),
                        canManageGuildExpressions: this.can(R.Permissions.MANAGE_GUILD_EXPRESSIONS, e) || this.can(R.Permissions.CREATE_GUILD_EXPRESSIONS, e),
                        canViewAuditLog: this.can(R.Permissions.VIEW_AUDIT_LOG, e),
                        canViewAuditLogV2: this.can(R.Permissions.VIEW_AUDIT_LOG, e),
                        canManageWebhooks: this.can(R.Permissions.MANAGE_WEBHOOKS, e),
                        canViewGuildAnalytics: this.can(R.Permissions.VIEW_GUILD_ANALYTICS, e),
                        canAccessMembersPage: this.can(N.MemberSafetyPagePermissions, e),
                        isGuildAdmin: this.can(R.Permissions.ADMINISTRATOR, e),
                        isOwner: null != t && e.isOwner(t),
                        isOwnerWithRequiredMfaLevel: null != t && e.isOwnerWithRequiredMfaLevel(t),
                        guild: e
                    }
                }
                canAccessGuildSettings(e) {
                    return s.default.hasAny(M(e.id), T.default.VIEW_GUILD_SETTINGS)
                }
                canWithPartialContext(e, t) {
                    return "channelId" in t && "string" == typeof t.channelId ? this.can(e, I.default.getChannel(t.channelId)) : "guildId" in t && "string" == typeof t.guildId && this.can(e, A.default.getGuild(t.guildId))
                }
                can(e, t, n, i, r) {
                    let a = H(t, n, i, r);
                    return s.default.has(a, e)
                }
                canBasicChannel(e, t, n, i, r) {
                    return "basicPermissions" in t ? S.default.has(t.basicPermissions, e) : s.default.has(H(t, n, i, r), S.default.asBigFlag(e))
                }
                computePermissions(e, t, n, i) {
                    return H(e, t, n, i)
                }
                computeBasicPermissions(e) {
                    return "basicPermissions" in e ? e.basicPermissions : S.default.asBasicFlag(H(e))
                }
                canManageUser(e, t, n) {
                    let i = t instanceof h.default ? t.id : t;
                    if (n.isOwner(i)) return !1;
                    let r = C.default.getCurrentUser();
                    if (!this.can(e, n)) return !1;
                    let s = null != r ? T.default.getHighestRole(n, r.id) : void 0,
                        a = T.default.getHighestRole(n, i);
                    return null != r && T.default.isRoleHigher(n, r.id, s, a)
                }
                getHighestRole(e) {
                    let t = C.default.getCurrentUser();
                    return null != t ? T.default.getHighestRole(e, t.id) : null
                }
                isRoleHigher(e, t, n) {
                    let i = C.default.getCurrentUser(),
                        r = u.default.isViewingRoles(e.id);
                    return T.default.isRoleHigher(e, r ? void 0 : null == i ? void 0 : i.id, t, n)
                }
                canImpersonateRole(e, t) {
                    let n = this.getHighestRole(e),
                        i = this.can(R.Permissions.MANAGE_GUILD, e) && this.can(R.Permissions.MANAGE_ROLES, e),
                        r = this.isRoleHigher(e, n, t);
                    return i && (r || t.id === (null == n ? void 0 : n.id))
                }
                getGuildVersion(e) {
                    var t;
                    return null !== (t = D[e]) && void 0 !== t ? t : 0
                }
                getChannelsVersion() {
                    return L
                }
            }

            function Y() {
                O = {}, v = {}, D = {}, L = 0
            }
            j.displayName = "PermissionStore";
            var W = new j(l.default, {
                BACKGROUND_SYNC: G,
                CONNECTION_OPEN: G,
                OVERLAY_INITIALIZE: G,
                CACHE_LOADED: G,
                CACHE_LOADED_LAZY: G,
                CONNECTION_CLOSED: function() {
                    Y()
                },
                GUILD_CREATE: w,
                GUILD_UPDATE: w,
                GUILD_DELETE: w,
                GUILD_MEMBER_ADD: x,
                GUILD_MEMBER_UPDATE: x,
                CURRENT_USER_UPDATE: x,
                CHANNEL_CREATE: function(e) {
                    let {
                        channel: {
                            id: t
                        }
                    } = e, n = I.default.getChannel(t);
                    if (null == n || n.isPrivate()) return !1;
                    let i = C.default.getCurrentUser(),
                        r = T.default.computePermissions({
                            user: i,
                            context: n
                        });
                    if (O[n.id] === r) return !1;
                    O[n.id] = r, L += 1, y(n.getGuildId())
                },
                THREAD_CREATE: k,
                THREAD_UPDATE: k,
                THREAD_LIST_SYNC: k,
                LOAD_THREADS_SUCCESS: k,
                LOAD_ARCHIVED_THREADS_SUCCESS: k,
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e, n = !1;
                    for (let {
                            id: e
                        }
                        of t) {
                        let t = I.default.getChannel(e);
                        if (null == t || t.isPrivate()) continue;
                        let i = C.default.getCurrentUser(),
                            r = T.default.computePermissions({
                                user: i,
                                context: t
                            });
                        O[t.id] !== r && (O[t.id] = r, y(t.getGuildId()), n = !0)
                    }
                    return !!n && (L += 1, n)
                },
                LOAD_MESSAGES_SUCCESS: function(e) {
                    let {
                        messages: t
                    } = e;
                    return t.some(e => null != e.thread)
                },
                SEARCH_FINISH: function(e) {
                    let {
                        messages: t,
                        threads: n
                    } = e;
                    return !!(n.length > 0) || t.some(e => e.some(e => null != e.thread))
                },
                GUILD_FEED_FETCH_SUCCESS: function(e) {
                    let {
                        data: t
                    } = e;
                    return (0, o.getThreadsFromGuildFeedFetch)(t).length > 0
                },
                THREAD_MEMBER_UPDATE: function(e) {
                    var t;
                    return (null === (t = C.default.getCurrentUser()) || void 0 === t ? void 0 : t.id) === e.userId && (y(e.guildId), !0)
                },
                THREAD_MEMBERS_UPDATE: function(e) {
                    return !!(0, E.doesThreadMembersActionAffectMe)(e) && (y(e.guildId), !0)
                },
                CHANNEL_DELETE: function(e) {
                    let {
                        channel: t
                    } = e;
                    return delete O[t.id], L += 1, y(t.guild_id), !1
                },
                GUILD_ROLE_CREATE: F,
                GUILD_ROLE_UPDATE: F,
                GUILD_ROLE_DELETE: F,
                LOGOUT: Y,
                STAGE_INSTANCE_CREATE: B,
                STAGE_INSTANCE_UPDATE: B,
                STAGE_INSTANCE_DELETE: B,
                IMPERSONATE_UPDATE: V,
                IMPERSONATE_STOP: V
            })
        },
        945956: function(e, t, n) {
            "use strict";
            let i, r;
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            });
            var s = n("498225"),
                a = n("913144"),
                l = n("422791"),
                o = n("241718"),
                u = n("733589"),
                c = n("76393"),
                d = n("122530"),
                _ = n("271938"),
                E = n("316133"),
                f = n("49111"),
                p = n("860604");
            let h = null,
                S = null,
                T = null,
                I = !1,
                m = !1;

            function g(e, t) {
                if (null == r) throw Error("Creating RTCConnection without session.");
                let i = _.default.getId(),
                    s = n("997722").default,
                    u = new s({
                        userId: i,
                        sessionId: r,
                        guildId: e,
                        channelId: t
                    });
                return u.on(l.RTCConnectionEvent.State, (e, t, n) => {
                    a.default.wait(() => a.default.dispatch({
                        type: "RTC_CONNECTION_STATE",
                        state: e,
                        ...t,
                        ...n
                    }))
                }), u.on(l.RTCConnectionEvent.Video, (e, t, n, i, r) => {
                    a.default.wait(() => a.default.dispatch({
                        type: "RTC_CONNECTION_VIDEO",
                        guildId: e,
                        channelId: t,
                        userId: n,
                        streamId: i,
                        rtcServerId: r,
                        context: p.MediaEngineContextTypes.DEFAULT
                    }))
                }), u.on(l.RTCConnectionEvent.Ping, (e, t) => {
                    a.default.wait(() => a.default.dispatch({
                        type: "RTC_CONNECTION_PING",
                        pings: e,
                        quality: t
                    }))
                }), u.on(l.RTCConnectionEvent.OutboundLossRate, e => {
                    a.default.wait(() => a.default.dispatch({
                        type: "RTC_CONNECTION_LOSS_RATE",
                        lossRate: e
                    }))
                }), u.on(l.RTCConnectionEvent.Speaking, (e, t) => {
                    var n;
                    null === (n = S) || void 0 === n || n.setSpeaking(e, t)
                }), u.on(l.RTCConnectionEvent.Flags, (e, t) => {
                    a.default.wait(() => {
                        a.default.dispatch({
                            type: "RTC_CONNECTION_FLAGS",
                            flags: t,
                            userId: e,
                            context: u.context
                        })
                    })
                }), u.on(l.RTCConnectionEvent.Platform, (e, t, n) => {
                    a.default.wait(() => {
                        a.default.dispatch({
                            type: "RTC_CONNECTION_PLATFORM",
                            platform: t,
                            userId: e,
                            channelId: n
                        })
                    })
                }), null == S && (S = new o.default(_.default.getId(), t)), T = null, I = !1, m = !1, u
            }

            function A() {
                if (null == i) return !1;
                T = i.getDuration(), i.destroy(), i = null
            }

            function C() {
                h = null
            }

            function R(e) {
                let {
                    channel: t
                } = e;
                if (null == i || i.channelId !== t.id) return !1;
                A()
            }

            function N() {
                return !0
            }
            class v extends s.default.Store {
                initialize() {
                    this.waitFor(E.default), (0, d.setVideoToggleAnalyticsParams)(this.getRTCConnectionId, this.getMediaSessionId)
                }
                getRTCConnection() {
                    return i
                }
                getState() {
                    return null != i ? i.state : f.RTCConnectionStates.DISCONNECTED
                }
                isConnected() {
                    return this.getState() === f.RTCConnectionStates.RTC_CONNECTED
                }
                isDisconnected() {
                    return this.getState() === f.RTCConnectionStates.DISCONNECTED
                }
                getRemoteDisconnectVoiceChannelId() {
                    return h
                }
                getGuildId() {
                    var e;
                    return null === (e = i) || void 0 === e ? void 0 : e.guildId
                }
                getChannelId() {
                    var e;
                    return null === (e = i) || void 0 === e ? void 0 : e.channelId
                }
                getHostname() {
                    return null != i ? i.hostname : ""
                }
                getQuality() {
                    return null != i ? i.quality : f.RTCConnectionQuality.UNKNOWN
                }
                getPings() {
                    return null != i ? i.getPings() : []
                }
                getAveragePing() {
                    var e;
                    return null != i ? null === (e = i) || void 0 === e ? void 0 : e.getAveragePing() : 0
                }
                getLastPing() {
                    var e;
                    return null === (e = i) || void 0 === e ? void 0 : e.getLastPing()
                }
                getOutboundLossRate() {
                    var e;
                    return null === (e = i) || void 0 === e ? void 0 : e.getOutboundLossRate()
                }
                getMediaSessionId() {
                    var e;
                    return null === (e = i) || void 0 === e ? void 0 : e.getMediaSessionId()
                }
                getRTCConnectionId() {
                    var e;
                    return null === (e = i) || void 0 === e ? void 0 : e.getRTCConnectionId()
                }
                getDuration() {
                    var e, t;
                    return null !== (t = null === (e = i) || void 0 === e ? void 0 : e.getDuration()) && void 0 !== t ? t : T
                }
                getPacketStats() {
                    var e;
                    return null === (e = i) || void 0 === e ? void 0 : e.getPacketStats()
                }
                getVoiceStateStats() {
                    var e;
                    return null === (e = S) || void 0 === e ? void 0 : e.getStats()
                }
                getWasEverMultiParticipant() {
                    return I
                }
                getWasEverRtcConnected() {
                    return m
                }
                isSecureFramesEnabled() {
                    var e, t;
                    return null !== (t = null === (e = i) || void 0 === e ? void 0 : e.isSecureFramesEnabled) && void 0 !== t && t
                }
            }
            v.displayName = "RTCConnectionStore";
            let O = new v(a.default, __OVERLAY__ ? {} : {
                CONNECTION_OPEN: function(e) {
                    return r = e.sessionId, h = null, A(), !1
                },
                CONNECTION_CLOSED: function() {
                    r = null, h = null, A()
                },
                RTC_CONNECTION_STATE: function(e) {
                    return e.state === f.RTCConnectionStates.RTC_CONNECTED && (m = !0), !0
                },
                RTC_CONNECTION_PING: N,
                RTC_CONNECTION_LOSS_RATE: N,
                RTC_CONNECTION_UPDATE_ID: function(e) {
                    return e.connection === i
                },
                VOICE_STATE_UPDATES: function(e) {
                    let {
                        voiceStates: t
                    } = e;
                    return t.reduce((e, t) => {
                        var n, s, a, l, o, u, d;
                        if (null === (n = S) || void 0 === n || n.updateVoiceStates(t.userId, t.channelId), I = I || (null !== (a = null === (s = S) || void 0 === s ? void 0 : s.getStats().max_voice_state_count) && void 0 !== a ? a : 0) > 1, _.default.getId() !== t.userId) return !1;
                        if (null != i) {
                            if (t.sessionId === r) null != t.guildId && t.guildId === i.guildId || null == t.guildId && t.channelId === i.channelId ? null == t.channelId ? A() : i.channelId = t.channelId : (t.guildId !== i.guildId && null == t.channelId || A(), null != t.channelId && (h = null, i = g(t.guildId, t.channelId), I = (null !== (o = null === (l = S) || void 0 === l ? void 0 : l.getStats().max_voice_state_count) && void 0 !== o ? o : 0) > 1));
                            else if (t.guildId === i.guildId) {
                                let e = null != c.default.getAwaitingRemoteSessionInfo() && null != c.default.getRemoteSessionId();
                                !e && (h = i.channelId), A()
                            }
                        } else {
                            if (t.sessionId !== r || null == t.channelId) return e;
                            h = null, i = g(t.guildId, t.channelId), I = (null !== (d = null === (u = S) || void 0 === u ? void 0 : u.getStats().max_voice_state_count) && void 0 !== d ? d : 0) > 1
                        }
                        return !0
                    }, !1)
                },
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    if (null != t || null == i) return !1;
                    A()
                },
                VOICE_SERVER_UPDATE: function(e) {
                    if (null == i || null != e.guildId && e.guildId !== i.guildId || null != e.channelId && e.channelId !== i.channelId) return !1;
                    i.connect(e.endpoint, e.token)
                },
                CLEAR_REMOTE_DISCONNECT_VOICE_CHANNEL_ID: C,
                REMOTE_SESSION_CONNECT: C,
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    if (null == i || i.guildId !== t.id) return !1;
                    A()
                },
                CHANNEL_DELETE: R,
                THREAD_DELETE: R,
                CALL_DELETE: function(e) {
                    let {
                        channelId: t
                    } = e;
                    if (null == i || i.channelId !== t) return !1;
                    A()
                },
                APP_STATE_UPDATE: function(e) {
                    if (null != i) {
                        let t = e.state === f.AppStates.BACKGROUND,
                            n = u.default.isEnabled();
                        i.setAppBackgrounded(t, n)
                    }
                    return e.state === f.AppStates.ACTIVE && null != i && i.resetBackoff("App state is active"), !1
                },
                RTC_LOG_MARKER: function(e) {
                    if (null == i) {
                        console.warn("handleRtcLogMarker: Unexpected state, no rtcConnection.");
                        return
                    }
                    i.setRtcLogMarker(e.marker)
                }
            });
            n.el("599110").then(n.bind(n, "599110")).then(e => {
                let {
                    addExtraAnalyticsDecorator: t
                } = e;
                t(e => {
                    e.client_rtc_state = O.getState()
                })
            });
            var D = O
        },
        661919: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                graphs: function() {
                    return f
                },
                keySection: function() {
                    return m
                },
                parseSection: function() {
                    return g
                },
                default: function() {
                    return N
                }
            });
            var i = n("498225"),
                r = n("335990"),
                s = n("913144"),
                a = n("673777"),
                l = n("42887"),
                o = n("697218"),
                u = n("49111"),
                c = n("860604");
            let d = m(c.MediaEngineContextTypes.DEFAULT, u.RTCDebugSections.TRANSPORT, 0),
                _ = d,
                E = {},
                f = {
                    availableOutgoingBitrate: !0,
                    bitrate: !0,
                    bitrateTarget: !0,
                    bytesReceived: !0,
                    bytesSent: !0,
                    encoderQualityPsnr: !0,
                    encoderQualityVmaf: !0,
                    encodeUsage: !0,
                    frameRateDecode: !0,
                    frameRateEncode: !0,
                    frameRateInput: !0,
                    frameRateNetwork: !0,
                    frameRateRender: !0,
                    inboundBitrateEstimate: !0,
                    packetsLost: !0,
                    packetsReceived: !0,
                    packetsSent: !0,
                    ping: !0
                };

            function p(e, t, n) {
                return "".concat(e, ":").concat(t, ":").concat(n)
            }
            class h {
                static empty() {
                    return new h({})
                }
                put(e, t, n, i) {
                    if ("" === i) {
                        let i = {
                            ...this.state
                        };
                        return delete i[p(e, t, n)], new h(i)
                    }
                    return new h({
                        [p(e, t, n)]: i,
                        ...this.state
                    })
                }
                get(e, t, n) {
                    let i = this.state[p(e, t, n)];
                    return null != i ? i : null
                }
                constructor(e) {
                    this.state = e
                }
            }
            let S = h.empty(),
                T = !1,
                I = null;

            function m(e, t, n) {
                return "".concat(e, ":").concat(t, ":").concat(n)
            }

            function g(e) {
                let [t, n] = e.split(":");
                return {
                    context: t,
                    section: n
                }
            }

            function A() {
                Object.values(c.MediaEngineContextTypes).forEach(e => {
                    E[e] = {}
                })
            }
            A();

            function C() {
                null != I && (I.destroy(), I = null)
            }
            class R extends i.default.Store {
                getSection() {
                    return _
                }
                getStats() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : c.MediaEngineContextTypes.DEFAULT;
                    return E[e][0]
                }
                getAllStats() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : c.MediaEngineContextTypes.DEFAULT;
                    return Object.values(E[e])
                }
                getVideoStreams() {
                    return S
                }
                shouldRecordNextConnection() {
                    return T
                }
            }
            R.displayName = "RTCDebugStore";
            var N = new R(s.default, {
                RTC_DEBUG_MODAL_OPEN: function(e) {
                    var t;
                    _ = null !== (t = e.section) && void 0 !== t ? t : d
                },
                RTC_DEBUG_MODAL_CLOSE: function() {
                    C()
                },
                RTC_DEBUG_MODAL_SET_SECTION: function(e) {
                    _ = e.section
                },
                RTC_DEBUG_MODAL_UPDATE: function(e) {
                    let {
                        context: t,
                        stats: n,
                        index: i
                    } = e, r = E[t];
                    if (null != n) {
                        let [e, s, a] = _.split(":");
                        if (e === t && parseInt(a) === i) {
                            let e = o.default.getUser(s);
                            if (null != e) {
                                let {
                                    rtp: {
                                        inbound: e
                                    }
                                } = n;
                                !Object.keys(e).includes(s) && (_ = d)
                            }
                        }
                        r[i] = function e(t) {
                            let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Date.now(),
                                r = {};
                            for (let [s, a] of Object.entries(t)) {
                                let t = n[s];
                                if (Array.isArray(a)) {
                                    if ("object" == typeof a[0]) {
                                        let n = Array.isArray(t) ? t : [],
                                            l = r[s] = [];
                                        for (let t = 0; t < a.length; t++) {
                                            let r = n[t],
                                                s = "object" == typeof r ? r : {};
                                            l.push(e(a[t], s, i))
                                        }
                                    } else r[s] = a
                                } else if ("object" == typeof a && null !== a) {
                                    let n = "object" == typeof t && null !== t ? t : {};
                                    r[s] = e(a, n, i)
                                } else if (s in f && "number" == typeof a) {
                                    let e = r[s] = Array.isArray(t) ? t : [];
                                    e.push({
                                        value: a,
                                        time: i
                                    }), e.length > 600 && e.shift()
                                } else r[s] = a
                            }
                            return r
                        }(n, r[i])
                    } else delete r[i]
                },
                RTC_DEBUG_MODAL_OPEN_REPLAY: function(e) {
                    a.chooseReplayPath()
                },
                RTC_DEBUG_MODAL_OPEN_REPLAY_AT_PATH: function(e) {
                    let {
                        path: t
                    } = e, n = l.default.getMediaEngine();
                    if (C(), !n.supports(c.Features.CONNECTION_REPLAY) || 0 === t.length) return;
                    let i = n.createReplayConnection(c.MediaEngineContextTypes.DEFAULT, t);
                    null != i && (I = i, i.on(r.BaseConnectionEvent.Video, (e, t, n, r, a) => {
                        s.default.dispatch({
                            type: "RTC_DEBUG_MODAL_UPDATE_VIDEO_OUTPUT",
                            mediaEngineConnectionId: i.mediaEngineConnectionId,
                            userId: e,
                            videoSsrc: null != r ? r : 0,
                            streamId: null != t ? t : ""
                        })
                    }), s.default.wait(() => a.open()))
                },
                RTC_DEBUG_MODAL_UPDATE_VIDEO_OUTPUT: function(e) {
                    S = S.put(e.mediaEngineConnectionId, e.userId, e.videoSsrc, e.streamId)
                },
                RTC_DEBUG_SET_RECORDING_FLAG: function(e) {
                    let {
                        value: t
                    } = e;
                    T = t
                },
                VOICE_CHANNEL_SELECT: function() {
                    A()
                }
            });
            l.default.getMediaEngine().on(r.MediaEngineEvent.ConnectionStats, function(e) {
                Object.values(c.MediaEngineContextTypes).forEach(t => {
                    e.filter(e => {
                        let {
                            connection: n
                        } = e;
                        return n.context === t
                    }).forEach((e, n) => {
                        s.default.dispatch({
                            type: "RTC_DEBUG_MODAL_UPDATE",
                            stats: e.stats,
                            context: t,
                            index: n,
                            mediaEngineConnectionId: e.connection.mediaEngineConnectionId
                        })
                    })
                })
            })
        },
        590401: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("913144");
            let l = {
                    preferredRegion: null,
                    lastTestTimestamp: null,
                    lastGeoRankedOrder: null
                },
                o = l;
            class u extends s.default.DeviceSettingsStore {
                initialize(e) {
                    o = null != e ? e : l
                }
                shouldIncludePreferredRegion() {
                    return null != o.preferredRegion
                }
                getPreferredRegion() {
                    return o.preferredRegion
                }
                getRegion(e) {
                    if (null != e) return e.substr(0, e.search(/\d/))
                }
                getUserAgnosticState() {
                    return o
                }
                shouldPerformLatencyTest(e) {
                    var t, n;
                    return null === o.preferredRegion || !r.isEqual(e, null !== (t = o.lastGeoRankedOrder) && void 0 !== t ? t : []) || Date.now() - (null !== (n = o.lastTestTimestamp) && void 0 !== n ? n : 0) >= 864e5
                }
            }
            u.displayName = "RTCRegionStore", u.persistKey = "RTCRegionStore";
            var c = new u(a.default, {
                RTC_LATENCY_TEST_COMPLETE: function(e) {
                    e.latencyRankedRegions.length > 0 && (o.lastGeoRankedOrder = e.geoRankedRegions, o.preferredRegion = e.latencyRankedRegions[0]), o.lastTestTimestamp = Date.now()
                }
            })
        },
        27618: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("913144"),
                l = n("697218"),
                o = n("49111");
            let u = {},
                c = {},
                d = {},
                _ = 0,
                E = 0,
                f = 0,
                p = 0;

            function h() {
                let e = Object.values(u);
                p = e.length;
                let {
                    [o.RelationshipTypes.PENDING_INCOMING]: t = 0, [o.RelationshipTypes.PENDING_OUTGOING]: n = 0, [o.RelationshipTypes.FRIEND]: i = 0
                } = r.countBy(Object.values(u), e => e);
                _ = t, E = n, f = i
            }
            class S extends s.default.Store {
                initialize() {
                    this.waitFor(l.default)
                }
                isFriend(e) {
                    return u[e] === o.RelationshipTypes.FRIEND
                }
                isBlocked(e) {
                    return u[e] === o.RelationshipTypes.BLOCKED
                }
                getPendingCount() {
                    return _
                }
                getOutgoingCount() {
                    return E
                }
                getFriendCount() {
                    return f
                }
                getRelationshipCount() {
                    return p
                }
                getRelationships() {
                    return u
                }
                getRelationshipType(e) {
                    let t = u[e];
                    return null != t ? t : o.RelationshipTypes.NONE
                }
                getNickname(e) {
                    let t = c[e];
                    return t
                }
                getSince(e) {
                    return d[e]
                }
                getSinces() {
                    return d
                }
                getFriendIDs() {
                    return Object.keys(u).filter(e => u[e] === o.RelationshipTypes.FRIEND)
                }
            }
            S.displayName = "RelationshipStore";
            var T = new S(a.default, {
                CONNECTION_OPEN: function(e) {
                    u = {}, c = {}, d = {}, e.relationships.forEach(e => {
                        u[e.id] = e.type, null != e.nickname && (c[e.id] = e.nickname), null != e.since && (d[e.id] = e.since)
                    }), h()
                },
                OVERLAY_INITIALIZE: function(e) {
                    u = {
                        ...e.relationships
                    }, h()
                },
                RELATIONSHIP_ADD: function(e) {
                    let t = u[e.relationship.id];
                    u = {
                        ...u,
                        [e.relationship.id]: e.relationship.type
                    }, null != e.relationship.nickname && (c = {
                        ...c,
                        [e.relationship.id]: e.relationship.nickname
                    }), null != e.relationship.since && (d = {
                        ...d,
                        [e.relationship.id]: e.relationship.since
                    }), h(), e.relationship.type === o.RelationshipTypes.FRIEND && t === o.RelationshipTypes.PENDING_OUTGOING && a.default.dispatch({
                        type: "FRIEND_REQUEST_ACCEPTED",
                        user: e.relationship.user
                    })
                },
                RELATIONSHIP_REMOVE: function(e) {
                    u = {
                        ...u
                    }, delete u[e.relationship.id], null != c[e.relationship.id] && (c = {
                        ...c
                    }, delete c[e.relationship.id]), null != d[e.relationship.id] && (d = {
                        ...d
                    }, delete d[e.relationship.id]), h()
                },
                RELATIONSHIP_UPDATE: function(e) {
                    null == e.relationship.since ? delete d[e.relationship.id] : d[e.relationship.id] = e.relationship.since, null == e.relationship.nickname ? delete c[e.relationship.id] : c[e.relationship.id] = e.relationship.nickname
                },
                RELATIONSHIP_PENDING_INCOMING_REMOVED: function(e) {
                    Object.keys(u = {
                        ...u
                    }).forEach(e => {
                        u[e] === o.RelationshipTypes.PENDING_INCOMING && delete u[e]
                    }), h()
                }
            })
        },
        568307: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                gameInDatabase: function() {
                    return Q
                },
                getOverlayGameStatus: function() {
                    return J
                },
                transformForGameSettings: function() {
                    return en
                },
                default: function() {
                    return eo
                }
            });
            var r, s, a = n("427964"),
                l = n.n(a),
                o = n("377849"),
                u = n.n(o),
                c = n("498225"),
                d = n("173333"),
                _ = n("913144"),
                E = n("376556"),
                f = n("605250"),
                p = n("756898"),
                h = n("32128"),
                S = n("599110"),
                T = n("269180"),
                I = n("449008"),
                m = n("773336"),
                g = n("50885"),
                A = n("546463"),
                C = n("686470"),
                R = n("535974"),
                N = n("49111"),
                v = n("6791");
            let O = new f.default("RunningGameStore"),
                D = "RunningGameStore",
                L = [{
                    executables: [{
                        os: "win32",
                        name: "obs/obs.exe"
                    }, {
                        os: "win32",
                        name: "obs32.exe"
                    }, {
                        os: "win32",
                        name: "obs64.exe"
                    }, {
                        os: "darwin",
                        name: "OBS.app"
                    }, {
                        os: "linux",
                        name: "obs"
                    }],
                    name: "OBS",
                    streamerTool: !0
                }, {
                    executables: [{
                        os: "win32",
                        name: "XSplit.Gamecaster.exe"
                    }, {
                        os: "win32",
                        name: "XSplit.Core.exe"
                    }, {
                        os: "win32",
                        name: "Gamecaster.exe"
                    }],
                    name: "XSplit",
                    streamerTool: !0
                }, {
                    executables: [{
                        os: "win32",
                        name: "bebo.exe"
                    }],
                    name: "Bebo",
                    streamerTool: !0
                }, {
                    executables: [{
                        os: "win32",
                        name: "Streamlabs OBS.exe"
                    }, {
                        os: "win32",
                        name: "Streamlabs Desktop.exe"
                    }, {
                        os: "darwin",
                        name: "Streamlabs Desktop.app"
                    }],
                    name: "Streamlabs Desktop",
                    streamerTool: !0
                }, {
                    executables: [{
                        os: "win32",
                        name: "TwitchStudio.exe"
                    }, {
                        os: "darwin",
                        name: "Twitch Studio.app"
                    }],
                    name: "Twitch Studio",
                    streamerTool: !0
                }, {
                    executables: [{
                        os: "win32",
                        name: "Spotify.exe"
                    }, {
                        os: "darwin",
                        name: "Spotify.app"
                    }, {
                        os: "linux",
                        name: "spotify"
                    }],
                    name: E.default.get(N.PlatformTypes.SPOTIFY).name
                }],
                M = !0,
                P = new Set,
                b = [],
                y = [],
                U = [],
                G = null,
                w = [],
                x = {},
                k = {},
                F = {
                    gamesSeen: [],
                    gameOverrides: {},
                    enableOverlay: {},
                    enableDetection: {}
                },
                B = function() {},
                V = {},
                H = 0,
                j = null,
                Y = null,
                W = {};

            function K(e, t, n) {
                let i = e[t];
                void 0 !== i && (delete e[t], e[n] = i)
            }

            function z(e, t) {
                null != t.lastLaunched ? e.lastLaunched = t.lastLaunched : null != t.start && (e.lastLaunched = t.start)
            }

            function Z(e) {
                return L.some(t => t.name === e.name && !0 === t.streamerTool)
            }

            function q() {
                if (U.length > 0) {
                    let e = G;
                    G = U[0], null != e && G.pid === e.pid ? G.start = e.start : G.start = Date.now()
                } else G = null;
                let e = [];
                for (let t of U) !(t.pid in W) && (W[t.pid] = t, e.push(t));
                let t = [];
                for (let e of Object.values(W)) !U.some(t => t.pid === e.pid) && (t.push(e), delete W[e.pid]);
                O.info("games", {
                    runningGames: U,
                    added: e,
                    removed: t,
                    previousGames: W
                }), _.default.dispatch({
                    type: "RUNNING_GAMES_CHANGE",
                    games: U,
                    added: e,
                    removed: t
                })
            }

            function X(e) {
                let t = null != e.name ? e.name : "";
                return "".concat(e.exePath, ":").concat(t)
            }

            function Q(e) {
                let t = A.default.getGameByName(e.name);
                return null != t || void 0 !== e.nativeProcessObserverId && (2147483648 & e.nativeProcessObserverId) == 0
            }

            function J(e) {
                if (e.isLauncher) return {
                    source: s.LAUNCHER,
                    enabled: !1
                };
                let t = A.default.getGameByName(e.name);
                if (null != t) {
                    let e = C.default.getActiveLibraryApplication(t.id);
                    if (null != e) return {
                        source: s.LIBRARY_APPLICATION,
                        enabled: e.isOverlayEnabled()
                    }
                }
                let n = F.enableOverlay[X(e)];
                if (null != n) return {
                    source: s.USER_OVERRIDE,
                    enabled: n
                };
                let i = h.OverlayStoredSettings.method === v.OverlayMethod.Global,
                    r = null == e.id ? null : V[e.id];
                return null == r || null == r.enabled || i ? {
                    source: s.DEFAULT,
                    enabled: !!i || !1
                } : {
                    source: s.DATABASE,
                    enabled: r.enabled
                }
            }

            function $(e) {
                return J(e).enabled
            }

            function ee(e) {
                let t = F.enableDetection[X(e)];
                return null == t || t
            }

            function et() {
                d.default.set(D, F)
            }

            function en(e) {
                let t = {
                    ...e,
                    played: null != e.lastFocused && 0 !== e.lastFocused ? u(new Date(1e3 * e.lastFocused)).fromNow() : " ",
                    overlay: $(e),
                    verified: Q(e),
                    detectable: ee(e)
                };
                if (null != e.id && null != V[e.id]) {
                    let n = V[e.id];
                    t.overlayWarn = n.warn
                }
                return t
            }(r = s || (s = {})).LAUNCHER = "LAUNCHER", r.LIBRARY_APPLICATION = "LIBRARY_APPLICATION", r.USER_OVERRIDE = "USER_OVERRIDE", r.DATABASE = "DATABASE", r.DEFAULT = "DEFAULT";

            function ei() {
                let e = !1;
                return b = l.values(C.default.libraryApplications).reduce((t, n) => {
                    let i = A.default.getGame(n.id);
                    if (null == i) return t;
                    let r = R.default.getLaunchOptions(n.id, n.branchId);
                    for (let s of r) {
                        let r = "".concat(n.id, ":").concat(n.branchId);
                        !P.has(r) && (e = !0, P.add(r));
                        let {
                            fullExecutablePath: a
                        } = s, l = a.replace(/\\/g, "/").toLowerCase();
                        x[l] = i.id, t.push({
                            id: i.id,
                            name: i.name,
                            exePath: l,
                            cmdLine: "",
                            lastFocused: 0,
                            add: !0
                        })
                    }
                    return t
                }, []), e && er(), e
            }

            function er() {
                if (!__OVERLAY__ && m.isPlatformEmbedded) {
                    let e = [...b, ...l.values(F.gameOverrides)];
                    g.default.setGameCandidateOverrides(e)
                }
            }

            function es(e) {
                null != e && 0 !== e.length && (e.forEach(e => {
                    let t = F.gamesSeen.some(t => {
                        if (t.name === e.name) {
                            if (e.lastFocused) {
                                t.lastFocused = e.lastFocused;
                                let n = F.gameOverrides[X(e)];
                                null != n && (n.lastFocused = e.lastFocused)
                            }
                            return z(t, e), !0
                        }
                        return !1
                    });
                    if (t);
                    else {
                        if (e.hidden) return;
                        F.gamesSeen.unshift(function(e) {
                            let t = {
                                exePath: e.exePath,
                                cmdLine: e.cmdLine,
                                lastFocused: e.lastFocused
                            };
                            return null != e.id && (t.id = e.id), null != e.nativeProcessObserverId && (t.nativeProcessObserverId = e.nativeProcessObserverId), null != e.name && (t.name = e.name), e.add && (t.add = !0), e.block && (t.block = !0), z(t, e), t
                        }(e))
                    }
                }), F.gamesSeen.sort((e, t) => t.lastFocused - e.lastFocused), et(), T.default.setRecentGames(ea().map(e => en(e))))
            }

            function ea() {
                let e = l.values(F.gameOverrides),
                    t = F.gamesSeen.filter(e => void 0 === F.gameOverrides[X(e)]);
                return t.concat(e)
            }!__OVERLAY__ && (0, m.isDesktop)() && (B = function() {
                let e = [],
                    t = new Set;
                i = {}, [...A.default.games, ...L].forEach(n => {
                    var i, r;
                    null != n.id && (V[n.id] = {
                        compatibilityHook: n.overlayCompatibilityHook || !1,
                        warn: n.overlayWarn || !1,
                        enabled: n.overlay || !1,
                        allowHook: null === (r = n.hook) || void 0 === r || r
                    });
                    let s = null != n.executables ? null === (i = n.executables) || void 0 === i ? void 0 : i.filter(e => {
                            let {
                                os: t
                            } = e;
                            return t === (0, m.getPlatformName)()
                        }) : [],
                        a = {};
                    s.forEach(e => {
                        let n = null != e.arguments && e.arguments.length > 0 ? e.arguments : "null";
                        null == a[n] && (a[n] = []), a[n].push(e.name), e.isLauncher && t.add(e.name)
                    }), Object.keys(a).forEach(t => e.push({
                        name: n.name,
                        id: n.id,
                        executables: a[t],
                        cmdLine: "null" !== t ? t : null
                    }))
                }), e = e.filter(e => null != e.executables && e.executables.length > 0), g.default.setObservedGamesCallback(e, e => {
                    let n = [],
                        r = {};
                    e = e.filter(e => (e.distributor = function(e) {
                        if (null != x[e.exePath]) return N.Distributors.DISCORD;
                        if (/steamapps/.test(e.cmdLine)) return N.Distributors.STEAM;
                        if (/-epicapp/.test(e.cmdLine)) return N.Distributors.EPIC;
                        return e.distributor
                    }(e), e.isLauncher = t.has(e.exeName), e.isLauncher && null != e.id && (r[e.id] = e), e.windowHandle = function(e, t) {
                        if (void 0 === t) {
                            let t = g.default.getDiscordUtils();
                            if (null != t && null != t.getWindowHandleFromPid) {
                                let n = t.getWindowHandleFromPid(e);
                                return null != n && "0" !== n ? n : null
                            }
                            return null
                        }
                        return "0" === t ? null : t
                    }(e.pid, e.windowHandle), null == L.find(t => {
                        let {
                            name: n
                        } = t;
                        return n === e.name
                    }) || (n.push(e), !1)));
                    let s = n.filter(Z).length;
                    s !== H && (H = s, _.default.dispatch({
                        type: "RUNNING_STREAMER_TOOLS_CHANGE",
                        count: H
                    })), U = e, w = n, i = r, q()
                }), er()
            });
            class el extends c.default.Store {
                initialize() {
                    var e, t, n, i;
                    let r = null !== (e = d.default.get(D)) && void 0 !== e ? e : {
                        gamesSeen: [],
                        gameOverrides: {},
                        enableOverlay: {},
                        enableDetection: {}
                    };
                    F.gameOverrides = {};
                    let s = !1;
                    if (l.values(null !== (t = r.gameOverrides) && void 0 !== t ? t : {}).forEach(e => {
                            let t = X(e);
                            F.gameOverrides[t] = e
                        }), F.enableOverlay = null !== (n = r.enableOverlay) && void 0 !== n ? n : {}, F.enableDetection = null !== (i = r.enableDetection) && void 0 !== i ? i : {}, er(), Array.isArray(r.gamesSeen))
                        for (let e of r.gamesSeen) "number" == typeof e.id && (e.nativeProcessObserverId = e.id, delete e.id, s = !0);
                    es(r.gamesSeen), this.waitFor(A.default), this.syncWith([C.default, A.default, R.default], l.throttle(ei, 1e3)), s && et()
                }
                getVisibleGame() {
                    return null != G && (G.hidden || !ee(G)) ? null : G
                }
                getCurrentGameForAnalytics() {
                    return G
                }
                getRunningDiscordApplicationIds() {
                    let e = [];
                    for (let t of U) null != x[t.exePath] && e.push(x[t.exePath]);
                    return e
                }
                getRunningVerifiedApplicationIds() {
                    return this.getRunningGames().map(e => A.default.getGameByName(e.name)).filter(I.isNotNullish).map(e => e.id)
                }
                getGameForPID(e) {
                    var t;
                    return null !== (t = U.find(t => t.pid === e)) && void 0 !== t ? t : null
                }
                getLauncherForPID(e) {
                    let t = this.getGameForPID(e);
                    return null != t ? null != t.id ? i[t.id] : null : null
                }
                getOverlayOptionsForPID(e) {
                    let t = this.getGameForPID(e);
                    return null == t || t.isLauncher || null == t.id ? null : {
                        ...V[t.id]
                    }
                }
                shouldElevateProcessForPID(e) {
                    return null != j && j === e
                }
                shouldContinueWithoutElevatedProcessForPID(e) {
                    return null != Y && Y === e
                }
                getCandidateGames() {
                    return y.filter(e => e.hidden || null == e.id).filter(e => void 0 === F.gameOverrides[X(e)])
                }
                getRunningGames() {
                    return U
                }
                getGamesSeen(e) {
                    let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                        n = ea();
                    if (e) {
                        let e = this.getVisibleGame();
                        if (null != e) {
                            let t = X(e);
                            n = n.filter(e => X(e) !== t)
                        }
                    }
                    return t && n.sort((e, t) => t.lastFocused - e.lastFocused), n
                }
                getSeenGameByName(e) {
                    return F.gamesSeen.find(t => null != t.name && t.name.toLowerCase() === e.toLowerCase())
                }
                isObservedAppRunning(e) {
                    return w.some(t => t.name === e)
                }
                getOverrides() {
                    return Object.values(F.gameOverrides)
                }
                getOverrideForGame(e) {
                    return F.gameOverrides[X(e)]
                }
                getOverlayEligiblePIDs() {
                    return U.filter(e => !e.hidden && !e.elevated && !e.sandboxed && $(e)).map(e => e.pid)
                }
                getObservedAppNameForWindow(e) {
                    var t, n;
                    return null !== (n = null === (t = w.find(t => (0, p.default)(e, t.windowHandle))) || void 0 === t ? void 0 : t.name) && void 0 !== n ? n : null
                }
                get canShowAdminWarning() {
                    return M
                }
            }
            el.displayName = "RunningGameStore";
            var eo = new el(_.default, {
                RUNNING_GAMES_CHANGE: function(e) {
                    es(U), _.default.dispatch({
                        type: "OVERLAY_GAMES_CHANGE"
                    })
                },
                CANDIDATE_GAMES_CHANGE: function(e) {
                    y = e.games
                },
                PERMISSION_CLEAR_PTT_ADMIN_WARNING: function() {
                    M = !1
                },
                PERMISSION_REQUEST_ELEVATED_PROCESS: function(e) {
                    let {
                        pid: t
                    } = e;
                    j = t, Y = null
                },
                PERMISSION_CLEAR_ELEVATED_PROCESS: function() {
                    j = null
                },
                PERMISSION_CONTINUE_NONELEVATED_PROCESS: function(e) {
                    let {
                        pid: t
                    } = e;
                    Y = t, j = null
                },
                RUNNING_GAME_ADD_OVERRIDE: function(e) {
                    let t;
                    let n = e.pid,
                        i = U.find(e => e.pid === n);
                    if (null == i) {
                        let e = y.find(e => e.pid === n);
                        if (null == e) return;
                        (i = {
                            ...e
                        }).hidden = !1, U.push(i), t = X(i)
                    } else t = X(i), i.hidden && (k[t] = !0), i.hidden = !1;
                    (null == i.lastFocused || 0 === i.lastFocused) && (i.lastFocused = Math.floor(Date.now() / 1e3)), F.gameOverrides[t] = {
                        ...i,
                        add: !0
                    }, es(U), er(), et(), q()
                },
                RUNNING_GAME_TOGGLE_OVERLAY: function(e) {
                    let {
                        game: t
                    } = e, n = $(t);
                    if (F.enableOverlay[X(t)] = !n, et(), _.default.dispatch({
                            type: "OVERLAY_GAMES_CHANGE"
                        }), !__OVERLAY__) {
                        let e = null != t.id ? A.default.getGame(t.id) : null;
                        null != e && S.default.track(N.AnalyticEvents.OVERLAY_TOGGLED, {
                            enabled: !n,
                            setting_type: "overlay toggled - game",
                            application_id: e.id,
                            application_name: e.name
                        })
                    }
                },
                RUNNING_GAME_TOGGLE_DETECTION: function(e) {
                    let {
                        game: t
                    } = e, n = ee(t);
                    F.enableDetection[X(t)] = !n, et()
                },
                RUNNING_GAME_EDIT_NAME: function(e) {
                    let t = X(e.game),
                        n = F.gameOverrides[t];
                    if (null == n) {
                        var i;
                        (n = {
                            name: (i = e.game).name,
                            exePath: i.exePath,
                            cmdLine: i.cmdLine,
                            lastFocused: i.lastFocused
                        }).add = !0
                    }
                    n.name = e.newName;
                    let r = X(n);
                    delete F.gameOverrides[t], F.gameOverrides[r] = n, K(F.enableOverlay, t, r), K(F.enableDetection, t, r), K(k, t, r), F.gamesSeen.forEach(n => {
                        X(n) === t && (n.name = e.newName)
                    });
                    let s = !1;
                    U.forEach(n => {
                        X(n) === t && (n.name = e.newName, s = !0)
                    }), er(), et(), s && q()
                },
                RUNNING_GAME_DELETE_ENTRY: function(e) {
                    let t = X(e.game);
                    delete F.gameOverrides[t], delete F.enableOverlay[t], delete F.enableDetection[t], F.gamesSeen = F.gamesSeen.filter(e => X(e) !== t), k[t] && (U.forEach(e => {
                        t === X(e) && (e.hidden = !0)
                    }), delete k[t], q()), er(), et()
                },
                GAMES_DATABASE_UPDATE: B,
                GAME_LAUNCH_SUCCESS: function(e) {
                    var t;
                    if (__OVERLAY__ || !m.isPlatformEmbedded) return;
                    let n = g.default.getDiscordUtils().notifyGameLaunched;
                    if (null == n) return;
                    let i = A.default.getGame(e.applicationId);
                    null != i && n(i.id, i.name, null !== (t = e.pids) && void 0 !== t ? t : [])
                },
                GAME_DETECTION_WATCH_CANDIDATE_GAMES_START: function() {
                    er()
                }
            })
        },
        18494: function(e, t, n) {
            "use strict";
            let i, r, s, a, l, o, u;
            n.r(t), n.d(t, {
                findFirstVoiceChannelId: function() {
                    return x
                },
                default: function() {
                    return H
                }
            });
            var c = n("427964"),
                d = n.n(c),
                _ = n("498225"),
                E = n("173333"),
                f = n("913144"),
                p = n("21121"),
                h = n("446411"),
                S = n("934306"),
                T = n("393414"),
                I = n("233069"),
                m = n("449008"),
                g = n("271938"),
                A = n("42203"),
                C = n("923959"),
                R = n("305961"),
                N = n("42887"),
                v = n("162771"),
                O = n("49111"),
                D = n("724210");
            let L = "SelectedChannelStore",
                M = {},
                P = {},
                b = {},
                y = new Set;

            function U() {
                !__OVERLAY__ && E.default.set(L, {
                    selectedChannelId: s,
                    selectedVoiceChannelId: l,
                    lastChannelFollowingDestination: a,
                    lastConnectedTime: o,
                    selectedChannelIds: M,
                    mostRecentSelectedTextChannelIds: b,
                    knownThreadIds: d(M).values().concat(d.values(b)).filter(m.isNotNullish).uniq().filter(e => {
                        let t = A.default.getBasicChannel(e);
                        return y.has(e) || null != t && I.THREAD_CHANNEL_TYPES.has(t.type)
                    }).value()
                })
            }

            function G(e) {
                if (null != e) {
                    let t = C.default.getDefaultChannel(e);
                    if (null != t) return t.id
                }
            }

            function w(e, t) {
                if (null == e || null == t || b[e] === t) return !1;
                let n = A.default.getChannel(t),
                    i = null != n && (0, I.isGuildTextChannelType)(n.type),
                    r = (null == n ? void 0 : n.getGuildId()) === e;
                return !!i && !!r && (b[e] = t, !0)
            }

            function x(e) {
                let t = A.default.getMutableBasicGuildChannelsForGuild(e),
                    n = d.find(t, e => e.type === O.ChannelTypes.GUILD_VOICE);
                return null == n ? void 0 : n.id
            }

            function k() {
                let e = !1,
                    t = R.default.getGuilds();
                return d.each(M, (t, n) => {
                    (null == t || !A.default.hasChannel(t) && t !== s && !y.has(t) && !(0, D.isGuildHomeChannel)(t)) && (delete M[n], delete P[n], e = !0)
                }), d.each(b, (t, n) => {
                    (null == t || !A.default.hasChannel(t) && !y.has(t)) && (delete b[n], e = !0)
                }), d.each(t, e => {
                    let t = M[e.id];
                    null == b[e.id] && w(e.id, t)
                }), null != o && Date.now() - o >= 3e5 && (l = null, e = !0), e
            }

            function F(e, t) {
                if (y.delete(e), null == t) {
                    let n = v.default.getGuildId();
                    M[String(n)] === e && (t = n)
                }
                let n = null != R.default.getGuild(t) ? t : null,
                    i = !1;
                l === e && (l = null, i = !0), !(0, p.isInMainTabsExperiment)() && (M[String(n)] === e && (M[String(n)] = G(String(n)), v.default.getGuildId() === n && (0, T.replaceWith)(O.Routes.CHANNEL(t, M[String(n)])), i = !0), null != n && b[n] === e && (delete b[n], i = !0)), i && U()
            }

            function B(e) {
                let {
                    channel: {
                        id: t,
                        guild_id: n
                    }
                } = e;
                F(t, n)
            }
            class V extends _.default.Store {
                initialize() {
                    if (!__OVERLAY__) {
                        var e, t;
                        let n = null !== (e = E.default.get(L)) && void 0 !== e ? e : {
                            selectedChannelId: s,
                            selectedVoiceChannelId: l,
                            lastChannelFollowingDestination: a,
                            lastConnectedTime: o,
                            selectedChannelIds: M,
                            mostRecentSelectedTextChannelIds: b
                        };
                        null != n.knownThreadIds && (y = new Set(n.knownThreadIds)), l = n.selectedVoiceChannelId, a = n.lastChannelFollowingDestination, o = n.lastConnectedTime, b = null !== (t = n.mostRecentSelectedTextChannelIds) && void 0 !== t ? t : {}, null != n.selectedChannelIds && (M = {
                            ...n.selectedChannelIds,
                            null: null
                        })
                    }
                    this.mustEmitChanges(e => "CONNECTION_OPEN" !== e.type && "VOICE_STATE_UPDATES" !== e.type), this.waitFor(R.default, A.default, v.default, C.default, N.default)
                }
                getChannelId(e) {
                    var t, n;
                    let i = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
                    return e = String(e === O.ME ? null : null !== (t = null != e ? e : v.default.getGuildId()) && void 0 !== t ? t : null), i ? null !== (n = M[e]) && void 0 !== n ? n : G(e) : M[e]
                }
                getVoiceChannelId() {
                    return N.default.isSupported() ? l : null
                }
                getMostRecentSelectedTextChannelId(e) {
                    var t;
                    return null == e ? null : null !== (t = b[e]) && void 0 !== t ? t : null
                }
                getCurrentlySelectedChannelId(e) {
                    return null != e ? M[e] : s
                }
                getLastSelectedChannelId(e) {
                    return null != e ? P[e] : r
                }
                getLastSelectedChannels(e) {
                    return P[e]
                }
                getLastChannelFollowingDestination() {
                    return a
                }
            }
            V.displayName = "SelectedChannelStore";
            var H = new V(f.default, {
                CONNECTION_OPEN: function(e) {
                    i = e.sessionId, null != l && null == A.default.getChannel(l) && (l = null);
                    let t = k();
                    t && U()
                },
                OVERLAY_INITIALIZE: function(e) {
                    i = e.sessionId, l = e.selectedVoiceChannelId, M = {}, P = {}, s = e.selectedChannelId, M[e.selectedGuildId] = e.selectedChannelId, w(e.selectedGuildId, s), k()
                },
                CONNECTION_CLOSED: function() {
                    i = null
                },
                CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e;
                    if (void 0 === t) return !1;
                    null == n && (!(0, p.isInMainTabsExperiment)() || (0, S.shouldHandleNewPanelsRoute)(t) || (0, h.isOnGlobalPanels)()) && (n = G(t)), null != s && n !== s && (r = s), s = n, w(t, n), M[String(t)] !== n && (P[String(t)] = M[String(t)], M[String(t)] = s), U()
                },
                CHANNEL_CREATE: function(e) {
                    let {
                        channel: t
                    } = e;
                    switch (t.type) {
                        case O.ChannelTypes.GUILD_ANNOUNCEMENT:
                        case O.ChannelTypes.GUILD_TEXT:
                            let n = t.guild_id;
                            if (null != n && null == b[n] && (b[n] = t.id), null != n && null == M[n]) return M[n] = G(n), !0
                    }
                    return !1
                },
                CHANNEL_DELETE: B,
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e;
                    for (let e of t) e.isScheduledForDeletion() && F(e.id, e.guild_id)
                },
                THREAD_DELETE: B,
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    if (null == M[t.id]) {
                        let e = G(t.id);
                        M[t.id] = e, w(t.id, e), U()
                    }
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: {
                            id: t,
                            unavailable: n
                        }
                    } = e;
                    if (l === M[t] && (l = null), n) return !1;
                    delete b[t], delete M[t], U()
                },
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    if (null == t) {
                        let e = A.default.getChannel(l),
                            t = null == e ? void 0 : e.guild_id;
                        null != t && t !== v.default.getGuildId() && M[t] === l && (M[t] = G(t))
                    }
                    l = t, U()
                },
                VOICE_STATE_UPDATES: function(e) {
                    let {
                        voiceStates: t
                    } = e;
                    return t.reduce((e, t) => {
                        var n, r, s;
                        if (t.sessionId === i) {
                            clearInterval(u);
                            let e = null === (n = A.default.getChannel(l)) || void 0 === n ? void 0 : n.getGuildId();
                            t.guildId !== e && null == t.channelId || (l = t.channelId), o = Date.now(), null != l && (u = setInterval(() => {
                                o = Date.now(), U()
                            }, 6e4)), U()
                        } else {
                            if (t.userId !== g.default.getId()) return e;
                            clearInterval(u), u = void 0, o = 0;
                            let n = null === (r = A.default.getChannel(l)) || void 0 === r ? void 0 : r.getGuildId(),
                                i = null === (s = A.default.getChannel(t.channelId)) || void 0 === s ? void 0 : s.getGuildId();
                            null != n && i === n && (l = null), U()
                        }
                        return !0
                    }, !1)
                },
                CHANNEL_FOLLOWER_CREATED: function(e) {
                    let {
                        channelId: t,
                        guildId: n
                    } = e;
                    (null == a || t !== a.channelId) && (a = {
                        channelId: t,
                        guildId: n
                    }, U())
                },
                LOGOUT: function() {
                    M = {}, s = null, r = void 0, b = {}, a = {}, l = null, E.default.remove(L)
                }
            })
        },
        162771: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("982527");
            n("21121");
            var a = n("393414"),
                l = n("271938"),
                o = n("305961"),
                u = n("49111");
            let c = null,
                d = null,
                _ = {};

            function E() {
                null != c && null == o.default.getGuild(c) && null == s.default.getRequest(c) && (c = null), null != d && null == o.default.getGuild(d) && null == s.default.getRequest(d) && (d = null), f(c)
            }

            function f(e) {
                null != e && (_[e] = Date.now())
            }

            function p(e) {
                let t = !1;
                return delete _[e], d === e && (d = null, t = !0), c === e && (Object.values(o.default.getGuilds()).find(t => t.id !== e), c = null, (0, a.replaceWith)(u.Routes.ME), t = !0), t
            }
            class h extends i.default.PersistedStore {
                initialize(e) {
                    var t, n, i;
                    this.mustEmitChanges(e => "CONNECTION_OPEN" !== e.type), this.waitFor(o.default, l.default), _ = null !== (t = null == e ? void 0 : e.selectedGuildTimestampMillis) && void 0 !== t ? t : {}, c = null !== (n = null == e ? void 0 : e.selectedGuildId) && void 0 !== n ? n : null, d = null !== (i = null == e ? void 0 : e.lastSelectedGuildId) && void 0 !== i ? i : null
                }
                getState() {
                    return {
                        selectedGuildTimestampMillis: _,
                        selectedGuildId: c,
                        lastSelectedGuildId: d
                    }
                }
                getGuildId() {
                    return c
                }
                getLastSelectedGuildId() {
                    return d
                }
                getLastSelectedTimestamp(e) {
                    return c === e ? -1 : _[e]
                }
            }
            h.displayName = "SelectedGuildStore", h.persistKey = "SelectedGuildStore";
            var S = new h(r.default, {
                CONNECTION_OPEN: E,
                OVERLAY_INITIALIZE: function(e) {
                    c = e.selectedGuildId, d = void 0, E()
                },
                CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (c === t) return !1;
                    f(c), f(t), null != t && (d = t), c = t
                },
                GUILD_MEMBER_REMOVE: function(e) {
                    let {
                        guildId: t,
                        user: n
                    } = e;
                    return n.id === l.default.getId() && p(t)
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: {
                            id: t,
                            unavailable: n
                        }
                    } = e;
                    return !0 !== n && p(t)
                },
                LOGOUT: function() {
                    c = null, d = null
                }
            })
        },
        235660: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("913144"),
                l = n("271938");
            let o = Object.freeze([]),
                u = {};

            function c(e) {
                u = {}, e.sessions.forEach(e => {
                    u[e.sessionId] = e
                })
            }
            class d extends s.default.Store {
                initialize() {
                    this.waitFor(l.default)
                }
                getSessions() {
                    return u
                }
                getSession() {
                    let e = l.default.getSessionId();
                    return null != e ? this.getSessionById(e) : null
                }
                getRemoteActivities() {
                    let e = l.default.getSessionId(),
                        t = r.find(u, t => t.active && t.sessionId !== e);
                    return null != t ? t.activities : o
                }
                getSessionById(e) {
                    return u[e]
                }
                getActiveSession() {
                    return r.find(u, e => {
                        let {
                            active: t
                        } = e;
                        return t
                    })
                }
            }
            d.displayName = "SessionsStore";
            var _ = new d(a.default, {
                CONNECTION_OPEN: c,
                SESSIONS_REPLACE: c
            })
        },
        455079: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("161179"),
                r = n.n(i),
                s = n("498225"),
                a = n("173333"),
                l = n("913144");
            class o extends s.default.Store {
                static clearAll() {
                    o.allStores.forEach(e => e.clear())
                }
                registerActionHandlers(e) {
                    return r(!("CLEAR_CACHES" in e), "SnapshotStores cannot use the 'CLEAR_CACHES' action"), r(!("WRITE_CACHES" in e), "SnapshotStores cannot use the 'WRITE_CACHES' action"), super.registerActionHandlers({
                        ...e,
                        CLEAR_CACHES: () => this.clear(),
                        WRITE_CACHES: () => this.save()
                    })
                }
                get persistKey() {
                    return "".concat(this.getClass().displayName, "-snapshot")
                }
                clear() {
                    a.default.remove(this.persistKey)
                }
                save() {
                    a.default.set(this.persistKey, this.takeSnapshot())
                }
                readSnapshot(e) {
                    let t = a.default.get(this.persistKey);
                    return null == t || t.version !== e ? null : t.data
                }
                getClass() {
                    return this.constructor
                }
                constructor() {
                    super(l.default, null), r(null != this.getClass().displayName, "Snapshot stores need a display name"), o.allStores.push(this)
                }
            }
            o.allStores = []
        },
        677099: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                default: function() {
                    return b
                }
            });
            var r = n("376929"),
                s = n.n(r),
                a = n("161179"),
                l = n.n(a),
                o = n("674644"),
                u = n("267567"),
                c = n("374363"),
                d = n("117362"),
                _ = n("449008"),
                E = n("341542"),
                f = n("26989"),
                p = n("305961"),
                h = n("455079"),
                S = n("282109"),
                T = n("697218");
            let I = new o.GuildsTree;

            function m(e) {
                switch (e.type) {
                    case o.GuildsNodeType.FOLDER:
                        return {
                            folderId: e.id, folderName: e.name, folderColor: e.color, expanded: e.expanded, guildIds: e.children.map(e => e.id)
                        };
                    case o.GuildsNodeType.GUILD:
                        return {
                            folderId: void 0, guildIds: [e.id]
                        };
                    default:
                        throw Error("[SortedGuildStore] Unexpected guilds tree node type.")
                }
            }

            function g(e, t) {
                let n = I;
                if (I = new o.GuildsTree, 0 === e.length && t.length > 0)
                    for (let e of t) I.addNode((0, o.createGuildNode)(e));
                else
                    for (let t of e)
                        if (0 !== t.guildIds.length) {
                            if (null == t.folderId) I.addNode((0, o.createGuildNode)(t.guildIds[0]));
                            else {
                                let e = (0, o.createFolderNode)(t);
                                for (let n of (I.addNode(e), t.guildIds)) I.addNode((0, o.createGuildNode)(n), e)
                            }
                        } for (let e of I.allNodes()) e.type === o.GuildsNodeType.GUILD && (u.default.isLurking(e.id) || f.default.isCurrentUserGuest(e.id) || null == p.default.getGuild(e.id) && !E.default.isUnavailable(e.id)) && I.removeNode(e);
                for (let e of Object.values(I.nodes)) e.type === o.GuildsNodeType.FOLDER && 0 === e.children.length && I.removeNode(e);
                return ! function(e, t) {
                    for (let n in p.default.getGuilds()) e(n) && !u.default.isLurking(n) && !f.default.isCurrentUserGuest(n) && t(n)
                }(e => null == I.nodes[e], e => I.addNode((0, o.createGuildNode)(e), I.root, !1)), !s(n, I)
            }

            function A() {
                var e, t, n;
                return g(null !== (t = c.default.getGuildFolders()) && void 0 !== t ? t : [], null !== (n = null === (e = c.default.settings.guildFolders) || void 0 === e ? void 0 : e.guildPositions) && void 0 !== n ? n : [])
            }

            function C() {
                var e, t;
                let n = c.default.getGuildFolders();
                return !(null != i && s(i, n)) && g(null != (i = n) ? i : [], null !== (t = null === (e = c.default.settings.guildFolders) || void 0 === e ? void 0 : e.guildPositions) && void 0 !== t ? t : [])
            }

            function R(e) {
                let {
                    sourceId: t,
                    targetId: n,
                    moveToBelow: i,
                    combine: r
                } = e, s = I.getNode(t), a = I.getNode(n);
                if (null == s || null == a) return !1;
                if (l(!(r && s.type === o.GuildsNodeType.FOLDER), "[SORTED GUILDS] Can't combine a folder ".concat(s.id, " with another guilds list item")), l(!(r && null != a.parentId), "[SORTED GUILDS] Can't combine with a guild ".concat(a.id, " that's already inside of a folder")), l(!(s.type === o.GuildsNodeType.FOLDER && null != a.parentId), "[SORTED GUILDS] Can't move a folder ".concat(s.id, " to inside of another folder ").concat(a.parentId)), r) {
                    let e = a.type !== o.GuildsNodeType.FOLDER ? I.convertToFolder(a) : a;
                    I.moveInto(s, e, i)
                } else I.moveNextTo(s, a, i)
            }

            function N(e) {
                let {
                    sourceIds: t,
                    name: n
                } = e, i = t.shift();
                if (null == i) return !1;
                let r = I.getNode(i);
                if (null == r) return !1;
                let s = I.convertToFolder(r);
                s.name = n, t.forEach(e => {
                    let t = I.getNode(e);
                    null != t && I.moveInto(t, s, !0)
                })
            }

            function v(e) {
                let {
                    targetId: t,
                    sourceIds: n,
                    ...i
                } = e, r = I.getNode(t);
                if (null == r || r.type !== o.GuildsNodeType.FOLDER) return !1;
                let s = "" === i.name ? void 0 : i.name;
                if (s !== r.name) {
                    let e = I.cloneNode(r);
                    l(e.id === r.id, "[SORTED GUILDS] Replacement folder node must have same id."), e.name = s, I.replaceNode(r, e)
                }
                let a = I.getNode(t);
                if (null == a) return !1;
                let u = a.children.map(e => e.id).filter(_.isNotNullish),
                    c = new Set(u),
                    d = new Set(n),
                    E = new Set([...u].filter(e => !d.has(e))),
                    f = n.filter(e => !c.has(e));
                f.forEach(e => {
                    let t = I.getNode(e);
                    null != t && I.moveInto(t, a, !0)
                }), E.forEach(e => {
                    let t = I.getNode(e);
                    null != t && I.moveNextTo(t, a, !0)
                })
            }

            function O(e) {
                let {
                    targetId: t
                } = e, n = I.getNode(t);
                if (null == n || n.type !== o.GuildsNodeType.FOLDER) return !1;
                let i = n.children.map(e => e.id).filter(_.isNotNullish);
                i.forEach(e => {
                    let t = I.getNode(e);
                    null != t && I.moveNextTo(t, n, !0)
                })
            }

            function D(e) {
                let {
                    guildId: t,
                    joinedAt: n,
                    user: i
                } = e, r = T.default.getCurrentUser(), s = p.default.getGuild(t);
                if ((null == r ? void 0 : r.id) !== i.id || null == s) return !1;
                let a = "string" == typeof n ? new Date(n) : n;
                return a !== s.joinedAt && null != a && A()
            }
            let L = (0, d.cachedFunction)((e, t) => e.sortedGuildNodes().map(e => e.id)),
                M = (0, d.cachedFunction)((e, t) => e.getRoots().map(m));
            class P extends h.default {
                getGuildsTree() {
                    return I
                }
                getGuildFolders() {
                    return M(I, I.version)
                }
                getGuildFolderById(e) {
                    return this.getGuildFolders().find(t => t.folderId === e)
                }
                getFlattenedGuildIds() {
                    return L(I, I.version)
                }
                getCompatibleGuildFolders() {
                    return I.root.children.map(m)
                }
                takeSnapshot() {
                    return {
                        version: P.LATEST_SNAPSHOT_VERSION,
                        data: {
                            tree: I.getSnapshot()
                        }
                    }
                }
                constructor() {
                    super(), this.loadCache = () => {
                        let e = this.readSnapshot(P.LATEST_SNAPSHOT_VERSION),
                            t = null == e ? void 0 : e.tree;
                        null != t && (I = new o.GuildsTree).loadSnapshot(t)
                    }, this.registerActionHandlers({
                        CONNECTION_OPEN: A,
                        OVERLAY_INITIALIZE: A,
                        CACHE_LOADED_LAZY: this.loadCache,
                        GUILD_CREATE: A,
                        GUILD_DELETE: A,
                        GUILD_MEMBER_ADD: D,
                        USER_SETTINGS_PROTO_UPDATE: C,
                        GUILD_MOVE_BY_ID: R,
                        GUILD_FOLDER_CREATE_LOCAL: N,
                        GUILD_FOLDER_EDIT_LOCAL: v,
                        GUILD_FOLDER_DELETE_LOCAL: O
                    }), this.waitFor(p.default, S.default, c.default, E.default, u.default)
                }
            }
            P.displayName = "SortedGuildStore", P.LATEST_SNAPSHOT_VERSION = 1;
            var b = new P
        },
        102985: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("599110"),
                a = n("271938"),
                l = n("49111");

            function o(e, t) {
                s.default.track(l.AnalyticEvents.STREAMER_MODE_TOGGLE, {
                    enabled: e,
                    automatic: t
                })
            }
            let u = {
                    enabled: !1,
                    autoToggle: !0,
                    hideInstantInvites: !0,
                    hidePersonalInformation: !0,
                    disableSounds: !0,
                    disableNotifications: !0,
                    enableContentProtection: !1
                },
                c = {},
                d = {
                    ...u
                };
            class _ extends i.default.PersistedStore {
                initialize(e) {
                    Object.assign(c, e), this.syncWith([a.default], () => {
                        var e;
                        let t, n = a.default.getId();
                        d = null != n ? (null == (t = c[e = n]) && (t = c[e] = {
                            ...u
                        }), t) : {
                            ...u
                        }
                    })
                }
                getState() {
                    return c
                }
                getSettings() {
                    return d
                }
                get enabled() {
                    return d.enabled
                }
                get autoToggle() {
                    return d.autoToggle
                }
                get hideInstantInvites() {
                    return this.enabled && d.hideInstantInvites
                }
                get hidePersonalInformation() {
                    return this.enabled && d.hidePersonalInformation
                }
                get disableSounds() {
                    return this.enabled && d.disableSounds
                }
                get disableNotifications() {
                    return this.enabled && d.disableNotifications
                }
                get enableContentProtection() {
                    return this.enabled && d.enableContentProtection
                }
            }
            _.displayName = "StreamerModeStore", _.persistKey = "StreamerModeStore", _.migrations = [e => {
                let t = a.default.getId();
                if (null == e || null == t) return {};
                let n = {
                    [t]: {
                        ...e
                    }
                };
                return n
            }];
            var E = new _(r.default, {
                LOGOUT: function(e) {
                    !e.isSwitchingAccount && (c = {})
                },
                MULTI_ACCOUNT_REMOVE_ACCOUNT: function(e) {
                    e.userId in c && delete c[e.userId]
                },
                STREAMER_MODE_UPDATE: function(e) {
                    return d[e.key] = e.value, "enabled" === e.key ? o(e.value, !1) : s.default.track(l.AnalyticEvents.UPDATE_STREAMER_MODE_SETTINGS, {
                        enabled: d.enabled,
                        automatic: d.autoToggle,
                        disable_notifications: d.disableNotifications,
                        disable_sounds: d.disableSounds,
                        hide_instant_invites: d.hideInstantInvites,
                        hide_personal_info: d.hidePersonalInformation
                    }), !0
                },
                RUNNING_STREAMER_TOOLS_CHANGE: function(e) {
                    if (!d.autoToggle) return !1;
                    {
                        let t = e.count > 0;
                        return d.enabled = t, o(t, !0), !0
                    }
                }
            })
        },
        417021: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getSystemAnalyticsInfo: function() {
                    return f
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("599110"),
                a = n("773336"),
                l = n("50885"),
                o = n("760190");
            let u = {
                hashes: {}
            };
            async function c() {
                if (!a.isPlatformEmbedded || !(0, a.isWindows)()) return [];
                await l.default.ensureModule("discord_media");
                let e = l.default.requireModule("discord_media"),
                    t = await e.getSystemAnalyticsBlob();
                return t || []
            }
            async function d() {
                try {
                    let e = await c(),
                        t = e.filter(e => u.hashes[e.name] !== e.hash);
                    for (let {
                            name: e,
                            hash: n,
                            data: i
                        }
                        of t) s.default.track(e, i), (u = {
                        hashes: {
                            ...u.hashes
                        }
                    }).hashes[e] = n;
                    t.length > 0 && E.emitChange()
                } catch (e) {}
            }
            class _ extends i.default.PersistedStore {
                initialize(e) {
                    u = null != e && "object" == typeof e.hashes ? e : {
                        hashes: {}
                    }, this.waitFor(o.default)
                }
                getState() {
                    return u
                }
                async info() {
                    try {
                        let e = await c(),
                            t = e.find(e => "hardware_detected" === e.name);
                        if (null == t) return null;
                        return t.data
                    } catch (e) {}
                }
            }
            _.displayName = "SystemAnalyticsStore", _.persistKey = "SystemAnalyticsStore";
            let E = new _(r.default, {
                START_SESSION: function() {
                    return d(), !1
                }
            });

            function f() {
                return E.info()
            }
        },
        282109: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return V
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("913144"),
                l = n("668597"),
                o = n("38654"),
                u = n("208127"),
                c = n("568734"),
                d = n("42203"),
                _ = n("305961"),
                E = n("697218"),
                f = n("49111"),
                p = n("627869"),
                h = n("397336");
            let S = {},
                T = {},
                I = {},
                m = new l.default,
                g = new l.default,
                A = {
                    suppress_everyone: !1,
                    suppress_roles: !1,
                    mute_scheduled_events: !1,
                    mobile_push: !0,
                    muted: !1,
                    message_notifications: f.UserNotificationSettings.ALL_MESSAGES,
                    flags: 0,
                    channel_overrides: {},
                    notify_highlights: f.HighlightSettings.NULL
                },
                C = {
                    [f.UserNotificationSettings.ALL_MESSAGES]: {
                        ...A,
                        message_notifications: f.UserNotificationSettings.ALL_MESSAGES
                    },
                    [f.UserNotificationSettings.ONLY_MENTIONS]: {
                        ...A,
                        message_notifications: f.UserNotificationSettings.ONLY_MENTIONS
                    }
                },
                R = {},
                N = {},
                v = new Set,
                O = {},
                D = {};

            function L(e, t) {
                var n, i;
                let s = S[e],
                    a = null !== (n = null == s ? void 0 : s.channel_overrides) && void 0 !== n ? n : {},
                    l = function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return e instanceof Array ? r.keyBy(e, "channel_id") : e
                    }(t.channel_overrides),
                    o = {
                        ...G(e),
                        ...s,
                        ...t,
                        channel_overrides: l
                    };
                m.clearTimer(e), !0 === o.muted && m.setTimer(e, o.mute_config, () => {
                    M(e, {
                        muted: !1
                    }), B.emitChange()
                }), r.forEach(a, e => {
                    g.clearTimer(e.channel_id)
                }), r.forEach(l, t => {
                    !0 === t.muted && g.setTimer(t.channel_id, t.mute_config, () => {
                        P(e, t.channel_id, {
                            muted: !1
                        }), B.emitChange()
                    })
                }), S[e] = o, R[e] = x(S[e]);
                let u = r.filter(o.channel_overrides, e => c.hasFlag(null !== (i = e.flags) && void 0 !== i ? i : 0, h.ChannelNotificationSettingsFlags.OPT_IN_ENABLED));
                N[e] = new Set(u.map(e => e.channel_id)),
                    function(e) {
                        var t;
                        if (null == e) return;
                        let n = new Set(N[e]),
                            i = null !== (t = O[e]) && void 0 !== t ? t : {};
                        for (let e in i) {
                            let t = i[e];
                            c.hasFlag(t.flags, h.ChannelNotificationSettingsFlags.OPT_IN_ENABLED) ? n.add(e) : n.delete(e)
                        }
                        Object.keys(i).length > 0 ? D[e] = n : delete D[e]
                    }(e), delete I[e]
            }

            function M(e, t) {
                var n;
                let i = S[e];
                L(e, {
                    channel_overrides: null !== (n = null == i ? void 0 : i.channel_overrides) && void 0 !== n ? n : {},
                    ...t
                })
            }

            function P(e, t, n) {
                let i = U(e, t, n);
                y(e, {
                    [t]: i
                })
            }

            function b(e, t) {
                var n;
                let i = {},
                    r = null !== (n = null != e ? O[e] : null) && void 0 !== n ? n : {};
                Object.keys(t).forEach(n => {
                    var s;
                    let a = U(e, n, t[n]);
                    i[n] = a, r[n] = {
                        flags: null !== (s = a.flags) && void 0 !== s ? s : 0
                    }
                }), null != e && (O[e] = {
                    ...O[e],
                    ...r
                }), y(e, i)
            }

            function y(e, t) {
                var n;
                let i = S[e],
                    r = null !== (n = null == i ? void 0 : i.channel_overrides) && void 0 !== n ? n : {};
                L(e, {
                    channel_overrides: null == i ? t : {
                        ...r,
                        ...t
                    }
                })
            }

            function U(e, t, n) {
                var i;
                let r = S[e],
                    s = null !== (i = null == r ? void 0 : r.channel_overrides) && void 0 !== i ? i : {};
                return {
                    channel_id: t,
                    muted: !1,
                    ...s[t],
                    ...n
                }
            }

            function G(e) {
                let t = _.default.getGuild(e),
                    n = null != t ? t.defaultMessageNotifications : f.UserNotificationSettings.ALL_MESSAGES;
                return C[n]
            }

            function w(e) {
                var t;
                return null !== (t = S[e]) && void 0 !== t ? t : G(e)
            }

            function x(e) {
                return new Set(null != e.channel_overrides ? r(e.channel_overrides).filter(e => (0, l.computeIsMuted)(e)).map(e => e.channel_id).value() : null)
            }

            function k() {
                return !0
            }
            class F extends s.default.PersistedStore {
                initialize(e) {
                    if (this.waitFor(E.default, _.default, o.default), null != e) {
                        var t;
                        T = e.collapsedGuilds, S = e.userGuildSettings, N = r.mapValues(null !== (t = e.optedInChannelsByGuild) && void 0 !== t ? t : {}, e => new Set(e)), r.forEach(S, (e, t) => {
                            R[t] = x(e)
                        })
                    }
                }
                getState() {
                    return {
                        collapsedGuilds: T,
                        userGuildSettings: S,
                        optedInChannelsByGuild: N
                    }
                }
                isSuppressEveryoneEnabled(e) {
                    return w(e).suppress_everyone
                }
                isSuppressRolesEnabled(e) {
                    return w(e).suppress_roles
                }
                isMuteScheduledEventsEnabled(e) {
                    return w(e).mute_scheduled_events
                }
                isMobilePushEnabled(e) {
                    return w(e).mobile_push
                }
                isMuted(e) {
                    let t = w(e);
                    return (0, l.computeIsMuted)(t)
                }
                getMuteConfig(e) {
                    let t = w(e);
                    return t.mute_config
                }
                getMessageNotifications(e) {
                    return w(e).message_notifications
                }
                getChannelOverrides(e) {
                    var t;
                    return null !== (t = w(e).channel_overrides) && void 0 !== t ? t : {}
                }
                getNotifyHighlights(e) {
                    return w(e).notify_highlights
                }
                getGuildFlags(e) {
                    return w(e).flags
                }
                getChannelMessageNotifications(e, t) {
                    let n = this.getChannelOverrides(e)[t];
                    return null == n || null == n.message_notifications ? f.UserNotificationSettings.NULL : n.message_notifications
                }
                getChannelMuteConfig(e, t) {
                    let n = this.getChannelOverrides(e)[t];
                    return null != n ? n.mute_config : null
                }
                getMutedChannels(e) {
                    var t;
                    return null !== (t = R[e]) && void 0 !== t ? t : v
                }
                isChannelMuted(e, t) {
                    var n;
                    let i = d.default.getChannel(t);
                    return e = null !== (n = null == i ? void 0 : i.getGuildId()) && void 0 !== n ? n : e, this.getMutedChannels(e).has(t)
                }
                isCategoryMuted(e, t) {
                    let n = d.default.getChannel(t);
                    if (null == n) return !1;
                    let i = n.parent_id;
                    return null != i && this.getMutedChannels(e).has(i)
                }
                resolvedMessageNotifications(e) {
                    let t = this.getChannelMessageNotifications(e.guild_id, e.id);
                    if (t !== f.UserNotificationSettings.NULL) return t;
                    if (null != e.parent_id) {
                        let t = this.getChannelMessageNotifications(e.guild_id, e.parent_id);
                        if (t !== f.UserNotificationSettings.NULL) return t
                    }
                    return this.getMessageNotifications(e.guild_id)
                }
                isGuildOrCategoryOrChannelMuted(e, t) {
                    return this.isMuted(e) || this.isCategoryMuted(e, t) || this.isChannelMuted(e, t)
                }
                allowNoMessages(e) {
                    return this.isGuildOrCategoryOrChannelMuted(e.guild_id, e.id) || this.resolvedMessageNotifications(e) === f.UserNotificationSettings.NO_MESSAGES || this.isOptInEnabled(e.guild_id) && !this.isChannelRecordOrParentOptedIn(e)
                }
                allowAllMessages(e) {
                    return !this.isGuildOrCategoryOrChannelMuted(e.guild_id, e.id) && this.resolvedMessageNotifications(e) === f.UserNotificationSettings.ALL_MESSAGES && (!this.isOptInEnabled(e.guild_id) || this.isChannelRecordOrParentOptedIn(e))
                }
                isChannelRelevant(e) {
                    return !(0, u.isReadStateStaffExperimentEnabled)() || e.isThread() || this.resolvedMessageNotifications(e) === f.UserNotificationSettings.ALL_MESSAGES
                }
                isGuildCollapsed(e) {
                    return T[e] || !1
                }
                getAllSettings() {
                    return {
                        userGuildSettings: S,
                        mutedChannels: R,
                        collapsedGuilds: T,
                        optedInChannelsByGuild: N
                    }
                }
                getGuildChannelFlags(e, t) {
                    var n;
                    let i = this.getChannelOverrides(e)[t];
                    return null !== (n = null == i ? void 0 : i.flags) && void 0 !== n ? n : 0
                }
                getChannelFlags(e) {
                    var t;
                    let n = this.getChannelOverrides(e.guild_id)[e.id];
                    return null !== (t = null == n ? void 0 : n.flags) && void 0 !== t ? t : 0
                }
                getNewForumThreadsCreated(e) {
                    let t = this.getChannelOverrides(e.guild_id)[e.id];
                    if (null != t && null != t.flags) {
                        if (c.hasFlag(t.flags, h.ChannelNotificationSettingsFlags.NEW_FORUM_THREADS_ON)) return !0;
                        if (c.hasFlag(t.flags, h.ChannelNotificationSettingsFlags.NEW_FORUM_THREADS_OFF)) return !1
                    }
                    return this.resolvedMessageNotifications(e) === f.UserNotificationSettings.ALL_MESSAGES
                }
                isOptInEnabled(e) {
                    return null != e && (o.default.isFullServerPreview(e) ? o.default.isOptInEnabled(e) : c.hasFlag(this.getGuildFlags(e), h.GuildNotificationSettingsFlags.OPT_IN_CHANNELS_ON))
                }
                isChannelRecordOrParentOptedIn(e, t) {
                    return null != e && null != e.guild_id && (this.isChannelOptedIn(e.guild_id, e.id, t) || null != e.parent_id && this.isChannelOptedIn(e.guild_id, e.parent_id, t))
                }
                isChannelOrParentOptedIn(e, t, n) {
                    return this.isChannelRecordOrParentOptedIn(d.default.getChannel(t), n)
                }
                isChannelOptedIn(e, t) {
                    var n, i;
                    let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    if (null == e) return !1;
                    if (o.default.isFullServerPreview(e)) return o.default.isChannelOptedIn(e, t);
                    if (r && null != D[e]) return D[e].has(t);
                    let s = null !== (i = null === (n = this.getChannelOverrides(e)[t]) || void 0 === n ? void 0 : n.flags) && void 0 !== i ? i : 0;
                    return c.hasFlag(s, h.ChannelNotificationSettingsFlags.OPT_IN_ENABLED)
                }
                getOptedInChannels(e) {
                    var t, n;
                    return o.default.isFullServerPreview(e) ? null !== (t = o.default.getViewingChannels(e)) && void 0 !== t ? t : v : null !== (n = N[e]) && void 0 !== n ? n : v
                }
                getOptedInChannelsWithPendingUpdates(e) {
                    return D[e]
                }
                getPendingChannelUpdates(e) {
                    return O[e]
                }
                getGuildFavorites(e) {
                    if (o.default.isFullServerPreview(e)) return null;
                    if (null == I[e]) {
                        var t;
                        let n = r.filter(this.getChannelOverrides(e), n => {
                            var i;
                            return c.hasFlag(null !== (t = n.flags) && void 0 !== t ? t : 0, h.ChannelNotificationSettingsFlags.FAVORITED) && (null === (i = d.default.getChannel(n.channel_id)) || void 0 === i ? void 0 : i.guild_id) === e
                        });
                        I[e] = n.map(e => e.channel_id)
                    }
                    return I[e]
                }
                isFavorite(e, t) {
                    var n;
                    return !o.default.isFullServerPreview(e) && (null === (n = this.getGuildFavorites(e)) || void 0 === n ? void 0 : n.includes(t)) === !0
                }
                isGuildUnreadSettingEnabled(e) {
                    let t = this.getGuildFlags(e);
                    return c.hasFlag(t, h.GuildNotificationSettingsFlags.UNREADS_MENTIONS_AND_HIGHLIGHTS)
                }
                getChannelUnreadSetting(e, t) {
                    var n, i;
                    let r = null !== (i = null === (n = this.getChannelOverrides(e)[t]) || void 0 === n ? void 0 : n.flags) && void 0 !== i ? i : 0;
                    return c.hasFlag(r, h.ChannelNotificationSettingsFlags.UNREADS_ALL_MESSAGES) ? p.UserUnreadSettings.ALL_MESSAGES : c.hasFlag(r, h.ChannelNotificationSettingsFlags.UNREADS_MENTIONS_AND_HIGHLIGHTS) ? p.UserUnreadSettings.MENTIONS_AND_HIGHLIGHTS : this.isGuildUnreadSettingEnabled(e) ? p.UserUnreadSettings.MENTIONS_AND_HIGHLIGHTS : p.UserUnreadSettings.NULL
                }
                isMessagesFavorite(e) {
                    var t, n;
                    let i = null !== (n = null === (t = this.getChannelOverrides(null)[e]) || void 0 === t ? void 0 : t.flags) && void 0 !== n ? n : 0;
                    return c.hasFlag(i, h.ChannelNotificationSettingsFlags.FAVORITED)
                }
                isAddedToMessages(e) {
                    var t, n;
                    let i = null !== (n = null === (t = this.getChannelOverrides(null)[e]) || void 0 === t ? void 0 : t.flags) && void 0 !== n ? n : 0;
                    return c.hasFlag(i, h.ChannelNotificationSettingsFlags.OPT_IN_ENABLED)
                }
                getAddedToMessages() {
                    var e;
                    return null !== (e = N.null) && void 0 !== e ? e : v
                }
            }
            F.displayName = "UserGuildSettingsStore", F.persistKey = "collapsedGuilds", F.migrations = [e => ({
                collapsedGuilds: e,
                userGuildSettings: {}
            })];
            let B = new F(a.default, {
                USER_GUILD_SETTINGS_FULL_UPDATE: function(e) {
                    let {
                        userGuildSettings: t
                    } = e;
                    t.forEach(e => {
                        null != e.guild_id && (T[e.guild_id] = !0 === e.hide_muted_channels), L(e.guild_id, {
                            channel_overrides: {},
                            ...e
                        })
                    })
                },
                USER_GUILD_SETTINGS_GUILD_UPDATE: function(e) {
                    let {
                        guildId: t,
                        settings: n
                    } = e;
                    M(t, n)
                },
                USER_GUILD_SETTINGS_GUILD_AND_CHANNELS_UPDATE: function(e) {
                    let {
                        guildId: t,
                        settings: n
                    } = e;
                    M(t, n), b(t, n.channel_overrides)
                },
                USER_GUILD_SETTINGS_CHANNEL_UPDATE: function(e) {
                    let {
                        guildId: t,
                        channelId: n,
                        settings: i
                    } = e;
                    null != t && null != i.flags && (O[t] = {
                        ...O[t],
                        [n]: {
                            flags: i.flags
                        }
                    }), P(t, n, i)
                },
                USER_GUILD_SETTINGS_CHANNEL_UPDATE_BULK: function(e) {
                    let {
                        guildId: t,
                        overrides: n
                    } = e;
                    return !(null == t || o.default.isFullServerPreview(t)) && (b(t, n), !0)
                },
                CONNECTION_OPEN: function(e) {
                    !e.userGuildSettings.partial && (m.reset(), g.reset(), S = {}, R = {}, N = {}), !e.userGuildSettings.partial && (T = {}, e.userGuildSettings.entries.forEach(e => {
                        null != e.guild_id && (T[e.guild_id] = !0 === e.hide_muted_channels)
                    })), e.userGuildSettings.entries.forEach(e => {
                        !("channel_overrides" in e) && (e.channel_overrides = {}), L(e.guild_id, e)
                    })
                },
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        allUserGuildSettings: t
                    } = e, {
                        userGuildSettings: n,
                        mutedChannels: i,
                        collapsedGuilds: r,
                        optedInChannelsByGuild: s
                    } = t;
                    S = {
                        ...n
                    }, R = {}, N = {}, Object.keys(i).forEach(e => {
                        R[e] = new Set(i[e])
                    }), Object.keys(s).forEach(e => {
                        N[e] = new Set(s[e])
                    }), T = {
                        ...r
                    }
                },
                GUILD_CREATE: k,
                GUILD_UPDATE: k,
                GUILD_TOGGLE_COLLAPSE_MUTED: function(e) {
                    let {
                        guildId: t
                    } = e;
                    T[t] = !T[t]
                },
                IMPERSONATE_UPDATE: k,
                IMPERSONATE_STOP: k,
                USER_GUILD_SETTINGS_REMOVE_PENDING_CHANNEL_UPDATES: function(e) {
                    let {
                        guildId: t,
                        updates: n
                    } = e;
                    if (null == t) return !1;
                    let i = O[t];
                    if (null == i) return !1;
                    for (let e in n) r.isEqual(n[e], i[e]) && delete i[e]
                },
                CLEAR_PENDING_CHANNEL_AND_ROLE_UPDATES: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == t) return !1;
                    delete O[t], delete D[t]
                }
            });
            var V = B
        },
        697218: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                users: function() {
                    return h
                },
                transformUser: function() {
                    return I
                },
                mergeUser: function() {
                    return g
                },
                default: function() {
                    return x
                }
            });
            var i = n("427964"),
                r = n("498225"),
                s = n("913144"),
                a = n("234251"),
                l = n("560208"),
                o = n("400205"),
                u = n("946028"),
                c = n("517001"),
                d = n("766274"),
                _ = n("568734"),
                E = n("271938"),
                f = n("49111"),
                p = n("646718");
            let h = {},
                S = 0;

            function T(e, t, n) {
                let i = e;
                i = null == n ? e.removeGuildAvatarHash(t) : e.addGuildAvatarHash(t, n), h[e.id] = i;
                let r = e !== i;
                return r && S++, r
            }

            function I(e) {
                let t = e.mfa_enabled;
                null != t && (e.mfaEnabled = t, delete e.mfa_enabled);
                let n = (0, c.getPremiumTypeFromRawValue)(e.premium_type);
                void 0 !== n && (e.premiumType = n, delete e.premium_type);
                let i = e.nsfw_allowed;
                null != i && (e.nsfwAllowed = i, delete e.nsfw_allowed);
                let r = e.public_flags;
                null != r && (e.publicFlags = r, delete e.public_flags);
                let s = e.purchased_flags;
                void 0 !== s && (e.purchasedFlags = s, delete e.purchased_flags);
                let l = e.premium_usage_flags;
                void 0 !== l && (e.premiumUsageFlags = l, delete e.premium_usage_flags), null === e.banner_color && delete e.banner_color;
                let o = e.avatar_decoration_data;
                void 0 !== o && (e.avatarDecorationData = (0, a.parseAvatarDecorationData)(o), delete e.avatar_decoration_data);
                let u = e.global_name;
                return void 0 !== u && (e.globalName = u, delete e.global_name), e
            }

            function m(e) {
                return e.id !== E.default.getId()
            }

            function g(e) {
                let t, n = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                    i = h[e.id],
                    r = void 0 !== e.id && e.id === E.default.getId();
                if (null == i) void 0 !== (t = (i = new d.default(e)).premiumType) && r && (i.premiumType = A((0, c.isStaffEnv)(i), i.premiumType));
                else if (n) {
                    var s;
                    let n = I(e);
                    void 0 !== (t = null !== (s = n.premium_type) && void 0 !== s ? s : n.premiumType) && r && (0, c.isStaffEnvRawData)(n) && (n = function(e) {
                        var t;
                        let n = null !== (t = e.premium_type) && void 0 !== t ? t : e.premiumType,
                            i = A((0, c.isStaffEnvRawData)(e), n);
                        return void 0 !== e.premiumType ? e.premiumType = i : void 0 !== e.premium_type && (e.premium_type = i), e
                    }(n)), i = i.merge(n)
                }(0, c.validatePremiumType)((0, c.isStaffEnv)(i), t, i.premiumType);
                let a = h[e.id] !== i;
                return h[e.id] = i, a && S++, a
            }

            function A(e, t) {
                if (!e) return t;
                let n = o.default.getPremiumTypeOverride(),
                    i = o.default.getPremiumTypeActual();
                return n === p.UNSELECTED_PREMIUM_TYPE_OVERRIDE ? i : n
            }

            function C(e, t) {
                var n, i, r, s;
                if (null != e.author && "SENDING" !== e.state && m(e.author) && g(e.author, t), null === (n = e.mentions) || void 0 === n || n.forEach(e => {
                        m(e) && g(e, t)
                    }), (null === (i = e.interaction) || void 0 === i ? void 0 : i.user) != null && m(null === (r = e.interaction) || void 0 === r ? void 0 : r.user) && g(e.interaction.user, t), (null === (s = e.resolved) || void 0 === s ? void 0 : s.users) != null)
                    for (let n in e.resolved.users) {
                        let i = e.resolved.users[n];
                        m(i) && g(i, t)
                    }
            }

            function R(e) {
                null != e.application.bot && g(e.application.bot)
            }

            function N(e) {
                if (null != e.users)
                    for (let t of e.users) h[t.id] = new d.default(t)
            }

            function v(e) {
                let {
                    messages: t
                } = e;
                return t.forEach(e => C(e, !0)), !1
            }

            function O(e) {
                let {
                    firstMessages: t,
                    owners: n
                } = e;
                null != t && t.forEach(e => C(e, !0)), null != n && n.forEach(e => g(e.user, !0))
            }

            function D(e) {
                let {
                    message: t
                } = e;
                if (C(t, !0), null != t.flags && _.hasFlag(t.flags, f.MessageFlags.URGENT)) {
                    let e = h[E.default.getId()];
                    return null != e && (h[E.default.getId()] = e.set("flags", _.setFlag(e.flags, f.UserFlags.HAS_UNREAD_URGENT_MESSAGES, !0)), !0)
                }
                return !1
            }
            let L = ["username", "avatar", "global_name", "discriminator", "bot"];

            function M(e) {
                return g(e.user)
            }

            function P(e) {
                return !!e.isMember && g(e.user)
            }

            function b(e) {
                let t = g(e.user),
                    n = h[e.user.id];
                if (null == n) return t;
                let {
                    avatar: i,
                    guildId: r
                } = e;
                return T(n, r, i) || t
            }

            function y(e) {
                let {
                    users: t
                } = e;
                t.forEach(e => {
                    null == h[e.id] && (h[e.id] = new d.default(e))
                })
            }

            function U(e) {
                return g(e.member.user)
            }

            function G(e) {
                let {
                    request: t
                } = e, {
                    user: n,
                    actioned_by_user: i
                } = t, r = !1;
                return null != n && (r = r || g(n)), null != i && (r = r || g(i)), r
            }
            class w extends r.default.Store {
                initialize() {
                    this.waitFor(E.default)
                }
                getUserStoreVersion() {
                    return S
                }
                getUser(e) {
                    if (null != e) return h[e]
                }
                getUsers() {
                    return h
                }
                forEach(e) {
                    for (let t in h)
                        if (!1 === e(h[t])) break
                }
                findByTag(e, t) {
                    for (let n in h) {
                        let i = h[n];
                        if (null != t && i.username === e && i.discriminator === t) return i;
                        if (null == t && i.username === e && i.isPomelo()) return i
                    }
                }
                filter(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        n = [];
                    for (let t in h) {
                        let i = h[t];
                        e(i) && n.push(i)
                    }
                    return t && n.sort((e, t) => e.username > t.username ? 1 : e.username < t.username ? -1 : 0), n
                }
                getCurrentUser() {
                    return h[E.default.getId()]
                }
            }
            w.displayName = "UserStore";
            var x = new w(s.default, {
                CONNECTION_OPEN: function(e) {
                    let {
                        user: t,
                        users: n,
                        guilds: i
                    } = e;
                    delete t.premium, delete t.banner_color, g(t), n.forEach(e => {
                        g(e)
                    }), i.forEach(e => {
                        e.members.forEach(t => {
                            let n = h[t.user.id];
                            null != n && T(n, e.id, t.avatar)
                        })
                    })
                },
                CONNECTION_OPEN_SUPPLEMENTAL: function(e) {
                    let {
                        guilds: t,
                        lazyPrivateChannels: n
                    } = e;
                    t.forEach(e => {
                        e.members.forEach(t => {
                            let n = h[t.user.id];
                            null != n && T(n, e.id, t.avatar)
                        })
                    }), null == n || n.forEach(e => {
                        var t;
                        null === (t = e.rawRecipients) || void 0 === t || t.forEach(e => {
                            g(e)
                        })
                    })
                },
                UPDATE_CLIENT_PREMIUM_TYPE: function(e) {
                    let {
                        user: t
                    } = e;
                    g(t)
                },
                OVERLAY_INITIALIZE: N,
                CACHE_LOADED: N,
                CACHE_LOADED_LAZY: N,
                USER_UPDATE: function(e) {
                    let {
                        user: t
                    } = e;
                    t.id !== E.default.getId() && g(t)
                },
                CURRENT_USER_UPDATE: function(e) {
                    let {
                        user: t
                    } = e;
                    g(t)
                },
                PRESENCE_UPDATES: function(e) {
                    let {
                        updates: t
                    } = e;
                    return t.map(e => {
                        let t = h[e.user.id];
                        if (null == t) return !1;
                        let n = L.reduce((n, r) => {
                            if (e.user.hasOwnProperty(r)) {
                                let s = t.set((0, i.camelCase)(r), e.user[r]);
                                n = n || s !== t, t = s
                            }
                            return n
                        }, !1);
                        return !!n && (h[t.id] = t, n)
                    }).some(e => e)
                },
                SEARCH_FINISH: function(e) {
                    let {
                        messages: t
                    } = e;
                    return t.forEach(e => v({
                        messages: e
                    })), !1
                },
                LOAD_MESSAGES_SUCCESS: v,
                LOAD_MESSAGES_AROUND_SUCCESS: v,
                LOAD_PINNED_MESSAGES_SUCCESS: v,
                LOAD_RECENT_MENTIONS_SUCCESS: v,
                THREAD_LIST_SYNC: function(e) {
                    let {
                        mostRecentMessages: t
                    } = e;
                    return null == t || t.forEach(e => C(e, !1)), !1
                },
                MESSAGE_CREATE: D,
                MESSAGE_UPDATE: D,
                GUILD_SETTINGS_LOADED_BANS: function(e) {
                    let {
                        bans: t
                    } = e;
                    t.forEach(e => g(e.user))
                },
                GUILD_SETTINGS_LOADED_BANS_BATCH: function(e) {
                    let {
                        bans: t
                    } = e;
                    t.forEach(e => g(e.user))
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    t.members.forEach(e => {
                        let {
                            user: {
                                id: n,
                                username: i,
                                avatar: r,
                                discriminator: s,
                                bot: a
                            },
                            avatar: l
                        } = e;
                        n !== E.default.getId() && g({
                            id: n,
                            username: i,
                            avatar: r,
                            discriminator: s,
                            bot: a
                        });
                        let o = h[n];
                        null != o && T(o, t.id, l)
                    })
                },
                GUILD_BAN_ADD: M,
                GUILD_BAN_REMOVE: M,
                CHANNEL_RECIPIENT_ADD: P,
                CHANNEL_RECIPIENT_REMOVE: P,
                GUILD_JOIN_REQUEST_CREATE: G,
                GUILD_JOIN_REQUEST_UPDATE: G,
                GUILD_MEMBER_ADD: b,
                GUILD_MEMBER_UPDATE: b,
                GUILD_MEMBERS_CHUNK: function(e) {
                    let {
                        members: t,
                        guildId: n
                    } = e;
                    return t.reduce((e, t) => {
                        let i = g(t.user),
                            r = h[t.user.id];
                        if (null == r) return i || e;
                        let {
                            avatar: s
                        } = t;
                        return T(r, n, s) || i || e
                    }, !1)
                },
                THREAD_MEMBER_LIST_UPDATE: function(e) {
                    let {
                        members: t
                    } = e, n = !1;
                    return t.forEach(e => {
                        null != e.member && g(e.member.user) && (n = !0), null != e.presence && g(e.presence.user) && (n = !0)
                    }), n
                },
                THREAD_MEMBERS_UPDATE: function(e) {
                    let {
                        addedMembers: t
                    } = e, n = !1;
                    return null == t || t.forEach(e => {
                        null != e.member && g(e.member.user) && (n = !0), null != e.presence && g(e.presence.user) && (n = !0)
                    }), n
                },
                CHANNEL_CREATE: function(e) {
                    let {
                        channel: {
                            rawRecipients: t
                        }
                    } = e;
                    return null != t && t.forEach(e => g(e)), !1
                },
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e;
                    for (let {
                            rawRecipients: e
                        }
                        of t) null != e && e.forEach(e => g(e));
                    return !1
                },
                RELATIONSHIP_ADD: function(e) {
                    return g(e.relationship.user)
                },
                LOAD_RELATIONSHIPS_SUCCESS: function(e) {
                    let {
                        relationships: t
                    } = e;
                    return t.reduce((e, t) => g(t.user) || e, !1)
                },
                FRIEND_SUGGESTION_CREATE: function(e) {
                    return g(e.suggestion.suggested_user)
                },
                LOAD_FRIEND_SUGGESTIONS_SUCCESS: function(e) {
                    let {
                        suggestions: t
                    } = e;
                    return t.reduce((e, t) => g(t.suggested_user) || e, !1)
                },
                AUDIT_LOG_FETCH_SUCCESS: y,
                AUDIT_LOG_FETCH_NEXT_PAGE_SUCCESS: y,
                LOBBY_CREATE: function(e) {
                    let {
                        lobby: t
                    } = e;
                    return t.members.reduce((e, t) => g(t.user) || e, !1)
                },
                LOBBY_MEMBER_CONNECT: U,
                LOBBY_MEMBER_UPDATE: U,
                GIFT_CODE_RESOLVE_SUCCESS: function(e) {
                    let {
                        giftCode: t
                    } = e;
                    return null != t.user && g(t.user)
                },
                GUILD_APPLIED_BOOSTS_FETCH_SUCCESS: function(e) {
                    let {
                        appliedBoosts: t
                    } = e;
                    t.forEach(e => {
                        let {
                            user: t
                        } = e;
                        null != t && g(t)
                    })
                },
                GUILD_FEED_FETCH_SUCCESS: function(e) {
                    let {
                        data: t
                    } = e;
                    (0, l.getMessagesFromGuildFeedFetch)(t).forEach(e => C(e, !0))
                },
                LOAD_THREADS_SUCCESS: O,
                LOAD_ARCHIVED_THREADS_SUCCESS: O,
                LOAD_FORUM_POSTS: function(e) {
                    let {
                        threads: t
                    } = e;
                    Object.values(t).forEach(e => {
                        let {
                            first_message: t,
                            most_recent_message: n,
                            owner: i
                        } = e;
                        null != t && C(t, !0), null != n && C(n, !0), null != i && null != i.user && g(i.user, !0)
                    })
                },
                GUILD_SCHEDULED_EVENT_USERS_FETCH_SUCCESS: function(e) {
                    let {
                        rsvpUsers: t,
                        guildId: n
                    } = e;
                    t.forEach(e => {
                        var t;
                        g(e);
                        let i = h[e.id],
                            r = null === (t = e.guild_member) || void 0 === t ? void 0 : t.avatar;
                        null != i && null != r && T(i, n, r)
                    })
                },
                LOAD_NOTIFICATION_CENTER_ITEMS_SUCCESS: function(e) {
                    let {
                        items: t
                    } = e;
                    t.forEach(e => {
                        null != e.other_user && g(e.other_user)
                    })
                },
                NOTIFICATION_CENTER_ITEM_CREATE: function(e) {
                    let {
                        item: t
                    } = e;
                    null != t.other_user && g(t.other_user)
                },
                LOAD_MESSAGE_REQUESTS_SUPPLEMENTAL_DATA_SUCCESS: function(e) {
                    let {
                        supplementalData: t
                    } = e;
                    Object.values(t).forEach(e => {
                        let {
                            message_preview: t
                        } = e;
                        null != t && C(t, !0)
                    })
                },
                STORE_APPLICATION_INTERACTION_FAKE_USER: function(e) {
                    let {
                        user: t
                    } = e;
                    g(t)
                },
                PASSIVE_UPDATE_V1: function(e) {
                    var t;
                    let n = !1;
                    for (let i of null !== (t = e.members) && void 0 !== t ? t : []) g(i.user) && (n = !0), null != h[i.user.id] && T(h[i.user.id], e.guildId, i.avatar) && (n = !0);
                    return n
                },
                LOCAL_MESSAGES_LOADED: function(e) {
                    var t;
                    let n = !1;
                    for (let i of null !== (t = e.users) && void 0 !== t ? t : []) !Object.hasOwn(h, i.id) && (n = g(i) || n);
                    return n
                },
                FETCH_PRIVATE_CHANNEL_INTEGRATIONS_SUCCESS: function(e) {
                    let {
                        integrations: t
                    } = e;
                    t.forEach(e => R((0, u.createPrivateChannelIntegration)(e)))
                },
                PRIVATE_CHANNEL_INTEGRATION_CREATE: function(e) {
                    let {
                        integration: t
                    } = e;
                    R((0, u.createPrivateChannelIntegration)(t))
                },
                PRIVATE_CHANNEL_INTEGRATION_UPDATE: function(e) {
                    let {
                        integration: t
                    } = e;
                    R((0, u.createPrivateChannelIntegration)(t))
                },
                FAMILY_CENTER_INITIAL_LOAD: function(e) {
                    let {
                        users: t,
                        familyCenterTeenActivity: n
                    } = e, {
                        users: i
                    } = n, r = [...t, ...i];
                    return r.reduce((e, t) => g(t) || e, !1)
                },
                FAMILY_CENTER_LINKED_USERS_FETCH_SUCCESS: function(e) {
                    let {
                        users: t
                    } = e;
                    return t.reduce((e, t) => g(t) || e, !1)
                },
                FAMILY_CENTER_TEEN_ACTIVITY_FETCH_SUCCESS: function(e) {
                    let {
                        familyCenterTeenActivity: t
                    } = e;
                    if (void 0 === t) return;
                    let {
                        users: n
                    } = t;
                    return n.reduce((e, t) => g(t) || e, !1)
                },
                FAMILY_CENTER_TEEN_ACTIVITY_MORE_FETCH_SUCCESS: function(e) {
                    let {
                        familyCenterTeenActivity: t
                    } = e, {
                        users: n
                    } = t;
                    return n.reduce((e, t) => g(t) || e, !1)
                },
                FAMILY_CENTER_REQUEST_LINK_SUCCESS: function(e) {
                    let {
                        users: t
                    } = e;
                    return t.reduce((e, t) => g(t) || e, !1)
                },
                FRIEND_FINDER_PYMK_LOADED: function(e) {
                    let {
                        users: t
                    } = e;
                    return t.reduce((e, t) => g(t) || e, !1)
                },
                MEMBER_SAFETY_GUILD_MEMBER_SEARCH_SUCCESS: function(e) {
                    let {
                        members: t
                    } = e;
                    return t.reduce((e, t) => g(t.member.user) || e, !1)
                }
            })
        },
        123647: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("498225"),
                r = n("913144");
            let s = n("49111").VideoQualityMode.AUTO;
            class a extends i.default.Store {
                get mode() {
                    return s
                }
            }
            a.displayName = "VideoQualityModeStore";
            var l = new a(r.default, {
                SET_CHANNEL_VIDEO_QUALITY_MODE: function(e) {
                    s = e.mode
                }
            })
        },
        800762: function(e, t, n) {
            "use strict";
            let i, r;
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var s = n("427964"),
                a = n.n(s),
                l = n("498225"),
                o = n("913144"),
                u = n("628454"),
                c = n("49111"),
                d = n("99795");
            let _ = 0,
                E = 0,
                f = {},
                p = {},
                h = {},
                S = {},
                T = {};

            function I(e, t) {
                return "".concat(e, ":").concat(t)
            }

            function m(e, t) {
                let n = e[t];
                return null == n && (n = {}, e[t] = n), n
            }

            function g(e) {
                var t;
                let n = null !== (t = f[c.ME]) && void 0 !== t ? t : {},
                    i = {};
                a.each(n, (t, n) => {
                    t.channelId !== e && (i[n] = t)
                }), f[c.ME] = i
            }

            function A(e, t, n) {
                let i = m(f, null != e ? e : c.ME),
                    r = i[t],
                    s = n(r);
                return r === s ? [!1, s, r] : (null != r && (delete i[t], null != r.channelId && (delete m(p, r.channelId)[t], delete m(h, r.channelId)[t]), null != r.sessionId && delete m(S, t)[r.sessionId]), null != s && (i[t] = s, null != s.channelId && (m(p, s.channelId)[t] = s, s.selfVideo && (m(h, s.channelId)[t] = s)), null != s.sessionId && (m(S, t)[s.sessionId] = s)), [!0, s, r])
            }

            function C(e, t) {
                return A(e, t.userId, e => {
                    if (null == t.channelId) return null;
                    {
                        let n = {
                            channelId: t.channelId,
                            deaf: t.deaf,
                            mute: t.mute,
                            requestToSpeakTimestamp: t.requestToSpeakTimestamp,
                            selfDeaf: t.selfDeaf,
                            selfMute: t.selfMute,
                            selfStream: t.selfStream,
                            selfVideo: t.selfVideo,
                            sessionId: t.sessionId,
                            suppress: t.suppress,
                            userId: t.userId
                        };
                        return null != e ? e.merge(n) : new u.default(n)
                    }
                })
            }

            function R(e) {
                let {
                    guild: t
                } = e;
                a.forEach(f[t.id], e => {
                    A(t.id, e.userId, () => null)
                }), delete f[t.id]
            }
            class N extends l.default.Store {
                getAllVoiceStates() {
                    return f
                }
                getVoiceStateVersion() {
                    return E
                }
                getVoiceStates(e) {
                    return m(f, null != e ? e : c.ME)
                }
                getVoiceStatesForChannel(e) {
                    return m(p, e)
                }
                getVideoVoiceStatesForChannel(e) {
                    return m(h, e)
                }
                getVoiceState(e, t) {
                    return this.getVoiceStates(e)[t]
                }
                getVoiceStateForChannel(e) {
                    var t;
                    let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i;
                    return null === (t = m(p, e)) || void 0 === t ? void 0 : t[n]
                }
                getVoiceStateForUser(e) {
                    return Object.values(m(S, e))[0]
                }
                getVoiceStateForSession(e, t) {
                    var n;
                    return null != t ? null === (n = m(S, e)) || void 0 === n ? void 0 : n[t] : null
                }
                getUserVoiceChannelId(e, t) {
                    var n;
                    return null === (n = this.getVoiceState(e, t)) || void 0 === n ? void 0 : n.channelId
                }
                getCurrentClientVoiceChannelId(e) {
                    let t = this.getVoiceState(e, i);
                    return null != t && null != r && t.sessionId === r ? t.channelId : null
                }
                isCurrentClientInVoiceChannel() {
                    var e;
                    return null != r && (null === (e = S[i]) || void 0 === e ? void 0 : e[r]) != null
                }
                isInChannel(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i;
                    if (null == e) return !1;
                    let n = this.getVoiceStateForChannel(e, t);
                    return null != n && (t !== i || null != r && n.sessionId === r)
                }
                hasVideo(e) {
                    return Object.values(m(h, e)).length > 0
                }
                getVoicePlatformForChannel(e, t) {
                    var n, s;
                    let a = null != r && (null === (s = S[i]) || void 0 === s ? void 0 : null === (n = s[r]) || void 0 === n ? void 0 : n.channelId);
                    return t === i && e === a ? d.VoicePlatforms.DESKTOP : T[I(t, e)]
                }
                get userHasBeenMovedVersion() {
                    return _
                }
            }
            N.displayName = "VoiceStateStore";
            var v = new N(o.default, {
                CONNECTION_OPEN: function(e) {
                    let {
                        user: t,
                        sessionId: n
                    } = e;
                    f = {}, p = {}, S = {}, h = {}, i = t.id, r = n
                },
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        voiceStates: t,
                        user: n,
                        sessionId: s
                    } = e;
                    for (let [e, n] of(f = {}, p = {}, S = {}, h = {}, Object.entries(t)))
                        for (let [t, i] of Object.entries(n)) A(e, t, () => new u.default(i));
                    i = n.id, r = s
                },
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e, [r] = A(t, i, e => null == e ? void 0 : e.set("channelId", n));
                    return r
                },
                VOICE_STATE_UPDATES: function(e) {
                    let {
                        voiceStates: t
                    } = e;
                    return t.reduce((e, t) => {
                        let [n, i, s] = C(t.guildId, t);
                        return n ? (t.sessionId === r && null != i && null != s && s.channelId !== i.channelId && (_ += 1), E++, !0) : e
                    }, !1)
                },
                GUILD_DELETE: R,
                GUILD_CREATE: R,
                CHANNEL_DELETE: function(e) {
                    let {
                        channel: t
                    } = e;
                    g(t.id)
                },
                CALL_DELETE: function(e) {
                    let {
                        channelId: t
                    } = e;
                    g(t)
                },
                PASSIVE_UPDATE_V1: function(e) {
                    var t, n;
                    let i = !1,
                        r = Object.keys(null !== (t = f[e.guildId]) && void 0 !== t ? t : {}),
                        s = new Set(r);
                    for (let t of null !== (n = e.voiceStates) && void 0 !== n ? n : []) {
                        let [n] = C(e.guildId, t);
                        i = i || n, s.delete(t.userId)
                    }
                    for (let t of s) A(e.guildId, t, () => null), i = !0;
                    return i && E++, i
                },
                RTC_CONNECTION_PLATFORM: function(e) {
                    let {
                        userId: t,
                        channelId: n,
                        platform: i
                    } = e;
                    T[I(t, n)] = i
                }
            })
        },
        160299: function(e, t, n) {
            "use strict";
            let i, r, s, a;
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var l = n("498225"),
                o = n("913144"),
                u = n("519023"),
                c = n("49111");
            let d = !1,
                _ = !1,
                E = !1,
                f = !1,
                p = !1,
                h = null,
                S = null,
                T = !1,
                I = !1;

            function m() {
                d = !1
            }

            function g() {
                i = void 0
            }

            function A() {
                f = !1
            }

            function C() {
                p = !0
            }

            function R() {
                p = !1
            }
            class N extends l.default.Store {
                get isBusy() {
                    return d || _ || p || E
                }
                get isUpdatingPaymentSource() {
                    return _
                }
                get isRemovingPaymentSource() {
                    return E
                }
                get isSyncing() {
                    return this.isPaymentSourceFetching || this.isSubscriptionFetching
                }
                get isSubscriptionFetching() {
                    return f
                }
                get isPaymentSourceFetching() {
                    return null != i
                }
                get editSourceError() {
                    return h
                }
                get removeSourceError() {
                    return S
                }
                get ipCountryCodeLoaded() {
                    return void 0 !== r
                }
                get ipCountryCode() {
                    return r
                }
                get ipCountryCodeRequest() {
                    return s
                }
                get ipCountryCodeWithFallback() {
                    return null != r ? r : c.FallbackCurrencyCountry
                }
                get ipCountryCodeHasError() {
                    return T
                }
                get paymentSourcesFetchRequest() {
                    return i
                }
                get localizedPricingPromo() {
                    return a
                }
                get localizedPricingPromoHasError() {
                    return I
                }
                get isLocalizedPromoEnabled() {
                    return null != a
                }
            }
            N.displayName = "BillingInfoStore";
            var v = new N(o.default, {
                BILLING_PAYMENT_SOURCE_CREATE_START: function() {
                    d = !0
                },
                BILLING_PAYMENT_SOURCE_CREATE_SUCCESS: m,
                BILLING_PAYMENT_SOURCE_CREATE_FAIL: m,
                STRIPE_TOKEN_FAILURE: m,
                BILLING_PAYMENT_SOURCE_REMOVE_START: function() {
                    E = !0
                },
                BILLING_PAYMENT_SOURCE_REMOVE_SUCCESS: function() {
                    E = !1
                },
                BILLING_PAYMENT_SOURCE_REMOVE_FAIL: function(e) {
                    let {
                        error: t
                    } = e;
                    E = !1, S = t
                },
                BILLING_PAYMENT_SOURCE_REMOVE_CLEAR_ERROR: function() {
                    S = null
                },
                BILLING_PAYMENT_SOURCE_UPDATE_START: function() {
                    _ = !0
                },
                BILLING_PAYMENT_SOURCE_UPDATE_SUCCESS: function() {
                    _ = !1
                },
                BILLING_PAYMENT_SOURCE_UPDATE_FAIL: function(e) {
                    let {
                        error: t
                    } = e;
                    _ = !1, h = t
                },
                BILLING_PAYMENT_SOURCE_UPDATE_CLEAR_ERROR: function() {
                    h = null
                },
                BILLING_PAYMENT_SOURCES_FETCH_START: function(e) {
                    let {
                        request: t
                    } = e;
                    i = t
                },
                BILLING_PAYMENT_SOURCES_FETCH_SUCCESS: g,
                BILLING_PAYMENT_SOURCES_FETCH_FAIL: g,
                BILLING_SUBSCRIPTION_FETCH_START: function() {
                    f = !0
                },
                BILLING_SUBSCRIPTION_FETCH_SUCCESS: A,
                BILLING_SUBSCRIPTION_FETCH_FAIL: A,
                BILLING_SUBSCRIPTION_UPDATE_START: C,
                BILLING_SUBSCRIPTION_CANCEL_START: C,
                BILLING_SUBSCRIPTION_UPDATE_SUCCESS: R,
                BILLING_SUBSCRIPTION_UPDATE_FAIL: R,
                BILLING_SUBSCRIPTION_CANCEL_FAIL: R,
                BILLING_SUBSCRIPTION_CANCEL_SUCCESS: R,
                BILLING_IP_COUNTRY_CODE_FETCH_START: function(e) {
                    let {
                        request: t
                    } = e;
                    s = t
                },
                BILLING_SET_IP_COUNTRY_CODE: function(e) {
                    let {
                        countryCode: t
                    } = e;
                    r = t
                },
                BILLING_IP_COUNTRY_CODE_FAILURE: function() {
                    r = null, T = !0
                },
                BILLING_SET_LOCALIZED_PRICING_PROMO: function(e) {
                    let {
                        localizedPricingPromo: t
                    } = e;
                    a = u.LocalizedPricingPromoRecord.createFromServer(t)
                },
                BILLING_LOCALIZED_PRICING_PROMO_FAILURE: function() {
                    a = null, I = !0
                },
                LOGOUT: function() {
                    i = void 0, s = void 0, r = void 0, T = !1, a = null, S = null, h = null
                },
                CONNECTION_OPEN: e => {
                    let {
                        countryCode: t
                    } = e;
                    null != t && (r = t)
                }
            })
        },
        40597: function(e, t, n) {
            "use strict";
            let i, r;
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var s = n("498225"),
                a = n("990746"),
                l = n("913144"),
                o = n("773336"),
                u = n("49111");
            let c = null,
                d = null,
                _ = null;
            (0, o.isDesktop)() && (window.popupBridge = {
                getReturnUrlPrefix: () => {
                    if (null == i) throw Error("popupBridgeState is unset");
                    return a.default.getAPIBaseURL() + u.Endpoints.BILLING_POPUP_BRIDGE_CALLBACK_REDIRECT_PREFIX(u.PaymentGateways.BRAINTREE, i)
                },
                open: e => {
                    r = e, window.open(e), f.emitChange()
                }
            });
            class E extends s.default.Store {
                getClient() {
                    return c
                }
                getPayPalClient() {
                    return d
                }
                getVenmoClient() {
                    return _
                }
                getLastURL() {
                    return r
                }
            }
            E.displayName = "BraintreeStore";
            let f = new E(l.default, {
                BRAINTREE_CREATE_CLIENT_SUCCESS: function(e) {
                    let {
                        client: t
                    } = e;
                    c = t
                },
                BRAINTREE_CREATE_PAYPAL_CLIENT_SUCCESS: function(e) {
                    let {
                        paypalClient: t
                    } = e;
                    d = t
                },
                BILLING_POPUP_BRIDGE_CALLBACK: function(e) {
                    let {
                        paymentSourceType: t,
                        state: n,
                        path: r,
                        query: s
                    } = e;
                    if (t !== u.PaymentSourceTypes.PAYPAL || n !== i) return;
                    let a = window.popupBridge.onComplete;
                    "function" == typeof a && a(null, {
                        path: r,
                        queryItems: s
                    })
                },
                BILLING_POPUP_BRIDGE_STATE_UPDATE: function(e) {
                    let {
                        paymentSourceType: t,
                        state: n
                    } = e;
                    t === u.PaymentSourceTypes.PAYPAL && (i = n)
                },
                BRAINTREE_TEARDOWN_PAYPAL_CLIENT: function() {
                    d = null
                },
                BRAINTREE_CREATE_VENMO_CLIENT_SUCCESS: function(e) {
                    let {
                        venmoClient: t
                    } = e;
                    _ = t
                },
                BRAINTREE_TEARDOWN_VENMO_CLIENT: function() {
                    _ = null
                }
            });
            var p = f
        },
        357957: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("865146");
            let a = {},
                l = null,
                o = !1;

            function u(e) {
                let {
                    paymentSource: t
                } = e;
                a = {
                    ...a,
                    [t.id]: t
                }, (t.isDefault || 1 === Object.keys(a).length) && (l = t.id)
            }
            class c extends i.default.Store {
                get paymentSources() {
                    return a
                }
                get paymentSourceIds() {
                    return Object.keys(a)
                }
                get defaultPaymentSourceId() {
                    return l
                }
                get defaultPaymentSource() {
                    return null != l ? a[l] : null
                }
                get hasFetchedPaymentSources() {
                    return o
                }
                getDefaultBillingCountryCode() {
                    let e = this.defaultPaymentSource;
                    return null == e ? null : e.paymentMethodCountry
                }
                getPaymentSource(e) {
                    return a[e]
                }
            }
            c.displayName = "PaymentSourceStore";
            var d = new c(r.default, {
                BILLING_PAYMENT_SOURCE_CREATE_SUCCESS: u,
                BILLING_PAYMENT_SOURCE_UPDATE_SUCCESS: u,
                BILLING_PAYMENT_SOURCES_FETCH_SUCCESS: function(e) {
                    let {
                        paymentSources: t
                    } = e;
                    for (let e of (a = {}, l = null, t)) a[e.id] = s.default.createFromServer(e), e.default && (l = e.id);
                    null == l && t.length > 0 && (l = t[0].id), o = !0
                },
                BILLING_PAYMENT_SOURCE_REMOVE_SUCCESS: function(e) {
                    let {
                        id: t
                    } = e;
                    if (a = {
                            ...a
                        }, delete a[t], l === t) {
                        let e = Object.keys(a);
                        l = 0 === e.length ? null : e[0]
                    }
                },
                LOGOUT: function() {
                    a = {}, l = null, o = !1
                }
            })
        },
        10514: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("797647"),
                a = n("117362"),
                l = n("49111"),
                o = n("646718");
            let u = {},
                c = {},
                d = new Set,
                _ = new Set,
                E = {},
                f = {};

            function p(e) {
                let t = e.skuId;
                u[e.id] = e;
                let n = e.prices[l.PriceSetAssignmentPurchaseTypes.DEFAULT];
                if (null != n) {
                    var i;
                    let t = new Set(Object.keys(n.paymentSourcePrices));
                    E[e.id] = t;
                    let r = Array.from(null !== (i = f[e.skuId]) && void 0 !== i ? i : new Set);
                    f[e.skuId] = new Set([...r, ...Array.from(t)])
                }
                let r = c[t];
                null != r ? r.add(e.id) : c[t] = new Set([e.id])
            }

            function h() {
                [(0, o.SubscriptionPlanInfo)[o.SubscriptionPlans.NONE_MONTH], (0, o.SubscriptionPlanInfo)[o.SubscriptionPlans.NONE_YEAR], (0, o.SubscriptionPlanInfo)[o.SubscriptionPlans.NONE_3_MONTH], (0, o.SubscriptionPlanInfo)[o.SubscriptionPlans.NONE_6_MONTH]].forEach(e => p(s.default.createFromServer({
                    id: e.id,
                    name: e.name,
                    interval: e.interval,
                    interval_count: e.intervalCount,
                    tax_inclusive: !0,
                    sku_id: e.skuId,
                    currency: l.CurrencyCodes.USD,
                    price: 0,
                    price_tier: 0,
                    discount_price: null
                })))
            }

            function S(e) {
                p(s.default.createFromServer(e))
            }
            h();

            function T() {
                (0, a.clearObject)(u), (0, a.clearObject)(c), d.clear(), _.clear(), (0, a.clearObject)(E), (0, a.clearObject)(f), h()
            }
            let I = [o.SubscriptionIntervalTypes.DAY, o.SubscriptionIntervalTypes.MONTH, o.SubscriptionIntervalTypes.YEAR];
            class m extends i.default.Store {
                getPlanIdsForSkus(e) {
                    let t = [];
                    for (let i of e) {
                        var n;
                        let e = Array.from(null !== (n = c[i]) && void 0 !== n ? n : new Set);
                        e.sort((e, t) => {
                            let n = u[e],
                                i = u[t];
                            return I.indexOf(n.interval) - I.indexOf(i.interval) || n.intervalCount - i.intervalCount
                        }), t.push(...e)
                    }
                    return t
                }
                getFetchedSKUIDs() {
                    return Object.keys(c)
                }
                getForSKU(e) {
                    var t;
                    return Array.from(null !== (t = c[e]) && void 0 !== t ? t : []).map(e => u[e])
                }
                getForSkuAndInterval(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                    return this.getForSKU(e).find(e => e.interval === t && e.intervalCount === n)
                }
                get(e) {
                    return u[e]
                }
                isFetchingForSKU(e) {
                    return d.has(e)
                }
                isFetchingForSKUs(e) {
                    return e.some(e => this.isFetchingForSKU(e))
                }
                isLoadedForSKU(e) {
                    return !!_.has(e) || !d.has(e) && null != c[e]
                }
                isLoadedForSKUs(e) {
                    return e.every(e => this.isLoadedForSKU(e))
                }
                isFetchingForPremiumSKUs() {
                    return o.ACTIVE_PREMIUM_SKUS.map(e => this.isFetchingForSKU(e)).includes(!0)
                }
                isLoadedForPremiumSKUs() {
                    return o.ACTIVE_PREMIUM_SKUS.every(e => this.isLoadedForSKU(e))
                }
                ignoreSKUFetch(e) {
                    _.add(e)
                }
                getPaymentSourcesForPlanId(e) {
                    return E.hasOwnProperty(e) ? E[e] : null
                }
                getPaymentSourceIds() {
                    let e = new Set;
                    return Object.values(E).forEach(t => t.forEach(t => e.add(t))), e
                }
                hasPaymentSourceForSKUId(e, t) {
                    return o.PremiumSubscriptionSKUs.NONE === t || null != f[t] && f[t].has(e)
                }
                hasPaymentSourceForSKUIds(e, t) {
                    let n = t.every(t => this.hasPaymentSourceForSKUId(e, t));
                    return n
                }
            }
            m.displayName = "SubscriptionPlanStore";
            var g = new m(r.default, {
                SUBSCRIPTION_PLANS_FETCH: function(e) {
                    let {
                        skuId: t
                    } = e;
                    d.add(t)
                },
                SUBSCRIPTION_PLANS_FETCH_SUCCESS: function(e) {
                    let {
                        skuId: t,
                        subscriptionPlans: n
                    } = e;
                    c[t] = new Set, f[t] = new Set, n.forEach(S), d.delete(t), _.delete(t)
                },
                SUBSCRIPTION_PLANS_FETCH_FAILURE: function(e) {
                    let {
                        skuId: t
                    } = e;
                    d.delete(t), _.delete(t)
                },
                SUBSCRIPTION_PLANS_RESET: T,
                GIFT_CODE_RESOLVE_SUCCESS: function(e) {
                    let {
                        giftCode: t
                    } = e;
                    null != t.subscription_plan && S(t.subscription_plan)
                },
                ENTITLEMENTS_GIFTABLE_FETCH_SUCCESS: function(e) {
                    let {
                        entitlements: t
                    } = e;
                    for (let e of t) null != e.subscription_plan && S(e.subscription_plan)
                },
                LOGOUT: T
            })
        },
        521012: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("605250"),
                a = n("797647"),
                l = n("388290"),
                o = n("271938"),
                u = n("745279"),
                c = n("49111");
            let d = null,
                _ = null,
                E = null,
                f = null,
                p = null,
                h = !1,
                S = !1,
                T = null,
                I = !1,
                m = new s.default("SubscriptionStore");

            function g(e) {
                let {
                    activeSubscriptions: t,
                    record: n
                } = e, i = t.findIndex(e => e.id === n.id);
                if (-1 === i) return [n, ...t];
                {
                    let e = [...t];
                    return C(n) && n.status !== c.SubscriptionStatusTypes.ENDED ? e[i] = n : e.splice(i, 1), e
                }
            }

            function A() {
                d = null, _ = null, E = null, f = null, p = null, h = !1, S = !1, T = null, I = !1
            }

            function C(e) {
                return e.status !== c.SubscriptionStatusTypes.UNPAID
            }

            function R(e, t) {
                let n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2],
                    i = n ? _ : d;
                if (null == i) return null;
                let r = o.default.getId();
                for (let n in i) {
                    let s = i[n];
                    if (s.userId !== r) {
                        !S && (m.log("user id mismatch between logged in user and SubscriptionStore user"), (0, u.captureBillingMessage)("user id mismatch between logged in user and SubscriptionStore user", {
                            extra: {
                                authUserId: r,
                                subscriptionId: s.id,
                                subscriptionUserId: s.userId
                            }
                        }), S = !0);
                        break
                    }
                    if (s.type === e && (null == t || t(s))) return s
                }
                return null
            }
            class N extends i.default.Store {
                hasFetchedSubscriptions() {
                    return null != d
                }
                hasFetchedMostRecentPremiumTypeSubscription() {
                    return h
                }
                hasFetchedPreviousPremiumTypeSubscription() {
                    return I
                }
                getPremiumSubscription() {
                    let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                    return R(c.SubscriptionTypes.PREMIUM, e => !(0, a.isNoneSubscription)(e.planId), e)
                }
                getPremiumTypeSubscription() {
                    let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                    return R(c.SubscriptionTypes.PREMIUM, void 0, e)
                }
                getSubscriptions() {
                    let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                    return e ? _ : d
                }
                getSubscriptionById(e) {
                    var t, n;
                    return null !== (n = null === (t = d) || void 0 === t ? void 0 : t[e]) && void 0 !== n ? n : void 0
                }
                getActiveGuildSubscriptions() {
                    return f
                }
                getActiveApplicationSubscriptions() {
                    return p
                }
                getSubscriptionForPlanIds(e) {
                    var t;
                    let n = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                        i = new Set(e),
                        r = n ? _ : d;
                    return null == r ? null : null !== (t = Object.values(r).find(e => e.items.some(e => i.has(e.planId)))) && void 0 !== t ? t : null
                }
                getMostRecentPremiumTypeSubscription() {
                    return E
                }
                getPreviousPremiumTypeSubscription() {
                    return T
                }
            }
            N.displayName = "SubscriptionStore";
            var v = new N(r.default, {
                BILLING_SUBSCRIPTION_FETCH_SUCCESS: function(e) {
                    let {
                        subscriptions: t
                    } = e, n = {}, i = {}, r = [], s = [], a = o.default.getId();
                    t.forEach(e => {
                        if (e.user_id !== a && !S) {
                            m.log("[handleSubscriptionsFetch] Skipping adding Subscription into SubscriptionStore because of userId mismatch"), (0, u.captureBillingMessage)("[handleSubscriptionsFetch] Skipping adding Subscription into SubscriptionStore because of userId mismatch", {
                                extra: {
                                    authUserId: a,
                                    subscriptionId: e.id,
                                    subscriptionUserId: e.user_id
                                }
                            }), S = !0;
                            return
                        }
                        let t = l.SubscriptionRecord.createFromServer(e);
                        n[t.id] = t, C(t) && (i[t.id] = t, t.type === c.SubscriptionTypes.GUILD && t.status !== c.SubscriptionStatusTypes.ENDED && r.push(t), t.type === c.SubscriptionTypes.APPLICATION && t.status !== c.SubscriptionStatusTypes.ENDED && s.push(t))
                    }), d = n, _ = i, f = r, p = s
                },
                BILLING_SUBSCRIPTION_UPDATE_SUCCESS: function(e) {
                    let {
                        subscription: t
                    } = e, n = l.SubscriptionRecord.createFromServer(t);
                    d = {
                        ...d,
                        [n.id]: n
                    }, C(n) && (_ = {
                        ..._,
                        [n.id]: n
                    }), null != f && n.type === c.SubscriptionTypes.GUILD && (f = g({
                        activeSubscriptions: f,
                        record: n
                    })), null != p && n.type === c.SubscriptionTypes.APPLICATION && (f = g({
                        activeSubscriptions: p,
                        record: n
                    }))
                },
                BILLING_MOST_RECENT_SUBSCRIPTION_FETCH_SUCCESS: function(e) {
                    let {
                        subscription: t
                    } = e;
                    if (h = !0, null != t) {
                        let e = o.default.getId();
                        if (t.user_id !== e && !S) {
                            m.log("[handleMostRecentSubscriptionFetch] Skipping adding Subscription into SubscriptionStore because of userId mismatch"), (0, u.captureBillingMessage)("[handleMostRecentSubscriptionFetch] Skipping adding Subscription into SubscriptionStore because of userId mismatch", {
                                extra: {
                                    authUserId: e,
                                    subscriptionId: t.id,
                                    subscriptionUserId: t.user_id
                                }
                            }), h = !1, S = !0;
                            return
                        }
                        let n = l.SubscriptionRecord.createFromServer(t);
                        E = n
                    }
                },
                BILLING_PREVIOUS_PREMIUM_SUBSCRIPTION_FETCH_SUCCESS: function(e) {
                    let {
                        subscription: t
                    } = e;
                    if (I = !0, null != t) {
                        let e = o.default.getId();
                        if (t.user_id !== e && !S) {
                            m.log("[handlePreviousSubscriptionFetch] Skipping adding Subscription into SubscriptionStore because of userId mismatch"), (0, u.captureBillingMessage)("[handlePreviousSubscriptionFetch] Skipping adding Subscription into SubscriptionStore because of userId mismatch", {
                                extra: {
                                    authUserId: e,
                                    subscriptionId: t.id,
                                    subscriptionUserId: t.user_id
                                }
                            }), I = !1, S = !0;
                            return
                        }
                        let n = l.SubscriptionRecord.createFromServer(t);
                        T = n
                    }
                },
                BILLING_SUBSCRIPTION_RESET: A,
                LOGOUT: A
            })
        },
        251013: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("49111");
            let a = {},
                l = null;
            class o extends i.default.Store {
                get applicationStatistics() {
                    return a
                }
                get lastFetched() {
                    return l
                }
                getGameDuration(e) {
                    let t = a[e];
                    return null != t ? t.total_duration : 0
                }
                getLastPlayedDateTime(e) {
                    let t = a[e];
                    return null != t ? new Date(t.last_played_at).getTime() : null
                }
                hasApplicationStatistic(e) {
                    return null != a[e]
                }
                getCurrentUserStatisticsForApplication(e) {
                    return a[e]
                }
                getQuickSwitcherScoreForApplication(e) {
                    let t = a[e],
                        n = 0;
                    if (null != t) {
                        let e = Date.now(),
                            i = new Date(t.last_played_at).getTime(),
                            r = Math.floor((e - i) / 864e5),
                            s = Math.floor(1e3 * t.total_duration / 36e5);
                        0 === r ? n += 50 : r >= 1 && r < 2 ? n += 40 : r >= 2 && r < 4 ? n += 30 : r >= 4 && r < 7 ? n += 20 : r >= 7 && (n += 10), 0 === s ? n += 0 : s >= 1 && s < 12 ? n += 10 : s >= 12 && s < 168 ? n += 20 : s >= 168 && s < 720 ? n += 40 : s >= 720 && (n += 50)
                    }
                    return n
                }
            }
            o.displayName = "LibraryApplicationStatisticsStore";
            var u = new o(r.default, {
                USER_ACTIVITY_STATISTICS_FETCH_SUCCESS: function(e) {
                    let {
                        statistics: t
                    } = e;
                    t.forEach(e => {
                        a[e.application_id] = e
                    }), l = Date.now()
                },
                ACTIVITY_UPDATE_START: function(e) {
                    let {
                        duration: t,
                        applicationId: n,
                        distributor: i
                    } = e, r = a[n], l = new Date().toISOString(), o = 0, u = 0;
                    if (null != r) {
                        var c;
                        o = r.total_duration, u = null !== (c = r.total_discord_sku_duration) && void 0 !== c ? c : 0
                    }
                    o += t, i === s.Distributors.DISCORD && (u += t), a[n] = {
                        application_id: n,
                        total_duration: o,
                        last_played_at: l,
                        total_discord_sku_duration: u
                    }
                },
                LOGOUT: function() {
                    a = {}, l = null
                }
            })
        },
        677225: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("638800"),
                l = n("913144"),
                o = n("157552"),
                u = n("71313"),
                c = n("190017"),
                d = n("546463"),
                _ = n("686470"),
                E = n("535974"),
                f = n("98328"),
                p = n("964889"),
                h = n("602043");
            let S = new Set,
                T = {},
                I = new Set,
                m = {},
                g = new Set,
                A = {},
                C = new a.Timeout;

            function R(e) {
                C.start(e + 6e5 * Math.random(), o.fetchBranches)
            }

            function N() {
                if (!(0, h.isSupportedPlatform)()) return !1;
                let e = _.default.entitledBranchIds,
                    t = [];
                for (let n of e) !A.hasOwnProperty(n) && (A[n] = null, t.push(n));
                if (0 === t.length) return !1;
                l.default.wait(() => o.fetchBranches(t))
            }

            function v(e, t) {
                if (null != T[t] && f.default.shouldBeInstalled(e, t)) {
                    let n = T[t],
                        i = n.manifestIds,
                        s = E.default.getState(e, t);
                    null != s && s.shouldPatch && (s.buildId !== n.id || !r.isEqual(s.manifestIds, i)) && l.default.wait(() => {
                        let r = d.default.getGame(e);
                        null != r ? (g.delete((0, p.getComboId)(e, t)), (0, c.updateApplication)(r, t, n.id, i, !0)) : g.add((0, p.getComboId)(e, t))
                    })
                }
            }

            function O() {
                C.stop()
            }
            class D extends s.default.Store {
                initialize() {
                    this.syncWith([_.default], N), this.waitFor(E.default, _.default, d.default)
                }
                getTargetBuildId(e, t) {
                    return null == T[t] ? null : T[t].id
                }
                getTargetManifests(e, t) {
                    return null == T[t] ? null : T[t].manifestIds
                }
                hasNoBuild(e, t) {
                    return I.has(t)
                }
                isFetching(e, t) {
                    return S.has(t)
                }
                needsToFetchBuildSize(e) {
                    return !m.hasOwnProperty(e)
                }
                getBuildSize(e) {
                    return m[e]
                }
            }
            D.displayName = "ApplicationBuildStore";
            var L = new D(l.default, {
                CONNECTION_OPEN: function() {
                    return R(216e5), N()
                },
                GAMES_DATABASE_UPDATE: function() {
                    if (!(0, h.isSupportedPlatform)()) return !1;
                    for (let e of g) {
                        let {
                            applicationId: t,
                            branchId: n
                        } = (0, p.convertComboId)(e), i = d.default.getGame(t);
                        null != i && (g.delete(e), v(t, n))
                    }
                },
                APPLICATION_BUILD_FETCH_START: function(e) {
                    let {
                        branchId: t
                    } = e;
                    S.add(t)
                },
                APPLICATION_BUILD_FETCH_SUCCESS: function(e) {
                    let {
                        applicationId: t,
                        branchId: n,
                        locale: i,
                        build: r
                    } = e;
                    S.delete(n);
                    let s = r.manifests.map(e => {
                            let {
                                id: t
                            } = e;
                            return t
                        }),
                        a = r.id;
                    I.delete(n), T[n] = {
                        id: a,
                        applicationId: t,
                        branchId: n,
                        locale: i,
                        manifestIds: s
                    }, v(t, n)
                },
                APPLICATION_BUILD_NOT_FOUND: function(e) {
                    let {
                        branchId: t
                    } = e;
                    S.delete(t), I.add(t)
                },
                APPLICATION_BUILD_SIZE_FETCH_START: function(e) {
                    let {
                        buildId: t
                    } = e;
                    !m.hasOwnProperty(t) && (m[t] = null)
                },
                APPLICATION_BUILD_SIZE_FETCH_SUCCESS: function(e) {
                    let {
                        buildId: t,
                        sizeKB: n
                    } = e;
                    m[t] = n
                },
                APPLICATION_BUILD_SIZE_FETCH_FAIL: function(e) {
                    let {
                        buildId: t
                    } = e;
                    null == m[t] && delete m[t]
                },
                APPLICATION_BRANCHES_FETCH_SUCCESS: function(e) {
                    let {
                        branches: t
                    } = e, n = {};
                    for (let e in _.default.libraryApplications) {
                        let t = _.default.libraryApplications[e];
                        n[t.branchId] = t
                    }
                    for (let e of t) {
                        let {
                            id: t,
                            liveBuildId: i
                        } = e, r = A[t];
                        if (i !== r) {
                            let e = n[t];
                            null != e && l.default.wait(() => u.fetchLiveBuild(e.id, e.branchId, !0))
                        }
                        A[t] = i
                    }
                    R(216e5)
                },
                APPLICATION_BRANCHES_FETCH_FAIL: function() {
                    R(6e5)
                },
                CONNECTION_CLOSED: O,
                LOGOUT: O,
                SKU_PURCHASE_SUCCESS: function(e) {
                    let {
                        entitlements: t
                    } = e;
                    if (!(0, h.isSupportedPlatform)()) return !1;
                    let n = new Set;
                    for (let e of t) n.add(e.application_id);
                    for (let e in _.default.libraryApplications) {
                        let t = _.default.libraryApplications[e];
                        n.has(t.id) && (0, p.isUserEntitledToLibraryApplication)(t) && l.default.wait(() => u.fetchLiveBuild(t.id, t.branchId))
                    }
                }
            })
        },
        552712: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var r = n("498225"),
                s = n("913144"),
                a = n("915639"),
                l = n("137406"),
                o = n("546463");
            let u = new Set,
                c = new Set,
                d = {},
                _ = {},
                E = {};

            function f(e) {
                d[e.id] = l.default.createFromServer(e)
            }

            function p(e) {
                u.delete(e.id), c.delete(e.id), f(e)
            }

            function h(e) {
                f(e.sku), null != e.child_skus && e.child_skus.forEach(e => f(e)), null != e.alternative_skus && e.alternative_skus.forEach(e => f(e))
            }

            function S(e) {
                let {
                    storeListings: t
                } = e;
                for (let e of t) h(e)
            }

            function T(e) {
                let {
                    entitlements: t
                } = e;
                for (let e of t) null != e.sku && f(e.sku)
            }

            function I() {
                u = new Set, c = new Set, d = {}, _ = {}, E = {}
            }

            function m() {
                if (i === a.default.locale) return !1;
                i = a.default.locale, I()
            }
            class g extends r.default.Store {
                initialize() {
                    this.waitFor(a.default, o.default), this.syncWith([a.default], m), i = a.default.locale
                }
                get(e) {
                    return d[e]
                }
                getForApplication(e) {
                    let t = _[e];
                    return null == t ? [] : Array.from(t).map(e => d[e])
                }
                isFetching(e) {
                    return u.has(e)
                }
                getSKUs() {
                    return d
                }
                didFetchingSkuFail(e) {
                    return c.has(e)
                }
            }
            g.displayName = "SKUStore";
            var A = new g(s.default, {
                STORE_LISTINGS_FETCH_SUCCESS: S,
                APPLICATION_STORE_DIRECTORY_FETCH_SUCCESS: S,
                STORE_LISTING_FETCH_SUCCESS: function(e) {
                    let {
                        storeListing: t
                    } = e;
                    h(t)
                },
                GIFT_CODE_RESOLVE_SUCCESS: function(e) {
                    let {
                        giftCode: t
                    } = e;
                    if (null == t.store_listing) return !1;
                    f(t.store_listing.sku)
                },
                SKU_FETCH_START: function(e) {
                    let {
                        skuId: t
                    } = e;
                    u.add(t)
                },
                SKU_FETCH_SUCCESS: function(e) {
                    let {
                        sku: t
                    } = e;
                    p(t)
                },
                SKU_FETCH_FAIL: function(e) {
                    let {
                        skuId: t
                    } = e;
                    u.delete(t), c.add(t)
                },
                SKUS_FETCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        applicationId: n,
                        skus: i
                    } = e;
                    for (let e of i) p(e);
                    null != t && (E[t] = new Set(i.map(e => e.id))), null != n && (_[n] = new Set(i.map(e => e.id)))
                },
                ENTITLEMENTS_GIFTABLE_FETCH_SUCCESS: T,
                APPLICATION_STORE_CLEAR_DATA: I,
                APPLICATION_SUBSCRIPTIONS_FETCH_ENTITLEMENTS_SUCCESS: T,
                ENTITLEMENTS_FETCH_FOR_USER_SUCCESS: T
            })
        },
        316133: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getComparator: function() {
                    return g
                },
                default: function() {
                    return O
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("498225"),
                a = n("810479"),
                l = n("913144"),
                o = n("766274"),
                u = n("271938"),
                c = n("42203"),
                d = n("26989"),
                _ = n("697218"),
                E = n("800762"),
                f = n("158998"),
                p = n("49111");
            let h = Object.freeze([]),
                S = {};

            function T(e) {
                let t = S[e];
                return null == t && (t = new C(e), S[e] = t), t
            }

            function I(e, t) {
                return d.default.getMember(e, t.id)
            }

            function m(e, t, n) {
                var i;
                let r = null !== (i = null == t ? void 0 : t.nick) && void 0 !== i ? i : f.default.getName(n);
                return {
                    member: t,
                    comparator: g(e, r)
                }
            }

            function g(e, t) {
                return "".concat(e.selfStream ? "\x00" : "\x01").concat(t.toLowerCase(), "\x00").concat(e.userId)
            }

            function A(e, t, n) {
                let i = _.default.getUser(n),
                    r = null == i;
                null == i && (i = new o.default({
                    id: n,
                    username: "...",
                    discriminator: n.slice(-5, -1)
                }));
                let {
                    member: s,
                    comparator: a
                } = function(e, t, n) {
                    let i = I(e, t);
                    return m(n, i, t)
                }(t, i, e), l = {
                    voiceState: e,
                    user: i,
                    member: s,
                    comparator: a,
                    nick: null == s ? void 0 : s.nick
                };
                return r && (l._isPlaceholder = !0), l
            }
            class C {
                updateVoiceState(e) {
                    if (null != this._pending) return this._pending.add(e), !1;
                    let t = E.default.getVoiceState(this.guildId, e),
                        n = this._voiceStates.get(e),
                        i = _.default.getUser(e);
                    if (null != t && null != i) {
                        if (null == n) return this._voiceStates.set(e, A(t, this.guildId, e)), !0;
                        if (n.voiceState !== t) {
                            var r;
                            let s = I(this.guildId, i),
                                a = null !== (r = null == s ? void 0 : s.nick) && void 0 !== r ? r : f.default.getName(i);
                            return this._voiceStates.set(e, {
                                ...n,
                                member: s,
                                comparator: g(t, a),
                                nick: a,
                                voiceState: t
                            }), !0
                        }
                    } else if (null != n) return this._voiceStates.delete(e), !0;
                    return !1
                }
                updateMember(e) {
                    if (null != this._pending) return this._pending.add(e), !1;
                    let t = this._voiceStates.get(e),
                        n = _.default.getUser(e);
                    if (null != t && null != n) {
                        var i, r;
                        let s = I(this.guildId, n);
                        if ((null == s ? void 0 : s.nick) !== (null === (i = t.member) || void 0 === i ? void 0 : i.nick) || (null == s ? void 0 : s.avatar) !== (null === (r = t.member) || void 0 === r ? void 0 : r.avatar)) {
                            let {
                                comparator: i
                            } = m(t.voiceState, s, n);
                            return this._voiceStates.set(e, {
                                ...t,
                                member: s,
                                comparator: i,
                                nick: null == s ? void 0 : s.nick
                            }), !0
                        }
                    }
                    return !1
                }
                updateUsers() {
                    return null == this._pending && this._voiceStates.values().reduce((e, t) => {
                        let n = _.default.getUser(t.user.id);
                        return null != n && t.user !== n ? (this._voiceStates.set(n.id, A(t.voiceState, this.guildId, n.id)), !0) : e
                    }, !1)
                }
                getUserIds() {
                    return this.processPending(), this._voiceStates.keys()
                }
                getVoiceStates() {
                    return this.processPending(), this._voiceStates.indexes()
                }
                getVoiceStatesForChannel(e) {
                    this.processPending();
                    let t = this._voiceStates.values(e);
                    return 0 === t.length ? h : t
                }
                countVoiceStatesForChannel(e) {
                    return this.processPending(), this._voiceStates.size(e)
                }
                getVersion() {
                    return this.processPending(), this._voiceStates.version
                }
                processPending() {
                    if (null != this._pending) {
                        let e = this._pending;
                        this._pending = void 0, e.forEach(e => this.updateVoiceState(e))
                    }
                }
                constructor(e) {
                    this._pending = new Set, this._voiceStates = new a.default(e => {
                        let {
                            voiceState: {
                                channelId: t
                            }
                        } = e;
                        return null != t ? [t] : []
                    }, e => {
                        let {
                            comparator: t
                        } = e;
                        return t
                    }), this.guildId = e
                }
            }

            function R() {
                return r.reduce(S, (e, t) => t.updateUsers() || e, !1)
            }

            function N() {
                S = {};
                let e = E.default.getAllVoiceStates();
                Object.keys(e).forEach(t => {
                    Object.keys(e[t]).forEach(e => {
                        T(null != t ? t : p.ME).updateVoiceState(e)
                    })
                })
            }
            class v extends s.default.Store {
                initialize() {
                    N(), this.waitFor(u.default, _.default, d.default, E.default), this.syncWith([_.default], R)
                }
                getVoiceStates(e) {
                    return T(null != e ? e : p.ME).getVoiceStates()
                }
                getAllVoiceStates() {
                    return S
                }
                getVoiceStatesForChannel(e) {
                    let t = e.getGuildId(),
                        n = e.id;
                    return T(null != t ? t : p.ME).getVoiceStatesForChannel(n)
                }
                getVoiceStatesForChannelAlt(e, t) {
                    return T(null != t ? t : p.ME).getVoiceStatesForChannel(e)
                }
                countVoiceStatesForChannel(e) {
                    let t = c.default.getChannel(e);
                    if (null == t) return 0;
                    let n = t.getGuildId();
                    return T(null != n ? n : p.ME).countVoiceStatesForChannel(e)
                }
                getVoiceStateVersion(e) {
                    return T(null != e ? e : p.ME).getVersion()
                }
            }
            v.displayName = "SortedVoiceStateStore";
            var O = new v(l.default, {
                CONNECTION_OPEN: function() {
                    S = {}
                },
                OVERLAY_INITIALIZE: function() {
                    N()
                },
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t
                    } = e, n = u.default.getId();
                    return null != n && T(null != t ? t : p.ME).updateVoiceState(n)
                },
                VOICE_STATE_UPDATES: function(e) {
                    let {
                        voiceStates: t
                    } = e;
                    return t.reduce((e, t) => {
                        let {
                            guildId: n,
                            userId: i
                        } = t;
                        return T(null != n ? n : p.ME).updateVoiceState(i) || e
                    }, !1)
                },
                GUILD_MEMBER_UPDATE: function(e) {
                    let {
                        guildId: t,
                        user: n
                    } = e;
                    return T(t).updateMember(n.id)
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    delete S[t.id]
                },
                GUILD_DELETE: function(e) {
                    let {
                        guild: t
                    } = e;
                    delete S[t.id]
                },
                PASSIVE_UPDATE_V1: function(e) {
                    var t, n;
                    let i = !1,
                        r = new Set(null === (t = S[e.guildId]) || void 0 === t ? void 0 : t.getUserIds()),
                        s = new Set(null === (n = e.voiceStates) || void 0 === n ? void 0 : n.map(e => e.userId)),
                        a = new Set([...r, ...s]);
                    for (let t of a) i = T(e.guildId).updateVoiceState(t) || i;
                    for (let t of s) r.has(t) && (i = T(e.guildId).updateMember(t) || i);
                    return i
                }
            })
        },
        144747: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("498225"),
                r = n("913144"),
                s = n("659500"),
                a = n("49111");
            let l = null,
                o = 0;

            function u() {
                l = null
            }
            class c extends i.default.Store {
                isOpen() {
                    return null != l
                }
                get version() {
                    return o
                }
                getContextMenu() {
                    return l
                }
                close() {
                    return !!this.isOpen() && (s.ComponentDispatch.dispatch(a.ComponentActions.CONTEXT_MENU_CLOSE), !0)
                }
            }
            c.displayName = "ContextMenuStore";
            var d = new c(r.default, {
                CONTEXT_MENU_OPEN: function(e) {
                    let {
                        contextMenu: t
                    } = e;
                    o++, l = t
                },
                LAYER_PUSH: u,
                CONTEXT_MENU_CLOSE: u,
                OVERLAY_SET_UI_LOCKED: u,
                OVERLAY_DEACTIVATE_ALL_REGIONS: u
            })
        },
        316661: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("498225"),
                r = n("913144");
            let s = null,
                a = !1;
            class l extends i.default.Store {
                getLastProgress() {
                    return s
                }
                isRunning() {
                    return a
                }
            }
            l.displayName = "DispatchApplicationLaunchSetupStore";
            var o = new l(r.default, {
                DISPATCH_APPLICATION_LAUNCH_SETUP_START: function() {
                    a = !0
                },
                DISPATCH_APPLICATION_INSTALL_SCRIPTS_PROGRESS_UPDATE: function(e) {
                    let {
                        progress: t,
                        total: n,
                        name: i
                    } = e;
                    s = {
                        progress: t,
                        total: n,
                        name: i
                    }
                },
                DISPATCH_APPLICATION_LAUNCH_SETUP_COMPLETE: function() {
                    s = null, a = !1
                }
            })
        },
        535974: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            });
            var i, r = n("427964"),
                s = n.n(r),
                a = n("498225"),
                l = n("913144"),
                o = n("49671"),
                u = n("70513"),
                c = n("271938"),
                d = n("686470"),
                _ = n("645672"),
                E = n("964889"),
                f = n("773336"),
                p = n("602043"),
                h = n("352326"),
                S = n("98328"),
                T = n("49111");
            (i || (i = {})).DISPATCH_APPLICATION_PROGRESS = "dispatch_application_progress";
            let I = {},
                m = "file://",
                g = !1,
                A = 0,
                C = 0,
                R = 0,
                N = [],
                v = [],
                O = [],
                D = !1;

            function L(e) {
                return e.type === T.LocalDispatchApplicationStates.INSTALLING || e.type === T.LocalDispatchApplicationStates.UPDATING || e.type === T.LocalDispatchApplicationStates.REPAIRING ? e.networkProgress : null
            }

            function M(e) {
                return e.type === T.LocalDispatchApplicationStates.INSTALLING || e.type === T.LocalDispatchApplicationStates.UPDATING || e.type === T.LocalDispatchApplicationStates.REPAIRING ? e.diskProgress : null
            }

            function P(e) {
                return e.type === T.LocalDispatchApplicationStates.INSTALLING || e.type === T.LocalDispatchApplicationStates.UPDATING || e.type === T.LocalDispatchApplicationStates.REPAIRING ? e.readerProgress : null
            }
            let b = s.throttle(function(e) {
                    v = (v = [{
                        bytes: e,
                        timestamp: Date.now()
                    }, ...v]).slice(0, 200)
                }, 200),
                y = s.throttle(function(e) {
                    let t = Date.now(),
                        n = t - 6e4;
                    N = (N = [{
                        bytes: e,
                        timestamp: t
                    }, ...N]).slice(0, 200).filter(e => {
                        let {
                            timestamp: t
                        } = e;
                        return t >= n
                    })
                }, 200),
                U = s.throttle(function(e) {
                    O = (O = [{
                        bytes: e,
                        timestamp: Date.now()
                    }, ...O]).slice(0, 200)
                }, 200);

            function G(e, t, n) {
                let i = n(I[t]),
                    r = n(e[t]);
                return null != i && null != r && 0 !== i ? Math.max(r - i, 0) : 0
            }
            class w extends a.default.Store {
                initialize() {
                    this.waitFor(c.default)
                }
                getState(e, t) {
                    let n = (0, E.getComboId)(e, t);
                    return I[n]
                }
                isUpToDate(e, t) {
                    let n = I[(0, E.getComboId)(e, t)];
                    return null != n && n.type === T.LocalDispatchApplicationStates.UP_TO_DATE
                }
                shouldPatch(e, t) {
                    let n = I[(0, E.getComboId)(e, t)];
                    return null != n && !0 === n.shouldPatch
                }
                isInstalled(e, t) {
                    let n = I[(0, E.getComboId)(e, t)];
                    return null != n ? n.type !== T.LocalDispatchApplicationStates.UNINSTALLING : S.default.shouldBeInstalled(e, t)
                }
                supportsCloudSync(e, t) {
                    null == t && (t = e);
                    let n = I[(0, E.getComboId)(e, t)];
                    return null != n && null != n.storage && !!n.storage.sync
                }
                isLaunchable(e, t) {
                    if (!(0, p.isSupportedPlatform)()) return !1;
                    let n = I[(0, E.getComboId)(e, t)];
                    return null != n && n.type === T.LocalDispatchApplicationStates.UP_TO_DATE && null != n.launchOptions && 0 !== n.launchOptions.length
                }
                getDefaultLaunchOption(e, t) {
                    let n = I[(0, E.getComboId)(e, t)];
                    if (null == n) return null;
                    let {
                        defaultLaunchOptionId: i,
                        launchOptions: r
                    } = n;
                    return null == i || null == r ? null : r[i]
                }
                getLaunchOptions(e, t) {
                    let n = I[(0, E.getComboId)(e, t)];
                    return null == n || null == n.launchOptions ? [] : Object.values(n.launchOptions)
                }
                getHistoricalTotalBytesRead() {
                    return N
                }
                getHistoricalTotalBytesDownloaded() {
                    return v
                }
                getHistoricalTotalBytesWritten() {
                    return O
                }
                whenInitialized(e) {
                    this.addConditionalChangeListener(() => {
                        if (g) return setImmediate(e), !1
                    })
                }
            }
            w.displayName = "DispatchApplicationStore";
            var x = new w(l.default, {
                CONNECTION_OPEN: function() {
                    g = !1
                },
                DISPATCH_APPLICATION_STATE_UPDATE: function(e) {
                    let {
                        state: t
                    } = e;
                    g = !0;
                    let n = {},
                        r = t.applications,
                        a = null != t.currentTask ? t.currentTask.branchId : null,
                        c = !1;
                    for (let e in r)
                        for (let t in r[e]) {
                            let p = (0, E.getComboId)(e, t);
                            if (n[p] = function(e) {
                                    let {
                                        build_id: t,
                                        target_build_id: n,
                                        manifest_ids: i,
                                        target_manifest_ids: r,
                                        application_id: a,
                                        branch_id: l,
                                        launch_commands: u,
                                        launch_options: c,
                                        storage: d,
                                        install_path: E,
                                        installed_size: p,
                                        repairing: h
                                    } = e, {
                                        should_patch: S
                                    } = e;
                                    switch (null == S && (S = !0), e.state.type) {
                                        case T.DispatchApplicationStates.COMPLETE: {
                                            let e;
                                            let g = {},
                                                A = null;
                                            if (h) e = T.LocalDispatchApplicationStates.REPAIRING;
                                            else if (null == t) e = T.LocalDispatchApplicationStates.INSTALL_REQUIRED;
                                            else if (S && (t !== n || null != i && 0 !== s.difference(i, r).length)) e = T.LocalDispatchApplicationStates.UPDATE_REQUIRED;
                                            else if (e = T.LocalDispatchApplicationStates.UP_TO_DATE, null != E) {
                                                let e = o.default.fileManager.join(E, "content"),
                                                    t = (0, _.getBuildPlatform)();
                                                if (null != c && 0 !== c.length) {
                                                    var I;
                                                    if (t === T.BuildPlatformTypes.WIN64 && (I = t, !c.some(e => e.platforms.includes(I)))) t = T.BuildPlatformTypes.WIN32;
                                                    for (let n of c)
                                                        if (n.platforms.includes(t)) {
                                                            let t;
                                                            let {
                                                                executable: i,
                                                                name: r,
                                                                working_dir: s
                                                            } = n, a = o.default.fileManager.join(e, i);
                                                            (0, f.isMac)() && !a.startsWith(m) && (a = "".concat(m).concat(a)), t = null != s ? o.default.fileManager.join(e, s) : o.default.fileManager.dirname(a), g[r] = {
                                                                ...n,
                                                                id: r,
                                                                fullExecutablePath: a,
                                                                fullWorkingDir: t
                                                            }, null == A && (A = r)
                                                        }
                                                } else if (null != u) {
                                                    t === T.BuildPlatformTypes.WIN64 && null == u[t] && (t = T.BuildPlatformTypes.WIN32);
                                                    let n = u[t];
                                                    if (null != n) {
                                                        let {
                                                            executable: i
                                                        } = n, r = "Default";
                                                        g[r] = {
                                                            ...n,
                                                            name: r,
                                                            id: r,
                                                            fullExecutablePath: o.default.fileManager.join(e, i),
                                                            fullWorkingDir: e,
                                                            platforms: [t]
                                                        }, A = r
                                                    }
                                                }
                                            }
                                            return {
                                                type: e,
                                                applicationId: a,
                                                branchId: l,
                                                buildId: t,
                                                manifestIds: i,
                                                targetBuildId: n,
                                                targetManifestIds: r,
                                                installPath: E,
                                                installedSize: p,
                                                launchOptions: g,
                                                defaultLaunchOptionId: A,
                                                shouldPatch: S,
                                                storage: d
                                            }
                                        }
                                        case T.DispatchApplicationStates.TRANSITION: {
                                            let s;
                                            let {
                                                stage: o,
                                                disk_progress: u,
                                                network_progress: c,
                                                reader_progress: d,
                                                progress: _,
                                                total: f,
                                                paused: I
                                            } = e.state, m = o.type;
                                            return {
                                                type: s = m === T.DispatchApplicationStages.UNINSTALLING ? T.LocalDispatchApplicationStates.UNINSTALLING : h ? T.LocalDispatchApplicationStates.REPAIRING : null == t ? T.LocalDispatchApplicationStates.INSTALLING : T.LocalDispatchApplicationStates.UPDATING,
                                                stage: m,
                                                applicationId: a,
                                                branchId: l,
                                                buildId: t,
                                                manifestIds: i,
                                                targetBuildId: n,
                                                targetManifestIds: r,
                                                installPath: E,
                                                installedSize: p,
                                                diskProgress: u,
                                                networkProgress: c,
                                                readerProgress: d,
                                                progress: _,
                                                total: f,
                                                paused: I,
                                                shouldPatch: S
                                            }
                                        }
                                    }
                                    throw Error("Invalid Dispatch State. state=".concat(e.state.type))
                                }(r[e][t]), null != I[p]) {
                                let e = G(n, p, L);
                                e > 0 && b(A += e);
                                let r = G(n, p, M);
                                r > 0 && U(C += r);
                                let s = G(n, p, P);
                                if (s > 0 && y(R += s), a === t) {
                                    let e = n[p];
                                    if (!0 !== e.paused && (e.type === T.LocalDispatchApplicationStates.UNINSTALLING || e.type === T.LocalDispatchApplicationStates.INSTALLING || e.type === T.LocalDispatchApplicationStates.UPDATING)) switch (e.stage) {
                                        case T.DispatchApplicationStages.PATCHING:
                                        case T.DispatchApplicationStages.FINALIZING:
                                        case T.DispatchApplicationStages.VERIFYING:
                                        case T.DispatchApplicationStages.REPAIRING:
                                        case T.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
                                            u.default.setProgress(i.DISPATCH_APPLICATION_PROGRESS, (0, E.calculateProgressPercentage)(e.progress, e.total) / 100), c = !0
                                    }
                                }
                            }
                            if (!D) {
                                let i = o.default.fileManager.dirname(n[p].installPath);
                                S.default.getInstallationPath(e, t) !== i && l.default.wait(() => {
                                    l.default.dispatch({
                                        type: "DISPATCH_APPLICATION_ADD_TO_INSTALLATIONS",
                                        applicationId: e,
                                        branchId: t,
                                        installationPath: i
                                    })
                                }), -1 === h.default.getQueuePosition(e, t) && (n[p].type === T.LocalDispatchApplicationStates.INSTALLING || n[p].type === T.LocalDispatchApplicationStates.UPDATING) && d.default.hasApplication(e, t) && S.default.shouldBeInstalled(e, t) && l.default.wait(() => {
                                    l.default.dispatch({
                                        type: "DISPATCH_APPLICATION_UPDATE",
                                        applicationId: e,
                                        branchId: t,
                                        automatic: !0
                                    })
                                })
                            }
                        }!c && u.default.taskID === i.DISPATCH_APPLICATION_PROGRESS && u.default.clearProgress(i.DISPATCH_APPLICATION_PROGRESS), I = n, D = !0
                }
            })
        },
        352326: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return H
                }
            });
            var i, r, s, a, l = n("427964"),
                o = n.n(l),
                u = n("498225"),
                c = n("173333"),
                d = n("913144"),
                _ = n("190017"),
                E = n("271938"),
                f = n("568307"),
                p = n("677225"),
                h = n("964889"),
                S = n("152723"),
                T = n("773336"),
                I = n("535974"),
                m = n("49111");
            (i = s || (s = {})).INSTALL = "Install", i.REPAIR = "Repair", (r = a || (a = {})).PATCH = "Patch", r.REPAIR = "Repair";
            let g = [m.DispatchErrorCodes.AUTHENTICATION_FAILED, m.DispatchErrorCodes.NOT_ENTITLED],
                A = "DispatchManagerStore",
                C = [],
                R = [],
                N = !1,
                v = null,
                O = null,
                D = !1,
                L = new Map,
                M = !1,
                P = null;

            function b() {
                let e = {
                    queue: C,
                    paused: N,
                    userActions: Array.from(L)
                };
                c.default.set(A, e)
            }

            function y() {
                let e = C[0];
                if (null != e) {
                    var t, n;
                    let {
                        comboId: i,
                        action: r
                    } = e, {
                        applicationId: s,
                        branchId: a
                    } = (0, h.convertComboId)(i);
                    if (t = s, n = a, (null == v || v.applicationId !== t || v.branchId !== n) && (null == O || O.applicationId !== t || O.branchId !== n)) {
                        let e = E.default.getToken(),
                            t = E.default.getId();
                        if (null == e) throw Error("missing user token");
                        M = !S.default.setCurrentTask(s, a, r, t, e)
                    }
                }
            }

            function U(e, t) {
                let n = (0, h.getComboId)(e, t);
                return C.findIndex(e => e.comboId === n)
            }

            function G(e, t, n, i) {
                let r = (0, h.getComboId)(e, t),
                    s = {
                        comboId: r,
                        action: i
                    },
                    a = R.indexOf(r); - 1 !== a && R.splice(a, 1);
                let l = U(e, t);
                0 !== l && (n ? -1 === l && (C.push(s), y()) : (l > 0 && C.splice(l, 1), C.unshift(s), y())), !n && N && S.default.resume(), b()
            }

            function w(e, t) {
                let n = (0, h.getComboId)(e, t),
                    i = R.indexOf(n); - 1 !== i && R.splice(i, 1);
                let r = U(e, t); - 1 !== r && (C.splice(r, 1), b()), y()
            }

            function x(e) {
                let {
                    applicationId: t,
                    branchId: n
                } = e;
                w(t, n)
            }

            function k(e) {
                let {
                    applicationId: t,
                    branchId: n
                } = e, i = (0, h.getComboId)(t, n), r = R.indexOf(i); - 1 !== r && R.splice(r, 1)
            }

            function F() {
                let e = E.default.getToken(),
                    t = E.default.getId();
                null != e && S.default.setCredentials(t, e)
            }

            function B() {
                for (let e of f.default.getRunningDiscordApplicationIds()) _.cancel(e, e);
                let e = f.default.getVisibleGame();
                return !N && null != e && e.pid !== P && _.pause(), P = null == e ? null : e.pid, !1
            }
            class V extends u.default.Store {
                initialize() {
                    var e;
                    let t = null !== (e = c.default.get(A)) && void 0 !== e ? e : {
                        queue: null,
                        paused: null,
                        userActions: null
                    };
                    if (null != t.queue) C = t.queue.map(e => "string" == typeof e ? {
                        comboId: e,
                        action: a.PATCH
                    } : e);
                    null != t.paused && (N = t.paused), null != t.userActions && (L = new Map(Array.from(t.userActions))), this.waitFor(I.default, f.default), this.syncWith([f.default], B), this.waitFor(I.default)
                }
                get activeItems() {
                    return C.map(e => {
                        let {
                            comboId: t
                        } = e;
                        return (0, h.convertComboId)(t)
                    })
                }
                get finishedItems() {
                    return R.map(h.convertComboId)
                }
                get paused() {
                    return N
                }
                getQueuePosition(e, t) {
                    return U(e, t)
                }
                isCorruptInstallation() {
                    return M
                }
            }
            V.displayName = "DispatchManagerStore";
            var H = new V(d.default, {
                DISPATCH_APPLICATION_INSTALL: function(e) {
                    let {
                        applicationId: t,
                        branchId: n
                    } = e;
                    L.set((0, h.getComboId)(t, n), s.INSTALL), G(t, n, !1, a.PATCH)
                },
                DISPATCH_APPLICATION_UPDATE: function(e) {
                    let {
                        applicationId: t,
                        branchId: n,
                        automatic: i
                    } = e;
                    G(t, n, i, a.PATCH)
                },
                DISPATCH_APPLICATION_UNINSTALL: function(e) {
                    x(e), k(e)
                },
                DISPATCH_APPLICATION_CANCEL: x,
                DISPATCH_APPLICATION_REPAIR: function(e) {
                    let {
                        applicationId: t,
                        branchId: n
                    } = e;
                    L.set((0, h.getComboId)(t, n), s.REPAIR), G(t, n, !1, a.REPAIR)
                },
                DISPATCH_APPLICATION_MOVE_UP: function(e) {
                    let {
                        applicationId: t,
                        branchId: n
                    } = e, i = U(t, n);
                    if (i < 1) return !1;
                    C.splice(0, 0, C.splice(i, 1)[0]), y(), N && S.default.resume(), b()
                },
                DISPATCH_APPLICATION_REMOVE_FINISHED: k,
                DISPATCH_APPLICATION_STATE_UPDATE: function(e) {
                    let {
                        state: t
                    } = e;
                    !D && (D = !0, y(), !N && S.default.resume());
                    let n = N;
                    N = t.paused, v = t.currentTask, O = t.nextTask;
                    let i = !1;
                    C = C.filter(e => {
                        let {
                            comboId: t
                        } = e, {
                            applicationId: n,
                            branchId: r
                        } = (0, h.convertComboId)(t), a = I.default.getState(n, r), l = p.default.getTargetBuildId(n, r), u = p.default.getTargetManifests(n, r);
                        if (null != a && a.type === m.LocalDispatchApplicationStates.UP_TO_DATE && a.buildId === a.targetBuildId && a.buildId === l && o.isEqual(a.manifestIds, a.targetManifestIds) && o.isEqual(a.manifestIds, u)) {
                            if (R.push(t), L.has(t)) {
                                let e = L.get(t);
                                switch (e) {
                                    case s.INSTALL:
                                        _.completeInstall(n, a);
                                        break;
                                    case s.REPAIR:
                                        _.completeRepair(n, a)
                                }
                                L.delete(t)
                            }
                            return i = !0, !1
                        }
                        return !0
                    }), y(), (i || n !== N) && b()
                },
                DISPATCH_APPLICATION_ERROR: function(e) {
                    let {
                        error: t
                    } = e, {
                        code: n
                    } = t;
                    if (null != n) {
                        if (g.includes(n)) F();
                        else if (n === m.DispatchErrorCodes.APPLICATION_NOT_FOUND) {
                            let {
                                context: e
                            } = t;
                            if (null != e) {
                                let {
                                    application_id: t,
                                    branch_id: n
                                } = e;
                                w(t, n)
                            }
                        }
                    }
                },
                CONNECTION_OPEN: function() {
                    (0, T.isDesktop)() && F()
                },
                LOGOUT: function() {
                    c.default.remove(A), (0, T.isDesktop)() && S.default.pause()
                }
            })
        },
        98328: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var r = n("498225"),
                s = n("913144"),
                a = n("49671"),
                l = n("773336"),
                o = n("535974"),
                u = n("782340");
            let c = {},
                d = (0, l.isWindows)() ? "".concat(a.default.process.env.LOCALAPPDATA, "\\DiscordGames") : (0, l.isMac)() ? "/Applications/DiscordGames" : "/tmp";

            function _(e, t) {
                var n;
                c = {
                    ...c,
                    [e]: {
                        ...null !== (n = c[e]) && void 0 !== n ? n : {},
                        ...t
                    }
                }
            }

            function E(e) {
                let {
                    applicationId: t,
                    branchId: n,
                    installationPath: r
                } = e;
                null == i.installations[t] && (i.installations[t] = {}), i.installations[t][n] = {
                    installationPath: r
                }, !i.installationPaths.has(r) && p({
                    path: r,
                    metadata: {}
                })
            }

            function f(e) {
                let {
                    applicationId: t,
                    branchId: n
                } = e;
                if (null == i.installations[t]) return !1;
                delete i.installations[t][n], 0 === Object.keys(i.installations[t]).length && delete i.installations[t]
            }

            function p(e) {
                if (i.installationPaths.has(e.path)) return !1;
                _(e.path, e.metadata);
                let t = new Set(i.installationPaths);
                t.add(e.path), i.installationPaths = t
            }
            class h extends r.default.PersistedStore {
                initialize(e) {
                    let t = {
                        ...e
                    };
                    null == t.installations && (t.installations = {}), null == t.defaultInstallationPath && (t.defaultInstallationPath = d), null == t.installationPaths ? t.installationPaths = new Set([t.defaultInstallationPath]) : t.installationPaths = new Set(Array.from(t.installationPaths)), null == t.pathLabels && (t.pathLabels = {}), i = t
                }
                getState() {
                    return i
                }
                get defaultInstallationPath() {
                    return i.defaultInstallationPath
                }
                get installationPaths() {
                    return Array.from(i.installationPaths).map(e => ({
                        path: e,
                        label: i.pathLabels[e]
                    }))
                }
                get installationPathsMetadata() {
                    return c
                }
                hasGamesInstalledInPath(e) {
                    let {
                        installations: t
                    } = i;
                    for (let n in t)
                        for (let i in t[n])
                            if (t[n][i].installationPath === e) return !0;
                    return !1
                }
                shouldBeInstalled(e, t) {
                    return null != i.installations[e] && null != i.installations[e][t]
                }
                getInstallationPath(e, t) {
                    return null == i.installations[e] || null == i.installations[e][t] ? null : i.installations[e][t].installationPath
                }
                getLabelFromPath(e) {
                    var t, n;
                    return e === d ? u.default.Messages.INSTALL_LOCATION_MAIN : null !== (n = null !== (t = a.default.fileManager.basename(e)) && void 0 !== t ? t : e.replace(/[/\\]+$/, "").split(/[/\\]+/g).slice(-1)[0]) && void 0 !== n ? n : "?"
                }
            }
            h.displayName = "InstallationManagerStore", h.persistKey = "InstallationManagerStore";
            var S = new h(s.default, {
                DISPATCH_APPLICATION_INSTALL: E,
                DISPATCH_APPLICATION_UNINSTALL: f,
                DISPATCH_APPLICATION_CANCEL: function(e) {
                    let {
                        applicationId: t,
                        branchId: n
                    } = e, i = o.default.getState(t, n);
                    null != i && null == i.buildId && null == i.manifestIds && f({
                        applicationId: t,
                        branchId: n
                    })
                },
                INSTALLATION_LOCATION_ADD: p,
                INSTALLATION_LOCATION_REMOVE: function(e) {
                    var t;
                    let {
                        path: n
                    } = e;
                    if (!i.installationPaths.has(n) || i.defaultInstallationPath === n) return !1;
                    let r = new Set(i.installationPaths);
                    r.delete(n), i.installationPaths = r, t = n, c = {
                        ...c
                    }, delete c[t], ! function(e) {
                        if (null == i.pathLabels[e]) return;
                        i.pathLabels = {
                            ...i.pathLabels
                        }, delete i.pathLabels[e]
                    }(n)
                },
                INSTALLATION_LOCATION_UPDATE: function(e) {
                    let {
                        path: t,
                        label: n,
                        isDefault: r
                    } = e;
                    if (!i.installationPaths.has(t)) return !1;
                    if (null != n && "" !== n && i.pathLabels[t] !== n) {
                        var s, a;
                        s = t, a = n, i.pathLabels = {
                            ...i.pathLabels,
                            [s]: a
                        }
                    }
                    r && i.defaultInstallationPath !== t && (i.defaultInstallationPath = t)
                },
                INSTALLATION_LOCATION_FETCH_METADATA: function(e) {
                    let {
                        metadataPayload: t
                    } = e;
                    for (let e in t) _(e, t[e])
                },
                DISPATCH_APPLICATION_ADD_TO_INSTALLATIONS: E
            })
        },
        892974: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BackdropStyles: function() {
                    return r
                },
                default: function() {
                    return T
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("623829"),
                c = n("84339"),
                d = n("449918"),
                _ = n("49111"),
                E = n("38273");
            (i = r || (r = {})).SUBTLE = "SUBTLE", i.DARK = "DARK", i.LIGHT = "LIGHT", i.SOLID = "SOLID";
            let f = {
                    SUBTLE: .25,
                    DARK: .85,
                    LIGHT: .95,
                    SOLID: 1
                },
                p = {
                    LIGHT: _.Color.WHITE_500,
                    DARK: _.Color.BLACK_500,
                    SUBTLE: _.Color.BLACK_500,
                    SOLID: _.Color.PRIMARY_630
                };

            function h(e) {
                return (0, d.getColor)(p[e])
            }
            let S = a.forwardRef(function(e, t) {
                let {
                    backdropStyle: n = r.SUBTLE,
                    backdropInstant: i = !1,
                    zIndexBoost: a = 0,
                    LayerComponent: l,
                    isVisible: d,
                    onClose: _
                } = e, p = {
                    opacity: 0,
                    background: h(n)
                }, S = {
                    opacity: f[n],
                    background: h(n)
                }, T = (0, c.default)(i), I = (0, u.useTransition)(d, {
                    keys: e => e ? "backdrop" : "empty",
                    config: {
                        duration: i || T ? 0 : 300
                    },
                    from: p,
                    enter: S,
                    leave: p
                });
                if (null == l) {
                    let e = {
                        zIndex: 1e3 + a
                    };
                    return I((t, n) => n ? (0, s.jsx)(u.animated.div, {
                        className: E.backdrop,
                        style: {
                            ...t,
                            ...e
                        },
                        onClick: _
                    }) : null)
                }
                return (0, s.jsx)(l, {
                    children: I((e, t) => t ? (0, s.jsx)(u.animated.div, {
                        className: o(E.backdrop, E.withLayer),
                        style: e,
                        onClick: _
                    }) : null)
                })
            });
            var T = S
        },
        201959: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("377849"),
                a = n.n(s),
                l = n("223233"),
                o = n.n(l),
                u = n("498225"),
                c = n("915639");
            n("864035");
            var d = n("757740");

            function _(e) {
                let {
                    value: t = a().local(),
                    minDate: n,
                    maxDate: s,
                    onSelect: l,
                    calendarClassName: _,
                    autoFocus: E,
                    onClickOutside: f
                } = e, p = r.useCallback((e, t) => {
                    null == l || l(a(e), t)
                }, [l]), h = r.useMemo(() => t.toDate(), [t]), S = r.useMemo(() => null == s ? void 0 : s.toDate(), [s]), T = r.useMemo(() => null == n ? void 0 : n.toDate(), [n]), I = (0, u.useStateFromStores)([c.default], () => c.default.locale), m = r.useRef(null), g = r.useCallback(e => {
                    let t = e.currentTarget;
                    t.classList.contains("react-datepicker__day") && setTimeout(() => {
                        var e, n;
                        if (null === (e = m.current) || void 0 === e ? void 0 : e.contains(t)) return;
                        let i = null === (n = m.current) || void 0 === n ? void 0 : n.querySelector('.react-datepicker__day[tabindex="0"]');
                        null != i && i.focus()
                    }, 100)
                }, []);
                return (0, i.jsx)("div", {
                    ref: m,
                    className: d.calendarPicker,
                    children: (0, i.jsx)(o, {
                        calendarClassName: _,
                        selected: h,
                        onChange: p,
                        autoFocus: E,
                        fixedHeight: !0,
                        inline: !0,
                        locale: I,
                        maxDate: S,
                        minDate: T,
                        onKeyDown: g,
                        onClickOutside: f
                    })
                })
            }
        },
        491605: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("638800");
            (i = r || (r = {})).SVG = "svg", i.CANVAS = "canvas", i.HYBRID = "hybrid";
            class o extends a.Component {
                componentDidMount() {
                    (null == this.props.versionKey || !(this.props.versionKey < 0)) && this.loadAnimation()
                }
                componentDidUpdate(e) {
                    (null == this.props.versionKey || !(this.props.versionKey < 0)) && (null != this.props.versionKey && null != e.versionKey && this.props.versionKey > e.versionKey ? this.loadAnimation() : this.playOrPauseAnimation(e))
                }
                componentWillUnmount() {
                    null != this.animation && (this.animation.stop(), this.animation.destroy(), this.animation = null), this.delayTimeout.stop()
                }
                playOrPauseAnimation(e) {
                    null != this.animation && (this.props.shouldAnimate && (null == e || !e.shouldAnimate) ? this.props.resetOnPlay ? this.animation.goToAndPlay(0) : this.animation.play() : !this.props.shouldAnimate && (null == e || e.shouldAnimate) && (this.animation.pause(), null != this.props.pauseAtFrame && this.animation.goToAndStop(this.props.pauseAtFrame, !0)))
                }
                render() {
                    return (0, s.jsx)("div", {
                        className: this.props.className,
                        ref: this.animationRef
                    })
                }
                constructor(...e) {
                    super(...e), this.animationRef = a.createRef(), this.delayTimeout = new l.Timeout, this.loadAnimation = async () => {
                        let {
                            importData: e,
                            loop: t,
                            autoplay: i,
                            delay: r,
                            renderer: s,
                            shouldAnimate: a
                        } = this.props;
                        null != this.animation && this.animation.destroy();
                        let [l, {
                            default: o
                        }] = await Promise.all([e(), n.el("552280").then(n.t.bind(n, "552280", 21))]);
                        null != this.animationRef.current && (this.animation = o.loadAnimation({
                            container: this.animationRef.current,
                            renderer: s,
                            loop: t,
                            autoplay: i && null == r && a,
                            animationData: l
                        }), null != r ? this.delayTimeout.start(r, () => {
                            var e;
                            null === (e = this.animation) || void 0 === e || e.play()
                        }) : this.playOrPauseAnimation(), this.animation.addEventListener("complete", this.handleComplete))
                    }, this.handleComplete = () => {
                        let {
                            onComplete: e
                        } = this.props;
                        null != e && e()
                    }
                }
            }
            o.defaultProps = {
                loop: !0,
                autoplay: !0,
                renderer: "svg",
                shouldAnimate: !0,
                resetOnPlay: !1
            }, o.Renderers = r;
            var u = o
        },
        886074: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("744196"),
                l = n("206230"),
                o = n("491605"),
                u = n("2361");

            function c(e) {
                let {
                    className: t
                } = e, r = (0, a.default)([l.default], () => l.default.useReducedMotion);
                async function c() {
                    let {
                        default: e
                    } = await n.el("492013").then(n.t.bind(n, "492013", 19));
                    return e
                }
                return (0, i.jsx)(o.default, {
                    importData: c,
                    shouldAnimate: !r,
                    className: s(u.sparkles, t)
                })
            }
        },
        810567: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("227645"),
                o = n("718776"),
                u = n("242670"),
                c = n("945330"),
                d = n("229915"),
                _ = n("782340"),
                E = n("14288");
            let f = Object.freeze({
                    SMALL: E.small,
                    MEDIUM: E.medium,
                    LARGE: E.large
                }),
                p = e => {
                    let {
                        hasContent: t,
                        onClear: n,
                        className: s,
                        isLoading: o,
                        size: p = f.SMALL
                    } = e;
                    return (0, i.jsx)(l.Clickable, {
                        className: a(s, E.iconLayout, p, {
                            [E.pointer]: t
                        }),
                        onClick: e => {
                            e.stopPropagation(), null != n && n(e)
                        },
                        tabIndex: t ? 0 : -1,
                        "aria-hidden": !t,
                        onMouseDown: e => {
                            e.preventDefault(), e.stopPropagation()
                        },
                        children: (0, i.jsx)("div", {
                            className: E.iconContainer,
                            children: o ? (0, i.jsx)(u.Spinner, {
                                type: u.Spinner.Type.SPINNING_CIRCLE,
                                className: a(E.icon, E.visible)
                            }) : (0, i.jsxs)(r.Fragment, {
                                children: [(0, i.jsx)(d.default, {
                                    className: a(E.icon, {
                                        [E.visible]: !t
                                    }),
                                    "aria-label": _.default.Messages.SEARCH
                                }), (0, i.jsx)(c.default, {
                                    className: a(E.clear, {
                                        [E.visible]: t
                                    }),
                                    "aria-label": _.default.Messages.CLEAR
                                })]
                            })
                        })
                    })
                };
            p.Sizes = f;
            class h extends r.PureComponent {
                focus() {
                    let {
                        current: e
                    } = this.inputRef;
                    null == e || e.focus()
                }
                blur() {
                    let {
                        current: e
                    } = this.inputRef;
                    null == e || e.blur()
                }
                render() {
                    let {
                        query: e,
                        autoFocus: t,
                        onClear: n,
                        className: r,
                        placeholder: s = _.default.Messages.SEARCH,
                        iconClassName: l,
                        onKeyDown: u,
                        onKeyUp: c,
                        onKeyPress: d,
                        isLoading: f,
                        size: h,
                        disabled: S,
                        onChange: T,
                        onBlur: I,
                        onFocus: m,
                        autoComplete: g,
                        inputProps: A,
                        hideSearchIcon: C,
                        "aria-label": R = _.default.Messages.SEARCH,
                        ...N
                    } = this.props;
                    return (0, i.jsx)(o.FocusRing, {
                        focusTarget: this.inputRef,
                        ringTarget: this.containerRef,
                        children: (0, i.jsx)("div", {
                            className: a(r, E.container, h, {
                                [E.disabled]: S
                            }),
                            ref: this.containerRef,
                            ...N,
                            children: (0, i.jsxs)("div", {
                                className: E.inner,
                                children: [(0, i.jsx)("input", {
                                    ...A,
                                    onFocus: m,
                                    onBlur: I,
                                    className: E.input,
                                    value: e,
                                    onChange: this.handleOnChange,
                                    onKeyDown: u,
                                    onKeyUp: c,
                                    onKeyPress: d,
                                    placeholder: s,
                                    disabled: S,
                                    autoFocus: t,
                                    autoComplete: g,
                                    "aria-label": R,
                                    ref: this.inputRef
                                }), !C && (0, i.jsx)(p, {
                                    size: h,
                                    hasContent: e.length > 0,
                                    onClear: n,
                                    className: l,
                                    isLoading: f
                                })]
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.inputRef = r.createRef(), this.containerRef = r.createRef(), this.handleOnChange = e => {
                        let {
                            onChange: t
                        } = this.props;
                        null == t || t(e.currentTarget.value)
                    }
                }
            }
            h.Sizes = f, h.defaultProps = {
                size: f.SMALL,
                isLoading: !1,
                disabled: !1
            };
            var S = h
        },
        529e3: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("427964"),
                o = n.n(l),
                u = n("253824"),
                c = n("912557"),
                d = n("718776"),
                _ = n("145131"),
                E = n("36694"),
                f = n("49111"),
                p = n("734389"),
                h = n("84811");
            let S = o.memoize(e => {
                let t = !1;
                if (null != e && (0, u.isValidHex)(e)) {
                    let n = (0, u.hex2int)(e);
                    null != n && (t = .2 > (0, u.getDarkness)(n))
                }
                return t ? c.default.unsafe_rawColors.BLACK_500.css : c.default.unsafe_rawColors.WHITE_500.css
            });
            class T extends r.PureComponent {
                render() {
                    let e;
                    let {
                        selected: t,
                        color: n,
                        className: r,
                        children: s
                    } = this.props, l = S(n);
                    return t ? e = {
                        color: l,
                        background: null != n ? n : c.default.unsafe_rawColors.BRAND_500.css
                    } : null != n && (e = {
                        color: n
                    }), (0, i.jsx)(d.FocusRing, {
                        offset: {
                            left: 4
                        },
                        children: (0, i.jsxs)(_.default, {
                            className: a(p.selectableItem, r, {
                                [p.selected]: t
                            }),
                            onClick: this.handleClick,
                            onKeyUp: this.handleKeyUp,
                            align: _.default.Align.CENTER,
                            style: {
                                ...e,
                                ...this.props.style
                            },
                            role: "button",
                            tabIndex: 0,
                            children: [(0, i.jsx)(_.default, {
                                align: _.default.Align.CENTER,
                                className: p.selectableItemLabel,
                                shrink: 1,
                                children: s
                            }), t && (0, i.jsx)(_.default, {
                                wrap: _.default.Wrap.WRAP,
                                className: h.marginReset,
                                grow: 0,
                                shrink: 0,
                                children: (0, i.jsx)(E.default, {
                                    color: l
                                })
                            })]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        color: S(this.props.color)
                    }, this.handleKeyUp = e => {
                        if (e.which === f.KeyboardKeys.ENTER || e.which === f.KeyboardKeys.SPACE) {
                            let {
                                onClick: e,
                                ...t
                            } = this.props;
                            e(t)
                        }
                    }, this.handleClick = () => {
                        let {
                            onClick: e,
                            ...t
                        } = this.props;
                        e(t)
                    }
                }
            }
            var I = T
        },
        124299: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("575482"),
                a = n.n(s),
                l = n("446662"),
                o = n("768078");
            let u = r.memo(r.forwardRef((e, t) => {
                var n, s, u;
                let {
                    onScroll: c,
                    onResize: d,
                    listPadding: _ = [0, 0, 0, 0],
                    renderRow: E,
                    renderSection: f,
                    renderSectionHeader: p,
                    renderSectionFooter: h,
                    renderListHeader: S,
                    rowCount: T,
                    rowCountBySection: I,
                    rowHeight: m,
                    sectionMarginBottom: g,
                    sectionHeaderHeight: A,
                    sectionFooterHeight: C,
                    listHeaderHeight: R,
                    stickyHeaders: N = !1,
                    className: v,
                    hideScrollbar: O = !1,
                    fade: D = !1,
                    initialScrollTop: L = 0,
                    role: M = "list"
                } = e, [P, b] = r.useState(-1), [y, U] = r.useState(-1), G = r.useRef(null), w = r.useRef(0), x = r.useRef(-1);
                r.useLayoutEffect(() => {
                    var e;
                    let t = null === (e = G.current) || void 0 === e ? void 0 : e.getScrollerNode();
                    null != t && (t.scrollTop = L)
                }, []);
                let k = r.useCallback(() => {
                        let e = "function" == typeof R ? R() : R;
                        return null == e ? 0 : e
                    }, [R]),
                    F = r.useCallback((e, t, n) => "function" == typeof m ? m(n, {
                        sectionIndex: e,
                        sectionRowIndex: t
                    }) : m, [m]),
                    B = r.useCallback(e => {
                        let t = "function" == typeof A ? A(e) : A;
                        return null == t ? 0 : t
                    }, [A]),
                    V = r.useCallback(e => {
                        let t = "function" == typeof C ? C(e) : C;
                        return null == t ? 0 : t
                    }, [C]),
                    H = r.useCallback(e => {
                        let t = "function" == typeof g ? g(e) : g;
                        return null == t ? 0 : t
                    }, [g]),
                    j = r.useRef([]),
                    Y = r.useRef([]),
                    {
                        totalHeight: W,
                        rowDescriptors: K,
                        sectionDescriptors: z
                    } = r.useMemo(() => {
                        let e = 0,
                            t = null != I,
                            n = t ? I.length : 1,
                            i = _[0],
                            r = [],
                            s = [];
                        i += k();
                        for (let a = 0; a < n; a++) {
                            let n = t ? I[a] : T,
                                l = (null == I ? void 0 : I[a]) !== 0;
                            s[a] = {
                                firstRowIndex: e,
                                offset: {
                                    top: i,
                                    bottom: -1
                                }
                            }, i += B(a);
                            for (let t = 0; t < n; t++) {
                                let n = l ? F(a, t, e) : 0,
                                    s = i + n,
                                    o = {
                                        top: i,
                                        bottom: s
                                    };
                                r[e] = {
                                    sectionIndex: a,
                                    offset: o
                                }, i = s, e++
                            }
                            i += V(a) + H(a), s[a].offset.bottom = i
                        }
                        return {
                            totalHeight: i += _[2],
                            rowDescriptors: r,
                            sectionDescriptors: s
                        }
                    }, [F, V, B, H, _, T, I, k]);
                j.current = z, Y.current = K;
                let Z = r.useCallback(() => {
                    var e;
                    let t = null === (e = G.current) || void 0 === e ? void 0 : e.getScrollerNode();
                    if (null == t) return;
                    let {
                        offsetWidth: n,
                        offsetHeight: i,
                        scrollTop: r
                    } = t;
                    U(i), b(r), null == d || d({
                        width: n,
                        height: i
                    })
                }, [d]);
                r.useLayoutEffect(() => {
                    -1 === y && Z()
                }, [y, Z]), r.useEffect(() => {
                    var e;
                    let t = null === (e = G.current) || void 0 === e ? void 0 : e.getScrollerNode(),
                        n = null == t ? void 0 : t.ownerDocument.defaultView;
                    if (null == t || null == n) return;
                    let i = new n.ResizeObserver(Z);
                    return i.observe(t), () => i.disconnect()
                }, [Z]);
                let q = r.useCallback(() => {
                    var e;
                    let t = null === (e = G.current) || void 0 === e ? void 0 : e.getScrollerNode();
                    null != t && (window.cancelAnimationFrame(x.current), x.current = window.requestAnimationFrame(() => {
                        let {
                            scrollTop: e
                        } = t;
                        w.current = e, null == c || c(e), b(e)
                    }))
                }, [c]);
                r.useImperativeHandle(t, () => ({
                    scrollTo: function(e) {
                        var t;
                        let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            {
                                animate: i = !1
                            } = n;
                        null === (t = G.current) || void 0 === t || t.scrollTo({
                            to: e,
                            animate: i
                        })
                    },
                    scrollRowIntoView: function(e) {
                        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            {
                                animate: n = !1,
                                offset: i = 0
                            } = t,
                            r = Y.current[e];
                        null != r && window.requestAnimationFrame(() => {
                            var t, s;
                            let {
                                sectionIndex: a,
                                offset: {
                                    top: l,
                                    bottom: o
                                }
                            } = r, u = B(a), c = l - (N ? u : 0) - i <= w.current, d = o + i >= w.current + y;
                            if (c) {
                                let r = w.current + u - l,
                                    s = N ? w.current - r : l;
                                null === (t = G.current) || void 0 === t || t.scrollTo({
                                    to: 0 === e ? 0 : s - i,
                                    animate: n
                                })
                            } else if (d) {
                                let e = o - (w.current + y);
                                null === (s = G.current) || void 0 === s || s.scrollTo({
                                    to: w.current + e + i,
                                    animate: n
                                })
                            }
                        })
                    },
                    scrollToSectionTop: function(e) {
                        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            {
                                animate: n = !1,
                                offset: i = 0
                            } = t,
                            r = j.current[e];
                        null != r && window.requestAnimationFrame(() => {
                            var t;
                            null === (t = G.current) || void 0 === t || t.scrollTo({
                                to: (0 === e ? 0 : r.offset.top) + i,
                                animate: n
                            })
                        })
                    },
                    getListDimensions: () => ({
                        height: y,
                        totalHeight: W
                    }),
                    getSectionDescriptors: () => j.current,
                    getRowDescriptors: () => Y.current,
                    getScrollerNode: () => {
                        var e;
                        return null === (e = G.current) || void 0 === e ? void 0 : e.getScrollerNode()
                    },
                    scrollIntoViewNode: e => {
                        var t;
                        return null === (t = G.current) || void 0 === t ? void 0 : t.scrollIntoViewNode({
                            node: e
                        })
                    }
                }), [B, N, W, y]);
                let {
                    visibleItems: X,
                    listOffset: Q
                } = r.useMemo(() => {
                    if (-1 === y || -1 === P) return {
                        visibleItems: null,
                        listOffset: 0
                    };
                    let e = P + y,
                        t = 0,
                        n = _[0],
                        i = [],
                        r = k();
                    null != S && P < r ? i.push(S()) : n += r;
                    for (let r = 0; r < z.length; r++) {
                        let s = z[r],
                            {
                                firstRowIndex: a,
                                offset: {
                                    top: l,
                                    bottom: o
                                }
                            } = s,
                            u = o - l;
                        if (0 === u) continue;
                        let c = B(r),
                            d = V(r),
                            _ = H(r);
                        if (o <= P) n = o;
                        else if (o > P && l < e) {
                            t = a;
                            let s = [],
                                o = 0,
                                S = 0,
                                T = l + c,
                                I = T >= P && l <= e;
                            for (null != p && (N || I) && s.push(p(r)), !I && !N && (n += c); o + c + d < u - _;) {
                                let i = F(r, S, t),
                                    a = l + o + c,
                                    u = a + i;
                                if (u <= P) n = u - (N ? c : 0);
                                else if (u > P && a < e) s.push(E(t, {
                                    sectionIndex: r,
                                    sectionRowIndex: S
                                }));
                                else break;
                                o += i, S++, t++
                            }
                            let m = l + c + o,
                                g = m + d,
                                A = g >= P && m <= e;
                            null != h && A && s.push(h(r)), null != f ? i.push(f(r, s)) : i = [...i, ...s]
                        } else break
                    }
                    return {
                        visibleItems: i,
                        listOffset: n
                    }
                }, [F, V, B, H, _, E, f, h, p, P, z, N, S, k, y]), J = r.useMemo(() => ({
                    top: Q,
                    right: null !== (n = null == _ ? void 0 : _[1]) && void 0 !== n ? n : 0,
                    bottom: null !== (s = null == _ ? void 0 : _[2]) && void 0 !== s ? s : 0,
                    left: null !== (u = null == _ ? void 0 : _[3]) && void 0 !== u ? u : 0
                }), [Q, _]), $ = r.useMemo(() => ({
                    height: W
                }), [W]), ee = O ? l.AdvancedScrollerNone : l.AdvancedScrollerThin;
                return (0, i.jsxs)(ee, {
                    fade: D,
                    className: a(o.scroller, v),
                    ref: G,
                    onScroll: q,
                    children: [(0, i.jsx)("div", {
                        role: M,
                        className: o.listItems,
                        style: J,
                        children: X
                    }), (0, i.jsx)("div", {
                        className: o.listHeight,
                        style: $
                    })]
                })
            }));
            var c = u
        },
        561744: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("773670");

            function r(e) {
                let t = i.useRef(e);
                return t.current = e, t
            }
        },
        837899: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("384737"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsx)("path", {
                            fill: r,
                            className: s,
                            d: "M16.59 8.59003L12 13.17L7.41 8.59003L6 10L12 16L18 10L16.59 8.59003Z"
                        })
                    })
                }, s.ChevronSmallDownIcon)
        },
        425190: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("260792"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsx)("path", {
                            fill: r,
                            className: s,
                            d: "M7.41 16.0001L12 11.4201L16.59 16.0001L18 14.5901L12 8.59006L6 14.5901L7.41 16.0001Z"
                        })
                    })
                }, s.ChevronSmallUpIcon)
        },
        943232: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("867603"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsxs)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: [(0, i.jsx)("path", {
                                className: s,
                                fill: r,
                                d: "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7v-5z"
                            }), (0, i.jsx)("rect", {
                                width: "24",
                                height: "24"
                            })]
                        })
                    })
                }, s.CalendarIcon)
        },
        36562: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("75196");

            function s(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    className: a,
                    foreground: l,
                    ...o
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, r.default)(o),
                    className: a,
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M18.625 3H5.375C4.06519 3 3 4.06519 3 5.375V18.625C3 19.936 4.06519 21 5.375 21H18.625C19.936 21 21 19.936 21 18.625V5.375C21.0057 4.08803 19.9197 3 18.625 3ZM19 19V5H4.99999V19H19Z",
                        className: l,
                        fill: s
                    })
                })
            }
        },
        781291: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("75196");

            function s(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    className: a,
                    background: l,
                    foreground: o,
                    ...u
                } = e;
                return (0, i.jsxs)("svg", {
                    ...(0, r.default)(u),
                    className: a,
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, i.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M5.37499 3H18.625C19.9197 3 21.0056 4.08803 21 5.375V18.625C21 19.936 19.9359 21 18.625 21H5.37499C4.06518 21 3 19.936 3 18.625V5.375C3 4.06519 4.06518 3 5.37499 3Z",
                        className: l,
                        fill: s
                    }), (0, i.jsx)("path", {
                        d: "M9.58473 14.8636L6.04944 11.4051L4.50003 12.9978L9.58473 18L19.5 8.26174L17.9656 6.64795L9.58473 14.8636Z",
                        className: o,
                        fill: s
                    })]
                })
            }
        },
        36694: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("269096"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsx)("path", {
                            className: s,
                            fill: r,
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M8.99991 16.17L4.82991 12L3.40991 13.41L8.99991 19L20.9999 7.00003L19.5899 5.59003L8.99991 16.17Z"
                        })
                    })
                }, s.CheckmarkLargeIcon)
        },
        578706: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("891128"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        backgroundColor: l,
                        ...o
                    } = e;
                    return (0, i.jsxs)("svg", {
                        ...(0, a.default)(o),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [null != l ? (0, i.jsx)("circle", {
                            r: 8,
                            cx: 12,
                            cy: 12,
                            fill: l
                        }) : null, (0, i.jsx)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: (0, i.jsx)("path", {
                                className: s,
                                fill: r,
                                d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                            })
                        })]
                    })
                }, s.CircleCheckIcon)
        },
        522049: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("703906"),
                a = n("368922"),
                l = n("797439"),
                o = n("890503"),
                u = n("75196"),
                c = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 16,
                        height: n = 16,
                        color: r = "currentColor",
                        foreground: s,
                        ...a
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, u.default)(a),
                        width: t,
                        height: n,
                        viewBox: "0 0 26 28",
                        fill: "none",
                        children: (0, i.jsx)("path", {
                            className: s,
                            fill: r,
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M25.4655 8.13686L24.0851 2.98525C23.5134 0.851387 21.32 -0.414947 19.1862 0.156821L3.73134 4.29792C1.59748 4.86969 0.331147 7.06304 0.902914 9.19691L2.01124 13.3332L1.9999 15.9999L1.9999 23.3332C1.9999 25.5424 3.79077 27.3332 5.99991 27.3332L21.9999 27.3332C24.209 27.3332 25.9999 25.5424 25.9999 23.3332V15.3333H5.99991L6.07237 13.3332L25.4655 8.13686ZM14.609 8.28512L10.8245 9.29916L10.7552 5.17663L14.5396 4.1626L14.609 8.28512ZM17.264 7.5737L22.1995 6.25124L21.5093 3.67543C21.3187 2.96415 20.5876 2.54204 19.8763 2.73263L17.1947 3.45117L17.264 7.5737ZM8.10009 5.88806L8.16944 10.0106L4.1689 11.0825L3.47872 8.50672C3.28813 7.79543 3.71024 7.06432 4.42153 6.87373L8.10009 5.88806Z"
                        })
                    })
                }, function(e) {
                    let {
                        width: t = 16,
                        height: n = 16,
                        ...r
                    } = e, u = (0, o.default)("alt_clips_1"), c = (0, o.default)("alt_clips_2"), d = u ? s.ClipsAlt1Icon : c ? a.ClipsAlt2Icon : l.ClipsIcon;
                    return (0, i.jsx)(d, {
                        width: t,
                        height: n,
                        ...r
                    })
                })
        },
        984678: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("49482"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        ...r
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(r),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsx)("path", {
                            fill: "#ED4245",
                            d: "M18.4 1.879L22.121 5.6l-6.4 6.4 6.4 6.4-3.721 3.721-6.4-6.4-6.4 6.4L1.879 18.4l6.4-6.4-6.4-6.4L5.6 1.879l6.4 6.4 6.4-6.4z"
                        })
                    })
                }, s.CloseLargeIcon)
        },
        980428: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("448052"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsxs)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: [(0, i.jsx)("polygon", {
                                className: s,
                                fill: r,
                                fillRule: "nonzero",
                                points: "18.35 4.35 16 2 6 12 16 22 18.35 19.65 10.717 12"
                            }), (0, i.jsx)("polygon", {
                                points: "0 0 24 0 24 24 0 24"
                            })]
                        })
                    })
                }, s.ChevronSmallLeftIcon)
        },
        904276: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("75196");

            function s(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    foreground: a,
                    ...l
                } = e;
                return (0, i.jsx)("svg", {
                    ...(0, r.default)(l),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: (0, i.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",
                        className: a,
                        fill: s
                    })
                })
            }
        },
        875436: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("75196");

            function s(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    background: a,
                    foreground: l,
                    ...o
                } = e;
                return (0, i.jsxs)("svg", {
                    ...(0, r.default)(o),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, i.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",
                        className: a,
                        fill: s
                    }), (0, i.jsx)("circle", {
                        cx: "12",
                        cy: "12",
                        r: "5",
                        className: l,
                        fill: s
                    })]
                })
            }
        },
        772280: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("748802"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsxs)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: [(0, i.jsx)("polygon", {
                                className: s,
                                fill: r,
                                fillRule: "nonzero",
                                points: "8.47 2 6.12 4.35 13.753 12 6.12 19.65 8.47 22 18.47 12"
                            }), (0, i.jsx)("polygon", {
                                points: "0 0 24 0 24 24 0 24"
                            })]
                        })
                    })
                }, s.ChevronSmallRightIcon)
        },
        229915: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("638558"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, i.jsx)("path", {
                            className: s,
                            fill: r,
                            d: "M21.707 20.293L16.314 14.9C17.403 13.504 18 11.799 18 10C18 7.863 17.167 5.854 15.656 4.344C14.146 2.832 12.137 2 10 2C7.863 2 5.854 2.832 4.344 4.344C2.833 5.854 2 7.863 2 10C2 12.137 2.833 14.146 4.344 15.656C5.854 17.168 7.863 18 10 18C11.799 18 13.504 17.404 14.9 16.314L20.293 21.706L21.707 20.293ZM10 16C8.397 16 6.891 15.376 5.758 14.243C4.624 13.11 4 11.603 4 10C4 8.398 4.624 6.891 5.758 5.758C6.891 4.624 8.397 4 10 4C11.603 4 13.109 4.624 14.242 5.758C15.376 6.891 16 8.398 16 10C16 11.603 15.376 13.11 14.242 14.243C13.109 15.376 11.603 16 10 16Z"
                        })
                    })
                }, s.MagnifyingGlassIcon)
        },
        830031: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("269096"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        className: r,
                        ...s
                    } = e;
                    return (0, i.jsx)("svg", {
                        className: r,
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        fill: "none",
                        ...(0, a.default)(s),
                        children: (0, i.jsx)("path", {
                            fill: "#3BA55C",
                            d: "M9.00043 14.0492L19.5904 3.46924L23.1212 7.00006L8.99993 21.1214L1.28485 13.4063L4.83367 9.88248L9.00043 14.0492Z"
                        })
                    })
                }, s.CheckmarkLargeIcon)
        },
        423487: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("469563"),
                s = n("165984"),
                a = n("75196"),
                l = (0, r.replaceIcon)(function(e) {
                    let {
                        width: t = 20,
                        height: n = 20,
                        color: r = "currentColor",
                        foreground: s,
                        ...l
                    } = e;
                    return (0, i.jsx)("svg", {
                        ...(0, a.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 20 20",
                        children: (0, i.jsx)("path", {
                            d: "M10 0C4.486 0 0 4.486 0 10C0 15.515 4.486 20 10 20C15.514 20 20 15.515 20 10C20 4.486 15.514 0 10 0ZM9 4H11V11H9V4ZM10 15.25C9.31 15.25 8.75 14.691 8.75 14C8.75 13.31 9.31 12.75 10 12.75C10.69 12.75 11.25 13.31 11.25 14C11.25 14.691 10.69 15.25 10 15.25Z",
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            className: s,
                            fill: r
                        })
                    })
                }, s.CircleExclamationPointIcon)
        },
        983782: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                AppLayerContainer: function() {
                    return d
                },
                AppLayerProvider: function() {
                    return _
                },
                appLayerContext: function() {
                    return E
                },
                AppReferencePositionLayer: function() {
                    return f
                },
                default: function() {
                    return p
                }
            });
            var i = n("920040"),
                r = n("773670"),
                s = n("228256"),
                a = n("222163");
            let {
                Layer: l,
                LayerContainer: o,
                LayerProvider: u,
                layerContext: c
            } = (0, s.createLayer)("App"), d = o, _ = u, E = c, f = r.forwardRef(function(e, t) {
                return (0, i.jsx)(l, {
                    children: (0, i.jsx)(a.ReferencePositionLayer, {
                        ref: t,
                        ...e
                    })
                })
            });
            var p = l
        },
        668596: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                VerificationLayerContainer: function() {
                    return l
                },
                VerificationLayerProvider: function() {
                    return o
                },
                default: function() {
                    return u
                }
            });
            var i = n("228256");
            let {
                Layer: r,
                LayerContainer: s,
                LayerProvider: a
            } = (0, i.createLayer)("Verification"), l = s, o = a;
            var u = r
        },
        258078: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var i = n("920040");
            n("773670");
            var r = n("575482"),
                s = n.n(r),
                a = n("213852"),
                l = n("342687");
            let o = Object.freeze({
                    STANDARD: a.colorStandard,
                    MUTED: a.colorMuted,
                    ERROR: a.colorError,
                    BRAND: a.colorBrand,
                    LINK: a.colorLink,
                    HEADER_PRIMARY: a.colorHeaderPrimary,
                    HEADER_SECONDARY: a.colorHeaderSecondary,
                    STATUS_YELLOW: a.colorStatusYellow,
                    STATUS_GREEN: a.colorStatusGreen,
                    STATUS_RED: a.colorStatusRed,
                    INTERACTIVE_ACTIVE: a.colorInteractiveActive,
                    INTERACTIVE_NORMAL: a.colorInteractiveNormal,
                    ALWAYS_WHITE: a.colorWhite,
                    CUSTOM: null
                }),
                u = Object.freeze({
                    SIZE_10: l.size10,
                    SIZE_12: l.size12,
                    SIZE_14: l.size14,
                    SIZE_16: l.size16,
                    SIZE_20: l.size20,
                    SIZE_24: l.size24,
                    SIZE_32: l.size32
                }),
                c = e => {
                    let {
                        className: t,
                        color: n = o.STANDARD,
                        size: r = u.SIZE_14,
                        tag: l = "div",
                        selectable: c = !1,
                        strong: d = !1,
                        children: _,
                        style: E,
                        "aria-label": f,
                        ...p
                    } = e;
                    return (0, i.jsx)(l, {
                        "aria-label": f,
                        className: s(n, r, t, {
                            [a.selectable]: c,
                            [a.strong]: d
                        }),
                        style: E,
                        ...p,
                        children: _
                    })
                };
            c.Colors = o, c.Sizes = u;
            var d = c
        },
        587974: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MaskIDs: function() {
                    return r
                },
                default: function() {
                    return C
                },
                MaskLibrary: function() {
                    return R
                }
            });
            var i, r, s = n("920040"),
                a = n("773670"),
                l = n("575482"),
                o = n.n(l),
                u = n("52904"),
                c = n("573135"),
                d = n("944840");
            (i = r || (r = {})).SQUIRCLE = "svg-mask-squircle", i.HEADER_BAR_BADGE = "svg-mask-header-bar-badge", i.VOICE_USER_SUMMARY_ITEM = "svg-mask-voice-user-summary-item", i.VERTICAL_FADE = "svg-mask-vertical-fade", i.PANEL_BUTTON = "svg-mask-panel-button", i.CHANNEL_CALL_CONTROL_BUTTON = "svg-mask-channel-call-control-button", i.CHANNEL_CALL_CONTROL_BUTTON_BADGE_16 = "svg-mask-channel-call-control-button-badge-16", i.CHANNEL_CALL_CONTROL_BUTTON_BADGE_22 = "svg-mask-channel-call-control-button-badge-22", i.CHANNEL_CALL_CONTROL_BUTTON_BADGE_29 = "svg-mask-channel-call-control-button-badge-29", i.AVATAR_DEFAULT = "svg-mask-avatar-default", i.AVATAR_STATUS_ROUND_16 = "svg-mask-avatar-status-round-16", i.AVATAR_STATUS_ROUND_20 = "svg-mask-avatar-status-round-20", i.AVATAR_STATUS_ROUND_24 = "svg-mask-avatar-status-round-24", i.AVATAR_STATUS_ROUND_32 = "svg-mask-avatar-status-round-32", i.AVATAR_STATUS_ROUND_40 = "svg-mask-avatar-status-round-40", i.AVATAR_STATUS_ROUND_48 = "svg-mask-avatar-status-round-48", i.AVATAR_STATUS_ROUND_56 = "svg-mask-avatar-status-round-56", i.AVATAR_STATUS_ROUND_80 = "svg-mask-avatar-status-round-80", i.AVATAR_STATUS_ROUND_100 = "svg-mask-avatar-status-round-100", i.AVATAR_STATUS_ROUND_120 = "svg-mask-avatar-status-round-120", i.AVATAR_STATUS_MOBILE_16 = "svg-mask-avatar-status-mobile-16", i.AVATAR_STATUS_MOBILE_20 = "svg-mask-avatar-status-mobile-20", i.AVATAR_STATUS_MOBILE_24 = "svg-mask-avatar-status-mobile-24", i.AVATAR_STATUS_MOBILE_32 = "svg-mask-avatar-status-mobile-32", i.AVATAR_STATUS_MOBILE_40 = "svg-mask-avatar-status-mobile-40", i.AVATAR_STATUS_MOBILE_48 = "svg-mask-avatar-status-mobile-48", i.AVATAR_STATUS_MOBILE_56 = "svg-mask-avatar-status-mobile-56", i.AVATAR_STATUS_MOBILE_80 = "svg-mask-avatar-status-mobile-80", i.AVATAR_STATUS_MOBILE_100 = "svg-mask-avatar-status-mobile-100", i.AVATAR_STATUS_MOBILE_120 = "svg-mask-avatar-status-mobile-120", i.AVATAR_STATUS_TYPING_16 = "svg-mask-avatar-status-typing-16", i.AVATAR_STATUS_TYPING_20 = "svg-mask-avatar-status-typing-20", i.AVATAR_STATUS_TYPING_24 = "svg-mask-avatar-status-typing-24", i.AVATAR_STATUS_TYPING_32 = "svg-mask-avatar-status-typing-32", i.AVATAR_STATUS_TYPING_40 = "svg-mask-avatar-status-typing-40", i.AVATAR_STATUS_TYPING_48 = "svg-mask-avatar-status-typing-48", i.AVATAR_STATUS_TYPING_56 = "svg-mask-avatar-status-typing-56", i.AVATAR_STATUS_TYPING_80 = "svg-mask-avatar-status-typing-80", i.AVATAR_STATUS_TYPING_100 = "svg-mask-avatar-status-typing-100", i.AVATAR_STATUS_TYPING_120 = "svg-mask-avatar-status-typing-120", i.AVATAR_DECORATION_STATUS_ROUND_16 = "svg-mask-avatar-decoration-status-round-16", i.AVATAR_DECORATION_STATUS_ROUND_20 = "svg-mask-avatar-decoration-status-round-20", i.AVATAR_DECORATION_STATUS_ROUND_24 = "svg-mask-avatar-decoration-status-round-24", i.AVATAR_DECORATION_STATUS_ROUND_32 = "svg-mask-avatar-decoration-status-round-32", i.AVATAR_DECORATION_STATUS_ROUND_40 = "svg-mask-avatar-decoration-status-round-40", i.AVATAR_DECORATION_STATUS_ROUND_48 = "svg-mask-avatar-decoration-status-round-48", i.AVATAR_DECORATION_STATUS_ROUND_56 = "svg-mask-avatar-decoration-status-round-56", i.AVATAR_DECORATION_STATUS_ROUND_80 = "svg-mask-avatar-decoration-status-round-80", i.AVATAR_DECORATION_STATUS_ROUND_120 = "svg-mask-avatar-decoration-status-round-120", i.AVATAR_DECORATION_STATUS_MOBILE_16 = "svg-mask-avatar-decoration-status-mobile-16", i.AVATAR_DECORATION_STATUS_MOBILE_20 = "svg-mask-avatar-decoration-status-mobile-20", i.AVATAR_DECORATION_STATUS_MOBILE_24 = "svg-mask-avatar-decoration-status-mobile-24", i.AVATAR_DECORATION_STATUS_MOBILE_32 = "svg-mask-avatar-decoration-status-mobile-32", i.AVATAR_DECORATION_STATUS_MOBILE_40 = "svg-mask-avatar-decoration-status-mobile-40", i.AVATAR_DECORATION_STATUS_MOBILE_48 = "svg-mask-avatar-decoration-status-mobile-48", i.AVATAR_DECORATION_STATUS_MOBILE_56 = "svg-mask-avatar-decoration-status-mobile-56", i.AVATAR_DECORATION_STATUS_MOBILE_80 = "svg-mask-avatar-decoration-status-mobile-80", i.AVATAR_DECORATION_STATUS_MOBILE_100 = "svg-mask-avatar-decoration-status-mobile-100", i.AVATAR_DECORATION_STATUS_MOBILE_120 = "svg-mask-avatar-decoration-status-mobile-120", i.AVATAR_DECORATION_STATUS_TYPING_16 = "svg-mask-avatar-decoration-status-typing-16", i.AVATAR_DECORATION_STATUS_TYPING_20 = "svg-mask-avatar-decoration-status-typing-20", i.AVATAR_DECORATION_STATUS_TYPING_24 = "svg-mask-avatar-decoration-status-typing-24", i.AVATAR_DECORATION_STATUS_TYPING_32 = "svg-mask-avatar-decoration-status-typing-32", i.AVATAR_DECORATION_STATUS_TYPING_40 = "svg-mask-avatar-decoration-status-typing-40", i.AVATAR_DECORATION_STATUS_TYPING_48 = "svg-mask-avatar-decoration-status-typing-48", i.AVATAR_DECORATION_STATUS_TYPING_56 = "svg-mask-avatar-decoration-status-typing-56", i.AVATAR_DECORATION_STATUS_TYPING_80 = "svg-mask-avatar-decoration-status-typing-80", i.AVATAR_DECORATION_STATUS_TYPING_100 = "svg-mask-avatar-decoration-status-typing-100", i.AVATAR_DECORATION_STATUS_TYPING_120 = "svg-mask-avatar-decoration-status-typing-120", i.AVATAR_DECORATION_PROFILE_STATUS_SQUARE_80 = "svg-mask-avatar-decoration-profile-status-square-80", i.AVATAR_DECORATION_PROFILE_STATUS_MOBILE_SQUARE_80 = "svg-mask-avatar-decoration-profile-status-mobile-square-80", i.AVATAR_VOICE_CALL_80 = "svg-mask-avatar-voice-call-80", i.AVATAR_CALL_ICON = "svg-mask-avatar-call-icon", i.AVATAR_CALL_ICON_32 = "svg-mask-avatar-call-icon-32", i.STATUS_ONLINE_MOBILE = "svg-mask-status-online-mobile", i.STATUS_ONLINE = "svg-mask-status-online", i.STATUS_IDLE = "svg-mask-status-idle", i.STATUS_DND = "svg-mask-status-dnd", i.STATUS_OFFLINE = "svg-mask-status-offline", i.STATUS_STREAMING = "svg-mask-status-streaming", i.STATUS_TYPING = "svg-mask-status-typing", i.STATUS_SCREENSHARE = "svg-mask-status-screenshare", i.STICKER_ROUNDED_RECT = "svg-mask-sticker-rounded-rect", i.STICKER_SHOP_NOTIFICATION = "svg-mask-sticker-shop-notification", i.CHAT_INPUT_BUTTON_NOTIFICATION = "svg-mask-chat-input-button-notification", i.AUTOCOMPLETE_EMOJI_UPSELL_EMOJI = "svg-mask-autocomplete-emoji-upsell-emoji", i.EVENT_TICKET = "svg-mask-event-ticket";

            function _(e, t) {
                let n = null != t ? t : c.DECORATION_TO_AVATAR_RATIO;
                return (e - .5) / n + .5
            }

            function E(e, t, n) {
                let i = (0, u.getAvatarSpecs)(t),
                    r = 32 === i.size,
                    a = r ? 8 : 0,
                    l = r ? 24 : 12;
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("circle", {
                        fill: "white",
                        cx: .5,
                        cy: .5,
                        r: .5,
                        opacity: n
                    }), (0, s.jsx)("circle", {
                        fill: "black",
                        cx: (80 - l + a) / 80,
                        cy: (l - a / 2) / 80,
                        r: (l + (r ? 2 : 4)) / 80
                    })]
                })
            }

            function f(e, t) {
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("circle", {
                        fill: "white",
                        cx: .5,
                        cy: .5,
                        r: .5
                    }), (0, s.jsx)("rect", {
                        fill: "black",
                        x: (56 - t - 4 - 0) / 56,
                        y: -.07142857142857142,
                        width: (t + 8) / 56,
                        height: .42857142857142855,
                        rx: .21428571428571427,
                        ry: .21428571428571427
                    })]
                })
            }

            function p(e) {
                return (0, s.jsx)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: (0, s.jsx)("circle", {
                        fill: "white",
                        cx: .5,
                        cy: .5,
                        r: .5
                    })
                })
            }

            function h(e, t) {
                let n = (0, u.getAvatarSpecs)(t),
                    i = n.status / 2;
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("circle", {
                        fill: "white",
                        cx: n.size / 2 / n.size,
                        cy: n.size / 2 / n.size,
                        r: n.size / 2 / n.size
                    }), (0, s.jsx)("circle", {
                        fill: "black",
                        cx: (n.size - i - n.offset) / n.size,
                        cy: (n.size - i - n.offset) / n.size,
                        r: (i + n.stroke) / n.size
                    })]
                })
            }

            function S(e, t) {
                let n = (0, u.getAvatarSpecs)(t),
                    i = n.status / 2,
                    r = (i + n.stroke) / n.size / c.DECORATION_TO_AVATAR_RATIO,
                    a = _((n.size - i - n.offset) / n.size);
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("rect", {
                        fill: "white",
                        x: 0,
                        y: 0,
                        width: "100%",
                        height: "100%"
                    }), (0, s.jsx)("circle", {
                        fill: "black",
                        cx: a,
                        cy: a,
                        r: r
                    })]
                })
            }

            function T(e, t) {
                let n = (0, u.getAvatarSpecs)(t),
                    i = (2.5 * n.status - n.status + 2 * n.stroke) / 2,
                    r = n.size - n.status - i - n.offset,
                    a = n.status + 2 * n.stroke;
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("circle", {
                        fill: "white",
                        cx: n.size / 2 / n.size,
                        cy: n.size / 2 / n.size,
                        r: n.size / 2 / n.size
                    }), (0, s.jsx)("rect", {
                        fill: "black",
                        x: r / n.size,
                        y: (n.size - n.status - n.stroke - n.offset) / n.size,
                        width: (2.5 * n.status + 2 * n.stroke) / n.size,
                        height: a / n.size,
                        rx: a / 2 / n.size,
                        ry: a / 2 / n.size
                    })]
                })
            }

            function I(e, t) {
                let n = (0, u.getAvatarSpecs)(t),
                    i = (2.5 * n.status - n.status + 2 * n.stroke) / 2,
                    r = _((n.size - n.status - n.stroke - n.offset) / n.size),
                    a = _((n.size - n.status - i - n.offset) / n.size),
                    l = (2.5 * n.status + 2 * n.stroke) / n.size / c.DECORATION_TO_AVATAR_RATIO,
                    o = (n.status + 2 * n.stroke) / n.size / c.DECORATION_TO_AVATAR_RATIO,
                    d = _(o / 2 / n.size);
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("rect", {
                        fill: "white",
                        x: 0,
                        y: 0,
                        width: "100%",
                        height: "100%"
                    }), (0, s.jsx)("rect", {
                        fill: "black",
                        x: a,
                        y: r,
                        width: l,
                        height: o,
                        rx: d,
                        ry: d
                    })]
                })
            }

            function m(e, t) {
                let n = (0, u.getAvatarSpecs)(t);
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("circle", {
                        fill: "white",
                        cx: n.size / 2 / n.size,
                        cy: n.size / 2 / n.size,
                        r: n.size / 2 / n.size
                    }), (0, s.jsx)("rect", {
                        fill: "black",
                        x: (n.size - n.status - n.stroke - n.offset) / n.size,
                        y: (n.size - n.status * u.MOBILE_HEIGHT_RATIO - n.stroke - n.offset) / n.size,
                        width: (n.status + 2 * n.stroke) / n.size,
                        height: (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) / n.size,
                        rx: (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) * u.CUTOUT_BORDER_RADIUS / n.size,
                        ry: (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) * u.CUTOUT_BORDER_RADIUS / n.size
                    })]
                })
            }

            function g(e, t) {
                let n = (0, u.getAvatarSpecs)(t),
                    i = _((n.size - n.status - n.stroke - n.offset) / n.size),
                    r = _((n.size - n.status * u.MOBILE_HEIGHT_RATIO - n.stroke - n.offset) / n.size),
                    a = (n.status + 2 * n.stroke) / n.size / c.DECORATION_TO_AVATAR_RATIO,
                    l = (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) / n.size / c.DECORATION_TO_AVATAR_RATIO;
                return (0, s.jsxs)("mask", {
                    id: e,
                    maskContentUnits: "objectBoundingBox",
                    viewBox: "0 0 1 1",
                    children: [(0, s.jsx)("rect", {
                        fill: "white",
                        x: 0,
                        y: 0,
                        width: "100%",
                        height: "100%"
                    }), (0, s.jsx)("rect", {
                        fill: "black",
                        x: i,
                        y: r,
                        width: a,
                        height: l,
                        rx: (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) * u.CUTOUT_BORDER_RADIUS / n.size,
                        ry: (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) * u.CUTOUT_BORDER_RADIUS / n.size
                    })]
                })
            }

            function A(e) {
                let {
                    mask: t,
                    width: n = 24,
                    height: i = 24,
                    rightOverhang: r = 0,
                    bottomOverhang: a = 0,
                    children: l,
                    className: u,
                    style: c,
                    "aria-label": _,
                    ...E
                } = e;
                return (0, s.jsx)("svg", {
                    width: n + r,
                    height: i + a,
                    className: o(d.svg, u),
                    viewBox: "0 0 ".concat(n + r, " ").concat(i + a),
                    style: c,
                    "aria-label": _,
                    ...E,
                    children: (0, s.jsx)("foreignObject", {
                        x: 0,
                        y: 0,
                        width: n,
                        height: i,
                        overflow: "visible",
                        mask: "url(#".concat(t, ")"),
                        children: l
                    })
                })
            }
            A.Masks = r;
            var C = A;
            let R = a.memo(function() {
                var e, t, n, i, a, l, o, d, A, C, R, N, v, O, D, L, M;
                return (0, s.jsxs)("svg", {
                    viewBox: "0 0 1 1",
                    style: {
                        position: "absolute",
                        pointerEvents: "none",
                        top: -1,
                        left: -1,
                        width: 1,
                        height: 1
                    },
                    "aria-hidden": !0,
                    children: [(e = r.SQUIRCLE, (0, s.jsx)("mask", {
                        id: e,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: (0, s.jsx)("path", {
                            fill: "white",
                            d: "M0 0.464C0 0.301585 0 0.220377 0.0316081 0.158343C0.0594114 0.103776 0.103776 0.0594114 0.158343 0.0316081C0.220377 0 0.301585 0 0.464 0H0.536C0.698415 0 0.779623 0 0.841657 0.0316081C0.896224 0.0594114 0.940589 0.103776 0.968392 0.158343C1 0.220377 1 0.301585 1 0.464V0.536C1 0.698415 1 0.779623 0.968392 0.841657C0.940589 0.896224 0.896224 0.940589 0.841657 0.968392C0.779623 1 0.698415 1 0.536 1H0.464C0.301585 1 0.220377 1 0.158343 0.968392C0.103776 0.940589 0.0594114 0.896224 0.0316081 0.841657C0 0.779623 0 0.698415 0 0.536V0.464Z"
                        })
                    })), (t = r.HEADER_BAR_BADGE, (0, s.jsxs)("mask", {
                        id: t,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("rect", {
                            fill: "white",
                            x: 0,
                            y: 0,
                            width: 1,
                            height: 1
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: .75,
                            cy: .75,
                            r: .25
                        })]
                    })), (n = r.VOICE_USER_SUMMARY_ITEM, (0, s.jsxs)("mask", {
                        id: n,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("rect", {
                            fill: "white",
                            width: 1,
                            height: 1
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: 1.2083333333333333,
                            cy: .5,
                            r: .5416666666666666
                        })]
                    })), function(e) {
                        let t = "".concat(e, "-gradient");
                        return (0, s.jsxs)("mask", {
                            id: e,
                            maskContentUnits: "objectBoundingBox",
                            viewBox: "0 0 1 1",
                            children: [(0, s.jsxs)("linearGradient", {
                                id: t,
                                gradientTransform: "rotate(90)",
                                x1: 0,
                                x2: 1,
                                y1: 0,
                                y2: 0,
                                children: [(0, s.jsx)("stop", {
                                    offset: "0%",
                                    stopColor: "white"
                                }), (0, s.jsx)("stop", {
                                    offset: "100%",
                                    stopColor: "black"
                                })]
                            }), (0, s.jsx)("rect", {
                                fill: "url(#".concat(t, ")"),
                                x: 0,
                                y: 0,
                                width: 1,
                                height: 1
                            })]
                        })
                    }(r.VERTICAL_FADE), (i = r.PANEL_BUTTON, (0, s.jsxs)("mask", {
                        id: i,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("rect", {
                            fill: "white",
                            x: 0,
                            y: 0,
                            width: 1,
                            height: 1
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: .75,
                            cy: .75,
                            r: .25
                        })]
                    })), (a = r.CHANNEL_CALL_CONTROL_BUTTON, (0, s.jsxs)("mask", {
                        id: a,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("circle", {
                            fill: "white",
                            cx: .5,
                            cy: .5,
                            r: .5
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: .8214285714285714,
                            cy: .8214285714285714,
                            r: .25
                        })]
                    })), f(r.CHANNEL_CALL_CONTROL_BUTTON_BADGE_16, 16), f(r.CHANNEL_CALL_CONTROL_BUTTON_BADGE_22, 22), f(r.CHANNEL_CALL_CONTROL_BUTTON_BADGE_29, 29), p(r.AVATAR_DEFAULT), h(r.AVATAR_STATUS_ROUND_16, u.AvatarSizes.SIZE_16), S(r.AVATAR_DECORATION_STATUS_ROUND_16, u.AvatarSizes.SIZE_16), m(r.AVATAR_STATUS_MOBILE_16, u.AvatarSizes.SIZE_16), g(r.AVATAR_DECORATION_STATUS_MOBILE_16, u.AvatarSizes.SIZE_16), T(r.AVATAR_STATUS_TYPING_16, u.AvatarSizes.SIZE_16), I(r.AVATAR_DECORATION_STATUS_TYPING_16, u.AvatarSizes.SIZE_16), h(r.AVATAR_STATUS_ROUND_20, u.AvatarSizes.SIZE_20), S(r.AVATAR_DECORATION_STATUS_ROUND_20, u.AvatarSizes.SIZE_20), m(r.AVATAR_STATUS_MOBILE_20, u.AvatarSizes.SIZE_20), g(r.AVATAR_DECORATION_STATUS_MOBILE_20, u.AvatarSizes.SIZE_20), T(r.AVATAR_STATUS_TYPING_20, u.AvatarSizes.SIZE_20), I(r.AVATAR_DECORATION_STATUS_TYPING_20, u.AvatarSizes.SIZE_20), h(r.AVATAR_STATUS_ROUND_24, u.AvatarSizes.SIZE_24), S(r.AVATAR_DECORATION_STATUS_ROUND_24, u.AvatarSizes.SIZE_24), m(r.AVATAR_STATUS_MOBILE_24, u.AvatarSizes.SIZE_24), g(r.AVATAR_DECORATION_STATUS_MOBILE_24, u.AvatarSizes.SIZE_24), T(r.AVATAR_STATUS_TYPING_24, u.AvatarSizes.SIZE_24), I(r.AVATAR_DECORATION_STATUS_TYPING_24, u.AvatarSizes.SIZE_24), h(r.AVATAR_STATUS_ROUND_32, u.AvatarSizes.SIZE_32), S(r.AVATAR_DECORATION_STATUS_ROUND_32, u.AvatarSizes.SIZE_32), m(r.AVATAR_STATUS_MOBILE_32, u.AvatarSizes.SIZE_32), g(r.AVATAR_DECORATION_STATUS_MOBILE_32, u.AvatarSizes.SIZE_32), T(r.AVATAR_STATUS_TYPING_32, u.AvatarSizes.SIZE_32), I(r.AVATAR_DECORATION_STATUS_TYPING_32, u.AvatarSizes.SIZE_32), h(r.AVATAR_STATUS_ROUND_40, u.AvatarSizes.SIZE_40), S(r.AVATAR_DECORATION_STATUS_ROUND_40, u.AvatarSizes.SIZE_40), m(r.AVATAR_STATUS_MOBILE_40, u.AvatarSizes.SIZE_40), g(r.AVATAR_DECORATION_STATUS_MOBILE_40, u.AvatarSizes.SIZE_40), T(r.AVATAR_STATUS_TYPING_40, u.AvatarSizes.SIZE_40), I(r.AVATAR_DECORATION_STATUS_TYPING_40, u.AvatarSizes.SIZE_40), h(r.AVATAR_STATUS_ROUND_48, u.AvatarSizes.SIZE_48), S(r.AVATAR_DECORATION_STATUS_ROUND_48, u.AvatarSizes.SIZE_48), m(r.AVATAR_STATUS_MOBILE_48, u.AvatarSizes.SIZE_48), g(r.AVATAR_DECORATION_STATUS_MOBILE_48, u.AvatarSizes.SIZE_48), T(r.AVATAR_STATUS_TYPING_48, u.AvatarSizes.SIZE_48), I(r.AVATAR_DECORATION_STATUS_TYPING_48, u.AvatarSizes.SIZE_48), h(r.AVATAR_STATUS_ROUND_56, u.AvatarSizes.SIZE_56), S(r.AVATAR_DECORATION_STATUS_ROUND_56, u.AvatarSizes.SIZE_56), m(r.AVATAR_STATUS_MOBILE_56, u.AvatarSizes.SIZE_56), g(r.AVATAR_DECORATION_STATUS_MOBILE_56, u.AvatarSizes.SIZE_56), T(r.AVATAR_STATUS_TYPING_56, u.AvatarSizes.SIZE_56), I(r.AVATAR_DECORATION_STATUS_TYPING_56, u.AvatarSizes.SIZE_56), h(r.AVATAR_STATUS_ROUND_80, u.AvatarSizes.SIZE_80), S(r.AVATAR_DECORATION_STATUS_ROUND_80, u.AvatarSizes.SIZE_80), function(e, t) {
                        let n = (0, u.getAvatarSpecs)(t),
                            i = n.status / 2,
                            r = n.size * c.DECORATION_TO_AVATAR_RATIO,
                            a = r / n.size,
                            l = (i + n.stroke) / n.size / a,
                            o = _((n.size - i - n.offset) / n.size, a);
                        return (0, s.jsxs)("mask", {
                            id: e,
                            maskContentUnits: "objectBoundingBox",
                            viewBox: "0 0 1 1",
                            children: [(0, s.jsx)("rect", {
                                fill: "white",
                                x: 0,
                                y: 0,
                                width: "100%",
                                height: "100%"
                            }), (0, s.jsx)("circle", {
                                fill: "black",
                                cx: o,
                                cy: o,
                                r: l
                            })]
                        })
                    }(r.AVATAR_DECORATION_PROFILE_STATUS_SQUARE_80, u.AvatarSizes.SIZE_80), m(r.AVATAR_STATUS_MOBILE_80, u.AvatarSizes.SIZE_80), g(r.AVATAR_DECORATION_STATUS_MOBILE_80, u.AvatarSizes.SIZE_80), function(e, t) {
                        let n = (0, u.getAvatarSpecs)(t),
                            i = n.size * c.DECORATION_TO_AVATAR_RATIO,
                            r = i / n.size,
                            a = _((n.size - n.status - n.stroke - n.offset) / n.size, r),
                            l = _((n.size - n.status * u.MOBILE_HEIGHT_RATIO - n.stroke - n.offset) / n.size, r),
                            o = (n.status + 2 * n.stroke) / n.size / r,
                            d = (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) / n.size / r;
                        return (0, s.jsxs)("mask", {
                            id: e,
                            maskContentUnits: "objectBoundingBox",
                            viewBox: "0 0 1 1",
                            children: [(0, s.jsx)("rect", {
                                fill: "white",
                                x: 0,
                                y: 0,
                                width: "100%",
                                height: "100%"
                            }), (0, s.jsx)("rect", {
                                fill: "black",
                                x: a,
                                y: l,
                                width: o,
                                height: d,
                                rx: (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) * u.CUTOUT_BORDER_RADIUS / n.size,
                                ry: (n.status * u.MOBILE_HEIGHT_RATIO + 2 * n.stroke) * u.CUTOUT_BORDER_RADIUS / n.size
                            })]
                        })
                    }(r.AVATAR_DECORATION_PROFILE_STATUS_MOBILE_SQUARE_80, u.AvatarSizes.SIZE_80), T(r.AVATAR_STATUS_TYPING_80, u.AvatarSizes.SIZE_80), I(r.AVATAR_DECORATION_STATUS_TYPING_80, u.AvatarSizes.SIZE_80), h(r.AVATAR_STATUS_ROUND_120, u.AvatarSizes.SIZE_120), S(r.AVATAR_DECORATION_STATUS_ROUND_120, u.AvatarSizes.SIZE_120), m(r.AVATAR_STATUS_MOBILE_120, u.AvatarSizes.SIZE_120), g(r.AVATAR_DECORATION_STATUS_MOBILE_120, u.AvatarSizes.SIZE_120), T(r.AVATAR_STATUS_TYPING_120, u.AvatarSizes.SIZE_120), I(r.AVATAR_DECORATION_STATUS_TYPING_120, u.AvatarSizes.SIZE_120), function(e) {
                        let t = 8 * u.MOBILE_HEIGHT_RATIO;
                        return (0, s.jsxs)("mask", {
                            id: e,
                            maskContentUnits: "objectBoundingBox",
                            viewBox: "0 0 1 1",
                            children: [(0, s.jsx)("rect", {
                                fill: "white",
                                x: 0,
                                y: 0,
                                width: 1,
                                height: 1,
                                rx: t * u.MOBILE_ICON_RADIUS / 8,
                                ry: t * u.MOBILE_ICON_RADIUS / t
                            }), (0, s.jsx)("rect", {
                                fill: "black",
                                x: .125,
                                y: 2 / t,
                                width: .75,
                                height: 6 / t
                            }), (0, s.jsx)("ellipse", {
                                fill: "black",
                                cx: .5,
                                cy: 10 / t,
                                rx: .125,
                                ry: 1 / t
                            })]
                        })
                    }(r.STATUS_ONLINE_MOBILE), p(r.STATUS_ONLINE), (l = r.STATUS_IDLE, (0, s.jsxs)("mask", {
                        id: l,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("circle", {
                            fill: "white",
                            cx: .5,
                            cy: .5,
                            r: .5
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: .25,
                            cy: .25,
                            r: .375
                        })]
                    })), (o = r.STATUS_DND, (0, s.jsxs)("mask", {
                        id: o,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("circle", {
                            fill: "white",
                            cx: .5,
                            cy: .5,
                            r: .5
                        }), (0, s.jsx)("rect", {
                            fill: "black",
                            x: .125,
                            y: .375,
                            width: .75,
                            height: .25,
                            rx: .125,
                            ry: .125
                        })]
                    })), (d = r.STATUS_OFFLINE, (0, s.jsxs)("mask", {
                        id: d,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("circle", {
                            fill: "white",
                            cx: .5,
                            cy: .5,
                            r: .5
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: .5,
                            cy: .5,
                            r: .25
                        })]
                    })), (A = r.STATUS_STREAMING, (0, s.jsxs)("mask", {
                        id: A,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("circle", {
                            fill: "white",
                            cx: .5,
                            cy: .5,
                            r: .5
                        }), (0, s.jsx)("polygon", {
                            fill: "black",
                            points: "".concat(.35, ",").concat(.25, " ").concat(.78301275, ",").concat(.5, " ").concat(.35, ",").concat(.75)
                        })]
                    })), (C = r.STATUS_TYPING, (0, s.jsx)("mask", {
                        id: C,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: (0, s.jsx)("rect", {
                            fill: "white",
                            cx: 0,
                            cy: 0,
                            width: 1,
                            height: 1,
                            ry: .5,
                            rx: .2
                        })
                    })), (R = r.STATUS_SCREENSHARE, (0, s.jsxs)("mask", {
                        id: R,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("rect", {
                            width: "1",
                            height: "1",
                            fill: "white"
                        }), (0, s.jsx)("path", {
                            d: "M0.5 0.71875C0.5 0.649716 0.555966 0.59375 0.625 0.59375H1.0V1.0H0.5V0.71875Z",
                            fill: "black"
                        })]
                    })), (N = r.AVATAR_VOICE_CALL_80, (0, s.jsxs)("mask", {
                        id: N,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("circle", {
                            fill: "white",
                            cx: .5,
                            cy: .5,
                            r: .5
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: .85,
                            cy: .85,
                            r: .2
                        })]
                    })), E(r.AVATAR_CALL_ICON, u.AvatarSizes.SIZE_56, 1), E(r.AVATAR_CALL_ICON_32, u.AvatarSizes.SIZE_32, .5), (v = r.STICKER_ROUNDED_RECT, (0, s.jsx)("mask", {
                        id: v,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: (0, s.jsx)("path", {
                            d: "M0 0.26087C0 0.137894 0 0.0764069 0.0382035 0.0382035C0.0764069 0 0.137894 0 0.26087 0H0.73913C0.862106 0 0.923593 0 0.961797 0.0382035C1 0.0764069 1 0.137894 1 0.26087V0.73913C1 0.862106 1 0.923593 0.961797 0.961797C0.923593 1 0.862106 1 0.73913 1H0.26087C0.137894 1 0.0764069 1 0.0382035 0.961797C0 0.923593 0 0.862106 0 0.73913V0.26087Z",
                            fill: "white"
                        })
                    })), (O = r.CHAT_INPUT_BUTTON_NOTIFICATION, (0, s.jsxs)("mask", {
                        id: O,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("rect", {
                            width: "1",
                            height: "1",
                            fill: "white"
                        }), (0, s.jsx)("circle", {
                            cx: "0.85",
                            cy: "0.85",
                            r: "0.25",
                            fill: "black"
                        })]
                    })), (D = r.STICKER_SHOP_NOTIFICATION, (0, s.jsxs)("mask", {
                        id: D,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("rect", {
                            width: "1",
                            height: "1",
                            fill: "white"
                        }), (0, s.jsx)("circle", {
                            cx: "0.9",
                            cy: "0.9",
                            r: "0.5",
                            fill: "black"
                        })]
                    })), (L = r.AUTOCOMPLETE_EMOJI_UPSELL_EMOJI, (0, s.jsxs)("mask", {
                        id: L,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: [(0, s.jsx)("rect", {
                            fill: "white",
                            width: 1,
                            height: 1
                        }), (0, s.jsx)("circle", {
                            fill: "black",
                            cx: 1.33,
                            cy: .5,
                            r: .5833333333333334
                        })]
                    })), (M = r.EVENT_TICKET, (0, s.jsx)("mask", {
                        id: M,
                        maskContentUnits: "objectBoundingBox",
                        viewBox: "0 0 1 1",
                        children: (0, s.jsx)("path", {
                            d: "M0 0.12C0 0.0779961 0 0.0569941 0.00408726 0.0409507C0.00768251 0.0268386 0.0134193 0.015365 0.0204754 0.00817451C0.028497 0 0.038998 0 0.06 0H0.94C0.961002 0 0.971503 0 0.979525 0.00817451C0.986581 0.015365 0.992318 0.0268386 0.995913 0.0409507C1 0.0569941 1 0.0779961 1 0.12V0.45C0.986193 0.45 0.975 0.472386 0.975 0.5C0.975 0.527614 0.986193 0.55 1 0.55V0.88C1 0.922004 1 0.943006 0.995913 0.959049C0.992318 0.973161 0.986581 0.984635 0.979525 0.991826C0.971503 1 0.961002 1 0.94 1H0.0600001C0.0389981 1 0.028497 1 0.0204754 0.991826C0.0134193 0.984635 0.00768251 0.973161 0.00408726 0.959049C0 0.943006 0 0.922004 0 0.88V0.55C0.0138071 0.55 0.025 0.527614 0.025 0.5C0.025 0.472386 0.0138071 0.45 0 0.45V0.12Z",
                            fill: "white"
                        })
                    }))]
                })
            }, () => !0)
        },
        870623: function(e, t, n) {
            "use strict";
            n.r(t)
        },
        599110: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                AnalyticsContext: function() {
                    return S
                },
                addExtraAnalyticsDecorator: function() {
                    return m
                },
                AnalyticEventConfigs: function() {
                    return g
                },
                expandLocation: function() {
                    return A
                },
                setUTMContext: function() {
                    return N
                },
                expandEventProperties: function() {
                    return v
                },
                debugLogEvent: function() {
                    return O
                },
                trackNetworkAction: function() {
                    return L
                },
                AnalyticsSchema: function() {
                    return d
                },
                default: function() {
                    return M
                }
            });
            var i, r = n("773670"),
                s = n("64379"),
                a = n("913144"),
                l = n("939011"),
                o = n("821316"),
                u = n("316217"),
                c = n("313915"),
                d = n("870623"),
                _ = n("872507"),
                E = n("286235"),
                f = n("49111"),
                p = n("727538"),
                h = n("782340");
            let S = r.createContext({
                    location: {}
                }),
                T = {},
                I = [];

            function m(e) {
                I.push(e)
            }
            let g = {
                [f.AnalyticEvents.APP_OPENED]: {
                    throttlePeriod: 3e5,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.APP_BACKGROUND]: {
                    throttlePeriod: 12e4,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.ACK_MESSAGES]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.guild_id, e.location_section]
                },
                [f.AnalyticEvents.GUILD_VIEWED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.guild_id, e.is_pending]
                },
                [f.AnalyticEvents.FRIENDS_LIST_VIEWED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.tab_opened]
                },
                [f.AnalyticEvents.START_SPEAKING]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.server]
                },
                [f.AnalyticEvents.START_LISTENING]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.server]
                },
                [f.AnalyticEvents.ACTIVITY_UPDATED]: {
                    throttlePeriod: 6e4,
                    throttleKeys: e => [e.application_id],
                    deduplicate: !0
                },
                [f.AnalyticEvents.CHANNEL_OPENED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => null != e.channel_static_route ? [e.guild_id, e.channel_static_route, e.channel_view] : [e.channel_id, e.channel_view]
                },
                [f.AnalyticEvents.TEXT_IN_VOICE_OPENED]: {
                    throttlePeriod: 864e5,
                    throttleKeys: e => [e.channel_id]
                },
                [f.AnalyticEvents.NOTIFICATION_VIEWED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.notif_type]
                },
                [f.AnalyticEvents.MEMBER_LIST_VIEWED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.channel_id]
                },
                [f.AnalyticEvents.DM_LIST_VIEWED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.channel_id]
                },
                [f.AnalyticEvents.NAV_DRAWER_OPENED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.KEYBOARD_SHORTCUT_USED]: {
                    throttlePeriod: 12e4,
                    throttleKeys: e => [e.shortcut_name, e.location_object, ...null !== (i = e.source_class_list) && void 0 !== i ? i : []]
                },
                [f.AnalyticEvents.QUICKSWITCHER_OPENED]: {
                    throttlePeriod: 1e4,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.CHAT_INPUT_COMPONENT_VIEWED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.type]
                },
                [f.AnalyticEvents.ROLE_PAGE_VIEWED]: {
                    throttlePeriod: 12e4,
                    throttleKeys: e => [e.role_id, e.tab_opened]
                },
                [f.AnalyticEvents.VIDEO_INPUT_INITIALIZED]: {
                    throttlePeriod: 3e5,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.HUB_ONBOARDING_CAROUSEL_SCROLLED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.HUB_STUDENT_PROMPT_CLICKED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.RPC_SERVER_ERROR_CAUGHT]: {
                    throttlePeriod: 864e5,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.CHANNEL_BANNER_VIEWED]: {
                    throttlePeriod: 864e5,
                    throttleKeys: e => [e.banner_type, e.channel_id]
                },
                [f.AnalyticEvents.PREMIUM_UPSELL_VIEWED]: {
                    throttlePeriod: 6e4,
                    throttleKeys: e => [e.type]
                },
                [f.AnalyticEvents.CHANNEL_HIGHLIGHTS_VIEWED]: {
                    throttlePeriod: 36e5,
                    throttleKeys: e => [e.guild_id, e.channel_id]
                },
                [f.AnalyticEvents.GUILD_CHANNEL_HIGHLIGHTS_LOADED]: {
                    throttlePeriod: 36e5,
                    throttleKeys: e => [e.guild_id]
                },
                [f.AnalyticEvents.FORUM_CHANNEL_SEARCHED]: {
                    throttlePeriod: 6e4,
                    throttleKeys: e => [e.guild_id, e.channel_id]
                },
                [f.AnalyticEvents.FORUM_CHANNEL_SCROLLED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.guild_id, e.channel_id]
                },
                [f.AnalyticEvents.DM_PROFILE_VIEWED]: {
                    throttlePeriod: 36e5,
                    throttleKeys: e => [e.viewed_profile_user_id]
                },
                [f.AnalyticEvents.MEDIA_VIEWER_SESSION_COMPLETED]: {
                    throttlePercent: .01
                },
                [f.AnalyticEvents.SUMMARIES_UNREAD_BAR_VIEWED]: {
                    throttlePeriod: 3e5,
                    throttleKeys: e => [e.channel_id]
                },
                [f.AnalyticEvents.ACTIVITY_CARDS_VIEWED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.context, e.guild_id]
                },
                [f.AnalyticEvents.ACK_COMMUNITY_MESSAGES]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.channel_id]
                },
                [f.AnalyticEvents.REDESIGN_NAV_BAR_CLICKED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.tab]
                },
                [f.AnalyticEvents.BROADCAST_START_BUTTON_HOVERED]: {
                    throttlePeriod: 6e4,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.BROADCAST_LIST_VISITED]: {
                    throttlePeriod: 3e5,
                    throttleKeys: () => []
                },
                [f.AnalyticEvents.CHANNEL_LIST_END_REACHED]: {
                    throttlePeriod: 9e5,
                    throttleKeys: e => [e.guild_id]
                }
            };

            function A(e) {
                return "string" == typeof e ? {
                    location: e
                } : {
                    location: e.page,
                    location_page: e.page,
                    location_section: e.section,
                    location_object: e.object,
                    location_object_type: e.objectType
                }
            }
            let C = () => p.AccessibilityFeatureFlags.NONE,
                R = (0, s.trackMaker)({
                    analyticEventConfigs: g,
                    dispatcher: a.default,
                    TRACK_ACTION_NAME: "TRACK"
                });

            function N(e) {
                return T = e
            }

            function v(e) {
                var t, n, i, r, s;
                let a = e;
                if (!a && (a = {}), null != a.location) {
                    let {
                        location: e,
                        ...t
                    } = a;
                    a = {
                        ...t,
                        ...A(e)
                    }
                }
                if (null != a.source) {
                    ;
                    let {
                        source: e,
                        ...t
                    } = a;
                    a = {
                        ...t,
                        ..."string" == typeof(s = e) ? {
                            source: s
                        } : {
                            source_page: s.page,
                            source_section: s.section,
                            source_object: s.object,
                            source_object_type: s.objectType,
                            source_promotion_id: s.promotionId
                        }
                    }
                }
                a.client_performance_cpu = _.default.getCurrentCPUUsagePercent(), a.client_performance_memory = _.default.getCurrentMemoryUsageKB(), a.cpu_core_count = _.default.getCPUCoreCount(), a.accessibility_features = C(), a.rendered_locale = h.default.getLocale(), a.uptime_app = Math.floor(performance.now() / 1e3);
                let l = _.default.getProcessUptime();
                null != l && (a.uptime_process_renderer = Math.floor(l));
                let {
                    utmSource: o,
                    utmMedium: u,
                    utmCampaign: c,
                    utmContent: d
                } = T;
                return a.utm_source = null !== (t = a.utm_source) && void 0 !== t ? t : o, a.utm_medium = null !== (n = a.utm_medium) && void 0 !== n ? n : u, a.utm_campaign = null !== (i = a.utm_campaign) && void 0 !== i ? i : c, a.utm_content = null !== (r = a.utm_content) && void 0 !== r ? r : d, I.forEach(e => e(a)), a
            }

            function O(e, t) {
                let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                c.default.isLoggingAnalyticsEvents && console.info("AnalyticsUtils.track(...):", e, t), n ? o.report("Analytics", e, t) : o.report("Analytics", e)
            }
            let D = (0, s.trackMaker)({
                analyticEventConfigs: g,
                dispatcher: a.default,
                TRACK_ACTION_NAME: "TRACK"
            });

            function L(e, t) {
                let n = (0, l.getLocation)(),
                    i = v({
                        location: n,
                        ...t
                    });
                (0, l.setDebugTrackedData)(e, {
                    type: "action",
                    ...t
                }), O(e, i), D(e, i)
            }
            var M = {
                ...s.default,
                getCampaignParams: s.getCampaignParams,
                setSystemAccessibilityFeatures: function(e) {
                    C = e
                },
                expandEventProperties: v,
                track: function(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    if (!u.IGNORE_ANALYTICS_BREADCRUMB_EVENTS.includes(e) && E.default.addBreadcrumb({
                            category: "analytics",
                            message: "".concat(e)
                        }), null != n.throttlePercent && Math.random() > n.throttlePercent) return Promise.resolve();
                    let i = v(t);
                    return O(e, i, n.logEventProperties), R(e, i, {
                        flush: n.flush,
                        fingerprint: n.fingerprint
                    })
                }
            }
        },
        645672: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getBuildPlatform: function() {
                    return l
                }
            });
            var i, r, s = n("773336"),
                a = n("49111");

            function l() {
                switch ((0, s.getPlatform)()) {
                    case s.PlatformTypes.WINDOWS:
                        let e = r.X86,
                            t = window.DiscordNative;
                        if (null != t && (e = window.DiscordNative.os.arch), e === r.X86 || e === r.IA32) return a.BuildPlatformTypes.WIN32;
                        return a.BuildPlatformTypes.WIN64;
                    case s.PlatformTypes.OSX:
                        return a.BuildPlatformTypes.MACOS;
                    case s.PlatformTypes.LINUX:
                        return a.BuildPlatformTypes.LINUX;
                    default:
                        throw Error("Unsupported build type")
                }
            }(i = r || (r = {})).X86 = "x86", i.IA32 = "ia32"
        },
        831588: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getToken: function() {
                    return r
                },
                isAuthenticated: function() {
                    return s
                },
                getArtForPath: function() {
                    return a
                }
            });
            var i = n("620099");

            function r() {
                return i.default.getToken()
            }

            function s() {
                return null != r()
            }
            let a = e => null != e && /^\/developers/.test(e) ? n("501617") : null
        },
        315102: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                DEFAULT_AVATARS: function() {
                    return p
                },
                SUPPORTS_WEBP: function() {
                    return h
                },
                getEmojiURL: function() {
                    return I
                },
                getUserAvatarURL: function() {
                    return A
                },
                getGuildMemberAvatarURLSimple: function() {
                    return C
                },
                getGuildMemberAvatarURL: function() {
                    return R
                },
                getUserBannerURL: function() {
                    return N
                },
                getAvatarDecorationURL: function() {
                    return v
                },
                getGuildMemberBannerURL: function() {
                    return O
                },
                getVideoFilterAssetURL: function() {
                    return w
                },
                isAnimatedIconHash: function() {
                    return k
                },
                isVideoAssetHash: function() {
                    return F
                },
                isAnimatedImageURL: function() {
                    return B
                },
                default: function() {
                    return H
                }
            });
            var r = n("918003"),
                s = n.n(r),
                a = n("126617"),
                l = n("500947"),
                o = n("234251"),
                u = n("407063"),
                c = n("240481"),
                d = n("773336"),
                _ = n("49111"),
                E = n("680894"),
                f = n("363577");
            i = n("523096").default;
            let p = i.DEFAULT_AVATARS;
            i.DEFAULT_GROUP_DM_AVATARS;
            let h = i.canUseWebp(),
                S = (0, d.isAndroid)();

            function T(e) {
                let {
                    endpoint: t,
                    path: n,
                    id: i,
                    hash: r,
                    size: s,
                    canAnimate: l = !1,
                    keepAspectRatio: o,
                    format: c = null
                } = e, d = null != c ? c : l && k(r) ? "gif" : "jpg";
                if (l && F(r) && (d = "mp4"), null != r) {
                    let e;
                    let l = window.GLOBAL_ENV.CDN_HOST;
                    if (null != l ? ("jpg" === d && (d = h ? "webp" : "png"), e = "".concat(location.protocol, "//").concat(l, "/").concat(n, "/").concat(i, "/").concat(r, ".").concat(d)) : e = location.protocol + window.GLOBAL_ENV.API_ENDPOINT + t(i, r, d), "mp4" === d) return e;
                    let c = {};
                    return null != s && (c.size = (0, u.getBestMediaProxySize)(s * (0, u.getDevicePixelRatio)())), null != o && (c.keep_aspect_ratio = o), e + "?".concat(a.stringify(c))
                }
            }

            function I(e) {
                let {
                    id: t,
                    animated: n,
                    size: i,
                    forcePNG: r = !1
                } = e, s = h && !r ? "webp" : "png", a = h && !S ? "&quality=lossless" : "";
                return null != window.GLOBAL_ENV.CDN_HOST ? "".concat(location.protocol, "//").concat(window.GLOBAL_ENV.CDN_HOST, "/emojis/").concat(t, ".").concat(n ? "gif" : s, "?size=").concat((0, u.getBestMediaProxySize)(i * (0, u.getDevicePixelRatio)())).concat(a) : location.protocol + window.GLOBAL_ENV.API_ENDPOINT + _.Endpoints.EMOJI(t, n ? "gif" : s)
            }

            function m(e, t) {
                if (null == e && null == t) return p[0];
                let n = (0, c.parseInteger)(t, 0);
                return n > 0 ? p[n % 5] : null != e ? p[s(e).shiftRight(22).mod(6).toJSNumber()] : p[0]
            }

            function g(e) {
                let {
                    id: t,
                    avatar: n,
                    discriminator: r,
                    bot: s
                } = e, a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], l = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : _.AVATAR_SIZE, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                if (s && t !== E.CLYDE_AI_USER_ID) {
                    let e = i.BOT_AVATARS[n];
                    if (e) return e;
                    if (null == n && "0000" === r) return p[0]
                }
                return T({
                    endpoint: _.Endpoints.AVATAR,
                    path: "avatars",
                    id: t,
                    hash: n,
                    size: l,
                    canAnimate: a,
                    format: o
                })
            }

            function A(e) {
                var t;
                let n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : _.AVATAR_SIZE,
                    r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                return null !== (t = g(e, n, i, r)) && void 0 !== t ? t : m(e.id, e.discriminator)
            }

            function C(e) {
                let t, {
                        guildId: n,
                        userId: i,
                        avatar: r,
                        canAnimate: s = !1,
                        size: l = _.AVATAR_SIZE
                    } = e,
                    o = s && k(r) ? "gif" : "jpg",
                    {
                        CDN_HOST: c
                    } = window.GLOBAL_ENV;
                return null != c ? ("jpg" === o && (o = h ? "webp" : "png"), t = "".concat(location.protocol, "//").concat(c).concat(_.Endpoints.GUILD_MEMBER_AVATAR(n, i, r, o))) : t = location.protocol + window.GLOBAL_ENV.API_ENDPOINT + _.Endpoints.GUILD_MEMBER_AVATAR(n, i, r, o), t + "?".concat(a.stringify({
                    size: (0, u.getBestMediaProxySize)(l * (0, u.getDevicePixelRatio)())
                }))
            }

            function R(e) {
                let {
                    userId: t,
                    avatar: n,
                    guildId: i
                } = e, r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                return null == n ? null : C({
                    userId: t,
                    avatar: n,
                    guildId: i,
                    canAnimate: r
                })
            }

            function N(e) {
                let t, {
                    id: n,
                    banner: i,
                    canAnimate: r,
                    size: s
                } = e;
                if (null == i) return;
                let a = window.GLOBAL_ENV.CDN_HOST,
                    l = r && k(i) ? "gif" : "png";
                return t = (null != a ? "".concat(location.protocol, "//").concat(a, "/banners/").concat(n, "/").concat(i, ".").concat(l) : location.protocol + window.GLOBAL_ENV.API_ENDPOINT + _.Endpoints.USER_BANNER(n, i, l)) + "?size=".concat((0, u.getBestMediaProxySize)(s * (0, u.getDevicePixelRatio)()))
            }

            function v(e) {
                let {
                    avatarDecoration: t,
                    size: n,
                    canAnimate: i = !1
                } = e;
                if (null == t) return;
                let {
                    CDN_HOST: r,
                    API_ENDPOINT: s
                } = window.GLOBAL_ENV, a = _.Endpoints.AVATAR_DECORATION_PRESETS(t.asset), l = new URL(null != r ? "".concat(location.protocol, "//").concat(r).concat(a) : "".concat(location.protocol).concat(s).concat(a));
                return l.searchParams.set("size", "".concat((0, u.getBestMediaProxySize)(n * (0, u.getDevicePixelRatio)()))), l.searchParams.set("passthrough", "".concat(i && (0, o.isAnimatedAvatarDecoration)(t.asset))), l.toString()
            }

            function O(e) {
                let t, {
                    id: n,
                    guildId: i,
                    banner: r,
                    canAnimate: s,
                    size: a
                } = e;
                if (null == r || null == i) return;
                let l = window.GLOBAL_ENV.CDN_HOST,
                    o = s && k(r) ? "gif" : "png",
                    c = _.Endpoints.GUILD_MEMBER_BANNER(i, n, r, o);
                return t = (null != l ? "".concat(location.protocol, "//").concat(l).concat(c) : location.protocol + window.GLOBAL_ENV.API_ENDPOINT + c) + "?size=".concat((0, u.getBestMediaProxySize)(a * (0, u.getDevicePixelRatio)()))
            }

            function D(e) {
                let t, {
                    id: n,
                    splash: i,
                    size: r
                } = e;
                if (null == i) return null;
                null == r && (r = window.screen.width * (0, u.getDevicePixelRatio)()), r = (0, u.getBestMediaProxySize)(r);
                let s = window.GLOBAL_ENV.CDN_HOST;
                return t = (null != s ? "".concat(location.protocol, "//").concat(s, "/splashes/").concat(n, "/").concat(i, ".jpg") : location.protocol + window.GLOBAL_ENV.API_ENDPOINT + _.Endpoints.GUILD_SPLASH(n, i)) + "?size=".concat(r)
            }

            function L(e) {
                let t, {
                        id: n,
                        banner: i
                    } = e,
                    r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                if (null == i) return null;
                let s = (0, u.getBestMediaProxySize)(240 * (0, u.getDevicePixelRatio)()),
                    a = h ? "webp" : "jpg",
                    l = r && k(i) ? "gif" : a,
                    o = window.GLOBAL_ENV.CDN_HOST;
                return t = (null != o ? "".concat(location.protocol, "//").concat(o, "/banners/").concat(n, "/").concat(i, ".").concat(l) : location.protocol + window.GLOBAL_ENV.API_ENDPOINT + _.Endpoints.GUILD_BANNER(n, i, l)) + "?size=".concat(s), "jpg" === l && (t += "&quality=lossless"), t
            }

            function M(e) {
                let t, {
                    id: n,
                    homeHeader: i
                } = e;
                if (null == i) return null;
                let r = (0, u.getBestMediaProxySize)(1096 * (0, u.getDevicePixelRatio)()),
                    s = window.GLOBAL_ENV.CDN_HOST;
                return t = (null != s ? "".concat(location.protocol, "//").concat(s, "/home-headers/").concat(n, "/").concat(i, ".png") : location.protocol + window.GLOBAL_ENV.API_ENDPOINT + _.Endpoints.GUILD_HOME_HEADER(n, i)) + "?size=".concat(r)
            }

            function P(e) {
                let t, {
                    id: n,
                    splash: i,
                    size: r
                } = e;
                if (null == i) return null;
                null == r && (r = window.screen.width * (0, u.getDevicePixelRatio)()), r = (0, u.getBestMediaProxySize)(r);
                let s = window.GLOBAL_ENV.CDN_HOST;
                return t = (null != s ? "".concat(location.protocol, "//").concat(s, "/discovery-splashes/").concat(n, "/").concat(i, ".jpg") : location.protocol + window.GLOBAL_ENV.API_ENDPOINT + _.Endpoints.GUILD_DISCOVERY_SPLASH(n, i)) + "?size=".concat(r)
            }

            function b(e) {
                let {
                    id: t,
                    icon: n,
                    size: i,
                    canAnimate: r = !1
                } = e;
                return T({
                    endpoint: _.Endpoints.GUILD_ICON,
                    path: "icons",
                    id: t,
                    hash: n,
                    size: i,
                    canAnimate: r
                })
            }

            function y(e) {
                let {
                    id: t,
                    icon: n,
                    size: i = _.AVATAR_SIZE,
                    canAnimate: r = !1
                } = e;
                return T({
                    endpoint: _.Endpoints.GUILD_TEMPLATE_ICON,
                    path: "guild-templates",
                    id: t,
                    hash: n,
                    size: i,
                    canAnimate: r
                })
            }

            function U(e) {
                let {
                    id: t,
                    icon: n,
                    size: i = _.AVATAR_SIZE,
                    bot: r,
                    botIconFirst: s,
                    fallbackAvatar: a = !0
                } = e;
                if (null != r && s) {
                    let e = g(r, !1, i);
                    if (null != e) return e
                }
                if (null != n) return T({
                    endpoint: _.Endpoints.APPLICATION_ICON,
                    path: "app-icons",
                    id: t,
                    hash: n,
                    size: i,
                    canAnimate: !1
                });
                if (null != r) {
                    let e = g(r, !1, i);
                    if (null != e) return e
                }
                if (a) return f
            }

            function G(e) {
                let {
                    id: t,
                    hash: n,
                    size: i = _.AVATAR_SIZE,
                    keepAspectRatio: r = !1
                } = e;
                return T({
                    endpoint: _.Endpoints.APPLICATION_ICON,
                    path: "app-icons",
                    id: t,
                    hash: n,
                    size: i,
                    canAnimate: !1,
                    keepAspectRatio: r
                })
            }

            function w(e) {
                let {
                    userId: t,
                    assetId: n,
                    assetHash: i,
                    size: r,
                    canAnimate: s = !0
                } = e;
                return T({
                    endpoint: (e, r, s) => _.Endpoints.VIDEO_FILTER_ASSET_STORAGE(t, n, i, s),
                    path: "video-filter-assets/".concat(t),
                    id: n,
                    hash: i,
                    size: r,
                    canAnimate: s
                })
            }

            function x(e) {
                var t, n, r;
                let {
                    id: s,
                    icon: a,
                    applicationId: o,
                    size: u
                } = e;
                if (null != o) return null !== (t = U({
                    id: o,
                    icon: a,
                    size: u
                })) && void 0 !== t ? t : i.DEFAULT_CHANNEL_ICON;
                return null !== (n = T({
                    endpoint: _.Endpoints.CHANNEL_ICON,
                    path: "channel-icons",
                    id: s,
                    hash: a,
                    canAnimate: !1,
                    size: u
                })) && void 0 !== n ? n : (r = s, i.DEFAULT_GROUP_DM_AVATARS[l.default.extractTimestamp(r) % i.DEFAULT_GROUP_DM_AVATARS.length])
            }

            function k(e) {
                return null != e && e.startsWith("a_")
            }

            function F(e) {
                return null != e && e.startsWith("v_")
            }

            function B(e) {
                return null != e && k(function(e) {
                    let t;
                    try {
                        {
                            let n = new URL(e);
                            t = n.pathname
                        }
                        let n = t.split("/");
                        return n.pop()
                    } catch (e) {
                        return null
                    }
                }(e))
            }

            function V(e) {
                return "number" == typeof e ? e : {
                    uri: null != e ? e : void 0
                }
            }
            var H = {
                getUserAvatarURL: A,
                getDefaultAvatarURL: m,
                getGuildMemberAvatarURL: R,
                getGuildMemberAvatarURLSimple: C,
                getGuildMemberAvatarSource: function(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        i = R(e, n);
                    return null != i ? V(i) : t.getAvatarSource(e.guildId, n)
                },
                getGuildMemberBannerURL: O,
                getUserBannerURL: N,
                getAvatarDecorationURL: v,
                hasAnimatedGuildIcon: function(e) {
                    return k(null == e ? void 0 : e.icon)
                },
                isAnimatedIconHash: k,
                getUserAvatarSource(e, t, n) {
                    let i = A(e, t, n);
                    return V(i)
                },
                getGuildIconURL: b,
                getGuildSplashURL: D,
                getGuildSplashSource: function(e) {
                    return V(D(e))
                },
                getGuildDiscoverySplashURL: P,
                getGuildDiscoverySplashSource: function(e) {
                    return V(P(e))
                },
                getGuildBannerURL: L,
                getGuildHomeHeaderURL: M,
                getResourceChannelIconURL: function(e) {
                    let {
                        channelId: t,
                        icon: n
                    } = e;
                    return null == n ? null : T({
                        endpoint: _.Endpoints.GUILD_RESOURCE_CHANNELS_ICON,
                        path: "resource-channels",
                        id: t,
                        hash: n,
                        size: _.AVATAR_SIZE,
                        canAnimate: !0
                    })
                },
                getNewMemberActionIconURL: function(e) {
                    let {
                        channelId: t,
                        icon: n
                    } = e;
                    return null == n ? null : T({
                        endpoint: _.Endpoints.GUILD_NEW_MEMBER_ACTIONS_ICON,
                        path: "new-member-actions",
                        id: t,
                        hash: n,
                        size: _.AVATAR_SIZE,
                        canAnimate: !0
                    })
                },
                getGuildTemplateIconURL: y,
                getChannelIconURL: x,
                getEmojiURL: I,
                getApplicationIconURL: U,
                getGameAssetURL: G,
                getVideoFilterAssetURL: w,
                getGameAssetSource(e) {
                    let t = G(e);
                    return V(t)
                },
                getGuildIconSource(e) {
                    let t = b(e);
                    return V(t)
                },
                getGuildTemplateIconSource(e) {
                    let t = y(e);
                    return V(t)
                },
                getGuildBannerSource(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        n = L(e, t);
                    return V(n)
                },
                getGuildHomeHeaderSource(e) {
                    let t = M(e);
                    return V(t)
                },
                getChannelIconSource(e) {
                    let t = x(e);
                    return V(t)
                },
                getApplicationIconSource(e) {
                    let t = U(e);
                    return V(t)
                },
                makeSource: V,
                getAnimatableSourceWithFallback(e, t) {
                    let n = t(e);
                    if (!(0, d.isAndroid)() || !e || "number" == typeof n) return n;
                    {
                        let e = t(!1);
                        return "number" != typeof e && e.uri === n.uri ? e : [n, {
                            ...e,
                            isForceCached: !0
                        }]
                    }
                }
            }
        },
        845078: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var i = n("754013");
            class r {
                static has(e, t) {
                    return (e & t) != 0
                }
                static asBasicFlag(e) {
                    return i.default.asUintN(20, e)
                }
                static asBigFlag(e) {
                    return !Object.hasOwn(this.cache, e) && (this.cache[e] = i.default.deserialize(e)), this.cache[e]
                }
            }
            r.cache = {}
        },
        745279: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getLocalizedDisplayMonth: function() {
                    return a
                },
                createGatewayCheckoutContext: function() {
                    return l
                },
                captureBillingException: function() {
                    return o
                },
                captureBillingMessage: function() {
                    return u
                }
            });
            var i = n("967117"),
                r = n("286235"),
                s = n("809924");

            function a(e, t) {
                let n = new Date;
                return n.setMonth(e - 1), n.toLocaleString(t, {
                    month: "short"
                })
            }
            async function l(e) {
                let t = null;
                if (null != e && e.paymentGateway === s.PaymentGateways.BRAINTREE) {
                    let e = await (0, i.collectDeviceData)();
                    null != e && (t = {
                        braintree_device_data: e
                    })
                }
                return t
            }

            function o(e, t) {
                r.default.captureException(e, {
                    ...t,
                    tags: {
                        ...null == t ? void 0 : t.tags,
                        app_context: "billing"
                    }
                })
            }

            function u(e, t) {
                r.default.captureMessage(e, {
                    ...t,
                    tags: {
                        ...null == t ? void 0 : t.tags,
                        app_context: "billing"
                    }
                })
            }
        },
        967117: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getBraintreeSDK: function() {
                    return a
                },
                collectDeviceData: function() {
                    return l
                }
            });
            var i = n("269936"),
                r = n("40597"),
                s = n("49111");

            function a() {
                return (0, i.importWithRetry)({
                    createPromise: () => n.el("214808").then(n.t.bind(n, "214808", 21)),
                    webpackId: "214808"
                }).then(e => {
                    let {
                        default: t
                    } = e;
                    return t
                })
            }

            function l() {
                let e = r.default.getClient();
                return null == e ? a().then(e => e.client.create({
                    authorization: s.PaymentSettings.BRAINTREE.KEY
                }).then(e => o(e)).catch(() => null)) : o(e)
            }

            function o(e) {
                return a().then(t => t.dataCollector.create({
                    client: e
                }).then(e => e.deviceData).catch(() => null))
            }
        },
        560528: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getChromeVersion: function() {
                    return _
                },
                getFirefoxVersion: function() {
                    return p
                },
                canUseWebp: function() {
                    return S
                },
                supportsHEVCAlpha: function() {
                    return T
                }
            });
            var i, r, s, a, l, o = n("892445"),
                u = n.n(o);
            let c = (null !== (i = u.name) && void 0 !== i ? i : "unknown").toLowerCase(),
                d = "chrome" === c.toLowerCase() ? parseInt(null !== (r = u.version) && void 0 !== r ? r : "", 10) : -1;

            function _() {
                return d
            }
            let E = "electron" === c.toLowerCase() ? parseInt(null !== (s = u.version) && void 0 !== s ? s : "", 10) : -1,
                f = "firefox" === c.toLowerCase() ? parseInt(null !== (a = u.version) && void 0 !== a ? a : "", 10) : -1;

            function p() {
                return f
            }
            let h = "edge" === c.toLowerCase() ? parseInt(null !== (l = u.version) && void 0 !== l ? l : "", 10) : -1;

            function S() {
                return -1 !== d || -1 !== E || -1 !== f || -1 !== h
            }

            function T() {
                var e;
                let t = window.navigator,
                    n = t.userAgent.toLowerCase(),
                    i = (null === (e = t.mediaCapabilities) || void 0 === e ? void 0 : e.decodingInfo) != null,
                    r = -1 !== n.indexOf("safari") && !(-1 !== n.indexOf("chrome")) && -1 !== n.indexOf("version/");
                return r && i
            }
        },
        791776: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isInputLikeElement: function() {
                    return s
                },
                eventOwnerDocument: function() {
                    return a
                }
            });
            let i = /input/i,
                r = /textarea/i;

            function s(e) {
                if (null == e) return !1;
                if ("true" === e.getAttribute("contenteditable") || r.test(e.tagName)) return !0;
                if (i.test(e.tagName)) {
                    var t;
                    let n = null !== (t = e.getAttribute("type")) && void 0 !== t ? t : "text";
                    if ("text" === n || "password" === n) return !0
                }
                return !1
            }

            function a(e) {
                let {
                    target: t
                } = e;
                return null == t ? null : "ownerDocument" in t ? t.ownerDocument : "document" in t ? t.document : (console.warn("Unable to get owner document from event", e.type), null)
            }
        },
        888400: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isSameDay: function() {
                    return d
                },
                isWithinInterval: function() {
                    return _
                },
                dateFormat: function() {
                    return E
                },
                calendarFormat: function() {
                    return f
                },
                accessibilityLabelCalendarFormat: function() {
                    return p
                },
                diffAsUnits: function() {
                    return S
                },
                unitsAsStrings: function() {
                    return T
                }
            });
            var i = n("377849"),
                r = n.n(i),
                s = n("432959"),
                a = n("915639");
            let l = 864e5,
                o = Object.create(null);

            function u(e) {
                let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                    n = e.getTime();
                return !t && (n -= 6e4 * e.getTimezoneOffset()), Math.floor(n / l) * l
            }

            function c(e, t) {
                return Math.floor((u(e, !1) - u(t, !1)) / l)
            }

            function d(e, t) {
                let n = e.toDate(),
                    i = t.toDate();
                return Math.abs(+n - +i) <= l && n.getDate() === i.getDate()
            }

            function _(e, t, n) {
                return Math.abs(e.valueOf() - t.valueOf()) < n
            }

            function E(e, t) {
                let n = "".concat(e.locale(), ":").concat(t),
                    i = o[n];
                return null == i && (i = o[n] = (0, s.default)(t)), i(e.toDate())
            }

            function f(e) {
                let t;
                let n = r.localeData(),
                    i = r(),
                    s = c(e.toDate(), i.toDate());
                return s < -1 ? E(e, "L LT") : (t = s < 0 ? "lastDay" : s < 1 ? "sameDay" : s < 2 ? "nextDay" : "sameElse", E(e, n.calendar(t, e, i)))
            }

            function p(e) {
                let t;
                let n = r.localeData(),
                    i = r(),
                    s = c(e.toDate(), i.toDate());
                return "sameElse" == (t = s < -1 ? "sameElse" : s < 0 ? "lastDay" : s < 1 ? "sameDay" : s < 2 ? "nextDay" : "sameElse") ? E(e, "LLL") : E(e, n.calendar(t, e, i))
            }
            a.default.addChangeListener(() => {
                o = Object.create(null)
            });
            let h = [{
                key: "days",
                millisecondsInUnit: 864e5
            }, {
                key: "hours",
                millisecondsInUnit: 36e5
            }, {
                key: "minutes",
                millisecondsInUnit: 6e4
            }, {
                key: "seconds",
                millisecondsInUnit: 1e3
            }];

            function S(e, t) {
                let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    i = {
                        days: 0,
                        hours: 0,
                        minutes: 0,
                        seconds: n ? 1 : 0
                    };
                if (e > t || n && Number(e) + 1200 > Number(t)) return i;
                let r = Number(t) - Number(e);
                return h.forEach(e => {
                    let {
                        key: t,
                        millisecondsInUnit: n
                    } = e;
                    i[t] = Math.floor(r / n), r -= i[t] * n
                }), i
            }

            function T(e, t) {
                return e.days > 0 ? t.days.format({
                    days: e.days,
                    hours: e.hours
                }) : e.hours > 0 ? t.hours.format({
                    hours: e.hours,
                    minutes: e.minutes
                }) : t.minutes.format({
                    minutes: Math.max(1, e.minutes)
                })
            }
        },
        718517: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            let i = Object.freeze({
                SECOND: 1e3,
                MINUTE: 6e4,
                HOUR: 36e5,
                DAY: 864e5,
                WEEK: 6048e5,
                DAYS_30: 2592e6
            });
            var r = {
                Millis: i
            }
        },
        993105: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                formatSize: function() {
                    return s
                },
                formatKbSize: function() {
                    return a
                }
            });
            var i = n("782340");
            let r = {
                useKibibytes: !1,
                showDecimalForGB: !0,
                useSpace: !0
            };

            function s(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : r,
                    n = t.useKibibytes ? 1024 : 1e3,
                    s = t.useKibibytes ? 1024 : 1e3,
                    a = Math.ceil(e / n);
                if (a < s) return t.useSpace ? i.default.Messages.FILE_SIZE_MB.format({
                    size: a
                }) : i.default.Messages.FILE_SIZE_MB_NO_SPACE.format({
                    size: a
                });
                let l = a / s;
                return l = t.showDecimalForGB ? Math.round(10 * l) / 10 : Math.round(l), t.useSpace ? i.default.Messages.FILE_SIZE_GB.format({
                    size: l
                }) : i.default.Messages.FILE_SIZE_GB_NO_SPACE.format({
                    size: l
                })
            }

            function a(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : r,
                    n = t.useKibibytes ? 1024 : 1e3,
                    a = t.useKibibytes ? 1024 : 1e3,
                    l = e / n,
                    o = l / a;
                return o >= 1 ? s(l, t) : t.useSpace ? i.default.Messages.FILE_SIZE_KB.format({
                    size: Math.ceil(l)
                }) : i.default.Messages.FILE_SIZE_KB_NO_SPACE.format({
                    size: Math.ceil(l)
                })
            }
        },
        254490: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                transformNativeFile: function() {
                    return f
                },
                makeFile: function() {
                    return p
                },
                classifyFile: function() {
                    return S
                },
                classifyFileName: function() {
                    return T
                },
                sizeString: function() {
                    return I
                },
                maxFileSize: function() {
                    return m
                },
                anyFileTooLarge: function() {
                    return g
                },
                uploadSumTooLarge: function() {
                    return A
                },
                getMaxRequestSize: function() {
                    return C
                }
            });
            var i = n("211648"),
                r = n.n(i),
                s = n("427964"),
                a = n.n(s),
                l = n("143068"),
                o = n("700031"),
                u = n("305961"),
                c = n("697218"),
                d = n("719923"),
                _ = n("49111"),
                E = n("646718");

            function f(e, t) {
                return e instanceof File ? e : p(e.data, e.filename, t)
            }

            function p(e, t, i) {
                let r = n("275584");
                if (null == t && (t = "unknown", "type" in e)) {
                    let n = r.extension(e.type);
                    n && (t += ".".concat(n))
                }
                return null == i && ("type" in e && (i = e.type), i = null != i ? i : r.lookup(t)), new File([e], t, {
                    type: i
                })
            }
            let h = [{
                reType: /^image\/vnd.adobe.photoshop/,
                klass: "photoshop"
            }, {
                reType: /^image\/svg\+xml/,
                klass: "webcode"
            }, {
                reType: /^image\//,
                klass: "image"
            }, {
                reType: /^video\//,
                klass: "video"
            }, {
                reName: /\.pdf$/,
                klass: "acrobat"
            }, {
                reName: /\.ae/,
                klass: "ae"
            }, {
                reName: /\.sketch$/,
                klass: "sketch"
            }, {
                reName: /\.ai$/,
                klass: "ai"
            }, {
                reName: /\.(?:rar|zip|7z|tar|tar\.gz)$/,
                klass: "archive"
            }, {
                reName: /\.(?:c\+\+|cpp|cc|c|h|hpp|mm|m|json|js|rb|rake|py|asm|fs|pyc|dtd|cgi|bat|rss|java|graphml|idb|lua|o|gml|prl|sls|conf|cmake|make|sln|vbe|cxx|wbf|vbs|r|wml|php|bash|applescript|fcgi|yaml|ex|exs|sh|ml|actionscript)$/,
                klass: "code"
            }, {
                reName: /\.(?:txt|rtf|doc|docx|md|pages|ppt|pptx|pptm|key|log)$/,
                klass: "document"
            }, {
                reName: /\.(?:xls|xlsx|numbers|csv)$/,
                klass: "spreadsheet"
            }, {
                reName: /\.(?:html|xhtml|htm|js|xml|xls|xsd|css|styl)$/,
                klass: "webcode"
            }, {
                reName: /\.(?:mp3|ogg|wav|flac)$/,
                klass: "audio"
            }];

            function S(e) {
                return T(e.name, e.type)
            }

            function T(e, t) {
                var n, i;
                e = null !== (i = null === (n = e) || void 0 === n ? void 0 : n.toLowerCase()) && void 0 !== i ? i : "";
                let r = a.find(h, n => null != n.reType && null != t ? n.reType.test(t) : null != n.reName && "" !== e && n.reName.test(e));
                return null != r ? r.klass : "unknown"
            }

            function I(e) {
                return r.filesize(e)
            }

            function m(e) {
                let t = c.default.getCurrentUser();
                l.default.trackExposure({
                    location: "de18ec_1"
                }), o.default.trackExposure({
                    location: "de18ec_2"
                });
                let n = d.default.getUserMaxFileSize(t);
                if (null == e) return n;
                let i = u.default.getGuild(e),
                    r = null != i ? E.BoostedGuildFeatures[i.premiumTier].limits.fileSize : _.MAX_ATTACHMENT_SIZE;
                return Math.max(r, n)
            }

            function g(e, t) {
                let n = m(t);
                return Array.from(e).some(e => e.size > n)
            }

            function A(e) {
                return function(e) {
                    let t = 0;
                    for (let n of e) t += n.size;
                    return t
                }(e) > C()
            }

            function C() {
                let e = c.default.getCurrentUser();
                return null != e && e.isStaff() ? 524288e3 : 524288e3
            }
        },
        568734: function(e, t, n) {
            "use strict";

            function i(e, t) {
                return (e & t) === t
            }

            function r(e, t) {
                return e | t
            }

            function s(e, t) {
                return e & ~t
            }

            function a(e) {
                for (var t = arguments.length, n = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) n[i - 1] = arguments[i];
                return n.reduce((e, t) => e & ~t, e)
            }

            function l(e, t, n) {
                if (n) return e | t;
                return e & ~t
            }

            function o(e, t) {
                if (i(e, t)) return e & ~t;
                return e | t
            }
            n.r(t), n.d(t, {
                hasFlag: function() {
                    return i
                },
                addFlag: function() {
                    return r
                },
                removeFlag: function() {
                    return s
                },
                removeFlags: function() {
                    return a
                },
                setFlag: function() {
                    return l
                },
                toggleFlag: function() {
                    return o
                }
            })
        },
        117362: function(e, t, n) {
            "use strict";

            function i(e, t) {
                if (e === t) return !0;
                if (null == e || null == t || e.length !== t.length) return !1;
                let n = e.length;
                for (let i = 0; i < n; i++)
                    if (e[i] !== t[i]) return !1;
                return !0
            }

            function r(e) {
                let t = null,
                    n = null;
                return function() {
                    for (var r = arguments.length, s = Array(r), a = 0; a < r; a++) s[a] = arguments[a];
                    return !i(t, s) && (n = e(...s)), t = s, n
                }
            }

            function s(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5e3,
                    n = -1,
                    i = null;
                return () => ((null == i || Date.now() >= n) && (n = Date.now() + t, i = e()), i)
            }

            function a(e) {
                for (var t in e) e.hasOwnProperty(t) && delete e[t]
            }
            n.r(t), n.d(t, {
                areArraysShallowlyEqual: function() {
                    return i
                },
                cachedFunction: function() {
                    return r
                },
                promiseThrottle: function() {
                    return s
                },
                clearObject: function() {
                    return a
                }
            })
        },
        269180: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var i = n("157552"),
                r = n("605250"),
                s = n("831610"),
                a = n("261131"),
                l = n("271938"),
                o = n("86878"),
                u = n("368694"),
                c = n("560733"),
                d = n("152723"),
                _ = n("773336"),
                E = n("253981"),
                f = n("50885"),
                p = n("49111");
            let h = new r.default("Games"),
                S = {},
                T = 0,
                I = null;

            function m() {
                return null != I ? Promise.resolve(I) : (0, _.isDesktop)() ? f.default.ensureModule("discord_game_utils").then(() => {
                    let e = f.default.getGameUtils();
                    return null != e && null != e.findLaunchable ? (I = e, e) : Promise.reject(Error("game utils not found"))
                }) : Promise.reject(Error("not desktop client"))
            }

            function g(e) {
                let t = {
                        id: e.id,
                        name: e.name,
                        thirdPartySkus: e.thirdPartySkus,
                        executables: e.executables.filter(e => e.os === (0, _.getPlatformName)()).map(e => e.name)
                    },
                    n = e.aliases.map(e => ({
                        ...t,
                        name: e
                    }));
                return [t, ...n]
            }

            function A(e) {
                return {
                    id: e
                }
            }
            async function C(e) {
                if (!Array.isArray(e) && (e = [e]), !u.default.isDeveloper && (e = e.filter(e => null == e.thirdPartySkus || -1 === e.thirdPartySkus.findIndex(e => {
                        let {
                            distributor: t
                        } = e;
                        return t === p.Distributors.BATTLENET
                    }))), 0 === e.length) throw Error("No remaining launchable queries");
                let t = Date.now();
                t > T && (T = t + 36e5, S = {});
                let n = await m();
                for (let t of e) {
                    let e = S[t.id];
                    if (null != e) return e;
                    let i = await new Promise(e => n.findLaunchable(t, e));
                    if (null != i) return S[t.id] = i, i
                }
                throw Error("could not find launchable")
            }

            function R(e, t, n) {
                let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
                if (e()) {
                    t();
                    return
                }
                setTimeout(() => {
                    250 * i <= 12e4 ? R(e, t, n, i + 1) : n()
                }, 250)
            }

            function N(e) {
                return h.info("launch", e), new Promise((t, n) => {
                    let i = E.default.safeParseWithQuery(e.launchTarget);
                    null == i ? n(Error("Failed to parse launch target. ".concat(e.launchTarget))) : (window.open(e.launchTarget), t([]))
                })
            }
            var v = {
                waitSubscribed: (e, t) => new Promise((n, i) => R(() => a.default.isSubscribed(e, t), n, i)),
                waitConnected(e) {
                    return new Promise(R.bind(this, () => o.default.isConnected(e)))
                },
                isLaunchable: e => C(g(e)).then(e => null != e).catch(() => !1),
                launch: e => C(g(e)).then(N),
                launchDispatchApplication(e, t, n, r, a) {
                    let {
                        launchOptions: o,
                        defaultLaunchOptionId: u,
                        installPath: _,
                        applicationId: E,
                        branchId: f,
                        buildId: h,
                        shouldPatch: S
                    } = e;
                    if (null == o || null == u || null == _) throw Error("Couldn't construct launchable for ".concat(e.applicationId));
                    null == a && (a = u);
                    let T = o[a];
                    if (null == T) throw Error("Couldn't construct launchable for ".concat(e.applicationId, ". No launch option."));
                    return (0, i.fetchBranches)([f]).then(e => {
                        let t = e[0];
                        if (null == t) return Promise.reject(Error("branch is null"));
                        let {
                            liveBuildId: n
                        } = t;
                        if (S && n !== h) return Promise.reject(Error("live build id changed"))
                    }).then(() => d.default.runLaunchSetup(E, f)).then(() => {
                        let e = (0, s.default)(_),
                            i = {
                                DISCORD_INSTANCE_ID: c.default.getId().toString(),
                                DISCORD_ACCESS_TOKEN: null != t ? t : "",
                                DISCORD_CURRENT_LOCALE: n,
                                DISCORD_CURRENT_BRANCH: r,
                                DISCORD_STORAGE_PATH: p.DefaultCloudSyncConfiguration.ROOT_STORAGE_PATH(e, l.default.getId())
                            };
                        return d.default.launch(E, f, T.name, i)
                    })
                },
                removeShortcuts(e) {
                    var t;
                    return (0, _.isWindows)() ? m().then(n => {
                        var i;
                        return null !== (t = null === (i = n.removeShortcuts) || void 0 === i ? void 0 : i.call(n, e)) && void 0 !== t && t
                    }) : Promise.resolve(!1)
                },
                createShortcuts(e, t, n, i, r) {
                    var s;
                    if (null == r || !(0, _.isWindows)()) return Promise.resolve(!1);
                    let a = "discord:///library/".concat(i, "/launch"),
                        l = "".concat(r, "\\icon.ico");
                    return m().then(i => {
                        var r;
                        return null !== (s = null === (r = i.createShortcuts) || void 0 === r ? void 0 : r.call(i, e, t, n, a, l)) && void 0 !== s && s
                    })
                },
                isGameLaunchable: e => C({
                    id: e
                }).then(e => null != e).catch(() => !1),
                launchGame(e) {
                    if (o.default.isConnected(e)) return Promise.resolve();
                    return C({
                        id: e
                    }).then(N)
                },
                isProtocolRegistered(e) {
                    var t;
                    return m().then(n => {
                        var i;
                        return null !== (t = null === (i = n.isProtocolSchemeRegistered) || void 0 === i ? void 0 : i.call(n, e)) && void 0 !== t && t
                    })
                },
                setRecentGames(e) {
                    m().then(t => {
                        var n;
                        return null === (n = t.setRecentGames) || void 0 === n ? void 0 : n.call(t, e)
                    }).catch(() => {})
                }
            }
        },
        665618: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fromServer: function() {
                    return o
                },
                fromBackgroundSync: function() {
                    return u
                },
                fromServerUpdate: function() {
                    return c
                },
                fromInviteGuild: function() {
                    return d
                },
                toServer: function() {
                    return _
                },
                fromSerializedGuildRecord: function() {
                    return E
                },
                filterRoleDeletes: function() {
                    return f
                }
            });
            var i = n("287088"),
                r = n("886167"),
                s = n("813006"),
                a = n("605136"),
                l = n("49111");

            function o(e, t) {
                var n, o, u, c, d, _, E, f, p, h, S, T, I, m;
                let g = {
                    id: e.id,
                    name: null !== (n = e.properties.name) && void 0 !== n ? n : "",
                    description: e.properties.description,
                    icon: e.properties.icon,
                    splash: e.properties.splash,
                    banner: e.properties.banner,
                    homeHeader: e.properties.home_header,
                    features: new Set(null !== (o = e.properties.features) && void 0 !== o ? o : []),
                    preferredLocale: null !== (u = e.properties.preferred_locale) && void 0 !== u ? u : "en-us",
                    ownerId: e.properties.owner_id,
                    application_id: e.properties.application_id,
                    roles: e.roles instanceof Array ? (0, a.sortServerRoles)(e.id, e.roles) : e.roles,
                    afkChannelId: e.properties.afk_channel_id,
                    afkTimeout: e.properties.afk_timeout,
                    systemChannelId: e.properties.system_channel_id,
                    joinedAt: null != e.joined_at ? new Date(e.joined_at) : null == t ? void 0 : t.joinedAt,
                    verificationLevel: null !== (c = e.properties.verification_level) && void 0 !== c ? c : l.VerificationLevels.NONE,
                    explicitContentFilter: null !== (d = e.properties.explicit_content_filter) && void 0 !== d ? d : l.GuildExplicitContentFilterTypes.DISABLED,
                    defaultMessageNotifications: null !== (_ = e.properties.default_message_notifications) && void 0 !== _ ? _ : l.UserNotificationSettings.ALL_MESSAGES,
                    mfaLevel: null !== (E = e.properties.mfa_level) && void 0 !== E ? E : l.MFALevels.NONE,
                    vanityURLCode: e.properties.vanity_url_code,
                    premiumTier: null !== (f = e.properties.premium_tier) && void 0 !== f ? f : l.BoostedGuildTiers.NONE,
                    premiumSubscriberCount: null !== (p = e.premium_subscription_count) && void 0 !== p ? p : 0,
                    premiumProgressBarEnabled: e.properties.premium_progress_bar_enabled || !1,
                    systemChannelFlags: e.properties.system_channel_flags,
                    discoverySplash: e.properties.discovery_splash,
                    rulesChannelId: e.properties.rules_channel_id,
                    safetyAlertsChannelId: e.properties.safety_alerts_channel_id,
                    publicUpdatesChannelId: e.properties.public_updates_channel_id,
                    maxStageVideoChannelUsers: null !== (h = e.properties.max_stage_video_channel_users) && void 0 !== h ? h : -1,
                    maxVideoChannelUsers: null !== (S = e.properties.max_video_channel_users) && void 0 !== S ? S : -1,
                    maxMembers: null !== (T = e.properties.max_members) && void 0 !== T ? T : -1,
                    nsfwLevel: null !== (I = e.properties.nsfw_level) && void 0 !== I ? I : l.GuildNSFWContentLevel.DEFAULT,
                    applicationCommandCounts: null !== (m = e.application_command_counts) && void 0 !== m ? m : {},
                    hubType: e.properties.hub_type,
                    latestOnboardingQuestionId: e.properties.latest_onboarding_question_id,
                    inventorySettings: (0, r.guildInventorySettingsFromServer)(e.properties.inventory_settings)
                };
                return null == t ? (0, i.dangerouslyCast)(g, s.default) : t.merge(g)
            }

            function u(e, t) {
                var n, i, s, o, u, c, d, E, p, h, S, T, I;
                let m = null !== (n = e.properties) && void 0 !== n ? n : _(t),
                    g = {
                        id: e.id,
                        name: null !== (i = m.name) && void 0 !== i ? i : "",
                        description: m.description,
                        icon: m.icon,
                        splash: m.splash,
                        banner: m.banner,
                        homeHeader: m.home_header,
                        features: new Set(null !== (s = m.features) && void 0 !== s ? s : []),
                        preferredLocale: null !== (o = m.preferred_locale) && void 0 !== o ? o : "en-us",
                        ownerId: m.owner_id,
                        application_id: m.application_id,
                        roles: "partial" === e.data_mode ? f(e.id, t.roles, e.partial_updates.roles, e.partial_updates.deleted_role_ids) : (0, a.sortServerRoles)(e.id, e.roles),
                        afkChannelId: m.afk_channel_id,
                        afkTimeout: m.afk_timeout,
                        systemChannelId: m.system_channel_id,
                        verificationLevel: null !== (u = m.verification_level) && void 0 !== u ? u : l.VerificationLevels.NONE,
                        explicitContentFilter: null !== (c = m.explicit_content_filter) && void 0 !== c ? c : l.GuildExplicitContentFilterTypes.DISABLED,
                        defaultMessageNotifications: null !== (d = m.default_message_notifications) && void 0 !== d ? d : l.UserNotificationSettings.ALL_MESSAGES,
                        mfaLevel: null !== (E = m.mfa_level) && void 0 !== E ? E : l.MFALevels.NONE,
                        vanityURLCode: m.vanity_url_code,
                        premiumTier: null !== (p = m.premium_tier) && void 0 !== p ? p : l.BoostedGuildTiers.NONE,
                        premiumProgressBarEnabled: m.premium_progress_bar_enabled || !1,
                        systemChannelFlags: m.system_channel_flags,
                        discoverySplash: m.discovery_splash,
                        rulesChannelId: m.rules_channel_id,
                        safetyAlertsChannelId: m.safety_alerts_channel_id,
                        publicUpdatesChannelId: m.public_updates_channel_id,
                        maxStageVideoChannelUsers: null !== (h = m.max_stage_video_channel_users) && void 0 !== h ? h : -1,
                        maxVideoChannelUsers: null !== (S = m.max_video_channel_users) && void 0 !== S ? S : -1,
                        maxMembers: null !== (T = m.max_members) && void 0 !== T ? T : -1,
                        nsfwLevel: null !== (I = m.nsfw_level) && void 0 !== I ? I : l.GuildNSFWContentLevel.DEFAULT,
                        hubType: m.hub_type,
                        latestOnboardingQuestionId: m.latest_onboarding_question_id,
                        inventorySettings: (0, r.guildInventorySettingsFromServer)(m.inventory_settings)
                    };
                return t.merge(g)
            }

            function c(e, t) {
                let n = {
                    id: e.id,
                    name: e.name,
                    description: e.description,
                    icon: e.icon,
                    splash: e.splash,
                    banner: e.banner,
                    homeHeader: e.home_header,
                    features: e.features,
                    preferredLocale: e.preferred_locale,
                    ownerId: e.owner_id,
                    application_id: e.application_id,
                    roles: (0, a.sortServerRoles)(e.id, e.roles),
                    afkChannelId: e.afk_channel_id,
                    afkTimeout: e.afk_timeout,
                    systemChannelId: e.system_channel_id,
                    joinedAt: null != e.joined_at ? new Date(e.joined_at) : null == t ? void 0 : t.joinedAt,
                    verificationLevel: e.verification_level,
                    explicitContentFilter: e.explicit_content_filter,
                    defaultMessageNotifications: e.default_message_notifications,
                    mfaLevel: e.mfa_level,
                    vanityURLCode: e.vanity_url_code,
                    premiumTier: e.premium_tier,
                    premiumSubscriberCount: e.premium_subscription_count,
                    premiumProgressBarEnabled: e.premium_progress_bar_enabled,
                    systemChannelFlags: e.system_channel_flags,
                    discoverySplash: e.discovery_splash,
                    rulesChannelId: e.rules_channel_id,
                    safetyAlertsChannelId: e.safety_alerts_channel_id,
                    publicUpdatesChannelId: e.public_updates_channel_id,
                    maxStageVideoChannelUsers: e.max_stage_video_channel_users,
                    maxVideoChannelUsers: e.max_video_channel_users,
                    maxMembers: e.max_members,
                    nsfwLevel: e.nsfw_level,
                    hubType: e.hub_type,
                    latestOnboardingQuestionId: e.latest_onboarding_question_id,
                    inventorySettings: (0, r.guildInventorySettingsFromServer)(e.inventory_settings)
                };
                return null == t ? new s.default(n) : t.merge(n)
            }

            function d(e) {
                let t = {
                    id: e.id,
                    name: e.name,
                    description: e.description,
                    icon: e.icon,
                    splash: e.splash,
                    banner: e.banner,
                    features: e.features,
                    verificationLevel: e.verification_level,
                    vanityURLCode: e.vanity_url_code,
                    premiumSubscriberCount: e.premium_subscription_count,
                    nsfwLevel: e.nsfw_level,
                    memberCount: e.approximate_member_count
                };
                return new s.default(t)
            }

            function _(e) {
                return {
                    id: e.id,
                    name: e.name,
                    description: e.description,
                    icon: e.icon,
                    splash: e.splash,
                    banner: e.banner,
                    home_header: e.homeHeader,
                    features: Array.from(e.features),
                    preferred_locale: e.preferredLocale,
                    owner_id: e.ownerId,
                    application_id: e.application_id,
                    afk_channel_id: e.afkChannelId,
                    afk_timeout: e.afkTimeout,
                    system_channel_id: e.systemChannelId,
                    verification_level: e.verificationLevel,
                    explicit_content_filter: e.explicitContentFilter,
                    default_message_notifications: e.defaultMessageNotifications,
                    mfa_level: e.mfaLevel,
                    vanity_url_code: e.vanityURLCode,
                    premium_tier: e.premiumTier,
                    premium_progress_bar_enabled: e.premiumProgressBarEnabled,
                    system_channel_flags: e.systemChannelFlags,
                    discovery_splash: e.discoverySplash,
                    rules_channel_id: e.rulesChannelId,
                    safety_alerts_channel_id: e.safetyAlertsChannelId,
                    public_updates_channel_id: e.publicUpdatesChannelId,
                    max_stage_video_channel_users: e.maxStageVideoChannelUsers,
                    max_video_channel_users: e.maxVideoChannelUsers,
                    unavailable: !1,
                    max_members: e.maxMembers,
                    nsfw_level: e.nsfwLevel,
                    hub_type: e.hubType,
                    latest_onboarding_question_id: e.latestOnboardingQuestionId,
                    inventory_settings: (0, r.guildInventorySettingsToServer)(e.inventorySettings)
                }
            }

            function E(e) {
                var t;
                for (let n in null != e.joinedAt && (e.joinedAt = new Date(e.joinedAt)), e.features = new Set(null !== (t = e.features) && void 0 !== t ? t : []), e.roles)(0, a.fromSerializedGuildRole)(e.roles[n]);
                return (0, i.dangerouslyCast)(e, s.default)
            }

            function f(e, t, n, i) {
                let r = !1;
                if (null != i)
                    for (let e of i) delete t[e], r = !0;
                if (null != n && n.length > 0) {
                    for (let e of n) t[e.id] = (0, a.fromServerRole)(e);
                    r = !0
                }
                return r ? (0, a.sortClientRoles)(e, Object.values(t)) : t
            }
        },
        605136: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fromSerializedGuildRole: function() {
                    return a
                },
                fromServerRole: function() {
                    return l
                },
                sortClientRoles: function() {
                    return o
                },
                sortServerRoles: function() {
                    return u
                }
            });
            var i = n("754013"),
                r = n("253824"),
                s = n("299039");

            function a(e) {
                e.permissions = i.default.deserialize(e.permissions)
            }

            function l(e) {
                var t;
                return {
                    id: e.id,
                    name: e.name,
                    permissions: i.default.deserialize(e.permissions),
                    mentionable: e.mentionable,
                    position: e.position,
                    originalPosition: e.position,
                    color: e.color,
                    colorString: null != e.color && 0 !== e.color ? (0, r.int2hex)(e.color) : null,
                    hoist: e.hoist,
                    managed: e.managed,
                    tags: e.tags,
                    icon: e.icon,
                    unicodeEmoji: e.unicode_emoji,
                    flags: null !== (t = e.flags) && void 0 !== t ? t : 0
                }
            }

            function o(e, t) {
                if (null == t) return {};
                let n = t.length - 1,
                    i = {};
                return t.sort((t, n) => {
                    var i, r;
                    let a = t.id === e ? 1 / 0 : -(null !== (i = t.originalPosition) && void 0 !== i ? i : t.position),
                        l = n.id === e ? 1 / 0 : -(null !== (r = n.originalPosition) && void 0 !== r ? r : n.position);
                    return a === l ? s.default.compare(t.id, n.id) : a < l ? -1 : a === l ? 0 : 1
                }).forEach((e, t) => {
                    e.position = n - t, i[e.id] = e
                }), i
            }

            function u(e, t) {
                return null == t ? {} : o(e, t.map(l))
            }
        },
        701909: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SUPPORT_LOCATION: function() {
                    return u
                },
                default: function() {
                    return E
                }
            });
            var i = n("990746"),
                r = n("15649"),
                s = n("915639"),
                a = n("271938"),
                l = n("773336"),
                o = n("49111");
            let u = "https://".concat(o.SUPPORT_DOMAIN),
                c = "https://".concat(o.SUPPORT_DEV_DOMAIN);

            function d(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : u;
                return t + e
            }

            function _() {
                return s.default.locale.toLowerCase()
            }
            var E = {
                getArticleURL: e => d("/hc/".concat(_(), "/articles/").concat(e)),
                getDevArticleURL: e => d("/hc/".concat(_(), "/articles/").concat(e), c),
                getCreatorSupportArticleURL: e => d("/hc/".concat(_(), "/articles/").concat(e), "https://creator-support.discord.com"),
                getTwitterURL: () => (0, r.default)(o.LocalizedLinks.TWITTER),
                getCommunityURL: () => d("/hc/".concat(_())),
                getSubmitRequestURL(e) {
                    let t = d("/hc/".concat(_(), "/requests/new?platform=").concat(encodeURIComponent((0, l.getPlatformName)())));
                    return null != e && (t += "&device_info=".concat(encodeURIComponent(e))), t
                },
                async getSubmitRequestURLAuthenticated(e) {
                    let t = a.default.getToken();
                    if (null == t) return this.getSubmitRequestURL(e);
                    let n = await i.default.get({
                            url: o.Endpoints.SSO_TOKEN,
                            headers: {
                                authorization: t
                            }
                        }),
                        r = this.getSubmitRequestURL(e);
                    return "".concat(i.default.getAPIBaseURL()).concat(o.Endpoints.SSO, "?service=zendesk&return_to=").concat(r, "&token=").concat(n.body.token)
                },
                getSearchURL(e) {
                    let t = encodeURIComponent(e);
                    return d("/hc/".concat(_(), "/search?utf8=%E2%9C%93&query=").concat(t, "&commit=Search"))
                },
                getFeaturedArticlesJsonURL: () => d("/api/v2/help_center/en-us/articles.json?label_names=featured")
            }
        },
        595698: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getIntersectionObserver: function() {
                    return a
                },
                watch: function() {
                    return l
                },
                unwatch: function() {
                    return o
                }
            });
            let i = new WeakMap,
                r = new WeakMap;

            function s(e, t) {
                e.forEach(e => {
                    var n;
                    let i = null === (n = r.get(t)) || void 0 === n ? void 0 : n.get(e.target);
                    null != i && i.call(null, e)
                })
            }

            function a(e) {
                let t = i.get(e);
                return null == t && (t = new IntersectionObserver(s, e), i.set(e, t), r.set(t, new WeakMap)), t
            }

            function l(e, t, n) {
                var i;
                let s = null !== (i = r.get(e)) && void 0 !== i ? i : new WeakMap;
                !s.has(t) && e.observe(t), s.set(t, n), r.set(e, s)
            }

            function o(e, t) {
                var n;
                let i = null !== (n = r.get(e)) && void 0 !== n ? n : new WeakMap;
                i.has(t) && (i.delete(t), e.unobserve(t), r.set(e, i))
            }
        },
        964889: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getComboId: function() {
                    return l
                },
                convertComboId: function() {
                    return o
                },
                shouldShareApplicationActivity: function() {
                    return u
                },
                calculateProgressPercentage: function() {
                    return c
                },
                shouldShowGameInLibrary: function() {
                    return d
                },
                convertToTransitionState: function() {
                    return _
                },
                getCombinedProgress: function() {
                    return E
                },
                isUserEntitledToLibraryApplication: function() {
                    return f
                }
            });
            var i = n("845579"),
                r = n("697218"),
                s = n("552712"),
                a = n("49111");

            function l(e, t) {
                return "".concat(e, ":").concat(t)
            }

            function o(e) {
                let [t, n] = e.split(":");
                return {
                    applicationId: t,
                    branchId: n
                }
            }

            function u(e, t) {
                if (!i.ShowCurrentGame.getSetting() || i.StatusSetting.getSetting() === a.StatusTypes.INVISIBLE) return !1;
                let n = t.getActiveLibraryApplication(e);
                return null == n || !n.hasFlag(a.LibraryApplicationFlags.PRIVATE)
            }

            function c(e, t) {
                return 0 === t ? 100 : e / t * 100
            }

            function d(e, t, n) {
                return !(null == t || n.enabled && t.hasFlag(a.LibraryApplicationFlags.PRIVATE)) && !t.isHidden()
            }

            function _(e) {
                return null == e ? null : e.type === a.LocalDispatchApplicationStates.INSTALLING || e.type === a.LocalDispatchApplicationStates.UPDATING || e.type === a.LocalDispatchApplicationStates.UNINSTALLING ? e : null
            }

            function E(e) {
                return e.reduce((e, t) => {
                    let n = _(t);
                    return null == n || t.type === a.LocalDispatchApplicationStates.UP_TO_DATE ? e : {
                        total: e.total + Number(n.total),
                        progress: e.progress + Number(n.progress)
                    }
                }, {
                    total: 0,
                    progress: 0
                })
            }

            function f(e) {
                return !!e.isDiscordApplication() && e.isEntitled(r.default.getCurrentUser(), s.default)
            }
        },
        222038: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                hasCrypto: function() {
                    return u
                },
                hasWebAuthn: function() {
                    return c
                },
                generateTotpSecret: function() {
                    return d
                },
                encodeTotpSecret: function() {
                    return _
                },
                encodeTotpSecretAsUrl: function() {
                    return E
                }
            });
            var i, r, s, a = n("428174");
            let l = null !== (s = null === (i = window) || void 0 === i ? void 0 : i.crypto) && void 0 !== s ? s : null === (r = window) || void 0 === r ? void 0 : r.msCrypto,
                o = "Uint8Array" in window,
                u = null != l && "getRandomValues" in l && o,
                c = "PublicKeyCredential" in window && o;

            function d() {
                var e;
                return function(e) {
                    let t = a.encode(e).toString("utf8").replace(/=/g, "");
                    return t.toLowerCase().replace(/(\w{4})/g, "$1 ").trim()
                }((e = 20, l.getRandomValues(new Uint8Array(20))))
            }

            function _(e) {
                return e.replace(/[\s._-]+/g, "").toUpperCase()
            }

            function E(e, t) {
                let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "Discord";
                return "otpauth://totp/".concat(encodeURI(n), ":").concat(encodeURI(e), "?secret=").concat(_(t), "&issuer=").concat(encodeURIComponent(n))
            }
        },
        152723: function(e, t, n) {
            "use strict";
            let i, r;
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var s = n("913144"),
                a = n("846071"),
                l = n("605250"),
                o = n("697218"),
                u = n("316661"),
                c = n("599110"),
                d = n("773336"),
                _ = n("50885"),
                E = n("49111");
            let f = new l.default("NativeDispatchUtils");

            function p() {
                return null == r && f.warn("Tried getting Dispatch instance before instantiated"), r
            }

            function h(e) {
                let t = JSON.parse(e);
                return f.log("Native Dispatch error", t), new a.default(t)
            }

            function S(e, t) {
                "" !== e && h(e)
            }
            var T = {
                init(e) {
                    let {
                        userToken: t,
                        userId: n,
                        installPaths: s,
                        platform: a,
                        stateCallback: l,
                        errorCallback: u
                    } = e;
                    null == r && (null != i ? Promise.resolve(i) : (0, d.isDesktop)() ? Promise.all([_.default.ensureModule("discord_dispatch"), _.default.ensureModule("discord_modules")]).then(() => {
                        _.default.requireModule("discord_modules");
                        let e = _.default.getDispatch();
                        return null != e ? (i = e, e) : Promise.reject(Error("dispatch not found"))
                    }) : Promise.reject(Error("not desktop client"))).then(e => {
                        var i;
                        let d = {
                                environment: window.GLOBAL_ENV.RELEASE_CHANNEL,
                                build_number: "240376"
                            },
                            _ = o.default.getCurrentUser();
                        null != _ && (d.user_id = _.id, d.user_name = _.tag, null != _.email && (d.email = _.email));
                        let f = {
                            user_token: t,
                            user_id: n,
                            install_paths: s.map(e => {
                                let {
                                    path: t
                                } = e;
                                return t
                            }),
                            api_endpoint: "".concat((i = "https:", "https:")).concat(window.GLOBAL_ENV.API_ENDPOINT),
                            environment: window.GLOBAL_ENV.PROJECT_ENV,
                            sentry: d,
                            platform: a
                        };
                        r = new e.Dispatch(JSON.stringify(f), e => {
                            let t = JSON.parse(e);
                            l({
                                applications: t.applications,
                                paused: t.paused,
                                currentTask: null != t.current_task ? {
                                    applicationId: t.current_task.application_id,
                                    branchId: t.current_task.branch_id
                                } : null,
                                nextTask: null != t.next_task ? {
                                    applicationId: t.next_task.application_id,
                                    branchId: t.next_task.branch_id
                                } : null
                            })
                        }, e => {
                            let t = h(e);
                            u(t)
                        }, e => {
                            let t = JSON.parse(e);
                            ! function(e) {
                                let {
                                    properties: t
                                } = e;
                                switch (null != t.stage && null != t.stage.type && (t.stage = t.stage.type), e.event_name) {
                                    case E.AnalyticEvents.DISPATCH_PATCH_STARTED:
                                    case E.AnalyticEvents.DISPATCH_PATCH_PAUSED:
                                    case E.AnalyticEvents.DISPATCH_PATCH_FAILED:
                                    case E.AnalyticEvents.DISPATCH_PATCH_VERIFICATION_FAILED:
                                    case E.AnalyticEvents.DISPATCH_PATCH_COMPLETE:
                                    case E.AnalyticEvents.DISPATCH_PATCH_CANCELLED:
                                    case E.AnalyticEvents.DISPATCH_APPLICATION_UNINSTALLED:
                                        c.default.track(e.event_name, t)
                                }
                            }(t)
                        })
                    })
                },
                destroy() {
                    let e = p();
                    null != e && void 0 !== e.destroy && (e.destroy(), r = null)
                },
                setTargetManifest(e) {
                    let {
                        applicationId: t,
                        applicationName: n,
                        applicationIcon: i,
                        branchId: r,
                        buildId: s,
                        manifestIds: a,
                        installationPath: l
                    } = e, o = p();
                    null != o && o.command(JSON.stringify({
                        command: "SetTargetManifest",
                        application_id: t,
                        application_name: n,
                        application_icon: i,
                        branch_id: r,
                        build_id: s,
                        manifest_ids: a,
                        install_path: l
                    }), S)
                },
                setCurrentTask(e, t, n, i, r) {
                    let s = p();
                    return null != s && (s.command(JSON.stringify({
                        command: "SetCurrentTask",
                        application_id: e,
                        branch_id: t,
                        action: n,
                        user_id: i,
                        user_token: r
                    }), S), !0)
                },
                setCredentials(e, t) {
                    let n = p();
                    null != n && n.command(JSON.stringify({
                        command: "SetCredentials",
                        user_id: e,
                        user_token: t
                    }), S)
                },
                cancel(e, t) {
                    let n = p();
                    null != n && n.command(JSON.stringify({
                        command: "Cancel",
                        application_id: e,
                        branch_id: t
                    }), S)
                },
                uninstall(e, t) {
                    let n = p();
                    null != n && n.command(JSON.stringify({
                        command: "Uninstall",
                        application_id: e,
                        branch_id: t
                    }), S)
                },
                pause() {
                    let e = p();
                    null != e && e.command(JSON.stringify({
                        command: "Pause"
                    }), S)
                },
                resume() {
                    let e = p();
                    null != e && e.command(JSON.stringify({
                        command: "Resume"
                    }), S)
                },
                queryDirectory(e, t) {
                    let n = p();
                    null != n && n.command(JSON.stringify({
                        command: "QueryDirectory",
                        path: e
                    }), (e, n) => {
                        if ("" !== e) t(JSON.parse(e));
                        else if (null != n) {
                            let e = JSON.parse(n);
                            t(null, {
                                hasPermission: e.has_permission,
                                availableKB: parseInt(e.available_kb),
                                totalKB: parseInt(e.total_kb)
                            })
                        }
                    })
                },
                runLaunchSetup: (e, t) => u.default.isRunning() ? Promise.reject(Error("Already running launch setup.")) : (s.default.dispatch({
                    type: "DISPATCH_APPLICATION_LAUNCH_SETUP_START"
                }), new Promise((n, i) => {
                    let r = p();
                    if (null == r) {
                        i(Error("native dispatch instance not found"));
                        return
                    }
                    r.command(JSON.stringify({
                        command: "RunLaunchSetup",
                        application_id: e,
                        branch_id: t
                    }), (e, t, r) => {
                        if ("" !== e) {
                            s.default.dispatch({
                                type: "DISPATCH_APPLICATION_LAUNCH_SETUP_COMPLETE"
                            });
                            let t = h(e);
                            s.default.dispatch({
                                type: "DISPATCH_APPLICATION_ERROR",
                                error: t
                            }), null != t.code && t.code === E.DispatchErrorCodes.POST_INSTALL_CANCELLED ? i(t) : n();
                            return
                        }
                        if ("" !== t) {
                            s.default.dispatch({
                                type: "DISPATCH_APPLICATION_LAUNCH_SETUP_COMPLETE"
                            }), n();
                            return
                        }
                        if ("" !== r) {
                            let e = JSON.parse(r);
                            s.default.dispatch({
                                type: "DISPATCH_APPLICATION_INSTALL_SCRIPTS_PROGRESS_UPDATE",
                                progress: e.progress,
                                total: e.total,
                                name: e.name
                            })
                        }
                    })
                })),
                launch: (e, t, n, i) => new Promise((r, s) => {
                    let a = p();
                    if (null == a) {
                        s(Error("native dispatch instance not found"));
                        return
                    }
                    a.command(JSON.stringify({
                        command: "Launch",
                        application_id: e,
                        branch_id: t,
                        option_name: n,
                        environment: i
                    }), function(e, t) {
                        if ("" !== e) s(h(e));
                        else {
                            let e = JSON.parse(t);
                            r([e.pid])
                        }
                    })
                })
            }
        },
        35468: function(e, t, n) {
            "use strict";
            let i;
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            }), i = n("788235").default;
            let r = [],
                s = !1;
            var a = {
                ...i,
                awaitOnline: () => new Promise(e => {
                    if (i.isOnline()) return e();
                    {
                        if (r.push(e), s) return;
                        s = !0;
                        let t = () => {
                            r.forEach(e => e()), r.length = 0, s = !1, i.removeOnlineCallback(t)
                        };
                        i.addOnlineCallback(t)
                    }
                })
            }
        },
        240481: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                shortenAndLocalizeNumber: function() {
                    return r
                },
                humanizeValue: function() {
                    return s
                },
                parseInteger: function() {
                    return a
                }
            });
            var i = n("782340");

            function r(e) {
                if (e < 1e6) return i.default.Messages.NUMBER_ABBREVIATION_FULL.format({
                    value: e
                });
                let t = (e / 1e6).toFixed(1);
                return i.default.Messages.NUMBER_ABBREVIATION_MILLIONS.format({
                    value: t
                })
            }

            function s(e, t) {
                if (e < 1e3) return i.default.Messages.NUMBER_ABBREVIATION_FULL.format({
                    value: Math.floor(e)
                });
                if (e < 1e6) return i.default.Messages.NUMBER_ABBREVIATION_THOUSANDS.format({
                    value: Math.floor(e / 1e3)
                });
                let n = Math.floor(10 * e / 1e6) / 10,
                    r = new Intl.NumberFormat(t, {
                        maximumFractionDigits: 1
                    }).format(n);
                return i.default.Messages.NUMBER_ABBREVIATION_MILLIONS.format({
                    value: r
                })
            }

            function a(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : NaN;
                if (null == e) return t;
                let n = parseInt(e);
                return Number.isNaN(n) ? t : n
            }
        },
        991170: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            });
            var i = n("427964"),
                r = n.n(i),
                s = n("754013"),
                a = n("798609"),
                l = n("681937"),
                o = n("509"),
                u = n("38654"),
                c = n("267567"),
                d = n("755624"),
                _ = n("233069"),
                E = n("271938"),
                f = n("42203"),
                p = n("26989"),
                h = n("305961"),
                S = n("697218"),
                T = n("49111");
            let I = s.default.deserialize(0),
                m = s.default.combine(...r.values(T.Permissions)),
                g = s.default.combine(T.Permissions.CREATE_INSTANT_INVITE, T.Permissions.CHANGE_NICKNAME, T.Permissions.VIEW_CHANNEL, T.Permissions.SEND_MESSAGES, T.Permissions.EMBED_LINKS, T.Permissions.ATTACH_FILES, T.Permissions.READ_MESSAGE_HISTORY, T.Permissions.MENTION_EVERYONE, T.Permissions.USE_EXTERNAL_EMOJIS, T.Permissions.USE_EXTERNAL_STICKERS, T.Permissions.ADD_REACTIONS, T.Permissions.CREATE_PUBLIC_THREADS, T.Permissions.CREATE_PRIVATE_THREADS, T.Permissions.SEND_MESSAGES_IN_THREADS, T.Permissions.CONNECT, T.Permissions.SPEAK, T.Permissions.USE_VAD, T.Permissions.STREAM, T.Permissions.USE_EMBEDDED_ACTIVITIES, T.Permissions.USE_SOUNDBOARD, T.Permissions.REQUEST_TO_SPEAK, T.Permissions.USE_APPLICATION_COMMANDS, T.Permissions.CREATE_GUILD_EXPRESSIONS, T.Permissions.CREATE_EVENTS),
                A = s.default.combine(T.Permissions.VIEW_CHANNEL, T.Permissions.READ_MESSAGE_HISTORY),
                C = s.default.combine(T.Permissions.VIEW_CHANNEL, T.Permissions.SEND_MESSAGES, T.Permissions.CONNECT, T.Permissions.SPEAK, T.Permissions.STREAM, T.Permissions.USE_EMBEDDED_ACTIVITIES, T.Permissions.USE_EXTERNAL_EMOJIS, T.Permissions.USE_EXTERNAL_SOUNDS, T.Permissions.USE_EXTERNAL_STICKERS, T.Permissions.USE_SOUNDBOARD, T.Permissions.USE_VAD),
                R = s.default.combine(T.Permissions.VIEW_CHANNEL, T.Permissions.READ_MESSAGE_HISTORY),
                N = s.default.combine(T.Permissions.VIEW_CHANNEL, T.Permissions.READ_MESSAGE_HISTORY, T.Permissions.CHANGE_NICKNAME),
                v = s.default.combine(T.Permissions.MANAGE_GUILD, T.Permissions.MANAGE_ROLES, T.Permissions.ADMINISTRATOR, T.Permissions.BAN_MEMBERS, T.Permissions.MANAGE_NICKNAMES, T.Permissions.CREATE_GUILD_EXPRESSIONS, T.Permissions.MANAGE_GUILD_EXPRESSIONS, T.Permissions.MANAGE_WEBHOOKS, T.Permissions.VIEW_AUDIT_LOG);

            function O(e, t, n) {
                let i = !(arguments.length > 3) || void 0 === arguments[3] || arguments[3];
                if (i && t.mfaLevel === T.MFALevels.ELEVATED && n === E.default.getId()) {
                    var r;
                    !(null === (r = S.default.getCurrentUser()) || void 0 === r ? void 0 : r.mfaEnabled) && (e = s.default.remove(e, T.ElevatedPermissions))
                }
                return e
            }

            function D(e, t, n, i) {
                let r = i[e];
                if (null != r && (n = s.default.remove(n, r.deny), n = s.default.add(n, r.allow)), null != t) {
                    let e = I,
                        r = I;
                    for (let n = 0; n < t.roles.length; n++) {
                        let a = i[t.roles[n]];
                        null != a && (e = s.default.add(e, a.allow), r = s.default.add(r, a.deny))
                    }
                    n = s.default.remove(n, r), n = s.default.add(n, e);
                    let a = i[t.userId];
                    null != a && (n = s.default.remove(n, a.deny), n = s.default.add(n, a.allow));
                    let u = s.default.has(n, T.Permissions.ADMINISTRATOR),
                        c = (0, l.hasAutomodQuarantinedProfile)(t);
                    c && !u && (n = s.default.filter(n, N));
                    let d = (0, o.isMemberCommunicationDisabled)(t);
                    d && !u && (n = s.default.filter(n, R))
                }
                return n
            }

            function L(e) {
                let {
                    userId: t,
                    member: n,
                    guild: i,
                    overwrites: r,
                    roles: a,
                    checkElevated: l = !0,
                    excludeGuildPermissions: o = !1,
                    lurkerPermissionsMask: u = A
                } = e;
                if (o) return D(i.id, n, I, r);
                a = null != a ? {
                    ...i.roles,
                    ...a
                } : i.roles;
                let d = a[i.id],
                    _ = null != d ? d.permissions : g;
                if (null != n)
                    for (let e = 0; e < n.roles.length; e++) {
                        let t = a[n.roles[e]];
                        void 0 !== t && (_ = s.default.add(_, t.permissions))
                    }
                return _ = s.default.has(_, T.Permissions.ADMINISTRATOR) ? m : D(i.id, n, _, r), (c.default.isLurking(i.id) || (null == n ? void 0 : n.isPending)) && (_ = s.default.filter(_, u)), p.default.isCurrentUserGuest(i.id) && (_ = s.default.filter(_, C)), O(_, i, t, l)
            }

            function M(e) {
                var t, n, i;
                let r, {
                    user: s,
                    context: a,
                    overwrites: l,
                    roles: o,
                    checkElevated: c = !0,
                    excludeGuildPermissions: E = !1
                } = e;
                if (null == s) return I;
                let T = "string" == typeof s ? s : s.id,
                    g = A;
                if (a instanceof _.ChannelRecordBase) {
                    if (a.isScheduledForDeletion()) return I;
                    if (_.THREAD_CHANNEL_TYPES.has(a.type)) {
                        let e = f.default.getChannel(a.parent_id);
                        if (null == e || e.isScheduledForDeletion()) return I;
                        let t = T === (null === (n = S.default.getCurrentUser()) || void 0 === n ? void 0 : n.id) && d.default.hasJoined(a.id);
                        return P(a, M({
                            user: s,
                            context: e,
                            overwrites: l,
                            roles: o,
                            checkElevated: c,
                            excludeGuildPermissions: E
                        }), t)
                    }
                    g = null !== (i = a.computeLurkerPermissionsAllowList()) && void 0 !== i ? i : g;
                    l = null != l ? {
                        ...a.permissionOverwrites,
                        ...l
                    } : a.permissionOverwrites;
                    let e = a.getGuildId();
                    r = null != e ? h.default.getGuild(e) : null
                } else l = null != l ? l : {}, r = a;
                if (null == r) return I;
                if (!(T === (null === (t = S.default.getCurrentUser()) || void 0 === t ? void 0 : t.id) && u.default.isViewingRoles(r.id)) && r.isOwner(T)) return O(m, r, T, c);
                let C = p.default.getMember(r.id, T);
                return L({
                    userId: T,
                    member: C,
                    guild: r,
                    overwrites: l,
                    roles: o,
                    checkElevated: c,
                    excludeGuildPermissions: E,
                    lurkerPermissionsMask: g
                })
            }

            function P(e, t, n) {
                return e.type !== T.ChannelTypes.PRIVATE_THREAD || n || s.default.has(t, T.Permissions.MANAGE_THREADS) ? s.default.has(t, T.Permissions.SEND_MESSAGES_IN_THREADS) ? e.isLockedThread() && !s.default.has(t, T.Permissions.MANAGE_THREADS) ? s.default.remove(t, T.Permissions.SEND_MESSAGES) : s.default.combine(t, T.Permissions.SEND_MESSAGES) : s.default.remove(t, T.Permissions.SEND_MESSAGES) : I
            }

            function b(e) {
                return {
                    id: e,
                    type: a.PermissionOverwriteType.ROLE,
                    allow: I,
                    deny: I
                }
            }

            function y(e) {
                let {
                    permission: t,
                    user: n,
                    context: i,
                    overwrites: r,
                    roles: a,
                    excludeGuildPermissions: l
                } = e;
                return s.default.has(M({
                    user: n,
                    context: i,
                    overwrites: r,
                    roles: a,
                    checkElevated: !0,
                    excludeGuildPermissions: l
                }), t)
            }
            var U = {
                PASSTHROUGH: "PASSTHROUGH",
                ALLOW: "ALLOW",
                DENY: "DENY",
                NONE: I,
                DEFAULT: g,
                ALL: m,
                VIEW_GUILD_SETTINGS: v,
                computePermissionsForRoles: function e(t) {
                    let n, {
                            forceRoles: i,
                            context: r,
                            overwrites: s,
                            roles: a,
                            checkElevated: l = !0,
                            excludeGuildPermissions: o
                        } = t,
                        u = A;
                    if (r instanceof _.ChannelRecordBase) {
                        var c;
                        if (r.isScheduledForDeletion()) return I;
                        if (_.THREAD_CHANNEL_TYPES.has(r.type)) {
                            let t = f.default.getChannel(r.parent_id);
                            return null == t ? I : P(r, e({
                                forceRoles: i,
                                context: t,
                                overwrites: s,
                                roles: a,
                                checkElevated: l,
                                excludeGuildPermissions: o
                            }), !1)
                        }
                        u = null !== (c = r.computeLurkerPermissionsAllowList()) && void 0 !== c ? c : u;
                        s = null != s ? {
                            ...r.permissionOverwrites,
                            ...s
                        } : r.permissionOverwrites;
                        let t = r.getGuildId();
                        n = null != t ? h.default.getGuild(t) : null
                    } else s = null != s ? s : {}, n = r;
                    if (null == n) return I;
                    let d = {
                        userId: "",
                        nick: "",
                        guildId: n.id,
                        guildMemberAvatar: null,
                        roles: Object.keys(i),
                        colorString: null,
                        hoistRoleId: null,
                        premiumSince: null,
                        isPending: !1,
                        joinedAt: new Date().toISOString(),
                        communicationDisabledUntil: null
                    };
                    return L({
                        userId: "",
                        member: d,
                        guild: n,
                        overwrites: s,
                        roles: a,
                        checkElevated: l,
                        excludeGuildPermissions: o,
                        lurkerPermissionsMask: u
                    })
                },
                computePermissions: M,
                applyThreadPermissions: P,
                getGuildVisualOwnerId: function(e) {
                    var t;
                    let n = r.some(e.roles, e => e.hoist && s.default.has(e.permissions, T.Permissions.ADMINISTRATOR));
                    return n ? void 0 : null !== (t = e.ownerId) && void 0 !== t ? t : void 0
                },
                isRoleHigher: function(e, t, n, i) {
                    if (null != t && e.isOwner(t)) return !0;
                    if (null == n) return !1;
                    let s = r(e.roles).sortBy(e => e.position).map(e => e.id).value();
                    return s.indexOf(n.id) > (null != i ? s.indexOf(i.id) : -1)
                },
                getHighestRole: function(e, t) {
                    let n = p.default.getMember(e.id, t);
                    if (null != n) return r(e.roles).filter(e => -1 !== n.roles.indexOf(e.id)).sortBy(e => -e.position).first()
                },
                getHighestHoistedRole: function(e, t) {
                    return null == t.hoistRoleId ? null : e.getRole(t.hoistRoleId)
                },
                can: y,
                canEveryoneRole(e, t) {
                    let n;
                    let i = {};
                    if (t instanceof _.ChannelRecordBase) {
                        if (t.type === T.ChannelTypes.PRIVATE_THREAD || _.THREAD_CHANNEL_TYPES.has(t.type) && null == (t = f.default.getChannel(t.parent_id))) return !1;
                        i = t.permissionOverwrites;
                        let e = t.getGuildId();
                        n = null != e ? h.default.getGuild(e) : null
                    } else n = t;
                    if (null == n) return !1;
                    let r = n.roles[n.id],
                        a = r.permissions,
                        l = i[n.id];
                    return null != l && (a = s.default.remove(a, l.deny), a = s.default.add(a, l.allow)), s.default.has(a, e)
                },
                canEveryone(e, t) {
                    let n;
                    let i = {};
                    if (t instanceof _.ChannelRecordBase) {
                        if (t.type === T.ChannelTypes.PRIVATE_THREAD || _.THREAD_CHANNEL_TYPES.has(t.type) && null == (t = f.default.getChannel(t.parent_id))) return !1;
                        i = t.permissionOverwrites;
                        let e = t.getGuildId();
                        n = null != e ? h.default.getGuild(e) : null
                    } else n = t;
                    if (null == n) return !1;
                    let a = n.roles[n.id];
                    return !(!s.default.has(a.permissions, e) || r.some(i, t => s.default.has(t.deny, e))) && !0
                },
                canManageACategory: function(e, t, n) {
                    return !!y({
                        permission: T.Permissions.MANAGE_CHANNELS,
                        user: e,
                        context: t
                    }) || n.some(t => {
                        let {
                            channel: n
                        } = t;
                        return "null" !== n.id && y({
                            permission: T.Permissions.MANAGE_CHANNELS,
                            user: e,
                            context: n
                        })
                    })
                },
                areChannelsLocked: function(e, t) {
                    if (_.THREAD_CHANNEL_TYPES.has(e.type)) return !0;
                    let {
                        guild_id: n
                    } = e;
                    if (null == t || null == n || n !== t.guild_id) return !1;
                    let i = {
                            ...e.permissionOverwrites
                        },
                        r = {
                            ...t.permissionOverwrites
                        };
                    return null == i[n] && (i[n] = b(n)), null == r[n] && (r[n] = b(n)), Object.keys(i).length === Object.keys(r).length && !Object.keys(i).some(e => {
                        let t = i[e],
                            n = r[e];
                        return !(null != n && s.default.equals(n.deny, t.deny) && s.default.equals(n.allow, t.allow)) && !0
                    })
                },
                makeEveryoneOverwrite: b
            }
        },
        886551: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getUserMaxFileSize: function() {
                    return l
                }
            });
            var i = n("400205"),
                r = n("764364"),
                s = n("49111"),
                a = n("646718");

            function l(e) {
                if (null == e) return s.MAX_ATTACHMENT_SIZE;
                let t = i.default.getPremiumTypeOverride();
                return e.isStaff() && t === a.UNSELECTED_PREMIUM_TYPE_OVERRIDE ? s.MAX_STAFF_ATTACHMENT_SIZE : null != e.premiumType && (0, r.isPremium)(e) ? a.PremiumUserLimits[e.premiumType].fileSize : s.MAX_ATTACHMENT_SIZE
            }
        },
        764364: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isPremiumAtLeast: function() {
                    return r
                },
                isPremium: function() {
                    return s
                },
                isPremiumExactly: function() {
                    return a
                }
            });
            var i = n("646718");

            function r(e, t) {
                return null == t || null != e && i.PremiumTypeOrder[e] >= i.PremiumTypeOrder[t]
            }

            function s(e, t) {
                return null != e && null != e.premiumType && r(e.premiumType, t)
            }

            function a(e, t) {
                return null != e && e.premiumType === t
            }
        },
        719923: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isPremium: function() {
                    return R.isPremium
                },
                isPremiumExactly: function() {
                    return R.isPremiumExactly
                },
                getPremiumPlanItem: function() {
                    return G
                },
                getPrice: function() {
                    return x
                },
                experimentalGetPrices: function() {
                    return k
                },
                getIntervalString: function() {
                    return F
                },
                getIntervalStringAsNoun: function() {
                    return B
                },
                getPremiumType: function() {
                    return V
                },
                getDisplayName: function() {
                    return H
                },
                getDisplayNameFromSku: function() {
                    return j
                },
                getTierDisplayName: function() {
                    return Y
                },
                getDisplayPremiumType: function() {
                    return W
                },
                getPremiumTypeDisplayName: function() {
                    return K
                },
                getPlanDescriptionFromInvoice: function() {
                    return Z
                },
                getExternalPlanDisplayName: function() {
                    return q
                },
                getPremiumPlanOptions: function() {
                    return X
                },
                getNumPremiumGuildSubscriptions: function() {
                    return $
                },
                isPremiumBaseSubscriptionPlan: function() {
                    return et
                },
                isPremiumGuildSubscriptionPlan: function() {
                    return en
                },
                isPremiumSubscriptionPlan: function() {
                    return ei
                },
                getBillingGracePeriodDays: function() {
                    return er
                },
                isPrepaidPaymentSource: function() {
                    return es
                },
                isPremiumGuildSubscriptionCanceled: function() {
                    return ea
                },
                getPremiumGuildHeaderDescription: function() {
                    return el
                },
                getFormattedPriceForPlan: function() {
                    return eo
                },
                getFormattedRateForPlan: function() {
                    return eu
                },
                isSubscriptionStatusFailedPayment: function() {
                    return ed
                },
                getBillingReviewSubheader: function() {
                    return eE
                },
                getIntervalForInvoice: function() {
                    return ef
                },
                formatTrialOfferIntervalDuration: function() {
                    return ep
                },
                formatTrialCtaIntervalDuration: function() {
                    return eh
                },
                formatIntervalDuration: function() {
                    return eS
                },
                getExternalSubscriptionMethodUrl: function() {
                    return eT
                },
                hasPremiumSubscriptionToDisplay: function() {
                    return eI
                },
                getItemsFromNewAdditionalPlans: function() {
                    return em
                },
                getItemsWithoutPremiumPlanItem: function() {
                    return eg
                },
                getItemsWithUpsertedPlanIdForGroup: function() {
                    return eA
                },
                getItemsWithUpsertedPremiumPlanId: function() {
                    return eC
                },
                getItemsWithUpsertedPremiumGuildPlan: function() {
                    return eR
                },
                coerceExistingItemsToNewItemInterval: function() {
                    return eN
                },
                getMaxFileSizeForPremiumType: function() {
                    return ev
                },
                getPremiumSkuIdForSubscription: function() {
                    return eD
                },
                isNewUser: function() {
                    return eL
                },
                default: function() {
                    return eM
                }
            });
            var i, r, s, a, l = n("161179"),
                o = n.n(l),
                u = n("377849"),
                c = n.n(u);
            n("498225");
            var d = n("605250"),
                _ = n("432155"),
                E = n("669073"),
                f = n("797647"),
                p = n("697218"),
                h = n("160299"),
                S = n("357957"),
                T = n("10514"),
                I = n("521012"),
                m = n("745279"),
                g = n("993105"),
                A = n("773336"),
                C = n("886551"),
                R = n("764364"),
                N = n("153160"),
                v = n("49111"),
                O = n("504593"),
                D = n("646718"),
                L = n("809924"),
                M = n("782340");
            let P = {
                    PAYMENT_SOURCE_MANAGEMENT: "https://support.apple.com/HT201266",
                    BILLING_HISTORY: "https://support.apple.com/HT201266",
                    SUBSCRIPTION_MANAGEMENT: "https://support.apple.com/HT202039"
                },
                b = {
                    SUBSCRIPTION_MANAGEMENT: "https://play.google.com/store/account/subscriptions",
                    PAYMENT_SOURCE_MANAGEMENT: "https://play.google.com/store/paymentmethods",
                    BILLING_HISTORY: "https://play.google.com/store/account/orderhistory"
                },
                y = new d.default("PremiumUtils.tsx"),
                U = {
                    [D.SubscriptionPlans.NONE_MONTH]: [D.SubscriptionPlans.NONE_YEAR, D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_YEAR_TIER_1, D.SubscriptionPlans.PREMIUM_MONTH_TIER_1],
                    [D.SubscriptionPlans.NONE_YEAR]: [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_YEAR_TIER_1, D.SubscriptionPlans.PREMIUM_MONTH_TIER_1],
                    [D.SubscriptionPlans.PREMIUM_MONTH_TIER_0]: [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_YEAR_TIER_1, D.SubscriptionPlans.PREMIUM_MONTH_TIER_1, D.SubscriptionPlans.PREMIUM_YEAR_TIER_0],
                    [D.SubscriptionPlans.PREMIUM_YEAR_TIER_0]: [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_YEAR_TIER_1, D.SubscriptionPlans.PREMIUM_MONTH_TIER_1],
                    [D.SubscriptionPlans.PREMIUM_MONTH_TIER_1]: [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_YEAR_TIER_1],
                    [D.SubscriptionPlans.PREMIUM_YEAR_TIER_1]: [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2],
                    [D.SubscriptionPlans.PREMIUM_MONTH_TIER_2]: [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2],
                    [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2]: [],
                    ALL: [D.SubscriptionPlans.NONE_MONTH, D.SubscriptionPlans.NONE_YEAR, D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_YEAR_TIER_1, D.SubscriptionPlans.PREMIUM_MONTH_TIER_1, D.SubscriptionPlans.PREMIUM_YEAR_TIER_0, D.SubscriptionPlans.PREMIUM_MONTH_TIER_0]
                };

            function G(e) {
                return e.items.find(e => D.PREMIUM_PLANS.has(e.planId))
            }

            function w(e) {
                var t;
                let n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    r = null !== (t = S.default.defaultPaymentSourceId) && void 0 !== t ? t : void 0,
                    s = I.default.getPremiumTypeSubscription();
                return null != s && null != s.paymentSourceId && (r = s.paymentSourceId), x(e, n, i, {
                    paymentSourceId: r
                })
            }

            function x(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {},
                    {
                        paymentSourceId: r,
                        currency: s
                    } = i,
                    a = T.default.get(e);
                if (null != a) {
                    let i = v.PriceSetAssignmentPurchaseTypes.DEFAULT;
                    n ? i = v.PriceSetAssignmentPurchaseTypes.GIFT : t && (i = v.PriceSetAssignmentPurchaseTypes.PREMIUM_TIER_1);
                    let a = function(e) {
                        let {
                            paymentSourceId: t,
                            purchaseType: n,
                            currency: i
                        } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                            purchaseType: v.PriceSetAssignmentPurchaseTypes.DEFAULT
                        }, r = k(e, {
                            paymentSourceId: t,
                            purchaseType: n
                        });
                        return (0 === r.length && y.warn("No prices found for planId: ".concat(e, ", paymentSourceId: ").concat(t, ", purchaseType: ").concat(n)), null != i) ? r.find(e => e.currency === i) : r[0]
                    }(e, {
                        paymentSourceId: r,
                        purchaseType: i,
                        currency: s
                    });
                    if (null == a) {
                        let t = Error("Couldn't find price");
                        throw (0, m.captureBillingException)(t, {
                            extra: {
                                paymentSourceId: r
                            },
                            tags: {
                                purchaseType: i.toString(),
                                planId: e,
                                currency: null != s ? s : "unknown"
                            }
                        }), t
                    }
                    return a
                }
                let l = Error("Plan not found");
                throw (0, m.captureBillingException)(l, {
                    tags: {
                        planId: e,
                        currency: null != s ? s : "unknown"
                    },
                    extra: {
                        ...i,
                        isGift: n
                    }
                }), l
            }(i = s || (s = {})).BUNDLE = "bundle", i.TIER_0 = "tier_0", i.TIER_1 = "tier_1", i.TIER_2 = "tier_2", i.PREMIUM_GUILD = "premium_guild", (r = a || (a = {})).MID = "mid", r.HIGH = "high";

            function k(e) {
                let {
                    paymentSourceId: t,
                    purchaseType: n
                } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    purchaseType: v.PriceSetAssignmentPurchaseTypes.DEFAULT
                }, i = function(e, t) {
                    let n = T.default.get(e);
                    if (null == n) {
                        let n = Error("Plan not found");
                        throw (0, m.captureBillingException)(n, {
                            tags: {
                                planId: e,
                                purchaseType: t.toString()
                            }
                        }), n
                    }
                    if (null == n.prices) throw Error("No prices returned for ".concat(e, ", is your user in the experiment?"));
                    let i = n.prices[t];
                    if (null == i) throw y.info("Purchase types: ".concat(JSON.stringify(Object.keys(n.prices)))), Error("No prices returned for purchase type ".concat(t, " for plan ").concat(e));
                    return i
                }(e, n);
                if (null != t) {
                    let r = i.paymentSourcePrices[t];
                    if (null == r) {
                        y.info("Payment sources IDs: ".concat(JSON.stringify(Object.keys(i.paymentSourcePrices)))), y.info("prices: ".concat(r));
                        let s = Error("Missing prices for payment source on subscription plan");
                        (0, m.captureBillingException)(s, {
                            extra: {
                                paymentSourceId: t
                            },
                            tags: {
                                purchaseType: n.toString(),
                                planId: e
                            }
                        })
                    } else if (0 !== r.length) return r
                }
                if (null == i.countryPrices.prices) {
                    y.info("countryPrices: ".concat(JSON.stringify(i.countryPrices)));
                    let t = Error("Missing prices for country");
                    throw (0, m.captureBillingException)(t, {
                        tags: {
                            countryCode: i.countryPrices.countryCode,
                            planId: e
                        }
                    }), t
                }
                return i.countryPrices.prices
            }

            function F(e, t, n) {
                let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                    r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                if (t || n) switch (e) {
                    case D.SubscriptionIntervalTypes.MONTH:
                        return r ? M.default.Messages.GIFT_DURATION.format({
                            timeInterval: M.default.Messages.PREMIUM_SUBSCRIPTION_INTERVAL_MONTH
                        }) : M.default.Messages.PAYMENT_MODAL_ONE_MONTH;
                    case D.SubscriptionIntervalTypes.YEAR:
                        return r ? M.default.Messages.GIFT_DURATION.format({
                            timeInterval: M.default.Messages.PREMIUM_SUBSCRIPTION_INTERVAL_YEAR
                        }) : M.default.Messages.PAYMENT_MODAL_ONE_YEAR;
                    default:
                        throw Error("Unexpected interval")
                }
                switch (e) {
                    case D.SubscriptionIntervalTypes.MONTH:
                        if (1 !== i) return M.default.Messages.MULTI_MONTHS.format({
                            intervalCount: i
                        });
                        return M.default.Messages.MONTHLY;
                    case D.SubscriptionIntervalTypes.YEAR:
                        return M.default.Messages.YEARLY;
                    default:
                        throw Error("Unexpected interval")
                }
            }

            function B(e) {
                switch (e) {
                    case D.SubscriptionIntervalTypes.MONTH:
                        return M.default.Messages.PREMIUM_SUBSCRIPTION_INTERVAL_MONTH;
                    case D.SubscriptionIntervalTypes.YEAR:
                        return M.default.Messages.PREMIUM_SUBSCRIPTION_INTERVAL_YEAR;
                    default:
                        throw Error("Unexpected interval")
                }
            }

            function V(e) {
                let t = D.SubscriptionPlanInfo[e];
                if (null != t) return t.premiumType;
                let n = Error("Unsupported plan");
                throw (0, m.captureBillingException)(n, {
                    tags: {
                        planId: e
                    }
                }), n
            }

            function H(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                    i = arguments.length > 3 ? arguments[3] : void 0;
                switch (e) {
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_0:
                        return t ? M.default.Messages.PREMIUM_PLAN_MONTH_TIER_0_TRIAL_DURATION.format({
                            duration: i
                        }) : n ? M.default.Messages.PREMIUM_PLAN_ONE_MONTH_TIER_0 : M.default.Messages.PREMIUM_PLAN_MONTH_TIER_0;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_0:
                        return t ? M.default.Messages.PREMIUM_PLAN_YEAR_TIER_0_TRIAL_DURATION.format({
                            duration: i
                        }) : n ? M.default.Messages.PREMIUM_PLAN_ONE_YEAR_TIER_0 : M.default.Messages.PREMIUM_PLAN_YEAR_TIER_0;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_1:
                        return n ? M.default.Messages.PREMIUM_PLAN_ONE_MONTH_TIER_1 : M.default.Messages.PREMIUM_PLAN_MONTH_TIER_1;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_1:
                        return n ? M.default.Messages.PREMIUM_PLAN_ONE_YEAR_TIER_1 : M.default.Messages.PREMIUM_PLAN_YEAR_TIER_1;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_2:
                        return t ? M.default.Messages.PREMIUM_PLAN_MONTH_TIER_2_TRIAL_DURATION.format({
                            duration: i
                        }) : n ? M.default.Messages.PREMIUM_PLAN_ONE_MONTH_TIER_2 : M.default.Messages.PREMIUM_PLAN_MONTH_TIER_2;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_2:
                        return t ? M.default.Messages.PREMIUM_PLAN_YEAR_TIER_2_TRIAL_DURATION.format({
                            duration: i
                        }) : n ? M.default.Messages.PREMIUM_PLAN_ONE_YEAR_TIER_2 : M.default.Messages.PREMIUM_PLAN_YEAR_TIER_2;
                    case D.SubscriptionPlans.PREMIUM_3_MONTH_TIER_2:
                        return M.default.Messages.PREMIUM_PLAN_3_MONTH_TIER_2;
                    case D.SubscriptionPlans.PREMIUM_6_MONTH_TIER_2:
                        return M.default.Messages.PREMIUM_PLAN_6_MONTH_TIER_2;
                    case D.SubscriptionPlans.PREMIUM_MONTH_GUILD:
                        return n ? M.default.Messages.PREMIUM_GUILD_PLAN_SINGLE_MONTH : M.default.Messages.PREMIUM_GUILD_PLAN_MONTH;
                    case D.SubscriptionPlans.PREMIUM_YEAR_GUILD:
                        return n ? M.default.Messages.PREMIUM_GUILD_PLAN_SINGLE_YEAR : M.default.Messages.PREMIUM_GUILD_PLAN_YEAR;
                    case D.SubscriptionPlans.PREMIUM_3_MONTH_GUILD:
                        return M.default.Messages.PREMIUM_GUILD_PLAN_3_MONTH;
                    case D.SubscriptionPlans.PREMIUM_6_MONTH_GUILD:
                        return M.default.Messages.PREMIUM_GUILD_PLAN_6_MONTH;
                    case D.SubscriptionPlans.PREMIUM_MONTH_LEGACY:
                        return M.default.Messages.PREMIUM_PLAN_MONTH;
                    case D.SubscriptionPlans.PREMIUM_YEAR_LEGACY:
                        return M.default.Messages.PREMIUM_PLAN_YEAR
                }
                let r = Error("Unsupported plan");
                throw (0, m.captureBillingException)(r, {
                    tags: {
                        planId: e
                    }
                }), r
            }

            function j(e) {
                switch (e) {
                    case D.PremiumSubscriptionSKUs.TIER_0:
                        return M.default.Messages.PREMIUM_TIER_0;
                    case D.PremiumSubscriptionSKUs.TIER_1:
                        return M.default.Messages.PREMIUM_TIER_1;
                    case D.PremiumSubscriptionSKUs.TIER_2:
                        return M.default.Messages.PREMIUM_TIER_2
                }
                let t = Error("Unsupported sku");
                throw (0, m.captureBillingException)(t, {
                    tags: {
                        skuId: e
                    }
                }), t
            }

            function Y(e) {
                switch (e) {
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_0:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_0:
                        return M.default.Messages.PREMIUM_TIER_0;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_1:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_1:
                        return M.default.Messages.PREMIUM_TIER_1;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_3_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_6_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_2:
                        return M.default.Messages.PREMIUM_TIER_2
                }
                let t = Error("Unsupported plan");
                throw (0, m.captureBillingException)(t, {
                    tags: {
                        planId: e
                    }
                }), t
            }

            function W(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                switch (e) {
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_0:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_0:
                        return t ? "Basic" : "Nitro Basic";
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_1:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_1:
                        return t ? "Classic" : "Nitro Classic";
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_3_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_6_MONTH_TIER_2:
                        return "Nitro"
                }
                let n = Error("Unsupported plan");
                throw (0, m.captureBillingException)(n, {
                    tags: {
                        planId: e
                    }
                }), n
            }

            function K(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                switch (e) {
                    case D.PremiumTypes.TIER_0:
                        return t ? "Basic" : M.default.Messages.PREMIUM_TIER_0;
                    case D.PremiumTypes.TIER_1:
                        return t ? "Classic" : M.default.Messages.PREMIUM_TIER_1;
                    case D.PremiumTypes.TIER_2:
                        return M.default.Messages.PREMIUM_TIER_2
                }
            }

            function z(e) {
                var t, n;
                let {
                    subscription: i,
                    planId: r,
                    price: s,
                    includePremiumGuilds: a
                } = e, l = ec(i) || null == i.paymentSourceId && !i.isPurchasedExternally && !(null === (t = p.default.getCurrentUser()) || void 0 === t ? void 0 : t.hasFreePremium()), o = null != s, u = i.status === v.SubscriptionStatusTypes.UNPAID && null !== i.latestInvoice && (null === (n = i.latestInvoice) || void 0 === n ? void 0 : n.status) === v.InvoiceStatusTypes.OPEN, c = l ? v.SubscriptionStatusTypes.CANCELED : u ? v.SubscriptionStatusTypes.UNPAID : i.status, d = D.NUM_FREE_GUILD_BOOSTS_WITH_PREMIUM + (a ? $(i.additionalPlans) : 0);
                switch (r) {
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_0:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_0:
                        switch (c) {
                            case v.SubscriptionStatusTypes.CANCELED:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_0_PENDING_CANCELATION.format({
                                    price: s
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_0_PENDING_CANCELATION_NO_PRICE;
                            case v.SubscriptionStatusTypes.ACCOUNT_HOLD:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_0_ACCOUNT_HOLD.format({
                                    price: s
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_0_ACCOUNT_HOLD_NO_PRICE.format();
                            case v.SubscriptionStatusTypes.UNPAID:
                                return M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_0_PENDING_PAYMENT.format();
                            default:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_0.format({
                                    price: s
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_0_NO_PRICE
                        }
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_1:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_1:
                        switch (c) {
                            case v.SubscriptionStatusTypes.CANCELED:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_1_PENDING_CANCELATION.format({
                                    price: s
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_1_PENDING_CANCELATION_NO_PRICE;
                            case v.SubscriptionStatusTypes.ACCOUNT_HOLD:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_1_ACCOUNT_HOLD.format({
                                    price: s
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_1_ACCOUNT_HOLD_NO_PRICE.format();
                            case v.SubscriptionStatusTypes.UNPAID:
                                return M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_1_PENDING_PAYMENT.format();
                            default:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_1.format({
                                    price: s
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_1_NO_PRICE
                        }
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_3_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_6_MONTH_TIER_2:
                        switch (c) {
                            case v.SubscriptionStatusTypes.CANCELED:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_2_PENDING_CANCELATION.format({
                                    price: s,
                                    num: d
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_2_PENDING_CANCELATION_NO_PRICE.format({
                                    num: d
                                });
                            case v.SubscriptionStatusTypes.ACCOUNT_HOLD:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_2_ACCOUNT_HOLD.format({
                                    price: s,
                                    num: d
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_2_ACCOUNT_HOLD_NO_PRICE.format({
                                    num: d
                                });
                            case v.SubscriptionStatusTypes.UNPAID:
                                return M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_2_PENDING_PAYMENT.format({
                                    num: d
                                });
                            default:
                                return o ? M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_2.format({
                                    price: s,
                                    num: d
                                }) : M.default.Messages.PREMIUM_SUBSCRIPTION_DESCRIPTION_TIER_2_NO_PRICE.format({
                                    num: d
                                })
                        }
                    default:
                        throw Error("Invalid planId ".concat(r))
                }
            }

            function Z(e) {
                let {
                    renewalInvoicePreview: t,
                    subscription: n,
                    planId: i,
                    includePremiumGuilds: r = !1
                } = e, s = T.default.get(i);
                return o(null != s, "Missing plan"), z({
                    subscription: n,
                    planId: s.id,
                    price: function(e, t, n) {
                        let i = e.invoiceItems.find(e => {
                                let {
                                    subscriptionPlanId: t
                                } = e;
                                return t === n.id
                            }),
                            r = null == i ? x(n.id, !1, !1, {
                                paymentSourceId: t.paymentSourceId,
                                currency: t.currency
                            }).amount : i.amount;
                        return (0, N.formatRate)((0, N.formatPrice)(r, e.currency), n.interval, n.intervalCount)
                    }(t, n, s),
                    includePremiumGuilds: r
                })
            }

            function q(e) {
                let {
                    planId: t,
                    additionalPlans: n
                } = e, i = (0, f.isNoneSubscription)(t) ? null : H(t), r = null == n ? void 0 : n.find(e => {
                    let {
                        planId: t
                    } = e;
                    return D.PREMIUM_GUILD_SUBSCRIPTION_PLANS.has(t)
                }), s = (null == r ? void 0 : r.planId) === D.SubscriptionPlans.PREMIUM_MONTH_GUILD ? M.default.Messages.PREMIUM_GUILD_NUM_MONTH_GUILD_SUBSCRIPTIONS_UNFORMATTED : (null == r ? void 0 : r.planId) === D.SubscriptionPlans.PREMIUM_YEAR_GUILD ? M.default.Messages.PREMIUM_GUILD_NUM_MONTH_GUILD_SUBSCRIPTIONS_UNFORMATTED : null, a = null == s ? void 0 : s.format({
                    num: null == r ? void 0 : r.quantity
                });
                if (null != i && null != a) return M.default.Messages.PREMIUM_WITH_PREMIUM_GUILD_EXTERNAL_PLAN_DESCRIPTION.format({
                    premiumDescription: i,
                    premiumGuildDescription: a
                });
                if (null != i) return i;
                if (null != a) return a;
                else throw Error("Subscription without premium or premium guild subscription")
            }

            function X(e) {
                let {
                    skuId: t,
                    isPremium: n,
                    multiMonthPlans: i,
                    currentSubscription: r,
                    isGift: s,
                    isEligibleForTrial: a,
                    defaultPlanId: l,
                    defaultToMonthlyPlan: o
                } = e;
                if (null == t || !n) return [];
                let u = void 0 !== l && t === D.SubscriptionPlanInfo[l].skuId ? l : void 0;
                void 0 === u && o && !s && (u = D.PREMIUM_SKU_TO_MONTHLY_PLAN[t]), a && !s && (void 0 === l || o && D.PREMIUM_MONTHLY_PLANS.has(l)) && E.TrialRedemptionDefaultPlanExperiment.trackExposure({
                    location: "de805e_1"
                });
                let c = [];
                switch (t) {
                    case D.PremiumSubscriptionSKUs.TIER_0:
                        c = [D.SubscriptionPlans.PREMIUM_YEAR_TIER_0, D.SubscriptionPlans.PREMIUM_MONTH_TIER_0];
                        break;
                    case D.PremiumSubscriptionSKUs.TIER_1:
                        c = [D.SubscriptionPlans.PREMIUM_MONTH_TIER_1];
                        break;
                    case D.PremiumSubscriptionSKUs.TIER_2:
                        let d = i;
                        if (null != r) {
                            let e = r.items[0].planId;
                            if (D.MULTI_MONTH_PLANS.has(e)) {
                                let t = D.SubscriptionPlanInfo[e];
                                d = [...(0, D.MULTI_MONTH_PLANS)].filter(e => {
                                    let n = D.SubscriptionPlanInfo[e];
                                    return n.interval === t.interval && n.intervalCount === t.intervalCount && n.skuId === D.PremiumSubscriptionSKUs.TIER_2
                                })
                            } else d = []
                        }
                        c = [D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, ...d, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2];
                        break;
                    default:
                        throw Error("Unexpected SKU: ".concat(t))
                }
                if (void 0 !== u) {
                    let e = c.indexOf(u);
                    c.splice(e, 1), c.unshift(u)
                }
                return c
            }

            function Q(e) {
                let t = D.SubscriptionPlanInfo[e];
                if (null == t) {
                    let t = Error("Unsupported plan");
                    throw (0, m.captureBillingException)(t, {
                        tags: {
                            planId: e
                        }
                    }), t
                }
                return t.skuId
            }

            function J(e) {
                var t;
                return null == e ? U.ALL : null !== (t = U[e]) && void 0 !== t ? t : []
            }

            function $(e) {
                let t = T.default.getPlanIdsForSkus([D.PremiumSubscriptionSKUs.GUILD]);
                o(null != t, "Missing guildSubscriptionPlanIds");
                let n = e.find(e => {
                    let {
                        planId: n
                    } = e;
                    return t.includes(n)
                });
                return null != n ? n.quantity : 0
            }
            let ee = new Set([D.SubscriptionPlans.NONE_MONTH, D.SubscriptionPlans.NONE_3_MONTH, D.SubscriptionPlans.NONE_6_MONTH, D.SubscriptionPlans.NONE_YEAR, D.SubscriptionPlans.PREMIUM_MONTH_TIER_0, D.SubscriptionPlans.PREMIUM_MONTH_TIER_1, D.SubscriptionPlans.PREMIUM_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_YEAR_TIER_0, D.SubscriptionPlans.PREMIUM_YEAR_TIER_1, D.SubscriptionPlans.PREMIUM_YEAR_TIER_2, D.SubscriptionPlans.PREMIUM_3_MONTH_TIER_2, D.SubscriptionPlans.PREMIUM_6_MONTH_TIER_2]);

            function et(e) {
                return ee.has(e)
            }

            function en(e) {
                return D.PREMIUM_GUILD_SUBSCRIPTION_PLANS.has(e)
            }

            function ei(e) {
                return et(e) || en(e)
            }

            function er(e) {
                var t, n, i;
                if (e.isPurchasedViaApple && (null === (t = e.metadata) || void 0 === t ? void 0 : t.apple_grace_period_expires_date) != null) {
                    let t = c(e.metadata.apple_grace_period_expires_date),
                        n = c(e.currentPeriodStart);
                    return c.duration(t.diff(n)).days()
                }
                if (e.isPurchasedViaGoogle && (null === (n = e.metadata) || void 0 === n ? void 0 : n.google_grace_period_expires_date) != null && (null === (i = e.metadata) || void 0 === i ? void 0 : i.google_original_expires_date) != null) {
                    let t = c(e.metadata.google_grace_period_expires_date),
                        n = c(e.metadata.google_original_expires_date);
                    return c.duration(t.diff(n)).days()
                }
                if (e.isPurchasedExternally || null == e.paymentSourceId) return D.DEFAULT_MAX_INVOICE_PAYMENT_DAYS;
                return D.PAID_SUBSCRIPTION_MAX_INVOICE_PAYMENT_DAYS
            }

            function es(e) {
                if (null == e) return !1;
                let t = S.default.getPaymentSource(e);
                return null != t && L.PREPAID_PAYMENT_SOURCES.has(t.type)
            }

            function ea(e) {
                return e.isPurchasedExternally ? e.status === v.SubscriptionStatusTypes.CANCELED : function(e) {
                    let {
                        renewalMutations: t,
                        additionalPlans: n,
                        status: i
                    } = e, r = $(n), s = null != t ? $(t.additionalPlans) : null;
                    return 0 === s && 0 !== r ? v.SubscriptionStatusTypes.CANCELED : i
                }(e) === v.SubscriptionStatusTypes.CANCELED
            }

            function el(e) {
                let {
                    subscription: t,
                    user: n,
                    price: i,
                    renewalInvoicePreview: r
                } = e, {
                    planId: s,
                    additionalPlans: a
                } = t, l = T.default.get(s);
                o(null != l, "Missing plan");
                let u = $(a),
                    c = e_(t.planId, t.paymentSourceId, t.currency, n),
                    d = c.amount * u;
                if (null != r) {
                    let e = r.invoiceItems.find(e => D.PREMIUM_GUILD_SUBSCRIPTION_PLANS.has(e.subscriptionPlanId));
                    null != e && (d = e.amount)
                }
                i = null != i ? i : (0, N.formatPrice)(d, t.currency);
                let _ = ea(t);
                return _ ? t.isPurchasedViaGoogle ? M.default.Messages.PREMIUM_GUILD_SUBSCRIPTIONS_RENEWAL_INFO_PENDING_CANCELATION_NO_PRICE.format({
                    quantity: u
                }) : M.default.Messages.PREMIUM_GUILD_SUBSCRIPTIONS_RENEWAL_INFO_PENDING_CANCELATION.format({
                    quantity: u,
                    rate: (0, N.formatRate)(i, l.interval, l.intervalCount)
                }) : t.status === v.SubscriptionStatusTypes.ACCOUNT_HOLD ? t.isPurchasedViaGoogle ? M.default.Messages.PREMIUM_GUILD_SUBSCRIPTIONS_RENEWAL_INFO_ACCOUNT_HOLD_NO_PRICE.format({
                    quantity: u,
                    boostQuantity: u
                }) : M.default.Messages.PREMIUM_GUILD_SUBSCRIPTIONS_RENEWAL_INFO_ACCOUNT_HOLD.format({
                    quantity: u,
                    boostQuantity: u,
                    rate: (0, N.formatRate)(i, l.interval, l.intervalCount)
                }) : t.isPurchasedViaGoogle ? M.default.Messages.PREMIUM_GUILD_SUBSCRIPTIONS_RENEWAL_INFO_NO_PRICE.format({
                    quantity: u
                }) : M.default.Messages.PREMIUM_GUILD_SUBSCRIPTIONS_RENEWAL_INFO.format({
                    quantity: u,
                    rate: (0, N.formatRate)(i, l.interval, l.intervalCount)
                })
            }

            function eo(e, t, n) {
                let i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                    r = null != t ? x(e.id, !1, i, t) : w(e.id, !1, i),
                    s = (0, N.formatPrice)(r.amount, r.currency);
                return e.currency !== L.CurrencyCodes.USD && !0 === n && (s = s.concat("*")), s
            }

            function eu(e, t, n) {
                let i = eo(e, t, n);
                return (0, N.formatRate)(i, e.interval, e.intervalCount)
            }

            function ec(e) {
                let {
                    status: t,
                    renewalMutations: n
                } = e;
                return t === v.SubscriptionStatusTypes.CANCELED || null != n && (0, f.isNoneSubscription)(n.planId) && !e.isPurchasedExternally
            }

            function ed(e) {
                return e === v.SubscriptionStatusTypes.PAST_DUE || e === v.SubscriptionStatusTypes.ACCOUNT_HOLD
            }

            function e_(e, t, n, i) {
                let r = null != t ? {
                        paymentSourceId: t,
                        currency: n
                    } : {
                        country: h.default.ipCountryCodeWithFallback,
                        currency: n
                    },
                    s = T.default.get(e);
                if (null == s) {
                    let t = Error("Unsupported plan");
                    throw (0, m.captureBillingException)(t, {
                        tags: {
                            planId: e
                        }
                    }), t
                }
                let a = T.default.getForSkuAndInterval(D.PremiumSubscriptionSKUs.GUILD, s.interval, s.intervalCount);
                if (null == a) {
                    let t = Error("Unsupported plan");
                    throw (0, m.captureBillingException)(t, {
                        tags: {
                            planId: e
                        }
                    }), t
                }
                return x(a.id, (0, R.isPremium)(i), !1, r)
            }

            function eE(e, t, n) {
                let i = t.id;
                if (null != e) switch (i) {
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_0:
                        return M.default.Messages.PREMIUM_SWITCH_REVIEW_HEADER_PREMIUM_MONTH_TIER_0;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_0:
                        return M.default.Messages.PREMIUM_SWITCH_REVIEW_HEADER_PREMIUM_YEAR_TIER_0;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_1:
                        return M.default.Messages.PREMIUM_SWITCH_REVIEW_HEADER_PREMIUM_MONTH_TIER_1;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_1:
                        return M.default.Messages.PREMIUM_SWITCH_REVIEW_HEADER_PREMIUM_YEAR_TIER_1;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_2:
                        return M.default.Messages.PREMIUM_SWITCH_REVIEW_HEADER_PREMIUM_MONTH_TIER_2;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_2:
                        return M.default.Messages.PREMIUM_SWITCH_REVIEW_HEADER_PREMIUM_YEAR_TIER_2
                }
                switch (i) {
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_0:
                        return n ? M.default.Messages.BILLING_SELECT_PLAN : M.default.Messages.BILLING_SELECT_PLAN_PREMIUM_MONTH_TIER_0;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_0:
                        return n ? M.default.Messages.BILLING_SELECT_PLAN : M.default.Messages.BILLING_SELECT_PLAN_PREMIUM_YEAR_TIER_0;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_1:
                        return n ? M.default.Messages.BILLING_SELECT_PLAN : M.default.Messages.BILLING_SELECT_PLAN_PREMIUM_MONTH_TIER_1;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_1:
                        return n ? M.default.Messages.BILLING_SELECT_PLAN : M.default.Messages.BILLING_SELECT_PLAN_PREMIUM_YEAR_TIER_1;
                    case D.SubscriptionPlans.PREMIUM_MONTH_TIER_2:
                        return n ? M.default.Messages.BILLING_SELECT_PLAN : M.default.Messages.BILLING_SELECT_PLAN_PREMIUM_MONTH_TIER_2;
                    case D.SubscriptionPlans.PREMIUM_YEAR_TIER_2:
                        return n ? M.default.Messages.BILLING_SELECT_PLAN : M.default.Messages.BILLING_SELECT_PLAN_PREMIUM_YEAR_TIER_2;
                    case D.SubscriptionPlans.PREMIUM_3_MONTH_TIER_2:
                    case D.SubscriptionPlans.PREMIUM_6_MONTH_TIER_2:
                        return M.default.Messages.BILLING_SELECT_PLAN_PREMIUM_MONTHS_TIER_2.format({
                            intervalCount: t.intervalCount
                        });
                    case D.SubscriptionPlans.NONE_MONTH:
                    case D.SubscriptionPlans.NONE_YEAR:
                    case D.SubscriptionPlans.NONE_3_MONTH:
                    case D.SubscriptionPlans.NONE_6_MONTH:
                    case D.SubscriptionPlans.PREMIUM_MONTH_GUILD:
                    case D.SubscriptionPlans.PREMIUM_YEAR_GUILD:
                    case D.SubscriptionPlans.PREMIUM_3_MONTH_GUILD:
                    case D.SubscriptionPlans.PREMIUM_6_MONTH_GUILD:
                        return M.default.Messages.GUILD_SUBSCRIPTION_PURCHASE_MODAL_SUBMIT
                }
                let r = Error("User is purchasing an unsupported plan");
                throw (0, m.captureBillingException)(r, {
                    tags: {
                        planId: i
                    }
                }), r
            }

            function ef(e) {
                let t = e.invoiceItems[0].subscriptionPlanId,
                    n = T.default.get(t);
                return o(null != n, "Missing subscriptionPlan"), {
                    intervalType: n.interval,
                    intervalCount: n.intervalCount
                }
            }

            function ep(e) {
                let {
                    intervalType: t = D.SubscriptionIntervalTypes.MONTH,
                    intervalCount: n = 1,
                    capitalize: i = !1
                } = e;
                switch (t) {
                    case D.SubscriptionIntervalTypes.DAY:
                        if (n >= 7 && n % 7 == 0) return i ? M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_HEADING_WEEKS.format({
                            weeks: n / 7
                        }) : M.default.Messages.PREMIUM_TRIAL_FREE_DURATION_WEEKS.format({
                            weeks: n / 7
                        });
                        return i ? M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_HEADING_DAYS.format({
                            days: n
                        }) : M.default.Messages.PREMIUM_TRIAL_FREE_DURATION_DAYS.format({
                            days: n
                        });
                    case D.SubscriptionIntervalTypes.MONTH:
                        return i ? M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_HEADING_MONTHS.format({
                            months: n
                        }) : M.default.Messages.PREMIUM_TRIAL_FREE_DURATION_MONTHS.format({
                            months: n
                        });
                    case D.SubscriptionIntervalTypes.YEAR:
                        return i ? M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_HEADING_YEARS.format({
                            years: n
                        }) : M.default.Messages.PREMIUM_TRIAL_FREE_DURATION_YEARS.format({
                            years: n
                        });
                    default:
                        throw Error("Unsupported interval duration.")
                }
            }

            function eh(e) {
                let {
                    intervalType: t = D.SubscriptionIntervalTypes.MONTH,
                    intervalCount: n = 1
                } = e;
                switch (t) {
                    case D.SubscriptionIntervalTypes.DAY:
                        if (n >= 7 && n % 7 == 0) return M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_CTA_WEEKS.format({
                            weeks: n / 7
                        });
                        return M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_CTA_DAYS.format({
                            days: n
                        });
                    case D.SubscriptionIntervalTypes.MONTH:
                        return M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_CTA_MONTHS.format({
                            months: n
                        });
                    case D.SubscriptionIntervalTypes.YEAR:
                        return M.default.Messages.PREMIUM_TRIAL_MARKETING_TRIAL_CTA_YEARS.format({
                            years: n
                        });
                    default:
                        throw Error("Unsupported interval duration.")
                }
            }

            function eS(e) {
                let {
                    intervalType: t = D.SubscriptionIntervalTypes.MONTH,
                    intervalCount: n = 1,
                    capitalize: i = !1
                } = e;
                switch (t) {
                    case D.SubscriptionIntervalTypes.DAY:
                        if (n >= 7 && n % 7 == 0) return i ? M.default.Messages.DURATION_WEEKS_CAPITALIZE.format({
                            weeks: n / 7
                        }) : M.default.Messages.DURATION_WEEKS.format({
                            weeks: n / 7
                        });
                        return i ? M.default.Messages.DURATION_DAYS_CAPITALIZE.format({
                            days: n
                        }) : M.default.Messages.DURATION_DAYS.format({
                            days: n
                        });
                    case D.SubscriptionIntervalTypes.MONTH:
                        return i ? M.default.Messages.DURATION_MONTHS_CAPITALIZE.format({
                            months: n
                        }) : M.default.Messages.DURATION_MONTHS.format({
                            months: n
                        });
                    case D.SubscriptionIntervalTypes.YEAR:
                        return i ? M.default.Messages.DURATION_YEARS_CAPITALIZE.format({
                            years: n
                        }) : M.default.Messages.DURATION_YEARS.format({
                            years: n
                        });
                    default:
                        throw Error("Unsupported interval duration.")
                }
            }

            function eT(e, t) {
                switch (e) {
                    case v.PaymentGateways.APPLE_PARTNER:
                    case v.PaymentGateways.APPLE:
                        return P[t];
                    case v.PaymentGateways.GOOGLE:
                        return b[t]
                }
                throw Error("Invalid external payment gateway ".concat(e))
            }

            function eI(e, t) {
                return (0, R.isPremium)(e) || ed(null == t ? void 0 : t.status)
            }

            function em(e, t) {
                var n, i;
                let r = [],
                    s = null !== (i = null === (n = e.renewalMutations) || void 0 === n ? void 0 : n.items) && void 0 !== i ? i : e.items,
                    a = s.find(e => D.PREMIUM_PLANS.has(e.planId));
                return null != a && r.push(a), r.push(...t), r.map(t => {
                    for (let n of e.items)
                        if (t.planId === n.planId) return {
                            ...n,
                            ...t
                        };
                    return t
                })
            }

            function eg(e) {
                return e.filter(e => !D.PREMIUM_PLANS.has(e.planId))
            }

            function eA(e, t, n, i) {
                var r, s;
                o(i.has(t), "Expected planId in group");
                let a = !1,
                    l = null !== (s = null === (r = e.renewalMutations) || void 0 === r ? void 0 : r.items) && void 0 !== s ? s : e.items,
                    u = l.map(e => i.has(e.planId) ? (a = !0, {
                        ...e,
                        quantity: n,
                        planId: t
                    }) : e);
                if (!a) {
                    let i = {
                            planId: t,
                            quantity: n
                        },
                        r = e.items.find(e => e.planId === t);
                    null != r && (i.id = r.id), u.push(i)
                }
                return u.filter(e => 0 !== e.quantity)
            }

            function eC(e, t) {
                return eA(e, t, 1, D.PREMIUM_PLANS)
            }

            function eR(e, t, n) {
                return eA(e, n, t, D.PREMIUM_GUILD_SUBSCRIPTION_PLANS)
            }

            function eN(e) {
                var t;
                let n = null !== (t = e.find(e => !("id" in e))) && void 0 !== t ? t : e.find(e => D.PREMIUM_PLANS.has(e.planId));
                if (null != n) {
                    let t = T.default.get(n.planId);
                    o(null != t, "Missing plan"), e = e.map(e => {
                        if (e === n) return e;
                        let i = T.default.get(e.planId);
                        o(null != i, "Missing plan");
                        let r = T.default.getForSkuAndInterval(i.skuId, t.interval, t.intervalCount);
                        return o(null != r, "Missing planForInterval"), {
                            ...e,
                            planId: r.id
                        }
                    })
                }
                return e
            }

            function ev(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        useSpace: !0
                    },
                    n = D.PremiumUserLimits[e].fileSize;
                return (0, g.formatSize)(n / 1024, {
                    useKibibytes: !0,
                    useSpace: t.useSpace
                })
            }

            function eO(e) {
                return null == e ? null : e.items.find(e => D.PREMIUM_GUILD_SUBSCRIPTION_PLANS.has(e.planId))
            }

            function eD(e) {
                let t = null != e ? G(e) : null,
                    n = null != t ? Q(t.planId) : null;
                return n
            }
            let eL = e => null != e && Date.now() - e.createdAt.getTime() < 2592e6;
            var eM = Object.freeze({
                isNewUser: eL,
                isPremiumAtLeast: R.isPremiumAtLeast,
                isPremium: R.isPremium,
                isPremiumExactly: R.isPremiumExactly,
                getPrice: x,
                getDefaultPrice: w,
                getInterval: function(e) {
                    let t = D.SubscriptionPlanInfo[e];
                    if (null != t) return {
                        intervalType: t.interval,
                        intervalCount: t.intervalCount
                    };
                    let n = Error("Unsupported plan");
                    throw (0, m.captureBillingException)(n, {
                        tags: {
                            planId: e
                        }
                    }), n
                },
                getIntervalString: F,
                getIntervalStringAsNoun: B,
                getPremiumType: V,
                getDisplayName: H,
                getDisplayPremiumType: W,
                getPremiumPlanOptions: X,
                getUpgradeEligibilities: J,
                getPlanDescription: z,
                isPremiumSku: function(e) {
                    return e === D.PremiumSubscriptionSKUs.TIER_0 || e === D.PremiumSubscriptionSKUs.TIER_1 || e === D.PremiumSubscriptionSKUs.TIER_2
                },
                getClosestUpgrade: function(e) {
                    let t = D.SubscriptionPlanInfo[e];
                    if (null == t) throw Error("Unrecognized plan.");
                    let {
                        interval: n
                    } = t, i = J(e);
                    for (let e of Object.keys(D.SubscriptionPlanInfo)) {
                        let {
                            interval: t
                        } = D.SubscriptionPlanInfo[e];
                        if (n === t && i.includes(e)) return e
                    }
                    return null
                },
                getIntervalMonths: function(e, t) {
                    if (e === D.SubscriptionIntervalTypes.MONTH) return t;
                    if (e === D.SubscriptionIntervalTypes.YEAR) return 12 * t;
                    throw Error("".concat(e, " interval subscription period not implemented"))
                },
                getUserMaxFileSize: C.getUserMaxFileSize,
                getSkuIdForPlan: Q,
                getSkuIdForPremiumType: function(e) {
                    switch (e) {
                        case D.PremiumTypes.TIER_0:
                            return D.PremiumSubscriptionSKUs.TIER_0;
                        case D.PremiumTypes.TIER_1:
                            return D.PremiumSubscriptionSKUs.TIER_1;
                        case D.PremiumTypes.TIER_2:
                            return D.PremiumSubscriptionSKUs.TIER_2
                    }
                },
                getNumIncludedPremiumGuildSubscriptionSlots: function(e) {
                    if (V(e) === D.PremiumTypes.TIER_2) return D.NUM_FREE_GUILD_BOOSTS_WITH_PREMIUM;
                    return 0
                },
                getBillingInformationString: function(e, t) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                        i = n ? (0, N.formatPrice)(t.invoiceItems.filter(e => D.PREMIUM_TIER_2_PLANS.has(e.subscriptionPlanId)).map(e => e.amount).reduce((e, t) => t + e, 0), t.currency) : (0, N.formatPrice)(t.total, t.currency);
                    if (e.status === v.SubscriptionStatusTypes.CANCELED) return M.default.Messages.PREMIUM_SETTINGS_CANCELLED_INFO.format({
                        endDate: t.subscriptionPeriodStart
                    });
                    if (e.status === v.SubscriptionStatusTypes.PAST_DUE) {
                        var r, s;
                        let t = er(e),
                            n = c(e.currentPeriodStart).add(t, "days");
                        return (e.isPurchasedViaGoogle && (null === (r = e.metadata) || void 0 === r ? void 0 : r.google_grace_period_expires_date) != null && (n = c(e.metadata.google_grace_period_expires_date)), e.isPurchasedViaApple && (null === (s = e.metadata) || void 0 === s ? void 0 : s.apple_grace_period_expires_date) != null && (n = c(e.metadata.apple_grace_period_expires_date)), e.isPurchasedExternally) ? M.default.Messages.PREMIUM_SETTINGS_PAST_DUE_INFO_EXTERNAL.format({
                            endDate: n,
                            paymentGatewayName: L.PaymentGatewayToFriendlyName[e.paymentGateway],
                            paymentSourceLink: eT(e.paymentGateway, "PAYMENT_SOURCE_MANAGEMENT")
                        }) : M.default.Messages.PREMIUM_SETTINGS_PAST_DUE_INFO.format({
                            endDate: c(e.currentPeriodStart).add(t, "days"),
                            price: i
                        })
                    }
                    return e.status === v.SubscriptionStatusTypes.ACCOUNT_HOLD ? e.isPurchasedViaGoogle && !(0, A.isAndroid)() ? M.default.Messages.PREMIUM_SETTINGS_ACCOUNT_HOLD_INFO_EXTERNAL.format({
                        endDate: c(e.currentPeriodStart).add(D.MAX_ACCOUNT_HOLD_DAYS, "days"),
                        paymentGatewayName: L.PaymentGatewayToFriendlyName[e.paymentGateway],
                        paymentSourceLink: eT(e.paymentGateway, "PAYMENT_SOURCE_MANAGEMENT")
                    }) : M.default.Messages.PREMIUM_SETTINGS_ACCOUNT_HOLD_INFO_PRICE.format({
                        endDate: c(e.currentPeriodStart).add(D.MAX_ACCOUNT_HOLD_DAYS, "days"),
                        price: i
                    }) : function(e) {
                        return null != e.paymentSourceId && es(e.paymentSourceId)
                    }(e) ? M.default.Messages.PREMIUM_SETTINGS_PREPAID_THROUGH_DATE.format({
                        prepaidEndDate: e.currentPeriodEnd
                    }) : e.status === v.SubscriptionStatusTypes.UNPAID ? M.default.Messages.PREMIUM_SETTINGS_PAYMENT_PROCESSING.format({
                        maxProcessingTimeInDays: D.MAX_PAYMENT_PROCESSING_TIME_DAYS
                    }) : e.isPurchasedExternally ? M.default.Messages.PREMIUM_SETTINGS_RENEWAL_INFO_EXTERNAL.format({
                        renewalDate: t.subscriptionPeriodStart,
                        paymentGatewayName: L.PaymentGatewayToFriendlyName[e.paymentGateway],
                        subscriptionManagementLink: eT(e.paymentGateway, "SUBSCRIPTION_MANAGEMENT")
                    }) : n ? M.default.Messages.PREMIUM_SETTINGS_RENEWAL_INFO_WITH_PLAN.format({
                        planName: M.default.Messages.PREMIUM,
                        renewalDate: t.subscriptionPeriodStart,
                        price: i
                    }) : M.default.Messages.PREMIUM_SETTINGS_RENEWAL_INFO.format({
                        renewalDate: t.subscriptionPeriodStart,
                        price: i
                    })
                },
                isNoneSubscription: f.isNoneSubscription,
                getPlanIdFromInvoice: function(e, t) {
                    let {
                        planId: n
                    } = e;
                    if (e.status === v.SubscriptionStatusTypes.CANCELED) return n;
                    o(null != t, "Expected invoicePreview");
                    let i = t.invoiceItems.find(e => {
                        let {
                            subscriptionPlanId: t
                        } = e;
                        return et(t)
                    });
                    return n = null == i || (0, f.isNoneSubscription)(i.subscriptionPlanId) ? e.planId : null != e.renewalMutations && e.renewalMutations.planId !== e.planId ? e.planId : i.subscriptionPlanId
                },
                getStatusFromInvoice: function(e, t) {
                    let {
                        status: n
                    } = e;
                    if (e.status === v.SubscriptionStatusTypes.CANCELED) return n;
                    o(null != t, "Expected invoicePreview");
                    let i = t.invoiceItems.find(e => {
                        let {
                            subscriptionPlanId: t
                        } = e;
                        return et(t)
                    });
                    return (null == i || (0, f.isNoneSubscription)(i.subscriptionPlanId)) && (n = v.SubscriptionStatusTypes.CANCELED), n
                },
                isBaseSubscriptionCanceled: ec,
                getPremiumGuildIntervalPrice: e_,
                hasAccountCredit: function(e) {
                    return null != e && 0 !== e.size && Array.from(e).some(e => {
                        let {
                            subscriptionPlanId: t,
                            parentId: n,
                            consumed: i
                        } = e;
                        return null != t && null != n && !i
                    })
                },
                getBillingReviewSubheader: eE,
                getIntervalForInvoice: ef,
                getPremiumPlanItem: G,
                getGuildBoostPlanItem: eO,
                isBoostOnlySubscription: function(e) {
                    return null != e && null == G(e) && null != eO(e)
                },
                getPremiumSkuIdForSubscription: eD,
                getPremiumTypeFromSubscription: function(e) {
                    if (null != e) {
                        let t = G(e);
                        if (null != t) return V(t.planId)
                    }
                },
                getPremiumTypeFromSubscriptionRenewalMutations: function(e) {
                    if (null != e && null != e.renewalMutations) {
                        let t = G(e.renewalMutations);
                        if (null != t) return V(t.planId)
                    }
                },
                getPremiumGradientColor: function(e) {
                    switch (e) {
                        case D.PremiumTypes.TIER_0:
                            return O.Gradients.PREMIUM_TIER_0;
                        case D.PremiumTypes.TIER_1:
                            return O.Gradients.PREMIUM_TIER_1;
                        case D.PremiumTypes.TIER_2:
                            return O.Gradients.PREMIUM_TIER_2
                    }
                },
                canUseAnimatedEmojis: function(e) {
                    return (0, _.canUserUse)(_.ANIMATED_EMOJIS, e)
                },
                canUseEmojisEverywhere: function(e) {
                    return (0, _.canUserUse)(_.EMOJIS_EVERYWHERE, e)
                },
                canUseSoundboardEverywhere: function(e) {
                    return (0, _.canUserUse)(_.SOUNDBOARD_EVERYWHERE, e)
                },
                canUseCustomCallSounds: function(e) {
                    return (0, _.canUserUse)(_.CUSTOM_CALL_SOUNDS, e)
                },
                canUploadLargeFiles: function(e) {
                    return (0, _.canUserUse)(_.UPLOAD_LARGE_FILES, e)
                },
                canUseBadges: function(e) {
                    return (0, _.canUserUse)(_.PROFILE_BADGES, e)
                },
                canUseHighVideoUploadQuality: function(e) {
                    return (0, _.canUserUse)(_.INCREASED_VIDEO_UPLOAD_QUALITY, e)
                },
                canEditDiscriminator: function(e) {
                    return (0, _.canUserUse)(_.CUSTOM_DISCRIMINATOR, e)
                },
                hasBoostDiscount: function(e) {
                    return (0, _.canUserUse)(_.BOOST_DISCOUNT, e)
                },
                canUseAnimatedAvatar: function(e) {
                    return (0, _.canUserUse)(_.ANIMATED_AVATAR, e)
                },
                canUseFancyVoiceChannelReactions: function(e) {
                    return (0, _.canUserUse)(_.FANCY_VOICE_CHANNEL_REACTIONS, e)
                },
                canInstallPremiumApplications: function(e) {
                    return (0, _.canUserUse)(_.INSTALL_PREMIUM_APPLICATIONS, e)
                },
                canUseIncreasedMessageLength: function(e) {
                    return (0, _.canUserUse)(_.INCREASED_MESSAGE_LENGTH, e)
                },
                canUseIncreasedGuildCap: function(e) {
                    return (0, _.canUserUse)(_.INCREASED_GUILD_LIMIT, e)
                },
                canRedeemPremiumPerks: function(e) {
                    return (0, _.canUserUse)(_.REDEEM_PREMIUM_PERKS, e)
                },
                canUsePremiumProfileCustomization: function(e) {
                    return (0, _.canUserUse)(_.PROFILE_PREMIUM_FEATURES, e)
                },
                canUsePremiumAppIcons: function(e) {
                    return (0, _.canUserUse)(_.APP_ICONS, e)
                },
                canUsePremiumGuildMemberProfile: function(e) {
                    return (0, _.canUserUse)(_.PREMIUM_GUILD_MEMBER_PROFILE, e)
                },
                canUseClientThemes: function(e) {
                    return (0, _.canUserUse)(_.CLIENT_THEMES, e)
                },
                canStreamQuality: function(e, t) {
                    return e === a.HIGH ? (0, _.canUserUse)(_.STREAM_HIGH_QUALITY, t) : e === a.MID && (0, _.canUserUse)(_.STREAM_MID_QUALITY, t)
                },
                hasFreeBoosts: function(e) {
                    return (0, _.canUserUse)(_.FREE_BOOSTS, e)
                },
                canUsePremiumActivities: function(e) {
                    return (0, _.canUserUse)(_.HOST_PREMIUM_ACTIVITIES, e)
                },
                canUseStickersEverywhere: function(e) {
                    return (0, _.canUserUse)(_.STICKERS_EVERYWHERE, e)
                },
                canUseCustomBackgrounds: function(e) {
                    return (0, _.canUserUse)(_.VIDEO_FILTER_ASSETS, e)
                },
                canUseCollectibles: function(e) {
                    return (0, _.canUserUse)(_.COLLECTIBLES, e)
                },
                formatPriceString: function(e, t) {
                    let n = (0, N.formatPrice)(e.amount, e.currency),
                        i = B(t);
                    return "".concat(n, "/").concat(i)
                },
                StreamQuality: a
            })
        },
        153160: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                formatPrice: function() {
                    return l
                },
                formatRate: function() {
                    return o
                },
                formatPercent: function() {
                    return u
                }
            });
            var i = n("669577"),
                r = n("915639"),
                s = n("646718"),
                a = n("782340");

            function l(e, t, n) {
                var s;
                let a = null !== (s = null == n ? void 0 : n.localeOverride) && void 0 !== s ? s : r.default.locale;
                return (0, i.formatPrice)(e, t, a, n)
            }

            function o(e, t, n) {
                if (t === s.SubscriptionIntervalTypes.YEAR) return a.default.Messages.BILLING_PRICE_PER_YEAR.format({
                    price: e
                });
                if (t === s.SubscriptionIntervalTypes.MONTH && 1 === n) return a.default.Messages.BILLING_PRICE_PER_MONTH.format({
                    price: e
                });
                if (t === s.SubscriptionIntervalTypes.MONTH && n > 1) return a.default.Messages.BILLING_PRICE_PER_MULTI_MONTHS.format({
                    price: e,
                    intervalCount: n
                });
                throw Error("Unsupported interval type: ".concat(t, ", and interval count: ").concat(n))
            }

            function u(e, t) {
                return Intl.NumberFormat(e, {
                    style: "percent",
                    minimumFractionDigits: 0
                }).format(t)
            }
        },
        197881: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ProcessArgs: function() {
                    return r
                }
            });
            var i = n("49671");
            class r {
                static get() {
                    if (null == r.cached) {
                        var e, t, n;
                        let s = null === (n = i.default) || void 0 === n ? void 0 : null === (t = n.processUtils) || void 0 === t ? void 0 : null === (e = t.getMainArgvSync) || void 0 === e ? void 0 : e.call(t);
                        null != s && s.length > 1 && s.shift(), r.cached = null != s ? s : []
                    }
                    return r.cached
                }
                static contains(e) {
                    return r.get().includes(e)
                }
                static isEnvVariableTrue(e) {
                    var t, n, r;
                    if (void 0 === i.default) return !1;
                    switch (null === (r = i.default) || void 0 === r ? void 0 : null === (n = r.process) || void 0 === n ? void 0 : null === (t = n.env) || void 0 === t ? void 0 : t[e]) {
                        case "1":
                        case "true":
                            return !0
                    }
                    return !1
                }
                static isDisallowPopupsSet() {
                    return r.contains("--disallow-popups") || r.isEnvVariableTrue("DISCORD_DISALLOW_POPUPS")
                }
                static isDiscordTestSet() {
                    return r.isEnvVariableTrue("DISCORD_TEST")
                }
                static isDiscordGatewayPlaintextSet() {
                    return !1
                }
            }
        },
        872507: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var i = n("307391"),
                r = n("49671"),
                s = n("921278"),
                a = n("50885");
            let l = new i.default("ProcessUtilsElectron");
            class o extends s.ProcessUtils {
                setupReportingTimer() {
                    var e, t, n;
                    let i = null === (t = r.default) || void 0 === t ? void 0 : null === (e = t.processUtils) || void 0 === e ? void 0 : e.setMemoryInformation;
                    if (null == i) {
                        l.log("setMemoryInformation not available.");
                        return
                    }(null === (n = performance.memory) || void 0 === n ? void 0 : n.usedJSHeapSize) == null && l.error("usedJSHeapSize is not available.");
                    setInterval(() => {
                        var e, t, n;
                        let r = null !== (t = null === (e = performance.memory) || void 0 === e ? void 0 : e.usedJSHeapSize) && void 0 !== t ? t : 0;
                        i({
                            memoryUsageKB: null !== (n = this.lastMemoryUsageKB) && void 0 !== n ? n : 0,
                            usedJSHeapSizeKB: Math.ceil(r / 1024)
                        })
                    }, 1e4)
                }
                getProcessUptime() {
                    var e, t, n;
                    return null === (n = r.default) || void 0 === n ? void 0 : null === (t = n.processUtils) || void 0 === t ? void 0 : null === (e = t.getProcessUptime) || void 0 === e ? void 0 : e.call(t)
                }
                getCurrentCPUUsagePercent() {
                    var e, t, n;
                    return null === (n = r.default) || void 0 === n ? void 0 : null === (t = n.processUtils) || void 0 === t ? void 0 : null === (e = t.getCurrentCPUUsagePercent) || void 0 === e ? void 0 : e.call(t)
                }
                getCurrentMemoryUsageKB() {
                    let e = o.getCurrentMemoryUsageKBCore();
                    return this.lastMemoryUsageKB = e, e
                }
                static getCurrentMemoryUsageKBCore() {
                    try {
                        let e = a.default.getDiscordMemoryUsage();
                        if (null == e) return 0;
                        let t = Object.values(e).reduce((e, t) => e + t, 0);
                        return Math.ceil(t / 1024)
                    } catch (e) {
                        return 0
                    }
                }
                getMemoryUsageDetails() {
                    return a.default.getDiscordMemoryUsage()
                }
                getMemoryUsageElectronRenderer() {
                    try {
                        return a.default.getDiscordMemoryUsageElectronRenderer()
                    } catch (e) {
                        return null
                    }
                }
                constructor() {
                    var e, t, n;
                    super(), this.lastMemoryUsageKB = void 0, this.cpuCoreCount = null === (n = r.default) || void 0 === n ? void 0 : null === (t = n.processUtils) || void 0 === t ? void 0 : null === (e = t.getCPUCoreCount) || void 0 === e ? void 0 : e.call(t), this.setupReportingTimer()
                }
            }
            var u = new o
        },
        921278: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ProcessUtils: function() {
                    return i
                }
            });
            class i {
                getCPUCoreCount() {
                    return this.cpuCoreCount
                }
            }
        },
        315733: function(e, t, n) {
            "use strict";

            function i(e) {
                return /^(?:discord:\/)?\/[a-zA-Z0-9_-]/.test(e)
            }
            n.r(t), n.d(t, {
                isSafeRedirect: function() {
                    return i
                }
            })
        },
        299039: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DISCORD_EPOCH: function() {
                    return i.DISCORD_EPOCH
                },
                default: function() {
                    return r
                }
            });
            var i = n("500947"),
                r = i.default
        },
        159885: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isNullOrEmpty: function() {
                    return r
                },
                upperCaseFirstChar: function() {
                    return i.upperCaseFirstChar
                },
                getAcronym: function() {
                    return i.getAcronym
                },
                cssValueToNumber: function() {
                    return i.cssValueToNumber
                },
                stripDiacritics: function() {
                    return i.stripDiacritics
                },
                truncateText: function() {
                    return i.truncateText
                },
                normalize: function() {
                    return i.normalize
                }
            });
            var i = n("800090");

            function r(e) {
                return null == e || 0 === e.length
            }
        },
        439932: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getThemeClass: function() {
                    return r
                }
            });
            var i = n("49111");

            function r(e) {
                if (null == e) return;
                let t = i.ThemeExtends.get(e);
                return null != t ? "theme-".concat(t, " theme-").concat(e) : "theme-".concat(e)
            }
        },
        253981: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var i = n("470912"),
                r = n.n(i),
                s = n("427964"),
                a = n.n(s),
                l = n("498997"),
                o = n("49111");
            let u = /(?:^|\.)(?:discordapp|discord)\.com$/i,
                c = r.v4().source,
                d = "(?:".concat("(?:(?:[a-z]+:)?//)", "|www\\.)").concat("(?:\\S+(?::\\S*)?@)?", "(?:localhost|").concat(c, "|").concat("(?:[a-z\\u00a1-\\uffff0-9-_]+\\.)+").concat("(?:(?:[a-z\\u00a1-\\uffff]{2,}))", ")").concat("(?::\\d{2,5})?").concat('(?:[/?#][^\\s"]*)?'),
                _ = RegExp(d, "ig"),
                E = new Set([window.GLOBAL_ENV.CDN_HOST, window.GLOBAL_ENV.INVITE_HOST, window.GLOBAL_ENV.GIFT_CODE_HOST, window.GLOBAL_ENV.GUILD_TEMPLATE_HOST]);

            function f(e) {
                var t;
                let n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                if (null == e) return !1;
                return u.test(e) || n && (t = e, E.has(t.toLowerCase()))
            }

            function p(e) {
                return null != e && "discord:" === e
            }

            function h(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                return null != e && f(l.parse(e).hostname, t)
            }

            function S(e) {
                return null != e && p(l.parse(e).protocol)
            }
            var T = {
                URL_REGEX: _,
                isDiscordHostname: f,
                isDiscordProtocol: p,
                isDiscordUrl: h,
                isDiscordUri: S,
                isDiscordCdnUrl: function(e) {
                    return null != e && l.parse(e).hostname === window.GLOBAL_ENV.CDN_HOST
                },
                isDiscordUrlOrUri: e => h(e) || S(e),
                isAppRoute: e => {
                    let t = e.toLowerCase();
                    return t.startsWith("/channels/") || t.startsWith(o.Routes.APPLICATION_STORE) || t.startsWith(o.Routes.APPLICATION_LIBRARY) || t.startsWith(o.Routes.MESSAGE_REQUESTS) || t.startsWith(o.Routes.ACTIVITIES) || t.startsWith(o.Routes.COLLECTIBLES_SHOP) || t.startsWith(o.Routes.ACTIVITY)
                },
                format: e => l.format(e),
                formatPathWithQuery: (e, t) => l.format({
                    pathname: e,
                    query: a.pickBy(t)
                }),
                formatSearch: e => l.format({
                    query: a.pickBy(e)
                }),
                safeParseWithQuery(e) {
                    try {
                        return l.parse(e, !0)
                    } catch (e) {
                        return null
                    }
                },
                makeUrl: function(e) {
                    let t = location.host;
                    return "".concat(location.protocol, "//").concat(t).concat(e)
                }
            }
        },
        980134: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MAX_TOTAL_ATTACHMENT_SIZE: function() {
                    return s
                },
                getAttachmentPayload: function() {
                    return a
                },
                getFileData: function() {
                    return l
                },
                getFile: function() {
                    return o
                }
            });
            var i = n("894488");
            let r = [{
                    reName: /\.jpe?g$/i,
                    name: e => "image".concat(e, ".jpg"),
                    type: "image/jpeg"
                }, {
                    reName: /\.png$/i,
                    name: e => "image".concat(e, ".png"),
                    type: "image/png"
                }, {
                    reName: /\.gif$/i,
                    name: e => "image".concat(e, ".gif"),
                    type: "image/gif"
                }, {
                    reName: /\.webp$/i,
                    name: e => "image".concat(e, ".webp"),
                    type: "image/webp"
                }, {
                    reName: /\.heic$/i,
                    name: e => "image".concat(e, ".heic"),
                    type: "image/heic"
                }, {
                    reName: /\.heif$/i,
                    name: e => "image".concat(e, ".heif"),
                    type: "image/heif"
                }, {
                    reName: /\.mov$/i,
                    name: e => "video".concat(e, ".mov"),
                    type: "video/quicktime"
                }, {
                    reName: /\.avi$/i,
                    name: e => "video".concat(e, ".avi"),
                    type: "video/x-msvideo"
                }, {
                    reName: /\.mp4$/i,
                    name: e => "video".concat(e, ".mp4"),
                    type: "video/mp4"
                }, {
                    reName: /\.webm$/i,
                    name: e => "video".concat(e, ".webm"),
                    type: "image/webm"
                }],
                s = 524288e3;

            function a(e) {
                var t;
                let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    r = arguments.length > 2 ? arguments[2] : void 0,
                    s = {
                        id: null !== (t = null == n ? void 0 : n.toString()) && void 0 !== t ? t : e.id
                    };
                null != e.description && (s.description = e.description);
                let a = function(e) {
                    let {
                        spoiler: t
                    } = e;
                    return t ? i.SPOILER_ATTACHMENT_PREFIX : ""
                }({
                    spoiler: e.spoiler
                });
                return s.filename = "".concat(a).concat(null != r ? r : e.filename), s.uploaded_filename = e.uploadedFilename, "durationSecs" in e && null != e.durationSecs && (s.duration_secs = e.durationSecs), "waveform" in e && null != e.waveform && (s.waveform = e.waveform), "isThumbnail" in e && !0 === e.isThumbnail && (s.is_thumbnail = e.isThumbnail), "isRemix" in e && !0 === e.isRemix && (s.is_remix = e.isRemix), "isClip" in e && !0 === e.isClip && (s.is_clip = e.isClip), s
            }

            function l(e) {
                let t = new XMLHttpRequest;
                return new Promise((n, i) => {
                    t.open("GET", e, !0), t.responseType = "blob", t.onabort = e => i(e), t.onerror = e => i(e), t.ontimeout = e => i(e), t.onload = () => {
                        var e;
                        return n(null == t ? void 0 : null === (e = t.response) || void 0 === e ? void 0 : e.data)
                    }, t.send()
                })
            }

            function o(e) {
                var t, n, i, s, a, l, o, u, c;
                let d, {
                        uri: _,
                        i: E,
                        overrideFilename: f,
                        overrideType: p
                    } = e,
                    h = _.split("/"),
                    S = h[h.length - 1];
                S = null !== (l = null === (n = S.split("?")) || void 0 === n ? void 0 : null === (t = n[0]) || void 0 === t ? void 0 : t.toLowerCase()) && void 0 !== l ? l : "";
                let T = r.find(e => e.reName.test(S));
                if (null == T && null != f && (T = r.find(e => e.reName.test(f))), null != T && null != f) {
                    let e = T.name(E).split(".").pop(),
                        t = f.lastIndexOf(".");
                    d = -1 !== t ? "".concat(f.substr(0, t), ".").concat(e) : "".concat(f, ".").concat(e)
                } else d = null != T ? T.name(E) : null != f ? f : "unknown";
                return {
                    uri: _,
                    filename: d,
                    type: null !== (o = null != p ? p : null === (i = T) || void 0 === i ? void 0 : i.type) && void 0 !== o ? o : "unknown",
                    isVideo: -1 !== (null !== (u = null != p ? p : null === (s = T) || void 0 === s ? void 0 : s.name(E)) && void 0 !== u ? u : "").indexOf("video"),
                    isImage: -1 !== (null !== (c = null != p ? p : null === (a = T) || void 0 === a ? void 0 : a.name(E)) && void 0 !== c ? c : "").indexOf("image")
                }
            }
        },
        158998: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getName: function() {
                    return E
                },
                useName: function() {
                    return f
                },
                humanizeStatus: function() {
                    return h
                },
                ageEligibleForPremiumUpsell: function() {
                    return T
                },
                isNewUser: function() {
                    return I
                },
                getUserTag: function() {
                    return g
                },
                useDirectMessageRecipient: function() {
                    return A
                },
                default: function() {
                    return C
                }
            });
            var i = n("498225"),
                r = n("102985"),
                s = n("697218"),
                a = n("49111"),
                l = n("782340");
            let o = e => "".concat(e[0], "..."),
                u = e => "@".concat(e),
                c = {
                    mode: "full",
                    decoration: "never",
                    identifiable: "auto",
                    forcePomelo: !1
                };

            function d(e) {
                return !!(null != e && e.length > 0)
            }

            function _(e) {
                if (d(e.global_name)) return e.global_name;
                if (d(e.globalName)) return e.globalName;
                if (d(e.username)) return e.username;
                else return "???"
            }

            function E(e) {
                var t;
                if (null == e) return;
                let n = r.default.hidePersonalInformation,
                    i = _(e);
                return n && i.toLocaleLowerCase() === (null === (t = e.username) || void 0 === t ? void 0 : t.toLocaleLowerCase()) && "0" === e.discriminator && (i = o(i)), i
            }

            function f(e) {
                var t;
                let n = (0, i.useStateFromStores)([r.default], () => r.default.hidePersonalInformation);
                if (null == e) return;
                let s = _(e);
                return n && s.toLocaleLowerCase() === (null === (t = e.username) || void 0 === t ? void 0 : t.toLocaleLowerCase()) && "0" === e.discriminator && (s = o(s)), s
            }

            function p(e) {
                if (null != e) {
                    if (d(e.globalName)) return e.globalName;
                    else if (d(e.global_name)) return e.global_name;
                    else return
                }
            }

            function h(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                switch (e) {
                    case a.StatusTypes.ONLINE:
                        return t ? l.default.Messages.STATUS_ONLINE_MOBILE : l.default.Messages.STATUS_ONLINE;
                    case a.StatusTypes.OFFLINE:
                        return l.default.Messages.STATUS_OFFLINE;
                    case a.StatusTypes.IDLE:
                        return l.default.Messages.STATUS_IDLE;
                    case a.StatusTypes.DND:
                        return l.default.Messages.STATUS_DND;
                    case a.StatusTypes.INVISIBLE:
                        return l.default.Messages.STATUS_INVISIBLE;
                    case a.StatusTypes.STREAMING:
                        return l.default.Messages.STATUS_STREAMING;
                    case a.StatusTypes.UNKNOWN:
                    default:
                        return null
                }
            }

            function S(e, t) {
                let {
                    maxDaysOld: n,
                    minDaysOld: i = 0
                } = t;
                if (null == e) return !1;
                let r = Date.now() - e.createdAt.getTime();
                return (null == n || !!(r <= 864e5 * n)) && !!(r >= 864e5 * i) || !1
            }

            function T(e) {
                return !S(e, {
                    minDaysOld: 0,
                    maxDaysOld: 30
                })
            }

            function I(e) {
                return S(e, {
                    minDaysOld: 0,
                    maxDaysOld: 7
                })
            }

            function m(e, t, n) {
                if (null == e) return l.default.Messages.UNKNOWN_USER;
                if (!d(e.username)) return "???";
                let i = n;
                if ("always" === t.identifiable ? i = !1 : "never" === t.identifiable && (i = !0), "0" !== e.discriminator && e.discriminator !== a.NON_USER_BOT_DISCRIMINATOR && !t.forcePomelo) return "username" === t.mode ? e.username : i ? e.username : "".concat(e.username, "#").concat(e.discriminator);
                let r = i ? o(e.username) : e.username;
                return "never" !== t.decoration ? u(r) : r
            }

            function g(e, t) {
                let n = {
                        ...c,
                        ...t
                    },
                    i = "auto" !== n.identifiable || r.default.hidePersonalInformation;
                return m(e, n, i)
            }

            function A(e) {
                return (0, i.useStateFromStores)([s.default], () => {
                    if (null != e) return e.isPrivate() && e.isDM() ? s.default.getUser(e.getRecipientId()) : null
                })
            }
            var C = {
                getName: E,
                useName: f,
                getUserTag: g,
                useUserTag: function(e, t) {
                    let n = {
                            ...c,
                            ...t
                        },
                        s = (0, i.useStateFromStores)([r.default], () => r.default.hidePersonalInformation);
                    return m(e, n, s)
                },
                getFormattedName: function(e) {
                    var t;
                    let n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    if (null == e) return "???";
                    let i = p(e),
                        r = n ? g(e) : null !== (t = e.username) && void 0 !== t ? t : "???";
                    return i === r ? i : null != i ? "".concat(i, " (").concat(r, ")") : r
                },
                getGlobalName: p,
                humanizeStatus: h,
                useDirectMessageRecipient: A
            }
        },
        411093: function(e, t, n) {
            "use strict";

            function i(e, t) {
                let n = e.parentElement;
                for (; null != n;) {
                    if (n.classList.contains(t)) return n;
                    n = n.parentElement
                }
                return null
            }
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            })
        },
        547630: function(e, t, n) {
            "use strict";

            function i() {
                var e;
                return null !== (e = window.devicePixelRatio) && void 0 !== e ? e : 1
            }
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            })
        },
        523096: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getAutomodAvatarURL: function() {
                    return A
                },
                default: function() {
                    return C
                }
            });
            var i = n("560528"),
                r = n("324241"),
                s = n("307757"),
                a = n("548520"),
                l = n("445724"),
                o = n("170382"),
                u = n("593285"),
                c = n("575603"),
                d = n("181815"),
                _ = n("521089"),
                E = n("366942"),
                f = n("125707"),
                p = n("785744"),
                h = n("297384"),
                S = n("573220"),
                T = n("265284"),
                I = n("320436"),
                m = n("348044"),
                g = n("36409");

            function A() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return e ? g : r
            }
            var C = {
                DEFAULT_AVATARS: [s, a, l, o, u, c],
                DEFAULT_GROUP_DM_AVATARS: [d, _, E, f, p, h, S, T],
                BOT_AVATARS: {
                    clyde: m
                },
                DEFAULT_CHANNEL_ICON: I,
                canUseWebp: function() {
                    return i.canUseWebp()
                }
            }
        },
        602043: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isSupportedPlatform: function() {
                    return s
                },
                isLaunchable: function() {
                    return a
                }
            });
            var i = n("964889"),
                r = n("773336");

            function s() {
                return (0, r.isWindows)() || (0, r.isMac)()
            }

            function a(e) {
                let {
                    LibraryApplicationStore: t,
                    LaunchableGameStore: n,
                    DispatchApplicationStore: r,
                    ConnectedAppsStore: s,
                    applicationId: a,
                    branchId: l
                } = e;
                if (s.isConnected(a)) return !0;
                if (null == l && (l = a), r.isLaunchable(a, l)) return !0;
                let o = t.getLibraryApplication(a, l);
                return !(null != o && (0, i.isUserEntitledToLibraryApplication)(o)) && n.isLaunchable(a)
            }
        },
        13798: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getEnv: function() {
                    return p
                },
                codeToKey: function() {
                    return h
                },
                keyToCode: function() {
                    return S
                },
                toBrowserEvents: function() {
                    return A
                },
                toCombo: function() {
                    return C
                },
                toString: function() {
                    return R
                }
            });
            var i = n("32608"),
                r = n.n(i),
                s = n("427964"),
                a = n.n(s),
                l = n("449008"),
                o = n("773336"),
                u = n("49111");
            let c = (0, o.isLinux)() ? u.LinuxKeyToCode : (0, o.isMac)() ? u.MacosKeyToCode : (0, o.isWindows)() ? u.WindowsKeyToCode : void 0,
                d = a.invert(u.LinuxKeyToCode);
            d["223"] = "`", Object.freeze(d);
            let _ = Object.freeze(a.invert(u.MacosKeyToCode)),
                E = a.invert(u.WindowsKeyToCode);
            E["223"] = "`", Object.freeze(E);
            let f = a.invert(null != c ? c : {});

            function p() {
                if ((0, o.isLinux)()) return u.KeyboardEnvs.LINUX;
                if ((0, o.isMac)()) return u.KeyboardEnvs.MACOS;
                if ((0, o.isWindows)()) return u.KeyboardEnvs.WINDOWS;
                else return u.KeyboardEnvs.BROWSER
            }

            function h(e) {
                let [, t, n] = e;
                switch (n) {
                    case u.KeyboardEnvs.LINUX:
                        return d["" + t];
                    case u.KeyboardEnvs.MACOS:
                        return _["" + t];
                    case u.KeyboardEnvs.WINDOWS:
                        return E["" + t];
                    case u.KeyboardEnvs.BROWSER:
                        return r(t);
                    default:
                        return f["" + t]
                }
            }

            function S(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p(),
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : u.KeyboardDeviceTypes.KEYBOARD_KEY;
                switch (n) {
                    case u.KeyboardDeviceTypes.KEYBOARD_KEY:
                    case u.KeyboardDeviceTypes.KEYBOARD_MODIFIER_KEY:
                        switch (t) {
                            case u.KeyboardEnvs.LINUX:
                                return u.LinuxKeyToCode[e];
                            case u.KeyboardEnvs.MACOS:
                                return u.MacosKeyToCode[e];
                            case u.KeyboardEnvs.WINDOWS:
                                return u.WindowsKeyToCode[e];
                            case u.KeyboardEnvs.BROWSER:
                                return r(e.replace(/^(right|left) (shift|meta|ctrl|alt)$/, "$2").replace("meta", "command"));
                            default:
                                return c[e]
                        }
                    case u.KeyboardDeviceTypes.MOUSE_BUTTON:
                        return parseInt(e.replace("MOUSE", ""), 10);
                    case u.KeyboardDeviceTypes.GAMEPAD_BUTTON:
                        return parseInt(e.replace("GAMEPAD", ""), 10);
                    default:
                        throw Error("Unrecognized DeviceType ".concat(n, "."))
                }
            }!(0, o.isMac)() && (f["223"] = "`"), Object.freeze(f);
            let T = [
                    ["META", "⌘"],
                    ["RIGHT META", "RIGHT ⌘"],
                    ["SHIFT", "⇧"],
                    ["RIGHT SHIFT", "RIGHT ⇧"],
                    ["ALT", "⌥"],
                    ["RIGHT ALT", "RIGHT ⌥"],
                    ["CTRL", "⌃"],
                    ["RIGHT CTRL", "RIGHT ⌃"],
                    ["ENTER", "↵"],
                    ["BACKSPACE", "⌫"],
                    ["DEL", "⌦"],
                    ["ESC", "⎋"],
                    ["PAGEUP", "⇞"],
                    ["PAGEDOWN", "⇟"],
                    ["UP", "↑"],
                    ["DOWN", "↓"],
                    ["LEFT", "←"],
                    ["RIGHT", "→"],
                    ["HOME", "↖"],
                    ["END", "↘"],
                    ["TAB", "⇥"],
                    ["SPACE", "␣"]
                ],
                I = e => {
                    for (let [t, n] of T)
                        if (t === e.toUpperCase()) return n;
                    return e
                },
                m = e => {
                    for (let [t, n] of T)
                        if (n === e.toUpperCase()) return t.toLowerCase();
                    return e
                },
                g = /shift|meta|ctrl|alt$/;

            function A(e) {
                let t = {
                    keyCode: 0,
                    metaKey: !1,
                    shiftKey: !1,
                    altKey: !1,
                    ctrlKey: !1
                };
                return null == e ? [] : e.reduce((e, n) => {
                    let i = h(n),
                        r = {
                            ...t
                        };
                    if (null == i) return e.push({
                        ...r,
                        combo: n
                    }), e;
                    if (g.test(i)) return t[i + "Key"] = !0, e.map(e => (e[i + "Key"] = !0, e));
                    {
                        let t = S(i, u.KeyboardEnvs.BROWSER);
                        return null != t && (r.keyCode = t), e.push(r), e
                    }
                }, [])
            }

            function C(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p(),
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : u.KeyboardDeviceTypes.KEYBOARD_KEY,
                    i = e.replace(/numpad plus/i, "").replace(/NUMPAD \+/i, "numpad plus").split("+").map(e => e.trim().replace("plus", "+"));
                return i.reduce((e, i) => {
                    let r = m(i),
                        s = S(r, t, n);
                    return null != s && e.push([n, s, t]), e
                }, [])
            }

            function R(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    i = e.map(e => {
                        let [t, n, i] = e;
                        if (t === u.KeyboardDeviceTypes.KEYBOARD_KEY || t === u.KeyboardDeviceTypes.KEYBOARD_MODIFIER_KEY) {
                            var r;
                            return null !== (r = h(null != i ? [t, n, i] : [t, n])) && void 0 !== r ? r : "UNK".concat(n)
                        }
                        if (t === u.KeyboardDeviceTypes.MOUSE_BUTTON) return "mouse".concat(n);
                        if (t === u.KeyboardDeviceTypes.GAMEPAD_BUTTON) return "gamepad".concat(n);
                        else return "dev".concat(t, ",").concat(n)
                    }).filter(l.isNotNullish);
                if (!t) return i.join("+");
                {
                    let e = -1 !== n.g.navigator.appVersion.indexOf("Mac OS X") ? i.map(I) : i;
                    return e.join(" + ").toUpperCase()
                }
            }
        },
        788235: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var i = n("49111");
            let r = [],
                s = !1;

            function a() {
                let e = window.navigator.connection;
                return null == e ? {
                    type: i.NetworkConnectionTypes.UNKNOWN,
                    effectiveSpeed: i.NetworkConnectionSpeeds.UNKNOWN
                } : {
                    type: null != e.type ? e.type : i.NetworkConnectionTypes.UNKNOWN,
                    effectiveSpeed: e.effectiveType
                }
            }

            function l() {
                let e = a();
                r.forEach(t => t(e))
            }
            var o = {
                addOnlineCallback(e) {
                    window.addEventListener("online", e)
                },
                removeOnlineCallback(e) {
                    window.removeEventListener("online", e)
                },
                addOfflineCallback(e) {
                    window.addEventListener("offline", e)
                },
                removeOfflineCallback(e) {
                    window.removeEventListener("offline", e)
                },
                addChangeCallback(e) {
                    var t;
                    t = e, r.push(t),
                        function() {
                            if (!0 === s) return;
                            let e = window.navigator.connection;
                            null != e && (s = !0, e.addEventListener("change", l))
                        }()
                },
                removeChangeCallback(e) {
                    ! function(e) {
                        let t = r.indexOf(e); - 1 !== t && (r.splice(t, 1), ! function() {
                            if (!1 === s) return;
                            let e = window.navigator.connection;
                            null != e && 0 === r.length && null != e && (e.removeEventListener("change", l), s = !1)
                        }())
                    }(e)
                },
                getNetworkInformation: () => Promise.resolve(a()),
                isOnline() {
                    let e = navigator.onLine;
                    return void 0 === e || e
                }
            }
        }
    }
]);