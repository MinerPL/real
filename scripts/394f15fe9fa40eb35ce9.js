(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
    ["78148"], {
        950899: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9da7ae63b88717a5d4be.png"
        },
        318548: function(e, t, n) {
            "use strict";
            e.exports = n.p + "3b7d1f84725ab9a0d71c.svg"
        },
        672523: function(e, t, n) {
            "use strict";
            e.exports = n.p + "953458e872948604afbf.svg"
        },
        519352: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6c79e7f4a3f75383bf9a.svg"
        },
        630159: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d2664a9b4f46d06c7ca4.svg"
        },
        834958: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e8478521b0845b87c8ad.png"
        },
        929359: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7d6ee13201721de0c14e.png"
        },
        471539: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0d45ddc0e16972a1bfc2.png"
        },
        608128: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4c091df98c5a5cbfd323.svg"
        },
        914143: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b3dd9b1e282fff30af5b.svg"
        },
        933150: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c91026f0b84bc1380e52.svg"
        },
        829361: function(e, t, n) {
            "use strict";
            e.exports = n.p + "532f1d4582d881960783.svg"
        },
        289309: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ee4637f8627629dd0da5.svg"
        },
        197040: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bca918618b884a382ab5.svg"
        },
        1547: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5741692705ba077f4190.svg"
        },
        819444: function(e, t, n) {
            "use strict";
            e.exports = n.p + "24aa06be5457e66bdd64.svg"
        },
        681224: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0629e34902ae58f8e4ca.svg"
        },
        855143: function(e, t, n) {
            "use strict";
            e.exports = n.p + "01864c39871ce619d855.svg"
        },
        934516: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a72746e7108167af95c8.svg"
        },
        470932: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e725a703dee45c6662e1.svg"
        },
        855237: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a0f644c8dab01cdcb21e.svg"
        },
        292379: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bc17dea6307567a5a828.svg"
        },
        649592: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b59cc79bee3b08e25893.svg"
        },
        37476: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7e133d43fb9e0c982693.svg"
        },
        696414: function(e, t, n) {
            "use strict";
            e.exports = n.p + "2c37d410c7431344d45a.png"
        },
        992739: function(e, t, n) {
            "use strict";
            e.exports = n.p + "32fda287bbd217f60166.svg"
        },
        306910: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9401bdbd066bbc6bb35e.svg"
        },
        396609: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ca840e392fe5c8c84693.svg"
        },
        617059: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8ec619e29a44a057e4b5.svg"
        },
        853477: function(e, t, n) {
            "use strict";
            e.exports = n.p + "89f38a8716e7d56c17dc.svg"
        },
        557659: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7e0036fd6cea3d4fa30e.svg"
        },
        31396: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c0904e185ab8b4e7b2c8.svg"
        },
        357413: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9d860163581f23579619.svg"
        },
        121432: function(e, t, n) {
            "use strict";
            e.exports = n.p + "21351b92881882ca8597.svg"
        },
        991015: function(e, t, n) {
            "use strict";
            e.exports = n.p + "128943d22370771f543f.svg"
        },
        678262: function(e, t, n) {
            "use strict";
            e.exports = n.p + "32f240ec7045a00a221c.svg"
        },
        436412: function(e, t, n) {
            "use strict";
            e.exports = n.p + "954feed894e2ad0262b2.svg"
        },
        729386: function(e, t, n) {
            "use strict";
            e.exports = n.p + "909d9565a682e0cb3b7c.svg"
        },
        235800: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c99b3867ae4d22964664.svg"
        },
        367574: function(e, t, n) {
            "use strict";
            e.exports = n.p + "148fd8378ac32a66783c.svg"
        },
        398586: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7e724c5bbf29dd3598ea.svg"
        },
        667818: function(e, t, n) {
            "use strict";
            e.exports = n.p + "13d4a20830c1f447ad85.svg"
        },
        516395: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0ea8260dd049f3be6f41.svg"
        },
        723030: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8f8162ee689b2d85996c.svg"
        },
        754771: function(e, t, n) {
            "use strict";
            e.exports = n.p + "cc543f407b1696f1e82f.svg"
        },
        321221: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9e9722bd5c8ec20fd746.svg"
        },
        744725: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4ee80a24b008ebfdc4a0.svg"
        },
        229483: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e9802d8cbd4efea22c7f.svg"
        },
        505766: function(e, t, n) {
            "use strict";
            e.exports = n.p + "cf0a3491ccd8d75e5468.svg"
        },
        99739: function(e, t, n) {
            "use strict";
            e.exports = n.p + "27eb704c7cc53936e0fa.svg"
        },
        635145: function(e, t, n) {
            "use strict";
            e.exports = n.p + "91541de57302ebd24644.svg"
        },
        287715: function(e, t, n) {
            "use strict";
            e.exports = n.p + "3c35c411e3b2dac44445.svg"
        },
        902050: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d126cf945d5a392a4097.svg"
        },
        253323: function(e, t, n) {
            "use strict";
            e.exports = n.p + "834b27202156c61e88a3.svg"
        },
        256574: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4813beb1d7ec1d3d0d3f.svg"
        },
        458284: function(e, t, n) {
            "use strict";
            e.exports = n.p + "106e430cc187836ddbbd.svg"
        },
        311492: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1a7be5edb7c525306752.gif"
        },
        753656: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b5d783ec63935c198d5e.png"
        },
        476742: function(e, t, n) {
            "use strict";
            e.exports = n.p + "82012659f3d934de21a4.png"
        },
        156465: function(e, t, n) {
            "use strict";
            e.exports = n.p + "42b086ee3d9863ea45bc.svg"
        },
        906897: function(e, t, n) {
            "use strict";
            e.exports = n.p + "896c671f42f403930aa1.svg"
        },
        479999: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f5fcce7c509fcb9e2e7f.svg"
        },
        183127: function(e, t, n) {
            "use strict";
            e.exports = n.p + "fcf4c0943984017de6b7.svg"
        },
        892839: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d53b136d76b927267b3e.svg"
        },
        65016: function(e, t, n) {
            "use strict";
            e.exports = n.p + "acff4170e5aef6d0b8ab.png"
        },
        499255: function(e, t, n) {
            "use strict";
            e.exports = n.p + "75c70d0d6625bb8cf2f5.svg"
        },
        704936: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5ff73b0989c80fde7edb.svg"
        },
        465988: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c11a0ed34fddcdfaf466.svg"
        },
        526954: function(e, t, n) {
            "use strict";
            e.exports = n.p + "18883c22029ff557572e.svg"
        },
        35296: function(e, t, n) {
            "use strict";
            e.exports = n.p + "44a8a263aced971974c6.svg"
        },
        344665: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a61b011f6d36f74215e5.svg"
        },
        93556: function(e, t, n) {
            "use strict";
            e.exports = n.p + "3a93e7ad39ce7e750bc6.svg"
        },
        118913: function(e, t, n) {
            "use strict";
            e.exports = n.p + "15fbb1a85485d28174e5.svg"
        },
        125134: function(e, t, n) {
            "use strict";
            e.exports = n.p + "48db18afbce8673d114c.svg"
        },
        380493: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a978c23f8e989757d65b.svg"
        },
        783858: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bb338d0a77decab1981a.svg"
        },
        181482: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ad3488a6a9528f5656f9.svg"
        },
        925107: function(e, t, n) {
            "use strict";
            e.exports = n.p + "076eaacfcda10b3dd081.svg"
        },
        347124: function(e, t, n) {
            "use strict";
            e.exports = n.p + "21b83b80872fce3e23d1.svg"
        },
        630344: function(e, t, n) {
            "use strict";
            e.exports = n.p + "3e876feb943a16979f7f.svg"
        },
        735468: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0f8d9250f8612ab7dc44.svg"
        },
        782983: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6bd51186f4cbfe84f872.svg"
        },
        229709: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6fb2064d47ffad5be5df.svg"
        },
        897142: function(e, t, n) {
            "use strict";
            e.exports = n.p + "133496b12baf37b12e29.svg"
        },
        352791: function(e, t, n) {
            "use strict";
            e.exports = n.p + "23e8fc1dee30b7819227.svg"
        },
        245629: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e6496ded2b1c9137e3be.svg"
        },
        141555: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4631416718b327c65f5e.svg"
        },
        520609: function(e, t, n) {
            "use strict";
            e.exports = n.p + "449491e78be7e6b79921.svg"
        },
        487577: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1e79875ffaa10d5d26b3.svg"
        },
        270111: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8b02d737af060c3da754.svg"
        },
        158463: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9cae5cbf245ad4d26386.svg"
        },
        448738: function(e, t, n) {
            "use strict";
            e.exports = n.p + "cefbb4051caaf7fcd9b9.svg"
        },
        12469: function(e, t, n) {
            "use strict";
            e.exports = n.p + "32c31659fb057a7437a7.svg"
        },
        936775: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b7204ec85b295bf8c39f.svg"
        },
        288562: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0a46a4a99b961a8a0006.png"
        },
        553274: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a745c1f1e7f49df66b21.svg"
        },
        824489: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5e7aa4b4bc9cc22cf93e.svg"
        },
        152985: function(e, t, n) {
            "use strict";
            e.exports = n.p + "440d8145b3dff23399e7.svg"
        },
        963301: function(e, t, n) {
            "use strict";
            e.exports = n.p + "056efbeaaaa0b3c20b39.svg"
        },
        652720: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d2231aa1ae2abe2df3bc.svg"
        },
        358616: function(e, t, n) {
            "use strict";
            e.exports = n.p + "223e044de8442138ab49.svg"
        },
        865932: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f54b8f205be130d3839a.svg"
        },
        392963: function(e, t, n) {
            "use strict";
            e.exports = n.p + "19e7daca48265059a2bd.svg"
        },
        871859: function(e, t, n) {
            "use strict";
            e.exports = n.p + "47f29fcff307e852553b.svg"
        },
        371997: function(e, t, n) {
            "use strict";
            e.exports = n.p + "452cd32e3c30e1c83f90.svg"
        },
        83064: function(e, t, n) {
            "use strict";
            e.exports = n.p + "879f78418b71810fff04.png"
        },
        438313: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b8c9744a2e79f721f571.png"
        },
        227809: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f6639fb72dedc6107f99.png"
        },
        352074: function(e, t, n) {
            "use strict";
            e.exports = n.p + "326615ab385a83dc772a.png"
        },
        240542: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0e1dac3ff58e6cd29e54.gif"
        },
        22230: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a2a4e4f7ee423cd6bbcd.mov"
        },
        318342: function(e, t, n) {
            "use strict";
            e.exports = n.p + "21a45210eb71c8dd143f.webm"
        },
        604448: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8bc05ae4c6f108b651eb.mov"
        },
        788936: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8088275f2bba6c7b1ae1.webm"
        },
        833572: function(e, t, n) {
            "use strict";
            e.exports = n.p + "baded936da3290c1c243.mov"
        },
        90976: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1f710ae2375e133a76c4.webm"
        },
        170486: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a139e1ef9370869a38c5.mov"
        },
        664182: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d71df05a611472844848.webm"
        },
        727992: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6296fbce83bbcc0e73d9.svg"
        },
        776432: function(e, t, n) {
            "use strict";
            e.exports = n.p + "27e9eb71cd459e52fe5e.png"
        },
        546643: function(e, t, n) {
            "use strict";
            e.exports = n.p + "35330ac2e488f0dd7d6f.png"
        },
        933751: function(e, t, n) {
            "use strict";
            e.exports = n.p + "68eda46ec1e628564224.png"
        },
        275974: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c88c7ab4d8dbc0e7a4dd.svg"
        },
        939488: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setHomeLink: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "APP_VIEW_SET_HOME_LINK",
                    link: e
                })
            }
        },
        17434: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setCertifiedDevices: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e, t) {
                a.default.dispatch({
                    type: "CERTIFIED_DEVICES_SET",
                    applicationId: e,
                    devices: t
                })
            }
        },
        363025: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                hidePremiumGuildGracePeriodNotice: function() {
                    return s
                },
                hideEnablePublicGuildUpsellNotice: function() {
                    return l
                },
                hideMaxMemberCountChannelNotice: function() {
                    return i
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS",
                    guildId: e
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "PUBLIC_UPSELL_NOTICE_DISMISS",
                    guildId: e
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "MAX_MEMBER_COUNT_NOTICE_DISMISS",
                    guildId: e
                })
            }
        },
        778323: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                dismiss: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "DETECTED_OFF_PLATFORM_PREMIUM_PERKS_DISMISS",
                    skuId: e
                })
            }
        },
        711115: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                uninstallBranchPrompt: function() {
                    return r
                }
            });
            var a = n("77078"),
                s = n("605250"),
                l = n("546463"),
                i = n("190017");

            function r(e, t, r) {
                ! function(e, t) {
                    let i = l.default.getGame(e);
                    if (null == i) {
                        new(0, s.default)("DispatchUninstallActionCreators").log("Application not found for game ".concat(e));
                        return
                    }(0, a.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("857727").then(n.bind(n, "857727"));
                        return n => e({
                            game: i,
                            onConfirmUninstall: t,
                            ...n
                        })
                    })
                }(e, () => (0, i.uninstallApplication)(e, t, r))
            }
        },
        259083: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                sortList: function() {
                    return s
                },
                updateLibraryFilter: function() {
                    return l
                },
                updateActiveRowKey: function() {
                    return i
                }
            });
            var a = n("913144");

            function s(e, t) {
                a.default.dispatch({
                    type: "LIBRARY_TABLE_SORT_UPDATE",
                    key: e,
                    direction: t
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "LIBRARY_APPLICATION_FILTER_UPDATE",
                    query: e
                })
            }

            function i(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                a.default.dispatch({
                    type: "LIBRARY_TABLE_ACTIVE_ROW_ID_UPDATE",
                    key: e,
                    isKeyboardEvent: t
                })
            }
        },
        680762: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchGuildAffinities: function() {
                    return i
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("49111");
            let i = () => a.default.get({
                url: l.Endpoints.GUILD_AFFINITIES,
                oldFormErrors: !0
            }).then(e => {
                let {
                    body: {
                        guild_affinities: t
                    }
                } = e;
                s.default.dispatch({
                    type: "LOAD_GUILD_AFFINITIES_SUCCESS",
                    guildAffinities: t
                })
            }, () => {
                s.default.dispatch({
                    type: "LOAD_GUILD_AFFINITIES_FAILURE"
                })
            })
        },
        228157: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("913144"),
                s = {
                    move(e, t) {
                        a.default.dispatch({
                            type: "INCOMING_CALL_MOVE",
                            x: e,
                            y: t
                        })
                    }
                }
        },
        641608: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                addInstallLocation: function() {
                    return l
                },
                removeInstallLocation: function() {
                    return i
                },
                updateInstallLocation: function() {
                    return r
                },
                fetchMetadata: function() {
                    return o
                }
            });
            var a = n("913144"),
                s = n("152723");

            function l(e) {
                s.default.queryDirectory(e, (t, n) => {
                    null == t && null != n && a.default.dispatch({
                        type: "INSTALLATION_LOCATION_ADD",
                        path: e,
                        metadata: n
                    })
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "INSTALLATION_LOCATION_REMOVE",
                    path: e
                })
            }

            function r(e, t) {
                let {
                    label: n,
                    isDefault: s
                } = t;
                a.default.dispatch({
                    type: "INSTALLATION_LOCATION_UPDATE",
                    path: e,
                    label: n,
                    isDefault: s
                })
            }

            function o(e) {
                let t = {},
                    n = 0;
                for (let l of e) null != l && "string" == typeof l && s.default.queryDirectory(l, (s, i) => {
                    ++n, null == s && null != i && (t[l] = i), n === e.length && a.default.dispatch({
                        type: "INSTALLATION_LOCATION_FETCH_METADATA",
                        metadataPayload: t
                    })
                })
            }
        },
        568131: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchLibrary: function() {
                    return o
                },
                createTestModeLibraryApplications: function() {
                    return u
                },
                setActiveLaunchOptionId: function() {
                    return d
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("370999"),
                i = n("271560"),
                r = n("49111");
            async function o() {
                try {
                    let e = await (0, i.httpGetWithCountryCodeQuery)({
                        url: r.Endpoints.LIBRARY,
                        oldFormErrors: !0
                    }, !1);
                    s.default.dispatch({
                        type: "LIBRARY_FETCH_SUCCESS",
                        libraryApplications: e.body
                    })
                } catch (e) {
                    s.default.dispatch({
                        type: "LIBRARY_FETCH_FAIL",
                        error: e
                    })
                }
            }
            async function u(e) {
                let t = e.primarySkuId;
                if (null == t) return;
                let n = await a.default.get({
                        url: r.Endpoints.APPLICATION_BRANCH_LIST(e.id),
                        oldFormErrors: !0
                    }).then(e => e.body),
                    i = n.map(n => l.default.createForTestMode({
                        id: e.id,
                        skuId: t,
                        branch: n
                    }));
                s.default.dispatch({
                    type: "LIBRARY_APPLICATIONS_TEST_MODE_ENABLED",
                    libraryApplications: i
                })
            }

            function d(e, t, n) {
                s.default.dispatch({
                    type: "LIBRARY_APPLICATION_ACTIVE_LAUNCH_OPTION_UPDATE",
                    applicationId: e,
                    branchId: t,
                    launchOptionId: n
                })
            }
        },
        444949: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchActivityStatistics: function() {
                    return r
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("251013"),
                i = n("49111");
            async function r() {
                let e = l.default.lastFetched;
                if (!(null != e && Date.now() - e < 216e5)) try {
                    let e = await a.default.get({
                        url: i.Endpoints.USER_ACTIVITY_STATISTICS,
                        oldFormErrors: !0
                    });
                    s.default.dispatch({
                        type: "USER_ACTIVITY_STATISTICS_FETCH_SUCCESS",
                        statistics: e.body
                    })
                } catch (e) {
                    return e
                }
            }
        },
        297726: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                connect: function() {
                    return i
                },
                disconnect: function() {
                    return r
                },
                createLobby: function() {
                    return o
                },
                updateLobby: function() {
                    return u
                },
                updateLobbyMember: function() {
                    return d
                },
                deleteLobby: function() {
                    return c
                },
                send: function() {
                    return E
                },
                search: function() {
                    return f
                },
                voiceConnect: function() {
                    return _
                },
                voiceDisconnect: function() {
                    return I
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("49111");

            function i(e, t, n) {
                return new Promise((a, l) => {
                    s.default.dispatch({
                        type: "LOBBY_CONNECT",
                        socketId: e,
                        lobbyId: t,
                        lobbySecret: n,
                        resolve: a,
                        reject: l
                    })
                })
            }

            function r(e) {
                s.default.dispatch({
                    type: "LOBBY_DISCONNECT",
                    lobbyId: e
                })
            }

            function o(e, t, n) {
                return a.default.post({
                    url: l.Endpoints.LOBBIES,
                    body: {
                        application_id: t,
                        ...n
                    },
                    retries: 1,
                    oldFormErrors: !0
                }).then(t => {
                    let {
                        body: n
                    } = t;
                    return i(e, n.id, n.secret)
                })
            }

            function u(e, t) {
                return a.default.patch({
                    url: l.Endpoints.LOBBY(e),
                    body: {
                        ...t
                    },
                    retries: 1,
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function d(e, t, n) {
                return a.default.patch({
                    url: l.Endpoints.LOBBY_MEMBER(e, t),
                    body: {
                        ...n
                    },
                    retries: 1,
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function c(e) {
                return a.default.delete({
                    url: l.Endpoints.LOBBY(e),
                    body: {},
                    retries: 1,
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function E(e, t) {
                return a.default.post({
                    url: l.Endpoints.LOBBY_SEND(e),
                    body: {
                        data: t
                    },
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function f(e) {
                return a.default.post({
                    url: l.Endpoints.LOBBY_SEARCH,
                    body: e,
                    oldFormErrors: !0
                }).then(e => {
                    let {
                        body: t
                    } = e;
                    return t
                })
            }

            function _(e) {
                s.default.dispatch({
                    type: "LOBBY_VOICE_CONNECT",
                    lobbyId: e
                })
            }

            function I(e) {
                s.default.dispatch({
                    type: "LOBBY_VOICE_DISCONNECT",
                    lobbyId: e
                })
            }
        },
        950926: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("913144"),
                s = {
                    clearRemoteDisconnectVoiceChannelId() {
                        a.default.dispatch({
                            type: "CLEAR_REMOTE_DISCONNECT_VOICE_CHANNEL_ID"
                        })
                    }
                }
        },
        52289: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("913144"),
                s = {
                    setEnabled(e) {
                        this.update({
                            enabled: e
                        })
                    },
                    update(e) {
                        for (let t of Object.keys(e)) a.default.dispatch({
                            type: "STREAMER_MODE_UPDATE",
                            key: t,
                            value: e[t]
                        })
                    }
                }
        },
        70614: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                authorizeAndSetTestModeApplication: function() {
                    return E
                },
                reset: function() {
                    return f
                },
                resetError: function() {
                    return _
                }
            });
            var a = n("913144"),
                s = n("550766"),
                l = n("653047"),
                i = n("546463"),
                r = n("568734"),
                o = n("253981"),
                u = n("823411"),
                d = n("568131"),
                c = n("49111");
            async function E(e, t) {
                a.default.dispatch({
                    applicationId: e,
                    type: "DEVELOPER_TEST_MODE_AUTHORIZATION_START"
                });
                try {
                    let n = await (0, s.validateTestMode)(e);
                    if (!n) throw Error("Do not have access!");
                    let E = i.default.getGame(e);
                    null == E && (E = l.default.createFromServer(await u.default.fetchApplication(e)));
                    let f = (0, r.hasFlag)(E.flags, c.ApplicationFlags.EMBEDDED);
                    if (f && (null == t || !o.default.URL_REGEX.test(t))) throw Error("Invalid Origin URL for embedded application");
                    return !f && d.createTestModeLibraryApplications(E), a.default.dispatch({
                        type: "DEVELOPER_TEST_MODE_AUTHORIZATION_SUCCESS",
                        applicationId: e,
                        originURL: f ? t : null
                    }), E
                } catch (t) {
                    return a.default.dispatch({
                        type: "DEVELOPER_TEST_MODE_AUTHORIZATION_FAIL",
                        applicationId: e,
                        error: t.message
                    }), null
                }
            }

            function f() {
                a.default.dispatch({
                    type: "DEVELOPER_TEST_MODE_RESET"
                })
            }

            function _() {
                a.default.dispatch({
                    type: "DEVELOPER_TEST_MODE_RESET_ERROR"
                })
            }
        },
        831314: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("872717"),
                s = n("271938"),
                l = n("49111"),
                i = {
                    setUserAchievement(e, t, n) {
                        let i = s.default.getId();
                        return a.default.put({
                            url: l.Endpoints.USER_ACHIEVEMENTS_FOR_USER(i, e, t),
                            body: {
                                percent_complete: n
                            },
                            oldFormErrors: !0
                        })
                    },
                    fetchForApplication: e => a.default.get({
                        url: l.Endpoints.USER_ACHIEVEMENTS(e),
                        retries: 1,
                        oldFormErrors: !0
                    }).then(e => {
                        let {
                            body: t
                        } = e;
                        return t
                    })
                }
        },
        777273: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchUserAffinities: function() {
                    return r
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("843823"),
                i = n("49111");

            function r() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                return l.default.needsRefresh() ? (s.default.dispatch({
                    type: "LOAD_USER_AFFINITIES"
                }), a.default.get({
                    url: i.Endpoints.USER_AFFINITIES,
                    retries: e ? 3 : 0,
                    oldFormErrors: !0
                }).then(e => {
                    let {
                        body: t
                    } = e;
                    s.default.dispatch({
                        type: "LOAD_USER_AFFINITIES_SUCCESS",
                        affinities: t
                    })
                }, () => {
                    s.default.dispatch({
                        type: "LOAD_USER_AFFINITIES_FAILURE"
                    })
                })) : Promise.resolve()
            }
        },
        139245: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                markView: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "VIEW_HISTORY_MARK_VIEW",
                    key: e
                })
            }
        },
        245489: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("627445"),
                o = n.n(r),
                u = n("77078"),
                d = n("736964"),
                c = n("476765"),
                E = n("284609"),
                f = n("49111"),
                _ = n("894282"),
                I = n("782340"),
                h = n("636478"),
                C = n("926622");
            let T = {
                    canSend: !1,
                    hint: null,
                    success: null,
                    error: null
                },
                m = (0, c.uid)(),
                S = "".concat(m, "-decription"),
                N = "".concat(m, "-error");

            function A(e, t) {
                switch (t.type) {
                    case "RESET":
                        return T;
                    case "SUCCESS":
                        return {
                            ...T, success: t.text
                        };
                    case "HINT":
                        return {
                            ...T, canSend: !0, hint: t.text
                        };
                    case "ERROR":
                        return {
                            ...e, canSend: !0, error: t.text
                        }
                }
            }

            function p() {
                let e = s.createRef(),
                    t = s.createRef(),
                    [n, l] = s.useReducer(A, T),
                    {
                        canSend: r,
                        hint: c,
                        success: p,
                        error: g
                    } = n;
                return s.useEffect(() => {
                    null != p && (o(null != e.current, "Input is submitting when not mounted"), e.current.value = "", e.current.focus())
                }, [p, e]), (0, a.jsxs)("form", {
                    onSubmit: t => {
                        t.preventDefault(), o(null != e.current, "Input is submitted when not mounted");
                        let n = e.current.value.trim();
                        !n.includes("#") && n.startsWith("@") && (n = n.substring(1));
                        let a = (0, E.validateDiscordTag)(n);
                        if (null != a) {
                            l({
                                type: "ERROR",
                                text: a
                            });
                            return
                        }
                        d.default.sendRequest({
                            discordTag: n,
                            context: {
                                location: "Add Friend"
                            }
                        }).then(() => l({
                            type: "SUCCESS",
                            text: I.default.Messages.ADD_FRIEND_SUCCESS.format({
                                discordTag: n
                            })
                        }), e => {
                            var t;
                            return l({
                                type: "ERROR",
                                text: (0, E.humanizeAbortCode)(null === (t = e.body) || void 0 === t ? void 0 : t.code, n)
                            })
                        })
                    },
                    autoComplete: "off",
                    children: [(0, a.jsx)(u.FormText, {
                        id: S,
                        type: u.FormText.Types.DESCRIPTION,
                        children: I.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION
                    }), (0, a.jsx)(u.FocusRing, {
                        focusTarget: e,
                        ringTarget: t,
                        ringClassName: h.ring,
                        children: (0, a.jsxs)("div", {
                            ref: t,
                            className: i(h.addFriendInputWrapper, {
                                [h.success]: p,
                                [h.error]: g
                            }),
                            children: [(0, a.jsx)(u.TextInput, {
                                id: m,
                                inputRef: e,
                                className: h.addFriendInput,
                                inputClassName: h.input,
                                onKeyPress: t => {
                                    let n = t.currentTarget.value;
                                    if (t.key !== _.KeyboardEventKey.Enter && n.includes("#")) {
                                        o(null != e.current, "Input is handling keypress when not mounted");
                                        let a = n.indexOf("#"),
                                            s = e.current.selectionStart,
                                            l = t.key === _.KeyboardEventKey.Backspace || t.key === _.KeyboardEventKey.ArrowRight || t.key === _.KeyboardEventKey.ArrowLeft,
                                            i = t.which >= 48 && t.which <= 57;
                                        null != s && s > a && /^(.+?#\d{4})$/.test(n) && !l ? t.preventDefault() : null != s && s > a && !i && !l && t.preventDefault()
                                    }
                                },
                                onChange: e => {
                                    if (e.length <= 0) {
                                        l({
                                            type: "RESET"
                                        });
                                        return
                                    }
                                    let t = "",
                                        [, n] = e.split("#");
                                    null != n && (t = e + f.PLACEHOLDER_TAG.slice(null != n ? n.length + 1 : 0)), l({
                                        type: "HINT",
                                        text: t
                                    })
                                },
                                maxLength: 37,
                                autoFocus: !0,
                                autoComplete: "off",
                                name: "add-friend",
                                "data-lpignore": !0,
                                placeholder: I.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                                "aria-label": I.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                                "aria-invalid": null != g || void 0,
                                "aria-describedby": null != g ? N : S
                            }), null != c && (0, a.jsx)("div", {
                                className: h.addFriendHint,
                                "aria-hidden": !0,
                                children: c
                            }), (0, a.jsx)(u.Button, {
                                size: u.Button.Sizes.SMALL,
                                disabled: !r,
                                type: "submit",
                                children: I.default.Messages.ADD_FRIEND_BUTTON
                            })]
                        })
                    }), null != g && (0, a.jsx)(u.FormText, {
                        role: "alert",
                        id: N,
                        type: u.FormText.Types.ERROR,
                        className: C.marginTop8,
                        children: g
                    }), null != p && (0, a.jsx)(u.FormText, {
                        role: "status",
                        type: u.FormText.Types.SUCCESS,
                        className: C.marginTop8,
                        children: p
                    })]
                })
            }
        },
        252917: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eU
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("803182"),
                o = n("90915"),
                u = n("759843"),
                d = n("394846"),
                c = n("446674"),
                E = n("939443"),
                f = n("597590"),
                _ = n("987697"),
                I = n("464682"),
                h = n("73749"),
                C = n("191145"),
                T = n("533466"),
                m = n("837844"),
                S = n("171984"),
                N = n("551254"),
                A = n("893399"),
                p = n("144588"),
                g = n("353681"),
                R = n("256430"),
                O = n("390236"),
                L = n("144295"),
                M = n("546102"),
                v = n("597235"),
                D = n("112265"),
                x = n("380710"),
                P = n("534702"),
                y = n("889145"),
                b = n("413896"),
                U = n("993057"),
                G = n("118971"),
                j = n("696336"),
                F = n("273457"),
                k = n("598156"),
                B = n("397039"),
                w = n("628805"),
                H = n("755729"),
                V = n("934743"),
                Y = n("566396"),
                W = n("618489"),
                K = n("209688"),
                z = n("747223"),
                q = n("921228"),
                Q = n("516245"),
                X = n("393027"),
                J = n("1501"),
                Z = n("161778"),
                $ = n("42203"),
                ee = n("26989"),
                et = n("305961"),
                en = n("18494"),
                ea = n("600133"),
                es = n("449008"),
                el = n("439932"),
                ei = n("315977"),
                er = n("911120"),
                eo = n("455555"),
                eu = n("229644"),
                ed = n("901582"),
                ec = n("758997"),
                eE = n("474557"),
                ef = n("49111"),
                e_ = n("724210"),
                eI = n("653138"),
                eh = n("782340"),
                eC = n("783686");
            let eT = e => {
                    let {
                        match: t
                    } = e, n = (0, c.useStateFromStores)([$.default, en.default], () => {
                        let e = en.default.getChannelId();
                        return $.default.getChannel(e)
                    }), {
                        guildId: s,
                        channelId: l,
                        messageId: i
                    } = t.params, r = (0, c.useStateFromStores)([et.default], () => et.default.getGuild(s)), o = (0, c.useStateFromStores)([ee.default], () => null == s ? null : ee.default.getSelfMember(s)), u = (0, N.isEligibleForSubscriptionsInGuildShop)(s, "channel_renderer");
                    if (null != s && null != l && (0, e_.isStaticChannelRoute)(l)) switch (l) {
                        case e_.StaticChannelRoute.ROLE_SUBSCRIPTIONS:
                            return u ? (0, a.jsx)(p.default, {
                                guildId: s,
                                initialTab: A.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS
                            }) : (0, a.jsx)(U.default, {
                                guildId: s
                            });
                        case e_.StaticChannelRoute.GUILD_SHOP:
                            return (0, a.jsx)(p.default, {
                                guildId: s,
                                productId: i
                            });
                        case e_.StaticChannelRoute.MEMBER_APPLICATIONS:
                            return (0, a.jsx)(v.default, {
                                guildId: s
                            });
                        case e_.StaticChannelRoute.GUILD_HOME:
                            return (0, a.jsx)(L.default, {
                                guildId: s
                            });
                        case e_.StaticChannelRoute.CHANNEL_BROWSER:
                            return (0, a.jsx)(P.default, {
                                guildId: s,
                                selectedSection: eI.GuildOnboardingTab.BROWSE
                            });
                        case e_.StaticChannelRoute.GUILD_ONBOARDING:
                            return (0, a.jsx)(b.default, {
                                guildId: s
                            });
                        case e_.StaticChannelRoute.CUSTOMIZE_COMMUNITY:
                            return (0, a.jsx)(P.default, {
                                guildId: s,
                                selectedSection: eI.GuildOnboardingTab.CUSTOMIZE
                            });
                        case e_.StaticChannelRoute.MEMBER_SAFETY:
                            return (0, a.jsx)(D.default, {
                                guildId: s
                            });
                        default:
                            (0, es.assertNever)(l)
                    }
                    if ((0, x.isBlockedByOnboarding)(r, o)) return (0, a.jsx)(y.default, {
                        guildId: s,
                        channelId: l
                    });
                    if ((null == n ? void 0 : n.type) === ef.ChannelTypes.GUILD_STORE) {
                        let e = t.params.messageId;
                        return (0, a.jsx)(ei.default, {
                            channel: n,
                            inputSkuId: e
                        }, n.id)
                    }
                    return (0, a.jsx)(T.default, {})
                },
                em = s.memo(function() {
                    let {
                        guildId: e,
                        channelId: t
                    } = (0, X.default)(), n = (0, c.useStateFromStores)([en.default], () => null != t ? t : en.default.getChannelId(e));
                    return function() {
                        return window.location.pathname.startsWith(ef.Routes.GUILD_DISCOVERY)
                    }() ? (0, a.jsx)(R.default, {}) : null != e ? (0, a.jsx)(G.default, {
                        selectedChannelId: n,
                        guildId: e
                    }, e) : (0, a.jsx)(eu.default, {})
                });

            function eS(e) {
                let t = (0, X.default)(e => {
                    let {
                        guildId: t
                    } = e;
                    return t
                });
                return (0, a.jsx)(V.default, {
                    ...e,
                    guildId: t
                })
            }
            let eN = e => (0, a.jsx)(eT, {
                    ...e
                }),
                eA = e => {
                    let t = null != e && e.length > 0 && e.startsWith("?"),
                        n = t ? e.split("?")[1] : null;
                    return (0, a.jsx)(g.default, {
                        searchRoute: n
                    })
                },
                ep = e => {
                    let {
                        match: t
                    } = e;
                    return null != t.params.guildId ? (0, a.jsx)(M.default, {
                        guildId: t.params.guildId,
                        inviteCode: t.params.inviteCode
                    }) : null
                },
                eg = e => {
                    let {
                        match: t
                    } = e;
                    return null != t.params.guildId ? (0, a.jsx)(F.default, {
                        guildId: t.params.guildId,
                        inviteCode: t.params.inviteCode
                    }) : null
                },
                eR = () => (0, a.jsx)(ec.default, {}),
                eO = () => (0, a.jsx)(eE.default, {}),
                eL = function() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    return function(t) {
                        return (0, a.jsx)(S.default, {
                            isFullScreen: e,
                            ...t
                        })
                    }
                },
                eM = e => (0, a.jsx)(I.default, {
                    ...e
                }),
                ev = () => (0, a.jsx)(_.default, {}),
                eD = () => (0, a.jsx)(z.default, {}),
                ex = () => (0, a.jsx)(k.default, {}),
                eP = () => (0, a.jsx)(K.default, {}),
                ey = e => {
                    let {
                        match: t
                    } = e, n = t.params.feature;
                    switch (n) {
                        case "addFriends":
                            return (0, a.jsx)(z.default, {
                                initialSection: ef.FriendsSections.ADD_FRIEND
                            });
                        case "pendingFriends":
                            return (0, a.jsx)(z.default, {
                                initialSection: ef.FriendsSections.PENDING
                            });
                        case "sessionManagement":
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.SETTINGS("sessions")
                            });
                        case "connections":
                            return (0, a.jsx)(o.Redirect, {
                                to: {
                                    pathname: ef.Routes.SETTINGS("connections"),
                                    search: e.location.search
                                }
                            });
                        case "family-center":
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.FAMILY_CENTER
                            });
                        case "account-standing":
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.SETTINGS("privacy-and-safety", "account-standing")
                            });
                        default:
                            return (0, a.jsx)(o.Redirect, {
                                to: ef.Routes.ME
                            })
                    }
                };

            function eb(e) {
                let {
                    hasNotice: t,
                    sidebarTheme: n,
                    hideSidebar: s
                } = e;
                (0, E.useNullExperiment)(!0);
                let l = (0, c.useStateFromStores)([C.default], () => C.default.isFullscreenInContext()),
                    r = (0, q.useIsPremiumTutorialEnabled)("ChannelSidebar");
                return s ? null : (0, a.jsxs)("div", {
                    className: i(eC.sidebar, (0, el.getThemeClass)(n), {
                        [eC.hasNotice]: t,
                        [eC.fullWidth]: d.isMobile,
                        [eC.hidden]: l
                    }),
                    children: [(0, a.jsx)(em, {}), r && (0, a.jsx)(Q.default, {}), (0, a.jsxs)("section", {
                        className: eC.panels,
                        "aria-label": eh.default.Messages.ACCOUNT_A11Y_LABEL,
                        children: [(0, a.jsx)(Y.default, {}), (0, a.jsx)(ed.default, {
                            section: ef.AnalyticsSections.ACTIVITY_PANEL,
                            children: (0, a.jsx)(eS, {
                                className: eC.activityPanel
                            })
                        }), (0, a.jsx)(ed.default, {
                            section: ef.AnalyticsSections.RTC_CONNECTION_PANEL,
                            children: (0, a.jsx)(W.default, {})
                        }), (0, a.jsx)(ed.default, {
                            section: ef.AnalyticsSections.ACCOUNT_PANEL,
                            children: (0, a.jsx)(H.default, {})
                        })]
                    }), (0, a.jsx)(er.default, {})]
                })
            }

            function eU() {
                var e;
                let t = (0, c.useStateFromStores)([ea.default], () => ea.default.hasNotice()),
                    n = (0, c.useStateFromStores)([Z.default], () => Z.default.darkSidebar ? ef.ThemeTypes.DARK : void 0),
                    l = function() {
                        let [e, t] = s.useState(() => window.location.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION("")));
                        return s.useEffect(() => J.default.addRouteChangeListener(e => {
                            t(e.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION("")))
                        }), []), e
                    }(),
                    i = function() {
                        let [e, t] = s.useState(() => window.location.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")));
                        return s.useEffect(() => J.default.addRouteChangeListener(e => {
                            t(e.pathname.startsWith(ef.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")))
                        }), []), e
                    }(),
                    E = function() {
                        var e;
                        let t = (0, o.useLocation)();
                        return (null === (e = (0, r.matchPath)(t.pathname, ef.Routes.GUILD_BOOSTING_MARKETING(":guildId"))) || void 0 === e ? void 0 : e.isExact) === !0
                    }(),
                    _ = function() {
                        var e;
                        let t = (0, o.useLocation)();
                        return (null === (e = (0, r.matchPath)(t.pathname, ef.Routes.COLLECTIBLES_SHOP_FULLSCREEN)) || void 0 === e ? void 0 : e.isExact) === !0
                    }(),
                    I = (0, c.useStateFromStores)([w.default], () => w.default.getIsOpen()),
                    C = (0, o.useRouteMatch)([ef.Routes.CHANNEL(ef.ME, ":channelId"), ef.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?")]),
                    T = (null == C ? void 0 : null === (e = C.params) || void 0 === e ? void 0 : e.channelId) === e_.StaticChannelRoute.GUILD_ONBOARDING,
                    S = s.useCallback(() => B.default.openSidebar(), []);
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsxs)("div", {
                        className: eC.container,
                        children: [I && !_ && (0, a.jsx)(j.default, {
                            className: eC.guilds,
                            themeOverride: n
                        }), (0, a.jsx)(O.default.Provider, {
                            value: (null == C ? void 0 : C.params.guildId) === ef.ME ? void 0 : null == C ? void 0 : C.params.guildId,
                            children: (0, a.jsxs)("div", {
                                className: eC.base,
                                children: [d.isMobile ? null : (0, a.jsx)(eo.default, {}), (0, a.jsxs)("div", {
                                    className: eC.content,
                                    children: [(0, a.jsx)(m.default, {}), (0, a.jsx)(eb, {
                                        hasNotice: t,
                                        sidebarTheme: n,
                                        hideSidebar: l || i || E || _ || T || !I
                                    }), (0, a.jsx)(f.default.Provider, {
                                        value: S,
                                        children: (0, a.jsxs)(o.Switch, {
                                            children: [(0, a.jsx)(h.default, {
                                                path: ef.Routes.ACTIVITY,
                                                disableTrack: !0,
                                                children: (0, a.jsx)(o.Redirect, {
                                                    to: ef.Routes.ME
                                                })
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.ACTIVITIES_HAPPENING_NOW,
                                                render: ev,
                                                impressionName: u.ImpressionNames.ACTIVITIES
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.ACTIVITY_DETAILS(":applicationId"),
                                                render: eM,
                                                impressionName: u.ImpressionNames.ACTIVITY_DETAILS,
                                                impressionProperties: e => {
                                                    let {
                                                        computedMatch: t
                                                    } = e;
                                                    return {
                                                        application_id: t.params.applicationId
                                                    }
                                                }
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.ACTIVITIES,
                                                render: ev,
                                                impressionName: u.ImpressionNames.ACTIVITIES
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.APPLICATION_LIBRARY,
                                                render: eR,
                                                impressionName: u.ImpressionNames.APPLICATION_LIBRARY,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.APPLICATION_STORE,
                                                render: eO,
                                                impressionName: u.ImpressionNames.APPLICATION_STORE,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.COLLECTIBLES_SHOP_FULLSCREEN,
                                                render: eL(!0),
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.COLLECTIBLES_SHOP,
                                                render: eL(!1),
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(":skuId"),
                                                render: eL(!1),
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.MESSAGE_REQUESTS,
                                                render: ex,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.FAMILY_CENTER,
                                                render: eP,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.ME,
                                                exact: !0,
                                                render: eD,
                                                impressionName: u.ImpressionNames.FRIENDS,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: [ef.Routes.CHANNEL_THREAD_VIEW(":guildId", ":channelId", ":threadId", ":messageId?"), ef.Routes.CHANNEL(ef.ME, ":channelId"), ef.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?")],
                                                render: eN,
                                                impressionName: u.ImpressionNames.GUILD_CHANNEL,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.GUILD_DISCOVERY,
                                                render: e => {
                                                    let {
                                                        location: t
                                                    } = e;
                                                    return eA(t.search)
                                                },
                                                impressionName: u.ImpressionNames.GUILD_DISCOVERY,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.GUILD_MEMBER_VERIFICATION(":guildId", ":inviteCode?"),
                                                render: ep,
                                                impressionName: u.ImpressionNames.GUILD_MEMBER_VERIFICATION,
                                                disableTrack: !0
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(":guildId", ":inviteCode?"),
                                                render: eg,
                                                impressionName: u.ImpressionNames.HUB_EMAIL_SIGNUP,
                                                impressionProperties: e => {
                                                    let {
                                                        computedMatch: t
                                                    } = e;
                                                    return {
                                                        has_invite: void 0 !== t.params.inviteCode
                                                    }
                                                }
                                            }), (0, a.jsx)(h.default, {
                                                path: ef.Routes.FEATURE(":feature"),
                                                exact: !0,
                                                render: ey,
                                                disableTrack: !0
                                            })]
                                        })
                                    })]
                                })]
                            })
                        })]
                    })
                })
            }
        },
        315977: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("90915"),
                i = n("446674"),
                r = n("450911"),
                o = n("737960"),
                u = n("970366"),
                d = n("2105"),
                c = n("901582"),
                E = n("552894"),
                f = n("294135"),
                _ = n("49111"),
                I = n("128403");
            class h extends s.Component {
                componentDidMount() {
                    this.fetchStoreListing(), (0, u.trackAppUIViewed)("channel_store_listing")
                }
                render() {
                    return null != this.props.skuId ? (0, a.jsx)(c.default, {
                        page: _.AnalyticsPages.CHANNEL_STORE_LISTING,
                        root: !0,
                        children: (0, a.jsx)("div", {
                            className: I.applicationStore,
                            children: (0, a.jsx)(l.Route, {
                                path: "*",
                                render: this.renderApplicationListing
                            })
                        })
                    }) : null
                }
                constructor(...e) {
                    super(...e), this.fetchStoreListing = e => {
                        let {
                            channel: t,
                            inputSkuId: n
                        } = this.props;
                        return null != e ? r.default.fetchChannelStoreListing(t.id, e) : null != n ? r.default.fetchChannelStoreListing(t.id, n) : r.default.fetchChannelStoreListing(t.id)
                    }, this.renderApplicationListing = e => {
                        let {
                            location: t
                        } = e, {
                            channel: n,
                            skuId: s,
                            width: l
                        } = this.props;
                        return (0, a.jsx)(f.default, {
                            channel: n,
                            inputSkuId: s,
                            fetchStoreListing: this.fetchStoreListing,
                            location: t,
                            pageSize: (0, E.getPageSize)(l)
                        })
                    }
                }
            }
            var C = (0, o.default)(i.default.connectStores([d.default], e => {
                let {
                    channel: t,
                    inputSkuId: n
                } = e;
                return {
                    skuId: null != n ? n : d.default.getSkuIdForChannel(t.id)
                }
            })(h))
        },
        911120: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("95410"),
                u = n("77078"),
                d = n("489740"),
                c = n("355025"),
                E = n("945330"),
                f = n("50647"),
                _ = n("782340"),
                I = n("805244");
            let h = "isHideDevBanner";
            var C = () => {
                var e;
                let [t, n] = (0, s.useState)((null === (e = o.default.get(h, "false")) || void 0 === e ? void 0 : e.toString()) === "true"), l = (0, r.useStateFromStores)([d.default], () => {
                    var e;
                    return (0, c.probablyHasBuildOverride)() ? null === (e = d.default.getCurrentBuildOverride().overrides) || void 0 === e ? void 0 : e.discord_web : null
                });
                if (t) return null;
                let C = () => {
                        o.default.set(h, !0), n(!0)
                    },
                    T = () => (0, a.jsx)(u.Clickable, {
                        onClick: C,
                        className: I.closeButton,
                        "aria-label": _.default.Messages.DISMISS,
                        children: (0, a.jsx)(E.default, {
                            className: I.closeIcon
                        })
                    });
                if (null != l) return (0, a.jsxs)("div", {
                    className: i(I.devBanner, I.buildOverride),
                    children: [(0, a.jsx)(f.default, {
                        className: I.icon
                    }), _.default.Messages.BUILD_OVERRIDE, (0, a.jsx)(T, {})]
                });
                let m = window.GLOBAL_ENV.RELEASE_CHANNEL;
                return "staging" === m ? (0, a.jsxs)("div", {
                    className: i(I.devBanner, I.staging),
                    children: [(0, a.jsx)(f.default, {
                        className: I.icon
                    }), _.default.Messages.DEV_NOTICE_STAGING.format({
                        buildNumber: "242711"
                    }), (0, a.jsx)(T, {})]
                }) : null
            }
        },
        32296: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NotchBackground: function() {
                    return _.NotchBackground
                },
                default: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("773364"),
                u = n("862337"),
                d = n("77078"),
                c = n("629109"),
                E = n("42887"),
                f = n("945956"),
                _ = n("230962"),
                I = n("599110"),
                h = n("49111"),
                C = n("782340"),
                T = n("626009");
            class m extends s.PureComponent {
                componentDidMount() {
                    this._initTimeout.start(1e3, this.setupVoiceActivity)
                }
                componentWillUnmount() {
                    this._initTimeout.stop(), this._silenceTimeout.stop(), this._micTestStop(), E.default.getMediaEngine().removeListener(o.MediaEngineEvent.VoiceActivity, this.handleVoiceActivity)
                }
                _micTestStart() {
                    let {
                        isVoiceConnected: e,
                        inputDeviceName: t,
                        inputVolume: n,
                        outputDeviceName: a,
                        outputVolume: s,
                        inputMode: l,
                        vadAutoThreshold: i,
                        vadThreshold: r,
                        location: o,
                        isDeafened: u
                    } = this.props, d = !1;
                    e && !u && (c.default.toggleSelfDeaf(), d = !0), c.default.setLoopback(!0), this._micTestStartTime = Date.now(), this.setState({
                        isMicTesting: !0,
                        isDetectingInput: !0,
                        didDeafenUser: d
                    }), I.default.track(h.AnalyticEvents.MIC_TESTING_STARTED, {
                        input_device_name: t,
                        input_device_volume: n,
                        output_device_name: a,
                        output_device_volume: s,
                        input_mode: l,
                        input_sensitivity_is_automatic: i,
                        input_sensitivity_threshold: Math.round(r),
                        location: o
                    })
                }
                _micTestStop() {
                    let {
                        didDeafenUser: e,
                        isMicTesting: t
                    } = this.state, {
                        isVoiceConnected: n,
                        isDeafened: a
                    } = this.props;
                    if (!!t) n && a && e && c.default.toggleSelfDeaf(), c.default.setLoopback(!1), this.setState({
                        isMicTesting: !1,
                        didDeafenUser: !1
                    }), null != this._micTestStartTime && I.default.track(h.AnalyticEvents.MIC_TESTING_STOPPED, {
                        testing_duration: Math.round((Date.now() - this._micTestStartTime) / 1e3)
                    })
                }
                renderCaption() {
                    let {
                        captionVoice: e,
                        captionNoVoice: t
                    } = this.props, {
                        isMicTesting: n,
                        isDetectingInput: s
                    } = this.state;
                    return (0, a.jsx)(d.FormText, {
                        className: T.micTestCaption,
                        type: d.FormText.Types.DESCRIPTION,
                        children: n ? s ? e : t : null
                    })
                }
                render() {
                    let {
                        isVoiceConnected: e,
                        title: t,
                        description: n,
                        notchBackground: s,
                        buttonTest: l,
                        buttonStop: i,
                        buttonClassName: r,
                        buttonColor: o,
                        isDeafened: u
                    } = this.props, {
                        isMicTesting: c,
                        volume: E
                    } = this.state, f = e && !c ? C.default.Messages.MIC_TEST_VOICE_CHANNEL_WARNING : null;
                    return c && e && !u && this._micTestStop(), (0, a.jsxs)("div", {
                        className: T.container,
                        children: [(0, a.jsx)(d.FormTitle, {
                            tag: d.FormTitleTags.H5,
                            className: T.title,
                            children: t
                        }), null != n && (0, a.jsx)(d.FormText, {
                            type: d.FormText.Types.DESCRIPTION,
                            className: T.description,
                            children: n
                        }), (0, a.jsxs)("div", {
                            className: T.micTest,
                            children: [(0, a.jsx)(d.Tooltip, {
                                text: f,
                                children: e => {
                                    let {
                                        onMouseEnter: t,
                                        onMouseLeave: n
                                    } = e;
                                    return (0, a.jsx)(d.Button, {
                                        grow: !1,
                                        onClick: this.handleToggleMicTest,
                                        onMouseEnter: t,
                                        onMouseLeave: n,
                                        size: d.Button.Sizes.SMALL,
                                        className: r,
                                        color: o,
                                        children: c ? i : l
                                    })
                                }
                            }), (0, a.jsx)(_.default, {
                                progress: c ? E + 100 : 0,
                                notchBackground: s
                            }), this.renderCaption()]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this._initTimeout = new u.Timeout, this._silenceTimeout = new u.Timeout, this._messageTimeout = new u.Timeout, this.state = {
                        volume: -100,
                        isMicTesting: !1,
                        isDetectingInput: !0,
                        didDeafenUser: !1
                    }, this.setupVoiceActivity = () => {
                        E.default.getMediaEngine().on(o.MediaEngineEvent.VoiceActivity, this.handleVoiceActivity)
                    }, this.handleVoiceActivity = e => {
                        let {
                            isMicTesting: t
                        } = this.state;
                        if (t && e <= -100) {
                            !this._silenceTimeout.isStarted() && this._silenceTimeout.start(2e3, () => {
                                this.setState({
                                    isDetectingInput: !1
                                })
                            }), this.setState({
                                volume: -100
                            });
                            return
                        }
                        this._silenceTimeout.stop(), this.setState({
                            volume: e,
                            isDetectingInput: !0
                        })
                    }, this.handleToggleMicTest = () => {
                        this.state.isMicTesting ? this._micTestStop() : this._micTestStart()
                    }
                }
            }
            var S = r.default.connectStores([f.default, E.default], () => {
                let e = E.default.getInputDeviceId(),
                    t = E.default.getInputDevices(),
                    n = i.find(t, t => {
                        let {
                            id: n
                        } = t;
                        return n === e
                    }),
                    a = E.default.getOutputDeviceId(),
                    s = E.default.getOutputDevices(),
                    l = i.find(s, e => {
                        let {
                            id: t
                        } = e;
                        return t === a
                    }),
                    r = E.default.getModeOptions();
                return {
                    isVoiceConnected: f.default.isConnected(),
                    inputVolume: E.default.getInputVolume(),
                    outputVolume: E.default.getOutputVolume(),
                    inputMode: E.default.getMode(),
                    vadThreshold: r.threshold,
                    isDeafened: E.default.isSelfDeaf(),
                    vadAutoThreshold: r.autoThreshold,
                    inputDeviceName: null != n ? n.name : "",
                    outputDeviceName: null != l ? l.name : ""
                }
            })(m)
        },
        455555: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eN
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("866227"),
                i = n.n(l),
                r = n("90915"),
                o = n("446674"),
                u = n("77078"),
                d = n("404118"),
                c = n("437822"),
                E = n("778323"),
                f = n("54239"),
                _ = n("215082"),
                I = n("950926"),
                h = n("987317"),
                C = n("167359"),
                T = n("55620"),
                m = n("52289"),
                S = n("518888"),
                N = n("70614"),
                A = n("79112"),
                p = n("376556"),
                g = n("812204"),
                R = n("685665"),
                O = n("774146"),
                L = n("10641"),
                M = n("935246"),
                v = n("211470"),
                D = n("789563"),
                x = n("381065"),
                P = n("702873"),
                y = n("840968"),
                b = n("233322"),
                U = n("157186"),
                G = n("747554"),
                j = n("740316"),
                F = n("592407"),
                k = n("977169"),
                B = n("363691"),
                w = n("649844"),
                H = n("983424"),
                V = n("538620"),
                Y = n("425538"),
                W = n("703537"),
                K = n("55282"),
                z = n("42203"),
                q = n("546463"),
                Q = n("305961"),
                X = n("42887"),
                J = n("945956"),
                Z = n("162771"),
                $ = n("697218"),
                ee = n("552712"),
                et = n("167726"),
                en = n("600133"),
                ea = n("145131"),
                es = n("216422"),
                el = n("489622"),
                ei = n("599110"),
                er = n("701909"),
                eo = n("308757"),
                eu = n("389696"),
                ed = n("650044"),
                ec = n("49111"),
                eE = n("646718"),
                ef = n("586269"),
                e_ = n("353927"),
                eI = n("782340"),
                eh = n("185401");
            let eC = () => (0, a.jsxs)(el.default, {
                    color: el.NoticeColors.DANGER,
                    children: [(0, a.jsx)(el.NoticeCloseButton, {
                        onClick: () => {
                            em(), (0, ed.open)()
                        }
                    }), eI.default.Messages.NOTICE_NO_INPUT_DETECTED, (0, a.jsx)(el.NoticeButtonAnchor, {
                        href: er.default.getArticleURL(ec.HelpdeskArticles.NO_INPUT_DETECTED),
                        children: eI.default.Messages.NOTICE_NO_INPUT_DETECTED_HELP_LINK_TEXT
                    })]
                }),
                eT = () => (0, a.jsxs)(el.default, {
                    color: el.NoticeColors.DANGER,
                    children: [(0, a.jsx)(el.NoticeCloseButton, {
                        onClick: () => {
                            em(), (0, ed.open)()
                        }
                    }), eI.default.Messages.NOTICE_NO_INPUT_DETECTED_SETTINGS, (0, a.jsx)(el.NoticeButton, {
                        onClick: () => {
                            (0, f.pushLayer)(ec.Layers.USER_SETTINGS), A.default.setSection(ec.UserSettingsSections.VOICE)
                        },
                        children: eI.default.Messages.NOTICE_NO_INPUT_DETECTED_SETTINGS_LINK_TEXT
                    })]
                });

            function em(e) {
                _.default.dismiss(null != e ? {
                    untilAtLeast: i(e)
                } : void 0)
            }
            let eS = s.memo(function() {
                var e, t, l;
                let _ = (0, o.useStateFromStores)([$.default], () => $.default.getCurrentUser()),
                    g = (0, o.useStateFromStores)([Z.default], () => Z.default.getGuildId()),
                    ed = (0, o.useStateFromStores)([en.default], () => en.default.getNotice()),
                    eS = (0, o.useStateFromStores)([Q.default], () => Q.default.getGuild(g)),
                    {
                        analyticsLocations: eN
                    } = (0, R.default)(),
                    eA = null == ed ? void 0 : ed.type,
                    ep = (0, U.useShowMemberVerificationGate)(g);
                s.useEffect(() => {
                    null != eA && ! function(e, t) {
                        let n = {
                            notice_type: e
                        };
                        null != t && (n.guild_id = t), ei.default.track(ec.AnalyticEvents.APP_NOTICE_VIEWED, n)
                    }(eA, g)
                }, [eA, g]), s.useEffect(() => {
                    if (null != ed && ed.type === ec.NoticeTypes.SURVEY && null != ed.metadata) {
                        let {
                            metadata: e
                        } = ed, t = D.default.getUserExperimentDescriptor(e.id);
                        null != t && (0, v.trackExposureToExperiment)(e.id, t)
                    }
                }, [ed]);
                let eg = function(e) {
                    let {
                        enabled: t
                    } = (0, H.default)(!0, e !== ec.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING);
                    return t || null == e ? null : en.typeToDismissibleContent[e]
                }(eA);
                if (null == ed) return null;
                if (null != eg) return (0, a.jsx)(M.DismissibleContentNotices, {
                    dismissibleContent: eg,
                    noticeType: ed.type
                });
                let eR = null === (e = ed.metadata) || void 0 === e ? void 0 : e.premiumType;
                switch (ed.type) {
                    case ec.NoticeTypes.LURKING_GUILD:
                        return (0, a.jsx)(B.default, {});
                    case ec.NoticeTypes.PENDING_MEMBER:
                        return (0, a.jsx)(G.default, {});
                    case ec.NoticeTypes.INVITED_TO_SPEAK:
                        return (0, a.jsx)(K.default, {});
                    case ec.NoticeTypes.GUILD_RAID_NOTIFICATION:
                        let {
                            dismissUntil: eO
                        } = ed.metadata;
                        return (0, a.jsx)(x.default, {
                            onDismiss: () => em(eO)
                        });
                    case ec.NoticeTypes.WIN32_DEPRECATED_MESSAGE:
                        let {
                            dismissUntil: eL
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(eL),
                                noticeType: ec.NoticeTypes.WIN32_DEPRECATED_MESSAGE
                            }), eI.default.Messages.WINDOWS_32_BIT_DEPRECATED_WARNING.format({
                                helpCenterLink: er.default.getArticleURL(ec.HelpdeskArticles.WIN32_DEPRECATE)
                            })]
                        });
                    case ec.NoticeTypes.GENERIC:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.GENERIC
                            }), ed.message, null != ed.buttonText ? (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: ed.callback,
                                noticeType: ec.NoticeTypes.GENERIC,
                                children: ed.buttonText
                            }) : null]
                        });
                    case ec.NoticeTypes.LAUNCH_GAME_FAILURE:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.LAUNCH_GAME_FAILURE
                            }), ed.message, null != ed.buttonText ? (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: ed.callback,
                                noticeType: ec.NoticeTypes.LAUNCH_GAME_FAILURE,
                                children: ed.buttonText
                            }) : null]
                        });
                    case ec.NoticeTypes.VOICE_DISABLED:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => {
                                    I.default.clearRemoteDisconnectVoiceChannelId(), em()
                                },
                                noticeType: ec.NoticeTypes.VOICE_DISABLED
                            }), eI.default.Messages.NOTICE_CONNECTION_CONFLICT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: () => {
                                    let e = J.default.getRemoteDisconnectVoiceChannelId();
                                    if (null != e) {
                                        let t = z.default.getChannel(e);
                                        null != t && h.default.selectVoiceChannel(e)
                                    }
                                },
                                noticeType: ec.NoticeTypes.VOICE_DISABLED,
                                children: eI.default.Messages.RECONNECT
                            })]
                        });
                    case ec.NoticeTypes.SPOTIFY_AUTO_PAUSED:
                        let eM = p.default.get(ec.PlatformTypes.SPOTIFY);
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.SPOTIFY_AUTO_PAUSED
                            }), (0, a.jsx)("img", {
                                alt: "",
                                className: eh.platformIcon,
                                src: eM.icon.whiteSVG
                            }), eI.default.Messages.NOTICE_SPOTIFY_AUTO_PAUSED, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: () => A.default.open(ec.UserSettingsSections.VOICE),
                                noticeType: ec.NoticeTypes.SPOTIFY_AUTO_PAUSED,
                                children: eI.default.Messages.VOICE_SETTINGS
                            }), (0, a.jsx)(u.Anchor, {
                                className: eh.textLinkSmall,
                                href: er.default.getArticleURL(ec.HelpdeskArticles.SPOTIFY_AUTO_PAUSED),
                                target: "_blank",
                                children: eI.default.Messages.NOTICE_WHATS_THIS
                            })]
                        });
                    case ec.NoticeTypes.UNCLAIMED_ACCOUNT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [eI.default.Messages.NOTICE_UNCLAIMED_ACCOUNT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.UNCLAIMED_ACCOUNT,
                                onClick: () => ep && null != g ? (0, b.openMemberVerificationModal)(g) : O.openClaimAccountModal(),
                                children: eI.default.Messages.CLAIM_ACCOUNT
                            })]
                        });
                    case ec.NoticeTypes.UNVERIFIED_ACCOUNT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [eI.default.Messages.NOTICE_UNVERIFIED_ACCOUNT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.UNVERIFIED_ACCOUNT,
                                onClick: () => {
                                    c.default.verifyResend(), d.default.show({
                                        title: eI.default.Messages.VERIFICATION_EMAIL_TITLE,
                                        body: eI.default.Messages.VERIFICATION_EMAIL_BODY.format({
                                            email: null == _ ? void 0 : _.email
                                        }),
                                        secondaryConfirmText: eI.default.Messages.CHANGE_EMAIL,
                                        onConfirmSecondary: O.openClaimAccountModal
                                    })
                                },
                                children: eI.default.Messages.RESEND
                            })]
                        });
                    case ec.NoticeTypes.SCHEDULED_MAINTENANCE:
                        if (null == ed.metadata) return null;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => C.default.ackScheduledMaintenance(),
                                noticeType: ec.NoticeTypes.SCHEDULED_MAINTENANCE
                            }), eI.default.Messages.NOTICE_SCHEDULED_MAINTENANCE.format(ed.metadata), (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: "".concat(ec.Links.STATUS, "/incidents/").concat(ed.metadata.id),
                                children: eI.default.Messages.LEARN_MORE
                            })]
                        });
                    case ec.NoticeTypes.NO_INPUT_DETECTED:
                        if (!X.default.supports(e_.Features.LOOPBACK)) return (0, a.jsx)(eC, {});
                        return (0, a.jsx)(eT, {});
                    case ec.NoticeTypes.HARDWARE_MUTE:
                        if (null == ed.metadata) return null;
                        let {
                            vendor: ev, model: eD
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [eI.default.Messages.NOTICE_HARDWARE_MUTE.format({
                                vendorName: ev.name,
                                modelName: eD.name
                            }), (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: eD.url,
                                target: "_blank",
                                rel: "noreferrer noopener",
                                children: eI.default.Messages.SUPPORT
                            })]
                        });
                    case ec.NoticeTypes.STREAMER_MODE:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.STREAMER_MODE,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.STREAMER_MODE
                            }), eI.default.Messages.NOTICE_STREAMER_MODE_TEXT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: () => m.default.setEnabled(!1),
                                noticeType: ec.NoticeTypes.STREAMER_MODE,
                                children: eI.default.Messages.DISABLE
                            })]
                        });
                    case ec.NoticeTypes.H264_DISABLED:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => {
                                    em()
                                }
                            }), eI.default.Messages.NOTICE_H264_DISABLED_SETTINGS, (0, a.jsx)(el.NoticeButton, {
                                onClick: () => {
                                    (0, f.pushLayer)(ec.Layers.USER_SETTINGS), A.default.setSection(ec.UserSettingsSections.VOICE)
                                },
                                children: eI.default.Messages.NOTICE_H264_DISABLED_SETTINGS_LINK_TEXT
                            })]
                        });
                    case ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK:
                        if (null == ed.metadata) return null;
                        let {
                            skuId: ex, applicationId: eP
                        } = ed.metadata, ey = ee.default.get(ex), eb = q.default.getGame(eP);
                        if (null == ey || null == eb) return null;
                        let eU = {
                            page: ec.AnalyticsPages.IN_APP
                        };
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.PREMIUM_TIER_1,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => E.dismiss(ey.id),
                                noticeType: ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eI.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_PREMIUM_PERK_MESSAGE.format({
                                applicationName: eb.name,
                                skuName: ey.name
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK,
                                onClick: () => (0, eo.openIAPPurchaseModal)({
                                    applicationId: eb.id,
                                    skuId: ey.id,
                                    openPremiumPaymentModal: () => {
                                        (0, w.default)({
                                            initialPlanId: null,
                                            subscriptionTier: eE.PremiumSubscriptionSKUs.TIER_2,
                                            analyticsLocations: eN,
                                            analyticsObject: eU
                                        })
                                    },
                                    analyticsLocations: eN,
                                    analyticsLocation: eU,
                                    context: __OVERLAY__ ? ec.AppContext.OVERLAY : ec.AppContext.APP
                                }).then(() => E.dismiss(ey.id)),
                                children: eI.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_PREMIUM_PERK_BUTTON
                            })]
                        });
                    case ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL: {
                        if (null == ed.metadata) return null;
                        let {
                            skuId: e,
                            applicationId: t
                        } = ed.metadata, n = ee.default.get(e), s = q.default.getGame(t);
                        if (null == n || null == s) return null;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.PREMIUM_TIER_1,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eI.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_NO_PREMIUM_PERK_MESSAGE.format({
                                applicationName: s.name,
                                skuName: n.name
                            }), (0, a.jsx)(el.NoticeButton, {
                                children: (0, a.jsx)(r.Link, {
                                    onClick: () => em(),
                                    to: {
                                        pathname: ec.Routes.APPLICATION_STORE_LISTING_SKU(n.id),
                                        state: {
                                            scrollRestoration: !1
                                        }
                                    },
                                    children: eI.default.Messages.LEARN_MORE
                                })
                            })]
                        })
                    }
                    case ec.NoticeTypes.SURVEY: {
                        let e = ed.metadata;
                        if (null == e) return null;
                        let {
                            key: t,
                            prompt: n,
                            cta: s,
                            url: l
                        } = e;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.CUSTOM,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.SURVEY,
                                onClick: () => {
                                    (0, S.surveyHide)(t, !0)
                                }
                            }), n, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.SURVEY,
                                onClick: () => {
                                    window.open(l, "_blank"), (0, S.surveyHide)(t, !1)
                                },
                                children: s
                            })]
                        })
                    }
                    case ec.NoticeTypes.SERVER_USAGE_SURVEY:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.CUSTOM,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.SERVER_USAGE_SURVEY,
                                onClick: () => {
                                    em()
                                }
                            }), eI.default.Messages.SERVER_USAGE_SURVEY_BODY.format({
                                guildName: null !== (t = null == eS ? void 0 : eS.name) && void 0 !== t ? t : "this server"
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.SERVER_USAGE_SURVEY,
                                onClick: () => {
                                    window.open("https://discord.sjc1.qualtrics.com/jfe/form/SV_9AHPmGasQ0EvpdQ?user_id=".concat(null == _ ? void 0 : _.id, "&guild_id=").concat(null == eS ? void 0 : eS.id), "_blank"), em()
                                },
                                additionalTrackingProps: {
                                    guild_id: null == eS ? void 0 : eS.id
                                },
                                children: eI.default.Messages.SERVER_USAGE_SURVEY_CTA
                            })]
                        });
                    case ec.NoticeTypes.CORRUPT_INSTALLATION:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [eI.default.Messages.NOTICE_CORRUPT_INSTALLATION, (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: er.default.getArticleURL(ec.HelpdeskArticles.CORRUPT_INSTALLATION),
                                target: "_blank",
                                children: eI.default.Messages.NOTICE_CORRUPT_INSTALLATION_HELP_LINK_TEXT
                            })]
                        });
                    case ec.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER
                            }), eI.default.Messages.VIDEO_UNSUPPORTED_BROWSER_BODY, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER,
                                onClick: () => {
                                    (0, u.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("649486").then(n.bind(n, "649486"));
                                        return t => (0, a.jsx)(e, {
                                            source: "Video unsupported browser",
                                            ...t
                                        })
                                    })
                                },
                                children: eI.default.Messages.DOWNLOAD
                            })]
                        });
                    case ec.NoticeTypes.DISPATCH_ERROR:
                        if (null == ed.metadata) return null;
                        let {
                            error: eG
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.DISPATCH_ERROR
                            }), null == eG ? void 0 : eG.displayMessage, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.DISPATCH_ERROR,
                                onClick: () => (0, u.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("563912").then(n.bind(n, "563912"));
                                    return t => (0, a.jsx)(e, {
                                        ...t
                                    })
                                }),
                                children: eI.default.Messages.LEARN_MORE
                            })]
                        });
                    case ec.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS:
                        if (null == ed.metadata) return null;
                        let {
                            progress: ej, total: eF, name: ek
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS
                            }), (0, a.jsxs)(ea.default, {
                                justify: ea.default.Justify.CENTER,
                                children: [null != ek ? eI.default.Messages.NOTICE_DISPATCH_INSTALL_SCRIPT_PROGRESS_WITH_NAME.format({
                                    name: "".concat(ek),
                                    progress: "".concat(ej),
                                    total: "".concat(eF)
                                }) : eI.default.Messages.NOTICE_DISPATCH_INSTALL_SCRIPT_PROGRESS.format({
                                    progress: "".concat(ej),
                                    total: "".concat(eF)
                                }), (0, a.jsx)(u.Spinner, {
                                    type: u.Spinner.Type.PULSING_ELLIPSIS,
                                    className: eh.ellipsis
                                })]
                            })]
                        });
                    case ec.NoticeTypes.APPLICATION_TEST_MODE:
                        if (null == ed.metadata) return null;
                        if (null != et.default.testModeEmbeddedApplicationId) return (0, a.jsx)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: (0, a.jsxs)(ea.default, {
                                justify: ea.default.Justify.CENTER,
                                align: ea.default.Align.CENTER,
                                children: [(0, a.jsx)("div", {
                                    children: eI.default.Messages.NOTICE_EMBEDDED_APPLICATION_TEST_MODE.format({
                                        applicationName: ed.metadata.applicationName
                                    })
                                }), (0, a.jsx)(el.NoticeCloseButton, {
                                    onClick: N.reset,
                                    noticeType: ec.NoticeTypes.APPLICATION_TEST_MODE
                                })]
                            })
                        });
                        return (0, a.jsx)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: (0, a.jsxs)(ea.default, {
                                justify: ea.default.Justify.CENTER,
                                align: ea.default.Align.CENTER,
                                children: [(0, a.jsx)("div", {
                                    children: eI.default.Messages.NOTICE_APPLICATION_TEST_MODE.format({
                                        applicationName: ed.metadata.applicationName
                                    })
                                }), (0, a.jsx)(eu.default, {
                                    dropdownSize: eu.TestModeSKUButtonEnums.DropdownSizes.SMALL,
                                    className: eh.testModeSKUSelector,
                                    color: eu.TestModeSKUButtonEnums.Colors.WHITE,
                                    look: eu.TestModeSKUButtonEnums.Looks.OUTLINED,
                                    size: eu.TestModeSKUButtonEnums.Sizes.MIN,
                                    onSKUSelect: e => T.goToSKUStoreListing(e.id, {
                                        analyticsSource: {
                                            page: null,
                                            section: ec.AnalyticsSections.NOTIFICATION_BAR,
                                            object: ec.AnalyticsObjects.NAVIGATION_LINK
                                        }
                                    }),
                                    applicationId: ed.metadata.applicationId,
                                    children: eI.default.Messages.NOTICE_APPLICATION_TEST_MODE_GO_TO_LISTING
                                }), (0, a.jsx)(el.NoticeCloseButton, {
                                    onClick: N.reset,
                                    noticeType: ec.NoticeTypes.APPLICATION_TEST_MODE
                                })]
                            })
                        });
                    case ec.NoticeTypes.OUTBOUND_PROMOTION:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.PREMIUM_TIER_2,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.OUTBOUND_PROMOTION,
                                onClick: () => {
                                    V.default.dismissOutboundPromotionNotice()
                                }
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eI.default.Messages.OUTBOUND_PROMOTION_NOTICE, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.OUTBOUND_PROMOTION,
                                onClick: () => {
                                    ei.default.track(ec.AnalyticEvents.OUTBOUND_PROMOTION_NOTICE_CLICKED), A.default.open(ec.UserSettingsSections.INVENTORY), V.default.dismissOutboundPromotionNotice()
                                },
                                children: eI.default.Messages.TAKE_ME_THERE
                            })]
                        });
                    case ec.NoticeTypes.VIEWING_ROLES:
                        return (0, a.jsx)(k.default, {});
                    case ec.NoticeTypes.PREMIUM_UNCANCEL:
                        return (0, a.jsxs)(el.default, {
                            color: eR === eE.PremiumTypes.TIER_1 ? el.NoticeColors.PREMIUM_TIER_1 : eR === eE.PremiumTypes.TIER_0 ? el.NoticeColors.PREMIUM_TIER_0 : el.NoticeColors.PREMIUM_TIER_2,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_UNCANCEL,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eR === eE.PremiumTypes.TIER_1 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_1_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eR === eE.PremiumTypes.TIER_0 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_0_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_UNCANCEL,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), (0, u.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("67323").then(n.bind(n, "67323"));
                                        return t => (0, a.jsx)(e, {
                                            ...t,
                                            daysLeft: ed.metadata.daysLeft,
                                            premiumType: eR,
                                            analyticsSource: "Nag Bar",
                                            premiumSubscription: ed.metadata.premiumSubscription
                                        })
                                    })
                                },
                                children: eR === eE.PremiumTypes.TIER_1 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_1_NOTICE_BUTTON_TEXT : eR === eE.PremiumTypes.TIER_0 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_0_NOTICE_BUTTON_TEXT : eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT:
                        let {
                            daysPastDue: eB, dismissUntil: ew
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: eA,
                                onClick: () => {
                                    em(ew)
                                }
                            }), eI.default.Messages.PREMIUM_SUBSCRIPTION_ONE_TIME_PAYMENT_PAST_DUE_SUBSCRIPTION_TEXT_NO_ACTION.format({
                                daysPastDue: eB
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT,
                                onClick: () => {
                                    em(ew), A.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eI.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_RENEW_NOW_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), eI.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_INVALID_PAYMENT_NOTICE_TEXT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), A.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eI.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_INVALID_PAYMENT_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), eI.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_MISSING_PAYMENT_NOTICE_TEXT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), A.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eI.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_MISSING_PAYMENT_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_MISSING_PAYMENT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), eR === eE.PremiumTypes.TIER_1 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_1_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eR === eE.PremiumTypes.TIER_0 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_0_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    em(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), A.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eR === eE.PremiumTypes.TIER_1 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_1_NOTICE_BUTTON_TEXT : eR === eE.PremiumTypes.TIER_0 ? eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_0_NOTICE_BUTTON_TEXT : eI.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.BACK_TO_PREVIOUS_SCREEN:
                        return (0, a.jsx)(j.BackToPreviousScreenNotice, {
                            buttonText: null !== (l = ed.buttonText) && void 0 !== l ? l : eI.default.Messages.GO_BACK,
                            onGoBack: ed.callback,
                            onDismiss: () => em(),
                            showCloseButton: !0
                        });
                    case ec.NoticeTypes.AUTOMOD_QUARANTINED_USER_PROFILE: {
                        let e = {
                            page: ec.AnalyticsPages.IN_APP
                        };
                        return (0, a.jsx)(y.default, {
                            guildId: g,
                            analyticsLocations: eN,
                            analyticsLocation: e
                        })
                    }
                    case ec.NoticeTypes.QUARANTINED:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.CUSTOM,
                            className: eh.quarantineNotice,
                            children: [eI.default.Messages.LIMITED_ACCESS_NAG_BAR_NOTICE, (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: ef.QUARANTINE_APPEAL_LINK,
                                target: "_blank",
                                children: eI.default.Messages.LIMITED_ACCESS_NAG_BAR_APPEAL
                            }), (0, a.jsx)(u.Anchor, {
                                href: er.default.getArticleURL(ec.HelpdeskArticles.QUARANTINE),
                                target: "_blank",
                                className: eh.quarantineLearnMoreLink,
                                children: eI.default.Messages.LEARN_MORE
                            })]
                        });
                    case ec.NoticeTypes.BLOCKED_BY_PROXY:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [eI.default.Messages.BLOCKED_BY_PROXY_NOTICE, (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: "".concat(ec.Links.STATUS),
                                children: eI.default.Messages.LEARN_MORE
                            }), (0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => em(),
                                noticeType: ec.NoticeTypes.BLOCKED_BY_PROXY
                            })]
                        });
                    case ec.NoticeTypes.DROPS_PROGRESS_INTERRUPTION:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [eI.default.Messages.DROPS_PROGRESS_INTERRUPTION_WARNING.format({
                                gameTitle: ed.metadata.gameTitle
                            }), (0, a.jsx)(el.NoticeButton, {
                                onClick: ed.metadata.reloadCallback,
                                children: eI.default.Messages.ERRORS_RESTART_APP
                            })]
                        });
                    case ec.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION:
                        let {
                            dismissUntil: eH, decisionId: eV
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION,
                                onClick: () => {
                                    null != g && (0, P.clearMentionRaidDetected)(g), em(eH)
                                }
                            }), eI.default.Messages.GUILD_AUTOMOD_MENTION_SPAM_NOTICE_MESSAGE, (0, a.jsx)(el.NoticeButton, {
                                onClick: () => {
                                    null != g && (0, P.removeMentionRaidRestrictionWithFeedback)(g, eV, () => {
                                        em(eH), (0, P.clearMentionRaidDetected)(g)
                                    })
                                },
                                children: eI.default.Messages.GUILD_AUTOMOD_MENTION_SPAM_NOTICE_REMOVE_RESTRICTION
                            }), null != g ? (0, a.jsx)(el.NoticeButton, {
                                onClick: () => F.default.open(g, ec.GuildSettingsSections.GUILD_AUTOMOD, void 0, ec.GuildSettingsSubsections.AUTOMOD_MENTION_SPAM),
                                children: eI.default.Messages.GUILD_AUTOMOD_MENTION_SPAM_NOTICE_CONFIGURE_SETTINGS
                            }) : null]
                        });
                    case ec.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.BRAND,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR,
                                onClick: () => {
                                    W.markNoticeDismissed(), em()
                                }
                            }), eI.default.Messages.SAFETY_USER_SENTIMENT_NOTICE, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR,
                                onClick: () => {
                                    (0, u.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("123592").then(n.bind(n, "123592"));
                                        return t => (0, a.jsx)(e, {
                                            ...t
                                        })
                                    }), W.markNoticeDismissed(), em()
                                },
                                children: eI.default.Messages.SAFETY_USER_SENTIMENT_NOTICE_CTA
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING:
                        let eY = i().add(5, "days").toDate();
                        return (0, a.jsx)(Y.default, {
                            dismissCurrentNotice: () => {
                                (0, L.markDismissibleContentAsDismissed)(en.typeToDismissibleContent[ec.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING]), em(eY)
                            },
                            subscriptionTier: eE.PremiumSubscriptionSKUs.TIER_2
                        });
                    default:
                        return null
                }
            });

            function eN() {
                let {
                    AnalyticsLocationProvider: e
                } = (0, R.default)(g.default.NOTICE);
                return (0, a.jsx)(e, {
                    children: (0, a.jsx)(eS, {})
                })
            }
        },
        229644: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ev
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("16470"),
                o = n("974667"),
                u = n("394846"),
                d = n("446674"),
                c = n("151426"),
                E = n("551042"),
                f = n("77078"),
                _ = n("450911"),
                I = n("955153"),
                h = n("503525"),
                C = n("812204"),
                T = n("716241"),
                m = n("685665"),
                S = n("9759"),
                N = n("754493"),
                A = n("813531"),
                p = n("21526"),
                g = n("45062"),
                R = n("833514"),
                O = n("20606"),
                L = n("509802"),
                M = n("785770"),
                v = n("260488"),
                D = n("639547"),
                x = n("775032"),
                P = n("25132"),
                y = n("154889"),
                b = n("917247"),
                U = n("801388"),
                G = n("770469"),
                j = n("641078"),
                F = n("773367"),
                k = n("266782"),
                B = n("367226"),
                w = n("104589"),
                H = n("393027"),
                V = n("12896"),
                Y = n("161778"),
                W = n("845579"),
                K = n("686470"),
                z = n("27618"),
                q = n("697218"),
                Q = n("160299"),
                X = n("521012"),
                J = n("791823"),
                Z = n("552712"),
                $ = n("330338"),
                ee = n("311450"),
                et = n("743826"),
                en = n("774223"),
                ea = n("880013"),
                es = n("556081"),
                el = n("216422"),
                ei = n("155207"),
                er = n("564875"),
                eo = n("956089"),
                eu = n("719923"),
                ed = n("882941"),
                ec = n("570687"),
                eE = n("631316"),
                ef = n("524110"),
                e_ = n("49111"),
                eI = n("782340"),
                eh = n("592265");
            let eC = e => {
                    let {
                        selected: t,
                        ...n
                    } = e, s = (0, o.useListItem)("friends"), l = (0, d.useStateFromStores)([z.default], () => z.default.getPendingCount()), i = (0, A.default)(), {
                        canViewBroadcasts: r
                    } = S.default.useExperiment({
                        location: "friends_tab_no_track"
                    }), u = (0, N.default)();
                    return (0, a.jsxs)(ec.LinkButton, {
                        selected: t,
                        route: e_.Routes.FRIENDS,
                        icon: er.default,
                        text: eI.default.Messages.FRIENDS,
                        onClick: () => {
                            T.default.trackWithMetadata(e_.AnalyticEvents.BROADCAST_LIST_VISITED, {
                                num_active_broadcasts: i.length,
                                friends_tab_clicked: !0,
                                is_broadcasting: u
                            })
                        },
                        ...n,
                        ...s,
                        children: [i.length > 0 && r && (0, a.jsx)(eo.TextBadge, {
                            color: O.default.REDESIGN_BUTTON_PRIMARY_BACKGROUND,
                            text: (0, a.jsxs)("div", {
                                className: eh.broadcastingBadge,
                                children: [(0, a.jsx)(en.default, {
                                    className: eh.broadcastingIcon
                                }), (0, a.jsx)(f.Text, {
                                    variant: "text-xs/semibold",
                                    color: "always-white",
                                    children: i.length.toLocaleString()
                                })]
                            })
                        }), l > 0 ? (0, a.jsx)(eo.NumberBadge, {
                            count: l
                        }) : null]
                    })
                },
                eT = e => {
                    let {
                        selected: t,
                        hideGameUpdateProgressIndicator: n,
                        ...s
                    } = e, l = (0, o.useListItem)("library");
                    return (0, a.jsx)(ec.LinkButton, {
                        selected: t,
                        route: e_.Routes.APPLICATION_LIBRARY,
                        icon: ea.default,
                        text: eI.default.Messages.LIBRARY,
                        ...s,
                        ...l,
                        children: (0, a.jsx)(ef.default, {
                            className: i(eh.downloadProgressCircle, {
                                [eh.hideGameUpdateProgressIndicator]: n
                            })
                        })
                    })
                },
                em = e => {
                    let t, n, {
                            selected: s,
                            route: l,
                            locationState: i,
                            ...r
                        } = e,
                        u = (0, d.useStateFromStores)([q.default], () => q.default.getCurrentUser()),
                        c = (0, d.useStateFromStores)([X.default], () => X.default.getPremiumTypeSubscription()),
                        E = (0, o.useListItem)("nitro"),
                        f = (0, b.usePremiumTrialOffer)(),
                        _ = (0, y.usePremiumDiscountOffer)(),
                        I = (0, d.useStateFromStores)([Q.default], () => Q.default.isLocalizedPromoEnabled),
                        h = (0, j.useIsEligibleForBogoPromotion)(),
                        C = (0, B.default)(),
                        T = s || null != f || null != _ || h || C || null != u && Date.now() - u.createdAt.getTime() > 2592e6 || (0, eu.hasPremiumSubscriptionToDisplay)(u, c);
                    return T ? (h ? n = (0, a.jsx)(U.default, {
                        isNitroTab: !0
                    }) : C ? n = (0, a.jsx)(k.default, {}) : null != _ ? n = (0, a.jsx)(F.PremiumDiscountOfferTabBadge, {
                        userDiscount: _,
                        isTabSelected: s,
                        includesAmountOff: !1
                    }) : null != f ? n = (0, a.jsx)(F.PremiumTrialOfferTabBadge, {
                        trialOffer: f,
                        isTabSelected: s
                    }) : I && null == f && (n = (0, a.jsx)(G.LocalizedPricingBadgeIcon, {
                        entryPoint: G.BadgeEntryPoint.PrivateMessages
                    }), !s && (t = eh.localizedPricingBadge)), (0, a.jsx)(ec.LinkButton, {
                        selected: s,
                        route: l,
                        icon: el.default,
                        text: eI.default.Messages.PREMIUM,
                        locationState: i,
                        ...r,
                        ...E,
                        className: t,
                        children: n
                    })) : null
                },
                eS = e => {
                    let {
                        selected: t,
                        route: n,
                        locationState: s,
                        ...l
                    } = e, r = (0, o.useListItem)("activities"), u = (0, d.useStateFromStores)([Y.default], () => Y.default.getState().theme), c = (0, h.useActivitiesWhatsNewCount)();
                    return (0, a.jsx)(ec.LinkButton, {
                        selected: t,
                        route: n,
                        icon: ee.default,
                        iconClassName: i(eh.activitiesBirthdayIcon, {
                            [eh.activitiesBirthdayIconLight]: "light" === u
                        }),
                        text: eI.default.Messages.EMBEDDED_ACTIVITIES_ACTIVITY_TAB_TITLE,
                        locationState: s,
                        ...l,
                        ...r,
                        children: c > 0 ? (0, a.jsx)(eo.NumberBadge, {
                            count: c
                        }) : null
                    })
                },
                eN = e => {
                    let {
                        selected: t
                    } = e, n = (0, v.useMessageRequestsCount)(), s = (0, o.useListItem)("messageRequests"), {
                        channelId: l
                    } = (0, M.useMessageRequestSidebarState)(), i = (0, D.useShouldShowMessageRequestsRow)();
                    if (!i) return null;
                    let r = null == l ? void 0 : () => _.default.preload(e_.ME, l);
                    return (0, a.jsx)(ec.LinkButton, {
                        selected: t,
                        route: e_.Routes.MESSAGE_REQUESTS,
                        icon: es.default,
                        text: eI.default.Messages.MESSAGE_REQUESTS,
                        onClick: r,
                        ...s,
                        children: n > 0 ? (0, a.jsx)(eo.NumberBadge, {
                            count: n
                        }) : null
                    })
                },
                eA = () => ((0, B.useClearNewBadge)(), (0, a.jsx)(eo.PremiumBadge, {
                    text: eI.default.Messages.NEW
                })),
                ep = e => {
                    let {
                        selected: t,
                        locationState: n
                    } = e, s = (0, o.useListItem)("shop"), {
                        canViewShopButton: l
                    } = (0, g.default)({
                        location: "home"
                    }), i = C.default.HOME_PAGE_SHOP_TAB, {
                        analyticsLocations: r
                    } = (0, m.default)(i), {
                        collectiblesShopTabNewBadge: u
                    } = (0, R.default)();
                    return l ? (0, a.jsx)(ec.LinkButton, {
                        selected: t,
                        route: e_.Routes.COLLECTIBLES_SHOP,
                        icon: et.default,
                        text: eI.default.Messages.COLLECTIBLES_SHOP,
                        onClick: () => {
                            (0, p.trackCollectiblesShopOpened)({
                                analyticsSource: i,
                                analyticsLocations: r
                            })
                        },
                        locationState: n,
                        ...s,
                        children: null != u && (0, a.jsx)(eA, {})
                    }) : null
                },
                eg = e => {
                    let {
                        selected: t
                    } = e, n = eI.default.Messages.FAMILY_CENTER_SIDEBAR_TITLE, l = (0, o.useListItem)("family-center"), i = W.FamilyCenterEnabled.useSetting(), r = (0, x.default)(), [u, d] = s.useState(!0);
                    return i && r ? (0, a.jsx)(ec.LinkButton, {
                        selected: t,
                        route: e_.Routes.FAMILY_CENTER,
                        icon: ei.default,
                        text: n,
                        onMouseEnter: () => {
                            d(!0)
                        },
                        onMouseLeave: () => {
                            d(!1)
                        },
                        interactiveClassName: eh.familyCenterLinkButton,
                        ...l,
                        children: (0, a.jsx)(eR, {
                            isParentHovered: u
                        })
                    }) : null
                },
                eR = e => {
                    let {
                        isParentHovered: t
                    } = e, s = (0, P.usePendingRequestCount)();
                    return t ? (0, a.jsx)(ec.CloseButton, {
                        onClick: () => {
                            (0, E.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("6674").then(n.bind(n, "6674"));
                                return t => (0, a.jsx)(e, {
                                    ...t
                                })
                            })
                        },
                        "aria-label": eI.default.Messages.CLOSE
                    }) : s > 0 ? (0, a.jsx)("div", {
                        className: eh.familyCenterPendingBadge,
                        children: (0, a.jsx)(eo.NumberBadge, {
                            count: s
                        })
                    }) : (0, a.jsx)(L.default, {
                        contentTypes: [c.DismissibleContent.FAMILY_CENTER_NEW_BADGE],
                        children: e => {
                            let {
                                visibleContent: t
                            } = e;
                            return t === c.DismissibleContent.FAMILY_CENTER_NEW_BADGE ? (0, a.jsx)(eo.TextBadge, {
                                text: eI.default.Messages.NEW,
                                color: O.default.REDESIGN_BUTTON_PRIMARY_BACKGROUND
                            }) : null
                        }
                    })
                },
                eO = () => (0, w.show)("DM_SEARCH");

            function eL(e) {
                switch (e) {
                    case e_.Routes.APPLICATION_LIBRARY:
                        return e_.AnalyticsPages.LIBRARY;
                    case e_.Routes.FRIENDS:
                        return e_.AnalyticsPages.FRIENDS_LIST;
                    case e_.Routes.COLLECTIBLES_SHOP:
                        return e_.AnalyticsPages.COLLECTIBLES_SHOP
                }
                if (e.startsWith(e_.Routes.APPLICATION_STORE)) return e === e_.Routes.APPLICATION_STORE ? e_.AnalyticsPages.STORE_DIRECTORY_HOME : e.startsWith(e_.Routes.APPLICATION_STORE) ? e_.AnalyticsPages.STORE_DIRECTORY_BROWSE : e_.AnalyticsPages.STORE_LISTING;
                return e_.AnalyticsPages.DM_CHANNEL
            }
            let eM = e => {
                let {
                    showLibrary: t,
                    hasLibraryApplication: n,
                    homeLink: s,
                    storeLink: l,
                    premiumTabSelected: o
                } = e, [d, c] = (0, H.default)(e => {
                    let {
                        channelId: t,
                        path: n
                    } = e;
                    return [t, n]
                }, r.default), {
                    enabled: E
                } = I.BirthdayActivitiesExperiment.useExperiment({
                    location: "a718d6_2"
                }, {
                    autoTrackExposure: !0
                });
                return (0, a.jsxs)("nav", {
                    className: eh.privateChannels,
                    "aria-label": eI.default.Messages.PRIVATE_CHANNELS_A11Y_LABEL,
                    children: [(0, a.jsx)(V.default, {
                        tutorialId: "direct-messages",
                        position: "right",
                        offsetX: -52,
                        children: (0, a.jsx)("div", {
                            className: i(eh.searchBar, {
                                [eh.themedHeaderMobile]: u.isMobile
                            }),
                            children: (0, a.jsx)("button", {
                                type: "button",
                                className: i(eh.searchBarComponent, {
                                    [eh.themedSearchBarMobile]: u.isMobile
                                }),
                                onClick: eO,
                                children: eI.default.Messages.DM_SEARCH_PLACEHOLDER
                            })
                        })
                    }), (0, a.jsxs)(eE.default, {
                        ...e,
                        version: c,
                        selectedChannelId: d,
                        showDMHeader: !0,
                        children: [(0, a.jsx)(eC, {
                            selected: null != c ? c === e_.Routes.FRIENDS : s === e_.Routes.FRIENDS
                        }, "friends"), n && t ? (0, a.jsx)(eT, {
                            selected: null == c ? null != s && s.startsWith(e_.Routes.APPLICATION_LIBRARY) : c.startsWith(e_.Routes.APPLICATION_LIBRARY),
                            hideGameUpdateProgressIndicator: s === e_.Routes.APPLICATION_LIBRARY
                        }, "library") : null, (0, a.jsx)(em, {
                            selected: null == c ? o : c.startsWith(e_.Routes.APPLICATION_STORE),
                            route: null == l || location.pathname.startsWith(e_.Routes.ACTIVITIES) || location.pathname.startsWith(e_.Routes.APPLICATION_STORE) ? e_.Routes.APPLICATION_STORE : l,
                            locationState: {
                                analyticsSource: {
                                    page: eL(s),
                                    section: e_.AnalyticsSections.NAVIGATION,
                                    object: e_.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "premium"), E ? (0, a.jsx)(eS, {
                            selected: null != c && c.startsWith(e_.Routes.ACTIVITIES) || null != s && s.startsWith(e_.Routes.ACTIVITIES),
                            route: e_.Routes.ACTIVITIES,
                            locationState: {
                                analyticsSource: {
                                    page: eL(s),
                                    section: e_.AnalyticsSections.NAVIGATION,
                                    object: e_.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "activities") : null, (0, a.jsx)(eN, {
                            selected: null == c ? null != s && s.startsWith(e_.Routes.MESSAGE_REQUESTS) : c === e_.Routes.MESSAGE_REQUESTS
                        }, "message-requests"), (0, a.jsx)(ep, {
                            selected: c === e_.Routes.COLLECTIBLES_SHOP || (null == s ? void 0 : s.startsWith(e_.Routes.COLLECTIBLES_SHOP)),
                            locationState: {
                                analyticsSource: {
                                    page: eL(s),
                                    section: e_.AnalyticsSections.NAVIGATION,
                                    object: e_.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "discord-shop"), (0, a.jsx)(eg, {
                            selected: null != s && s.startsWith(e_.Routes.FAMILY_CENTER) || null != c && c.startsWith(e_.Routes.FAMILY_CENTER)
                        }, "family-center")]
                    })]
                })
            };

            function ev() {
                let e = (0, d.useStateFromStores)([$.default], () => $.default.getHomeLink()),
                    t = (0, d.useStateFromStores)([Z.default], () => {
                        if (e === e_.Routes.APPLICATION_STORE) return !0;
                        let t = (0, ed.getSKUIdFromURL)(e);
                        if (null != t) {
                            var n, a;
                            return null !== (a = null === (n = Z.default.get(t)) || void 0 === n ? void 0 : n.premium) && void 0 !== a && a
                        }
                        return !1
                    }, [e]),
                    n = !W.DisableGamesTab.useSetting(),
                    {
                        theme: s
                    } = (0, d.useStateFromStoresObject)([Y.default], () => ({
                        theme: Y.default.theme
                    })),
                    l = (0, d.useStateFromStores)([K.default], () => K.default.hasLibraryApplication()),
                    i = (0, d.useStateFromStores)([J.default], () => J.default.getCurrentPath());
                return (0, a.jsx)(eM, {
                    theme: s,
                    showLibrary: n,
                    hasLibraryApplication: l,
                    storeLink: i,
                    homeLink: e,
                    premiumTabSelected: t
                })
            }
        },
        146350: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("669491"),
                u = n("77078"),
                d = n("86621"),
                c = n("775377"),
                E = n("81516"),
                f = n("891964"),
                _ = n("644091"),
                I = n("845579"),
                h = n("52028"),
                C = n("381546"),
                T = n("304121"),
                m = n("599110"),
                S = n("158998"),
                N = n("49111"),
                A = n("782340"),
                p = n("304169");

            function g(e) {
                let {
                    status: t,
                    description: n,
                    focused: s
                } = e;
                return (0, a.jsxs)("div", {
                    className: p.statusItem,
                    children: [(0, a.jsx)(u.Status, {
                        status: t,
                        className: p.icon,
                        size: 10,
                        color: s ? "currentColor" : void 0
                    }), (0, a.jsx)("div", {
                        className: p.status,
                        children: (0, S.humanizeStatus)(t)
                    }), null != n && (0, a.jsx)("div", {
                        className: p.description,
                        children: n
                    })]
                })
            }

            function R(e) {
                let {
                    customStatus: t
                } = e, n = e => {
                    e.stopPropagation(), I.CustomStatusSetting.updateSetting(void 0)
                };
                return null != t ? (0, a.jsx)("div", {
                    "aria-label": A.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                    children: (0, a.jsx)(c.default, {
                        className: null != t.emoji ? p.customStatusWithEmoji : p.customStatusItem,
                        activity: t,
                        emojiClassName: p.customEmoji,
                        textClassName: p.customText,
                        placeholderText: A.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                        children: (0, a.jsx)(u.Tooltip, {
                            text: A.default.Messages.CUSTOM_STATUS_CLEAR_CUSTOM_STATUS,
                            children: e => (0, a.jsx)(u.Button, {
                                ...e,
                                className: p.clearStatusButton,
                                onClick: n,
                                look: u.Button.Looks.BLANK,
                                size: u.Button.Sizes.NONE,
                                tabIndex: -1,
                                "aria-hidden": !0,
                                children: (0, a.jsx)(C.default, {
                                    className: p.clearStatusIcon
                                })
                            })
                        })
                    })
                }) : (0, a.jsxs)("div", {
                    className: i(p.statusItem, p.customStatusContentIcon),
                    "aria-label": A.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS,
                    children: [(0, a.jsx)("div", {
                        className: p.customEmojiPlaceholder
                    }), (0, a.jsx)("div", {
                        className: p.status,
                        children: A.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS
                    })]
                })
            }

            function O(e) {
                let {
                    focused: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: i(p.statusItem, p.statusItemNoPadding, p.customStatusContentIcon, p.switchAccountsItem),
                    "aria-label": A.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                    children: [(0, a.jsx)(T.default, {
                        width: 18,
                        height: 18,
                        className: p.switchAccountsIcon,
                        color: t ? o.default.unsafe_rawColors.WHITE_500.css : "currentColor"
                    }), (0, a.jsx)("div", {
                        className: p.status,
                        children: A.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE
                    })]
                })
            }
            let L = e => {
                let {
                    customStatus: t,
                    onClose: l,
                    analyticsContext: i,
                    onSelect: r
                } = e, o = (0, _.useMultiAccountMenuItems)();
                s.useEffect(() => {
                    m.default.track(N.AnalyticEvents.OPEN_POPOUT, {
                        type: "User Status Menu",
                        has_custom_status: null != t,
                        location: i.location
                    })
                }, []);
                let d = e => {
                    (0, E.default)(e, void 0, {
                        location: i.location
                    })
                };
                return (0, a.jsxs)(u.Menu, {
                    navId: "status-picker",
                    variant: "fixed",
                    "aria-label": A.default.Messages.SET_STATUS,
                    onClose: l,
                    onSelect: r,
                    children: [(0, a.jsx)(u.MenuItem, {
                        id: "online",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.ONLINE,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.ONLINE)
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "idle",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.IDLE,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.IDLE)
                    }), (0, a.jsx)(u.MenuItem, {
                        id: "dnd",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.DND,
                                description: A.default.Messages.STATUS_DND_HELP,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.DND)
                    }), (0, a.jsx)(u.MenuItem, {
                        id: "invisible",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.INVISIBLE,
                                description: A.default.Messages.STATUS_INVISIBLE_HELPER,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.INVISIBLE)
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "custom-status",
                        keepItemStyles: !0,
                        render: () => (0, a.jsx)(R, {
                            customStatus: t
                        }),
                        action: () => {
                            (0, u.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("711438").then(n.bind(n, "711438"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    sourceAnalyticsContext: i
                                })
                            })
                        }
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "switch-account",
                        action: f.default,
                        label: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(O, {
                                focused: t
                            })
                        },
                        children: o
                    }, "switch-account")]
                })
            };
            var M = (0, d.default)(e => {
                let t = (0, r.useStateFromStores)([h.default], () => h.default.getCustomStatusActivity()),
                    n = I.StatusSetting.useSetting();
                return (0, a.jsx)(L, {
                    ...e,
                    customStatus: t,
                    status: n
                })
            })
        },
        779020: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return tr
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("730290"),
                i = n("803182"),
                r = n("90915"),
                o = n("446674"),
                u = n("77078"),
                d = n("437822"),
                c = n("711115"),
                E = n("851387"),
                f = n("987317"),
                _ = n("70614"),
                I = n("79112"),
                h = n("206230"),
                C = n("951212"),
                T = n("827792"),
                m = n("670984"),
                S = n("141962"),
                N = n("581516"),
                A = n("182537"),
                p = n("943183"),
                g = n("271081"),
                R = n("298557"),
                O = n("176162"),
                L = n("590157"),
                M = n("734592"),
                v = n("156565"),
                D = n("366410"),
                x = n("927175"),
                P = n("957328"),
                y = n("616265"),
                b = n("72860"),
                U = n("697316"),
                G = n("587233"),
                j = n("683716"),
                F = n("132943"),
                k = n("612365"),
                B = n("319769"),
                w = n("506377"),
                H = n("318915"),
                V = n("619443"),
                Y = n("263901"),
                W = n("643130"),
                K = n("802896"),
                z = n("374021"),
                q = n("592407"),
                Q = n("468560"),
                X = n("73968"),
                J = n("236199"),
                Z = n("353983"),
                $ = n("940035"),
                ee = n("831773"),
                et = n("283896"),
                en = n("397039"),
                ea = n("628805"),
                es = n("165926"),
                el = n("946522"),
                ei = n("880185"),
                er = n("624043"),
                eo = n("263065"),
                eu = n("204025"),
                ed = n("684641"),
                ec = n("176372"),
                eE = n("929479"),
                ef = n("630140"),
                e_ = n("91990"),
                eI = n("359477"),
                eh = n("1501"),
                eC = n("838857"),
                eT = n("393414"),
                em = n("828309"),
                eS = n("29322"),
                eN = n("208021"),
                eA = n("582713"),
                ep = n("949000"),
                eg = n("987285"),
                eR = n("686551"),
                eO = n("793237"),
                eL = n("120252"),
                eM = n("481395"),
                ev = n("401642"),
                eD = n("542789"),
                ex = n("84124"),
                eP = n("392011"),
                ey = n("777523"),
                eb = n("470885"),
                eU = n("868558"),
                eG = n("271938"),
                ej = n("982108"),
                eF = n("42203"),
                ek = n("476108"),
                eB = n("305961"),
                ew = n("778588"),
                eH = n("686470"),
                eV = n("18494"),
                eY = n("162771"),
                eW = n("167726"),
                eK = n("552067"),
                ez = n("866681"),
                eq = n("428773"),
                eQ = n("535974"),
                eX = n("43093"),
                eJ = n("773336"),
                eZ = n("50885"),
                e$ = n("780009"),
                e0 = n("49111"),
                e1 = n("750947"),
                e4 = n("724210"),
                e9 = n("56235");
            n("72177"), n("392453"), n("366679"), n("848872"), n("189857"), n("144747"), n("698041"), n("552712"), n("367530"), n("429464"), n("336727"), n("767960"), n("26092"), n("790618"), n("424562"), n("900938"), n("492114"), n("161810"), n("901998"), n("684442"), n("799286"), n("470055"), n("140596");
            let e8 = !1;
            (0, p.initSessionHeartbeatScheduler)(), o.default.initialize(), em.default.loadServer(), eJ.isPlatformEmbedded && (eZ.default.on("USER_SETTINGS_OPEN", () => {
                !ew.default.getLayers().includes(e0.Layers.USER_SETTINGS) && I.default.open(e0.UserSettingsSections.ACCOUNT)
            }), eZ.default.on("LAUNCH_APPLICATION", (e, t) => {
                let n = eH.default.getActiveLibraryApplication(t);
                e$.playApplication(t, n, {
                    analyticsParams: {
                        location: {
                            page: e0.AnalyticsPages.DIRECT,
                            object: e0.AnalyticsObjects.WEB_URL
                        }
                    }
                })
            }));
            let e2 = o.default.connectStores([V.default, ek.default, eG.default], () => ({
                    isConnected: V.default.isConnected(),
                    defaultRoute: ek.default.defaultRoute,
                    defaultRouteFallback: ek.default.fallbackRoute,
                    token: eG.default.getToken()
                }))(class extends s.Component {
                    componentDidMount() {
                        let {
                            match: e
                        } = this.props;
                        null != e && null != e.params.inviteCode && (0, K.doGuildOnboardingForPostAuthInvite)({
                            code: e.params.inviteCode
                        })
                    }
                    render() {
                        let {
                            isConnected: e,
                            defaultRoute: t,
                            token: n,
                            defaultRouteFallback: s
                        } = this.props;
                        if (null == n) return (0, a.jsx)(r.Redirect, {
                            to: e0.Routes.DEFAULT_LOGGED_OUT
                        });
                        if (e) {
                            let e = ts(t);
                            return null == e || (e.params.guildId === e0.ME || null != eB.default.getGuild(e.params.guildId)) && null != eF.default.getChannel(e.params.channelId) ? (0, a.jsx)(r.Redirect, {
                                to: t
                            }) : (0, a.jsx)(r.Redirect, {
                                to: s
                            })
                        }
                        return null
                    }
                }),
                e6 = (0, L.makeAuthenticated)(v.default, null, {
                    passProps: !1
                }),
                e7 = (0, L.makeAuthenticated)(function() {
                    return (0, a.jsx)(g.default, {})
                }),
                e3 = (0, L.makeAuthenticated)(function(e) {
                    let {
                        match: t
                    } = e, {
                        applicationId: n,
                        section: s
                    } = t.params, l = (0, Q.default)(e1.ApplicationDirectoryProfileSections, s);
                    return (0, a.jsx)(R.default, {
                        applicationId: n,
                        initialSection: l
                    })
                }),
                e5 = (0, L.makeAuthenticated)(function() {
                    return (0, a.jsx)(O.default, {})
                }),
                te = [e0.Routes.GUILD_BOOSTING_MARKETING(":guildId"), ...Array.from(e4.StaticChannelRoutes).map(e => e0.Routes.CHANNEL(":guildId", e))];

            function tt(e) {
                let {
                    guildId: t,
                    channelId: n = null,
                    messageId: a = null,
                    threadId: s = null
                } = e.params;
                return {
                    guildId: null != t ? t : e0.ME,
                    channelId: n,
                    messageId: a,
                    threadId: s
                }
            }
            let tn = [{
                    path: [e0.Routes.APPLICATION_DIRECTORY_SEARCH],
                    render: e5,
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.APPLICATION_DIRECTORY_PROFILE(":applicationId", ":section?")],
                    render: e3,
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.APPLICATION_DIRECTORY],
                    render: e7,
                    isSessionRequired: !0
                }],
                ta = [{
                    path: [e0.Routes.APP_WITH_INVITE_AND_GUILD_ONBOARDING(":inviteCode")],
                    render(e) {
                        let {
                            match: t
                        } = e;
                        return (0, a.jsx)(e2, {
                            match: t
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.APP],
                    render: () => (0, a.jsx)(e2, {}),
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.USERS(":id")],
                    render: function(e) {
                        let {
                            match: t,
                            location: n
                        } = e, {
                            friend_token: s
                        } = (0, l.parse)(n.search), {
                            id: i
                        } = t.params;
                        return (0, Y.addPostConnectionCallback)(() => (0, ev.openUserProfileModal)({
                            userId: i,
                            guildId: e0.ME,
                            friendToken: s,
                            analyticsLocation: {
                                section: e0.AnalyticsSections.DIRECT_ROUTE_ACCESS
                            }
                        })), (0, a.jsx)(r.Redirect, {
                            to: ek.default.defaultRoute
                        })
                    }
                }, {
                    path: [e0.Routes.APPLICATION_LIBRARY_ACTION(":gameId", ":action")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            gameId: n,
                            action: s
                        } = t.params;
                        return eQ.default.whenInitialized(() => {
                            eH.default.whenInitialized(() => {
                                switch (s) {
                                    case "launch": {
                                        let e = eH.default.getActiveLibraryApplication(n);
                                        if (null == e) return;
                                        e$.playApplication(e.id, e, {
                                            analyticsParams: {
                                                location: {
                                                    page: e0.AnalyticsPages.DIRECT,
                                                    object: e0.AnalyticsObjects.WEB_URL
                                                }
                                            }
                                        });
                                        break
                                    }
                                    case "test-mode":
                                        eW.default.whenInitialized(() => _.authorizeAndSetTestModeApplication(n));
                                        break;
                                    case "uninstall": {
                                        let e = eH.default.getActiveLibraryApplication(n);
                                        if (null == e) return;
                                        (0, c.uninstallBranchPrompt)(e.id, e.branchId, e0.AnalyticsLocations.URI_SCHEME)
                                    }
                                }
                            })
                        }), (0, a.jsx)(r.Redirect, {
                            to: e0.Routes.APPLICATION_LIBRARY
                        })
                    }
                }, {
                    path: [e0.Routes.GUILD_CREATE],
                    render: function() {
                        return (0, Y.addPostConnectionCallback)(() => y.default.openCreateGuildModal({
                            location: "External link"
                        })), (0, a.jsx)(r.Redirect, {
                            to: ek.default.defaultRoute
                        })
                    }
                }, {
                    path: [e0.Routes.PICK_GUILD_SETTINGS(":section?", ":subsection?")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            section: n,
                            subsection: s
                        } = t.params, i = (0, l.parse)(location.search), o = i.feature;
                        return (0, Y.addPostConnectionCallback)(() => X.openGuildSettingsPickerModal({
                            section: (0, Q.default)(e0.GuildSettingsSections, n),
                            subsection: (0, Q.default)(e0.GuildSettingsSubsections, s),
                            feature: o
                        })), (0, a.jsx)(r.Redirect, {
                            to: ek.default.defaultRoute
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.SETTINGS(":section", ":subsection?")],
                    render: function(e) {
                        let {
                            location: t
                        } = e, n = (0, ey.default)(t.pathname);
                        return null != n && (0, Y.addPostConnectionCallback)(() => I.default.open(n.section, n.subsection, {
                            openWithoutBackstack: !1,
                            impressionSource: n.source
                        })), (0, a.jsx)(r.Redirect, {
                            to: ek.default.defaultRoute
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.USER_GUILD_NOTIFICATION_SETTINGS(":guildId")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: s
                        } = t.params;
                        return (0, Y.addPostConnectionCallback)(() => {
                            (0, u.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("747593").then(n.bind(n, "747593"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    guildId: s
                                })
                            })
                        }), (0, a.jsx)(r.Redirect, {
                            to: e0.Routes.CHANNEL(s)
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.APPLICATION_LIBRARY_INVENTORY],
                    render: function() {
                        return (0, Y.addPostConnectionCallback)(() => I.default.open(e0.UserSettingsSections.INVENTORY)), (0, a.jsx)(r.Redirect, {
                            to: ek.default.defaultRoute
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.WELCOME(":guildId?", ":channelId?")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: n,
                            channelId: s
                        } = t.params;
                        (0, es.setNewUser)(e9.NewUserTypes.MARKETING_UNCLAIMED);
                        let l = e0.Routes.CHANNEL(n, s);
                        return (0, a.jsx)(r.Redirect, {
                            to: l
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.GUILD_EVENT_DETAILS(":guildId?", ":guildEventId")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: n,
                            guildEventId: s
                        } = t.params;
                        return (0, Y.addPostConnectionCallback)(() => {
                            (0, z.openGuildEventDetails)({
                                eventId: s
                            })
                        }), (0, a.jsx)(r.Redirect, {
                            to: e0.Routes.CHANNEL(n)
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [e0.Routes.GUILD_SETTINGS(":guildId", ":section?", ":subsection?")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: n,
                            section: s,
                            subsection: l
                        } = t.params;
                        return (0, Y.addPostConnectionCallback)(() => {
                            q.default.open(n, (0, Q.default)(e0.GuildSettingsSections, s), void 0, (0, Q.default)(e0.GuildSettingsSubsections, l))
                        }), (0, a.jsx)(r.Redirect, {
                            to: e0.Routes.CHANNEL(n)
                        })
                    },
                    isSessionRequired: !0,
                    isChatRoute: !0
                }, {
                    path: [e0.Routes.CHANNEL_THREAD_VIEW(":guildId", ":channelId", ":threadId", ":messageId?"), e0.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?"), e0.Routes.ACTIVITY, e0.Routes.ACTIVITIES, e0.Routes.ACTIVITIES_HAPPENING_NOW, e0.Routes.ACTIVITY_DETAILS(":applicationId"), e0.Routes.APPLICATION_LIBRARY, e0.Routes.APPLICATION_STORE, e0.Routes.MESSAGE_REQUESTS, e0.Routes.COLLECTIBLES_SHOP, e0.Routes.COLLECTIBLES_SHOP_FULLSCREEN, e0.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(":skuId"), e0.Routes.GUILD_DISCOVERY, e0.Routes.GUILD_MEMBER_VERIFICATION(":guildId", ":inviteCode?"), e0.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(":guildId", ":inviteCode?"), e0.Routes.GUILD_BOOSTING_MARKETING(":guildId"), e0.Routes.FEATURE(":feature"), e0.Routes.FAMILY_CENTER],
                    render: e6,
                    isSessionRequired: !0,
                    isChatRoute: !0
                }, ...tn];

            function ts(e) {
                for (let {
                        path: t,
                        isChatRoute: n
                    }
                    of ta) {
                    if (!n) continue;
                    let a = (0, i.matchPath)(e, {
                        path: t
                    });
                    if (null != a) return a
                }
                return null
            }

            function tl(e) {
                let {
                    channelId: t,
                    guildId: n,
                    pathname: a
                } = e;
                if (!V.default.isConnected()) return;
                let {
                    location: s
                } = (0, eT.getHistory)();
                s.pathname === a && (null == eF.default.getChannel(t) ? (0, eT.replaceWith)(e0.Routes.CHANNEL(n)) : (0, eT.replaceWith)(a))
            }
            class ti extends s.PureComponent {
                componentDidMount() {
                    D.default.initialize(), eZ.default.setZoomFactor(h.default.zoom), em.default.init(), M.default.initialize(), ed.default.initialize(), k.default.initialize(), F.default.initialize(), eU.default.initialize(), B.default.initialize(), eE.default.initialize(), $.default.initialize(), C.default.init(), H.default.init(), w.default.init(), el.default.initialize(), A.default.initialize(), j.default.initialize(), ef.default.initialize(), N.default.initialize(), eb.default.initialize(), eu.default.initialize(), S.default.initialize(), W.default.init(), J.default.init(), eq.default.init(), eX.default.init(), m.default.initialize(), eM.default.init(), ez.default.init(), eK.default.init(), ex.default.init(), eg.default.initialize(), eR.default.initialize(), eD.default.initialize(), eP.default.init(), G.default.initialize(), T.default.initialize(), eS.default.initialize(), ep.default.initialize(), er.default.initialize(), ei.default.initialize(), eo.default.initialize(), x.default.initialize(), et.default.initialize(), e_.default.initialize(), Z.default.init({
                        hasModalOpen: u.hasAnyModalOpen,
                        openModal: () => (0, u.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("927475").then(n.bind(n, "927475"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    }), U.default.init(), ee.default.initialize(), eI.default.initialize(), ec.default.initialize(), b.default.initialize(), this.rewriterUnlisten = eh.default.addRouteRewriter(this.ensureChannelMatchesGuild), this.historyUnlisten = eh.default.addRouteChangeListener(this.handleHistoryChange)
                }
                componentWillUnmount() {
                    D.default.terminate(), k.default.terminate(), eU.default.terminate(), eE.default.terminate(), ed.default.terminate(), M.default.terminate(), N.default.terminate(), eb.default.terminate(), S.default.terminate(), ef.default.terminate(), eu.default.terminate(), eD.default.terminate(), m.default.terminate(), G.default.terminate(), ee.default.terminate(), T.default.terminate(), eI.default.terminate(), eS.default.terminate(), ep.default.terminate(), er.default.terminate(), ei.default.terminate(), eo.default.terminate(), x.default.terminate(), ec.default.terminate(), b.default.terminate(), et.default.terminate(), this.historyUnlisten(), this.rewriterUnlisten()
                }
                handleHistoryChange(e) {
                    let {
                        pathname: t,
                        search: n
                    } = e;
                    ! function(e) {
                        if (V.default.isConnected() || V.default.isTryingToConnect()) return;
                        let t = eG.default.getToken();
                        if (null == t) return;
                        let n = function(e) {
                            for (let {
                                    path: t,
                                    isSessionRequired: n
                                }
                                of ta) {
                                if (!n) continue;
                                let a = (0, i.matchPath)(e, {
                                    path: t
                                });
                                if (null != a) return a
                            }
                            return null
                        }(e);
                        null != n && d.default.startSession(t)
                    }(t), ! function(e, t) {
                        let n = ts(e);
                        if (null == n) return;
                        let {
                            guildId: a,
                            channelId: s,
                            messageId: r,
                            threadId: o
                        } = tt(n), u = (0, eC.isValidGuildId)(a), d = (0, eC.isValidChannelId)(s), c = (0, eC.isValidChannelId)(o), _ = eY.default.getGuildId(), I = _ !== a;
                        if (u && I && E.default.selectGuild(a), u && d) {
                            let n = eV.default.getChannelId(_),
                                i = n !== s;
                            if (!e8 || I || i || null != r) {
                                e8 = !0, f.default.selectChannel({
                                    guildId: a,
                                    channelId: s,
                                    messageId: r
                                });
                                let {
                                    summaryId: e
                                } = (0, l.parse)(t);
                                null != e && eO.default.setSelectedSummary(s, e)
                            }
                            if (null != o && c) {
                                let e = ej.default.getCurrentSidebarChannelId(n),
                                    t = e !== o,
                                    l = null != ej.default.getGuildSidebarState(a);
                                if (null != s && null != o && t) {
                                    if (l)(0, eT.replaceWith)(e0.Routes.CHANNEL(a, o, r));
                                    else {
                                        let e = {
                                            type: eA.SidebarOpenDetailsType.THREAD
                                        };
                                        null != r && (e.initialMessageId = r), eN.default.openThreadAsSidebar({
                                            guildId: a,
                                            baseChannelId: s,
                                            channelId: o,
                                            details: e
                                        })
                                    }
                                }
                            } else null != s && !i && eN.default.closeChannelSidebar(s);
                            let u = ea.default.getIsOpen();
                            if (s === e4.StaticChannelRoute.ROLE_SUBSCRIPTIONS) en.default.closeSidebar();
                            else if (I && u) {
                                let t = null == _ && a === e0.ME,
                                    n = e === e0.Routes.GUILD_DISCOVERY;
                                t || n ? en.default.closeSidebar() : en.default.openSidebar()
                            } else(i && u || !I && !i) && en.default.closeSidebar()
                        } else {
                            var h;
                            if (h = e, !te.some(e => {
                                    var t;
                                    return (null === (t = (0, i.matchPath)(h, e)) || void 0 === t ? void 0 : t.isExact) === !0
                                }))(0, eT.replaceWith)(ek.default.fallbackRoute)
                        }
                    }(t, n)
                }
                ensureChannelMatchesGuild(e) {
                    if (!V.default.isConnected()) return null;
                    let {
                        pathname: t
                    } = e, n = ts(t);
                    if (null == n) return null;
                    let {
                        guildId: a,
                        channelId: s,
                        threadId: l
                    } = tt(n), i = (0, eC.isValidGuildId)(a) && a !== e0.ME && a !== e0.FAVORITES, r = null != s && (0, eC.isValidChannelId)(s) && !(0, e4.isStaticChannelRoute)(s);
                    if (r && i) {
                        let n = eF.default.getChannel(s);
                        if (null == n) eL.default.loadThread(s).then(() => tl({
                            channelId: s,
                            guildId: a,
                            pathname: t
                        }));
                        else if (n.guild_id !== a) return {
                            path: e0.Routes.CHANNEL(a),
                            state: e.state
                        };
                        if (null != l) {
                            let n = (0, eC.isValidChannelId)(l) && !(0, e4.isStaticChannelRoute)(s);
                            if (!n) return null;
                            let i = eF.default.getChannel(l);
                            if (null == i) eL.default.loadThread(l).then(() => tl({
                                channelId: l,
                                guildId: a,
                                pathname: t
                            }));
                            else if ((null == i ? void 0 : i.parent_id) !== s) return eN.default.closeChannelSidebar(s), {
                                path: e0.Routes.CHANNEL(a, s),
                                state: e.state
                            }
                        }
                    }
                    return null
                }
                render() {
                    return (0, a.jsxs)(s.Fragment, {
                        children: [(0, a.jsxs)(r.Switch, {
                            children: [(0, a.jsx)(r.Redirect, {
                                exact: !0,
                                from: "/channels",
                                to: "/"
                            }), ta.map(e => {
                                let {
                                    path: t,
                                    render: n
                                } = e;
                                return (0, a.jsx)(r.Route, {
                                    path: t,
                                    render: n
                                }, t[0])
                            }), (0, a.jsx)(r.Redirect, {
                                to: "/"
                            })]
                        }), (0, a.jsx)(P.default, {})]
                    })
                }
                constructor(...e) {
                    super(...e), this.historyUnlisten = () => {}, this.rewriterUnlisten = () => {}
                }
            }
            var tr = ti
        },
        543155: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a, s, l, i, r = n("37983"),
                o = n("884691"),
                u = n("49111");
            let d = (e, t) => {
                let {
                    x: n,
                    y: a
                } = e, {
                    x: s,
                    y: l
                } = t;
                return Math.pow(n - s, 2) + Math.pow(a - l, 2)
            };

            function c(e, t, n, a, s) {
                let {
                    top: l,
                    bottom: i,
                    left: r,
                    right: o
                } = e;
                if (null == l && null == i ? (l = 0, i = n - s) : null == l && null != i ? l = n - (i + s) : null != l && (i = n - (l + s)), null == r && null == o ? (r = 0, o = t - a) : null == r && null != o ? r = t - (o + a) : null == o && null != r && (o = t - (r + a)), null == l || null == i || null == r || null == o) throw Error("Logically this can never happen based on our if/else statements");
                return {
                    top: l,
                    left: r,
                    bottom: i,
                    right: o
                }
            }(a = l || (l = {}))[a.DISABLED = 0] = "DISABLED", a[a.DEFAULT = 1] = "DEFAULT", a[a.OFFSET = 2] = "OFFSET", (s = i || (i = {})).TOP = "TOP", s.BOTTOM = "BOTTOM", s.RIGHT = "RIGHT", s.LEFT = "LEFT";

            function E(e) {
                return [null == e.bottom ? i.TOP : i.BOTTOM, null == e.right ? i.LEFT : i.RIGHT]
            }

            function f(e) {
                let {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                } = e;
                return 0 === t || t <= a ? a = null : t = null, 0 === n || n <= s ? s = null : n = null, {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                }
            }

            function _(e) {
                let {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                } = e;
                return a < 0 && (t += a, a = 0), t < 0 && (a += t, t = 0), s < 0 && (n += s, s = 0), n < 0 && (s += n, n = 0), {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                }
            }

            function I(e) {
                return null != e ? "".concat(e, "px") : "auto"
            }
            class h extends o.PureComponent {
                componentDidMount() {
                    this.checkBounds(), this.setDOMPositions(this.position)
                }
                componentDidUpdate(e, t) {
                    let {
                        state: {
                            verticalOrientation: n,
                            horizontalOrientation: a,
                            atTopEdge: s
                        },
                        props: {
                            maxX: l,
                            maxY: i,
                            onRelocated: r,
                            snapOrientation: o
                        }
                    } = this, u = e.maxX !== l || e.maxY !== i || e.onRelocated !== r || e.snapOrientation !== o || t.verticalOrientation !== n || t.horizontalOrientation !== a || t.atTopEdge !== s;
                    u && this.checkBounds()
                }
                componentWillUnmount() {
                    window.removeEventListener("mousemove", this.handleMouseMove), window.removeEventListener("mouseup", this.handleMouseUp)
                }
                setDOMPositions(e) {
                    let {
                        top: t,
                        left: n,
                        bottom: a,
                        right: s
                    } = e, {
                        draggableRef: {
                            current: l
                        }
                    } = this;
                    this.position = {
                        top: t,
                        left: n,
                        bottom: a,
                        right: s
                    }, null != l && (l.style.top = I(t), l.style.bottom = I(a), l.style.left = I(n), l.style.right = I(s))
                }
                render() {
                    let {
                        children: e,
                        className: t
                    } = this.props, {
                        dragging: n,
                        verticalOrientation: a,
                        horizontalOrientation: s,
                        atTopEdge: l
                    } = this.state, {
                        top: u,
                        left: d,
                        right: c,
                        bottom: E
                    } = this.position;
                    return (0, r.jsx)("div", {
                        ref: this.draggableRef,
                        className: t,
                        onMouseDown: this.handleMouseDown,
                        style: {
                            pointerEvents: n ? "none" : "auto",
                            position: "absolute",
                            top: u,
                            left: d,
                            bottom: E,
                            right: c
                        },
                        children: o.cloneElement(o.Children.only(e), {
                            flipped: s === i.RIGHT,
                            verticalFlipped: a === i.BOTTOM,
                            checkBounds: this.checkBounds,
                            atTopEdge: l
                        })
                    })
                }
                constructor(e) {
                    super(e), this.draggableRef = o.createRef(), this._dragStart = {
                        x: 0,
                        y: 0
                    }, this.handleMouseDown = e => {
                        let {
                            top: t,
                            left: n,
                            bottom: a,
                            right: s
                        } = this.position, {
                            dragAnywhere: l,
                            selector: i,
                            maxX: r,
                            maxY: o
                        } = this.props, {
                            target: d
                        } = e, {
                            current: E
                        } = this.draggableRef;
                        if (null != E && e.button === u.MouseButtons.PRIMARY && (l || null != d && null != i && "" !== i && null != d.closest(i))) {
                            let l = c({
                                    top: t,
                                    left: n,
                                    bottom: a,
                                    right: s
                                }, r, o, E.clientWidth, E.clientHeight),
                                {
                                    x: i,
                                    y: u
                                } = function(e) {
                                    let {
                                        top: t,
                                        left: n
                                    } = e;
                                    return {
                                        x: n,
                                        y: t
                                    }
                                }(l);
                            this._dragStart = {
                                x: e.clientX,
                                y: e.clientY
                            }, this._offsetX = e.clientX - i, this._offsetY = e.clientY - u, window.addEventListener("mousemove", this.handleMouseMove), window.addEventListener("mouseup", this.handleMouseUp)
                        }
                    }, this.handleMouseMove = e => {
                        e.preventDefault();
                        let {
                            clientX: t,
                            clientY: n
                        } = e, {
                            current: a
                        } = this.draggableRef, {
                            maxX: s,
                            maxY: i,
                            flipVertical: r,
                            flipHorizontal: o,
                            onDragStart: u,
                            onDrag: I,
                            onFlip: h,
                            snapOrientation: C
                        } = this.props, {
                            dragging: T,
                            dragging: m,
                            verticalOrientation: S,
                            horizontalOrientation: N
                        } = this.state, A = !1;
                        if (null == a || !T && 9 > d(this._dragStart, {
                                x: t,
                                y: n
                            })) return;
                        T = !0;
                        let {
                            clientWidth: p,
                            clientHeight: g
                        } = a, R = n - this._offsetY, O = t - this._offsetX, L = _(c({
                            top: R,
                            left: O
                        }, s, i, p, g));
                        if (C) {
                            L = f(L);
                            let e = E(L);
                            S = e[0], N = e[1]
                        } else L = {
                            top: L.top,
                            left: L.left
                        };
                        o === l.OFFSET && N !== this.state.horizontalOrientation && (this._offsetX = p - this._offsetX, A = !0), r === l.OFFSET && S !== this.state.verticalOrientation && (this._offsetY = g - this._offsetY, A = !0), this.setDOMPositions(L), !m && (null == u || u(L, a)), null == I || I(L, a), A && (null == h || h([S, N])), this.setState({
                            dragging: T,
                            verticalOrientation: S,
                            horizontalOrientation: N,
                            atTopEdge: 0 === L.top
                        })
                    }, this.handleMouseUp = () => {
                        window.removeEventListener("mousemove", this.handleMouseMove), window.removeEventListener("mouseup", this.handleMouseUp), this.state.dragging && this.setState({
                            dragging: !1
                        }, () => {
                            let {
                                onDragEnd: e
                            } = this.props, {
                                current: t
                            } = this.draggableRef;
                            null != t && null != e && e(this.position, t)
                        })
                    }, this._checkBoundsRAF = null, this.checkBounds = () => {
                        null != this._checkBoundsRAF && cancelAnimationFrame(this._checkBoundsRAF), this._checkBoundsRAF = requestAnimationFrame(this._performCheckBounds)
                    }, this._performCheckBounds = () => {
                        let e;
                        let {
                            position: t,
                            state: n,
                            draggableRef: {
                                current: a
                            },
                            props: {
                                maxX: s,
                                maxY: l,
                                onRelocated: i,
                                snapOrientation: r
                            }
                        } = this, {
                            verticalOrientation: o,
                            horizontalOrientation: u
                        } = this.state;
                        if (null == a) return;
                        let {
                            clientHeight: d,
                            clientWidth: I
                        } = a, h = c(t, s, l, I, d);
                        if (h = _(h), r) {
                            e = f(h);
                            let t = E(e);
                            o = t[0], u = t[1]
                        } else e = {
                            top: h.top,
                            left: h.left,
                            right: null,
                            bottom: null
                        };
                        if (t.left === e.left && t.right === e.right && t.top === e.top && t.bottom === e.bottom) return;
                        null == i || i(e, a), this.setDOMPositions(e);
                        let C = 0 === e.top;
                        (o !== n.verticalOrientation || u !== n.horizontalOrientation || C !== n.atTopEdge) && this.setState({
                            verticalOrientation: o,
                            horizontalOrientation: u,
                            atTopEdge: C
                        })
                    };
                    let [t, n] = E(e.initialPosition);
                    this.position = function(e) {
                        let {
                            top: t,
                            left: n,
                            bottom: a,
                            right: s
                        } = e;
                        return null == n && null == s && (n = 0), null != n && null != s && (s = null), null == t && null == a && (t = 0), null != t && null != a && (a = null), {
                            top: t,
                            left: n,
                            bottom: a,
                            right: s
                        }
                    }(e.initialPosition), this.state = {
                        dragging: !1,
                        verticalOrientation: t,
                        horizontalOrientation: n,
                        atTopEdge: 0 === this.position.top
                    }
                }
            }
            h.FlipTypes = l, h.defaultProps = {
                snapOrientation: !1,
                maxX: 0,
                maxY: 0,
                flipVertical: l.DISABLED,
                flipHorizontal: l.DISABLED,
                dragAnywhere: !1
            }
        },
        875358: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("913144"),
                d = n("259083"),
                c = n("778588"),
                E = n("577427"),
                f = n("946749"),
                _ = n("810567"),
                I = n("791776"),
                h = n("780009"),
                C = n("49111"),
                T = n("782340"),
                m = n("948063");
            class S extends s.Component {
                componentDidMount() {
                    document.addEventListener("keydown", this.handleKeyDown)
                }
                componentWillUnmount() {
                    u.default.wait(() => d.updateActiveRowKey(null)), document.removeEventListener("keydown", this.handleKeyDown)
                }
                reset() {
                    d.updateActiveRowKey(null), d.updateLibraryFilter("")
                }
                focusInput() {
                    let {
                        searchBarRef: e
                    } = this;
                    null != e && e.focus()
                }
                updateActiveRow(e) {
                    let {
                        applicationViewItems: t,
                        activeRowKey: n
                    } = this.props, a = t.findIndex(e => e.key === n), s = 0;
                    a >= 0 && (s = (a + e) % t.length) < 0 && (s = t.length - 1);
                    let l = t[s];
                    d.updateActiveRowKey(null != l ? l.key : null, !0)
                }
                render() {
                    let {
                        filterQuery: e
                    } = this.props, {
                        focused: t
                    } = this.state;
                    return (0, a.jsx)("div", {
                        className: i({
                            [m.libraryFilter]: !0,
                            [m.focused]: t
                        }),
                        children: (0, a.jsx)(_.default, {
                            className: m.searchBar,
                            ref: this.setRef,
                            onChange: d.updateLibraryFilter,
                            onFocus: () => this.setState({
                                focused: !0
                            }),
                            onBlur: () => this.setState({
                                focused: !1
                            }),
                            name: "filter",
                            onClear: () => {
                                this.reset(), this.focusInput()
                            },
                            maxLength: 100,
                            query: e,
                            placeholder: T.default.Messages.APPLICATION_LIBRARY_FILTER_PLACEHOLDER
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.searchBarRef = null, this.state = {
                        focused: !1
                    }, this.setRef = e => {
                        this.searchBarRef = e
                    }, this.handleKeyDown = e => {
                        var t;
                        let {
                            activeRowKey: n,
                            hasModalOpen: a,
                            applicationViewItems: s
                        } = this.props, {
                            searchBarRef: l
                        } = this;
                        if (a || e.ctrlKey || e.altKey || e.metaKey || null == l) return;
                        let i = null === (t = (0, I.eventOwnerDocument)(e)) || void 0 === t ? void 0 : t.activeElement;
                        if (!(i !== l.inputRef.current && (0, I.isInputLikeElement)(i))) switch (e.which) {
                            case C.KeyboardKeys.ESCAPE:
                                e.target !== l.inputRef.current ? this.reset() : null != l.inputRef.current && l.blur();
                                break;
                            case C.KeyboardKeys.ENTER:
                                if (null != n) {
                                    e.preventDefault();
                                    let t = s.find(e => e.key === n);
                                    if (null == t) return;
                                    let a = t.libraryApplication;
                                    h.performDefaultLibraryApplicationAction(a, {
                                        analyticsParams: {
                                            source: C.AnalyticsLocations.APPLICATION_LIBRARY,
                                            location: {
                                                page: C.AnalyticsPages.LIBRARY,
                                                section: C.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                                                object: C.AnalyticsObjects.BUTTON_CTA
                                            }
                                        }
                                    })
                                }
                                break;
                            case C.KeyboardKeys.ARROW_DOWN:
                            case C.KeyboardKeys.ARROW_UP:
                                e.preventDefault(), e.stopPropagation(), this.updateActiveRow(e.which === C.KeyboardKeys.ARROW_DOWN ? 1 : -1);
                                break;
                            default:
                                null != l.inputRef.current && e.target !== l.inputRef.current && l.focus()
                        }
                    }
                }
            }

            function N() {
                let e = (0, r.useStateFromStores)([c.default], () => c.default.hasLayers()),
                    t = (0, o.useModalsStore)(o.hasAnyModalOpenSelector);
                return (0, a.jsx)(S, {
                    activeRowKey: (0, r.useStateFromStores)([f.default], () => f.default.activeRowKey),
                    hasModalOpen: t || e,
                    filterQuery: (0, r.useStateFromStores)([E.default], () => E.default.applicationFilterQuery),
                    applicationViewItems: (0, r.useStateFromStores)([E.default], () => E.default.sortedFilteredLibraryApplicationViewItems)
                })
            }
        },
        737295: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("539938"),
                r = n("393414"),
                o = n("880013"),
                u = n("599110"),
                d = n("602043"),
                c = n("49111"),
                E = n("782340"),
                f = n("616567");
            let _ = (0, d.isSupportedPlatform)() || !1;
            var I = s.memo(function(e) {
                let {
                    currentRoute: t,
                    renderToolbar: n
                } = e, d = s.useContext(u.AnalyticsContext), I = _ || t === c.Routes.APPLICATION_LIBRARY_SETTINGS;
                return (0, a.jsxs)(i.default, {
                    className: f.libraryHeader,
                    toolbar: null == n ? void 0 : n(),
                    children: [(0, a.jsx)(i.default.Icon, {
                        icon: o.default,
                        "aria-hidden": !0
                    }), (0, a.jsx)(i.default.Title, {
                        children: E.default.Messages.LIBRARY
                    }), (0, a.jsx)(i.default.Divider, {}), (0, a.jsxs)(l.TabBar, {
                        type: "top-pill",
                        selectedItem: t,
                        onItemSelect: function(e) {
                            e !== t && (0, r.transitionTo)(e, {
                                state: {
                                    analyticsSource: {
                                        ...d.location,
                                        section: c.AnalyticsSections.TABS,
                                        object: c.AnalyticsObjects.NAVIGATION_LINK
                                    }
                                }
                            })
                        },
                        children: [(0, a.jsx)(l.TabBar.Item, {
                            id: c.Routes.APPLICATION_LIBRARY,
                            children: E.default.Messages.APPLICATION_LIBRARY_MY_GAMES
                        }), I ? (0, a.jsx)(l.TabBar.Item, {
                            id: c.Routes.APPLICATION_LIBRARY_SETTINGS,
                            children: E.default.Messages.SETTINGS
                        }) : null]
                    })]
                })
            })
        },
        758997: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("90915"),
                i = n("901582"),
                r = n("73749"),
                o = n("69927"),
                u = n("970366"),
                d = n("661804"),
                c = n("928056"),
                E = n("49111"),
                f = n("782340"),
                _ = n("312079");

            function I() {
                return (0, a.jsxs)(l.Switch, {
                    children: [(0, a.jsx)(r.default, {
                        path: E.Routes.APPLICATION_LIBRARY_SETTINGS,
                        exact: !0,
                        children: (0, a.jsxs)(i.default, {
                            page: E.AnalyticsPages.LIBRARY_SETTINGS,
                            root: !0,
                            children: [(0, a.jsx)(o.AppPageTitle, {
                                subsection: f.default.Messages.SETTINGS
                            }), (0, a.jsx)(c.default, {})]
                        })
                    }), (0, a.jsx)(r.default, {
                        path: E.Routes.APPLICATION_LIBRARY,
                        children: (0, a.jsxs)(i.default, {
                            page: E.AnalyticsPages.LIBRARY,
                            root: !0,
                            children: [(0, a.jsx)(o.AppPageTitle, {
                                subsection: f.default.Messages.APPLICATION_LIBRARY_MY_GAMES
                            }), (0, a.jsx)(d.default, {})]
                        })
                    })]
                })
            }
            var h = s.memo(function() {
                return s.useEffect(() => {
                    (0, u.trackAppUIViewed)("application_library")
                }, []), (0, a.jsxs)("div", {
                    className: _.container,
                    children: [(0, a.jsx)(o.AppPageTitle, {
                        location: f.default.Messages.LIBRARY
                    }), (0, a.jsx)(I, {})]
                })
            })
        },
        950395: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("862337"),
                r = n("77078"),
                o = n("148813"),
                u = n("530311"),
                d = n("858722"),
                c = n("220978"),
                E = n("581454"),
                f = n("49111"),
                _ = n("782340");
            let I = new Set([f.CloudSyncStateTypes.PUSHING, f.CloudSyncStateTypes.PULLING]),
                h = Object.freeze({
                    [f.CloudSyncStateTypes.DONE]: u.default,
                    [f.CloudSyncStateTypes.PLANNING]: u.default,
                    [f.CloudSyncStateTypes.PREPARING]: u.default,
                    [f.CloudSyncStateTypes.PUSHING]: E.default,
                    [f.CloudSyncStateTypes.PULLING]: c.default,
                    [f.CloudSyncStateTypes.CONFLICT]: u.default,
                    [f.CloudSyncStateTypes.ERROR]: u.default
                });
            class C extends s.PureComponent {
                componentDidMount() {
                    this.getIsRecentlySynced() && this.setRecentlySyncedTimeout()
                }
                componentDidUpdate(e) {
                    null != this.props.cloudSyncState && this.props.cloudSyncState.type === f.CloudSyncStateTypes.DONE && null != this.props.cloudSyncState.timestamp && (null == e.cloudSyncState || null == e.cloudSyncState.timestamp) && this.setRecentlySyncedTimeout()
                }
                componentWillUnmount() {
                    this._doneTimer.stop()
                }
                setRecentlySyncedTimeout() {
                    this._doneTimer.start(2e3, () => this.forceUpdate())
                }
                getIsRecentlySynced() {
                    let {
                        cloudSyncState: e
                    } = this.props;
                    if (null != e && e.type === f.CloudSyncStateTypes.DONE) {
                        let t = e.timestamp;
                        return null != t && Date.now() - t <= 2e3
                    }
                    return !1
                }
                getStop(e, t) {
                    if (t) return 1;
                    if (e.type === f.CloudSyncStateTypes.PUSHING || e.type === f.CloudSyncStateTypes.PULLING) {
                        let {
                            progress: t,
                            total: n
                        } = e;
                        return t / n
                    }
                    return 0
                }
                getTooltip(e, t) {
                    switch (e.type) {
                        case f.CloudSyncStateTypes.DONE:
                            if (t) return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_DONE;
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
                        case f.CloudSyncStateTypes.CONFLICT:
                        case f.CloudSyncStateTypes.ERROR:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
                        case f.CloudSyncStateTypes.PLANNING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PLANNING;
                        case f.CloudSyncStateTypes.PREPARING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PREPARING;
                        case f.CloudSyncStateTypes.PUSHING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PUSHING;
                        case f.CloudSyncStateTypes.PULLING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PULLING;
                        default:
                            return null
                    }
                }
                render() {
                    let {
                        cloudSyncState: e,
                        libraryApplication: t,
                        className: n
                    } = this.props, s = null == e ? {
                        type: f.CloudSyncStateTypes.DONE
                    } : e, l = this.getIsRecentlySynced(), i = {};
                    (I.has(s.type) || l) && (i.gradientConfig = {
                        id: t.id,
                        startColor: "rgba(199, 208, 240, 1)",
                        stopColor: "rgba(114, 137, 218, 1)",
                        stop: this.getStop(s, l)
                    });
                    let o = l ? d.default : h[s.type];
                    return (0, a.jsx)(r.Tooltip, {
                        text: this.getTooltip(s, l),
                        children: e => (0, a.jsx)(o, {
                            className: n,
                            ...i,
                            ...e
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this._doneTimer = new i.Timeout
                }
            }
            var T = l.default.connectStores([o.default], e => {
                let {
                    libraryApplication: t
                } = e;
                return {
                    cloudSyncState: o.default.getState(t.id, t.branchId)
                }
            })(C)
        },
        762448: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("641608"),
                o = n("98328"),
                u = n("149851"),
                d = n("145131"),
                c = n("398288"),
                E = n("993105"),
                f = n("773336"),
                _ = n("50885"),
                I = n("782340"),
                h = n("148738"),
                C = n("926622");
            class T extends s.PureComponent {
                renderDiskUsageCircle() {
                    let {
                        metadata: e
                    } = this.props;
                    return null != e && null != e.availableKB && null != e.totalKB ? (0, a.jsx)(u.default, {
                        total: e.totalKB,
                        used: e.totalKB - e.availableKB
                    }) : null
                }
                renderViewing() {
                    let e, t;
                    let {
                        path: n,
                        label: s,
                        editingPath: l,
                        isDefault: r,
                        metadata: u
                    } = this.props;
                    return null != u && (e = null != u.availableKB ? (0, E.formatSize)(u.availableKB, {
                        useKibibytes: !0
                    }) : null, t = null != u.totalKB ? (0, E.formatSize)(u.totalKB, {
                        useKibibytes: !0
                    }) : null), (0, a.jsxs)(d.default, {
                        className: h.installationPath,
                        align: d.default.Align.CENTER,
                        children: [this.renderDiskUsageCircle(), (0, a.jsxs)(d.default, {
                            direction: d.default.Direction.VERTICAL,
                            className: h.descriptionWrapper,
                            children: [(0, a.jsxs)(d.default, {
                                align: d.default.Align.CENTER,
                                children: [(0, a.jsx)(i.Heading, {
                                    className: h.rowTitle,
                                    variant: "heading-md/semibold",
                                    children: null != s ? s : o.default.getLabelFromPath(n)
                                }), r ? (0, a.jsx)("span", {
                                    className: h.defaultIndicator,
                                    children: I.default.Messages.DEFAULT
                                }) : null]
                            }), null != u && null != e && null != t ? (0, a.jsx)(c.default, {
                                className: h.rowBody,
                                hoverText: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_SPACE.format({
                                    available: e,
                                    total: t
                                }),
                                children: n
                            }) : (0, a.jsx)(i.Text, {
                                className: h.rowBody,
                                variant: "text-xs/normal",
                                children: n
                            })]
                        }), (0, a.jsx)(i.Button, {
                            size: i.Button.Sizes.SMALL,
                            disabled: null != l,
                            color: i.Button.Colors.PRIMARY,
                            onClick: this.handleStartEditing,
                            children: I.default.Messages.EDIT
                        })]
                    })
                }
                renderEditing() {
                    let {
                        path: e,
                        hasGamesInstalledInPath: t
                    } = this.props, {
                        label: n,
                        isDefault: s
                    } = this.state;
                    return (0, a.jsx)(i.Card, {
                        editable: !0,
                        className: h.installationPathEditing,
                        children: (0, a.jsxs)(d.default, {
                            children: [this.renderDiskUsageCircle(), (0, a.jsxs)(d.default.Child, {
                                children: [(0, a.jsx)(i.FormItem, {
                                    title: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_NAME,
                                    children: (0, a.jsx)(i.TextInput, {
                                        value: n,
                                        placeholder: o.default.getLabelFromPath(e),
                                        onChange: this.handleLabelChange
                                    })
                                }), (0, a.jsx)(i.FormItem, {
                                    title: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION,
                                    className: C.marginTop20,
                                    children: (0, a.jsx)(i.TextInput, {
                                        disabled: !0,
                                        value: e
                                    })
                                }), (0, a.jsx)(i.Checkbox, {
                                    type: i.Checkbox.Types.INVERTED,
                                    value: null != s ? s : this.props.isDefault,
                                    disabled: this.props.isDefault,
                                    className: h.defaultLocationCheckbox,
                                    onChange: this.handleToggleDefault,
                                    children: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_MAKE_DEFAULT
                                }), (0, a.jsx)(i.FormDivider, {
                                    className: h.separator
                                }), (0, a.jsxs)(d.default, {
                                    children: [(0, a.jsx)(i.Button, {
                                        disabled: t || this.props.isDefault,
                                        size: i.Button.Sizes.SMALL,
                                        color: i.Button.Colors.RED,
                                        look: i.Button.Looks.OUTLINED,
                                        onClick: this.handleRemoveLocation,
                                        children: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE
                                    }), (0, a.jsxs)(d.default, {
                                        justify: d.default.Justify.END,
                                        children: [(0, a.jsx)(i.Button, {
                                            size: i.Button.Sizes.SMALL,
                                            color: i.Button.Colors.PRIMARY,
                                            look: i.Button.Looks.LINK,
                                            onClick: this.handleStopEditing,
                                            children: I.default.Messages.CANCEL
                                        }), (0, a.jsx)(i.Button, {
                                            disabled: e === this.props.path && n === this.props.label && s === this.props.isDefault,
                                            size: i.Button.Sizes.SMALL,
                                            color: i.Button.Colors.GREEN,
                                            onClick: this.handleSaveChanges,
                                            children: I.default.Messages.SAVE
                                        })]
                                    })]
                                })]
                            })]
                        })
                    })
                }
                render() {
                    return this.props.editingPath === this.props.path ? this.renderEditing() : this.renderViewing()
                }
                constructor(...e) {
                    super(...e), this.state = {
                        label: void 0,
                        isDefault: null
                    }, this.handleStartEditing = () => {
                        let {
                            path: e,
                            label: t,
                            isDefault: n,
                            onToggleEditing: a
                        } = this.props;
                        a(e), this.setState({
                            label: t,
                            isDefault: n
                        })
                    }, this.handleStopEditing = () => {
                        let {
                            onToggleEditing: e
                        } = this.props;
                        e(null), this.setState({
                            label: void 0,
                            isDefault: null
                        })
                    }, this.handleRemoveLocation = () => {
                        (0, i.openModal)(e => (0, a.jsx)(i.ConfirmModal, {
                            ...e,
                            header: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                            confirmText: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                            cancelText: I.default.Messages.CANCEL,
                            onConfirm: () => {
                                this.handleStopEditing(), (0, r.removeInstallLocation)(this.props.path)
                            },
                            children: (0, a.jsx)(i.Text, {
                                variant: "text-md/normal",
                                children: I.default.Messages.USER_SETTINGS_GAMES_REMOVE_LOCATION_BODY
                            })
                        }))
                    }, this.handleSaveChanges = () => {
                        (0, r.updateInstallLocation)(this.props.path, {
                            label: null != this.state.label ? this.state.label : this.props.label,
                            isDefault: null != this.state.isDefault ? this.state.isDefault : this.props.isDefault
                        }), this.handleStopEditing()
                    }, this.handleLabelChange = e => {
                        this.setState({
                            label: e
                        })
                    }, this.handleToggleDefault = () => {
                        this.setState({
                            isDefault: !this.state.isDefault
                        })
                    }
                }
            }
            class m extends s.PureComponent {
                componentDidMount() {
                    (0, r.fetchMetadata)(this.props.installationPaths.map(e => {
                        let {
                            path: t
                        } = e;
                        return t
                    }))
                }
                render() {
                    let {
                        installationPaths: e,
                        installationPathsMetadata: t,
                        defaultInstallationPath: n
                    } = this.props, {
                        editingPath: s
                    } = this.state;
                    return (0, a.jsxs)(i.FormSection, {
                        className: h.wrapper,
                        title: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATIONS,
                        children: [e.map(e => {
                            let {
                                path: l,
                                label: i
                            } = e;
                            return (0, a.jsx)(T, {
                                path: l,
                                label: i,
                                metadata: t[l],
                                isDefault: n === l,
                                editingPath: s,
                                hasGamesInstalledInPath: o.default.hasGamesInstalledInPath(l),
                                onToggleEditing: this.handleToggleEditing
                            }, l)
                        }), (0, a.jsx)("div", {
                            className: h.buttonRowWrapper,
                            children: (0, a.jsx)(i.Button, {
                                disabled: !f.isPlatformEmbedded,
                                onClick: this.handleAddInstallationLocation,
                                size: i.Button.Sizes.SMALL,
                                children: I.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_ADD
                            })
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        editingPath: null
                    }, this.handleAddInstallationLocation = () => {
                        _.default.showOpenDialog(["openDirectory"]).then(e => {
                            null != e && 0 !== e.length && null != e[0] && "undefined" !== e[0] && (0, r.addInstallLocation)(e[0])
                        })
                    }, this.handleToggleEditing = e => {
                        this.setState({
                            editingPath: e
                        })
                    }
                }
            }
            var S = l.default.connectStores([o.default], () => ({
                installationPaths: o.default.installationPaths,
                installationPathsMetadata: o.default.installationPathsMetadata,
                defaultInstallationPath: o.default.defaultInstallationPath
            }))(m)
        },
        661804: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("913144"),
                u = n("939488"),
                d = n("157552"),
                c = n("444949"),
                E = n("901582"),
                f = n("778043"),
                _ = n("875358"),
                I = n("737295"),
                h = n("153034"),
                C = n("129215"),
                T = n("49111"),
                m = n("677654");
            class S extends s.PureComponent {
                componentDidMount() {
                    u.setHomeLink(T.Routes.APPLICATION_LIBRARY), (0, f.deepLinkRouteIfLanded)(T.RPCDeepLinks.LIBRARY), o.default.wait(() => (0, d.fetchBranches)()), (0, c.fetchActivityStatistics)(), null != this._scrollToOnMount && null != this._scrollerRef.current && this.scrollToRow(this._scrollToOnMount, this._scrollToPadding)
                }
                renderToolbar() {
                    return (0, a.jsx)(_.default, {})
                }
                render() {
                    let {
                        includeUpdatesInScroller: e
                    } = this.state, t = (0, a.jsx)("div", {
                        children: (0, a.jsx)(E.default, {
                            section: T.AnalyticsSections.LIBRARY_INSTALL_MODULE,
                            children: (0, a.jsx)(C.default, {
                                onHeightTallerThanHalfViewportChange: this.handleHeightTallerThanHalfViewportChange
                            })
                        })
                    });
                    return (0, a.jsxs)(s.Fragment, {
                        children: [(0, a.jsx)(I.default, {
                            currentRoute: T.Routes.APPLICATION_LIBRARY,
                            renderToolbar: this.renderToolbar
                        }), e ? null : t, (0, a.jsxs)(r.AdvancedScrollerAuto, {
                            className: i(m.container, m.scroller),
                            ref: this._scrollerRef,
                            children: [e ? t : null, (0, a.jsx)(E.default, {
                                section: T.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                                children: (0, a.jsx)(h.default, {
                                    stickyHeader: !e,
                                    scrollToRow: this.scrollToRow
                                })
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this._scrollerRef = s.createRef(), this._scrollToPadding = 0, this.state = {
                        includeUpdatesInScroller: !1
                    }, this.handleHeightTallerThanHalfViewportChange = e => {
                        this.setState({
                            includeUpdatesInScroller: e
                        })
                    }, this.scrollToRow = (e, t) => {
                        let n = this._scrollerRef.current;
                        null != n ? (e.focus(), n.scrollIntoViewRect({
                            start: t,
                            end: t
                        }), this._scrollToOnMount = null) : (this._scrollToOnMount = e, this._scrollToPadding = t)
                    }
                }
            }
        },
        928056: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("438931"),
                o = n("845579"),
                u = n("577427"),
                d = n("145131"),
                c = n("945330"),
                E = n("599110"),
                f = n("568734"),
                _ = n("602043"),
                I = n("737295"),
                h = n("762448"),
                C = n("49111"),
                T = n("782340"),
                m = n("352561");

            function S(e) {
                let {
                    applicationViewItems: t,
                    restoreApplication: n
                } = e;
                if (0 === t.length) return null;
                let s = t.map(e => {
                    let t = e.libraryApplication.getDistributor();
                    return (0, a.jsxs)("div", {
                        className: m.hiddenLibraryApplication,
                        children: [(0, a.jsxs)(d.default, {
                            direction: d.default.Direction.VERTICAL,
                            className: m.hiddenLibraryApplicationContent,
                            children: [(0, a.jsx)("div", {
                                className: m.applicationName,
                                children: e.libraryApplication.getBranchedName(e.application)
                            }), null != t ? (0, a.jsx)("div", {
                                className: m.applicationSubText,
                                children: C.DistributorNames[t]
                            }) : null]
                        }), (0, a.jsx)(i.Clickable, {
                            className: m.restoreButton,
                            onClick: () => n(e.libraryApplication),
                            children: (0, a.jsx)(c.default, {
                                className: m.restoreIcon
                            })
                        })]
                    }, e.key)
                });
                return (0, a.jsxs)(i.FormSection, {
                    className: m.hiddenLibraryApplications,
                    children: [(0, a.jsx)(i.FormTitle, {
                        className: m.hiddenLibraryApplicationsTitle,
                        children: T.default.Messages.SETTINGS_GAMES_HIDDEN_LIBRARY_APPLICATIONS_LABEL
                    }), s]
                })
            }
            class N extends s.PureComponent {
                handleToggleShortcutDesktop(e) {
                    o.InstallShortcutDesktop.updateSetting(e)
                }
                handleToggleShortcutStartMenu(e) {
                    o.InstallShortcutStartMenu.updateSetting(e)
                }
                trackRestoreApplication(e, t) {
                    E.default.track(C.AnalyticEvents.APPLICATION_SETTINGS_UPDATED, {
                        hidden_enabled: t,
                        ...e.getAnalyticsData()
                    })
                }
                renderBody() {
                    let {
                        hiddenLibraryApplicationViewItems: e,
                        installShortcutDesktop: t,
                        installShortcutStartMenu: n
                    } = this.props;
                    return (0, a.jsxs)("div", {
                        className: m.body,
                        children: [(0, _.isSupportedPlatform)() ? (0, a.jsxs)(s.Fragment, {
                            children: [(0, a.jsx)(i.FormSwitch, {
                                value: t,
                                onChange: this.handleToggleShortcutDesktop,
                                note: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP_NOTE,
                                children: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP
                            }), (0, a.jsx)(i.FormSwitch, {
                                value: n,
                                onChange: this.handleToggleShortcutStartMenu,
                                note: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_START_MENU_NOTE,
                                children: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_START_MENU
                            }), (0, a.jsx)(h.default, {})]
                        }) : null, (0, a.jsx)(S, {
                            restoreApplication: this.handleRestoreHiddenLibraryApplication,
                            applicationViewItems: e
                        })]
                    })
                }
                render() {
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(I.default, {
                            currentRoute: C.Routes.APPLICATION_LIBRARY_SETTINGS
                        }), (0, a.jsx)(i.ScrollerAuto, {
                            className: m.scroller,
                            children: this.renderBody()
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleRestoreHiddenLibraryApplication = e => {
                        let t = f.toggleFlag(e.getFlags(), C.LibraryApplicationFlags.HIDDEN);
                        r.updateFlags(e.id, e.branchId, t), this.trackRestoreApplication(e, f.hasFlag(t, C.LibraryApplicationFlags.HIDDEN))
                    }
                }
            }

            function A() {
                let e = {
                    installShortcutDesktop: o.InstallShortcutDesktop.useSetting(),
                    installShortcutStartMenu: o.InstallShortcutStartMenu.useSetting(),
                    hiddenLibraryApplicationViewItems: (0, l.useStateFromStores)([u.default], () => u.default.hiddenLibraryApplicationViewItems)
                };
                return (0, a.jsx)(N, {
                    ...e
                })
            }
        },
        153034: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return B
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("90915"),
                o = n("446674"),
                u = n("862337"),
                d = n("769846"),
                c = n("77078"),
                E = n("913144"),
                f = n("272030"),
                _ = n("259083"),
                I = n("790219"),
                h = n("827825"),
                C = n("577427"),
                T = n("946749"),
                m = n("145131"),
                S = n("953109"),
                N = n("280174"),
                A = n("158352"),
                p = n("867544"),
                g = n("216422"),
                R = n("688342"),
                O = n("599110"),
                L = n("964889"),
                M = n("159885"),
                v = n("950395"),
                D = n("49111"),
                x = n("782340"),
                P = n("304686");
            let y = (0, M.cssValueToNumber)(d.default.GAME_LIST_ROW_MIN_HEIGHT),
                b = (0, M.cssValueToNumber)(d.default.GAME_LIST_LINKED_TO_GLOW_DURATION),
                U = Object.freeze({
                    [D.GameTableListKeys.PLATFORM]: "Platform",
                    [D.GameTableListKeys.LAST_PLAYED]: "Last Played",
                    [D.GameTableListKeys.NAME]: "Name"
                }),
                G = e => {
                    let {
                        flag: t,
                        icon: n,
                        item: s,
                        tooltip: l
                    } = e, r = s.libraryApplication.hasFlag(t);
                    return (0, a.jsx)(c.Tooltip, {
                        text: l,
                        children: e => (0, a.jsx)(n, {
                            className: i(P.settingIcon, {
                                [P.hidden]: !r
                            }),
                            ...e
                        })
                    })
                },
                j = [{
                    key: D.GameTableListKeys.NAME,
                    renderHeader: () => x.default.Messages.GAME_LIBRARY_LIST_HEADER_NAME,
                    sort: !0,
                    cellClassName: P.nameCell,
                    bodyCellClassName: P.nameBodyCell,
                    render: e => (0, a.jsxs)(m.default, {
                        align: m.default.Align.CENTER,
                        children: [(0, a.jsx)(S.default, {
                            game: e.application,
                            size: S.default.Sizes.SMALL,
                            className: P.gameIcon
                        }), (0, a.jsxs)("div", {
                            className: P.nameCellInfo,
                            children: [(0, a.jsx)("div", {
                                className: P.nameCellText,
                                children: e.libraryApplication.getBranchedName(e.application)
                            }), e.libraryApplication.hasFlag(D.LibraryApplicationFlags.PREMIUM) ? (0, a.jsx)(c.Tooltip, {
                                text: x.default.Messages.PREMIUM_GAME,
                                children: e => (0, a.jsx)(g.default, {
                                    className: P.nitroIcon,
                                    ...e
                                })
                            }) : null]
                        })]
                    })
                }, {
                    key: D.GameTableListKeys.PLATFORM,
                    renderHeader: () => x.default.Messages.GAME_LIBRARY_LIST_HEADER_PLATFORM,
                    sort: !0,
                    cellClassName: P.platformCell,
                    bodyCellClassName: P.textCell,
                    render(e) {
                        let t = e.libraryApplication.getDistributor();
                        return (0, a.jsx)(m.default, {
                            align: m.default.Align.CENTER,
                            children: null != t ? D.DistributorNames[t] : x.default.Messages.GAME_LIBRARY_NOT_APPLICABLE
                        })
                    }
                }, {
                    key: D.GameTableListKeys.LAST_PLAYED,
                    renderHeader: () => x.default.Messages.GAME_LIBRARY_LIST_HEADER_LAST_PLAYED,
                    sort: !0,
                    cellClassName: P.lastPlayedCell,
                    bodyCellClassName: P.textCell,
                    render(e) {
                        let t;
                        return t = e.isRunning ? x.default.Messages.GAME_LIBRARY_LAST_PLAYED_PLAYING_NOW : e.isNew ? x.default.Messages.GAME_LIBRARY_NEW : 0 !== e.lastPlayed ? (0, a.jsx)(N.default, {
                            end: e.lastPlayed,
                            location: N.default.Locations.GAME_LIBRARY_LAST_PLAYED
                        }) : x.default.Messages.GAME_LIBRARY_LAST_PLAYED_NONE, (0, a.jsx)(m.default, {
                            align: m.default.Align.CENTER,
                            className: i({
                                [P.lastPlayedCellNew]: e.isNew
                            }),
                            children: t
                        })
                    }
                }, {
                    key: D.GameTableListKeys.ACTIONS,
                    renderHeader: () => null,
                    cellClassName: P.actionsCell,
                    render(e, t, n) {
                        var l, r;
                        if (null == t) throw Error("No cell props defined.");
                        let o = e.key === t.activeRowKey;
                        return (0, a.jsxs)(s.Fragment, {
                            children: [(0, a.jsxs)("div", {
                                className: P.settingIcons,
                                children: [(0, a.jsx)(G, {
                                    flag: D.LibraryApplicationFlags.PRIVATE,
                                    item: e,
                                    icon: p.default,
                                    tooltip: x.default.Messages.GAME_LIBRARY_PRIVATE_TOOLTIP
                                }), (0, a.jsx)(G, {
                                    flag: D.LibraryApplicationFlags.OVERLAY_DISABLED,
                                    item: e,
                                    icon: R.default,
                                    tooltip: x.default.Messages.GAME_LIBRARY_OVERLAY_DISABLED_TOOLTIP
                                }), (0, a.jsx)(v.default, {
                                    className: i(P.settingIcon, {
                                        [P.hidden]: !e.supportsCloudSync
                                    }),
                                    libraryApplication: e.libraryApplication
                                })]
                            }), (0, L.isUserEntitledToLibraryApplication)(e.libraryApplication) ? (0, a.jsx)(h.default, {
                                analyticsListSort: (l = t.sortKey, r = t.sortDirection, "".concat(U[l], " ").concat(r === D.TableSortDirections.ASCENDING ? "ASC" : "DESC")),
                                analyticsListIndex: n,
                                source: D.AnalyticsLocations.APPLICATION_LIBRARY,
                                libraryApplication: e.libraryApplication,
                                color: o ? c.Button.Colors.GREEN : c.Button.Colors.PRIMARY,
                                isPlayShiny: o && e.defaultAction === D.LibraryApplicationActions.PLAY,
                                size: P.actionButtonSize,
                                hideProgress: null != e.defaultAction,
                                onDropdownOpen: () => null != t && t.setActiveRowKey(e),
                                onDropdownClose: () => null != t && t.clearActiveRowKey()
                            }) : (0, a.jsx)(I.default, {
                                skuId: e.libraryApplication.sku.id,
                                applicationId: e.application.id,
                                color: o ? c.Button.Colors.GREEN : c.Button.Colors.PRIMARY,
                                customDisabledColor: c.Button.Colors.PRIMARY,
                                size: P.actionButtonSize
                            })]
                        })
                    }
                }],
                F = e => {
                    let {
                        item: t,
                        activeRowKey: n,
                        highlightedApplicationKey: s,
                        onMouseEnter: l,
                        onMouseLeave: r,
                        onContextMenu: o,
                        setRef: u,
                        ...d
                    } = e, c = t.key === n, E = t.key === s;
                    return (0, a.jsx)("div", {
                        className: i({
                            [P.rowWrapperActive]: c && !E,
                            [P.rowWrapperGlow]: E,
                            [P.rowWrapper]: !c && !E,
                            [P.rowWrapperDim]: !c && !t.isLaunchable
                        }),
                        ref: e => u(e, t.key),
                        onMouseEnter: () => l(t),
                        onMouseLeave: r,
                        onContextMenu: e => o(e, t),
                        children: (0, a.jsx)("div", {
                            ...d
                        })
                    })
                };
            class k extends s.PureComponent {
                componentDidMount() {
                    let {
                        fetched: e
                    } = this.props;
                    e && (this.handleHighlightedApplicationKey(), this.trackViewed())
                }
                componentWillUnmount() {
                    this._didUnmount = !0
                }
                componentDidUpdate(e) {
                    !e.fetched && this.props.fetched && (this.handleHighlightedApplicationKey(), this.trackViewed());
                    let t = this.props.activeRowKey;
                    if (null != t && e.activeRowKey !== t && this.props.isNavigatingByKeyboard) {
                        let e = this._rowRefs[t];
                        null != e && (E.default.wait(f.closeContextMenu), this.props.scrollToRow(e, y))
                    }
                }
                handleHighlightedApplicationKey() {
                    let {
                        highlightedApplicationKey: e
                    } = this.state;
                    if (null != e && null != this._rowRefs[e]) {
                        this.props.scrollToRow(this._rowRefs[e], y);
                        let t = new u.Timeout;
                        t.start(b, () => {
                            !this._didUnmount && this.setState({
                                highlightedApplicationKey: null
                            })
                        })
                    }
                }
                trackViewed() {
                    let e = {
                            num_applications_total: 0,
                            num_applications_discord: 0,
                            num_applications_steam: 0,
                            num_applications_battlenet: 0,
                            num_applications_twitch: 0,
                            num_applications_uplay: 0,
                            num_applications_origin: 0,
                            num_applications_gog: 0,
                            num_applications_epic: 0
                        },
                        {
                            analyticsContext: t,
                            applicationViewItems: n
                        } = this.props;
                    for (let t of n) {
                        switch (t.libraryApplication.getDistributor()) {
                            case D.Distributors.DISCORD:
                                e.num_applications_discord++;
                                break;
                            case D.Distributors.STEAM:
                                e.num_applications_steam++;
                                break;
                            case D.Distributors.BATTLENET:
                                e.num_applications_battlenet++;
                                break;
                            case D.Distributors.TWITCH:
                                e.num_applications_twitch++;
                                break;
                            case D.Distributors.UPLAY:
                                e.num_applications_uplay++;
                                break;
                            case D.Distributors.ORIGIN:
                                e.num_applications_origin++;
                                break;
                            case D.Distributors.GOG:
                                e.num_applications_gog++;
                                break;
                            case D.Distributors.EPIC:
                                e.num_applications_epic++
                        }
                        e.num_applications_total++
                    }
                    O.default.track(D.AnalyticEvents.LIBRARY_VIEWED, {
                        ...e,
                        load_id: t.loadId
                    })
                }
                handleSort(e, t) {
                    _.sortList(e, t)
                }
                renderImportHelp() {
                    let e;
                    let {
                        applicationViewItems: t,
                        filterQuery: n
                    } = this.props, s = t.length > 0;
                    return s ? null : (e = "" !== n ? x.default.Messages.APPLICATION_LIBRARY_EMPTY_SEARCH_DESCRIPTION.format({
                        query: n
                    }) : x.default.Messages.APPLICATION_LIBRARY_EMPTY_STATE_DESCRIPTION_NO_IMPORT, (0, a.jsxs)("div", {
                        className: s ? P.emptyStateSmall : P.emptyStateLarge,
                        children: [(0, a.jsx)("div", {
                            className: P.emptyWumpus
                        }), (0, a.jsx)(m.default, {
                            grow: 0,
                            shrink: s ? 1 : 0,
                            direction: m.default.Direction.VERTICAL,
                            children: (0, a.jsxs)("div", {
                                className: P.emptyStateText,
                                children: [(0, a.jsx)("div", {
                                    className: P.emptyStateHeader,
                                    children: x.default.Messages.APPLICATION_LIBRARY_EMPTY_STATE_HEADER
                                }), (0, a.jsx)("div", {
                                    className: P.emptyStateDescription,
                                    children: e
                                })]
                            })
                        })]
                    }))
                }
                render() {
                    let {
                        sortKey: e,
                        sortDirection: t,
                        applicationViewItems: n,
                        activeRowKey: l,
                        stickyHeader: i
                    } = this.props, {
                        overflowMenuRowKey: r,
                        highlightedApplicationKey: o
                    } = this.state;
                    return (0, a.jsxs)(s.Fragment, {
                        children: [n.length > 0 ? (0, a.jsx)(A.default, {
                            columns: j,
                            data: n,
                            sortData: !1,
                            rowComponent: F,
                            className: P.table,
                            headerClassName: i ? P.stickyHeader : P.header,
                            headerCellClassName: P.headerCell,
                            sortedHeaderCellClassName: P.headerCellSorted,
                            bodyCellClassName: P.bodyCell,
                            rowClassName: P.row,
                            sortKey: e,
                            sortDirection: t,
                            stickyHeader: i,
                            rowProps: {
                                activeRowKey: null != r ? r : l,
                                highlightedApplicationKey: o,
                                onMouseEnter: this.handleRowMouseEnter,
                                onMouseLeave: this.handleRowMouseLeave,
                                onContextMenu: this.handleApplicationContextMenu,
                                setRef: this.setRowRef
                            },
                            cellProps: {
                                activeRowKey: null != r ? r : l,
                                onContextMenu: this.handleApplicationContextMenu,
                                setActiveRowKey: this.setActiveRowKey,
                                clearActiveRowKey: this.clearActiveRowKey,
                                sortKey: e,
                                sortDirection: t
                            },
                            onSort: this.handleSort
                        }) : null, this.renderImportHelp()]
                    })
                }
                constructor(...e) {
                    super(...e), this._didUnmount = !1, this._rowRefs = {}, this.state = {
                        overflowMenuRowKey: null,
                        highlightedApplicationKey: null != this.props.location.state ? this.props.location.state.applicationId : null
                    }, this.setActiveRowKey = e => {
                        this.setState({
                            overflowMenuRowKey: e.key
                        })
                    }, this.clearActiveRowKey = () => {
                        !this._didUnmount && this.setState({
                            overflowMenuRowKey: null
                        })
                    }, this.handleRowMouseEnter = e => {
                        !this.props.isNavigatingByKeyboard && _.updateActiveRowKey(e.key)
                    }, this.handleRowMouseLeave = () => {
                        !this.props.isNavigatingByKeyboard && _.updateActiveRowKey(null)
                    }, this.setRowRef = (e, t) => {
                        this._rowRefs[t] = e
                    }, this.handleApplicationContextMenu = (e, t) => {
                        this.setActiveRowKey(t);
                        let {
                            analyticsContext: s
                        } = this.props;
                        (0, f.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("975419").then(n.bind(n, "975419"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                applicationId: t.libraryApplication.id,
                                branchId: t.libraryApplication.branchId,
                                analyticsContext: s
                            })
                        }, {
                            onClose: this.clearActiveRowKey
                        })
                    }
                }
            }

            function B(e) {
                let t = s.useContext(O.AnalyticsContext),
                    n = (0, r.useLocation)(),
                    {
                        applicationViewItems: l,
                        filterQuery: i,
                        fetched: u
                    } = (0, o.useStateFromStoresObject)([C.default], () => ({
                        applicationViewItems: C.default.sortedFilteredLibraryApplicationViewItems,
                        filterQuery: C.default.applicationFilterQuery,
                        fetched: C.default.hasFetchedApplications
                    })),
                    {
                        sortKey: d,
                        sortDirection: c,
                        activeRowKey: E,
                        isNavigatingByKeyboard: f
                    } = (0, o.useStateFromStoresObject)([T.default], () => ({
                        sortKey: T.default.sortKey,
                        sortDirection: T.default.sortDirection,
                        activeRowKey: T.default.activeRowKey,
                        isNavigatingByKeyboard: T.default.isNavigatingByKeyboard
                    }));
                return (0, a.jsx)(k, {
                    ...e,
                    analyticsContext: t,
                    location: n,
                    applicationViewItems: l,
                    filterQuery: i,
                    fetched: u,
                    sortKey: d,
                    sortDirection: c,
                    activeRowKey: E,
                    isNavigatingByKeyboard: f
                })
            }
            k.defaultProps = {
                stickyHeader: !1
            }
        },
        449427: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("449918"),
                r = n("145131"),
                o = n("833923"),
                u = n("318042"),
                d = n("782340"),
                c = n("391269"),
                E = function(e) {
                    var t;
                    let {
                        title: n,
                        className: s,
                        color: E,
                        animate: f,
                        gradientStopColor: _,
                        getHistoricalTotalBytes: I
                    } = e, h = (0, i.useColorValue)(E).hex, C = null === (t = (0, i.useColorValue)(_)) || void 0 === t ? void 0 : t.hex;
                    return (0, a.jsx)(u.default, {
                        getHistoricalTotalBytes: I,
                        children: (e, t, i) => {
                            var u;
                            return (0, a.jsx)("div", {
                                className: l(c.monitor, s),
                                children: (0, a.jsxs)(r.default, {
                                    align: r.default.Align.CENTER,
                                    children: [(0, a.jsxs)(r.default, {
                                        className: c.text,
                                        direction: r.default.Direction.VERTICAL,
                                        children: [(0, a.jsx)("div", {
                                            className: c.title,
                                            children: n
                                        }), (0, a.jsx)("div", {
                                            className: c.rate,
                                            children: (u = e[e.length - 1] / t * 1e3) > 1e3 ? d.default.Messages.FILE_RATE_MB.format({
                                                size: Math.round(u / 1e3)
                                            }) : d.default.Messages.FILE_RATE_KB.format({
                                                size: Math.round(u)
                                            })
                                        })]
                                    }), (0, a.jsx)("div", {
                                        className: c.overflowContainer,
                                        children: (0, a.jsx)(o.default, {
                                            data: e,
                                            maxValue: Math.max(Math.max.apply(null, e), 1e3),
                                            className: c.sparkChart,
                                            updateInterval: t,
                                            color: h,
                                            gradientStopColor: C,
                                            numUpdatesToShow: i,
                                            animate: f,
                                            pixelWidth: 600,
                                            pixelHeight: 48,
                                            lineWidth: 4
                                        })
                                    })]
                                })
                            })
                        }
                    })
                }
        },
        129215: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ea
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("446674"),
                d = n("669491"),
                c = n("819855"),
                E = n("77078"),
                f = n("913144"),
                _ = n("272030"),
                I = n("190017"),
                h = n("827825"),
                C = n("86621"),
                T = n("737960"),
                m = n("449918"),
                S = n("161778"),
                N = n("546463"),
                A = n("686470"),
                p = n("535974"),
                g = n("352326"),
                R = n("471671"),
                O = n("145131"),
                L = n("953109"),
                M = n("280174"),
                v = n("158352"),
                D = n("546671"),
                x = n("945330"),
                P = n("830837"),
                y = n("132755"),
                b = n("993105"),
                U = n("964889"),
                G = n("318042"),
                j = n("449427"),
                F = n("49111"),
                k = n("782340"),
                B = n("918702");
            let w = e => {
                    let {
                        className: t,
                        children: n,
                        onContextMenu: s,
                        item: l
                    } = e;
                    return (0, a.jsx)("div", {
                        className: t,
                        onContextMenu: e => s(e, l),
                        children: n
                    })
                },
                H = [d.default.unsafe_rawColors.BLUE_345.css, d.default.colors.INTERACTIVE_NORMAL.css],
                V = e => {
                    let {
                        tooltip: t,
                        onClick: n,
                        icon: s
                    } = e;
                    return (0, a.jsx)(E.Tooltip, {
                        text: t,
                        children: e => {
                            let {
                                onMouseEnter: l,
                                onMouseLeave: i
                            } = e;
                            return (0, a.jsx)(E.Button, {
                                "aria-label": t,
                                className: B.actionButton,
                                innerClassName: B.actionButtonContents,
                                color: E.Button.Colors.PRIMARY,
                                size: E.Button.Sizes.ICON,
                                onClick: n,
                                onMouseEnter: l,
                                onMouseLeave: i,
                                children: (0, a.jsx)(s, {
                                    className: B.actionIcon
                                })
                            })
                        }
                    })
                };

            function Y(e, t) {
                switch (t) {
                    case F.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
                    case F.DispatchApplicationStages.PLANNING:
                    case F.DispatchApplicationStages.FINALIZING:
                    case F.DispatchApplicationStages.ALLOCATING_DISK:
                        return "".concat(e);
                    default:
                        return (0, b.formatSize)(e, {
                            useKibibytes: !0
                        })
                }
            }
            let W = {
                [F.LocalDispatchApplicationStates.INSTALLING]: {
                    [M.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [M.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [M.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [M.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                },
                [F.LocalDispatchApplicationStates.UPDATING]: {
                    [M.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [M.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [M.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [M.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                },
                [F.LocalDispatchApplicationStates.REPAIRING]: {
                    [M.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [M.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [M.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [M.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                }
            };

            function K(e, t, n, a, s) {
                let l = W[t],
                    i = null != l ? Object.keys(l) : [],
                    {
                        unit: r,
                        time: o
                    } = (0, M.getTimeAndUnit)(null != e ? e / 60 : null, i);
                if (null != l && null != r) {
                    let e = l[r];
                    return null != e ? e(n, a, s, o) : null
                }
                return null
            }

            function z(e) {
                let {
                    type: t,
                    stage: n,
                    percent: a,
                    progress: s,
                    total: l,
                    secondsRemaining: i
                } = e, r = Y(l, n), o = Y(s, n);
                switch (n) {
                    case F.DispatchApplicationStages.QUEUED:
                        if (0 === s) return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER_NO_TRANSITION;
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case F.DispatchApplicationStages.PLANNING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PLANNING.format({
                            percent: a
                        });
                    case F.DispatchApplicationStages.ALLOCATING_DISK:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_ALLOCATING_DISK.format({
                            percent: a
                        });
                    case F.DispatchApplicationStages.PATCHING:
                        return K(i, t, a, o, r);
                    case F.DispatchApplicationStages.FINALIZING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINALIZING.format({
                            percent: a
                        });
                    case F.DispatchApplicationStages.PAUSING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case F.DispatchApplicationStages.VERIFYING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_VERIFYING.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case F.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_POST_INSTALL_SCRIPTS.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case F.DispatchApplicationStages.REPAIRING:
                        if (t === F.LocalDispatchApplicationStates.REPAIRING) return K(i, t, a, o, r);
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_REPAIRING.format({
                            percent: a,
                            progress: o,
                            total: r
                        })
                }
                throw Error("Invalid Dispatch stage")
            }
            let q = {
                NAME: "name",
                PROGRESS: "progress",
                ACTIONS: "actions"
            };
            class Q extends s.PureComponent {
                get isFocused() {
                    let {
                        cellProps: e
                    } = this.props;
                    return null != e && e.isFocused
                }
                renderBody(e) {
                    let {
                        percent: t,
                        foregroundColor: n,
                        foregroundGradientColor: s,
                        message: l
                    } = e;
                    return (0, a.jsxs)(O.default, {
                        direction: O.default.Direction.VERTICAL,
                        children: [(0, a.jsx)(E.Progress, {
                            percent: t,
                            size: E.Progress.Sizes.SMALL,
                            foregroundColor: (0, m.getColor)(n),
                            foregroundGradientColor: null != s ? [(0, m.getColor)(s[0]), (0, m.getColor)(s[1])] : void 0,
                            animate: this.isFocused
                        }), (0, a.jsx)("div", {
                            className: B.progressCellText,
                            children: null != l ? l : ""
                        })]
                    })
                }
                renderStackedProgress(e) {
                    let {
                        percents: t,
                        message: n
                    } = e;
                    return (0, a.jsxs)(O.default, {
                        direction: O.default.Direction.VERTICAL,
                        children: [(0, a.jsx)(E.StackedProgress, {
                            percents: t,
                            size: E.Progress.Sizes.SMALL,
                            foregroundColors: H,
                            animate: this.isFocused
                        }), (0, a.jsx)("div", {
                            className: B.progressCellText,
                            children: null != n ? n : ""
                        })]
                    })
                }
                renderFinished() {
                    let {
                        item: e
                    } = this.props;
                    return this.renderBody({
                        message: k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINISHED.format({
                            remove: () => I.removeFinished(e.applicationId, e.branchId)
                        }),
                        foregroundColor: (0, c.isThemeLight)(e.theme) ? F.Color.PRIMARY_300 : F.Color.PRIMARY_500,
                        percent: 100
                    })
                }
                renderQueued() {
                    let e, t;
                    let {
                        item: {
                            state: n,
                            theme: a
                        }
                    } = this.props;
                    if (null != n) {
                        let {
                            progress: a,
                            total: s,
                            stage: l
                        } = n;
                        if (null != a && null != s) {
                            let n = Y(s, l),
                                i = Y(a, l);
                            t = U.calculateProgressPercentage(a, s);
                            let r = Math.floor(t);
                            e = l === F.DispatchApplicationStages.PAUSING ? k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format({
                                percent: r,
                                progress: i,
                                total: n
                            }) : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_QUEUED.format({
                                percent: r,
                                progress: i,
                                total: n
                            })
                        }
                    }
                    return (null == t || null == e) && (t = 0, e = k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_QUEUED_NO_TRANSITION), this.renderBody({
                        percent: t,
                        foregroundColor: (0, c.isThemeLight)(a) ? F.Color.PRIMARY_300 : F.Color.PRIMARY_500,
                        message: e
                    })
                }
                renderPaused() {
                    let {
                        item: {
                            state: e,
                            theme: t
                        }
                    } = this.props;
                    if (null == e) return null;
                    let {
                        progress: n,
                        total: a
                    } = e;
                    if (null == n || null == a) return null;
                    let s = U.calculateProgressPercentage(n, a),
                        l = Math.floor(s),
                        i = 0 === n && 1 === a ? k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSED_NO_TRANSITION : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSED.format({
                            percent: l,
                            progress: (0, b.formatSize)(n),
                            total: (0, b.formatSize)(a)
                        });
                    return this.renderBody({
                        message: i,
                        foregroundColor: (0, c.isThemeLight)(t) ? F.Color.PRIMARY_300 : F.Color.PRIMARY_500,
                        percent: s
                    })
                }
                renderProgressPatching() {
                    return (0, a.jsx)(G.default, {
                        getHistoricalTotalBytes: p.default.getHistoricalTotalBytesWritten,
                        updateInterval: 5e3,
                        children: this.renderProgressPatchingBody
                    })
                }
                renderProgressDefault() {
                    let {
                        state: e
                    } = this.props.item;
                    if (null == e) return null;
                    let {
                        total: t,
                        progress: n,
                        stage: a,
                        type: s
                    } = e;
                    if (null == t || null == n || null == a) return null;
                    let l = U.calculateProgressPercentage(n, t),
                        i = Math.floor(l);
                    return this.renderBody({
                        percent: l,
                        message: z({
                            type: s,
                            stage: a,
                            percent: i,
                            progress: n,
                            total: t
                        }),
                        foregroundColor: F.Color.BLUE_345
                    })
                }
                renderProgress() {
                    let {
                        state: e
                    } = this.props.item, t = null != e ? e.stage : null;
                    switch (t) {
                        case F.DispatchApplicationStages.PATCHING:
                        case F.DispatchApplicationStages.REPAIRING:
                            return this.renderProgressPatching();
                        default:
                            return this.renderProgressDefault()
                    }
                }
                render() {
                    let {
                        item: e,
                        cellProps: t
                    } = this.props;
                    if (e.finished) return this.renderFinished();
                    if (e.index > 0) return this.renderQueued();
                    if (null != e.state && (e.state.type === F.LocalDispatchApplicationStates.UPDATING || e.state.type === F.LocalDispatchApplicationStates.REPAIRING || e.state.type === F.LocalDispatchApplicationStates.INSTALLING)) return null != t && t.paused ? this.renderPaused() : this.renderProgress();
                    return null
                }
                constructor(...e) {
                    super(...e), this.renderProgressPatchingBody = (e, t) => {
                        let {
                            item: {
                                state: n
                            }
                        } = this.props;
                        if (null == n) return null;
                        let {
                            stage: a,
                            progress: s,
                            total: l,
                            type: i,
                            readerProgress: r
                        } = n;
                        if (null == s || null == l || null == a) return null;
                        let o = U.calculateProgressPercentage(s, l),
                            u = U.calculateProgressPercentage(null != r ? r : 0, l),
                            d = e[e.length - 1] / t * 1e3,
                            c = l - s,
                            E = z({
                                type: i,
                                stage: a,
                                percent: Math.floor(o),
                                progress: s,
                                total: l,
                                secondsRemaining: 0 !== d ? Math.max(1, c / d) : null
                            });
                        return this.renderStackedProgress({
                            percents: [o, u],
                            message: E
                        })
                    }
                }
            }
            let X = () => (0, a.jsx)(V, {
                    icon: y.default,
                    tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_RESUME,
                    onClick: () => I.resume()
                }),
                J = () => (0, a.jsx)(V, {
                    icon: P.default,
                    tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_PAUSE,
                    onClick: () => I.pause()
                }),
                Z = e => {
                    let {
                        item: t
                    } = e;
                    return (0, a.jsx)(V, {
                        icon: D.default,
                        tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_MOVE_UP,
                        onClick: () => I.moveUp(t.applicationId, t.branchId)
                    })
                },
                $ = e => {
                    let {
                        item: t
                    } = e;
                    return (0, a.jsx)(V, {
                        icon: x.default,
                        tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_REMOVE,
                        onClick: () => I.cancel(t.applicationId, t.branchId)
                    })
                },
                ee = [{
                    key: q.NAME,
                    cellClassName: B.nameCell,
                    render: e => (0, a.jsxs)(O.default, {
                        align: O.default.Align.CENTER,
                        children: [(0, a.jsx)(L.default, {
                            game: e.application,
                            className: B.gameIcon,
                            size: L.default.Sizes.SMALL
                        }), (0, a.jsx)("div", {
                            className: B.nameCellText,
                            children: e.application.name
                        })]
                    })
                }, {
                    key: q.PROGRESS,
                    cellClassName: B.progressCell,
                    headerCellClassName: B.progressCellHeader,
                    bodyCellClassName: B.progressCellBody,
                    render: (e, t) => (0, a.jsx)(Q, {
                        item: e,
                        cellProps: t
                    })
                }, {
                    key: q.ACTIONS,
                    cellClassName: B.actionsCell,
                    render(e, t) {
                        let n, s;
                        return e.finished ? n = null != e.libraryApplication ? (0, a.jsx)(h.default, {
                            libraryApplication: e.libraryApplication,
                            size: E.Button.Sizes.SMALL,
                            className: B.gameActionButton,
                            source: F.AnalyticsLocations.APPLICATION_LIBRARY_UPDATES
                        }) : null : null != e.state ? e.state.type !== F.LocalDispatchApplicationStates.UP_TO_DATE && (n = e.index > 0 ? (0, a.jsx)(Z, {
                            item: e
                        }) : null != t && t.paused ? (0, a.jsx)(X, {}) : (0, a.jsx)(J, {
                            item: e
                        }), s = (0, a.jsx)($, {
                            item: e
                        })) : s = (0, a.jsx)($, {
                            item: e
                        }), (0, a.jsxs)(O.default, {
                            justify: O.default.Justify.END,
                            children: [n, s]
                        })
                    }
                }];
            class et extends s.PureComponent {
                componentDidMount() {
                    window.addEventListener("resize", this.throttledUpdateHeight)
                }
                componentDidUpdate(e) {
                    this.props.height !== e.height && this.throttledUpdateHeight()
                }
                componentWillUnmount() {
                    let {
                        applications: e
                    } = this.props;
                    e.forEach(e => {
                        e.finished && f.default.wait(() => {
                            I.removeFinished(e.applicationId, e.branchId)
                        })
                    }), window.removeEventListener("resize", this.throttledUpdateHeight), this.isUnmounted = !0
                }
                render() {
                    let {
                        applications: e,
                        paused: t,
                        isFocused: s,
                        theme: l,
                        analyticsContext: r
                    } = this.props;
                    return 0 === e.length ? null : (0, a.jsxs)("div", {
                        className: B.gameUpdates,
                        children: [(0, a.jsxs)("div", {
                            className: B.headerRow,
                            children: [(0, a.jsx)(j.default, {
                                className: i(B.headerCell, B.networkProgress),
                                title: k.default.Messages.GAME_LIBRARY_UPDATES_HEADER_NETWORK,
                                getHistoricalTotalBytes: p.default.getHistoricalTotalBytesDownloaded,
                                color: F.Color.GREEN_360,
                                animate: s
                            }), (0, a.jsx)(j.default, {
                                className: i(B.headerCell, B.diskProgress),
                                title: k.default.Messages.GAME_LIBRARY_UPDATES_HEADER_DISK,
                                getHistoricalTotalBytes: p.default.getHistoricalTotalBytesWritten,
                                color: F.Color.BLUE_345,
                                animate: s
                            })]
                        }), (0, a.jsx)(v.default, {
                            hasHeader: !1,
                            columns: ee,
                            data: e,
                            className: B.table,
                            rowClassName: B.row,
                            rowComponent: w,
                            cellProps: {
                                paused: t,
                                isFocused: s,
                                theme: l
                            },
                            rowProps: {
                                onContextMenu: (e, t) => {
                                    var s, l, i;
                                    return s = e, l = t, i = r, void _.openContextMenuLazy(s, async () => {
                                        let {
                                            default: e
                                        } = await n.el("975419").then(n.bind(n, "975419"));
                                        return t => (0, a.jsx)(e, {
                                            ...t,
                                            applicationId: l.applicationId,
                                            branchId: l.branchId,
                                            analyticsContext: i
                                        })
                                    })
                                }
                            },
                            bodyCellClassName: B.cell
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.isUnmounted = !1, this.isTallerThanHalfViewport = !1, this.throttledUpdateHeight = o.throttle(() => {
                        if (this.isUnmounted) return;
                        let {
                            height: e,
                            onHeightTallerThanHalfViewportChange: t
                        } = this.props, n = e > window.innerHeight / 2;
                        this.isTallerThanHalfViewport !== n && (this.isTallerThanHalfViewport = n, t(n))
                    }, 1e3)
                }
            }

            function en(e, t, n, a) {
                return e.reduce((e, s, l) => {
                    let {
                        applicationId: i,
                        branchId: r
                    } = s, o = n.getGame(i), u = a.getState(i, r);
                    return null != o && e.push({
                        key: "".concat(i, ":").concat(r),
                        applicationId: i,
                        branchId: r,
                        state: u,
                        application: o,
                        libraryApplication: A.default.getLibraryApplication(i, r),
                        finished: t,
                        index: l
                    }), e
                }, [])
            }
            var ea = (0, T.default)(u.default.connectStores([g.default, S.default, R.default, N.default, p.default], () => {
                let e = en(g.default.activeItems, !1, N.default, p.default),
                    t = en(g.default.finishedItems, !0, N.default, p.default);
                return {
                    applications: [...e, ...t],
                    paused: g.default.paused,
                    isFocused: R.default.isFocused(),
                    theme: S.default.theme
                }
            })((0, C.default)(et)))
        },
        389696: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TestModeSKUButtonEnums: function() {
                    return f
                },
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("272030"),
                o = n("741130"),
                u = n("546463"),
                d = n("552712"),
                c = n("271560"),
                E = n("782340");
            let f = {
                DropdownSizes: o.default.DropdownSizes,
                Sizes: o.default.Sizes,
                Colors: o.default.Colors,
                Looks: o.default.Looks
            };
            class _ extends s.PureComponent {
                render() {
                    let {
                        skus: e,
                        children: t,
                        applicationId: n,
                        primarySKU: s,
                        onSKUSelect: l,
                        ...i
                    } = this.props;
                    return (0, a.jsx)(o.default, {
                        onClick: this.handleClick,
                        onDropdownClick: e.length > 0 ? this.handleContextMenu : null,
                        onContextMenu: e.length > 0 ? this.handleContextMenu : void 0,
                        ...i,
                        children: t
                    })
                }
                constructor(...e) {
                    super(...e), this.renderContextMenu = () => {
                        let {
                            skus: e,
                            onSKUSelect: t,
                            onMenuSelect: n
                        } = this.props;
                        return (0, a.jsx)(i.Menu, {
                            onSelect: n,
                            navId: "test-skus",
                            "aria-label": E.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                            onClose: r.closeContextMenu,
                            children: e.map(e => (0, a.jsx)(i.MenuItem, {
                                id: "".concat(e.id),
                                label: e.name,
                                action: () => {
                                    null == t || t(e)
                                }
                            }, "".concat(e.id)))
                        })
                    }, this.handleContextMenu = e => {
                        e.stopPropagation(), r.openContextMenu(e, this.renderContextMenu)
                    }, this.handleClick = () => {
                        let {
                            onSKUSelect: e,
                            primarySKU: t
                        } = this.props;
                        if (null != t) null == e || e(t)
                    }
                }
            }
            var I = l.default.connectStores([d.default, u.default], e => {
                var t;
                let {
                    applicationId: n
                } = e, a = (0, c.getPrimarySKUForApplication)(n, u.default, d.default);
                return {
                    skus: (null !== (t = d.default.getForApplication(n)) && void 0 !== t ? t : []).sort((e, t) => null != a && e.id === a.id ? -1 : null != a && t.id === a.id ? 1 : e.name >= t.name ? -1 : 1),
                    primarySKU: a
                }
            })(_)
        },
        583227: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("782340"),
                r = n("579993");
            class o extends s.PureComponent {
                render() {
                    let {
                        title: e,
                        actionText: t,
                        children: n,
                        transitionState: o
                    } = this.props, {
                        error: u,
                        isLoading: d,
                        value: c
                    } = this.state, E = s.Children.count(n) > 0 ? (0, a.jsx)(l.Card, {
                        type: l.Card.Types.WARNING,
                        className: r.card,
                        children: (0, a.jsx)(l.Text, {
                            className: r.warning,
                            variant: "text-md/normal",
                            children: n
                        })
                    }) : null;
                    return (0, a.jsx)(l.ModalRoot, {
                        transitionState: o,
                        children: (0, a.jsxs)("form", {
                            onSubmit: this.handleSubmit,
                            children: [(0, a.jsx)(l.ModalHeader, {
                                separator: !1,
                                children: (0, a.jsx)(l.Heading, {
                                    variant: "heading-lg/semibold",
                                    children: e
                                })
                            }), (0, a.jsxs)(l.ModalContent, {
                                children: [E, (0, a.jsxs)(l.FormItem, {
                                    title: i.default.Messages.FORM_LABEL_PASSWORD,
                                    className: r.spacing,
                                    children: [(0, a.jsx)(l.TextInput, {
                                        type: "password",
                                        autoComplete: "off",
                                        autoFocus: !0,
                                        value: c,
                                        onChange: this.handlePasswordChange
                                    }), null != u && "" !== u ? (0, a.jsxs)(l.Text, {
                                        variant: "text-xs/normal",
                                        color: "text-danger",
                                        className: r.error,
                                        children: [" ", u, " "]
                                    }) : null]
                                })]
                            }), (0, a.jsxs)(l.ModalFooter, {
                                children: [(0, a.jsx)(l.Button, {
                                    type: "submit",
                                    disabled: d || 0 === c.length,
                                    children: null != t ? t : i.default.Messages.CONFIRM
                                }), (0, a.jsx)(l.Button, {
                                    onClick: this.handleCancel,
                                    look: l.Button.Looks.LINK,
                                    color: l.Button.Colors.PRIMARY,
                                    children: i.default.Messages.CANCEL
                                })]
                            })]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        value: "",
                        error: null,
                        isLoading: !1
                    }, this.handleSubmit = e => {
                        e.preventDefault();
                        let {
                            value: t
                        } = this.state, {
                            handleSubmit: n,
                            onClose: a,
                            onError: s
                        } = this.props;
                        this.setState({
                            isLoading: !0
                        }), n(t).then(e => a(null != e ? e : void 0), e => {
                            if (null != e.body) null == s || s(e.body), !this.shouldSkipErrorMsgRender(e.body) && (e.body.password ? this.setState({
                                error: e.body.password,
                                isLoading: !1
                            }) : e.body.message && this.setState({
                                error: e.body.message,
                                isLoading: !1
                            }))
                        }).finally(() => this.setState({
                            isLoading: !1
                        }))
                    }, this.shouldSkipErrorMsgRender = e => {
                        let {
                            skipErrorMsgAbortCode: t
                        } = this.props;
                        return null != t && (null == e ? void 0 : e.code) === t
                    }, this.handleCancel = () => {
                        let {
                            onClose: e
                        } = this.props;
                        e()
                    }, this.handlePasswordChange = e => {
                        let {
                            onPasswordChange: t
                        } = this.props;
                        null == t || t(e), this.setState({
                            value: e
                        })
                    }
                }
            }
            o.key = () => "password-confirm-modal";
            var u = o
        },
        630273: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("272030"),
                r = n("145079"),
                o = n("145131"),
                u = n("338143");
            class d extends s.PureComponent {
                handleContextMenu(e, t) {
                    (0, i.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("406784").then(n.bind(n, "406784"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            user: t
                        })
                    })
                }
                renderUser(e) {
                    return null == e ? null : (0, a.jsxs)(o.default, {
                        className: u.user,
                        align: o.default.Align.CENTER,
                        onContextMenu: t => {
                            null != e && this.handleContextMenu(t, e)
                        },
                        children: [(0, a.jsx)(l.Avatar, {
                            src: e.getAvatarURL(void 0, 24),
                            "aria-label": e.username,
                            size: l.AvatarSizes.SIZE_24,
                            className: u.avatar
                        }), (0, a.jsx)(r.default, {
                            user: e,
                            className: u.tag,
                            usernameClass: u.username,
                            discriminatorClass: u.discriminator
                        })]
                    }, e.id)
                }
                render() {
                    let {
                        party: e,
                        header: t
                    } = this.props, n = e.map(e => this.renderUser(e));
                    return (0, a.jsxs)("div", {
                        className: u.userList,
                        children: [(0, a.jsx)("div", {
                            className: u.header,
                            children: t
                        }), (0, a.jsx)(l.ScrollerThin, {
                            className: u.content,
                            fade: !0,
                            children: n
                        })]
                    })
                }
            }
            var c = d
        },
        650044: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                open: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("629109"),
                i = n("135230"),
                r = n("782340");
            let o = null;

            function u() {
                null !== o && (0, s.closeModal)(o), o = null
            }

            function d() {
                l.default.setSilenceWarning(!1), u()
            }

            function c() {
                o = (0, s.openModal)(e => (0, a.jsx)(i.default, {
                    title: r.default.Messages.CONFIRM_DISABLE_SILENCE_TITLE,
                    body: r.default.Messages.CONFIRM_DISABLE_SILENCE_BODY,
                    secondaryConfirmText: r.default.Messages.CONFIRM_DISABLE_SILENCE_DONT_SHOW,
                    onConfirmSecondary: d,
                    onConfirm: u,
                    confirmText: r.default.Messages.OKAY,
                    ...e
                }))
            }
        },
        945183: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("408166"),
                r = n("191225"),
                o = n("76393"),
                u = n("374014"),
                d = n("808422"),
                c = n("233069"),
                E = n("373469"),
                f = n("271938"),
                _ = n("42203"),
                I = n("305961"),
                h = n("42887"),
                C = n("385649"),
                T = n("945956"),
                m = n("18494"),
                S = n("280168"),
                N = n("800762"),
                A = n("316133"),
                p = n("449008"),
                g = n("709681"),
                R = n("49111");

            function O(e, t, n) {
                s.useEffect(() => {
                    let a = t(),
                        s = new l.BatchedStoreListener(e, () => {
                            let e = t(),
                                s = n(a, e);
                            null != s && !C.default.isSoundDisabled(s) && (0, g.playSound)(s, .4), a = e
                        });
                    return s.attach("useSound"), () => s.detach()
                })
            }

            function L() {
                return O([h.default, m.default], () => ({
                    inVoiceChannel: null != m.default.getVoiceChannelId(),
                    selfMute: h.default.isSelfMute(),
                    selfDeaf: h.default.isSelfDeaf(),
                    audioPermissionReady: h.default.isNativeAudioPermissionReady()
                }), (e, t) => {
                    let {
                        inVoiceChannel: n,
                        selfMute: a,
                        selfDeaf: s,
                        audioPermissionReady: l
                    } = t;
                    return e.selfDeaf !== s ? s ? "deafen" : "undeafen" : l ? (n || e.audioPermissionReady) && e.selfMute !== a ? a ? "mute" : "unmute" : void 0 : void 0
                }), null
            }

            function M() {
                return O([_.default, T.default, m.default, o.default], () => {
                    let e = _.default.getChannel(m.default.getVoiceChannelId()),
                        t = null == e ? void 0 : e.type,
                        n = null == e ? void 0 : e.getGuildId(),
                        a = T.default.getWasEverRtcConnected(),
                        s = T.default.getState();
                    return {
                        channelType: t,
                        guildId: n,
                        connected: s === R.RTCConnectionStates.RTC_CONNECTED,
                        connectHasStarted: !a && s !== R.RTCConnectionStates.DISCONNECTED || s === R.RTCConnectionStates.RTC_CONNECTED,
                        awaitingRemote: null != o.default.getAwaitingRemoteSessionInfo(),
                        connectedRemote: null != o.default.getRemoteSessionId()
                    }
                }, (e, t) => {
                    let {
                        channelType: n,
                        connected: a,
                        connectHasStarted: s,
                        awaitingRemote: l,
                        connectedRemote: i
                    } = t, r = e.channelType, o = e.connectedRemote, u = e.connected, d = e.connectHasStarted;
                    if (!d && s || i && !o) {
                        if (null != n && c.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n)) return;
                        return "user_join"
                    }
                    if (u && !a) {
                        if (l || i || null != r && c.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(r)) return;
                        return "disconnect"
                    }
                }), null
            }

            function v() {
                return O([S.default], () => S.default.isCurrentUserSpeaking(), (e, t) => {
                    if (e !== t) {
                        let e = h.default.isSelfMute(),
                            n = h.default.getMode();
                        if (n === R.InputModes.PUSH_TO_TALK && !e) return t ? "ptt_start" : "ptt_stop"
                    }
                }), null
            }

            function D() {
                return O([h.default], () => h.default.isSelfMutedTemporarily(), (e, t) => {
                    if (e !== t) {
                        let e = h.default.isSelfMute(),
                            n = h.default.getMode();
                        if (n === R.InputModes.VOICE_ACTIVITY && !e) return t ? "ptt_stop" : "ptt_start"
                    }
                }), null
            }

            function x() {
                return O([N.default], () => N.default.userHasBeenMovedVersion, (e, t) => {
                    if (e !== t) return "user_moved"
                }), null
            }

            function P() {
                return O([m.default, N.default], () => {
                    let e = m.default.getVoiceChannelId();
                    if (null == e) return d.RequestToSpeakStates.NONE;
                    let t = N.default.getVoiceStateForChannel(e);
                    return (0, d.getAudienceRequestToSpeakState)(t)
                }, (e, t) => {
                    if (e !== t && t === d.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK) return "reconnect"
                }), null
            }

            function y() {
                return O([m.default, E.default, f.default, N.default, _.default], () => {
                    var e;
                    let t, n;
                    let a = m.default.getVoiceChannelId(),
                        s = f.default.getId();
                    let l = [],
                        i = null,
                        r = 0,
                        o = E.default.getAllActiveStreams();
                    if (null != a) {
                        let e = _.default.getChannel(a);
                        null != e && (t = e.type, n = A.default.countVoiceStatesForChannel(e.id) - (N.default.isInChannel(e.id) ? 1 : 0), l = E.default.getAllApplicationStreamsForChannel(e.id).map(e => e.ownerId))
                    }
                    let d = null;
                    return (null === (e = d = 1 === o.length ? o[0] : E.default.getCurrentUserActiveStream()) || void 0 === e ? void 0 : e.state) === R.ApplicationStreamStates.CONNECTING && (d = null), null != d && (i = (0, u.encodeStreamKey)(d), r = E.default.getViewerIds(i).filter(e => e !== s).length), {
                        channelType: t,
                        voiceChannelId: a,
                        voiceChannelUserCount: n,
                        streamingUserIds: l,
                        singleActiveStreamKey: i,
                        singleActiveStreamViewerCount: r,
                        currentUserId: s,
                        allActiveStreams: o
                    }
                }, (e, t) => {
                    let {
                        channelType: n,
                        voiceChannelId: a,
                        voiceChannelUserCount: s,
                        streamingUserIds: l,
                        singleActiveStreamKey: i,
                        singleActiveStreamViewerCount: r,
                        currentUserId: o
                    } = t;
                    if (e.voiceChannelId !== a || null == a || function(e) {
                            let t = _.default.getChannel(e);
                            if (null == t) return !1;
                            let n = t.getGuildId();
                            if (null == n) return !1;
                            let a = I.default.getGuild(n);
                            return null != a && a.afkChannelId === t.id
                        }(a) || null != n && c.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n)) return;
                    let u = null != i && e.singleActiveStreamKey === i,
                        d = l.some(t => !e.streamingUserIds.includes(t)),
                        E = e.allActiveStreams.map(e => e.ownerId),
                        f = e.streamingUserIds.some(e => !l.includes(e) && (e === o || E.includes(e)));
                    if (d) return "stream_started";
                    if (f) return "stream_ended";
                    if (e.singleActiveStreamViewerCount <= 25 && u && r > e.singleActiveStreamViewerCount) return "stream_user_joined";
                    else if (null != e.voiceChannelUserCount && null != s && e.voiceChannelUserCount <= 25 && s > e.voiceChannelUserCount) return "user_join";
                    else if (null != e.voiceChannelUserCount && null != s && e.voiceChannelUserCount <= 25 && s < e.voiceChannelUserCount) return "user_leave";
                    else if (e.singleActiveStreamViewerCount <= 25 && u && r < e.singleActiveStreamViewerCount) return "stream_user_left"
                }), null
            }

            function b() {
                return O([m.default, r.default, f.default], () => {
                    let e = m.default.getVoiceChannelId(),
                        t = f.default.getId(),
                        n = (0, p.isNotNullish)(e) ? r.default.getEmbeddedActivitiesForChannel(e) : r.NO_ACTIVITIES;
                    return {
                        voiceChannelId: e,
                        currentUserId: t,
                        channelActivities: n
                    }
                }, (e, t) => {
                    let n, {
                        voiceChannelId: a,
                        currentUserId: s,
                        channelActivities: l
                    } = t;
                    if (null == a) return;
                    let {
                        enabled: r
                    } = i.ActivitiesSoundsExperiment.getCurrentConfig({
                        location: "5ef733_1"
                    }, {
                        autoTrackExposure: !1
                    }), o = !1;
                    e.channelActivities.length < l.length && (n = "activity_launch", o = !0);
                    let u = e.channelActivities.find(e => e.connections.has(s)),
                        d = l.find(e => e.connections.has(s));
                    if (void 0 === d && (0, p.isNotNullish)(u) && (n = "activity_end", o = !0), void 0 === u && (0, p.isNotNullish)(d) && d.connections.size > 1 && (n = "activity_user_join", o = !0), (0, p.isNotNullish)(d) && (0, p.isNotNullish)(u) && (d.connections.size > u.connections.size && (n = "activity_user_join", o = !0), d.connections.size < u.connections.size && (n = "activity_user_left", o = !0)), o && i.ActivitiesSoundsExperiment.trackExposure({
                            location: "5ef733_2"
                        }), r) return n
                }), null
            }

            function U() {
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(L, {}), (0, a.jsx)(M, {}), (0, a.jsx)(v, {}), (0, a.jsx)(D, {}), (0, a.jsx)(x, {}), (0, a.jsx)(y, {}), (0, a.jsx)(P, {}), (0, a.jsx)(b, {})]
                })
            }
        },
        402309: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsMassMentionsDefaultDisabledExperiment: function() {
                    return o
                },
                useCanCurrentUserViewDisableUnsafeGuildSettingsNotice: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("862205"),
                l = n("957255"),
                i = n("49111");
            let r = (0, s.createExperiment)({
                kind: "guild",
                id: "2022-11_default_disable_mass_mention",
                label: "Disable mass mentions for communities by default",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function o(e) {
                return r.useExperiment({
                    guildId: e,
                    location: "dd4beb_1"
                }, {
                    autoTrackExposure: !0
                })
            }

            function u(e) {
                var t;
                let n = (0, a.useStateFromStores)([l.default], () => l.default.can(i.Permissions.MANAGE_GUILD, e)),
                    {
                        enabled: s
                    } = r.useExperiment({
                        guildId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "",
                        location: "dd4beb_3"
                    }, {
                        autoTrackExposure: !0
                    });
                if (null == e) return !1;
                let o = e.hasFeature(i.GuildFeatures.COMMUNITY);
                return n && o && s
            }
        },
        241845: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useGlobalTriggerDebugging: function() {
                    return r
                }
            });
            var a = n("862205"),
                s = n("565034");
            let l = (0, a.createExperiment)({
                    kind: "user",
                    id: s.userTriggerExperimentId,
                    label: "Trigger Debugging User AA Experiment",
                    defaultConfig: {
                        inUse: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "On",
                        config: {
                            inUse: !0
                        }
                    }]
                }),
                i = (0, a.createExperiment)({
                    kind: "guild",
                    id: s.guildTriggerExperimentId,
                    label: "Trigger Debugging Guild AA Experiment",
                    defaultConfig: {
                        inUse: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "On",
                        config: {
                            inUse: !0
                        }
                    }]
                }),
                r = e => {
                    let t = "guild trigger debug",
                        n = "user trigger debug";
                    i.useExperiment({
                        location: t,
                        guildId: e
                    }, {
                        autoTrackExposure: !1
                    }), i.trackExposure({
                        location: t,
                        guildId: e
                    }), l.useExperiment({
                        location: n
                    }, {
                        autoTrackExposure: !1
                    }), l.trackExposure({
                        location: n
                    })
                }
        },
        939443: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useNullExperiment: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_null_experiment",
                label: "Null Experiment",
                defaultConfig: {
                    inUse: !1
                },
                treatments: [{
                    id: 1,
                    label: "On",
                    config: {
                        inUse: !0
                    }
                }]
            });

            function l() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return s.useExperiment({
                    location: "a9e81b_1"
                }, {
                    autoTrackExposure: e
                })
            }
        },
        607742: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationAAEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-03_mute_block_aa",
                label: "Safety Consumer Education Block/Mute - A/A",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Mute",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "Block",
                    config: {
                        bucket: 2,
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "34e1bc_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        415929: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationBlockMuteEnabled: function() {
                    return l
                },
                useIsSafetyConsumerEducationBlockMuteBucket: function() {
                    return i
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-01_consumer_education_launch",
                label: "Safety Consumer Education Launch - Block/Mute",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Mute",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "Block",
                    config: {
                        bucket: 2,
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "b85a21_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }

            function i() {
                return s.useExperiment({
                    location: "b85a21_2"
                }, {
                    autoTrackExposure: !1
                }).bucket
            }
        },
        127205: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationReportingEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_consumer_education_launch__reporting",
                label: "Consumer Education Launch - Reporting",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Reporting",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "183c74_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        687531: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsDmSpamFilterCoachmarkEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_dm_spam_filter_coachmark",
                label: "Safety DM Spam Filter Coachmark rollout",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "acbeda_1"
                }, {
                    autoTrackExposure: !1
                }).enabled
            }
        },
        74456: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsRejectAllMessageRequestsEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-01_clear_all_message_requests",
                label: "Safety Experience Reject All Message Requests",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "c10bec_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        533280: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                supported: function() {
                    return s
                },
                createUtterance: function() {
                    return l
                },
                speakUtterance: function() {
                    return i
                },
                cancelAll: function() {
                    return r
                }
            });
            var a = n("981957");
            let s = null != window.speechSynthesis;

            function l(e, t) {
                let n = e.replace(/(https?:\/\/[^\s]+)/g, e => {
                    let t = e.match(/^https?:\/\/(?:www\.)?([^/?#]+)(?:[/?#]|$)/i);
                    return null != t ? t[1] : ""
                });
                null != t && n.length > t && (n = (n = n.substring(0, t)).substring(0, Math.min(n.length, n.lastIndexOf(" "))));
                let s = new SpeechSynthesisUtterance(n);
                return s.rate = a.default.speechRate, s
            }

            function i(e, t) {
                s && (e.voice = t, speechSynthesis.speak(e))
            }

            function r() {
                s && speechSynthesis.cancel()
            }
        },
        425974: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("558130"),
                i = n("887446"),
                r = n("599110"),
                o = n("49111");

            function u(e, t, n) {
                let u = (0, s.useStateFromStores)([l.default], () => {
                    let t = l.default.getActiveChannelsFetchStatus(e);
                    return null != t && !t.loading
                }, [e]);
                a.useEffect(() => {
                    u && r.default.track(o.AnalyticEvents.ACTIVE_CHANNELS_LOADED, {
                        guild_id: e,
                        text_channels_shown: t.length,
                        voice_channels_shown: n.length,
                        home_session_id: i.default.getHomeSessionId(e)
                    })
                }, [e, u])
            }
        },
        140708: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActivitiesRolloutExperiments: function() {
                    return u
                }
            });
            var a, s, l = n("884691"),
                i = n("862205");
            let r = (a = "Watch Together", s = "2021-09_watch_together_rollout", (0, i.createExperiment)({
                    kind: "guild",
                    id: s,
                    label: "Exposure tracking for ".concat(a, " (do not override)"),
                    defaultConfig: {},
                    treatments: []
                })),
                o = [r];

            function u(e) {
                l.useEffect(() => {
                    null != e && o.forEach(t => {
                        t.trackExposure({
                            guildId: e,
                            location: "508ef2_1"
                        })
                    })
                }, [e])
            }
        },
        408166: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ActivitiesSoundsExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-05_activities_joinleave_sounds",
                label: "Activities Sounds Experiment",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Activities Join/Leave Sounds",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        992204: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("954016");
            let i = new Set,
                r = new Set([l.WhatsNewSection.DISCORD_TURNS_8]);
            class o extends a.default.PersistedStore {
                initialize(e) {
                    null != e && (Array.isArray(e.acknowledged) && (i = new Set(e.acknowledged)), Array.isArray(e.opened) && (r = new Set(e.opened)))
                }
                getState() {
                    return {
                        acknowledged: i,
                        opened: r
                    }
                }
                getOpened() {
                    return r
                }
                getAcknowledged() {
                    return i
                }
                isOpened(e) {
                    return r.has(e)
                }
                isAcknowledged(e) {
                    return i.has(e)
                }
            }
            o.displayName = "ActivitiesWhatsNewStore", o.persistKey = "ActivitiesWhatsNewStore";
            var u = new o(s.default, {
                ACTIVITIES_WHATS_NEW_ACKNOWLEDGE_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    i.add(t)
                },
                ACTIVITIES_WHATS_NEW_MARK_OPENED_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    r.add(t)
                }
            })
        },
        180065: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ActivityCoachMarkGarticPhoneExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-03_activity_gartic_phone_coach_mark",
                label: "Activity Coach Mark Gartic Phone",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Activity Coach Mark Gartic Phone",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        768613: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BashOutCoachMarkExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2022-11_activitiesbashoutcoachmark",
                label: "Bash Out Coach Mark",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 0,
                    label: "Control",
                    config: {
                        enabled: !1
                    }
                }, {
                    id: 1,
                    label: "Enable Bash Out Coach Mark",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        334788: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesGdmTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_whats_new_gdm_tile",
                label: "Birthday Activities Whats New GDM Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable GDM tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        891654: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesJamspaceTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_jamspace_tile",
                label: "Birthday Activities Whats New Jamspace Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Jamspace tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        885412: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesPokerTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-05_birthday_activities_poker",
                label: "Birthday Activities Poker Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Poker tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        629388: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesPuttPartyTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_putt_party_tile",
                label: "Birthday Activities Whats New Putt Party Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Putt Party tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        499031: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a, s, l, i, r = n("773336");

            function o(e) {
                if ((0, r.isIOS)()) return e;
                if (!(0, r.isAndroid)()) return l.UNHANDLED;
                switch (e) {
                    case i.NONE:
                        return l.NOMINAL;
                    case i.LIGHT:
                    case i.MODERATE:
                        return l.FAIR;
                    case i.SEVERE:
                        return l.SERIOUS;
                    case i.CRITICAL:
                    case i.EMERGENCY:
                    case i.SHUTDOWN:
                        return l.CRITICAL;
                    default:
                        return l.UNHANDLED
                }
            }(a = l || (l = {}))[a.UNHANDLED = -1] = "UNHANDLED", a[a.NOMINAL = 0] = "NOMINAL", a[a.FAIR = 1] = "FAIR", a[a.SERIOUS = 2] = "SERIOUS", a[a.CRITICAL = 3] = "CRITICAL", (s = i || (i = {}))[s.NONE = 0] = "NONE", s[s.LIGHT = 1] = "LIGHT", s[s.MODERATE = 2] = "MODERATE", s[s.SEVERE = 3] = "SEVERE", s[s.CRITICAL = 4] = "CRITICAL", s[s.EMERGENCY = 5] = "EMERGENCY", s[s.SHUTDOWN = 6] = "SHUTDOWN"
        },
        503525: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActivitiesWhatsNewCount: function() {
                    return c
                },
                getActivitiesWhatsNewCount: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("992204"),
                l = n("334788"),
                i = n("891654"),
                r = n("885412"),
                o = n("629388"),
                u = n("337697"),
                d = n("954016");

            function c() {
                return (0, a.useStateFromStores)([s.default], () => E(s.default))
            }

            function E(e) {
                let t = 0,
                    n = e.getAcknowledged();
                return u.ExperimentBirthdayGoodbye.getCurrentConfig({
                    location: "1d9280_1"
                }).enabled ? (!n.has(d.WhatsNewSection.FREE) && t++, t) : (l.ExperimentBirthdayActivitiesGdmTile.getCurrentConfig({
                    location: "1d9280_2"
                }).enabled && !n.has(d.WhatsNewSection.GDM_ACTIVITIES) && t++, o.ExperimentBirthdayActivitiesPuttPartyTile.getCurrentConfig({
                    location: "1d9280_3"
                }).enabled && !n.has(d.WhatsNewSection.PUTT_PARTY) && t++, i.ExperimentBirthdayActivitiesJamspaceTile.getCurrentConfig({
                    location: "1d9280_4"
                }).enabled && !n.has(d.WhatsNewSection.JAMSPACE) && t++, r.ExperimentBirthdayActivitiesPokerTile.getCurrentConfig({
                    location: "1d9280_5"
                }).enabled && !n.has(d.WhatsNewSection.POKER) && t++, !n.has(d.WhatsNewSection.DISCORD_TURNS_8) && t <= 0 && t++, t)
            }
        },
        299803: function(e, t, n) {
            "use strict";

            function a(e, t) {
                return null != e.application_id && null == t.getApplicationActivity(e.application_id, !1)
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        984497: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ACTIVITY_ENCOURAGES_HW_ACCELERATION: function() {
                    return _
                },
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("452804"),
                r = n("442939"),
                o = n("145131"),
                u = n("599110"),
                d = n("50885"),
                c = n("49111"),
                E = n("782340"),
                f = n("646224");
            let _ = "Activity Encourages Hardware Acceleration";

            function I(e) {
                var t;
                let {
                    applicationId: n,
                    ...I
                } = e, [h, C] = s.useState(!1), [T] = (0, r.default)([n]), m = null !== (t = null == T ? void 0 : T.name) && void 0 !== t ? t : "This Activity";
                s.useEffect(() => {
                    u.default.track(c.AnalyticEvents.OPEN_MODAL, {
                        type: _
                    })
                }, []);
                let S = () => {
                    let e = "temporary";
                    h && (e = "permanent", i.default.updatedUnsyncedSettings({
                        disableActivityHardwareAccelerationPrompt: !0
                    })), u.default.track(c.AnalyticEvents.MODAL_DISMISSED, {
                        type: _,
                        dismiss_type: e
                    }), I.onClose()
                };
                return (0, a.jsxs)(l.ModalRoot, {
                    className: f.root,
                    "aria-label": E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE,
                    ...I,
                    children: [(0, a.jsxs)(l.ModalHeader, {
                        separator: !1,
                        children: [(0, a.jsx)(l.Text, {
                            className: f.header,
                            variant: "text-lg/normal",
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE
                        }), (0, a.jsx)(l.ModalCloseButton, {
                            onClick: S,
                            className: f.closeButton
                        })]
                    }), (0, a.jsx)(l.ModalContent, {
                        className: f.content,
                        children: (0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            className: f.ratingBody,
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_BODY.format({
                                applicationName: m
                            })
                        })
                    }), (0, a.jsxs)(l.ModalFooter, {
                        className: f.footer,
                        direction: o.default.Direction.HORIZONTAL,
                        children: [(0, a.jsx)(l.Checkbox, {
                            type: l.Checkbox.Types.INVERTED,
                            size: 18,
                            value: h,
                            onChange: () => C(!h),
                            children: (0, a.jsx)(l.Text, {
                                variant: "text-sm/normal",
                                children: E.default.Messages.DONT_SHOW_AGAIN
                            })
                        }), (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.PRIMARY,
                            onClick: S,
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_NO_THANKS
                        }), (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.BRAND,
                            onClick: () => {
                                u.default.track(c.AnalyticEvents.ACTIVITY_ENABLE_HARDWARE_ACCELERATION, {
                                    application_id: n
                                }), d.default.setEnableHardwareAcceleration(!0)
                            },
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_TURN_IT_ON
                        })]
                    })]
                })
            }
        },
        987697: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("269936").makeLazy)({
                createPromise: () => n.el("321927").then(n.bind(n, "321927")),
                webpackId: "321927"
            })
        },
        464682: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("269936").makeLazy)({
                createPromise: () => n.el("577766").then(n.bind(n, "577766")),
                webpackId: "577766"
            })
        },
        581516: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var s = n("913144"),
                l = n("600965"),
                i = n("316272"),
                r = n("292687"),
                o = n("42203"),
                u = n("778588"),
                d = n("449501"),
                c = n("945956"),
                E = n("18494"),
                f = n("162771"),
                _ = n("800762"),
                I = n("191225"),
                h = n("420444"),
                C = n("320817"),
                T = n("49111");

            function m() {
                let e = c.default.getChannelId(),
                    t = I.default.getConnectedActivityChannelId(),
                    n = I.default.getSelfEmbeddedActivityForChannel(null != t ? t : ""),
                    i = o.default.getChannel(e),
                    r = o.default.getChannel(t),
                    u = null == t || (null == e || null == i) && (0, h.default)(t);
                if (u || null == t || null == r || null == n) return function() {
                    let e = a;
                    null != e && d.default.isOpen(e) && (s.default.wait(() => l.close(e)), a = null)
                }();
                {
                    let e = (0, C.default)(t, n.application_id);
                    return function(e, t) {
                        if (d.default.isOpen(t)) return !1;
                        s.default.wait(() => l.open(t, T.PictureInPictureComponents.EMBED_IFRAME, {
                            channel: e
                        })), a = t
                    }(r, e)
                }
            }

            function S() {
                let e = u.default.hasLayers(),
                    t = r.default.getWindowOpen(T.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                return e && !t ? function() {
                    let e = a;
                    null != e && d.default.isOpen(e) && s.default.wait(() => l.hide(e))
                }() : function() {
                    let e = a;
                    null != e && d.default.isOpen(e) && s.default.wait(() => l.show(e))
                }()
            }
            class N extends i.default {
                _initialize() {
                    E.default.addChangeListener(m), f.default.addChangeListener(m), c.default.addChangeListener(m), _.default.addChangeListener(m), r.default.addChangeListener(m), I.default.addChangeListener(m), u.default.addChangeListener(S)
                }
                _terminate() {
                    E.default.removeChangeListener(m), f.default.removeChangeListener(m), c.default.removeChangeListener(m), _.default.removeChangeListener(m), r.default.removeChangeListener(m), I.default.removeChangeListener(m), u.default.removeChangeListener(S)
                }
            }
            var A = new N
        },
        159997: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("292687"),
                s = n("568734"),
                l = n("49111");

            function i(e) {
                var t;
                let n = (0, s.hasFlag)(null !== (t = e.flags) && void 0 !== t ? t : 0, l.ApplicationFlags.EMBEDDED),
                    i = a.default.getWindowOpen(l.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                return n && i
            }
        },
        321836: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("168973"),
                i = n("599110"),
                r = n("773336"),
                o = n("50885"),
                u = n("984497"),
                d = n("49111");
            let c = "activity-hardware-acceleration-modal";

            function E(e) {
                let t = !l.default.disableActivityHardwareAccelerationPrompt;
                t && r.isPlatformEmbedded && !o.default.getEnableHardwareAcceleration() && (0, s.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await n.el("984497").then(n.bind(n, "984497"));
                    return n => (0, a.jsx)(t, {
                        applicationId: e,
                        ...n
                    })
                }, {
                    modalKey: c,
                    onCloseRequest: () => {
                        i.default.track(d.AnalyticEvents.MODAL_DISMISSED, {
                            type: u.ACTIVITY_ENCOURAGES_HW_ACCELERATION
                        }), (0, s.closeModal)(c)
                    }
                })
            }
        },
        587984: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openActivityShareMomentModal: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("870346"),
                i = n("49111");

            function r(e) {
                let {
                    applicationId: t,
                    channelId: r,
                    mediaUrl: o
                } = e, u = l.default.getWindowOpen(i.PopoutWindowKeys.CHANNEL_CALL_POPOUT), d = u ? s.POPOUT_MODAL_CONTEXT : s.DEFAULT_MODAL_CONTEXT;
                (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await n.el("611598").then(n.bind(n, "611598"));
                    return n => (0, a.jsx)(e, {
                        applicationId: t,
                        channelId: r,
                        mediaUrl: o,
                        ...n
                    })
                }, {
                    modalKey: "activity-share-moment-modal",
                    contextKey: d
                })
            }
        },
        669499: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openAgeGateModal: function() {
                    return r
                },
                closeAgeGateModal: function() {
                    return o
                },
                openSuccessAgeGateModal: function() {
                    return u
                },
                openFailureAgeGateModal: function() {
                    return d
                }
            });
            var a = n("913144");
            n("437822"), n("393414");
            var s = n("599110"),
                l = n("586391"),
                i = n("49111");

            function r(e) {
                s.default.track(i.AnalyticEvents.OPEN_MODAL, {
                    type: "Enter Your Birthday",
                    source: {
                        section: e
                    }
                }), a.default.dispatch({
                    type: "AGE_GATE_MODAL_OPEN",
                    source: e
                })
            }

            function o(e) {
                a.default.wait(() => a.default.dispatch({
                    type: "AGE_GATE_MODAL_CLOSE"
                })), void 0 !== e && s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
                    source: e,
                    action: l.AgeGateAnalyticAction.AGE_GATE_CLOSE
                })
            }

            function u(e) {
                a.default.wait(() => {
                    a.default.dispatch({
                        type: "AGE_GATE_SUCCESS_MODAL_OPEN"
                    })
                }), s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
                    source: e,
                    action: l.AgeGateAnalyticAction.AGE_GATE_SUCCESS
                })
            }

            function d(e, t) {
                a.default.wait(() => {
                    a.default.dispatch({
                        type: "AGE_GATE_FAILURE_MODAL_OPEN",
                        underageMessage: t
                    })
                }), s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
                    source: e,
                    action: l.AgeGateAnalyticAction.AGE_GATE_FAILURE
                })
            }
        },
        19009: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                userNeedsAgeGate: function() {
                    return i
                }
            });
            var a = n("697218"),
                s = n("299039");
            let l = new Date("06/16/2020");

            function i() {
                let e = a.default.getCurrentUser();
                return null != e && s.default.extractTimestamp(e.id) > l.getTime() && !e.isClaimed() && null == e.nsfwAllowed
            }
        },
        182537: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("42203"),
                o = n("18494"),
                u = n("162771"),
                d = n("697218"),
                c = n("669499"),
                E = n("37016"),
                f = n("58069"),
                _ = n("586391"),
                I = n("49111");

            function h(e, t) {
                var n;
                if (null == e) return;
                let a = d.default.getCurrentUser(),
                    s = null === (n = r.default.getChannel(t)) || void 0 === n ? void 0 : n.isNSFW();
                s && null != a && null == a.nsfwAllowed && (0, c.openAgeGateModal)(_.AgeGateSource.NSFW_CHANNEL)
            }
            class C extends i.default {
                _initialize() {
                    l.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen), l.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect), l.default.subscribe("AGE_GATE_MODAL_OPEN", this.handleAgeGateModalOpen), l.default.subscribe("AGE_GATE_MODAL_CLOSE", this.handleAgeGateModalClose), l.default.subscribe("AGE_GATE_SUCCESS_MODAL_OPEN", this.handleAgeGateSuccess), l.default.subscribe("AGE_GATE_FAILURE_MODAL_OPEN", this.handleAgeGateFailure)
                }
                _terminate() {
                    l.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen), l.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect), l.default.unsubscribe("AGE_GATE_MODAL_OPEN", this.handleAgeGateModalOpen), l.default.unsubscribe("AGE_GATE_MODAL_CLOSE", this.handleAgeGateModalClose), l.default.unsubscribe("AGE_GATE_SUCCESS_MODAL_OPEN", this.handleAgeGateSuccess), l.default.unsubscribe("AGE_GATE_FAILURE_MODAL_OPEN", this.handleAgeGateFailure)
                }
                handleChannelSelect(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e;
                    h(t, n)
                }
                handleConnectionOpen() {
                    let e = u.default.getGuildId(),
                        t = o.default.getChannelId();
                    h(e, t)
                }
                handleAgeGateModalOpen(e) {
                    let {
                        source: t
                    } = e;
                    (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("673187").then(n.bind(n, "673187"));
                        return n => (0, a.jsx)(e, {
                            source: t,
                            ...n
                        })
                    }, {
                        modalKey: _.EXISTING_USER_AGE_GATE_MODAL_KEY,
                        onCloseRequest: I.NOOP
                    })
                }
                handleAgeGateSuccess() {
                    (0, s.updateModal)(_.EXISTING_USER_AGE_GATE_MODAL_KEY, e => (0, a.jsx)(f.default, {
                        ...e
                    }))
                }
                handleAgeGateFailure(e) {
                    let {
                        underageMessage: t
                    } = e;
                    (0, s.updateModal)(_.EXISTING_USER_AGE_GATE_MODAL_KEY, e => (0, a.jsx)(E.default, {
                        underageMessage: t,
                        ...e
                    }))
                }
                handleAgeGateModalClose() {
                    (0, s.closeModal)(_.EXISTING_USER_AGE_GATE_MODAL_KEY)
                }
            }
            var T = new C
        },
        37016: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("393414"),
                r = n("476765"),
                o = n("701909"),
                u = n("669499"),
                d = n("49111"),
                c = n("782340"),
                E = n("762874");

            function f() {
                (0, u.closeAgeGateModal)(), (0, i.transitionTo)(d.Routes.LOGIN)
            }

            function _(e) {
                let {
                    underageMessage: t,
                    transitionState: i
                } = e, u = (0, r.useUID)();
                return (0, a.jsxs)(l.ModalRoot, {
                    transitionState: i,
                    size: l.ModalSize.SMALL,
                    "aria-labelledby": u,
                    impression: {
                        impressionName: s.ImpressionNames.USER_AGE_GATE_UNDERAGE,
                        impressionProperties: {
                            existing_user: !0
                        }
                    },
                    children: [(0, a.jsx)(l.ModalContent, {
                        children: (0, a.jsxs)("div", {
                            className: E.container,
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                src: n("803452"),
                                className: E.img
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-xl/semibold",
                                className: E.title,
                                id: u,
                                children: c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_HEADER
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: E.subtitle,
                                variant: "text-sm/normal",
                                children: c.default.Messages.AGE_GATE_UNDERAGE_BODY.format({
                                    underageMessage: null != t ? t : c.default.Messages.AGE_GATE_UNDERAGE_BODY_DEFAULT_REG_MESSAGE,
                                    helpURL: o.default.getArticleURL(d.HelpdeskArticles.AGE_GATE)
                                })
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: E.subtitle,
                                variant: "text-sm/normal",
                                children: c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_BODY_DELETION_WITH_DAYS.format({
                                    days: 30
                                })
                            })]
                        })
                    }), (0, a.jsx)(l.ModalFooter, {
                        children: (0, a.jsx)(l.Button, {
                            size: l.ButtonSizes.SMALL,
                            fullWidth: !0,
                            onClick: f,
                            children: c.default.Messages.AGE_GATE_UNDERAGE_BACK_TO_LOGIN
                        })
                    })]
                })
            }
        },
        58069: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("476765"),
                r = n("669499"),
                o = n("782340"),
                u = n("865982");

            function d(e) {
                let {
                    transitionState: t
                } = e, d = (0, i.useUID)();
                return (0, a.jsxs)(l.ModalRoot, {
                    transitionState: t,
                    size: l.ModalSize.SMALL,
                    "aria-labelledby": d,
                    impression: {
                        impressionName: s.ImpressionNames.USER_AGE_GATE,
                        impressionProperties: {
                            existing_user: !0
                        }
                    },
                    children: [(0, a.jsx)(l.ModalContent, {
                        children: (0, a.jsxs)("div", {
                            className: u.container,
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                src: n("318548"),
                                className: u.img
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-xl/semibold",
                                className: u.title,
                                id: d,
                                children: o.default.Messages.AGE_GATE_AGE_VERIFIED
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: u.subtitle,
                                variant: "text-sm/normal",
                                children: o.default.Messages.AGE_GATE_AGE_VERIFIED_BODY
                            })]
                        })
                    }), (0, a.jsx)(l.ModalFooter, {
                        children: (0, a.jsx)(l.Button, {
                            size: l.ButtonSizes.SMALL,
                            fullWidth: !0,
                            onClick: function() {
                                (0, r.closeAgeGateModal)()
                            },
                            autoFocus: !0,
                            children: o.default.Messages.CLOSE
                        })
                    })]
                })
            }
        },
        943183: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                initSessionHeartbeatScheduler: function() {
                    return A
                }
            });
            var a = n("976255"),
                s = n("95410"),
                l = n("913144"),
                i = n("945956"),
                r = n("599110"),
                o = n("872507"),
                u = n("286235"),
                d = n("49111");
            let c = "LATEST_HEARTBEAST_EVENT_TIMESTAMP",
                E = null,
                f = null,
                _ = null,
                I = !1;
            async function h() {
                if (I) return;
                I = !0, (0, a.setSessionExtendingEnabled)(!0), u.default.addBreadcrumb({
                    message: "Start Analytics Heartbeat"
                });
                let e = await s.default.getAfterRefresh(c).then(a.timestampOrZero);
                if (!I) return;
                let t = Date.now(),
                    n = 9e5 + e - t;
                n > 36e5 && u.default.addBreadcrumb({
                    message: "Received invalid Date.now() when generating a heartbeat. Date.now() = ".concat(t, ", timeUntilNextHeartbeat = ").concat(n, ", latestHeartbeatEventTimestamp = ").concat(e)
                }), e > t && (n = 0), u.default.addBreadcrumb({
                    message: "Received Last Heartbeat Event Timestamp. Time Until Next Heartbeat: ".concat(n / 1e3, " seconds. Scheduling Heartbeat")
                }), C(!1), f = setTimeout(() => {
                    T(), E = setInterval(() => {
                        T()
                    }, 9e5)
                }, Math.max(n, 0))
            }

            function C() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                null != f && (clearTimeout(f), f = null), null != E && (clearInterval(E), E = null), null != _ && e && (clearTimeout(_), _ = null)
            }
            async function T() {
                let e = Date.now(),
                    t = await (0, a.getSession)(),
                    n = Date.now();
                if (null == t) {
                    u.default.captureException(Error("Null session when tracking session heartbeat. Waited ".concat(n - e, "ms")));
                    return
                }
                if (!I) {
                    u.default.captureException(Error("Heartbeat scheduler not started when tracking session heartbeat.")), C();
                    return
                }
                u.default.addBreadcrumb({
                    message: "Tracking Heartbeat",
                    data: {
                        initialized: t.initialized
                    }
                });
                let l = o.default.getMemoryUsageElectronRenderer();
                r.default.track(d.AnalyticEvents.CLIENT_HEARTBEAT, {
                    client_heartbeat_initialization_timestamp: t.initialized,
                    client_heartbeat_version: 17,
                    client_heartbeat_renderer_memory: l
                }), s.default.set(c, Date.now().toString())
            }
            let m = null,
                S = !0;

            function N() {
                if (S || null != m && m !== d.RTCConnectionStates.DISCONNECTED && m !== d.RTCConnectionStates.RTC_DISCONNECTED) try {
                    h()
                } catch (e) {
                    u.default.captureException(e)
                } else !I || (I = !1, u.default.addBreadcrumb({
                    message: "Stopping Analytics Heartbeat"
                }), (0, a.setSessionExtendingEnabled)(!1), C())
            }

            function A() {
                u.default.addBreadcrumb({
                    message: "Initializing SessionHeartbeatScheduler"
                }), i.default.addChangeListener(g), l.default.subscribe("WINDOW_FOCUS", R), l.default.subscribe("APP_STATE_UPDATE", O), l.default.subscribe("LOGIN_SUCCESS", p), N()
            }

            function p() {
                T()
            }

            function g() {
                let e = i.default.getState();
                m !== e && (m = e, N())
            }

            function R(e) {
                let {
                    focused: t
                } = e;
                S = t, N()
            }

            function O(e) {
                let {
                    state: t
                } = e;
                S = t === d.AppStates.ACTIVE, N()
            }
        },
        382483: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = n("920872").default
        },
        920872: function(e, t, n) {
            "use strict";

            function a() {
                return {}
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        759370: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("70754"),
                s = n("605250"),
                l = n("619443"),
                i = n("233069"),
                r = n("271938"),
                o = n("42203"),
                u = n("305961"),
                d = n("957255"),
                c = n("845078"),
                E = n("802493"),
                f = n("846527");
            let _ = new s.default("GuildBasicChannels");

            function I(e, t) {
                return null == e || e.type !== t.type || e.parent_id !== t.parent_id || d.default.computeBasicPermissions(e) !== d.default.computeBasicPermissions(t)
            }
            var h = new class e {
                async getAsync(e) {
                    let t = performance.now(),
                        [n, a] = await Promise.all([E.default.basicChannels(e).getKvEntries(), E.default.syncedBasicChannels(e).getKvEntries()]),
                        s = performance.now() - t,
                        [l, i] = function(e) {
                            let t = [],
                                n = [];
                            for (let [a, s] of e)(s ? t : n).push(a);
                            return [t, n]
                        }(a),
                        r = new Set(l);
                    return this.synced = r, _.verbose("loaded in ".concat(s, "ms (guilds: ").concat(n.length, ", synced: ").concat(r.size, " unsynced: ").concat(i.length, ")")), {
                        all: n,
                        stale: i,
                        channels: n.filter(e => {
                            let [t, n] = e;
                            return r.has(t)
                        })
                    }
                }
                handleClearGuildCache(e) {
                    E.default.basicChannelsTransaction(e).delete(), E.default.syncedBasicChannelsTransaction(e).delete(), this.handleReset()
                }
                handleChannelCreate(e, t) {
                    null != e.channel.guild_id && this.unsync(e.channel.guild_id, t)
                }
                handleChannelDelete(e, t) {
                    null != e.channel.guild_id && this.unsync(e.channel.guild_id, t)
                }
                handleChannelUpdates(e, t) {
                    for (let n of e.channels.filter(e => null != e.guild_id)) {
                        let e = o.default.getBasicChannel(n.id);
                        I(e, n) && this.unsync(n.guild_id, t)
                    }
                }
                handleBackgroundSync(e, t) {
                    for (let l of e.guilds) switch (l.data_mode) {
                        case "unavailable":
                            break;
                        case "partial":
                            var n, a, s;
                            let e = e => (0, i.createChannelRecordFromServer)(e, l.id);
                            this.onGuildUpdate(l.id, null !== (a = null === (n = l.partial_updates.channels) || void 0 === n ? void 0 : n.map(e)) && void 0 !== a ? a : [], null !== (s = l.partial_updates.deleted_channel_ids) && void 0 !== s ? s : [], t);
                            break;
                        default:
                            this.onGuildSync(l.id, t)
                    }
                }
                handleConnectionOpen(e, t) {
                    for (let n of e.guilds) this.handleOneGuildCreate(n, t)
                }
                async handlePostConnectionOpen() {
                    let e = l.default.lastTimeConnectedChanged(),
                        t = E.default.database();
                    if (null == this.synced || null == t || !(0, a.isCacheEnabled)()) return;
                    let n = u.default.getGuildIds(),
                        s = n.filter(e => !this.synced.has(e));
                    for (let n of (_.verbose("scheduling basic_channel optimstic writes (guilds: ".concat(s.length, ")")), s)) {
                        if (t !== E.default.database() || e !== l.default.lastTimeConnectedChanged()) break;
                        _.verbose("optimstically writing basic_channels (guild: ".concat(n, ")"));
                        try {
                            await t.transaction(e => this.syncOne(n, e))
                        } catch (e) {
                            _.warn("couldn't optimstically write basic_channel:", e);
                            return
                        }
                        await new Promise(e => setTimeout(e, 1e3))
                    }
                }
                handleGuildCreate(e, t) {
                    this.handleOneGuildCreate(e.guild, t)
                }
                handleOneGuildCreate(e, t) {
                    null != e.channelUpdates ? this.onGuildUpdate(e.id, e.channelUpdates.writes, e.channelUpdates.deletes, t) : this.onGuildSync(e.id, t)
                }
                handleGuildUpdate(e, t) {
                    this.unsync(e.guild.id, t)
                }
                handleGuildDelete(e, t) {
                    !0 !== e.guild.unavailable && this.delete(e.guild.id, t)
                }
                handleGuildRoleUpdate(e, t) {
                    var n;
                    let a = e.role,
                        s = null === (n = u.default.getGuild(e.guildId)) || void 0 === n ? void 0 : n.getRole(a.id);
                    (null == s || a.permissions !== s.permissions) && this.unsync(e.guildId, t)
                }
                handleGuildMemberUpdate(e, t) {
                    e.user.id === r.default.getId() && this.unsync(e.guildId, t)
                }
                handleWriteCaches(e, t) {
                    this.sync(t)
                }
                handleReset() {
                    this.synced = null
                }
                onGuildUpdate(e, t, n, a) {
                    (n.length > 0 || t.some(e => I(o.default.getBasicChannel(e.id), e))) && this.unsync(e, a)
                }
                onGuildSync(e, t) {
                    this.unsync(e, t)
                }
                delete(e, t) {
                    this.unsync(e, t), E.default.basicChannelsTransaction(t).delete(e), E.default.syncedBasicChannelsTransaction(t).delete(e)
                }
                unsync(e, t) {
                    var n;
                    null === (n = this.synced) || void 0 === n || n.delete(e), E.default.basicChannelsTransaction(t).delete(e), E.default.syncedBasicChannelsTransaction(t).put(e, !1), f.default.invalidate(e)
                }
                sync(e) {
                    let t = performance.now(),
                        n = {
                            written: 0,
                            skipped: 0
                        };
                    for (let t of u.default.getGuildIds()) this.syncOne(t, e) ? n.written++ : n.skipped++;
                    let a = performance.now() - t;
                    _.verbose("".concat(n.written, " basic_channel guilds submitted (took: ").concat(a, "ms, skipped: ").concat(n.skipped, " guilds)"))
                }
                syncOne(e, t) {
                    var n, a;
                    return !(null == u.default.getGuild(e) || (null === (n = this.synced) || void 0 === n ? void 0 : n.has(e))) && (null === (a = this.synced) || void 0 === a || a.add(e), E.default.basicChannelsTransaction(t).put(e, function(e) {
                        let t = o.default.getMutableGuildChannelsForGuild(e);
                        return Object.values(t).map(e => ({
                            id: e.id,
                            type: e.type,
                            guild_id: e.guild_id,
                            parent_id: e.parent_id,
                            basicPermissions: c.default.asBasicFlag(d.default.computePermissions(e))
                        }))
                    }(e)), E.default.syncedBasicChannelsTransaction(t).put(e, !0), !0)
                }
                constructor() {
                    this.synced = null, this.actions = {
                        BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
                        CHANNEL_CREATE: (e, t) => this.handleChannelCreate(e, t),
                        CHANNEL_DELETE: (e, t) => this.handleChannelDelete(e, t),
                        CHANNEL_UPDATES: (e, t) => this.handleChannelUpdates(e, t),
                        CLEAR_GUILD_CACHE: (e, t) => this.handleClearGuildCache(t),
                        CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
                        GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
                        GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
                        GUILD_MEMBER_UPDATE: (e, t) => this.handleGuildMemberUpdate(e, t),
                        GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleUpdate(e, t),
                        GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
                        POST_CONNECTION_OPEN: () => this.handlePostConnectionOpen(),
                        WRITE_CACHES: (e, t) => this.handleWriteCaches(e, t)
                    }
                }
            }
        },
        29328: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("605250"),
                s = n("271938"),
                l = n("305961"),
                i = n("665618"),
                r = n("605136"),
                o = n("802493");
            let u = new a.default("Guilds");
            var d = new class e {
                async getAsync(e) {
                    let t = performance.now(),
                        n = await o.default.guilds(e).getMany(),
                        a = performance.now();
                    return u.verbose("loaded in ".concat(a - t, "ms (guilds: ").concat(n.length, ")")), n
                }
                async getOneAsync(e, t) {
                    return await o.default.guilds(e).get(t)
                }
                handleBackgroundSync(e, t) {
                    for (let n of e.guilds) {
                        if ("unavailable" === n.data_mode) return;
                        let e = l.default.getGuild(n.id);
                        null != e && this.put(i.fromBackgroundSync(n, e), t)
                    }
                }
                handleConnectionOpen(e, t) {
                    for (let n of (this.clear(t), e.guilds)) this.putOne(n, t)
                }
                handleGuildCreate(e, t) {
                    this.putOne(e.guild, t)
                }
                handleGuildUpdate(e, t) {
                    let n = l.default.getGuild(e.guild.id),
                        a = i.fromServerUpdate(e.guild, n);
                    this.put(a, t)
                }
                handleGuildDelete(e, t) {
                    this.delete(e.guild.id, t)
                }
                handleGuildRoleChange(e, t) {
                    let n = r.fromServerRole(e.role),
                        a = l.default.getGuild(e.guildId);
                    null != a && this.put(a.upsertRole(n), t)
                }
                handleGuildRoleDelete(e, t) {
                    let n = l.default.getGuild(e.guildId);
                    null != n && this.put(n.deleteRole(e.roleId), t)
                }
                handleGuildMemberAdd(e, t) {
                    if (null != e.joinedAt && e.user.id === s.default.getId()) {
                        let n = l.default.getGuild(e.guildId);
                        null != n && this.put(n.updateJoinedAt(e.joinedAt), t)
                    }
                }
                handleReset() {}
                putOne(e, t) {
                    let n = l.default.getGuild(e.id),
                        a = i.fromServer(e, n);
                    this.put(a, t)
                }
                put(e, t) {
                    o.default.guildsTransaction(t).put(e)
                }
                delete(e, t) {
                    o.default.guildsTransaction(t).delete(e)
                }
                clear(e) {
                    o.default.guildsTransaction(e).delete()
                }
                constructor() {
                    this.actions = {
                        BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
                        CLEAR_GUILD_CACHE: (e, t) => this.clear(t),
                        CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
                        GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
                        GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
                        GUILD_MEMBER_ADD: (e, t) => this.handleGuildMemberAdd(e, t),
                        GUILD_ROLE_CREATE: (e, t) => this.handleGuildRoleChange(e, t),
                        GUILD_ROLE_DELETE: (e, t) => this.handleGuildRoleDelete(e, t),
                        GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleChange(e, t),
                        GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t)
                    }
                }
            }
        },
        799286: function(e, t, n) {
            "use strict";
            n.r(t), n("794897"), n("203288"), n("789563"), n("178406"), n("123561"), n("288518"), n("486503"), n("822825"), n("256572"), n("713135"), n("42203"), n("760190"), n("245997"), n("923959"), n("26989"), n("778689"), n("952451"), n("305961"), n("377253"), n("957255"), n("660478"), n("677099"), n("697218"), n("607620"), n("287850")
        },
        684442: function(e, t, n) {
            "use strict";
            n.r(t), n("218484"), n("191225"), n("794897"), n("846527"), n("8001"), n("246598"), n("988721"), n("166004"), n("383018"), n("299285"), n("56676"), n("194051"), n("809310"), n("288206"), n("191145"), n("203288"), n("670535"), n("385976"), n("802461"), n("789563"), n("670902"), n("430475"), n("324261"), n("419501"), n("994810"), n("449004"), n("954732"), n("612365"), n("263901"), n("54346"), n("619259"), n("558130"), n("887446"), n("720102"), n("982527"), n("178406"), n("863636"), n("471706"), n("565559"), n("665274"), n("648825"), n("256941"), n("398604"), n("123561"), n("62948"), n("166465"), n("267567"), n("921387"), n("275318"), n("94372"), n("83722"), n("288518"), n("486503"), n("692171"), n("770032"), n("136511"), n("25033"), n("400205"), n("140596"), n("116460"), n("138217"), n("685841"), n("256572"), n("764828"), n("662285"), n("488464"), n("325861"), n("77173"), n("834052"), n("364685"), n("347738"), n("401690"), n("689275"), n("821343"), n("755624"), n("593752"), n("800843"), n("610730"), n("612246"), n("521128"), n("915639"), n("161778"), n("374363"), n("453515"), n("407117"), n("410348"), n("373469"), n("271938"), n("950104"), n("870691"), n("935692"), n("19766"), n("508229"), n("2105"), n("42203"), n("816092"), n("47319"), n("350522"), n("368694"), n("313915"), n("474643"), n("760190"), n("319781"), n("925758"), n("55411"), n("555826"), n("341542"), n("245997"), n("923959"), n("525065"), n("124948"), n("26989"), n("778689"), n("952451"), n("305961"), n("10802"), n("88093"), n("353802"), n("330154"), n("216391"), n("260320"), n("169602"), n("42887"), n("486996"), n("377253"), n("555179"), n("1017"), n("130473"), n("957255"), n("669280"), n("824563"), n("336376"), n("501090"), n("945956"), n("660478"), n("27618"), n("744983"), n("18494"), n("162771"), n("101125"), n("235660"), n("677099"), n("280168"), n("262768"), n("336727"), n("381684"), n("191542"), n("462495"), n("282109"), n("330387"), n("697218"), n("555035"), n("800762"), n("160299"), n("572182"), n("150057"), n("607620"), n("677225"), n("287850"), n("316133"), n("545429"), n("535974"), n("352326"), n("227602"), n("189857"), n("860957"), n("901165")
        },
        489560: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("299285"),
                r = n("963662"),
                o = n("592407"),
                u = n("524503"),
                d = n("650509"),
                c = n("49111"),
                E = n("782340"),
                f = n("630159");

            function _(e) {
                let {
                    guild: t
                } = e, n = (0, d.useUnseenEndedApplicationSubscriptionEntitlements)(t), _ = () => (0, u.dismissApplicationSubscriptionExpirationNotice)(t.id), I = s.useMemo(() => new Set(n.map(e => e.applicationId)), [n]), h = (0, l.useStateFromStores)([i.default], () => i.default.getApplications()), C = s.useMemo(() => {
                    let e = [];
                    for (let t of I) {
                        let n = h[t];
                        null != n && e.push(n)
                    }
                    return e
                }, [h, I]);
                if (0 === C.length) return null;
                let T = "";
                return T = 1 === C.length ? E.default.Messages.ONE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: C[0].name
                }) : 2 === C.length ? E.default.Messages.TWO_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: C[0].name,
                    b: C[1].name
                }) : 3 === C.length ? E.default.Messages.THREE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: C[0].name,
                    b: C[1].name,
                    c: C[2].name
                }) : E.default.Messages.MORE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT, (0, a.jsx)(r.default, {
                    guild: t,
                    onDismissed: _,
                    message: T,
                    type: c.ChannelNoticeTypes.APPLICATION_SUBSCRIPTION_EXPIRATION,
                    image: f,
                    onClick: () => {
                        _(), o.default.open(t.id, c.GuildSettingsSections.INTEGRATIONS)
                    },
                    imageMarginTop: 6,
                    imageMarginX: 46,
                    cta: E.default.Messages.APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CTA
                })
            }
        },
        209535: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getRedirectPath: function() {
                    return o
                },
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("803182"),
                l = n("447669"),
                i = n("49111"),
                r = n("492397");

            function o() {
                let e = location.pathname + location.search,
                    t = r.CONFERENCE_MODE_ENABLED ? i.Routes.REGISTER : (0, l.getLoginPath)(e, !1);
                return t
            }
            var u = function() {
                return (0, a.jsx)(s.Redirect, {
                    to: o()
                })
            }
        },
        590157: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                makeAuthenticated: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("271938"),
                l = n("831588"),
                i = n("209535"),
                r = n("49111");

            function o(e, t) {
                var n, o;
                let u = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                    passProps: !0
                };

                function d(n) {
                    if (!(0, l.isAuthenticated)() && s.default.getLoginStatus() !== r.LoginStates.LOGGING_IN && s.default.allowLogoutRedirect()) return null != t ? (0, a.jsx)(t, {
                        renderRedirect: (0, a.jsx)(i.default, {})
                    }) : (0, a.jsx)(i.default, {});
                    return (0, a.jsx)(e, {
                        ...u.passProps ? n : null
                    })
                }
                return d.displayName = "Authenticated(".concat(null !== (o = null !== (n = e.displayName) && void 0 !== n ? n : e.name) && void 0 !== o ? o : "<Unknown>", ")"), d
            }
        },
        126259: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("151426"),
                i = n("77078"),
                r = n("206230"),
                o = n("812204"),
                u = n("685665"),
                d = n("21526"),
                c = n("369964"),
                E = n("697218"),
                f = n("719923"),
                _ = n("897263"),
                I = n("782340"),
                h = n("578501"),
                C = n("287715"),
                T = n("902050"),
                m = n("253323"),
                S = n("256574");
            let N = i.AvatarSizes.SIZE_80;
            var A = () => {
                let e = (0, s.default)([E.default], () => E.default.getCurrentUser()),
                    t = f.default.canUseCollectibles(e),
                    n = (0, s.default)([r.default], () => r.default.useReducedMotion),
                    A = !n,
                    {
                        analyticsLocations: p
                    } = (0, u.default)(o.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP);
                return (0, a.jsx)(c.default, {
                    dismissibleContent: l.DismissibleContent.COLLECTIBLES_AVATAR_DECORATION_SHOP_COACHMARK,
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0,
                    isPremiumFeature: !0,
                    artClassName: h.shopArt,
                    position: "top",
                    tryItText: t ? I.default.Messages.AVATAR_DECORATION_SHOP_UPSELL_NITRO_CTA : I.default.Messages.AVATAR_DECORATION_SHOP_UPSELL_CTA,
                    onTryFeature: () => {
                        (0, d.openCollectiblesShop)({
                            analyticsLocations: p,
                            analyticsSource: o.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP
                        })
                    },
                    header: t ? I.default.Messages.AVATAR_DECORATION_SHOP_UPSELL_NITRO_HEADER : I.default.Messages.AVATAR_DECORATION_SHOP_UPSELL_HEADER,
                    body: (0, a.jsx)(a.Fragment, {
                        children: (0, a.jsx)(i.Text, {
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: t ? I.default.Messages.AVATAR_DECORATION_SHOP_UPSELL_NITRO_CONTENT : I.default.Messages.AVATAR_DECORATION_SHOP_UPSELL_CONTENT
                        })
                    }),
                    art: (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("img", {
                            className: h.logo,
                            alt: "",
                            src: S
                        }), (0, a.jsxs)("div", {
                            className: h.avatars,
                            children: [(0, a.jsx)(i.Avatar, {
                                className: h.avatar1,
                                src: C,
                                avatarDecoration: (0, _.default)("a_1dbc603c181999b9815cb426dfec71a6", N, A),
                                size: N,
                                "aria-hidden": !0
                            }), (0, a.jsx)(i.Avatar, {
                                className: h.avatar2,
                                src: T,
                                avatarDecoration: (0, _.default)("a_9b7b74e72efe1bc5a6beddced3da3c0f", N, A),
                                size: N,
                                "aria-hidden": !0
                            }), (0, a.jsx)(i.Avatar, {
                                className: h.avatar3,
                                src: m,
                                avatarDecoration: (0, _.default)("a_db9baf0ba7cf449d2b027c06309dbe8d", N, A),
                                size: N,
                                "aria-hidden": !0
                            })]
                        })]
                    })
                })
            }
        },
        897263: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("315102"),
                s = n("606292"),
                l = (e, t, n) => (0, a.getAvatarDecorationURL)({
                    avatarDecoration: {
                        asset: e
                    },
                    size: (0, s.getDecorationSizeForAvatarSize)(t),
                    canAnimate: n
                })
        },
        882278: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("42203"),
                i = n("697218"),
                r = n("194051"),
                o = n("754493");

            function u(e) {
                var t, n;
                let u = (0, s.useStateFromStores)([i.default], () => i.default.getCurrentUser()),
                    d = (0, s.useStateFromStores)([l.default], () => l.default.getChannel(e)),
                    c = (0, s.useStateFromStores)([r.default], () => null != e ? r.default.getBroadcastByChannel(e) : null),
                    E = (0, o.default)(),
                    f = a.useMemo(() => {
                        var e;
                        return null !== (t = null == d ? void 0 : null === (e = d.recipients) || void 0 === e ? void 0 : e.map(e => i.default.getUser(e)).filter(e => null != e && e.id !== (null == c ? void 0 : c.userId))) && void 0 !== t ? t : []
                    }, [null == c ? void 0 : c.userId, null == d ? void 0 : d.recipients]);
                return null == u ? [] : E ? f : null !== (n = f.length > 0 ? [u].concat(f) : null == c ? void 0 : c.viewers) && void 0 !== n ? n : []
            }
        },
        484140: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("669491"),
                r = n("77078"),
                o = n("987317"),
                u = n("990766"),
                d = n("716241"),
                c = n("673527"),
                E = n("410348"),
                f = n("271938"),
                _ = n("546463"),
                I = n("18494"),
                h = n("697218"),
                C = n("953109"),
                T = n("277174"),
                m = n("368121"),
                S = n("811305"),
                N = n("158998"),
                A = n("882278"),
                p = n("754493"),
                g = n("813531"),
                R = n("49111"),
                O = n("706530"),
                L = n("782340"),
                M = n("42845");

            function v(e) {
                let {
                    users: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: M.viewers,
                    children: [(0, a.jsx)(m.default, {
                        width: 16,
                        height: 16,
                        color: i.default.colors.HEADER_PRIMARY.css
                    }), (0, a.jsx)(S.default, {
                        showUserPopout: !0,
                        useFallbackUserForPopout: !0,
                        users: t,
                        max: 6,
                        size: S.Sizes.SIZE_24
                    })]
                })
            }

            function D(e) {
                var t;
                let {
                    broadcast: n
                } = e, {
                    userId: i,
                    applicationId: m,
                    channelId: S,
                    streamKey: D
                } = n, [x, P] = s.useState(!1), y = (0, l.useStateFromStores)([h.default], () => h.default.getUser(i)), b = (0, l.useStateFromStores)([_.default], () => _.default.getDetectableGame(m)), U = null !== (t = N.default.getGlobalName(y)) && void 0 !== t ? t : N.default.getUserTag(y), G = (0, g.default)(), j = (0, l.useStateFromStores)([E.default], () => E.default.getPreviewURL(null, S, i)), F = (0, l.useStateFromStores)([I.default], () => I.default.getVoiceChannelId()), k = (0, p.default)(), B = (0, A.default)(S);
                if (s.useEffect(() => {
                        x && F === S && P(!1)
                    }, [F, x, S]), null == y || null == U) return null;
                let {
                    buttonColor: w,
                    buttonCTA: H,
                    disabled: V
                } = function(e, t) {
                    let n = f.default.getId(),
                        a = t.some(e => e.id === n) || e === n,
                        s = t.length >= R.MAX_GROUP_DM_BROADCAST_PARTICIPANTS;
                    return {
                        buttonColor: s ? r.ButtonColors.RED : r.ButtonColors.GREEN,
                        buttonCTA: s ? L.default.Messages.BROADCAST_FULL : a ? L.default.Messages.VIEW_BROADCAST : L.default.Messages.JOIN_BROADCAST,
                        disabled: s
                    }
                }(i, B);
                return (0, a.jsxs)("div", {
                    className: M.container,
                    children: [(0, a.jsx)(r.Avatar, {
                        size: r.AvatarSizes.SIZE_32,
                        src: y.getAvatarURL(null, 32),
                        "aria-label": U
                    }), (0, a.jsxs)("div", {
                        className: M.details,
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-md/semibold",
                            children: U
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-sm/medium",
                            color: "header-secondary",
                            children: null != b ? L.default.Messages.STREAMING.format({
                                name: b.name
                            }) : L.default.Messages.STREAMING_A_GAME
                        }), (0, a.jsxs)("div", {
                            className: M.activity,
                            children: [B.length > 0 && (0, a.jsx)(v, {
                                users: B
                            }), (0, a.jsxs)(r.Button, {
                                onClick: () => {
                                    if (F === S) {
                                        o.default.selectPrivateChannel(S);
                                        return
                                    }
                                    P(!0), (0, u.joinPrivateChannelAndWatchStream)(S, D), d.default.trackWithMetadata(R.AnalyticEvents.BROADCAST_VIEWED, {
                                        num_active_broadcasts: G.length,
                                        broadcast_position: G.findIndex(e => e.userId === i) + 1,
                                        is_broadcasting: k,
                                        broadcast_channel_id: S
                                    })
                                },
                                color: w,
                                size: r.ButtonSizes.SMALL,
                                className: M.button,
                                disabled: V,
                                innerClassName: M.innerButton,
                                children: [(0, a.jsx)(T.default, {
                                    width: 16,
                                    height: 16
                                }), H]
                            })]
                        })]
                    }), null != j ? (0, a.jsx)(c.default, {
                        className: M.stream,
                        stream: {
                            streamType: O.StreamTypes.CALL,
                            ownerId: i,
                            channelId: S
                        }
                    }) : (0, a.jsx)(C.default, {
                        game: b,
                        size: C.default.Sizes.LARGE,
                        className: M.gameIcon
                    })]
                })
            }
        },
        347272: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("77078"),
                i = n("774223"),
                r = n("9759"),
                o = n("813531"),
                u = n("484140"),
                d = n("395635"),
                c = n("782340"),
                E = n("472036");

            function f() {
                let {
                    canViewBroadcasts: e
                } = r.default.useExperiment({
                    location: "broadcast_list_no_track"
                }, {
                    autoTrackExposure: !1
                }), t = (0, o.default)();
                return 0 === t.length ? null : (r.default.trackExposure({
                    location: "broadcast_list"
                }), e) ? (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)("div", {
                        className: E.header,
                        children: (0, a.jsxs)("div", {
                            className: E.inline,
                            children: [(0, a.jsx)(i.default, {
                                color: s.default.colors.HEADER_PRIMARY.css,
                                height: 20,
                                width: 20
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-md/semibold",
                                children: c.default.Messages.LIVE_BROADCASTS
                            }), (0, a.jsx)(d.default, {}), (0, a.jsxs)(l.Heading, {
                                variant: "heading-md/semibold",
                                children: ["— ", t.length.toLocaleString()]
                            })]
                        })
                    }), t.map(e => (0, a.jsx)(u.default, {
                        broadcast: e
                    }, e.userId))]
                }) : null
            }
        },
        809310: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ENABLE_CACHE_STORE: function() {
                    return U
                }
            });
            var a = n("102053");
            n("576863");
            var s = n("316693"),
                l = n("446674"),
                i = n("95410"),
                r = n("913144"),
                o = n("595525"),
                u = n("759370"),
                d = n("29328"),
                c = n("849365"),
                E = n("219788"),
                f = n("860255"),
                _ = n("794897"),
                I = n("723939"),
                h = n("605250"),
                C = n("619443"),
                T = n("410912"),
                m = n("271938"),
                S = n("42203"),
                N = n("305961"),
                A = n("660478"),
                p = n("18494"),
                g = n("162771"),
                R = n("697218"),
                O = n("287850"),
                L = n("831588"),
                M = n("773336"),
                v = n("969388"),
                D = n("288206"),
                x = n("1544"),
                P = n("619317"),
                y = n("49111");
            let b = new h.default("CacheStore"),
                U = !1,
                G = "stable-27",
                j = !1,
                F = "initializing",
                k = 0,
                B = !1,
                w = !1,
                H = !1;

            function V(e) {
                b.log("Clearing cache store"), k = Date.now(), D.default.clear(), i.default.remove(y.CACHE_STORE_KEY), i.default.remove(y.CACHE_STORE_LAZY_KEY), i.default.remove(y.CACHE_STORE_CHANNELS_LAZY_KEY), I.default.replaceDisableAllDatabases("CacheStore (".concat(e, ")")), F = "no-cache"
            }

            function Y() {
                if (!(0, L.isAuthenticated)()) {
                    b.log("Not writing cache because not authenticated");
                    return
                }
                if (j) {
                    b.log("Not writing cache because caches cleared");
                    return
                }
                if (!H) {
                    b.log("Not writing cache because never connected");
                    return
                }
                W()
            }

            function W() {
                b.verbose("Writing cache now"), k = Date.now();
                let e = K(),
                    t = {
                        version: G,
                        channels: K(),
                        guilds: function() {
                            let e = N.default.getGuild(g.default.getGuildId());
                            return null != e ? [e] : []
                        }(),
                        users: function(e) {
                            let t = new Set;
                            e.forEach(e => {
                                e.isPrivate() && e.recipients.forEach(e => {
                                    let n = R.default.getUser(e);
                                    null != n && t.add(n)
                                })
                            }), O.default.getPrivateChannelIds().forEach(e => {
                                let n = S.default.getChannel(e);
                                (null == n ? void 0 : n.isPrivate()) && n.recipients.forEach(e => {
                                    let n = R.default.getUser(e);
                                    null != n && t.add(n)
                                })
                            });
                            let n = R.default.getCurrentUser();
                            return null != n && t.add(n), Array.from(t)
                        }(e),
                        readStates: function() {
                            return A.default.getAllReadStates(!1)
                        }()
                    };
                B = !0, i.default.set(y.CACHE_STORE_KEY, t), i.default.remove(y.CACHE_STORE_CHANNELS_LAZY_KEY),
                    function() {
                        let e = Date.now().toString(),
                            t = {
                                version: G,
                                nonce: e,
                                saveableChannels: _.default.toSnapshot()
                            };
                        b.verbose("Writing lazy cache (nonce: ".concat(e, ")")), r.default.dispatch({
                            type: "WRITE_CACHES",
                            nonce: e
                        }), i.default.set(y.CACHE_STORE_LAZY_KEY, t), D.default.persist(e)
                    }()
            }

            function K() {
                let e = S.default.getChannel(p.default.getChannelId());
                return null != e ? [e] : []
            }

            function z(e) {
                if (null != e.guilds) {
                    for (let {
                            roles: t
                        }
                        of e.guilds)
                        if (null != t)
                            for (let e in t) {
                                let n = t[e];
                                n.permissions = s.default.deserialize(n.permissions)
                            }
                }
                null != e.channels && (0, x.default)(e.channels), null != e.privateChannels && (0, x.default)(e.privateChannels), null != e.guildChannels && (0, x.deserializeChannelEntries)(e.guildChannels)
            }
            async function q(e, t, n) {
                let a = performance.now();
                if (null == e || null == n) return b.verbose("skipped loaded messages (channel: ".concat(n, ", database: ").concat(e, ").")), [performance.now() - a, {
                    guildId: null,
                    channelId: null,
                    users: [],
                    members: [],
                    messages: []
                }];
                {
                    let s = await E.default.startupLoad(e, t, n, y.MAX_MESSAGES_PER_CHANNEL);
                    b.verbose("loaded ".concat(s.messages.length, " messages (guild: ").concat(t, ", channel: ").concat(n, ")."));
                    let l = {
                        guildId: t,
                        channelId: n,
                        users: s.users,
                        members: s.members,
                        messages: s.messages
                    };
                    return [performance.now() - a, l]
                }
            }
            async function Q() {
                let e = performance.now(),
                    t = await new Promise(e => i.default.asyncGet(y.CACHE_STORE_KEY, e));
                return (null == t ? void 0 : t.version) === G ? (z(t), [performance.now() - e, t]) : (b.log("cache either did not exist, or contains an incompatible version (required: ".concat(G, ", loaded: ").concat(null == t ? void 0 : t.version, ").")), [performance.now() - e, null])
            }
            async function X(e, t, n) {
                var s, i, o, u, d;
                b.verbose("loading early cache");
                let c = C.default.getSocket();
                c.connect();
                let E = null !== (s = g.default.getGuildId()) && void 0 !== s ? s : null,
                    _ = null !== (i = p.default.getChannelId()) && void 0 !== i ? i : null,
                    I = performance.now(),
                    h = T.default.loadCachedMessages.measureAsyncWithoutNesting(() => q(e, E, _)),
                    m = T.default.loadMiniCache.measureAsyncWithoutNesting(Q),
                    S = T.default.fetchInitialGuildCache.measureAsync(() => J(e, c, n)),
                    N = null != e && "private-channels" === n.page ? a.default.timeAsync("\uD83D\uDCBE", "kv: private_channels", () => f.default.getAsync(e, null)) : Promise.resolve([]),
                    [
                        [A, R],
                        [O, L], M, v
                    ] = await Promise.all([m, h, S, N]),
                    D = performance.now() - I;
                if (b.verbose("cache loaded in ".concat(D, "ms (legacy ").concat(A, "ms, channel_history ").concat(O, "ms)")), null == R || null == L) return b.verbose("finished without dispatching CACHE_LOADED"), [!1, null, 0];
                {
                    let s = Object.fromEntries(L.members.map(e => [e.userId, e])),
                        i = null != M.guild && null != M.channels,
                        f = null !== (u = M.guild) && void 0 !== u ? u : null;
                    return l.default.Emitter.batched(() => {
                        var e;
                        a.default.time("\uD83D\uDCBE", "Dispatch Mini Cache", () => r.default.dispatch({
                            ...R,
                            type: "CACHE_LOADED",
                            guilds: null != f ? [...R.guilds, f] : R.guilds,
                            channels: [...R.channels, ...v, ...null !== (e = M.channels) && void 0 !== e ? e : []],
                            users: [...R.users, ...L.users],
                            messages: null == L.channelId ? {} : {
                                [L.channelId]: L.messages
                            },
                            guildMembers: null == L.guildId ? {} : {
                                [L.guildId]: s
                            }
                        })), a.default.time("\uD83D\uDCBE", "socket.processFirstQueuedDispatch()", () => c.processFirstQueuedDispatch(new Set(["INITIAL_GUILD"])))
                    }), b.verbose("early_cache_summary: (\n        ok: true\n        meta:\n          auth_user_id: ".concat(t, "\n          selected_guild: ").concat(E, "\n          selected_channel: ").concat(_, "\n          navigation_state: ").concat(JSON.stringify(n), "\n          database: ").concat(null != e, "\n            name: ").concat(null == e ? void 0 : e.name, "\n        data:\n          database:\n            private_channels: ").concat("private-channels" === n.page ? v.length : "skipped", "\n            channel_history:\n              guild: ").concat(L.guildId, "\n              channel: ").concat(L.channelId, "\n              messages: ").concat(L.messages.length, "\n                members: ").concat(L.members.length, "\n                users: ").concat(L.users.length, "\n            initial_guild:\n              id: ").concat(null == f ? void 0 : f.id, "\n              channels: ").concat(null === (o = M.channels) || void 0 === o ? void 0 : o.length, "\n          legacy:\n            guilds: ").concat(R.guilds.length, " (").concat(R.guilds.map(e => e.id).join(", "), ")\n            channels: ").concat(R.channels.length, " (").concat(R.channels.map(e => e.id).join(", "), ")\n            users: ").concat(R.users.length, "\n            read_states: ").concat(R.readStates.length, "\n      )")), b.verbose("finished dispatching CACHE_LOADED"), [!0, i && null !== (d = null == f ? void 0 : f.id) && void 0 !== d ? d : null, v.length]
                }
            }
            async function J(e, t, n) {
                let a = t.getIdentifyInitialGuildId();
                if (null == a && "guild-channels" === n.page && (a = n.guildId), null == e || null == a) return b.verbose("skipped loading initial guild (guild: ".concat(a, ", database: ").concat(e, ")")), Promise.resolve({
                    guild: null,
                    channels: null
                });
                let s = a,
                    [l, i] = await Promise.all([(0, o.tryLoadAsync)(() => d.default.getOneAsync(e, s)), (0, o.tryLoadAsync)(() => f.default.getAsync(e, s))]);
                return {
                    guild: l,
                    channels: i
                }
            }
            async function Z(e, t, n, s, l) {
                b.verbose("loading late lazy cache");
                let [E, _, I, h, m] = await T.default.fetchLazyCache.measureAsync(() => Promise.all([a.default.timeAsync("\uD83D\uDCBE", "storage: ".concat(y.CACHE_STORE_LAZY_KEY), () => i.default.asyncGetRaw(y.CACHE_STORE_LAZY_KEY)), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: cache_version", () => c.default.okAsync(e)) : Promise.resolve(!0)), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: guilds", () => d.default.getAsync(e)) : Promise.resolve([])), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: basic_channels", () => u.default.getAsync(e)) : Promise.resolve({
                    all: [],
                    stale: [],
                    channels: []
                })), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: private_channels", () => f.default.getAsync(e, null)) : Promise.resolve([]))])), S = await T.default.fetchStaleChannels.measureAsync(() => null != e && null != h && h.stale.length > 0 ? (0, o.tryLoadAsync)(() => {
                    var t, n;
                    return t = e, n = h.stale, b.verbose("loading stale guild channels (count: ".concat(n.length, ", ids: ").concat(n.join(", "), ")")), Promise.all(n.map(e => f.default.getAsync(t, e).then(t => [e, t])))
                }) : Promise.resolve([]));
                await new Promise(e => setTimeout(e, 0)), T.default.loadLazyCache.recordStart();
                let N = C.default.getSocket();
                $(() => {
                    var a, i, o;
                    let u = performance.now();
                    if (!1 === _) {
                        V("database: not ok"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (null == I || null == h || null == S || null == m) {
                        (0, P.default)("database:load_failed"), b.log("couldn't load database item (\n          database: ".concat(null != e, "\n          basic_channels: ").concat(null != h, "\n          guild_channels: ").concat(null != S, "\n          private_channels: ").concat(null != m, "\n          guilds: ").concat(null != I, "\n        )")), V("database: load_failed"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (null == _ && (I.length > 0 || m.length > 0 || h.all.length > 0)) {
                        (0, P.default)("database:versionless"), V("database: versionless"), b.log("kv_cache was not ok (null version with values)"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (w) {
                        b.log("Skipping lazy cache; already connected."), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (null == E) {
                        b.log("Lazy cache was missing"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    N.addAnalytics({
                        hadCacheAtStartup: !0
                    });
                    let d = T.default.parseLazyCache.measure(() => JSON.parse(E));
                    if (d.version !== G) {
                        b.log("Saved cached has mismatched version. Expected ".concat(G, ", got ").concat(d.version)), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    let c = d.nonce,
                        f = D.default.getSavedNonce();
                    if ("" !== f && c !== f) {
                        (0, P.default)("nonce:lazy_cache"), b.log("ClientStateStore has mismatched nonces with cache."), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    let C = {
                        ...d,
                        guilds: I,
                        privateChannels: m,
                        guildChannels: S,
                        basicGuildChannels: h.channels,
                        initialGuildId: n
                    };
                    T.default.deserializeCache.measure(() => z(C)), T.default.dispatchLazyCache.measure(() => r.default.dispatch({
                        type: "CACHE_LOADED_LAZY",
                        ...C
                    })), b.verbose("late lazy cache loaded (ok: true, took: ".concat(performance.now() - u, "ms)")), N.addAnalytics({
                        usedCacheAtStartup: !0
                    });
                    let A = S.reduce((e, t) => {
                            let [n, a] = t;
                            return e + a.length
                        }, 0),
                        p = S.length,
                        g = h.all.reduce((e, t) => {
                            let [n, a] = t;
                            return e + a.length
                        }, 0),
                        R = h.channels.reduce((e, t) => {
                            let [n, a] = t;
                            return e + a.length
                        }, 0),
                        O = g - R,
                        L = 0 === h.stale.length ? "" : " \xb7 ".concat(h.stale.join(", "));
                    b.verbose("lazy_cache_summary: (\n        ok: true\n        meta:\n          auth_user_id: ".concat(t, "\n          nonce: ").concat(c, "\n          initial_guild: ").concat(n, "\n          database: ").concat(null != e, "\n            ok: ").concat(_, "\n            name: ").concat(null == e ? void 0 : e.name, "\n        data:\n          database:\n            guilds: ").concat(I.length, "\n            private_channels: ").concat("private-channels" === s.page ? "skipped" : m.length, "\n            basic_channels:\n              total: ").concat(g, " (").concat(h.channels.length, " guilds)\n              stale: ").concat(O, " (").concat(h.stale.length, " guilds").concat(L, ")\n              unstale: ").concat(R, "\n            full_channels (guilds_with_stale_basic_channels):\n              total: ").concat(A, " (").concat(S.length, " guilds)\n          legacy:\n              saveable_channels: ").concat(null === (i = C.saveableChannels) || void 0 === i ? void 0 : null === (a = i.channels) || void 0 === a ? void 0 : a.length, "\n              users: ").concat(null === (o = C.users) || void 0 === o ? void 0 : o.length, "\n      )")), T.default.setCacheInfo({
                        guilds: I.length,
                        privateChannels: l + m.length,
                        basicChannels: g,
                        basicChannelsStale: O,
                        fullChannels: A,
                        fullChannelGuilds: p
                    })
                })
            }

            function $(e) {
                let t = C.default.getSocket(),
                    n = !1;
                l.default.Emitter.batched(() => {
                    try {
                        if (e(), !t.hasQueuedDispatches()) {
                            b.verbose("Processing Dispatch Queue"), t.processDispatchQueue();
                            return
                        }
                        n = !0, T.default.loadLazyCache.recordEnd(), b.verbose("Processing First Queued Dispatch"), t.processFirstQueuedDispatch(new Set(["READY", "INITIAL_GUILD"])), setTimeout(() => {
                            b.verbose("Processing Dispatch Queue"), t.processDispatchQueue()
                        }, 100)
                    } catch (e) {
                        var a;
                        b.warn("Lazy cache has encountered error", e), V("error: resumeFluxAndSocket"), null === (a = C.default.getSocket()) || void 0 === a || a.resetSocketOnError(e, "LazyCache", {
                            sentry: !0,
                            immediate: !0
                        })
                    }
                }), !n && T.default.loadLazyCache.recordEnd()
            }
            class ee extends l.default.Store {
                initialize() {
                    if (!U) {
                        let e = C.default.getSocket();
                        e.processDispatchQueue()
                    }
                }
                hasCache() {
                    return !U || B
                }
                getLazyCacheStatus() {
                    return U ? F : "no-cache"
                }
                async loadCacheAsync(e, t) {
                    let n = (0, v.callOnce)(t);
                    if ("initializing" !== F) {
                        n(), setTimeout(() => {
                            var e;
                            return null === (e = C.default.getSocket()) || void 0 === e ? void 0 : e.processDispatchQueue()
                        }, 0);
                        return
                    }
                    try {
                        let t = m.default.getId(),
                            a = I.default.carefullyOpenDatabase(t),
                            [s, l, i] = await X(a, t, e);
                        s ? (n(), await Z(a, t, l, e, i)) : (n(), await ($(() => r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        })), Promise.resolve()))
                    } catch (e) {
                        var a;
                        b.error("clearing cache. exception encountered while loading cache.", e, e.stack), V("loadCacheAsync"), n(), null === (a = C.default.getSocket()) || void 0 === a || a.resetSocketOnError(e, "loadCacheAsync", {
                            sentry: !0,
                            immediate: !0
                        })
                    }
                }
                constructor(...e) {
                    super(...e), this.persist = W
                }
            }
            ee.displayName = "CacheStore", new ee(r.default, U ? {
                CONNECTION_OPEN: function() {
                    return w = !0, H = !0, !1
                },
                LOGOUT: function() {
                    V("action: LOGOUT")
                },
                CONNECTION_CLOSED: function() {
                    return w = !1, H = !0, b.verbose("Writing cache on connection closed"), Y(), !1
                },
                APP_STATE_UPDATE: function(e) {
                    let {
                        state: t
                    } = e, n = (0, M.isAndroid)() ? y.AppStates.BACKGROUND : y.AppStates.INACTIVE;
                    return n === t && w && Y(), !1
                },
                CACHE_LOADED: function() {
                    B = !0
                },
                CACHE_LOADED_LAZY: function() {
                    B = !0, F = "cache-loaded"
                },
                CACHE_LOADED_LAZY_NO_CACHE: function() {
                    F = "no-cache"
                },
                CLEAR_CACHES: function() {
                    V("action: CLEAR_CACHES"), j = !0
                },
                WINDOW_FOCUS: function(e) {
                    let {
                        focused: t
                    } = e;
                    return !t && (Date.now() - k > 9e5 ? (b.verbose("Writing cache from window unfocus"), Y()) : b.verbose("Not writing cache from window unfocus")), !1
                }
            } : {})
        },
        619317: function(e, t, n) {
            "use strict";

            function a(e) {}
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        842272: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("782340");

            function s(e, t, n) {
                return n ? a.default.Messages.CONSOLE_CONNECTING_DISABLED : t ? a.default.Messages.SERVER_DEAFENED_DIALOG_TITLE : e ? a.default.Messages.UNDEAFEN : a.default.Messages.DEAFEN
            }
        },
        734592: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("913144"),
                s = n("629109"),
                l = n("316272"),
                i = n("292687"),
                r = n("42887"),
                o = n("568307"),
                u = n("471671"),
                d = n("49111"),
                c = n("353927");
            let E = new Set,
                f = new Set,
                _ = null;

            function I() {
                for (let e of E) s.default.setDisableLocalVideo(e, d.VideoToggleState.MANUAL_ENABLED, c.MediaEngineContextTypes.DEFAULT, !1);
                f.clear(), E.clear()
            }
            class h extends l.default {
                _initialize() {
                    a.default.subscribe("RTC_CONNECTION_VIDEO", this.handleIncomingVideo), a.default.subscribe("AUDIO_SET_LOCAL_VIDEO_DISABLED", this.handleManualLocalVideoToggle), a.default.subscribe("WINDOW_FOCUS", this.handleWindowFocus), a.default.subscribe("VOICE_CHANNEL_SELECT", this.handleVoiceChannelSelect), i.default.addChangeListener(this.handlePopoutChange)
                }
                _terminate() {
                    a.default.unsubscribe("RTC_CONNECTION_VIDEO", this.handleIncomingVideo), a.default.unsubscribe("AUDIO_SET_LOCAL_VIDEO_DISABLED", this.handleManualLocalVideoToggle), a.default.unsubscribe("WINDOW_FOCUS", this.handleWindowFocus), a.default.unsubscribe("VOICE_CHANNEL_SELECT", this.handleVoiceChannelSelect), i.default.removeChangeListener(this.handlePopoutChange), I(), _ = null
                }
                handleIncomingVideo(e) {
                    let {
                        userId: t,
                        context: n,
                        streamId: a
                    } = e;
                    if (n !== c.MediaEngineContextTypes.DEFAULT || null == a) return;
                    let l = null != o.default.getVisibleGame(),
                        _ = u.default.isFocused(),
                        I = i.default.getWindowFocused(d.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
                        h = r.default.isLocalVideoDisabled(t, n),
                        C = f.has(t);
                    l && !_ && !I && !h && !C && (E.add(t), s.default.setDisableLocalVideo(t, d.VideoToggleState.DISABLED, n, !1))
                }
                handleManualLocalVideoToggle(e) {
                    let {
                        userId: t,
                        persist: n
                    } = e;
                    n && (f.add(t), E.delete(t))
                }
                constructor(...e) {
                    super(...e), this.handleWindowFocus = e => {
                        let {
                            focused: t
                        } = e;
                        t && I()
                    }, this.handleVoiceChannelSelect = e => {
                        let {
                            channelId: t
                        } = e;
                        t !== _ && (I(), _ = t)
                    }, this.handlePopoutChange = () => {
                        i.default.getWindowFocused(d.PopoutWindowKeys.CHANNEL_CALL_POPOUT) && I()
                    }
                }
            }
            var C = new h
        },
        278572: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return Y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("301165"),
                o = n("446674"),
                u = n("77078"),
                d = n("561288"),
                c = n("228157"),
                E = n("987317"),
                f = n("543155"),
                _ = n("843962"),
                I = n("679653"),
                h = n("393414"),
                C = n("659558"),
                T = n("439141"),
                m = n("648911"),
                S = n("999180"),
                N = n("289180"),
                A = n("19065"),
                p = n("981913"),
                g = n("742683"),
                R = n("116439"),
                O = n("42887"),
                L = n("697218"),
                M = n("471671"),
                v = n("945330"),
                D = n("823050"),
                x = n("439932"),
                P = n("191145"),
                y = n("458685"),
                b = n("49111"),
                U = n("353927"),
                G = n("782340"),
                j = n("597976"),
                F = n("212029");
            let k = {
                    width: 232,
                    height: 315
                },
                B = {
                    width: 232,
                    height: 267
                },
                w = {
                    width: 475,
                    height: 267
                };

            function H(e) {
                let {
                    header: t
                } = e, n = O.default.getCameraComponent(), l = (0, o.useStateFromStores)([O.default], () => O.default.getVideoDeviceId()), i = (0, m.default)();
                return s.useEffect(() => {
                    let e = L.default.getCurrentUser();
                    if (i && null != e) {
                        let t = (0, C.getLastUsedVideoBackgroundOption)(e);
                        (0, T.applyBackgroundOptionPreview)(t, l, {
                            track: !1
                        }).catch(b.NOOP)
                    }
                }, [i, l]), (0, a.jsxs)("div", {
                    className: j.previewRoot,
                    children: [(0, a.jsx)(u.Spinner, {}), (0, a.jsx)("div", {
                        className: j.preview,
                        children: (0, a.jsx)(n, {
                            disabled: !1,
                            deviceId: l,
                            width: w.width,
                            height: w.height
                        })
                    }), (0, a.jsx)("div", {
                        className: j.previewChannelHeader,
                        children: t
                    })]
                })
            }

            function V(e) {
                let {
                    canVideo: t,
                    channel: n,
                    numVideoDevices: s
                } = e, {
                    cameraUnavailable: l,
                    enabled: r
                } = (0, S.default)(), o = (0, N.default)(n);
                return (0, a.jsxs)("div", {
                    className: j.actions,
                    children: [(0, a.jsx)(p.CenterControlButton, {
                        iconComponent: v.default,
                        color: "red",
                        className: j.actionButton,
                        label: G.default.Messages.DISMISS,
                        onClick: () => d.default.stopRinging(n.id)
                    }), t && (0, a.jsx)(u.Popout, {
                        renderPopout: e => {
                            let {
                                closePopout: t
                            } = e;
                            return (0, a.jsx)(y.default, {
                                onClose: t
                            })
                        },
                        position: "top",
                        align: "center",
                        animation: u.Popout.Animation.FADE,
                        children: (e, t) => {
                            let {
                                onClick: i
                            } = e, {
                                isShown: u
                            } = t;
                            return (0, a.jsx)(R.default, {
                                join: !0,
                                enabled: r,
                                color: "green",
                                centerButton: !0,
                                hasPermission: o,
                                cameraUnavailable: l,
                                channel: n,
                                onPopoutClick: s > 1 ? i : null,
                                className: j.actionButton,
                                popoutOpen: u,
                                onCameraUnavailable: A.default,
                                onChange: () => {
                                    E.default.selectVoiceChannel(n.id, !0), (0, h.transitionToGuild)(b.ME, n.id)
                                }
                            })
                        }
                    }), (0, a.jsx)(g.default, {
                        channel: n,
                        color: "green",
                        centerButton: !0,
                        className: i(j.actionButton, j.last),
                        onClick: () => E.default.selectVoiceChannel(n.id)
                    })]
                })
            }

            function Y(e) {
                let {
                    animatedStyle: t,
                    y: n,
                    x: l,
                    channel: E
                } = e, [h, C] = s.useState(!1), T = (0, _.getChannelIconURL)(E), m = (0, I.default)(E), [S, N] = (0, o.useStateFromStoresArray)([O.default], () => [O.default.supports(U.Features.VIDEO), Object.keys(O.default.getVideoDevices()).length]), A = (0, o.useStateFromStores)([M.default], () => M.default.isFocused()), p = (0, o.useStateFromStores)([P.default], () => P.default.getMode(E.id)), g = s.useCallback(e => {
                    null != e.top && null != e.left && c.default.move(e.left, e.top)
                }, []), R = (0, r.useSpring)({
                    value: h ? 1 : 0,
                    config: {
                        ...r.config.stiff,
                        clamp: !0
                    }
                });
                s.useEffect(() => {
                    let e = e => {
                        e.keyCode === b.KeyboardKeys.ESCAPE && d.default.stopRinging(E.id)
                    };
                    return window.addEventListener("keydown", e), () => window.removeEventListener("keydown", e)
                }, [E]);
                let L = p === b.ChannelModes.VIDEO && S && N > 0,
                    v = (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(D.default, {
                            className: j.icon,
                            ringing: A,
                            src: null != T ? T : "",
                            ringingType: D.default.RingingType.INCOMING,
                            size: h ? u.AvatarSizes.SIZE_40 : u.AvatarSizes.SIZE_80
                        }), (0, a.jsxs)("div", {
                            className: j.titleGroup,
                            children: [(0, a.jsx)(u.Text, {
                                className: j.title,
                                color: "header-primary",
                                variant: h ? "text-md/semibold" : "text-lg/semibold",
                                children: m
                            }), (0, a.jsx)(u.Text, {
                                color: "header-secondary",
                                className: j.subtitle,
                                variant: h ? "text-sm/normal" : "text-md/normal",
                                children: p === b.ChannelModes.VOICE ? G.default.Messages.INCOMING_CALL_ELLIPSIS : G.default.Messages.INCOMING_VIDEO_CALL_ELLIPSIS
                            })]
                        })]
                    }),
                    y = L ? k : B;
                return (0, a.jsx)(f.default, {
                    className: j.wrapper,
                    selector: ".".concat(j.root),
                    initialPosition: {
                        left: l,
                        top: n
                    },
                    maxX: window.innerWidth,
                    maxY: window.innerHeight,
                    onDragEnd: g,
                    dragAnywhere: !0,
                    children: (0, a.jsx)(a.Fragment, {
                        children: (0, a.jsxs)(r.animated.div, {
                            className: i(j.root, F.elevationHigh, {
                                [j.previewCamera]: h
                            }, h ? (0, x.getThemeClass)("dark") : null),
                            style: {
                                ...t,
                                width: R.value.interpolate([0, 1], [y.width, w.width]),
                                minHeight: R.value.interpolate([0, 1], [y.height, w.height]),
                                translateX: R.value.interpolate([0, 1], [0, -1 * Math.abs(w.width - y.width) / 2])
                            },
                            children: [h ? (0, a.jsx)(H, {
                                header: v
                            }) : (0, a.jsx)("div", {
                                className: j.mainChannelInfo,
                                children: v
                            }), (0, a.jsx)(V, {
                                canVideo: L,
                                channel: E,
                                numVideoDevices: N
                            }), L && !h ? (0, a.jsx)(u.Button, {
                                size: u.Button.Sizes.SMALL,
                                fullWidth: !0,
                                look: u.Button.Looks.LINK,
                                color: u.Button.Colors.PRIMARY,
                                className: j.previewButton,
                                onClick: () => C(!0),
                                children: G.default.Messages.INCOMING_CALL_PREVIEW_CAMERA
                            }) : null]
                        })
                    })
                })
            }
        },
        959646: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("629109"),
                i = n("135230"),
                r = n("782340");

            function o(e) {
                if (e) {
                    (0, s.openModal)(e => (0, a.jsx)(i.default, {
                        ...e,
                        title: r.default.Messages.SERVER_DEAFENED_DIALOG_TITLE,
                        body: r.default.Messages.SERVER_DEAFENED_DIALOG_BODY
                    }));
                    return
                }
                l.default.toggleSelfDeaf()
            }
        },
        516899: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("884691"),
                s = n("717811");

            function l(e) {
                a.useEffect(() => {
                    if (null != e) return s.default.lockChangeLog(e), () => {
                        s.default.unlockChangeLog(e)
                    }
                }, [e])
            }
        },
        462998: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return b
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("272030"),
                r = n("264732"),
                o = n("738073"),
                u = n("716241"),
                d = n("850391"),
                c = n("347895"),
                E = n("698882"),
                f = n("778613"),
                _ = n("934288"),
                I = n("353054"),
                h = n("557809"),
                C = n("267567"),
                T = n("393414"),
                m = n("208021"),
                S = n("42203"),
                N = n("474643"),
                A = n("247013"),
                p = n("305961"),
                g = n("377253"),
                R = n("957255"),
                O = n("697218"),
                L = n("945330"),
                M = n("664336"),
                v = n("679653"),
                D = n("176347"),
                x = n("49111"),
                P = n("782340"),
                y = n("768922");

            function b(e) {
                let {
                    channelId: t,
                    baseChannelId: b,
                    channelViewSource: U = "Split View",
                    isResourceChannelView: G
                } = e, j = (0, l.useStateFromStores)([S.default], () => S.default.getChannel(t)), F = (0, l.useStateFromStores)([p.default], () => p.default.getGuild(null == j ? void 0 : j.getGuildId())), k = (0, l.useStateFromStores)([O.default], () => O.default.getCurrentUser()), B = (0, l.useStateFromStores)([A.default], () => A.default.didAgree(null == j ? void 0 : j.guild_id)), w = (null == k ? void 0 : k.nsfwAllowed) === !0, H = (0, v.default)(j), V = (0, l.useStateFromStores)([C.default], () => (null == F ? void 0 : F.id) != null && C.default.isLurking(F.id), [F]), Y = (0, l.useStateFromStores)([R.default], () => R.default.can(x.Permissions.SEND_MESSAGES, j)), W = (0, f.useHasPendingMemberAction)(null == F ? void 0 : F.id, null == j ? void 0 : j.id), K = (0, _.default)(t), z = (0, l.useStateFromStores)([E.default], () => {
                    var e;
                    return null === (e = E.default.getResourceForChannel(null == F ? void 0 : F.id, t)) || void 0 === e ? void 0 : e.title
                }), q = s.useRef(!1);
                if (s.useEffect(() => {
                        null != j && !q.current && (q.current = !0, (0, u.trackWithMetadata)(x.AnalyticEvents.CHANNEL_OPENED, {
                            channel_id: j.id,
                            guild_id: j.guild_id,
                            parent_id: j.parent_id,
                            channel_view: U,
                            can_send_message: Y,
                            has_pending_member_action: W
                        }))
                    }, [j, U, Y, W]), null == j || null == F) return null;
                let Q = [];
                return (!V && Q.push((0, a.jsx)(I.default, {
                    channel: j
                }, "notifications")), Q.push((0, a.jsx)(M.default.Icon, {
                    icon: L.default,
                    tooltip: P.default.Messages.CLOSE,
                    onClick: () => m.default.closeChannelSidebar(b)
                }, "close")), !j.isNSFW() || w && B) ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(r.default, {
                        channel: j,
                        draftType: N.DraftType.ChannelMessage
                    }), (0, a.jsx)(M.default, {
                        toolbar: Q,
                        "aria-label": P.default.Messages.CHANNEL_HEADER_BAR_A11Y_LABEL,
                        children: (0, h.renderTitle)({
                            channel: j,
                            channelName: K ? z : H,
                            guild: F,
                            inSidebar: !0,
                            handleContextMenu: e => {
                                (0, i.openContextMenuLazy)(e, async () => {
                                    let {
                                        default: e
                                    } = await n.el("229233").then(n.bind(n, "229233"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        channel: j,
                                        guild: F
                                    })
                                })
                            },
                            handleClick: () => {
                                let e = g.default.getMessages(j.id);
                                if (G) {
                                    (0, T.transitionTo)(x.Routes.CHANNEL(j.guild_id, j.id)), (0, c.selectHomeResourceChannel)(j.guild_id, null);
                                    return
                                }(0, T.transitionToGuild)(j.guild_id, j.id, e.jumpTargetId)
                            }
                        })
                    }), (0, a.jsx)("div", {
                        className: y.chat,
                        children: (0, a.jsx)(D.default, {
                            channel: j,
                            guild: F,
                            chatInputType: d.ChatInputTypes.SIDEBAR
                        }, t)
                    })]
                }) : (0, a.jsx)(o.default, {
                    guild: F
                })
            }
        },
        442174: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("850391"),
                o = n("557809"),
                u = n("288518"),
                d = n("486503"),
                c = n("803524"),
                E = n("7643"),
                f = n("949067"),
                _ = n("144491"),
                I = n("208021"),
                h = n("982108"),
                C = n("945330"),
                T = n("664336"),
                m = n("679653"),
                S = n("176347"),
                N = n("782340"),
                A = n("768922"),
                p = n("421202");

            function g(e) {
                let {
                    channel: t,
                    baseChannelId: n
                } = e, g = (0, m.default)(t), R = (0, c.useListHasSingleMessageRequest)(), O = (0, c.useListHasSingleSpamMessageRequest)(), L = (0, l.useStateFromStores)([u.default], () => u.default.isMessageRequest(t.id)), M = (0, l.useStateFromStores)([d.default], () => d.default.isSpam(t.id)), v = (0, f.useLongestChannelMessageBeforeReply)(t.id, t.getRecipientId()), D = s.useCallback(() => {
                    I.default.closeChannelSidebar(h.MESSAGE_REQUESTS_BASE_CHANNEL_ID), L && R && (0, _.transitionToChannel)(t.id), M && O && (0, _.transitionToChannel)(t.id)
                }, [t.id, M, O, L, R]), x = s.useCallback(() => {
                    (0, i.showToast)((0, i.createToast)(N.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE, i.ToastType.FAILURE))
                }, []), {
                    markAsNotSpam: P
                } = (0, E.useMessageRequestActions)({
                    onAcceptSuccess: D,
                    onError: x
                });
                if (null == t || !t.isDM()) return null;
                let y = [(0, a.jsx)(T.default.Icon, {
                    icon: C.default,
                    tooltip: N.default.Messages.CLOSE,
                    onClick: () => I.default.closeChannelSidebar(n)
                }, "close")];
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(T.default, {
                        toolbar: y,
                        "aria-label": N.default.Messages.CHANNEL_HEADER_BAR_A11Y_LABEL,
                        children: (0, o.renderTitle)({
                            channel: t,
                            channelName: g,
                            inSidebar: !0
                        })
                    }), M && (0, a.jsxs)("div", {
                        className: p.hamBanner,
                        children: [(0, a.jsx)(i.Text, {
                            className: p.hamBannerText,
                            variant: "text-sm/normal",
                            children: N.default.Messages.MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_HEADER
                        }), (0, a.jsx)(i.Button, {
                            className: p.hamBannerButton,
                            size: i.ButtonSizes.SMALL,
                            onClick: () => P(t, v),
                            children: N.default.Messages.MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_BUTTON
                        })]
                    }), (0, a.jsx)("div", {
                        className: A.chat,
                        children: (0, a.jsx)(S.default, {
                            channel: t,
                            guild: null,
                            chatInputType: r.ChatInputTypes.SIDEBAR
                        }, t.id)
                    })]
                })
            }
        },
        837844: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("65597"),
                o = n("509802"),
                u = n("162771"),
                d = n("120363"),
                c = n("994428"),
                E = n("326185");
            let f = s.memo(function(e) {
                var t, n;
                let {
                    state: l,
                    markAsDismissed: r
                } = e, {
                    name: o,
                    guildId: u,
                    boundingRect: d
                } = l, c = s.useMemo(() => {
                    var e, t, n;
                    return e = 0, t = 0, n = 0, null
                }, [o, u, r]);
                if (null == c) return null;
                return (0, a.jsx)("div", {
                    className: i(E.upsell, !(null != (t = d) && !(t.y < 0)) && E.hidden),
                    style: (n = 0, null == d ? {} : {}),
                    children: c
                })
            });

            function _() {
                let e = (0, r.default)([u.default], () => u.default.getGuildId()),
                    t = (0, d.useChannelListUpsells)(e),
                    [n, s] = (0, o.useDismissibleContentGroup)(Object.values(t).filter(e => {
                        let {
                            disabled: t
                        } = e;
                        return !t
                    }).map(e => {
                        let {
                            name: t
                        } = e;
                        return t
                    }), c.DismissibleContentGroupName.SIDEBAR);
                if (null == n) return null;
                let l = t[n];
                return null == l ? null : (0, a.jsx)("div", {
                    className: E.container,
                    children: (0, a.jsx)(f, {
                        state: l,
                        markAsDismissed: s
                    })
                })
            }
        },
        478761: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useChannelNoticeRedesignExperiment: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2022-12_channel_notice_redesign",
                label: "Channel Notice Redesign",
                defaultConfig: {
                    showRedesignedChannelNotice: !1,
                    showRedesignedLiveChannelNotice: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show Redesigned Channel Notices",
                    config: {
                        showRedesignedChannelNotice: !0,
                        showRedesignedLiveChannelNotice: !1
                    }
                }, {
                    id: 2,
                    label: "Show Redesigned Stage/Event Notices",
                    config: {
                        showRedesignedChannelNotice: !1,
                        showRedesignedLiveChannelNotice: !0
                    }
                }, {
                    id: 3,
                    label: "Show Redesigned Channel Notices & Stage/Event Notices",
                    config: {
                        showRedesignedChannelNotice: !0,
                        showRedesignedLiveChannelNotice: !0
                    }
                }]
            });

            function l() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                    {
                        showRedesignedChannelNotice: t,
                        showRedesignedLiveChannelNotice: n
                    } = s.useExperiment({
                        location: "c0d6eb_1"
                    }, {
                        autoTrackExposure: e
                    });
                return {
                    showRedesignedChannelNotice: t,
                    showRedesignedLiveChannelNotice: n
                }
            }
        },
        640322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("151426"),
                r = n("95410"),
                o = n("489560"),
                u = n("570319"),
                d = n("475405"),
                c = n("55058"),
                E = n("509802"),
                f = n("48821"),
                _ = n("388437"),
                I = n("667048"),
                h = n("580362"),
                C = n("153014"),
                T = n("79176"),
                m = n("986321"),
                S = n("519440"),
                N = n("947337"),
                A = n("762887"),
                p = n("269162"),
                g = n("197881"),
                R = n("401774"),
                O = n("607894"),
                L = n("746504"),
                M = n("107153"),
                v = n("32505"),
                D = n("731681"),
                x = n("427474"),
                P = n("994428");

            function y(e) {
                e.stopPropagation()
            }

            function b(e) {
                var t;
                let {
                    guild: n
                } = e, [o, f] = s.useState(null !== (t = r.default.get(x.LAST_HIDDEN_CHANNEL_NOTICE)) && void 0 !== t ? t : 0), C = e => {
                    r.default.set(x.LAST_HIDDEN_CHANNEL_NOTICE, e), f(e)
                }, m = (0, l.useStateFromStoresArray)(x.CHANNEL_NOTICE_STORES, () => x.CHANNEL_NOTICES.filter(e => {
                    let {
                        store: t
                    } = e;
                    return null == t ? void 0 : t.channelNoticePredicate(n, o)
                }).map(e => e.dismissibleContentType)), S = (0, u.default)(n.id), N = (0, A.default)(n.id);
                return (0, a.jsx)(E.default, {
                    contentTypes: m,
                    groupName: P.DismissibleContentGroupName.CHANNEL_NOTICES,
                    children: e => {
                        let {
                            visibleContent: t,
                            markAsDismissed: s
                        } = e, l = () => {
                            C(Date.now()), s()
                        }, r = (() => {
                            switch (t) {
                                case i.DismissibleContent.CHANNEL_NOTICE_HUBLINK:
                                    return (0, a.jsx)(T.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_INVITE:
                                    return (0, a.jsx)(L.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION:
                                    return (0, a.jsx)(I.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER:
                                    return (0, a.jsx)(v.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER:
                                    return (0, a.jsx)(_.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE:
                                    return (0, a.jsx)(O.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.LINKED_ROLE_ADMIN_GUILD:
                                    return (0, a.jsx)(c.default, {
                                        guild: n,
                                        markAsDismissed: s
                                    });
                                default:
                                    return null
                            }
                        })();
                        if (null == r) {
                            if (N && !(0, h.isContentDismissed)(i.DismissibleGuildContent.SUMMARIES_NOTICE, n.id)) r = (0, a.jsx)(p.default, {
                                guild: n,
                                markAsDismissed: () => {
                                    (0, h.markContentAsDismissed)(i.DismissibleGuildContent.SUMMARIES_NOTICE, n.id, !0)
                                }
                            });
                            else {
                                if (!S || (0, h.isContentDismissed)(i.DismissibleGuildContent.CLYDE_GUILD_NOTICE_NUX, n.id)) return null;
                                r = (0, a.jsx)(d.default, {
                                    guild: n,
                                    markAsDismissed: () => {
                                        (0, h.markContentAsDismissed)(i.DismissibleGuildContent.CLYDE_GUILD_NOTICE_NUX, n.id, !0)
                                    }
                                })
                            }
                        }
                        return (0, a.jsx)("div", {
                            onContextMenu: y,
                            children: r
                        })
                    }
                })
            }
            var U = e => {
                let {
                    guild: t
                } = e, n = (0, D.default)(t);
                switch (n) {
                    case D.ConnectedChannelNotices.ENABLE_PUBLIC_GUILD:
                        return (0, a.jsx)(N.default, {
                            guild: t
                        });
                    case D.ConnectedChannelNotices.APPLIED_GUILD_BOOST_GRACE_PERIOD:
                        return (0, a.jsx)(f.default, {
                            guild: t
                        });
                    case D.ConnectedChannelNotices.MAX_MEMBER_COUNT:
                        return (0, a.jsx)(M.default, {
                            guild: t
                        });
                    case D.ConnectedChannelNotices.GUILD_LIVE_CHANNEL:
                        return (0, a.jsx)(C.default, {
                            guild: t
                        });
                    case D.ConnectedChannelNotices.GUILD_MFA_WARNING:
                        return (0, a.jsx)(R.default, {
                            guild: t
                        });
                    case D.ConnectedChannelNotices.COMMANDS_MIGRATION:
                        return (0, a.jsx)(S.default, {
                            guild: t
                        });
                    case D.ConnectedChannelNotices.APPLICATION_SUBSCRIPTION_EXPIRATION:
                        return (0, a.jsx)(o.default, {
                            guild: t
                        });
                    case D.ConnectedChannelNotices.HUB_STUDY_ROOM:
                        return (0, a.jsx)(m.default, {
                            guild: t
                        })
                }
                return g.ProcessArgs.isDisallowPopupsSet() ? null : (0, a.jsx)(b, {
                    guild: e.guild
                })
            }
        },
        427474: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                LAST_HIDDEN_CHANNEL_NOTICE: function() {
                    return E
                },
                CHANNEL_NOTICES: function() {
                    return f
                },
                CHANNEL_NOTICE_STORES: function() {
                    return _
                }
            });
            var a = n("151426"),
                s = n("116460"),
                l = n("779671"),
                i = n("8452"),
                r = n("433973"),
                o = n("150057"),
                u = n("141162"),
                d = n("449008"),
                c = n("49111");
            let E = "lastHiddenChannelNotice",
                f = [{
                    type: c.ChannelNoticeTypes.GUILD_BOOSTING,
                    store: i.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION
                }, {
                    type: c.ChannelNoticeTypes.GUILD_BANNER,
                    store: l.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER
                }, {
                    type: c.ChannelNoticeTypes.INVITE,
                    store: u.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_INVITE
                }, {
                    type: c.ChannelNoticeTypes.HUB_LINK,
                    store: o.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_HUBLINK
                }, {
                    type: c.ChannelNoticeTypes.QUICKSWITCHER,
                    store: s.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER
                }, {
                    type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL,
                    store: r.default,
                    dismissibleContentType: a.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
                }, {
                    type: c.ChannelNoticeTypes.LINKED_ROLES_ADMIN,
                    dismissibleContentType: a.DismissibleContent.LINKED_ROLE_ADMIN_GUILD
                }, {
                    type: c.ChannelNoticeTypes.CLYDE_ADMIN_NUX,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_CLYDE_NUX
                }, {
                    type: c.ChannelNoticeTypes.CLYDE_USER_NUX,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_CLYDE_NUX
                }],
                _ = f.map(e => e.store).filter(d.isNotNullish)
        },
        401774: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("79112"),
                i = n("963662"),
                r = n("49111"),
                o = n("782340"),
                u = n("37476");
            class d extends s.PureComponent {
                render() {
                    return (0, a.jsx)(i.default, {
                        guild: this.props.guild,
                        onClick: () => l.default.open(r.UserSettingsSections.ACCOUNT),
                        message: o.default.Messages.TWO_FA_GUILD_MFA_WARNING_MESSAGE_WITH_SPACING.format(),
                        cta: o.default.Messages.TWO_FA_GUILD_MFA_WARNING_RESOLVE_BUTTON,
                        trackingSource: r.ChannelNoticeCtaSources.GUILD_MFA_WARNING,
                        type: r.ChannelNoticeTypes.MFA_WARNING,
                        image: u,
                        imageMarginX: 54,
                        undismissable: !0
                    })
                }
            }
            var c = d
        },
        607894: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("10641"),
                r = n("179803"),
                o = n("592407"),
                u = n("599110"),
                d = n("164586"),
                c = n("49111"),
                E = n("994428"),
                f = n("782340"),
                _ = e => {
                    let {
                        guild: t,
                        markAsDismissed: n
                    } = e;
                    s.useEffect(() => {
                        (0, i.requestMarkDismissibleContentAsShown)(l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                    }, []);
                    let _ = s.useCallback(() => {
                            o.default.open(t.id, c.GuildSettingsSections.ONBOARDING), u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                                type: l.DismissibleContent[l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE],
                                action: "primary"
                            }), (0, i.markDismissibleContentAsDismissed)(l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE, {
                                dismissAction: E.ContentDismissActionType.PRIMARY
                            }), (0, r.dismissedGuildOnboardingUpsell)(t.id, l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                        }, [t.id]),
                        I = s.useCallback(() => {
                            u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                                type: l.DismissibleContent[l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE],
                                action: "dismiss"
                            }), n(), (0, r.dismissedGuildOnboardingUpsell)(t.id, l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                        }, [t.id, n]);
                    return (0, a.jsx)(d.default, {
                        guild: t,
                        onDismissed: I,
                        onClick: _,
                        title: f.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_TITLE,
                        message: f.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_MESSAGE,
                        cta: f.default.Messages.CHECK_IT_OUT,
                        trackingSource: c.ChannelNoticeCtaSources.GUILD_ONBOARDING_UPSELL_NOTICE,
                        type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL
                    })
                }
        },
        746504: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("819689"),
                r = n("18494"),
                o = n("963662"),
                u = n("49111"),
                d = n("782340"),
                c = n("292379");
            class E extends s.PureComponent {
                render() {
                    let e = "".concat(d.default.Messages.INVITE_NOTICE_MESSAGE, "\n").concat(d.default.Messages.INVITE_NOTICE_MESSAGE_PART_2);
                    return (0, a.jsx)(o.default, {
                        guild: this.props.guild,
                        onDismissed: this.handleClose,
                        onClick: this.handleInvite,
                        message: e,
                        cta: d.default.Messages.INVITE_PEOPLE,
                        trackingSource: u.ChannelNoticeCtaSources.INVITE_NOTICE,
                        type: u.ChannelNoticeTypes.INVITE,
                        image: c,
                        imageMarginX: 46
                    })
                }
                constructor(...e) {
                    super(...e), this.handleInvite = () => {
                        let {
                            guild: e
                        } = this.props;
                        (0, l.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await n.el("310688").then(n.bind(n, "310688"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guild: e,
                                source: u.InstantInviteSources.INVITE_NOTICE
                            })
                        })
                    }, this.handleClose = () => {
                        let e = r.default.getChannelId();
                        this.props.markAsDismissed(), null != e && i.default.sendBotMessage(e, d.default.Messages.HOW_TO_INVITE_OTHERS.format({
                            invitePeople: d.default.Messages.INVITE_PEOPLE
                        }))
                    }
                }
            }
            var f = E
        },
        810467: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return w
                }
            });
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("414456"),
                o = n.n(r),
                u = n("446674"),
                d = n("669491"),
                c = n("77078"),
                E = n("327037"),
                f = n("419830"),
                _ = n("374021"),
                I = n("395869"),
                h = n("824650"),
                C = n("1339"),
                T = n("593897"),
                m = n("534222"),
                S = n("841363"),
                N = n("393414"),
                A = n("716214"),
                p = n("488464"),
                g = n("998716"),
                R = n("834052"),
                O = n("160870"),
                L = n("506885"),
                M = n("981601"),
                v = n("957255"),
                D = n("697218"),
                x = n("945330"),
                P = n("272339"),
                y = n("89684"),
                b = n("718550"),
                U = n("228427"),
                G = n("290581"),
                j = n("49111"),
                F = n("745049"),
                k = n("782340"),
                B = n("832025");
            (a = s || (s = {}))[a.STAGE = 0] = "STAGE", a[a.EVENT_EXTERNAL = 1] = "EVENT_EXTERNAL", a[a.EVENT_VOICE = 2] = "EVENT_VOICE", a[a.STUDY_ROOM = 3] = "STUDY_ROOM";

            function w(e) {
                let {
                    guild: t,
                    isStudyRoomNotice: n = !1
                } = e, a = (0, T.useActiveEventOrStageInstanceChannel)(t.id), r = (0, m.useGuildActiveEvent)(t.id), w = (0, u.useStateFromStores)([R.default], () => R.default.getStageInstanceByChannel(null == a ? void 0 : a.id), [a]), {
                    isStageNoticeHidden: H,
                    isEventNoticeHidden: V
                } = (0, u.useStateFromStoresObject)([h.default], () => ({
                    isStageNoticeHidden: h.default.isLiveChannelNoticeHidden({
                        stageId: null == w ? void 0 : w.id
                    }),
                    isEventNoticeHidden: h.default.isLiveChannelNoticeHidden({
                        eventId: null == r ? void 0 : r.id
                    })
                }), [w, r]), Y = null == a ? void 0 : a.id, {
                    speakers: W,
                    listenerCount: K
                } = (0, u.useStateFromStoresObject)([p.default], () => {
                    let e = p.default.getMutableParticipants(Y, g.StageChannelParticipantNamedIndex.SPEAKER),
                        t = null != Y ? p.default.getParticipantCount(Y, g.StageChannelParticipantNamedIndex.AUDIENCE) : 0;
                    return {
                        speakers: [...new Set(e.map(e => e.user))],
                        listenerCount: t
                    }
                }, [Y]), z = (0, u.useStateFromStores)([v.default], () => v.default.can(j.Permissions.CONNECT, a)), q = (0, O.default)(null == a ? void 0 : a.id), Q = null == r ? void 0 : r.creator_id, X = (0, u.useStateFromStores)([D.default], () => D.default.getUser(Q), [Q]);
                i.useEffect(() => {
                    null != Q && (0, E.getUser)(Q)
                }, [Q]);
                let {
                    noticeType: J,
                    title: Z,
                    location: $,
                    locationIcon: ee,
                    canListenIn: et,
                    buttonText: en,
                    users: ea,
                    overflowUsers: es,
                    onClose: el
                } = i.useMemo(() => (function(e) {
                    let {
                        guildEvent: t,
                        stageInstance: n,
                        activeChannel: a,
                        canConnect: i,
                        myRole: r,
                        eventCreator: o,
                        speakers: u,
                        listenerCount: d,
                        isEventNoticeHidden: E,
                        isStageNoticeHidden: _,
                        isStudyRoomNotice: h
                    } = e, T = null != n && null != a && !_;
                    if (h && null != a) {
                        let e = (0, f.getChannelIconComponent)(a);
                        return {
                            noticeType: s.STUDY_ROOM,
                            title: "\uD83D\uDCDA☕ ".concat(a.name),
                            location: k.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
                            locationIcon: null != e ? (0, l.jsx)(e, {
                                width: 16,
                                height: 16,
                                className: B.locationIcon
                            }) : null,
                            canListenIn: i,
                            buttonText: k.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
                            users: [],
                            overflowUsers: null
                        }
                    }
                    if (null == t || E) {
                        if (T) {
                            let e = k.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                            return (null == r ? void 0 : r.speaker) ? e = k.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != r && (e = k.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON), {
                                noticeType: s.STAGE,
                                title: n.topic,
                                location: a.name,
                                locationIcon: (0, l.jsx)(U.default, {
                                    width: 16,
                                    height: 16,
                                    className: B.locationIcon
                                }),
                                canListenIn: i,
                                buttonText: e,
                                onClose: () => (0, I.hideLiveChannelNotice)({
                                    stageId: null == n ? void 0 : n.id
                                }),
                                users: u.length > 5 ? u.slice(0, 5) : u,
                                overflowUsers: d < 1 ? null : (0, l.jsxs)("div", {
                                    className: B.pill,
                                    children: [(0, l.jsx)(P.default, {
                                        width: 12,
                                        height: 12,
                                        className: B.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: B.pillLabel,
                                        children: d
                                    })]
                                })
                            }
                        }
                    } else {
                        if (t.entity_type === F.GuildScheduledEventEntityTypes.STAGE_INSTANCE && T) {
                            let e = k.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                            return (null == r ? void 0 : r.speaker) ? e = k.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != r && (e = k.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON), {
                                noticeType: s.STAGE,
                                title: n.topic,
                                location: a.name,
                                locationIcon: (0, l.jsx)(U.default, {
                                    width: 16,
                                    height: 16,
                                    className: B.locationIcon
                                }),
                                canListenIn: i,
                                buttonText: e,
                                onClose: () => (0, I.hideLiveChannelNotice)({
                                    stageId: null == n ? void 0 : n.id
                                }),
                                users: u.length > 5 ? u.slice(0, 5) : u,
                                overflowUsers: d < 1 ? null : (0, l.jsxs)("div", {
                                    className: B.pill,
                                    children: [(0, l.jsx)(P.default, {
                                        width: 12,
                                        height: 12,
                                        className: B.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: B.pillLabel,
                                        children: d
                                    })]
                                })
                            }
                        }
                        if (t.entity_type === F.GuildScheduledEventEntityTypes.EXTERNAL) {
                            let e = (0, S.getLocationFromEvent)(t);
                            return null == e ? {
                                noticeType: null
                            } : {
                                noticeType: s.EVENT_EXTERNAL,
                                title: t.name,
                                location: (0, C.guildEventDetailsParser)(e, !0),
                                locationIcon: (0, l.jsx)(b.default, {
                                    width: 16,
                                    height: 16,
                                    className: B.locationIcon
                                }),
                                canListenIn: !1,
                                buttonText: k.default.Messages.GUILD_EVENT_DETAILS_INFO_TAB_TITLE,
                                onClose: () => (0, I.hideLiveChannelNotice)({
                                    eventId: null == t ? void 0 : t.id
                                }),
                                users: null == o ? [] : [o],
                                overflowUsers: null == t.user_count || t.user_count < 1 ? null : (0, l.jsxs)("div", {
                                    className: B.pill,
                                    children: [(0, l.jsx)(G.default, {
                                        width: 12,
                                        height: 12,
                                        className: B.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: B.pillLabel,
                                        children: t.user_count
                                    })]
                                })
                            }
                        } else if (t.entity_type === F.GuildScheduledEventEntityTypes.VOICE && null != a) {
                            let e = (0, f.getChannelIconComponent)(a);
                            return {
                                noticeType: s.EVENT_VOICE,
                                title: t.name,
                                location: a.name,
                                locationIcon: null != e ? (0, l.jsx)(e, {
                                    width: 16,
                                    height: 16,
                                    className: B.locationIcon
                                }) : null,
                                canListenIn: i,
                                buttonText: k.default.Messages.GUILD_EVENT_JOIN,
                                onClose: () => (0, I.hideLiveChannelNotice)({
                                    eventId: null == t ? void 0 : t.id
                                }),
                                users: null == o ? [] : [o],
                                overflowUsers: null == t.user_count || t.user_count < 1 ? null : (0, l.jsxs)("div", {
                                    className: B.pill,
                                    children: [(0, l.jsx)(G.default, {
                                        width: 12,
                                        height: 12,
                                        className: B.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: B.pillLabel,
                                        children: t.user_count
                                    })]
                                })
                            }
                        }
                    }
                    return {
                        noticeType: null
                    }
                })({
                    guildEvent: r,
                    stageInstance: w,
                    activeChannel: a,
                    canConnect: z,
                    myRole: q,
                    eventCreator: X,
                    speakers: W,
                    listenerCount: K,
                    isEventNoticeHidden: V,
                    isStageNoticeHidden: H,
                    isStudyRoomNotice: n
                }), [r, w, a, z, q, X, W, K, V, H, n]);
                return null == J ? null : (0, l.jsxs)("div", {
                    className: B.container,
                    children: [null != el ? (0, l.jsx)(c.Clickable, {
                        onClick: el,
                        className: B.close,
                        "aria-label": k.default.Messages.DISMISS,
                        children: (0, l.jsx)(x.default, {
                            className: B.closeIcon
                        })
                    }) : null, (0, l.jsxs)("div", {
                        className: B.header,
                        children: [(0, l.jsx)(y.default, {
                            color: d.default.unsafe_rawColors.GREEN_230.css,
                            width: 16,
                            height: 16
                        }), (0, l.jsx)(c.Text, {
                            variant: "text-xs/semibold",
                            color: "text-positive",
                            children: k.default.Messages.LIVE
                        })]
                    }), (ea.length > 0 || null != es) && (0, l.jsxs)("div", {
                        className: B.participants,
                        children: [ea.map(e => (0, l.jsx)(c.Popout, {
                            preload: () => (0, L.default)(e.id, e.getAvatarURL(t.id, 80), {
                                guildId: t.id
                            }),
                            renderPopout: t => (0, l.jsx)(M.default, {
                                ...t,
                                userId: e.id
                            }),
                            position: "right",
                            children: n => (0, l.jsx)(c.Avatar, {
                                ...n,
                                src: e.getAvatarURL(t.id, 24),
                                "aria-label": e.username,
                                size: c.AvatarSizes.SIZE_24,
                                className: B.avatar
                            })
                        }, e.id)), es]
                    }), (0, l.jsx)(c.Text, {
                        variant: "text-md/medium",
                        color: "header-primary",
                        className: o(B.title, B.live),
                        children: Z
                    }), (0, l.jsxs)("div", {
                        className: B.locationContainer,
                        children: [ee, (0, l.jsx)(c.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            className: B.location,
                            children: $
                        })]
                    }), et || J === s.EVENT_EXTERNAL ? (0, l.jsx)(c.Button, {
                        size: c.Button.Sizes.SMALL,
                        color: c.Button.Colors.GREEN,
                        onClick: () => {
                            if (et) null != a && null != a.getGuildId() && ((0, A.connectAndOpen)(a), (0, N.transitionToGuild)(a.getGuildId(), a.id));
                            else {
                                if (null == r) return;
                                (0, _.openGuildEventDetails)({
                                    eventId: r.id
                                })
                            }
                        },
                        className: B.button,
                        fullWidth: !0,
                        children: en
                    }) : null]
                })
            }
        },
        107153: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("363025"),
                i = n("701909"),
                r = n("963662"),
                o = n("49111"),
                u = n("782340"),
                d = n("649592"),
                c = e => {
                    let {
                        guild: t
                    } = e, n = s.useCallback(() => {
                        (0, l.hideMaxMemberCountChannelNotice)(t.id)
                    }, [t.id]);
                    return (0, a.jsx)(r.default, {
                        guild: t,
                        onDismissed: n,
                        message: u.default.Messages.NOTICE_CHANNEL_MAX_MEMBERS_CAP_REACHED_MESSAGE.format({
                            maxMemberCount: t.maxMembers,
                            maxMembersUrl: i.default.getArticleURL(o.HelpdeskArticles.MAX_MEMBERS)
                        }),
                        type: o.ChannelNoticeTypes.MAX_MEMBER_COUNT,
                        image: d,
                        imageMarginX: 61
                    })
                }
        },
        963662: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("77078"),
                o = n("716241"),
                u = n("945330"),
                d = n("599110"),
                c = n("478761"),
                E = n("164586"),
                f = n("49111"),
                _ = n("782340"),
                I = n("866241");
            let h = i.debounce(o.default.trackWithMetadata, 500),
                C = e => {
                    let {
                        guild: t,
                        title: n,
                        message: l,
                        image: i,
                        type: c,
                        imageMarginX: E,
                        imageMarginTop: C,
                        trackingSource: T,
                        undismissable: m,
                        onDismissed: S,
                        onClick: N,
                        cta: A,
                        ctaColor: p
                    } = e;
                    s.useEffect(() => {
                        h(f.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
                            notice_type: c,
                            guild_id: t.id
                        })
                    }, [t.id, c]);
                    let g = null;
                    "function" == typeof A ? g = A() : null != A && (g = (0, a.jsx)(r.Button, {
                        className: I.btn,
                        size: r.Button.Sizes.SMALL,
                        onClick: () => {
                            null != c && d.default.track(f.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                                source: T,
                                guild_id: t.id,
                                notice_type: c
                            }), null == N || N()
                        },
                        fullWidth: !0,
                        color: p,
                        children: A
                    }));
                    let R = null != E ? "".concat(E, "px") : "16px";
                    return (0, a.jsxs)("div", {
                        className: I.channelNotice,
                        children: [!0 === m ? null : (0, a.jsx)(r.Clickable, {
                            onClick: () => {
                                o.default.trackWithMetadata(f.AnalyticEvents.CHANNEL_NOTICE_CLOSED, {
                                    notice_type: c
                                }), null == S || S()
                            },
                            className: I.close,
                            "aria-label": _.default.Messages.DISMISS,
                            children: (0, a.jsx)(u.default, {
                                className: I.closeIcon
                            })
                        }), (0, a.jsx)("div", {
                            className: I.imageContainer,
                            style: {
                                marginTop: "".concat(C, "px"),
                                marginLeft: R,
                                marginRight: R
                            },
                            children: (0, a.jsx)("img", {
                                className: I.image,
                                src: i,
                                alt: ""
                            })
                        }), (0, a.jsxs)("div", {
                            className: I.message,
                            children: [null != n ? (0, a.jsx)(r.Heading, {
                                variant: "heading-md/semibold",
                                className: I.title,
                                children: n
                            }) : null, (0, a.jsx)(r.Text, {
                                variant: "text-sm/normal",
                                children: l
                            }), g]
                        })]
                    })
                };
            var T = function(e) {
                let {
                    showRedesignedChannelNotice: t
                } = (0, c.useChannelNoticeRedesignExperiment)(!0);
                return t ? (0, a.jsx)(E.default, {
                    ...e
                }) : (0, a.jsx)(C, {
                    ...e
                })
            }
        },
        32505: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("242149"),
                i = n("104589"),
                r = n("963662"),
                o = n("49111"),
                u = n("782340"),
                d = n("398586"),
                c = e => {
                    let t = l.QUICKSWITCHER_SHOW.binds[0].split("+").map(e => null != s.PRETTY_KEYS[e] ? (0, s.PRETTY_KEYS)[e]() : e).join(" + ").toUpperCase();
                    return (0, a.jsx)(r.default, {
                        guild: e.guild,
                        onDismissed: e.markAsDismissed,
                        onClick: () => (0, i.show)("CHANNEL_NOTICE"),
                        message: u.default.Messages.QUICKSWITCHER_NOTICE,
                        cta: t,
                        trackingSource: o.ChannelNoticeCtaSources.QUICK_SWITCHER_NOTICE,
                        type: o.ChannelNoticeTypes.QUICKSWITCHER,
                        image: d,
                        imageMarginX: 50
                    })
                }
        },
        731681: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ConnectedChannelNotices: function() {
                    return s
                },
                default: function() {
                    return A
                }
            });
            var a, s, l = n("884691"),
                i = n("446674"),
                r = n("583367"),
                o = n("650509"),
                u = n("933326"),
                d = n("568500"),
                c = n("534222"),
                E = n("341563"),
                f = n("702411"),
                _ = n("226511"),
                I = n("735201"),
                h = n("957255"),
                C = n("833781"),
                T = n("572182"),
                m = n("201952"),
                S = n("427459"),
                N = n("49111");

            function A(e) {
                var t;
                let n = null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "",
                    {
                        lastFetchedAt: a
                    } = (0, i.useStateFromStoresObject)([I.default], () => ({
                        appliedGuildBoosts: I.default.getAppliedGuildBoostsForGuild(n),
                        lastFetchedAt: I.default.getLastFetchedAtForGuild(n)
                    })),
                    {
                        lastDismissedGracePeriod: A,
                        isGracePeriodVisible: p
                    } = (0, i.useStateFromStoresObject)([C.default], () => ({
                        lastDismissedGracePeriod: C.default.getLastDismissedGracePeriodForGuild(n),
                        isGracePeriodVisible: C.default.isVisible(n)
                    })),
                    g = (0, i.useStateFromStores)([_.default], () => _.default.isVisible(e)),
                    R = (0, i.useStateFromStores)([m.default], () => m.default.isVisible(e)),
                    O = (0, i.useStateFromStores)([h.default], () => h.default.can(N.Permissions.ADMINISTRATOR, e)),
                    L = null != A && Date.now() - A <= N.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY,
                    M = null != e ? e.premiumSubscriberCount : 0,
                    v = (0, S.getGuildTierFromAppliedBoostCount)(M, n) !== N.BoostedGuildTiers.NONE,
                    D = null != a && Date.now() - a <= 432e5,
                    x = !D && !L && O && v,
                    P = (0, d.useGuildHasLiveChannelNotice)(n),
                    y = null != (0, c.useGuildUpcomingEventsNotice)(n),
                    b = (0, i.useStateFromStores)([T.default], () => T.default.isVisible(e)),
                    U = f.default.useShouldShowChannelNotice(n),
                    G = (0, o.useUnseenEndedApplicationSubscriptionEntitlements)(e),
                    {
                        enableStudyGroup: j
                    } = (0, E.useHubStudyGroupExperiment)(e),
                    F = G.length > 0,
                    k = j && !(null == e ? void 0 : e.hasFeature(N.GuildFeatures.HUB));
                if (l.useEffect(() => {
                        u.default.getGuildEventsForCurrentUser(n)
                    }, [n]), l.useEffect(() => {
                        let e = -1;
                        return x && (e = window.setTimeout(() => {
                            null != n && (0, r.fetchAppliedGuildBoostsForGuild)(n)
                        }, 3e4 * Math.random())), () => {
                            window.clearTimeout(e)
                        }
                    }, [n, x]), g) return s.ENABLE_PUBLIC_GUILD;
                if (p) return s.APPLIED_GUILD_BOOST_GRACE_PERIOD;
                if (R) return s.MAX_MEMBER_COUNT;
                else if (P || y) return s.GUILD_LIVE_CHANNEL;
                else if (b) return s.GUILD_MFA_WARNING;
                else if (U) return s.COMMANDS_MIGRATION;
                else if (F) return s.APPLICATION_SUBSCRIPTION_EXPIRATION;
                else if (k) return s.HUB_STUDY_ROOM;
                return null
            }(a = s || (s = {}))[a.ENABLE_PUBLIC_GUILD = 0] = "ENABLE_PUBLIC_GUILD", a[a.APPLIED_GUILD_BOOST_GRACE_PERIOD = 1] = "APPLIED_GUILD_BOOST_GRACE_PERIOD", a[a.MAX_MEMBER_COUNT = 2] = "MAX_MEMBER_COUNT", a[a.GUILD_LIVE_CHANNEL = 3] = "GUILD_LIVE_CHANNEL", a[a.GUILD_MFA_WARNING = 4] = "GUILD_MFA_WARNING", a[a.COMMANDS_MIGRATION = 5] = "COMMANDS_MIGRATION", a[a.APPLICATION_SUBSCRIPTION_EXPIRATION = 6] = "APPLICATION_SUBSCRIPTION_EXPIRATION", a[a.HUB_STUDY_ROOM = 7] = "HUB_STUDY_ROOM"
        },
        156565: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("77078"),
                o = n("252917"),
                u = n("945183"),
                d = n("493765"),
                c = n("485328"),
                E = n("206230"),
                f = n("105437"),
                _ = n("126090"),
                I = n("53889"),
                h = n("471671"),
                C = n("659500"),
                T = n("214875"),
                m = n("223415"),
                S = n("399174"),
                N = n("49111"),
                A = n("507812"),
                p = s.memo(function() {
                    let e = s.useRef(null),
                        t = s.useCallback(t => {
                            let {
                                duration: n,
                                intensity: a
                            } = t;
                            if (E.default.useReducedMotion || !h.default.isFocused()) return;
                            let {
                                current: s
                            } = e;
                            i(null != s, "Shakeable is shaken when not mounted"), s.shake(n, a)
                        }, []);
                    return s.useEffect(() => (c.default.setLayout(d.default), c.default.enable(), () => c.default.disable()), []), s.useEffect(() => (C.ComponentDispatch.subscribe(N.ComponentActions.SHAKE_APP, t), () => {
                        C.ComponentDispatch.unsubscribe(N.ComponentActions.SHAKE_APP, t)
                    }), [t]), (0, f.default)(), (0, a.jsxs)(r.Shakeable, {
                        ref: e,
                        className: A.app,
                        children: [(0, a.jsx)(S.default, {
                            className: A.layers,
                            children: (0, a.jsx)(o.default, {})
                        }), (0, a.jsx)(_.default, {}), (0, a.jsx)(u.default, {}), (0, a.jsx)(T.default, {}), (0, a.jsx)(I.default, {}), (0, a.jsx)(r.DnDKeyboardHelpBar, {}), (0, a.jsx)(m.default, {})]
                    })
                })
        },
        214875: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return q
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("823411"),
                r = n("299147"),
                o = n("115718"),
                u = n("575365"),
                d = n("716241"),
                c = n("382483"),
                E = n("701916"),
                f = n("939398"),
                _ = n("191145"),
                I = n("605250"),
                h = n("619443"),
                C = n("963103"),
                T = n("778613"),
                m = n("398604"),
                S = n("123561"),
                N = n("288518"),
                A = n("834052"),
                p = n("845579"),
                g = n("42203"),
                R = n("546463"),
                O = n("26989"),
                L = n("305961"),
                M = n("42887"),
                v = n("377253"),
                D = n("957255"),
                x = n("945956"),
                P = n("568307"),
                y = n("18494"),
                b = n("162771"),
                U = n("101125"),
                G = n("282109"),
                j = n("697218"),
                F = n("330338"),
                k = n("545429"),
                B = n("860957"),
                w = n("599110"),
                H = n("568734"),
                V = n("449008"),
                Y = n("50885"),
                W = n("49111"),
                K = n("6791");
            class z extends s.PureComponent {
                componentDidMount() {
                    let {
                        selectedChannelId: e,
                        connected: t,
                        isNSFWChannel: n,
                        channelParentId: a,
                        isTextInVoice: s,
                        canSendMessage: l,
                        hasPendingMemberAction: i
                    } = this.props;
                    t && null != e && ((0, d.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
                        channel_is_nsfw: n,
                        parent_id: a,
                        can_send_message: l,
                        has_pending_member_action: i
                    }), s && (0, d.trackWithMetadata)(W.AnalyticEvents.TEXT_IN_VOICE_OPENED, {
                        channel_is_nsfw: n
                    }))
                }
                componentDidUpdate(e) {
                    var t, n, a;
                    let {
                        voiceChannelId: s,
                        voiceChannelIdJoined: l,
                        voiceChannelGuildId: u,
                        voiceChannelType: h,
                        voiceChannelBitrate: C,
                        videoEnabled: T,
                        isScreenSharing: N,
                        runningGame: O,
                        runningGamePid: M,
                        selectedChannelId: D,
                        selectedGuildId: y,
                        channelParentId: j,
                        connected: F,
                        homeLink: k,
                        friendsTabSection: z,
                        isNSFWChannel: q,
                        isMemberPending: Q,
                        hasPreviewEnabled: X,
                        rtcConnectionId: J,
                        postableChannelCount: Z,
                        isTextInVoice: $,
                        canSendMessage: ee,
                        numMessageRequests: et,
                        hasPendingMemberAction: en
                    } = this.props;
                    if (e.voiceChannelId !== s && null != e.voiceChannelId) {
                        let t = P.default.getCurrentGameForAnalytics(),
                            n = null != t ? t.name : "",
                            a = A.default.getStageInstanceByChannel(e.voiceChannelId),
                            s = m.default.getActiveEventByChannel(e.voiceChannelId);
                        w.default.track(W.AnalyticEvents.LEAVE_VOICE_CHANNEL, {
                            channel_id: e.voiceChannelId,
                            channel_type: e.voiceChannelType,
                            channel_bitrate: e.voiceChannelBitrate,
                            guild_id: e.voiceChannelGuildId,
                            rtc_connection_id: e.rtcConnectionId,
                            game_name: n,
                            duration: x.default.getDuration(),
                            game_platform: this.props.gamePlatform,
                            game_id: this.props.gameId,
                            media_session_id: e.mediaSessionId,
                            stage_instance_id: null == a ? void 0 : a.id,
                            guild_scheduled_event_id: null == s ? void 0 : s.id,
                            ...(0, d.getVoiceStateMetadata)(e.voiceChannelGuildId, e.voiceChannelId, e.videoEnabled),
                            ...x.default.getVoiceStateStats(),
                            ..._.default.getSelectedParticipantStats(e.voiceChannelId)
                        })
                    }
                    if (e.voiceChannelIdJoined !== l && null != l) {
                        let e = P.default.getCurrentGameForAnalytics(),
                            t = null != e ? e.name : "";
                        if (null != l && null != s) {
                            let e = A.default.getStageInstanceByChannel(s),
                                n = m.default.getActiveEventByChannel(s);
                            r.default.trackExposure({
                                location: "db3810_1"
                            }), (0, d.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
                                channel_id: s,
                                channel_is_nsfw: q,
                                parent_id: j,
                                can_send_message: ee,
                                has_pending_member_action: en
                            }), w.default.track(W.AnalyticEvents.JOIN_VOICE_CHANNEL, {
                                channel_id: s,
                                channel_type: h,
                                channel_bitrate: C,
                                guild_id: u,
                                rtc_connection_id: J,
                                game_name: t,
                                game_platform: this.props.gamePlatform,
                                game_id: this.props.gameId,
                                stage_instance_id: null == e ? void 0 : e.id,
                                guild_scheduled_event_id: null == n ? void 0 : n.id,
                                ...(0, d.getCustomStatusMetadata)(u, s),
                                ...(0, d.getVoiceStateMetadata)(u, s, T)
                            })
                        }
                    }
                    if (e.runningGame !== O && null != O && !O.isLauncher) {
                        let e = R.default.getGameByName(O.name),
                            t = P.default.getOverrideForGame(O),
                            n = L.default.getGuildIds(),
                            a = p.ActivityRestrictedGuilds.getSetting(),
                            s = n.filter(e => !a.includes(e)).slice(0, 200),
                            l = null;
                        l = null != t ? "custom_override" : null != e ? "verified_game" : "launcher";
                        let r = (0, P.getOverlayGameStatus)(O);
                        if (setTimeout(() => {
                                var t;
                                let n = Y.default.GetWindowFullscreenTypeByPid(O.pid, O.name, O.fullscreenType);
                                w.default.track(W.AnalyticEvents.LAUNCH_GAME, {
                                    game: O.name,
                                    game_id: null == e ? null : e.id,
                                    verified: null != e,
                                    elevated: O.elevated,
                                    is_launcher: null !== (t = null == O ? void 0 : O.isLauncher) && void 0 !== t && t,
                                    game_platform: W.ActivityGamePlatforms.DESKTOP,
                                    detection_method: l,
                                    distributor: O.distributor,
                                    is_overlay_enabled: B.default.enabled,
                                    is_overlay_game_enabled: r.enabled,
                                    is_overlay_game_source: r.source,
                                    fullscreen_type: o.RunningProcessFullscreenType[n],
                                    overlay_method: K.OverlayMethod[B.default.method],
                                    activity_status_enabled: p.ShowCurrentGame.getSetting(),
                                    activity_status_shared_guilds: s,
                                    current_user_status: U.default.getStatus()
                                })
                            }, 1e4), null != O.name && null != M && R.default.shouldReport(O.name)) {
                            let e = O.name;
                            i.default.identifyGame(M, e).then(e => i.default.reportUnverifiedGame(e)).catch(e => new(0, I.default)("AutoAnalytics").error("Cannot identify game", e))
                        }
                    }
                    if ((e.videoEnabled !== T || e.isScreenSharing !== N) && null != s) {
                        let e = "none",
                            t = [N ? "screen" : null, T ? "camera" : null].filter(V.isNotNullish),
                            n = null;
                        N ? (e = "screen", n = (0, f.getDesktopSourceMetadata)()) : T && (e = "camera"), w.default.track(W.AnalyticEvents.VIDEO_INPUT_TOGGLED, {
                            video_input_type: e,
                            video_toggle_source: __OVERLAY__ ? "overlay" : "app",
                            enabled_inputs: t,
                            preview_enabled: p.AlwaysPreviewVideo.getSetting(),
                            ...n,
                            ...this.getGameMetadata(),
                            ...(0, d.collectVoiceAnalyticsMetadata)(s)
                        })
                    }
                    if (F && null != y && (y !== e.selectedGuildId || !e.connected || Q && !e.isMemberPending)) {
                        let e = {
                            ...Q ? {
                                is_pending: Q,
                                preview_enabled: X
                            } : {},
                            postable_channels: Z,
                            premium_progress_bar_enabled: null !== (n = null === (t = L.default.getGuild(b.default.getGuildId())) || void 0 === t ? void 0 : t.premiumProgressBarEnabled) && void 0 !== n && n,
                            viewing_all_channels: !G.default.isOptInEnabled(y),
                            num_recent_channels: S.default.recentsChannelCount(y)
                        };
                        (0, d.trackWithMetadata)(W.AnalyticEvents.GUILD_VIEWED, e)
                    } else F && null == y && k === W.Routes.FRIENDS && (!e.connected || z !== e.friendsTabSection || k !== e.homeLink) ? w.default.track(W.AnalyticEvents.FRIENDS_LIST_VIEWED, {
                        tab_opened: z,
                        ...(0, c.default)()
                    }) : F && null == y && k === W.Routes.MESSAGE_REQUESTS && (!e.connected || k !== e.homeLink) && !this.isMessageRequestsInitialized && (this.isMessageRequestsInitialized = !0, w.default.track(W.AnalyticEvents.MESSAGE_REQUESTS_INITIALIZED, {
                        num_message_requests: et
                    }));
                    if (F && null != D && (!e.connected || D !== e.selectedChannelId || y !== e.selectedGuildId)) {
                        let t = e.selectedChannelId,
                            n = g.default.getChannel(t),
                            s = L.default.getGuild(null == n ? void 0 : n.getGuildId());
                        if (null != t && null != n && null != s && s.publicUpdatesChannelId === t) {
                            let e = v.default.getMessages(t),
                                l = e.toArray().reverse(),
                                i = l.find(e => {
                                    var t;
                                    return (0, H.hasFlag)(e.flags, W.MessageFlags.IS_CROSSPOST) && (null === (t = e.messageReference) || void 0 === t ? void 0 : t.guild_id) === "667560445975986187"
                                });
                            w.default.track(W.AnalyticEvents.ACK_COMMUNITY_MESSAGES, {
                                last_message_id: null == i ? void 0 : i.id,
                                last_message_reference_message_id: null == i ? void 0 : null === (a = i.messageReference) || void 0 === a ? void 0 : a.message_id,
                                messages_loaded: e.hasFetched,
                                ...(0, d.collectChannelAnalyticsMetadata)(n),
                                ...(0, d.collectGuildAnalyticsMetadata)(s.id)
                            })
                        }
                        let l = (0, E.collectThreadMetadata)(g.default.getChannel(D), !0);
                        (0, d.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
                            channel_is_nsfw: q,
                            parent_id: j,
                            can_send_message: ee,
                            has_pending_member_action: en,
                            ...l
                        }), $ && (0, d.trackWithMetadata)(W.AnalyticEvents.TEXT_IN_VOICE_OPENED, {
                            channel_is_nsfw: q
                        })
                    }
                }
                getGameMetadata() {
                    return {
                        game_platform: this.props.gamePlatform,
                        game_name: this.props.gameName,
                        game_exe_name: this.props.gameExeName,
                        game_id: this.props.gameId
                    }
                }
                render() {
                    return null
                }
                constructor(...e) {
                    super(...e), this.isMessageRequestsInitialized = !1
                }
            }

            function q() {
                var e, t;
                let [n, s] = (0, l.useStateFromStoresArray)([y.default], () => [y.default.getVoiceChannelId(), y.default.getChannelId()], []), i = (0, l.useStateFromStores)([g.default], () => g.default.getChannel(s), [s]), r = (0, l.useStateFromStores)([_.default], () => (null == i ? void 0 : i.id) != null && _.default.getChatOpen(i.id), [i]), o = null == i ? void 0 : i.nsfw, d = null !== (e = null == i ? void 0 : i.parent_id) && void 0 !== e ? e : void 0, c = (0, l.useStateFromStores)([g.default], () => g.default.getChannel(n), [n]), E = (0, l.useStateFromStores)([b.default], () => b.default.getGuildId(), []), f = (0, l.useStateFromStores)([L.default], () => L.default.getGuild(E), [E]), I = (0, l.useStateFromStores)([j.default], () => j.default.getCurrentUser(), []), m = (0, l.useStateFromStores)([O.default], () => {
                    var e;
                    return null != I && null != E && null !== (t = null === (e = O.default.getMember(E, I.id)) || void 0 === e ? void 0 : e.isPending) && void 0 !== t && t
                }, [I, E]), S = (0, l.useStateFromStores)([k.default], () => k.default.getState().section, []), A = (0, l.useStateFromStores)([F.default], () => F.default.getHomeLink(), []), p = (0, l.useStateFromStores)([h.default], () => h.default.isConnected(), []), [R, v] = (0, l.useStateFromStoresArray)([M.default], () => [M.default.isVideoEnabled(), M.default.isScreenSharing()], []), G = (0, l.useStateFromStores)([x.default], () => x.default.getChannelId(), []), B = (0, l.useStateFromStores)([U.default], () => U.default.getPrimaryActivity(), []), w = (0, l.useStateFromStores)([P.default], () => P.default.getCurrentGameForAnalytics(), []), H = (0, l.useStateFromStores)([x.default], () => x.default.getMediaSessionId(), []), V = (0, l.useStateFromStores)([x.default], () => x.default.getRTCConnectionId(), []), Y = (0, C.default)(E), K = (0, l.useStateFromStores)([D.default], () => D.default.can(W.Permissions.SEND_MESSAGES, i)), q = (0, l.useStateFromStores)([N.default], () => N.default.getMessageRequestsCount(), []), Q = (0, T.useHasPendingMemberAction)(null == f ? void 0 : f.id, null == i ? void 0 : i.id), X = {
                    selectedChannelId: s,
                    channelParentId: d,
                    isNSFWChannel: o,
                    selectedGuildId: E,
                    friendsTabSection: S,
                    homeLink: A,
                    connected: p,
                    videoEnabled: R,
                    isScreenSharing: v,
                    voiceChannelId: null == c ? void 0 : c.id,
                    voiceChannelIdJoined: G,
                    voiceChannelGuildId: null == c ? void 0 : c.getGuildId(),
                    voiceChannelType: null == c ? void 0 : c.type,
                    voiceChannelBitrate: null == c ? void 0 : c.bitrate,
                    runningGame: w,
                    runningGamePid: null != w ? w.pid : null,
                    gamePlatform: (0, u.default)(B),
                    gameName: null != B ? B.name : null,
                    gameId: null != B ? B.application_id : null,
                    gameExeName: null != w ? w.exeName : null,
                    hasPreviewEnabled: null == f ? void 0 : f.features.has(W.GuildFeatures.PREVIEW_ENABLED),
                    isMemberPending: m,
                    mediaSessionId: H,
                    rtcConnectionId: V,
                    postableChannelCount: Y,
                    isTextInVoice: r,
                    canSendMessage: K,
                    numMessageRequests: q,
                    hasPendingMemberAction: Q
                };
                return (0, a.jsx)(z, {
                    ...X
                })
            }
        },
        223415: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("775560"),
                o = n("301165"),
                u = n("446674"),
                d = n("278572"),
                c = n("684581"),
                E = n("488284"),
                f = n("870696"),
                _ = n("385649"),
                I = n("18494"),
                h = n("102985"),
                C = n("31957"),
                T = n("709681"),
                m = n("157246");
            let S = {
                    transform: "scale(0.7)",
                    opacity: 0
                },
                N = {
                    transform: "scale(1)",
                    opacity: 1
                };
            var A = () => {
                let e = (0, u.useStateFromStores)([I.default], () => I.default.getChannelId()),
                    t = (0, u.useStateFromStoresArray)([C.default], () => C.default.getIncomingCalls().filter(t => {
                        let {
                            channel: n
                        } = t;
                        return e !== n.id
                    })),
                    n = (0, u.useStateFromStores)([C.default], () => C.default.hasIncomingCalls()),
                    l = (0, u.useStateFromStores)([_.default], () => _.default.isSoundDisabled("call_ringing")),
                    A = (0, E.useIsHolidayRingtoneEligible)(),
                    p = (0, u.useStateFromStores)([_.default], () => {
                        var e;
                        return (null === (e = c.default.ringtone) || void 0 === e ? void 0 : e.name) == null || _.default.isSoundDisabled(c.default.ringtone.name)
                    }),
                    g = (0, u.useStateFromStores)([h.default], () => h.default.disableSounds),
                    R = (0, u.useStateFromStores)([f.default], () => f.default.getSoundpack()),
                    O = s.useRef(!1),
                    L = (0, r.useStableMemo)(() => {
                        let e = "call_ringing";
                        if (A && !p) return (0, T.createSound)(c.default.ringtone.name, e);
                        if (R === m.Soundpacks.CLASSIC) {
                            let t = 500 === i.random(1, 1e3) ? "call_ringing_beat" : "call_ringing";
                            return (0, T.createSound)(t, e)
                        }
                        return (0, T.createSoundForPack)("call_ringing", R)
                    }, [R, p, A]);
                s.useEffect(() => () => {
                    L.stop()
                }, [L]), s.useEffect(() => {
                    if (g || l) {
                        O.current && (L.stop(), O.current = !1);
                        return
                    }
                    n && !O.current ? (L.loop(), O.current = !0) : !n && O.current && (L.stop(), O.current = !1)
                }, [l, g, n, L]);
                let M = (0, o.useTransition)(t, {
                    keys: e => {
                        var t;
                        return null === (t = e.channel) || void 0 === t ? void 0 : t.id
                    },
                    enter: {
                        from: S,
                        to: N
                    },
                    leave: S,
                    config: {
                        mass: 1,
                        tension: 500,
                        friction: 18,
                        clamp: !0
                    }
                });
                return M((e, t) => (0, a.jsx)(d.default, {
                    ...t,
                    animatedStyle: e
                }))
            }
        },
        399174: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("458960"),
                o = n("446674"),
                u = n("266491"),
                d = n("77078"),
                c = n("54239"),
                E = n("454286"),
                f = n("485328"),
                _ = n("269936"),
                I = n("725621"),
                h = n("161778"),
                C = n("778588"),
                T = n("708169"),
                m = n("659500"),
                S = n("439932"),
                N = n("49111"),
                A = n("350828");
            let p = (0, _.makeLazy)({
                    createPromise: () => n.el("420610").then(n.bind(n, "420610")),
                    webpackId: "420610",
                    name: "UserSettings"
                }),
                g = (0, _.makeLazy)({
                    createPromise: () => n.el("995865").then(n.bind(n, "995865")),
                    webpackId: "995865",
                    name: "ChannelSettings"
                }),
                R = (0, _.makeLazy)({
                    createPromise: () => n.el("258556").then(n.bind(n, "258556")),
                    webpackId: "258556",
                    name: "CollectiblesShop"
                }),
                O = {
                    [N.Layers.USER_SETTINGS]: () => (0, a.jsx)(p, {}),
                    [N.Layers.CHANNEL_SETTINGS]: () => (0, a.jsx)(g, {}),
                    [N.Layers.GUILD_SETTINGS]: () => (0, a.jsx)(I.default, {}),
                    [N.Layers.COLLECTIBLES_SHOP]: () => (0, a.jsx)(R, {})
                },
                L = "SHOWN",
                M = "HIDDEN",
                v = {
                    friction: 10,
                    tension: 100
                };

            function D() {
                return s.useEffect(() => (f.default.enable(), f.default.enableTemp(E.SETTINGS_LAYERS_LAYOUT), () => f.default.disableTemp()), []), null
            }
            class x extends s.PureComponent {
                static getDerivedStateFromProps(e, t) {
                    return e.mode !== t.mode ? {
                        animating: !0,
                        mode: e.mode
                    } : null
                }
                componentDidUpdate(e) {
                    let {
                        mode: t
                    } = this.props, {
                        mode: n
                    } = e;
                    if (t !== n) {
                        if (t === L && n === M) return this.animateIn();
                        if (t === M && n === L) return this.animateUnder()
                    }
                }
                componentWillEnter(e) {
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    n.setValue(1.1), t.setValue(0), e(), this.setState({
                        animating: !0
                    }, () => this.animateIn())
                }
                componentWillLeave(e) {
                    this.setState({
                        animating: !0
                    }, () => this.animateOut(e))
                }
                animateIn(e) {
                    o.default.Emitter.pause(500);
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    r.default.parallel([r.default.spring(t, {
                        toValue: 1,
                        ...v
                    }), r.default.spring(n, {
                        toValue: 1,
                        ...v
                    })]).start(() => this.animateComplete(e))
                }
                animateOut(e) {
                    o.default.Emitter.pause(500);
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    m.ComponentDispatch.dispatch(N.ComponentActions.LAYER_POP_START), r.default.parallel([r.default.spring(t, {
                        toValue: 0,
                        ...v
                    }), r.default.spring(n, {
                        toValue: 1.1,
                        ...v
                    })]).start(() => {
                        e(), m.ComponentDispatch.dispatch(N.ComponentActions.LAYER_POP_COMPLETE)
                    })
                }
                animateUnder() {
                    o.default.Emitter.pause(500);
                    let {
                        opacity: e,
                        scale: t
                    } = this.state;
                    r.default.parallel([r.default.spring(e, {
                        toValue: 0,
                        ...v
                    }), r.default.spring(t, {
                        toValue: .93,
                        ...v
                    })]).start(() => this.animateComplete())
                }
                animateComplete(e) {
                    this.setState({
                        animating: !1
                    }, e)
                }
                render() {
                    let {
                        animating: e
                    } = this.state, {
                        mode: t,
                        children: n,
                        baseLayer: s,
                        ...l
                    } = this.props, o = e || t === M ? this.getAnimatedStyle() : null, u = (0, a.jsx)(r.default.div, {
                        ref: e => this.containerRef.current = null != e ? e.refs.node : void 0,
                        "aria-hidden": t === M,
                        className: i(A.layer, {
                            [A.baseLayer]: s,
                            [A.animating]: e,
                            "stop-animations": t === M
                        }),
                        style: o,
                        ...l,
                        children: n
                    });
                    return s ? u : (0, a.jsx)(d.FocusLock, {
                        containerRef: this.containerRef,
                        children: u
                    })
                }
                getAnimatedStyle() {
                    let {
                        opacity: e,
                        scale: t
                    } = this.state, {
                        reducedMotion: n
                    } = this.context;
                    return {
                        opacity: e,
                        transform: n.enabled ? void 0 : [{
                            scale: t
                        }, {
                            translateZ: 0
                        }]
                    }
                }
                constructor(e) {
                    super(e), this.containerRef = s.createRef();
                    let t = 1,
                        n = 1;
                    e.mode === M && (t = .93, n = 0), this.state = {
                        animating: !1,
                        scale: new r.default.Value(t),
                        opacity: new r.default.Value(n),
                        mode: e.mode
                    }
                }
            }
            x.defaultProps = {
                baseLayer: !1
            }, x.contextType = d.AccessibilityPreferencesContext;
            class P extends s.PureComponent {
                componentDidMount() {
                    m.ComponentDispatch.subscribe(N.ComponentActions.LAYER_POP_ESCAPE_KEY, c.popLayer)
                }
                componentWillUnmount() {
                    m.ComponentDispatch.unsubscribe(N.ComponentActions.LAYER_POP_ESCAPE_KEY, c.popLayer)
                }
                renderLayers() {
                    let {
                        children: e,
                        layers: t,
                        hasFullScreenLayer: n
                    } = this.props, {
                        length: s
                    } = t, l = [];
                    return l.push((0, a.jsx)(x, {
                        mode: 0 !== s || n ? M : L,
                        baseLayer: !0,
                        children: e
                    }, "layer-base")), t.forEach((e, t) => l.push(this.renderComponent(e, t, s))), l
                }
                renderComponent(e, t, n) {
                    let s;
                    return s = "string" == typeof e ? O[e]() : (0, a.jsx)(e, {}), (0, a.jsxs)(x, {
                        mode: t === n - 1 ? L : M,
                        children: [(0, a.jsx)(D, {}), s]
                    }, "layer-".concat(t))
                }
                renderArtisanalHack() {
                    return (0, a.jsx)("div", {
                        className: i(A.bg, (0, S.getThemeClass)(this.props.sidebarTheme))
                    })
                }
                render() {
                    return (0, a.jsxs)(a.Fragment, {
                        children: [this.renderArtisanalHack(), (0, a.jsx)(u.default, {
                            component: "div",
                            className: i(A.layers, this.props.className),
                            children: this.renderLayers()
                        })]
                    })
                }
            }

            function y(e) {
                let t = (0, o.useStateFromStores)([h.default], () => h.default.darkSidebar) ? N.ThemeTypes.DARK : void 0,
                    n = (0, o.useStateFromStores)([C.default], () => C.default.getLayers()),
                    s = (0, T.useFullScreenLayerStore)(e => e.fullScreenLayers.length > 0);
                return (0, a.jsx)(P, {
                    ...e,
                    sidebarTheme: t,
                    layers: n,
                    hasFullScreenLayer: s
                })
            }
        },
        366410: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("316272"),
                s = n("737292"),
                l = n("161778"),
                i = n("845579"),
                r = n("374363"),
                o = n("32531"),
                u = n("253539"),
                d = n("941719");
            class c extends a.default {
                _initialize() {
                    r.default.addChangeListener(this._updateClientTheme), l.default.addChangeListener(this._updateClientTheme)
                }
                _terminate() {
                    r.default.removeChangeListener(this._updateClientTheme), l.default.removeChangeListener(this._updateClientTheme)
                }
                _resetClientTheme() {
                    (0, o.resetBackgroundGradientPreset)(), (0, o.resetBackgroundGradientAngle)(), this._currentBackgroundGradientPresetId = void 0, this._currentBackgroundGradientAngle = void 0
                }
                constructor(...e) {
                    super(...e), this._updateBackgroundGradientPresetId = e => {
                        if (this._currentBackgroundGradientPresetId !== e) {
                            if (null == e) {
                                (0, o.resetBackgroundGradientPreset)(), this._currentBackgroundGradientPresetId = void 0;
                                return
                            }(0, o.updateBackgroundGradientPreset)(e), this._currentBackgroundGradientPresetId = e
                        }
                    }, this._updateBackgroundGradientAngle = e => {
                        if (this._currentBackgroundGradientAngle !== e) {
                            if (null == e) {
                                (0, o.resetBackgroundGradientAngle)(), this._currentBackgroundGradientAngle = void 0;
                                return
                            }(0, o.updateBackgroundGradientAngle)(e), this._currentBackgroundGradientPresetId = e
                        }
                    }, this._updateClientTheme = () => {
                        var e, t, n, a, r;
                        let o, c;
                        if (s.default.shouldSync("appearance")) {
                            let {
                                backgroundGradientPresetId: e,
                                backgroundGradientAngle: t
                            } = i.ClientThemeSettings.getSetting();
                            o = e, c = t
                        } else o = null === (n = s.default.getAppearanceSettings()) || void 0 === n ? void 0 : null === (t = n.clientThemeSettings) || void 0 === t ? void 0 : t.backgroundGradientPresetId, c = null === (r = s.default.getAppearanceSettings()) || void 0 === r ? void 0 : null === (a = r.clientThemeSettings) || void 0 === a ? void 0 : a.backgroundGradientAngle;
                        if (null != o && (null === (e = d.BACKGROUND_GRADIENT_PRESETS_MAP[o]) || void 0 === e ? void 0 : e.theme) !== l.default.theme) {
                            let e = d.BACKGROUND_GRADIENT_PRESETS_MAP[o];
                            if (!(0, u.areThemesEqualForGradientThemes)(e.theme, l.default.theme)) {
                                this._resetClientTheme();
                                return
                            }
                        }
                        this._updateBackgroundGradientPresetId(o), this._updateBackgroundGradientAngle(c)
                    }
                }
            }
            var E = new c
        },
        185314: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("77078"),
                r = n("997289"),
                o = n("685665"),
                u = n("369964"),
                d = n("649844"),
                c = n("697218"),
                E = n("599110"),
                f = n("764364"),
                _ = n("56947"),
                I = n("49111"),
                h = n("646718"),
                C = n("782340"),
                T = n("150119"),
                m = function(e) {
                    let {
                        markAsDismissed: t
                    } = e, n = (0, _.useShouldSeeClipsPremiumEarlyAccessAnnouncementCoachmark)({
                        autoTrackExposure: !0
                    }), m = (0, r.useAnalyticsContext)(), {
                        analyticsLocations: S
                    } = (0, o.default)(), N = c.default.getCurrentUser(), A = (0, f.isPremium)(N);
                    return s.useEffect(() => {
                        n && !A && E.default.track(I.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                            type: h.PremiumUpsellTypes.CLIPS_GUILD_SIDEBAR_COACHMARK_PREMIUM_EARLY_ACCESS_UPSELL,
                            location: m.location,
                            location_stack: S
                        })
                    }, [n, A, m.location, S]), n ? (0, a.jsx)(u.default, {
                        dismissibleContent: l.DismissibleContent.CLIPS_GUILD_PANEL_PREMIUM_EARLY_ACCESS_COACHMARK,
                        contentClassName: T.container,
                        isPremiumEarlyAccess: !0,
                        shouldUseHorizontalButtons: !0,
                        inlineArt: !0,
                        artClassName: T.clipsArt,
                        position: "right",
                        header: C.default.Messages.CLIPS_NITRO_EA_ANNOUNCEMENT_COACHMARK_TITLE,
                        headerClassName: T.clipsEducationHeader,
                        body: (0, a.jsx)(i.Text, {
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: C.default.Messages.CLIPS_NITRO_EA_ANNOUNCEMENT_COACHMARK_BODY
                        }),
                        tryItText: A ? void 0 : C.default.Messages.CLIPS_NITRO_EA_ANNOUNCEMENT_COACHMARK_CTA_NON_SUBS,
                        onTryFeature: A ? void 0 : () => {
                            (0, d.default)({
                                subscriptionTier: h.PremiumSubscriptionSKUs.TIER_2,
                                analyticsLocations: S
                            })
                        },
                        onClose: () => t()
                    }) : null
                }
        },
        570319: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("305961"),
                l = n("957255"),
                i = n("772051"),
                r = n("49111");

            function o(e) {
                var t;
                let n = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    o = (0, a.useStateFromStores)([l.default], () => l.default.can(r.Permissions.ADMINISTRATOR, n)),
                    u = null == n ? void 0 : n.hasFeature(r.GuildFeatures.CLYDE_DISABLED),
                    d = i.default.useExperiment({
                        guildId: null !== (t = null == n ? void 0 : n.id) && void 0 !== t ? t : "",
                        location: "443078_1"
                    }).experimentState;
                return d === i.ClydeExperimentState.DefaultOn && !u || d === i.ClydeExperimentState.ComingSoon && o
            }
        },
        475405: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("206230"),
                r = n("164586"),
                o = n("592407"),
                u = n("957255"),
                d = n("79798"),
                c = n("599110"),
                E = n("701909"),
                f = n("772051"),
                _ = n("980215"),
                I = n("49111"),
                h = n("988268"),
                C = n("782340"),
                T = n("445930"),
                m = n("311492"),
                S = n("382719");

            function N(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e, N = (0, s.useStateFromStores)([i.default], () => i.default.useReducedMotion), A = (0, _.useClydeExperiment)(t) === f.ClydeExperimentState.ComingSoon, p = (0, s.useStateFromStores)([u.default], () => u.default.can(I.Permissions.ADMINISTRATOR, t)), g = A && p, R = () => {
                    open(E.default.getArticleURL(I.HelpdeskArticles.CLYDE_AI)), n()
                };
                return (0, a.jsx)(r.default, {
                    image: N ? S : m,
                    imageStyles: {
                        borderRadius: "50%"
                    },
                    imageMarginTop: 8,
                    guild: t,
                    onDismissed: n,
                    centerText: !0,
                    imageMarginX: 64,
                    onClick: g ? void 0 : R,
                    title: () => {
                        let e = g ? C.default.Messages.CLYDE_NUX_ADMIN_CHANNEL_NOTICE_TITLE : C.default.Messages.CLYDE_NUX_USER_CHANNEL_NOTICE_TITLE;
                        return (0, a.jsxs)("div", {
                            className: T.titleContainer,
                            children: [(0, a.jsx)(l.Text, {
                                variant: "text-md/medium",
                                color: "header-primary",
                                className: T.title,
                                children: e
                            }), (0, a.jsx)(d.default, {
                                type: h.BotTagTypes.AI
                            })]
                        })
                    },
                    message: g ? C.default.Messages.CLYDE_NUX_ADMIN_CHANNEL_NOTICE_MESSAGE : C.default.Messages.CLYDE_NUX_USER_CHANNEL_NOTICE_MESSAGE,
                    cta: g ? () => (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(l.Button, {
                            className: T.button,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => {
                                o.default.open(t.id, I.GuildSettingsSections.INTEGRATIONS), c.default.track(I.AnalyticEvents.CLYDE_NUX_NOTICE_MANAGE_SETTINGS_CTA_CLICKED, {
                                    guild_id: t.id
                                }), n()
                            },
                            fullWidth: !0,
                            color: l.Button.Colors.PRIMARY,
                            children: C.default.Messages.CLYDE_NUX_ADMIN_CHANNEL_NOTICE_MANAGE_SETTINGS
                        }), (0, a.jsx)(l.Button, {
                            className: T.button,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => {
                                c.default.track(I.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                                    source: I.ChannelNoticeCtaSources.CLYDE_ADMIN_NUX_NOTICE,
                                    guild_id: t.id,
                                    notice_type: I.ChannelNoticeTypes.CLYDE_ADMIN_NUX
                                }), R()
                            },
                            fullWidth: !0,
                            children: C.default.Messages.CLYDE_NUX_CHANNEL_NOTICE_LEARN_MORE
                        })]
                    }) : C.default.Messages.CLYDE_NUX_CHANNEL_NOTICE_LEARN_MORE,
                    trackingSource: g ? I.ChannelNoticeCtaSources.CLYDE_ADMIN_NUX_NOTICE : I.ChannelNoticeCtaSources.CLYDE_USER_NUX_NOTICE,
                    type: g ? I.ChannelNoticeTypes.CLYDE_ADMIN_NUX : I.ChannelNoticeTypes.CLYDE_USER_NUX
                })
            }
        },
        235898: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("884691"),
                s = n("65597"),
                l = n("875212"),
                i = n("21526"),
                r = n("853987"),
                o = n("563775"),
                u = n("775416");

            function d() {
                var e;
                let t = "useFetchCollectiblesCategoriesAndPurchases";
                (0, l.useTriggerDebuggingAA)({
                    location: t + " auto on",
                    autoTrackExposure: !0
                }), (0, l.useTriggerDebuggingAA)({
                    location: t + " auto off",
                    autoTrackExposure: !1
                }), (0, o.default)({
                    location: t
                });
                let {
                    isFetching: n,
                    categories: d,
                    error: c
                } = function() {
                    var e;
                    let t = "useMaybeFetchCollectiblesCategories";
                    (0, l.useTriggerDebuggingAA)({
                        location: t + " auto on",
                        autoTrackExposure: !0
                    }), (0, l.useTriggerDebuggingAA)({
                        location: t + " auto off",
                        autoTrackExposure: !1
                    }), (0, o.default)({
                        location: t
                    });
                    let [n, u, d, c] = (0, s.useStateFromStoresArray)([r.default], () => [r.default.isFetching, r.default.error, null !== (e = r.default.lastFetched) && void 0 !== e ? e : 0, r.default.categories]);
                    return (0, a.useEffect)(() => {
                        !(n || u || Date.now() - d < 6e5) && (0, i.fetchCollectiblesCategories)()
                    }, [n, d, u]), {
                        isFetching: n,
                        categories: c,
                        error: u
                    }
                }(), {
                    isClaiming: E,
                    fetchError: f,
                    claimError: _,
                    isFetching: I,
                    purchases: h
                } = function() {
                    let e = "useFetchPurchases";
                    (0, l.useTriggerDebuggingAA)({
                        location: e + " auto on",
                        autoTrackExposure: !0
                    }), (0, l.useTriggerDebuggingAA)({
                        location: e + " auto off",
                        autoTrackExposure: !1
                    }), (0, o.default)({
                        location: e
                    });
                    let [t, n, r, d, c] = (0, s.useStateFromStoresArray)([u.default], () => [u.default.isFetching, u.default.isClaiming, u.default.fetchError, u.default.claimError, u.default.purchases]);
                    return (0, a.useEffect)(() => {
                        (0, i.fetchCollectiblesPurchases)()
                    }, []), {
                        isClaiming: n,
                        fetchError: r,
                        claimError: d,
                        isFetching: t,
                        purchases: c
                    }
                }(), C = null !== (e = null != c ? c : f) && void 0 !== e ? e : _;
                return {
                    isFetching: n || I,
                    isFetchingCategories: n,
                    isFetchingPurchases: I,
                    isClaiming: E,
                    categories: d,
                    purchases: h,
                    error: C
                }
            }
        },
        321833: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("272214"),
                o = n.n(r),
                u = n("301165"),
                d = n("446674"),
                c = n("77078"),
                E = n("206230"),
                f = n("812204"),
                _ = n("685665"),
                I = n("606292"),
                h = n("688318"),
                C = n("91653"),
                T = n("697218"),
                m = n("945330"),
                S = n("21526"),
                N = n("491232"),
                A = n("235898"),
                p = n("8977"),
                g = n("994428"),
                R = n("782340"),
                O = n("55395");
            let L = c.AvatarSizes.SIZE_40,
                M = (0, I.getDecorationSizeForAvatarSize)(L),
                v = e => Math.floor((e - 104 - 76) / 92),
                D = f.default.COLLECTIBLES_ACCOUNT_SWITCH_UPSELL;

            function x(e) {
                let {
                    height: t,
                    onClose: n,
                    user: l
                } = e, {
                    dismiss: i
                } = (0, p.default)(l), {
                    categories: r,
                    isFetching: f
                } = (0, A.default)(), {
                    pendingAvatarDecoration: I,
                    setPendingAvatarDecoration: h
                } = (0, C.default)({
                    isTryItOut: !0
                }), {
                    analyticsLocations: T
                } = (0, _.default)(D), L = s.useCallback(() => {
                    i(g.ContentDismissActionType.PRIMARY), n(), (0, S.openCollectiblesShop)({
                        analyticsLocations: T,
                        analyticsSource: D
                    })
                }, [i, n, T]), M = s.useCallback(() => {
                    i(g.ContentDismissActionType.DISMISS), n()
                }, [i, n]), x = (0, d.useStateFromStores)([E.default], () => E.default.useReducedMotion), P = (0, u.useSpring)({
                    immediate: x,
                    from: {
                        transform: "translate3d(-110%, 0, 0)",
                        height: t
                    },
                    to: {
                        transform: "translate3d(0, 0, 0)",
                        height: t
                    },
                    config: {
                        mass: 1,
                        stiffness: 100,
                        damping: 15
                    }
                }), b = s.useMemo(() => (0, N.getAvatarDecorationsFromCategories)(r), [r]);
                return (s.useEffect(() => () => {
                    h(null)
                }, [h]), s.useEffect(() => {
                    if (null == I) {
                        let e = 3 * v(null == t ? 0 : t),
                            n = o(0, Math.min(e, b.length) - 1);
                        h(b[n])
                    }
                }, [b, h, t, I]), null == t) ? null : (0, a.jsxs)(u.animated.div, {
                    className: O.container,
                    style: P,
                    children: [(0, a.jsx)("div", {
                        className: O.content,
                        children: (0, a.jsx)(c.HeadingLevel, {
                            component: (0, a.jsxs)(c.Heading, {
                                variant: "heading-lg/semibold",
                                className: O.title,
                                children: [R.default.Messages.COLLECTIBLES_ACCOUNT_SWITCH_UPSELL_TITLE, (0, a.jsx)(c.Clickable, {
                                    className: O.close,
                                    onClick: M,
                                    children: (0, a.jsx)(m.default, {
                                        className: O.closeIcon
                                    })
                                })]
                            }),
                            children: (0, a.jsx)(c.Text, {
                                variant: "text-sm/normal",
                                children: R.default.Messages.COLLECTIBLES_ACCOUNT_SWITCH_UPSELL_SUB_TITLE
                            })
                        })
                    }), (0, a.jsx)(y, {
                        avatarDecorations: b,
                        isFetching: f
                    }), (0, a.jsx)("div", {
                        className: O.ctaContainer,
                        children: (0, a.jsx)(c.Button, {
                            className: O.cta,
                            size: c.Button.Sizes.LARGE,
                            color: c.Button.Colors.BRAND_NEW,
                            onClick: L,
                            children: R.default.Messages.COLLECTIBLES_ACCOUNT_SWITCH_UPSELL_CTA
                        })
                    })]
                })
            }

            function P(e) {
                let {
                    avatarDecoration: t
                } = e, n = (0, d.useStateFromStores)([T.default], () => T.default.getCurrentUser()), {
                    avatarDecorationSrc: s,
                    eventHandlers: l
                } = (0, h.default)({
                    user: n,
                    avatarDecorationOverride: t,
                    size: M
                }), {
                    pendingAvatarDecoration: r,
                    setPendingAvatarDecoration: o
                } = (0, C.default)({
                    isTryItOut: !0
                });
                return (0, a.jsx)(c.FocusRing, {
                    children: (0, a.jsx)(c.Clickable, {
                        ...l,
                        className: i(O.item, {
                            [O.selectedItem]: (null == r ? void 0 : r.skuId) === t.skuId
                        }),
                        onClick: () => {
                            o(t)
                        },
                        children: (0, a.jsx)("img", {
                            className: O.avatarDecorationItem,
                            src: s,
                            alt: t.label
                        })
                    })
                })
            }

            function y(e) {
                let {
                    avatarDecorations: t,
                    isFetching: n
                } = e, l = s.useRef(null);
                return n ? (0, a.jsx)(c.Spinner, {
                    className: O.loading
                }) : (0, a.jsx)(c.FocusRingScope, {
                    containerRef: l,
                    children: (0, a.jsx)(c.AdvancedScroller, {
                        className: O.listWrapper,
                        children: (0, a.jsx)("div", {
                            ref: l,
                            className: O.collectiblesList,
                            children: t.map(e => (0, a.jsx)(P, {
                                avatarDecoration: e
                            }, e.id))
                        })
                    })
                })
            }
        },
        580280: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("812204"),
                i = n("685665"),
                r = n("369964"),
                o = n("21526"),
                u = n("782340"),
                d = n("672651"),
                c = n("753656"),
                E = () => {
                    let {
                        analyticsLocations: e
                    } = (0, i.default)(l.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP);
                    return (0, a.jsx)(r.default, {
                        dismissibleContent: s.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_COACHMARK,
                        shouldUseHorizontalButtons: !0,
                        inlineArt: !0,
                        tryItText: u.default.Messages.AVATAR_DECORATION_SHOP_UPSELL_NITRO_CTA,
                        onTryFeature: () => {
                            (0, o.openCollectiblesShop)({
                                analyticsLocations: e,
                                analyticsSource: l.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP
                            })
                        },
                        header: u.default.Messages.COLLECTIBLES_SFA_TITLE,
                        body: u.default.Messages.COLLECTIBLES_SFA_COACHMARK_DESCRIPTION,
                        art: (0, a.jsx)("img", {
                            className: d.art,
                            src: c,
                            alt: ""
                        })
                    })
                }
        },
        171984: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("269936").makeLazy)({
                createPromise: () => n.el("258556").then(n.bind(n, "258556")),
                webpackId: "258556"
            })
        },
        8977: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("151426"),
                s = n("875212"),
                l = n("509802"),
                i = n("563775"),
                r = e => {
                    var t;
                    let n = "useShouldShowAccountProfilePopoutCollectiblesUpsell";
                    (0, i.default)({
                        location: n
                    }), (0, s.useTriggerDebuggingAA)({
                        location: n + " auto on",
                        autoTrackExposure: !0
                    }), (0, s.useTriggerDebuggingAA)({
                        location: n + " auto off",
                        autoTrackExposure: !1
                    });
                    let r = (null === (t = e.avatarDecoration) || void 0 === t ? void 0 : t.skuId) != null,
                        [o, u] = (0, l.useDismissibleContentGroup)(r ? [] : [a.DismissibleContent.COLLECTIBLES_STATUS_POPOUT_UPSELL], void 0, !0),
                        d = o === a.DismissibleContent.COLLECTIBLES_STATUS_POPOUT_UPSELL;
                    return {
                        shouldShow: d,
                        dismiss: u
                    }
                }
        },
        927175: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272");
            let r = "CONNECTIONS_GRID_MODAL_KEY";
            class o extends i.default {
                _initialize() {
                    l.default.subscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow), l.default.subscribe("CONNECTIONS_GRID_MODAL_HIDE", this.handleHide)
                }
                _terminate() {
                    l.default.unsubscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow), l.default.unsubscribe("CONNECTIONS_GRID_MODAL_HIDE", this.handleHide)
                }
                handleShow(e) {
                    let {
                        onComplete: t,
                        excludedPlatformTypes: l,
                        integrations: i,
                        onCompleteApplication: o
                    } = e;
                    !(0, s.hasModalOpen)(r) && (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("121942").then(n.bind(n, "121942"));
                        return n => (0, a.jsx)(e, {
                            onComplete: t,
                            excludedPlatformTypes: l,
                            integrations: i,
                            onCompleteApplication: o,
                            ...n
                        })
                    })
                }
                handleHide() {
                    (0, s.closeModal)(r)
                }
            }
            var u = new o
        },
        55058: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("963662"),
                l = n("701909"),
                i = n("49111"),
                r = n("782340"),
                o = n("476742");

            function u(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)(s.default, {
                    image: o,
                    guild: t,
                    onDismissed: n,
                    onClick: () => {
                        open(l.default.getArticleURL(i.HelpdeskArticles.CONNECTION_DETAILS)), n()
                    },
                    title: r.default.Messages.LINKED_ROLES_ADMIN_NUX_TITLE,
                    message: r.default.Messages.LINKED_ROLES_ADMIN_NUX_CONTENT,
                    cta: r.default.Messages.LEARN_MORE,
                    trackingSource: i.ChannelNoticeCtaSources.LINKED_ROLES_ADMIN_NUX,
                    type: i.ChannelNoticeTypes.LINKED_ROLES_ADMIN
                })
            }
        },
        387678: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useGuildProductsSortOptionContext: function() {
                    return u
                },
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("874146");
            let o = s.createContext(void 0);

            function u() {
                let e = s.useContext(o);
                return i(null != e, "must use useGuildShopSortContext within a GuildShopSortOptionsContextProvider"), e
            }

            function d(e) {
                let {
                    children: t,
                    defaultSortOption: n = r.GuildProductSortOptions.NEWEST_ARRIVALS
                } = e, [l, i] = s.useState(n);
                return (0, a.jsx)(o.Provider, {
                    value: {
                        sortOption: l,
                        setSortOption: i,
                        onReset: () => i(n)
                    },
                    children: t
                })
            }
        },
        144588: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return G
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("759843"),
                i = n("446674"),
                r = n("77078"),
                o = n("428958"),
                u = n("20606"),
                d = n("465869"),
                c = n("619443"),
                E = n("38112"),
                f = n("602818"),
                _ = n("539938"),
                I = n("305961"),
                h = n("191814"),
                C = n("741515"),
                T = n("657199"),
                m = n("387678"),
                S = n("634388"),
                N = n("893399"),
                A = n("10589"),
                p = n("208713"),
                g = n("803692"),
                R = n("90324"),
                O = n("624416"),
                L = n("3081"),
                M = n("907038"),
                v = n("874146"),
                D = n("724210"),
                x = n("660516"),
                P = n("782340"),
                y = n("261974");

            function b(e) {
                var t;
                let {
                    guildId: n,
                    productId: s
                } = e, {
                    loaded: l,
                    subscriptionsSettings: o
                } = (0, C.useMonetizationSettings)(n), u = (0, i.useStateFromStores)([I.default], () => I.default.getGuild(n)), {
                    selectedTab: d,
                    isPhantomPreview: c,
                    categoryTabs: E
                } = (0, S.useGuildShopDisplayContext)();
                return null != u && (c || l && null != o) ? (0, a.jsx)(m.default, {
                    defaultSortOption: null !== (t = null == o ? void 0 : o.store_page_guild_products_default_sort) && void 0 !== t ? t : v.GuildProductSortOptions.NAME,
                    children: (0, a.jsxs)("div", {
                        className: y.contentContainer,
                        children: [(0, a.jsx)(L.default, {
                            guild: u,
                            subscriptionsSettings: o
                        }), (0, a.jsx)(h.default, {
                            size: 32
                        }), E.length > 0 && (0, a.jsx)(g.GuildShopCategorySelector, {
                            guild: u
                        }), (0, a.jsxs)("div", {
                            className: y.tabContainer,
                            children: [(0, a.jsx)(h.default, {
                                size: 32
                            }), c && (0, a.jsx)(R.default, {
                                guildId: n
                            }), d === N.GuildShopTab.GUILD_PRODUCTS && (0, a.jsx)(A.GuildProductCardGrid, {
                                guildId: n,
                                productId: s
                            }), d === N.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS && (0, a.jsx)(p.default, {
                                guildId: n
                            })]
                        })]
                    })
                }) : (0, a.jsx)(r.Spinner, {})
            }

            function U(e) {
                let {
                    guildId: t,
                    productId: n
                } = e, h = (0, i.useStateFromStores)([c.default], () => c.default.isConnected()), C = (0, i.useStateFromStores)([I.default], () => I.default.getGuild(t)), {
                    shouldHideGuildPurchaseEntryPoints: m,
                    restrictionsLoading: N
                } = (0, d.useShouldHideGuildPurchaseEntryPoints)(t), {
                    selectedTab: A,
                    isPhantomPreview: p,
                    categoryTabs: g
                } = (0, S.useGuildShopDisplayContext)(), R = h && (null == C || 0 === g.length && !p || m && !N);
                return s.useEffect(() => {
                    R && (0, T.handleInaccessiblePage)(t, D.StaticChannelRoute.GUILD_SHOP)
                }, [t, R]), (0, o.default)({
                    type: x.ImpressionTypes.PAGE,
                    name: l.ImpressionNames.GUILD_SHOP_PAGE,
                    properties: {
                        product_id: n,
                        tab: A
                    }
                }, {
                    disableTrack: R
                }), (0, a.jsxs)("div", {
                    className: y.container,
                    children: [(0, a.jsxs)(_.default, {
                        children: [(0, a.jsx)(_.default.Icon, {
                            icon: M.default,
                            "aria-hidden": !0,
                            color: u.default.INTERACTIVE_ACTIVE
                        }), (0, a.jsx)(_.default.Title, {
                            children: P.default.Messages.GUILD_SHOP_CHANNEL_LABEL
                        }), (0, a.jsx)(O.default, {})]
                    }), (0, a.jsx)(r.ScrollerNone, {
                        className: y.content,
                        children: h ? (0, a.jsx)(b, {
                            guildId: t,
                            productId: n
                        }) : (0, a.jsx)(r.Spinner, {})
                    }), (0, a.jsx)(f.default, {
                        className: y.sparkleCloudTop
                    }), (0, a.jsx)(E.default, {
                        className: y.sparkleCloudBottom
                    })]
                })
            }

            function G(e) {
                let {
                    guildId: t,
                    productId: n,
                    initialTab: s
                } = e;
                return null == s && null != n && (s = N.GuildShopTab.GUILD_PRODUCTS), (0, a.jsx)(S.default, {
                    initialTab: s,
                    guildId: t,
                    children: (0, a.jsx)(U, {
                        initialTab: s,
                        productId: n,
                        guildId: t
                    })
                })
            }
        },
        10589: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildProductCardGrid: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("77078"),
                d = n("812204"),
                c = n("442379"),
                E = n("858291"),
                f = n("387678"),
                _ = n("874146"),
                I = n("782340"),
                h = n("203362");

            function C(e) {
                let {
                    guildId: t,
                    productId: n
                } = e, {
                    listingsLoaded: l
                } = (0, c.useFetchGuildProductListingsForGuild)(t), r = (0, c.useGuildProductsForGuild)(t, {
                    publishedOnly: !0
                }), C = s.useRef(null), {
                    sortOption: T
                } = (0, f.useGuildProductsSortOptionContext)(), m = s.useMemo(() => (function(e, t) {
                    let n, a;
                    switch (t) {
                        case _.GuildProductSortOptions.NAME:
                            n = e => e.name.toLowerCase(), a = "asc";
                            break;
                        case _.GuildProductSortOptions.PRICE_ASC:
                            n = "price_tier", a = "asc";
                            break;
                        case _.GuildProductSortOptions.PRICE_DESC:
                            n = "price_tier", a = "desc";
                            break;
                        case _.GuildProductSortOptions.NEWEST_ARRIVALS:
                            n = "published_at", a = "desc";
                            break;
                        default:
                            return e
                    }
                    return o.orderBy(e, [n], [a])
                })(r, T), [r, T]);
                return l ? (0, a.jsx)("ul", {
                    className: h.cardContainer,
                    "aria-label": I.default.Messages.GUILD_SHOP_PRODUCTS_A11Y_LABEL,
                    children: m.map(e => (0, a.jsx)("li", {
                        className: h.card,
                        children: (0, a.jsx)("div", {
                            className: i(h.cardContent, {
                                [h.selectedCard]: e.id === n
                            }),
                            ref: e.id === n ? C : void 0,
                            onLoad: () => {
                                let t = C.current;
                                null != t && e.id === n && (t.scrollIntoView({
                                    behavior: "smooth",
                                    block: "center"
                                }), setTimeout(() => {
                                    t.classList.remove(h.selectedCard)
                                }, 2e3))
                            },
                            children: (0, a.jsx)(E.GuildProductListingPublicCard, {
                                guildProductListing: e,
                                guildId: t,
                                location: d.default.GUILD_SHOP_PAGE,
                                shouldShowFullDescriptionButton: !1,
                                hideRoleTag: !0,
                                lineClamp: 2,
                                cardWidth: 332,
                                cardHeight: 347,
                                thumbnailHeight: 187,
                                descriptionTextVariant: "text-xs/normal",
                                showOpaqueBackground: !0
                            }, e.id)
                        }, e.id)
                    }, e.id))
                }) : (0, a.jsx)(u.Spinner, {})
            }
        },
        208713: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("257869"),
                l = n("837008"),
                i = n("167109"),
                r = n("176687"),
                o = n("430780"),
                u = n("904698"),
                d = n("900076"),
                c = n("108314"),
                E = n("49111"),
                f = n("854771");

            function _(e) {
                var t, n;
                let {
                    guildId: s
                } = e, _ = (0, l.useGroupListingsForGuild)(s)[0], {
                    editStateIds: I
                } = i.useEditStateIds(null !== (t = null == _ ? void 0 : _.id) && void 0 !== t ? t : null, s), {
                    activeSubscription: h
                } = (0, r.default)(null == _ ? void 0 : _.id);
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [null != _ ? (0, a.jsx)(o.default, {
                        groupListingId: _.id,
                        subscription: h
                    }) : null, (0, a.jsx)(u.default, {
                        subscription: h
                    }), (0, a.jsx)(d.default, {
                        guildId: s,
                        children: I.map(e => (0, a.jsx)(c.default, {
                            guildId: s,
                            groupListingId: null !== (n = null == _ ? void 0 : _.id) && void 0 !== n ? n : "",
                            listingId: e,
                            analyticsLocation: E.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB
                        }, e))
                    })]
                })
            }

            function I(e) {
                let {
                    guildId: t
                } = e;
                return (0, a.jsx)(s.GroupListingsFetchContextProvider, {
                    guildId: t,
                    refetchOnMount: !0,
                    children: (0, a.jsx)(_, {
                        guildId: t
                    })
                })
            }
        },
        803692: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildShopCategorySelector: function() {
                    return M
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("65597"),
                r = n("95410"),
                o = n("77078"),
                u = n("206230"),
                d = n("183137"),
                c = n("393414"),
                E = n("191814"),
                f = n("381546"),
                _ = n("978679"),
                I = n("956089"),
                h = n("551254"),
                C = n("634388"),
                T = n("893399"),
                m = n("802810"),
                S = n("56673"),
                N = n("384466"),
                A = n("500307"),
                p = n("49111"),
                g = n("724210"),
                R = n("782340"),
                O = n("28521");

            function L(e) {
                let {
                    icon: t,
                    title: n,
                    body: s,
                    selected: i,
                    disabled: r = !1,
                    onClick: u,
                    onPreviewDismiss: d,
                    isNew: c = !1
                } = e;
                return (0, a.jsxs)(o.ClickableContainer, {
                    onClick: r ? void 0 : u,
                    "aria-disabled": r,
                    className: l(O.tab, {
                        [O.selected]: i,
                        [O.tabDisabled]: r,
                        [O.preview]: !i && null != d
                    }),
                    "aria-label": "",
                    children: [(0, a.jsx)("div", {
                        className: O.iconContainer,
                        children: t
                    }), (0, a.jsx)(E.default, {
                        size: 8,
                        horizontal: !0
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(o.Text, {
                            variant: "text-sm/semibold",
                            color: i ? "always-white" : "header-primary",
                            children: n
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-xs/normal",
                            color: i ? "always-white" : r ? "text-muted" : "header-primary",
                            children: s
                        })]
                    }), c && (0, a.jsx)(I.TextBadge, {
                        color: o.tokens.unsafe_rawColors.BRAND_260.css,
                        className: O.newBadge,
                        text: R.default.Messages.NEW
                    }), null != d && (0, a.jsx)(o.Clickable, {
                        className: O.tabPreviewClose,
                        onClick: d,
                        "aria-label": R.default.Messages.DISMISS,
                        children: (0, a.jsx)(f.default, {
                            width: 16,
                            height: 16
                        })
                    })]
                })
            }

            function M(e) {
                let {
                    guild: t
                } = e, n = (0, h.useIsEligibleForSubscriptionsInGuildShop)(t.id, "guild_shop_category_selector"), {
                    selectedTab: s,
                    setSelectedTab: l,
                    categoryTabs: f,
                    handlePreviewDismiss: I
                } = (0, C.useGuildShopDisplayContext)(), M = "false" === r.default.get(A.GUILD_SHOP_PRODUCT_PREVIEW_TAB_CLICK, "false"), v = (0, i.default)([u.default], () => u.default.useReducedMotion), D = f.map(e => {
                    switch (e) {
                        case T.GuildShopTab.GUILD_PRODUCTS:
                            return (0, a.jsx)(L, {
                                icon: (0, a.jsx)(m.default, {
                                    width: 20,
                                    height: 20
                                }),
                                title: R.default.Messages.GUILD_SHOP_PRODUCT_TYPE_SELECTOR_TITLE,
                                body: R.default.Messages.GUILD_SHOP_PRODUCT_TYPE_BODY,
                                selected: s === T.GuildShopTab.GUILD_PRODUCTS,
                                onClick: () => l(T.GuildShopTab.GUILD_PRODUCTS)
                            }, e);
                        case T.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS:
                            return (0, a.jsx)(L, {
                                icon: (0, a.jsx)(S.default, {
                                    width: 20,
                                    height: 20
                                }),
                                title: R.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                                body: n ? R.default.Messages.GUILD_ROLE_SUB_TYPE_BODY_AFTER_CONSOLIDATION : R.default.Messages.GUILD_ROLE_SUB_TYPE_BODY.format({
                                    openRoleSubPage: () => (0, c.transitionTo)(p.Routes.CHANNEL(t.id, g.StaticChannelRoute.ROLE_SUBSCRIPTIONS))
                                }),
                                disabled: !n,
                                selected: s === T.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS,
                                onClick: () => l(T.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS)
                            }, e);
                        case T.GuildShopTab.GUILD_PRODUCTS_PREVIEW:
                            return (0, a.jsx)(L, {
                                icon: M ? (0, a.jsx)("img", {
                                    src: v ? (0, d.getAssetCDNUrl)("server_products/storefront/question-mark.png") : (0, d.getAssetCDNUrl)("server_products/storefront/question-mark.gif"),
                                    className: O.questionMark,
                                    alt: ""
                                }) : (0, a.jsx)(_.default, {
                                    width: 20,
                                    height: 20
                                }),
                                title: R.default.Messages.GUILD_SHOP_PRODUCT_TYPE_SELECTOR_TITLE,
                                body: R.default.Messages.GUILD_STORE_PREVIEW_TAB_SELECTOR_BODY,
                                selected: s === T.GuildShopTab.GUILD_PRODUCTS_PREVIEW,
                                onClick: () => {
                                    l(T.GuildShopTab.GUILD_PRODUCTS_PREVIEW), r.default.set(A.GUILD_SHOP_PRODUCT_PREVIEW_TAB_CLICK, "true")
                                },
                                onPreviewDismiss: I,
                                isNew: M
                            }, e);
                        default:
                            return null
                    }
                });
                return (0, a.jsxs)("div", {
                    className: O.container,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-sm/bold",
                        className: O.header,
                        children: R.default.Messages.GUILD_SHOP_SUPPORT_SERVER_HEADER
                    }), (0, a.jsx)(E.default, {
                        size: 12
                    }), (0, a.jsxs)("div", {
                        className: O.filters,
                        children: [(0, a.jsx)("div", {
                            className: O.tabs,
                            children: D
                        }), s === T.GuildShopTab.GUILD_PRODUCTS && (0, a.jsx)(N.default, {})]
                    })]
                })
            }
        },
        90324: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("77078"),
                i = n("206230"),
                r = n("183137"),
                o = n("492724"),
                u = n("845579"),
                d = n("266926"),
                c = n("153160"),
                E = n("866190"),
                f = n("763838"),
                _ = n("500307"),
                I = n("49111"),
                h = n("782340"),
                C = n("391536");

            function T() {
                let e = u.GifAutoPlay.useSetting(),
                    t = (0, E.useIsWindowFocused)(),
                    n = (0, s.default)([i.default], () => i.default.useReducedMotion),
                    l = t && e && !n ? (0, r.getAssetCDNUrl)("server_products/storefront/question-mark.gif") : (0, r.getAssetCDNUrl)("server_products/storefront/question-mark.png");
                return (0, a.jsxs)("div", {
                    className: C.previewListingCard,
                    children: [(0, a.jsx)(o.default, {
                        role: void 0,
                        ctaComponent: null,
                        imageUrl: (0, r.getAssetCDNUrl)("server_products/storefront/preview-thumbnail.png"),
                        name: h.default.Messages.GUILD_STORE_PREVIEW_CARD_TITLE,
                        description: h.default.Messages.GUILD_STORE_PREVIEW_CARD_DESCRIPTION,
                        formattedPrice: (0, c.formatPrice)(0, I.CurrencyCodes.USD, {
                            localeMatcher: "best fit",
                            style: "currency",
                            maximumSignificantDigits: 1
                        }),
                        shouldShowFullDescriptionButton: !1,
                        productType: h.default.Messages.GUILD_PRODUCT_CARD_TYPE_DOWNLOADABLE_AND_ROLE,
                        onTapCard: () => null,
                        hideRoleTag: !0,
                        lineClamp: 3,
                        thumbnailHeight: 197,
                        cardWidth: 332,
                        descriptionTextVariant: "text-xs/normal"
                    }), (0, a.jsx)("img", {
                        className: C.questionMark,
                        alt: "",
                        src: l
                    })]
                })
            }

            function m() {
                return (0, a.jsxs)("div", {
                    className: C.learnMoreTipContainer,
                    children: [(0, a.jsx)(d.default, {
                        className: C.infoCircle
                    }), (0, a.jsx)(l.Text, {
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: h.default.Messages.GUILD_STORE_PREVIEW_LEARN_MORE.format({
                            learnMoreLink: _.SERVER_SHOP_URL
                        })
                    })]
                })
            }

            function S(e) {
                let {
                    guildId: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: C.previewContentContainer,
                    children: [(0, a.jsxs)("div", {
                        className: C.previewContent,
                        children: [(0, a.jsx)(T, {}), (0, a.jsx)(f.default, {
                            guildId: t,
                            showCTA: !0
                        })]
                    }), (0, a.jsx)(m, {})]
                })
            }
        },
        624416: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("867544"),
                i = n("634388"),
                r = n("893399"),
                o = n("782340"),
                u = n("989713");

            function d() {
                let {
                    selectedTab: e,
                    isPhantomPreview: t,
                    handlePreviewDismiss: n
                } = (0, i.useGuildShopDisplayContext)();
                return t ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: u.previewNotice,
                        children: [(0, a.jsx)(l.default, {
                            width: 16,
                            height: 16,
                            foregroundColor: "currentColor"
                        }), (0, a.jsx)(s.Text, {
                            variant: "text-sm/normal",
                            className: u.previewNoticeText,
                            children: e === r.GuildShopTab.GUILD_PRODUCTS_PREVIEW ? o.default.Messages.GUILD_SHOP_TAB_PREVIEW_NOTICE_LABEL : o.default.Messages.GUILD_SHOP_PAGE_PREVIEW_NOTICE_LABEL
                        })]
                    }), (0, a.jsx)(s.Button, {
                        size: s.Button.Sizes.MIN,
                        color: s.Button.Colors.PRIMARY,
                        className: u.removePreviewButton,
                        onClick: n,
                        children: e === r.GuildShopTab.GUILD_PRODUCTS_PREVIEW ? o.default.Messages.GUILD_SHOP_REMOVE_PREVIEW_TAB_BUTTON : o.default.Messages.GUILD_SHOP_REMOVE_PREVIEW_PAGE_BUTTON
                    })]
                }) : null
            }
        },
        384466: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("191814"),
                r = n("837899"),
                o = n("425190"),
                u = n("891152"),
                d = n("387678"),
                c = n("874146"),
                E = n("782340"),
                f = n("270560");

            function _(e) {
                let {
                    closePopout: t,
                    sortOptionContext: n
                } = e, {
                    sortOption: i,
                    setSortOption: r,
                    onReset: o
                } = n, u = s.useMemo(() => c.DISPLAYED_SORT_OPTIONS.map(e => (0, a.jsx)(l.MenuRadioItem, {
                    id: "".concat(e),
                    group: "sort-by",
                    label: (0, c.getGuildProductSortOptionLabel)(e),
                    action: () => r(e),
                    checked: i === e
                }, e)), [r, i]);
                return (0, a.jsx)("div", {
                    className: f.container,
                    children: (0, a.jsxs)(l.Menu, {
                        navId: "sort-and-view",
                        "aria-label": E.default.Messages.GUILD_STORE_SORT_OPTION_SELECT_MENU_ARIA,
                        hideScroller: !0,
                        onClose: t,
                        onSelect: t,
                        children: [(0, a.jsx)(l.MenuGroup, {
                            label: E.default.Messages.GUILD_STORE_SORT_OPTION_SELECT_MENU_SORT_BY_LABEL,
                            children: u
                        }), (0, a.jsx)(l.MenuGroup, {
                            children: (0, a.jsx)(l.MenuItem, {
                                id: "reset-all",
                                className: f.clearText,
                                label: (0, a.jsx)(l.Text, {
                                    variant: "text-sm/medium",
                                    color: "none",
                                    children: E.default.Messages.FORUM_CHANNEL_RESET_ALL
                                }),
                                action: o
                            })
                        })]
                    })
                })
            }

            function I() {
                let e = (0, d.useGuildProductsSortOptionContext)();
                return (0, a.jsx)(l.Popout, {
                    renderPopout: t => {
                        let {
                            closePopout: n
                        } = t;
                        return (0, a.jsx)(_, {
                            closePopout: n,
                            sortOptionContext: e
                        })
                    },
                    position: "bottom",
                    align: "left",
                    children: (t, n) => {
                        let {
                            isShown: s
                        } = n;
                        return (0, a.jsxs)(l.Button, {
                            ...t,
                            size: l.Button.Sizes.MIN,
                            color: l.Button.Colors.CUSTOM,
                            className: f.sortDropdown,
                            innerClassName: f.sortDropdownInner,
                            "aria-label": E.default.Messages.GUILD_STORE_SORT_OPTION_TOGGLE_ARIA,
                            children: [(0, a.jsx)(u.default, {}), (0, a.jsx)(i.default, {
                                size: 8,
                                horizontal: !0
                            }), (0, a.jsx)(l.Text, {
                                variant: "text-sm/medium",
                                color: "header-primary",
                                children: (0, c.getGuildProductSortOptionLabel)(e.sortOption)
                            }), s ? (0, a.jsx)(o.default, {
                                width: 20
                            }) : (0, a.jsx)(r.default, {
                                width: 20
                            })]
                        })
                    }
                })
            }
        },
        56673: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, s.default)(i),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    viewBox: "0 0 18 18",
                    fill: "none",
                    children: (0, a.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M2.04764 2.51881C2.2836 1.06674 3.53768 0 5.0088 0H15.0082C16.2408 0 17.18 1.10416 16.9823 2.32079L14.961 14.7594C14.725 16.2115 13.471 17.2782 11.9998 17.2782H2.00047C0.767877 17.2782 -0.171336 16.1741 0.0263678 14.9574L2.04764 2.51881ZM5.91366 2.59178C5.91366 2.11465 6.30045 1.72787 6.77757 1.72787H11.961C12.4382 1.72787 12.8249 2.11465 12.8249 2.59178C12.8249 3.0689 12.4382 3.45569 11.961 3.45569H6.77757C6.30045 3.45569 5.91366 3.0689 5.91366 2.59178ZM9.29281 7.45934C9.0225 6.72884 7.98929 6.72884 7.71898 7.45934L7.4653 8.14489C7.26273 8.69232 6.83111 9.12395 6.28367 9.32652L5.59813 9.58019C4.86762 9.8505 4.86762 10.8837 5.59813 11.154L6.28367 11.4077C6.83111 11.6103 7.26273 12.0419 7.4653 12.5893L7.71898 13.2749C7.98929 14.0054 9.0225 14.0054 9.29281 13.2749L9.54648 12.5893C9.74905 12.0419 10.1807 11.6103 10.7281 11.4077L11.4137 11.154C12.1442 10.8837 12.1442 9.8505 11.4137 9.58019L10.7281 9.32652C10.1807 9.12395 9.74905 8.69232 9.54648 8.14489L9.29281 7.45934Z",
                        fill: l
                    })
                })
            }
        },
        657199: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                handleInaccessiblePage: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("393414"),
                i = n("476108"),
                r = n("923959"),
                o = n("18494"),
                u = n("49111");

            function d(e, t) {
                if ((0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("657233").then(n.bind(n, "657233"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    }), o.default.getChannelId(e) === t) {
                    var d;
                    (0, l.replaceWith)(u.Routes.CHANNEL(e, null === (d = r.default.getDefaultChannel(e)) || void 0 === d ? void 0 : d.id))
                } else(0, l.replaceWith)(i.default.defaultRoute)
            }
        },
        72860: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("913144"),
                s = n("316272"),
                l = n("305961"),
                i = n("697218"),
                r = n("773336"),
                o = n("197509"),
                u = n("49111");
            class d extends s.default {
                _initialize() {
                    a.default.subscribe("CONNECTION_OPEN", this.maybeFetchEligiblity)
                }
                _terminate() {
                    a.default.unsubscribe("CONNECTION_OPEN", this.maybeFetchEligiblity)
                }
                constructor(...e) {
                    super(...e), this.maybeFetchEligiblity = async () => {
                        if ((0, r.isDesktop)() || (0, r.isWeb)()) {
                            let e = Object.values(l.default.getGuilds()),
                                t = i.default.getCurrentUser(),
                                n = e.filter(e => e.isOwner(t) && !e.hasFeature(u.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE) && !e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED) && !e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_DISABLED) && (e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE) || e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)));
                            n.length > 0 && await (0, o.fetchCreatorMonetizationNagActivateEligibility)(n.map(e => e.id))
                        }
                    }
                }
            }
            var c = new d
        },
        106803: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCustomStatusMenuItem: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("943722"),
                o = n("997289"),
                u = n("845579"),
                d = n("381546"),
                c = n("782340"),
                E = n("352865");

            function f(e, t) {
                let s = (0, o.useAnalyticsContext)();

                function f(e) {
                    e.stopPropagation(), u.CustomStatusSetting.updateSetting(void 0)
                }

                function _() {
                    (0, i.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("711438").then(n.bind(n, "711438"));
                        return t => (0, a.jsx)(e, {
                            sourceAnalyticsContext: s,
                            ...t
                        })
                    })
                }
                if (null != e) {
                    let n = null != e.emoji ? t => {
                        let {
                            className: n
                        } = t;
                        return (0, a.jsx)(r.ActivityEmoji, {
                            className: n,
                            emoji: e.emoji,
                            animate: !0,
                            hideTooltip: !0
                        })
                    } : void 0;
                    return (0, a.jsx)(i.MenuItem, {
                        id: "edit-custom-status",
                        label: c.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                        icon: n,
                        focusedClassName: t,
                        showIconFirst: !0,
                        hint: e => (0, a.jsx)(i.Clickable, {
                            ...e,
                            onClick: f,
                            tabIndex: -1,
                            children: (0, a.jsx)(d.default, {
                                width: 18,
                                height: 18
                            })
                        }),
                        action: _
                    })
                }
                return (0, a.jsx)(i.MenuItem, {
                    id: "set-custom-status",
                    focusedClassName: t,
                    label: c.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS_CTA,
                    icon: e => (0, a.jsx)("div", {
                        className: l(E.customEmojiPlaceholder, e)
                    }),
                    action: _,
                    showIconFirst: !0
                })
            }
        },
        142813: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                searchQueryContainsBannedWord: function() {
                    return s
                }
            }), n("813006");
            var a = n("843455");
            let s = function() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                return e.split(" ").some(e => a.DiscoveryBannedSearchWords.includes(e.toLowerCase()))
            }
        },
        378662: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryInAppReportingExperiment: function() {
                    return i
                },
                useCanSeeDiscoveryContextMenu: function() {
                    return r
                }
            });
            var a = n("884691"),
                s = n("862205"),
                l = n("845579");
            let i = (0, s.createExperiment)({
                kind: "user",
                id: "2022-01_discovery_iar",
                label: "Ability to report servers in Server Discovery",
                defaultConfig: {
                    canSeeInAppReportingButtons: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show IAR buttons in Server Discovery",
                    config: {
                        canSeeInAppReportingButtons: !0
                    }
                }]
            });

            function r() {
                let {
                    canSeeInAppReportingButtons: e
                } = i.useExperiment({
                    location: "7a11e2_1"
                }, {
                    autoTrackExposure: !1
                }), t = l.DeveloperMode.useSetting();
                return a.useEffect(() => {
                    i.trackExposure({
                        location: "7a11e2_2"
                    })
                }, []), e || t
            }
        },
        574921: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryTagsExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2021-11_discovery_tags",
                label: "Discovery Tags",
                defaultConfig: {
                    shouldDisplayTags: !1,
                    shouldDisplayRecommendedSearchTags: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show keyword tags on home and search result pages",
                    config: {
                        shouldDisplayTags: !0,
                        shouldDisplayRecommendedSearchTags: !1
                    }
                }, {
                    id: 2,
                    label: "Show keyword tags on home and search result pages and under the search bar",
                    config: {
                        shouldDisplayTags: !0,
                        shouldDisplayRecommendedSearchTags: !0
                    }
                }]
            })
        },
        649725: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("316887"),
                l = n("627490"),
                i = n("447853"),
                r = n("517425"),
                o = n("709071"),
                u = n("228427"),
                d = n("855670"),
                c = n("11056"),
                E = n("449008"),
                f = n("447621"),
                _ = n("763065");
            let I = e => {
                    switch (e) {
                        case f.CategoryIcons.Activity:
                            return (0, a.jsx)(s.default, {});
                        case f.CategoryIcons.Discover:
                            return (0, a.jsx)(l.default, {});
                        case f.CategoryIcons.Education:
                            return (0, a.jsx)(i.default, {});
                        case f.CategoryIcons.Music:
                            return (0, a.jsx)(r.default, {});
                        case f.CategoryIcons.Science:
                            return (0, a.jsx)(o.default, {});
                        case f.CategoryIcons.Stage:
                            return (0, a.jsx)(u.default, {
                                height: 22,
                                width: 22
                            });
                        case f.CategoryIcons.Television:
                            return (0, a.jsx)(d.default, {});
                        default:
                            (0, E.assertNever)(e)
                    }
                },
                h = e => {
                    let {
                        categories: t,
                        currentCategoryId: n,
                        handleCategorySelect: s,
                        shouldDisplaySelectedCategory: l = !0
                    } = e;
                    return (0, a.jsx)(a.Fragment, {
                        children: t.map(e => (0, a.jsx)(c.default, {
                            avatar: I(e.icon),
                            name: e.name,
                            focusProps: {
                                offset: {
                                    right: 4,
                                    top: 1,
                                    bottom: 1
                                }
                            },
                            onClick: () => s(e.categoryId),
                            wrapContent: !0,
                            selected: l && e.categoryId === n,
                            className: _.categoryItem,
                            selectedClassName: _.selectedCategoryItem,
                            innerClassName: _.itemInner
                        }, e.categoryId))
                    })
                };
            h.Icons = f.CategoryIcons;
            var C = h
        },
        866487: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoverySidebarHeader: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("825321");

            function i(e) {
                let {
                    text: t
                } = e;
                return (0, a.jsx)(s.Heading, {
                    variant: "heading-xl/semibold",
                    className: l.discoverHeader,
                    children: t
                })
            }
        },
        276580: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("913144"),
                r = n("685665"),
                o = n("141254"),
                u = n("116616"),
                d = n("465126"),
                c = n("738169"),
                E = n("49111"),
                f = n("628159");
            let _ = [
                    [1696, 20],
                    [1432, 16],
                    [1168, 12],
                    [0, 8]
                ],
                I = [
                    [1696, 30],
                    [1432, 24],
                    [1168, 18],
                    [0, 12]
                ];
            var h = e => {
                let t, {
                    title: n,
                    subtitle: h,
                    guildsData: C,
                    analyticsContext: T,
                    theme: m,
                    onViewGuild: S,
                    fetchGuilds: N,
                    onGuildCardSeen: A,
                    currentCategoryId: p,
                    loadId: g,
                    onTagClick: R,
                    showMoreCards: O = !1
                } = e;
                s.useEffect(() => {
                    i.default.wait(() => N())
                }, [p]);
                let L = O ? I : _,
                    M = (0, c.default)(L),
                    {
                        analyticsLocations: v
                    } = (0, r.default)();
                if (null == C) return null;
                let {
                    guilds: D,
                    loading: x
                } = C, P = null == D || 0 === D.length;
                if (!x && P) return null;
                let y = async e => {
                    if ((0, o.isAtGuildCapAndNonPremium)())(0, u.default)({
                        analyticsSource: {
                            page: E.AnalyticsPages.GUILD_DISCOVERY
                        },
                        analyticsLocation: {
                            page: E.AnalyticsPages.GUILD_DISCOVERY,
                            section: E.AnalyticsSections.GUILD_CAP_UPSELL_MODAL
                        },
                        analyticsLocations: v
                    });
                    else {
                        let t = D.findIndex(t => t.id === e);
                        await S(e, t, T, g)
                    }
                };
                if (x || null == D) {
                    let e = [];
                    for (let t = 0; t < M; t++) e.push((0, a.jsx)(d.default.Placeholder, {}, t));
                    t = e
                } else t = D.slice(0, M).map(e => (0, a.jsx)(d.default, {
                    className: f.guildCard,
                    guild: e,
                    onView: y,
                    theme: m,
                    onGuildCardSeen: A,
                    onTagClick: R
                }, e.id));
                return (0, a.jsx)("section", {
                    className: f.guildListSection,
                    children: (0, a.jsxs)(l.HeadingLevel, {
                        component: (0, a.jsx)(l.Heading, {
                            className: f.title,
                            variant: "heading-lg/semibold",
                            children: n
                        }),
                        children: [null != h && (0, a.jsx)(l.Text, {
                            className: f.subtitle,
                            variant: "text-sm/normal",
                            color: "header-secondary",
                            children: h
                        }), (0, a.jsx)("div", {
                            className: f.guildList,
                            children: t
                        })]
                    })
                })
            }
        },
        586086: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MAX_GUILDS_PER_PAGE: function() {
                    return N
                },
                default: function() {
                    return R
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("522632"),
                o = n("446674"),
                u = n("77078"),
                d = n("340626"),
                c = n("393414"),
                E = n("926787"),
                f = n("246053"),
                _ = n("794818"),
                I = n("961098"),
                h = n("338638"),
                C = n("719369"),
                T = n("447621"),
                m = n("782340"),
                S = n("492898");
            let N = 12,
                A = () => {
                    let e = (0, c.getHistory)(),
                        t = e.location.search,
                        n = null != t && t.length > 0 && t.startsWith("?");
                    return n ? r.parse(t) : {}
                },
                p = e => {
                    let {
                        categoryId: t,
                        categoryName: n,
                        onClick: s
                    } = e, l = t === T.DISCOVERY_ALL_CATEGORIES_ID, i = l ? m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_HEADER : m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_HEADER.format({
                        categoryName: n
                    }), r = l ? m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_BODY : m.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_BODY.format({
                        onClick: s
                    });
                    return (0, a.jsxs)("div", {
                        className: S.emptyContainer,
                        children: [(0, a.jsx)("div", {
                            className: S.emptyImage
                        }), (0, a.jsx)(u.Heading, {
                            variant: "heading-xl/semibold",
                            className: S.emptyHeader,
                            children: i
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-md/normal",
                            color: "header-secondary",
                            children: r
                        })]
                    })
                },
                g = () => (0, a.jsxs)("div", {
                    className: S.emptyContainer,
                    children: [(0, a.jsx)("div", {
                        className: S.errorImage
                    }), (0, a.jsx)(u.Text, {
                        variant: "text-md/normal",
                        color: "header-secondary",
                        className: S.emptyHeader,
                        children: m.default.Messages.GUILD_DISCOVERY_SEARCH_ERROR
                    })]
                });
            var R = e => {
                let {
                    loadId: t,
                    searchResults: n,
                    mostRecentQuery: l,
                    defaultLanguage: r,
                    availableLanguages: c,
                    isFetchingSearch: R,
                    scroller: O,
                    loadingGuildId: L,
                    theme: M,
                    currentCategoryId: v,
                    currentCategoryName: D,
                    onViewGuild: x,
                    onGuildCardSeen: P,
                    placeholder: y,
                    onTagClick: b
                } = e, U = i.uniqueId("GuildDiscovery"), {
                    guilds: G,
                    loading: j,
                    total: F
                } = n, [k, B] = s.useState(!1), {
                    tag: w
                } = A(), [H, V] = s.useState(w), Y = (0, o.useStateFromStores)([E.default], () => E.default.hasSearchError()), W = (e, t, n) => {
                    d.doAlgoliaSearch(l, {
                        categoryId: n ? T.DISCOVERY_ALL_CATEGORIES_ID : v,
                        preferredLocale: r.code,
                        offset: e,
                        length: t,
                        filters: {
                            approximate_member_count: _.MINIMUM_MEMBER_COUNT
                        }
                    }), B(!1)
                }, K = () => {
                    null == O || O.scrollTo({
                        to: 0
                    })
                };
                s.useEffect(() => {
                    let {
                        offset: e,
                        tag: t
                    } = A(), n = null != e ? Math.floor(parseInt(e, 10) / N) + 1 : 1;
                    V(!!t), 1 === n && B(!0)
                }, [l]);
                let z = v === T.DISCOVERY_ALL_CATEGORIES_ID ? m.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_HEADER.format({
                    count: null != F ? F.toLocaleString() : "0",
                    query: l
                }) : m.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_CATEGORY_HEADER.format({
                    count: null != F ? F.toLocaleString() : "0",
                    query: l,
                    category: D
                });
                return (0, a.jsxs)("div", {
                    className: S.container,
                    children: [(0, a.jsxs)("div", {
                        className: S.searchHeader,
                        children: [(0, a.jsx)(u.Clickable, {
                            onClick: () => {
                                d.clearSearch(), _.trackSearchClosed(t)
                            },
                            className: S.arrow,
                            "aria-label": m.default.Messages.BACK,
                            children: (0, a.jsx)(f.default, {
                                direction: f.default.Directions.LEFT
                            })
                        }), (0, a.jsx)(u.Heading, {
                            variant: "heading-xl/semibold",
                            className: S.header,
                            children: z
                        })]
                    }), (0, a.jsx)(h.default, {
                        loadId: t,
                        searchResults: n,
                        mostRecentQuery: l,
                        isFetchingSearch: R,
                        defaultLanguage: r,
                        placeholder: y,
                        availableLanguages: c,
                        isSearchPage: !0,
                        currentCategoryId: v,
                        isTagSearch: H
                    }), Y ? (0, a.jsx)(g, {}) : F <= 0 ? (0, a.jsx)(p, {
                        categoryId: v,
                        categoryName: D,
                        onClick: () => {
                            d.selectCategory(T.DISCOVERY_ALL_CATEGORIES_ID), W(0, N, !0)
                        }
                    }) : (0, a.jsx)("div", {
                        className: S.results,
                        children: (0, a.jsx)(I.default, {
                            pageSize: N,
                            totalCount: F,
                            resetCurrentPage: k,
                            onPageChange: e => {
                                let t = (e - 1) * N;
                                W(t, N), K()
                            },
                            children: e => {
                                let {
                                    controller: t
                                } = e;
                                return (0, a.jsxs)("section", {
                                    "aria-labelledby": U,
                                    children: [(0, a.jsx)(C.default, {
                                        guilds: G,
                                        loading: j,
                                        loadingPlaceholderCount: N,
                                        onViewGuild: x,
                                        loadingGuildId: L,
                                        theme: M,
                                        analyticsContext: _.AnalyticsContexts.SEARCH,
                                        onGuildCardSeen: P,
                                        onTagClick: b
                                    }), t]
                                })
                            }
                        })
                    })]
                })
            }
        },
        353681: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return z
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("522632"),
                d = n("458960"),
                c = n("394846"),
                E = n("446674"),
                f = n("77078"),
                _ = n("913144"),
                I = n("340626"),
                h = n("444949"),
                C = n("139245"),
                T = n("69927"),
                m = n("444497"),
                S = n("349682"),
                N = n("393414"),
                A = n("970366"),
                p = n("915639"),
                g = n("161778"),
                R = n("350522"),
                O = n("926787"),
                L = n("305961"),
                M = n("251013"),
                v = n("664336"),
                D = n("794818"),
                x = n("574921"),
                P = n("197231"),
                y = n("283167"),
                b = n("868246"),
                U = n("276580"),
                G = n("586086"),
                j = n("338638"),
                F = n("311092"),
                k = n("447621"),
                B = n("49111"),
                w = n("782340"),
                H = n("309633"),
                V = n("479999"),
                Y = n("183127");
            class W extends s.PureComponent {
                componentDidMount() {
                    var e, t, n;
                    let {
                        isFetching: a,
                        guilds: {
                            gamesYouPlay: s,
                            featured: l
                        },
                        searchRoute: i,
                        currentHomepageCategoryId: r,
                        mostRecentQuery: o
                    } = this.props;
                    if ((0, h.fetchActivityStatistics)(), (0, y.maybeFetchGuildDiscoveryCategories)(), null == O.default.getSearchIndex() && (0, I.createAlgoliaIndex)(), _.default.wait(() => {
                            (0, C.markView)(B.ViewHistoryKeys.SERVER_DISCOVERY_BADGE)
                        }), !a && 0 === o.length && D.trackDiscoveryViewed({
                            loadId: this.loadId,
                            gamesYouPlayGuilds: s.guilds,
                            allGuilds: l.guilds,
                            categoryId: r
                        }), null != i) {
                        let {
                            query: e,
                            offset: t,
                            limit: n,
                            preferredLocale: a,
                            categoryId: s
                        } = u.parse(i);
                        (0, I.doAlgoliaSearch)(e, {
                            categoryId: parseInt(s, 10),
                            preferredLocale: a,
                            offset: parseInt(t, 10),
                            filters: {
                                approximate_member_count: D.MINIMUM_MEMBER_COUNT
                            },
                            length: parseInt(n, 10)
                        })
                    } else null != r && r !== k.DISCOVERY_ALL_CATEGORIES_ID && _.default.wait(() => (0, I.selectCategory)(r));
                    let d = (0, N.getHistory)().location,
                        c = null !== (t = null === (e = d.state) || void 0 === e ? void 0 : e.scrollTop) && void 0 !== t ? t : 0;
                    c > 0 && (null === (n = this._scroller.current) || void 0 === n || n.scrollTo({
                        to: c
                    })), (0, A.trackAppUIViewed)("guild_discovery")
                }
                componentDidUpdate(e) {
                    let {
                        guilds: {
                            gamesYouPlay: t,
                            featured: n
                        },
                        isFetching: a,
                        mostRecentQuery: s,
                        currentHomepageCategoryId: l,
                        currentCategoryId: i
                    } = this.props;
                    if (e.isFetching && !a && D.trackDiscoveryViewed({
                            loadId: this.loadId,
                            gamesYouPlayGuilds: t.guilds,
                            allGuilds: n.guilds,
                            categoryId: l
                        }), e.currentCategoryId !== i) {
                        var r;
                        null === (r = this._scroller.current) || void 0 === r || r.scrollTo({
                            to: 0
                        })
                    }
                    e.currentCategoryId !== i && D.trackDiscoveryExited(this.loadId, Array.from(this._guildIdsSeen)), e.mostRecentQuery.length > 0 && s.length < 1 && l !== i && (0, I.selectCategory)(l)
                }
                componentWillUnmount() {
                    let {
                        currentCategoryId: e,
                        recommendationsLoadId: t,
                        recommendationsGuilds: n
                    } = this.props;
                    e === k.DISCOVERY_ALL_CATEGORIES_ID ? null != n && null != t && D.trackDiscoveryExited(t, this.getOrderedGuildIdsSeen(n.map(e => e.id)), "Game Recommendations") : D.trackDiscoveryExited(this.loadId, Array.from(this._guildIdsSeen))
                }
                getOrderedGuildIdsSeen(e) {
                    return e.filter(e => this._guildIdsSeen.has(e))
                }
                renderGamesYouPlay() {
                    let {
                        guilds: e,
                        mightHaveGamesYouPlay: t,
                        theme: n,
                        userGuilds: s
                    } = this.props, l = Object.keys(s), i = e[B.GuildDiscoverySections.GAMES_YOU_PLAY];
                    i.guilds = i.guilds.filter(e => !l.includes(e.id));
                    let {
                        loadingGuildId: r
                    } = this.state;
                    return t ? (0, a.jsx)(U.default, {
                        loadId: this.loadId,
                        title: w.default.Messages.GUILD_DISCOVERY_HEADER_GAMES_YOU_PLAY,
                        guildsData: i,
                        loadingGuildId: r,
                        analyticsContext: D.AnalyticsContexts.RECOMMENDED,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: I.fetchGamesYouPlayGuilds,
                        theme: n
                    }) : null
                }
                renderSearchBar() {
                    var e, t;
                    let {
                        mostRecentQuery: n,
                        guilds: {
                            search: s
                        },
                        defaultLanguage: l,
                        isFetchingSearch: i,
                        currentCategoryId: r,
                        categories: o,
                        currentCategoryName: u
                    } = this.props;
                    x.DiscoveryTagsExperiment.trackExposure({
                        location: "54961b_1"
                    });
                    let {
                        shouldDisplayRecommendedSearchTags: d
                    } = x.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "54961b_2"
                    }, {
                        autoTrackExposure: !1
                    }), c = d ? r === k.DISCOVERY_ALL_CATEGORIES_ID ? w.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER_TAGS : w.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER_TAGS.format({
                        categoryName: u
                    }) : r === k.DISCOVERY_ALL_CATEGORIES_ID ? w.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER : w.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format({
                        categoryName: u
                    }), E = null !== (t = null === (e = s[n]) || void 0 === e ? void 0 : e[r]) && void 0 !== t ? t : O.EMPTY_DISCOVERABLE_GUILDS_SECTION;
                    return (0, a.jsx)(j.default, {
                        loadId: this.loadId,
                        searchResults: E,
                        mostRecentQuery: n,
                        isFetchingSearch: i,
                        defaultLanguage: l,
                        placeholder: c,
                        currentCategoryId: r,
                        categories: o
                    })
                }
                renderSearchResults() {
                    var e, t;
                    let {
                        mostRecentQuery: n,
                        guilds: {
                            search: s
                        },
                        availableLanguages: l,
                        defaultLanguage: i,
                        isFetchingSearch: r,
                        theme: o,
                        currentCategoryId: u,
                        currentCategoryName: d
                    } = this.props, {
                        loadingGuildId: c
                    } = this.state, E = u === k.DISCOVERY_ALL_CATEGORIES_ID ? w.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER : w.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format({
                        categoryName: d
                    }), f = null !== (t = null === (e = s[n]) || void 0 === e ? void 0 : e[u]) && void 0 !== t ? t : O.EMPTY_DISCOVERABLE_GUILDS_SECTION;
                    return (0, a.jsx)(G.default, {
                        loadId: this.loadId,
                        availableLanguages: l,
                        defaultLanguage: i,
                        placeholder: E,
                        isFetchingSearch: r,
                        searchResults: f,
                        mostRecentQuery: n,
                        loadingGuildId: c,
                        currentCategoryId: u,
                        currentCategoryName: d,
                        scroller: this._scroller.current,
                        theme: o,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, D.AnalyticsContexts.SEARCH)
                    })
                }
                renderRecommendedGuildsSection() {
                    let {
                        guilds: e,
                        theme: t
                    } = this.props, {
                        loadingGuildId: n
                    } = this.state;
                    return (0, a.jsx)(U.default, {
                        loadId: this.loadId,
                        title: w.default.Messages.GUILD_DISCOVERY_FEATURED_HEADER,
                        guildsData: e.featured,
                        analyticsContext: D.AnalyticsContexts.POPULAR,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: () => (0, I.fetchFeaturedOrPopularGuilds)(0, 30),
                        loadingGuildId: n,
                        theme: t,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, D.AnalyticsContexts.POPULAR)
                    })
                }
                renderPopularGuildsSection() {
                    let {
                        guilds: e,
                        theme: t,
                        currentCategoryId: n
                    } = this.props, {
                        loadingGuildId: s
                    } = this.state;
                    return (0, a.jsx)(U.default, {
                        loadId: this.loadId,
                        title: w.default.Messages.GUILD_DISCOVERY_POPULAR_HEADER,
                        guildsData: e[n],
                        loadingGuildId: s,
                        analyticsContext: D.AnalyticsContexts.POPULAR,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: () => (0, I.fetchPopularGuildsForCategory)(n),
                        currentCategoryId: n,
                        theme: t,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, D.AnalyticsContexts.POPULAR)
                    })
                }
                render() {
                    var e, t;
                    let {
                        currentCategoryName: n,
                        mostRecentQuery: l,
                        currentCategoryId: r,
                        guilds: u
                    } = this.props, d = l.length > 0;
                    x.DiscoveryTagsExperiment.trackExposure({
                        location: "54961b_3"
                    });
                    let {
                        shouldDisplayRecommendedSearchTags: E
                    } = x.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "54961b_4"
                    }, {
                        autoTrackExposure: !1
                    }), _ = r === k.DISCOVERY_ALL_CATEGORIES_ID ? null === (e = u[B.GuildDiscoverySections.FEATURED]) || void 0 === e ? void 0 : e.guilds : null === (t = u[r]) || void 0 === t ? void 0 : t.guilds;
                    if (r === k.DISCORD_HUB_ID) return (0, a.jsx)(S.default, {
                        loadId: this.loadId
                    });
                    let I = r === k.DISCOVERY_ALL_CATEGORIES_ID ? w.default.Messages.GUILD_DISCOVERY_HOME_TITLE : w.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format({
                        categoryName: n
                    });
                    return (0, a.jsxs)("div", {
                        className: H.pageWrapper,
                        children: [(0, a.jsx)(T.AppPageTitle, {
                            subsection: d ? l : void 0,
                            location: I
                        }), (0, a.jsx)("div", {
                            className: i(H.dragRegion, H.pageHeaderDrag, {
                                [H.searchPageDrag]: d
                            })
                        }), c.isMobile && (0, a.jsx)(v.default, {
                            children: (0, a.jsx)(s.Fragment, {})
                        }), (0, a.jsx)(f.AdvancedScrollerAuto, {
                            className: H.scroller,
                            ref: this._scroller,
                            onScroll: this.handleScroll,
                            children: (0, a.jsx)("div", {
                                className: i(H.viewWrapper, {
                                    [H.searchPage]: d
                                }),
                                children: d ? this.renderSearchResults() : (0, a.jsxs)(f.HeadingLevel, {
                                    forceLevel: 1,
                                    component: (0, a.jsxs)("div", {
                                        className: H.searchHeader,
                                        children: [(0, a.jsx)("img", {
                                            alt: "",
                                            className: H.headerImage,
                                            src: Y
                                        }), (0, a.jsx)("div", {
                                            className: H.headerContentWrapper,
                                            children: (0, a.jsxs)("div", {
                                                className: H.headerContent,
                                                children: [(0, a.jsx)(f.Heading, {
                                                    variant: "heading-xl/semibold",
                                                    className: H.searchTitle,
                                                    children: r === k.DISCOVERY_ALL_CATEGORIES_ID ? w.default.Messages.GUILD_DISCOVERY_HOME_TITLE : w.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format({
                                                        categoryName: n
                                                    })
                                                }), (0, a.jsx)(f.Text, {
                                                    variant: "text-md/normal",
                                                    className: H.searchSubtitle,
                                                    children: r === k.DISCOVERY_ALL_CATEGORIES_ID && w.default.Messages.GUILD_DISCOVERY_HOME_SUBTITLE
                                                }), this.renderSearchBar(), E && (0, a.jsx)(F.DiscoveryTags, {
                                                    hideOverflow: !0,
                                                    section: D.AnalyticsContexts.HEADER,
                                                    className: H.headerTagContainer,
                                                    discoveryTagStyle: F.DiscoveryTagStyle.LIGHT,
                                                    onTagClick: e => this.handleTagSearch(e, void 0, D.AnalyticsContexts.HEADER),
                                                    tags: o.chain(_).flatMap(e => e.keywords).compact().uniq().sampleSize(10).value()
                                                })]
                                            })
                                        })]
                                    }),
                                    children: [(0, a.jsx)("div", {
                                        className: H.featuredBody,
                                        children: r === k.DISCOVERY_ALL_CATEGORIES_ID ? this.renderRecommendedGuildsSection() : this.renderPopularGuildsSection()
                                    }), (0, a.jsxs)("div", {
                                        className: H.footer,
                                        children: [(0, a.jsx)("img", {
                                            alt: "",
                                            src: V,
                                            className: H.footerImage
                                        }), (0, a.jsx)(f.Heading, {
                                            variant: "heading-md/semibold",
                                            children: w.default.Messages.GUILD_DISCOVERY_CATEGORY_FOOTER_TITLE
                                        }), (0, a.jsx)(f.Button, {
                                            look: f.Button.Looks.LINK,
                                            color: f.Button.Colors.LINK,
                                            size: f.Button.Sizes.MIN,
                                            onClick: this.scrollToTop,
                                            children: w.default.Messages.GUILD_DISCOVERY_FOOTER_BODY
                                        })]
                                    })]
                                })
                            })
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this._scroller = s.createRef(), this._guildIdsSeen = new Set, this.loadId = (0, P.makeAnalyticsID)(), this.state = {
                        animatedValue: new d.default.Value(0),
                        loadingGuildId: null
                    }, this.scrollToTop = () => {
                        null != this._scroller.current && this._scroller.current.scrollTo({
                            to: 0
                        })
                    }, this.handleScroll = () => {
                        var e, t;
                        let {
                            animatedValue: n
                        } = this.state, a = null !== (t = null === (e = this._scroller.current) || void 0 === e ? void 0 : e.getScrollerState().scrollTop) && void 0 !== t ? t : 0;
                        n.setValue(Math.min(1, a / 200))
                    }, this.handleViewGuild = async (e, t, n, a) => {
                        var s, l;
                        let {
                            currentCategoryId: i
                        } = this.props, {
                            loadingGuildId: r
                        } = this.state;
                        if (e === r) return;
                        let o = null !== (l = null === (s = this._scroller.current) || void 0 === s ? void 0 : s.getScrollerState().scrollTop) && void 0 !== l ? l : 0,
                            {
                                location: u
                            } = (0, N.getHistory)();
                        (0, N.replaceWith)({
                            ...u,
                            state: o
                        }), this.setState({
                            loadingGuildId: e
                        });
                        let d = i !== k.DISCOVERY_ALL_CATEGORIES_ID ? i : null;
                        try {
                            await D.viewGuild({
                                loadId: null != a ? a : this.loadId,
                                guildId: e,
                                index: t,
                                analyticsContext: n,
                                categoryId: d
                            })
                        } catch (e) {
                            this.setState({
                                loadingGuildId: null
                            })
                        }
                    }, this.handleGuildCardSeen = e => {
                        this._guildIdsSeen.add(e)
                    }, this.handleTagSearch = (e, t, n) => {
                        let {
                            currentCategoryId: a,
                            defaultLanguage: s
                        } = this.props;
                        if (null == a) return;
                        let l = {
                            approximate_member_count: D.MINIMUM_MEMBER_COUNT
                        };
                        (0, I.getSearchResultsCount)(e, l), (0, I.doAlgoliaSearch)(e, {
                            filters: l,
                            categoryId: a,
                            preferredLocale: s.code,
                            offset: 0,
                            length: G.MAX_GUILDS_PER_PAGE,
                            tag: !0
                        }), D.trackTagSearchStarted(this.loadId, a, n, t), this.scrollToTop()
                    }
                }
            }
            let K = E.default.connectStores([g.default, p.default, M.default, R.default, O.default, b.default, L.default], () => {
                var e;
                let t = k.LANGUAGE_OPTIONS,
                    n = p.default.locale,
                    a = null !== (e = o.find(t, {
                        code: n
                    })) && void 0 !== e ? e : t[0],
                    s = M.default.applicationStatistics,
                    l = Object.keys(s),
                    i = R.default.hasConsented(B.Consents.PERSONALIZATION) && l.length > 0,
                    r = O.default.getCurrentCategoryId(),
                    u = O.default.getCurrentHomepageCategoryId();
                return {
                    isFetching: O.default.isFetching(),
                    isFetchingSearch: O.default.isFetchingSearch(),
                    guilds: O.default.getDiscoverableGuilds(),
                    mostRecentQuery: O.default.getMostRecentQuery(),
                    currentCategoryId: r,
                    currentHomepageCategoryId: u,
                    currentCategoryName: b.default.getCategoryName(r),
                    categories: b.default.getDiscoveryCategories(),
                    userGuilds: L.default.getGuilds(),
                    theme: g.default.theme,
                    mightHaveGamesYouPlay: i,
                    availableLanguages: t,
                    defaultLanguage: a
                }
            })(W);

            function z(e) {
                let {
                    fetching: t,
                    loadId: n,
                    recommendedGuilds: s
                } = (0, E.useStateFromStoresObject)([m.default], () => ({
                    recommendedGuilds: m.default.getRecommendedGuilds(),
                    loadId: m.default.getLoadId(),
                    fetching: m.default.isFetching()
                }));
                return (0, a.jsx)(K, {
                    ...e,
                    fetchingRecommendations: t,
                    usingGameRecommendations: !1,
                    recommendationsGuilds: s,
                    recommendationsLoadId: n
                })
            }
        },
        256430: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("340626"),
                r = n("40546"),
                o = n("397039"),
                u = n("926787"),
                d = n("868246"),
                c = n("649725"),
                E = n("866487"),
                f = n("447621"),
                _ = n("782340");
            let I = e => {
                switch (e) {
                    case 1:
                        return f.CategoryIcons.Activity;
                    case 2:
                        return f.CategoryIcons.Music;
                    case 3:
                        return f.CategoryIcons.Television;
                    case 5:
                        return f.CategoryIcons.Science;
                    case 6:
                        return f.CategoryIcons.Education;
                    default:
                        return f.CategoryIcons.Discover
                }
            };
            var h = () => {
                let {
                    currentCategoryId: e,
                    isViewingSearchResults: t
                } = (0, s.useStateFromStoresObject)([u.default], () => ({
                    currentCategoryId: u.default.getCurrentCategoryId(),
                    isViewingSearchResults: u.default.getMostRecentQuery().length > 0
                })), n = (0, s.useStateFromStores)([d.default], () => d.default.getDiscoveryCategories(), [], d.areDiscoveryCategoriesEqual), f = null == n ? void 0 : n.map(e => ({
                    ...e,
                    icon: I(e.categoryId)
                })), h = e => {
                    (0, i.selectCategory)(e, !0), o.default.closeSidebar(), t && (0, i.clearSearch)()
                };
                return (0, a.jsxs)(l.Scroller, {
                    children: [(0, a.jsx)(E.DiscoverySidebarHeader, {
                        text: _.default.Messages.DISCOVER
                    }), (0, a.jsx)(c.default, {
                        categories: f,
                        handleCategorySelect: h,
                        currentCategoryId: e,
                        shouldDisplaySelectedCategory: !t
                    }), (0, a.jsx)(r.default, {
                        handleCategorySelect: h,
                        currentCategoryId: e,
                        shouldDisplaySelectedCategory: !t
                    })]
                })
            }
        },
        392533: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                },
                GuildDiscoveryMenuPopout: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("272030"),
                r = n("861370"),
                o = n("377114"),
                u = n("305961"),
                d = n("957255"),
                c = n("907566"),
                E = n("378662"),
                f = n("49111"),
                _ = n("782340");

            function I(e) {
                let {
                    guild: t,
                    shiftId: n,
                    onSelect: I,
                    closePopout: h,
                    "aria-label": C
                } = e, T = (0, r.default)({
                    id: t.id,
                    label: _.default.Messages.COPY_ID_GUILD,
                    shiftId: n,
                    onSuccess: h
                }), m = (0, s.useStateFromStores)([u.default], () => u.default.getGuild(t.id), [t.id]), S = (0, s.useStateFromStores)([d.default], () => d.default.can(f.Permissions.ADMINISTRATOR, m)), {
                    canSeeInAppReportingButtons: N
                } = E.DiscoveryInAppReportingExperiment.useExperiment({
                    location: "0e35b9_1"
                }, {
                    autoTrackExposure: !1
                }), A = () => {
                    (0, i.closeContextMenu)(), null == h || h()
                };
                return (0, a.jsxs)(l.Menu, {
                    onSelect: I,
                    navId: "guild-discovery-context-menu",
                    "aria-label": null != C ? C : _.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onClose: i.closeContextMenu,
                    children: [(0, a.jsx)(l.MenuGroup, {
                        children: !S && N ? (0, a.jsx)(l.MenuItem, {
                            id: "report-guild-discovery-listing",
                            label: _.default.Messages.REPORT_SERVER_NO_NAME,
                            action: () => {
                                (0, o.showReportModalForDiscoverableGuild)(t), A()
                            },
                            icon: c.default,
                            color: "danger"
                        }) : null
                    }), (0, a.jsx)(l.MenuGroup, {
                        children: T
                    })]
                })
            }
            let h = e => {
                let {
                    guild: t,
                    children: n,
                    onRequestOpen: s,
                    onRequestClose: i
                } = e;
                return (0, a.jsx)(l.Popout, {
                    onRequestOpen: s,
                    onRequestClose: i,
                    animation: l.Popout.Animation.NONE,
                    position: "bottom",
                    spacing: 4,
                    align: "right",
                    renderPopout: e => {
                        let {
                            closePopout: n
                        } = e;
                        return (0, a.jsx)(I, {
                            guild: t,
                            closePopout: n
                        })
                    },
                    children: n
                })
            }
        },
        593094: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("592407"),
                l = n("5667"),
                i = n("49111"),
                r = n("782340"),
                o = n("465194"),
                u = n("892839");

            function d(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)(l.default, {
                    header: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_TITLE,
                    content: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_DESCRIPTION,
                    asset: (0, a.jsx)("div", {
                        className: o.image,
                        children: (0, a.jsx)("img", {
                            alt: "",
                            src: u
                        })
                    }),
                    buttonCTA: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_ACCEPT,
                    onClick: e => {
                        var n;
                        n = t, s.default.open(n.id, i.GuildSettingsSections.DISCOVERY_LANDING_PAGE)
                    },
                    secondaryButtonCTA: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_DISMISS,
                    onSecondaryClick: () => {},
                    markAsDismissed: n
                })
            }
        },
        961098: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("522632"),
                i = n("77078"),
                r = n("393414");
            class o extends s.PureComponent {
                componentDidUpdate(e) {
                    let {
                        resetCurrentPage: t
                    } = this.props;
                    !e.resetCurrentPage && t && this.setState({
                        currentPage: 1
                    })
                }
                render() {
                    let {
                        totalCount: e,
                        pageSize: t,
                        maxVisiblePages: n,
                        children: s
                    } = this.props, {
                        currentPage: l
                    } = this.state, r = (0, a.jsx)(i.Paginator, {
                        totalCount: e,
                        pageSize: t,
                        currentPage: l,
                        maxVisiblePages: n,
                        onPageChange: this.handlePageChange
                    });
                    return s({
                        controller: r
                    })
                }
                constructor(e) {
                    super(e), this.handlePageChange = e => {
                        let {
                            onPageChange: t
                        } = this.props;
                        this.setState({
                            currentPage: e
                        }), null != t && t(e)
                    };
                    let t = (0, r.getHistory)(),
                        n = t.location.search,
                        a = null != n && n.length > 0 && n.startsWith("?"),
                        {
                            offset: s
                        } = a ? l.parse(n) : {},
                        i = null != s ? Math.floor(parseInt(s, 10) / e.pageSize) + 1 : 1;
                    this.state = {
                        currentPage: i
                    }
                }
            }
            var u = o
        },
        338638: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("446674"),
                d = n("77078"),
                c = n("340626"),
                E = n("926787"),
                f = n("646240"),
                _ = n("599110"),
                I = n("659500"),
                h = n("794818"),
                C = n("142813"),
                T = n("197231"),
                m = n("868246"),
                S = n("447621"),
                N = n("49111"),
                A = n("782340"),
                p = n("708417");
            let g = o.throttle(h.trackSearchResultsViewed, 1e3, {
                    leading: !1,
                    trailing: !0
                }),
                R = e => {
                    let {
                        isSelected: t,
                        onCategoryChange: n,
                        categoryId: s,
                        name: l,
                        count: r
                    } = e;
                    return (0, a.jsx)(d.Clickable, {
                        onClick: () => n(s),
                        className: i(p.categoryPill, {
                            [p.selected]: t
                        }),
                        children: (0, a.jsx)(d.Text, {
                            className: p.categoryLabel,
                            variant: "text-sm/normal",
                            children: null != r ? "".concat(l, " (").concat(r, ")") : l
                        })
                    })
                };
            class O extends s.PureComponent {
                componentDidMount() {
                    let {
                        loadId: e,
                        searchResults: t,
                        currentCategoryId: n
                    } = this.props, {
                        searchId: a,
                        query: s,
                        isHandlingTagSearch: l
                    } = this.state, i = this.context;
                    if (null == E.default.getSearchIndex() && c.createAlgoliaIndex(), I.ComponentDispatch.subscribe(N.ComponentActions.GLOBAL_CLIPBOARD_PASTE, this.focusInput), I.ComponentDispatch.subscribe(N.ComponentActions.TEXTAREA_FOCUS, this.focusInput), s.length > 0) {
                        let r = n !== S.DISCOVERY_ALL_CATEGORIES_ID ? n : null;
                        g({
                            loadId: e,
                            searchId: a,
                            query: s,
                            guildResults: t.guilds,
                            analyticsContext: i,
                            categoryId: r,
                            isTagSearch: l
                        })
                    }
                }
                componentDidUpdate(e, t) {
                    let {
                        loadId: n,
                        isFetchingSearch: a,
                        searchResults: s,
                        currentCategoryId: l,
                        mostRecentQuery: i
                    } = this.props, {
                        isSearching: r,
                        searchId: o,
                        query: u,
                        isHandlingTagSearch: d
                    } = this.state, c = this.context, E = e.isFetchingSearch && !a, f = l !== S.DISCOVERY_ALL_CATEGORIES_ID ? l : null;
                    (r || d) && E && (g({
                        loadId: n,
                        searchId: o,
                        query: u,
                        guildResults: s.guilds,
                        analyticsContext: c,
                        categoryId: f,
                        isTagSearch: d
                    }), this.setState({
                        isHandlingTagSearch: !1
                    })), !t.isSearching && r && h.trackSearchStarted(n, f, c), e.mostRecentQuery !== i && this.setState({
                        query: i,
                        searchId: (0, T.makeAnalyticsID)(),
                        isHandlingTagSearch: !0
                    })
                }
                componentWillUnmount() {
                    I.ComponentDispatch.unsubscribe(N.ComponentActions.GLOBAL_CLIPBOARD_PASTE, this.focusInput), I.ComponentDispatch.unsubscribe(N.ComponentActions.TEXTAREA_FOCUS, this.focusInput)
                }
                renderSearchOptions() {
                    var e;
                    let {
                        availableLanguages: t
                    } = this.props, {
                        selectedLanguage: n
                    } = this.state;
                    if (null == t) return null;
                    let s = t.map(e => {
                        let {
                            name: t
                        } = e;
                        return {
                            label: t,
                            value: t
                        }
                    });
                    return (0, a.jsx)(d.SingleSelect, {
                        className: p.languageSelector,
                        options: s,
                        value: null !== (e = null == n ? void 0 : n.name) && void 0 !== e ? e : "",
                        onChange: this.handleLanguageChange,
                        maxVisibleItems: 6
                    })
                }
                renderCategories() {
                    let {
                        currentCategoryId: e,
                        countsByCategory: t
                    } = this.props;
                    return (0, a.jsx)("div", {
                        className: p.categories,
                        children: null == t ? void 0 : t.map(t => {
                            let [n, s] = t;
                            return (0, a.jsx)(R, {
                                categoryId: n,
                                name: n === S.DISCOVERY_ALL_CATEGORIES_ID ? A.default.Messages.GUILD_DISCOVERY_ALL_CATEGORY_FILTER : m.default.getCategoryName(n),
                                onCategoryChange: this.handleCategoryChange,
                                isSelected: e === n,
                                count: s
                            }, n)
                        })
                    })
                }
                render() {
                    let {
                        query: e,
                        inputFocused: t
                    } = this.state, {
                        placeholder: n,
                        isSearchPage: s
                    } = this.props;
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)("div", {
                            className: i(p.container, {
                                [p.searchPage]: s
                            }),
                            children: [(0, a.jsx)("div", {
                                className: p.search,
                                children: (0, a.jsx)(f.default, {
                                    ref: this._searchRef,
                                    searchTerm: e,
                                    className: s ? void 0 : p.searchBox,
                                    inputClassName: s ? void 0 : p.searchBoxInput,
                                    closeIconClassName: s ? void 0 : p.closeIcon,
                                    searchIconClassName: s ? void 0 : p.searchIcon,
                                    label: A.default.Messages.GUILD_DISCOVERY_SEARCH_LABEL,
                                    placeholder: n,
                                    onChange: this.handleQueryChanged,
                                    onClear: this.handleQueryCleared,
                                    onFocus: this.handleFocus,
                                    onBlur: this.handleSearchBlurred,
                                    onKeyPress: this.handleSearchKeyPress,
                                    autoFocus: !s,
                                    cta: t && null != e && e.length > 1 ? A.default.Messages.GUILD_DISCOVERY_SEARCH_ENTER_CTA : null
                                })
                            }), s ? this.renderSearchOptions() : null]
                        }), s ? this.renderCategories() : null]
                    })
                }
                constructor(e) {
                    super(e), this._searchRef = s.createRef(), this.canSearch = e => e.trim().length >= 2 && !(0, C.searchQueryContainsBannedWord)(e), this.doSearch = (e, t, n, a) => {
                        var s;
                        let {
                            defaultLanguage: l,
                            currentCategoryId: i
                        } = this.props, {
                            query: r,
                            selectedLanguage: o
                        } = this.state, u = {
                            approximate_member_count: h.MINIMUM_MEMBER_COUNT
                        };
                        a && c.getSearchResultsCount(r, u), this.setState({
                            searchId: (0, T.makeAnalyticsID)(),
                            queryHasChanged: !1,
                            isSearching: !0
                        }), c.doAlgoliaSearch(r, {
                            categoryId: null == n ? i : n,
                            preferredLocale: null !== (s = null == o ? void 0 : o.code) && void 0 !== s ? s : l.code,
                            offset: e,
                            length: t,
                            filters: u
                        })
                    }, this.handleSearchBlurred = e => {
                        let {
                            onSearchBlur: t
                        } = this.props;
                        this.setState({
                            inputFocused: !1
                        }), null == t || t()
                    }, this.handleSearchKeyPress = e => {
                        let {
                            query: t,
                            queryHasChanged: n
                        } = this.state, {
                            loadId: a,
                            currentCategoryId: s
                        } = this.props, l = s !== S.DISCOVERY_ALL_CATEGORIES_ID ? s : null;
                        this.canSearch(t) && n && e.charCode === N.KeyboardKeys.ENTER ? (h.trackSearchStarted(a, l), this.doSearch(0, 12, void 0, !0)) : 0 === t.length && e.charCode === N.KeyboardKeys.ENTER && this.setState({
                            isSearching: !1
                        })
                    }, this.handleQueryChanged = e => {
                        this.setState({
                            query: e,
                            queryHasChanged: !0
                        })
                    }, this.handleQueryCleared = () => {
                        this.setState({
                            query: "",
                            queryHasChanged: !0,
                            isSearching: !1
                        })
                    }, this.handleLanguageChange = e => {
                        let {
                            mostRecentQuery: t,
                            availableLanguages: n
                        } = this.props, a = null == n ? void 0 : n.find(t => t.name === e);
                        this.setState({
                            selectedLanguage: a
                        }, () => {
                            this.canSearch(t) && this.doSearch(0, 12)
                        })
                    }, this.handleCategoryChange = e => {
                        let {
                            mostRecentQuery: t
                        } = this.props;
                        c.selectCategory(e), this.canSearch(t) && this.doSearch(0, 12, e)
                    }, this.handleFocus = () => {
                        let {
                            onSearchFocus: e
                        } = this.props;
                        this.setState({
                            inputFocused: !0
                        }), null == e || e()
                    }, this.focusInput = () => {
                        var e;
                        null === (e = this._searchRef.current) || void 0 === e || e.focus()
                    }, this.state = {
                        searchId: (0, T.makeAnalyticsID)(),
                        query: e.isSearchPage ? e.mostRecentQuery : "",
                        queryHasChanged: !1,
                        isSearching: !1,
                        selectedLanguage: e.defaultLanguage,
                        inputFocused: !1,
                        isHandlingTagSearch: e.isTagSearch || !1
                    }
                }
            }

            function L(e) {
                let t = (0, u.useStateFromStores)([m.default], () => m.default.getDiscoveryCategories(), [], m.areDiscoveryCategoriesEqual),
                    n = (0, u.useStateFromStores)([E.default], () => E.default.getTopCategoryCounts(e.mostRecentQuery));
                return (0, a.jsx)(O, {
                    ...e,
                    categories: t,
                    countsByCategory: n
                })
            }
            O.contextType = _.AnalyticsContext
        },
        311092: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryTagStyle: function() {
                    return h
                },
                DiscoveryTags: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("731898"),
                u = n("599110"),
                d = n("49111"),
                c = n("259160");
            let E = ["egirl", "egirls", "waifu", "dating", "nsfw", "sex", "playboy", "stupid", "harem", "playgirl", "shitcoin", "shitpost", "porno", "nudes", "sexy", "horny", "fart", "tits", "balls", "cum"],
                f = e => {
                    let {
                        text: t,
                        onClick: n,
                        className: s,
                        hide: l
                    } = e;
                    return (0, a.jsx)("li", {
                        className: i(c.tag, s, {
                            [c.hide]: l
                        }),
                        children: (0, a.jsx)(r.Clickable, {
                            className: c.tagText,
                            onClick: e => {
                                e.stopPropagation(), e.preventDefault(), n(e)
                            },
                            children: t
                        })
                    })
                },
                _ = e => {
                    let {
                        tags: t,
                        onTagClick: n,
                        guildId: l,
                        section: i
                    } = e;
                    return s.useEffect(() => {
                        u.default.track(d.AnalyticEvents.OPEN_POPOUT, {
                            type: "Discovery Tags Overflow",
                            guild_id: l,
                            location: {
                                page: d.AnalyticsPages.GUILD_DISCOVERY,
                                section: i
                            }
                        })
                    }, [l, i]), (0, a.jsx)(r.Dialog, {
                        className: c.overflowTagsPopout,
                        children: (0, a.jsx)("ul", {
                            children: t.map(e => (0, a.jsx)(f, {
                                onClick: () => n(e),
                                className: c.tagAlt,
                                text: e
                            }, e))
                        })
                    })
                },
                I = e => {
                    let {
                        className: t,
                        count: n
                    } = e;
                    return (0, a.jsx)(r.Popout, {
                        renderPopout: () => (0, a.jsx)(_, {
                            ...e
                        }),
                        position: "right",
                        align: "top",
                        closeOnScroll: !0,
                        children: e => (0, a.jsx)(f, {
                            className: t,
                            ...e,
                            text: "+".concat(n)
                        })
                    })
                },
                h = {
                    DEFAULT: c.tagDefault,
                    LIGHT: c.tagLight,
                    ALT: c.tagAlt
                },
                C = e => {
                    let {
                        tags: t,
                        onTagClick: n,
                        className: l,
                        discoveryTagStyle: r = h.DEFAULT,
                        hideOverflow: u = !1,
                        guildId: d,
                        section: _
                    } = e, {
                        ref: C,
                        width: T
                    } = (0, o.default)(), [m, S] = s.useState(null), N = t.filter(e => !E.includes(e.toLowerCase()));
                    return s.useLayoutEffect(() => {
                        if (null == C.current || null == T || 0 === T) return;
                        let e = 0,
                            t = 0,
                            n = T - 40 - 4;
                        for (let a = 0; a < N.length; a++) {
                            let s = C.current.children[a],
                                l = s.clientWidth;
                            if (t += l + 4, a === N.length - 1 ? t > n + 40 : t > n) break;
                            e++
                        }
                        S(t => e <= N.length ? e : t)
                    }, [T, C, N]), (0, a.jsxs)("ul", {
                        ref: C,
                        className: i(c.tagContainer, l, {
                            [c.invisible]: null == m
                        }),
                        children: [N.map((e, t) => (0, a.jsx)(f, {
                            className: r,
                            onClick: () => n(e),
                            hide: null != m && t >= m,
                            text: e
                        }, e)), !u && null != m && m < N.length && (0, a.jsx)(I, {
                            className: r,
                            onTagClick: n,
                            tags: N.slice(m),
                            count: N.length - m,
                            guildId: d,
                            section: _
                        })]
                    })
                }
        },
        951169: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("75766"),
                r = n("994428"),
                o = n("782340"),
                u = n("935344");

            function d(e) {
                let {
                    onClick: t,
                    onSecondaryClick: n,
                    onComponentMount: d,
                    markAsDismissed: c
                } = e;
                s.useEffect(() => {
                    null == d || d()
                }, [d]);
                let E = s.useCallback(e => {
                        t(e), null == c || c(r.ContentDismissActionType.PRIMARY)
                    }, [t, c]),
                    f = s.useCallback(() => {
                        null == n || n(), null == c || c(r.ContentDismissActionType.SECONDARY)
                    }, [n, c]);
                return (0, a.jsxs)("div", {
                    className: u.tooltipWrapper,
                    children: [(0, a.jsx)(l.Heading, {
                        className: u.tooltipHeader,
                        variant: "heading-md/semibold",
                        children: o.default.Messages.SERVER_DISCOVERY_TOOLTIP_TITLE
                    }), (0, a.jsx)(l.Text, {
                        className: u.tooltipText,
                        variant: "text-sm/normal",
                        children: o.default.Messages.SERVER_DISCOVERY_TOOLTIP_DESCRIPTION.format({
                            count: i.LOWERED_MINIMUM_SIZE
                        })
                    }), (0, a.jsxs)("div", {
                        className: u.buttonsContainer,
                        children: [(0, a.jsx)(l.Button, {
                            fullWidth: !0,
                            size: l.Button.Sizes.SMALL,
                            color: l.Button.Colors.BRAND,
                            onClick: E,
                            children: o.default.Messages.LEARN_MORE
                        }), (0, a.jsx)(l.Button, {
                            fullWidth: !0,
                            size: l.Button.Sizes.SMALL,
                            look: l.Button.Looks.BLANK,
                            onClick: f,
                            children: o.default.Messages.NO_THANKS
                        })]
                    })]
                })
            }
        },
        719369: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("301165"),
                i = n("948062"),
                r = n("309633");
            class o extends s.PureComponent {
                renderPlaceholders() {
                    let {
                        loadingPlaceholderCount: e
                    } = this.props, t = [];
                    for (let n = 0; n < e; n++) t.push((0, a.jsx)(i.DiscoverSearchResultPlaceholder, {}, n));
                    return t
                }
                render() {
                    let {
                        guilds: e,
                        loading: t
                    } = this.props;
                    return (0, a.jsx)(l.Spring, {
                        from: {
                            opacity: t ? 0 : 1
                        },
                        to: {
                            opacity: 1
                        },
                        delay: 100,
                        children: n => (0, a.jsx)(l.animated.div, {
                            className: r.guildList,
                            style: n,
                            children: t || null == e ? this.renderPlaceholders() : e.map(this.renderGuild)
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.handleViewGuild = async e => {
                        let {
                            guilds: t,
                            analyticsContext: n,
                            onViewGuild: a
                        } = this.props, s = t.findIndex(t => t.id === e);
                        await a(e, s, n)
                    }, this.renderGuild = (e, t) => {
                        let {
                            theme: n,
                            onTagClick: s
                        } = this.props;
                        return (0, a.jsx)(i.default, {
                            guild: e,
                            theme: n,
                            onView: this.handleViewGuild,
                            onTagClick: s
                        }, t)
                    }
                }
            }
            o.defaultProps = {
                loadingPlaceholderCount: 12
            };
            var u = o
        },
        948062: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoverSearchResultPlaceholder: function() {
                    return O
                },
                default: function() {
                    return L
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("272030"),
                u = n("685665"),
                d = n("407063"),
                c = n("141254"),
                E = n("116616"),
                f = n("580357"),
                _ = n("587974"),
                I = n("315102"),
                h = n("794818"),
                C = n("378662"),
                T = n("574921"),
                m = n("311092"),
                S = n("613088"),
                N = n("49111"),
                A = n("782340"),
                p = n("750408"),
                g = n("68422"),
                R = n("578817");
            let O = () => (0, a.jsx)("div", {
                className: p.placeholder
            });
            var L = e => {
                var t;
                let {
                    guild: l,
                    theme: O,
                    onView: L,
                    onTagClick: M
                } = e, {
                    id: v,
                    discoverySplash: D,
                    icon: x,
                    name: P,
                    description: y,
                    presenceCount: b,
                    memberCount: U,
                    keywords: G
                } = l, [j, F] = s.useState(!1), [k, B] = s.useState(!1), {
                    analyticsLocations: w
                } = (0, u.default)(), H = I.default.getGuildDiscoverySplashURL({
                    id: v,
                    splash: D,
                    size: 240 * (0, d.getDevicePixelRatio)()
                }), V = null != H ? H : function(e) {
                    switch (e) {
                        case N.ThemeTypes.DARK:
                            return g;
                        case N.ThemeTypes.LIGHT:
                            return R
                    }
                }(O), Y = null !== (t = I.default.getGuildIconURL({
                    id: v,
                    icon: x,
                    size: 32
                })) && void 0 !== t ? t : void 0, W = async e => {
                    let {
                        className: t
                    } = e.target;
                    if (!t.includes("Menu")) {
                        if ((0, c.isAtGuildCapAndNonPremium)()) {
                            (0, E.default)({
                                analyticsSource: {
                                    page: N.AnalyticsPages.GUILD_DISCOVERY
                                },
                                analyticsLocation: {
                                    page: N.AnalyticsPages.GUILD_DISCOVERY,
                                    section: N.AnalyticsSections.GUILD_CAP_UPSELL_MODAL
                                },
                                analyticsLocations: w
                            });
                            return
                        }
                        B(!0);
                        try {
                            null != L && await L(l.id)
                        } finally {
                            B(!1)
                        }
                    }
                };
                s.useEffect(() => T.DiscoveryTagsExperiment.trackExposure({
                    location: "4302e4_1"
                }));
                let {
                    shouldDisplayTags: K
                } = T.DiscoveryTagsExperiment.useExperiment({
                    location: "4302e4_2"
                }, {
                    autoTrackExposure: !1
                }), z = (0, C.useCanSeeDiscoveryContextMenu)();
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: p.card,
                        children: [k ? (0, a.jsx)(r.Spinner, {
                            type: r.Spinner.Type.PULSING_ELLIPSIS,
                            className: p.spinner
                        }) : null, (0, a.jsxs)(r.Clickable, {
                            className: i(p.container, {
                                [p.hover]: j,
                                [p.submitting]: k
                            }),
                            onClick: W,
                            onContextMenu: e => {
                                (0, o.openContextMenuLazy)(e, async () => {
                                    let {
                                        default: e
                                    } = await n.el("392533").then(n.bind(n, "392533"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        guild: l
                                    })
                                })
                            },
                            onMouseEnter: () => F(!0),
                            onMouseLeave: () => F(!1),
                            children: [(0, a.jsx)("div", {
                                className: i(p.splashContainer, {
                                    [p.splashContainerWithTags]: K
                                }),
                                children: (0, a.jsx)("img", {
                                    src: V,
                                    alt: "",
                                    className: p.splashImage,
                                    width: 240
                                })
                            }), (0, a.jsxs)("div", {
                                className: i(p.content, {
                                    [p.contentWithTags]: K
                                }),
                                children: [(0, a.jsxs)("div", {
                                    className: p.header,
                                    children: [(0, a.jsx)(_.default, {
                                        mask: _.default.Masks.SQUIRCLE,
                                        width: 32,
                                        height: 32,
                                        children: (0, a.jsx)("img", {
                                            src: Y,
                                            alt: "",
                                            className: p.avatar
                                        })
                                    }), (0, a.jsxs)("div", {
                                        className: p.headerName,
                                        children: [(0, a.jsx)("div", {
                                            children: (0, a.jsx)(f.default, {
                                                guild: l,
                                                className: p.guildBadge,
                                                size: 16
                                            })
                                        }), (0, a.jsx)(r.Heading, {
                                            variant: "heading-md/semibold",
                                            className: p.headerTitle,
                                            children: P
                                        })]
                                    })]
                                }), (0, a.jsx)(r.Text, {
                                    className: p.description,
                                    variant: "text-sm/normal",
                                    children: y
                                }), K && null != G && null != M && (0, a.jsx)(m.DiscoveryTags, {
                                    guildId: l.id,
                                    discoveryTagStyle: m.DiscoveryTagStyle.ALT,
                                    onTagClick: e => M(e, l.id),
                                    tags: G,
                                    section: h.AnalyticsContexts.SEARCH
                                }), (0, a.jsxs)("div", {
                                    className: p.memberInfo,
                                    children: [null != b && (0, a.jsx)("div", {
                                        className: p.memberCount,
                                        children: (0, a.jsx)(r.Text, {
                                            variant: "text-xs/normal",
                                            color: "header-secondary",
                                            children: A.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format({
                                                membersOnline: b
                                            })
                                        })
                                    }), null != U && (0, a.jsxs)(a.Fragment, {
                                        children: [(0, a.jsx)("div", {
                                            className: p.dotSeparator
                                        }), (0, a.jsx)("div", {
                                            className: p.memberCount,
                                            children: (0, a.jsx)(r.Text, {
                                                variant: "text-xs/normal",
                                                color: "header-secondary",
                                                children: A.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format({
                                                    count: U
                                                })
                                            })
                                        })]
                                    })]
                                })]
                            }), z ? (0, a.jsx)("div", {
                                className: p.actionButtons,
                                children: (0, a.jsx)(S.default, {
                                    guild: l
                                })
                            }) : null]
                        })]
                    }), (0, a.jsx)("hr", {
                        className: p.separator
                    })]
                })
            }
        },
        613088: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("433487"),
                u = n("149279"),
                d = n("392533"),
                c = n("782340"),
                E = n("133487"),
                f = function(e) {
                    let {
                        guild: t
                    } = e, [n, l] = s.useState(!1), f = s.useCallback(() => l(!0), [l]), _ = s.useCallback(() => l(!0), [l]);
                    return (0, a.jsx)("div", {
                        className: i(E.actionButtonsContainer, {
                            [E.forceButtonsShow]: n
                        }),
                        children: (0, a.jsx)(u.default, {
                            children: (0, a.jsx)(d.GuildDiscoveryMenuPopout, {
                                onRequestOpen: f,
                                onRequestClose: _,
                                guild: t,
                                children: e => {
                                    let {
                                        onClick: t,
                                        ...n
                                    } = e;
                                    return (0, a.jsx)(r.Tooltip, {
                                        text: c.default.Messages.MORE,
                                        hideOnClick: !0,
                                        children: e => {
                                            let {
                                                onClick: s,
                                                ...l
                                            } = e;
                                            return (0, a.jsx)(u.Button, {
                                                ...n,
                                                ...l,
                                                onClick: e => {
                                                    e.stopPropagation(), null == s || s(), t(e)
                                                },
                                                "aria-label": c.default.Messages.MORE,
                                                children: (0, a.jsx)(o.default, {
                                                    className: E.overflowIcon
                                                })
                                            })
                                        }
                                    })
                                }
                            })
                        })
                    })
                }
        },
        738169: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("884691");

            function s(e) {
                let [t, n] = a.useState(0), s = a.useCallback(() => {
                    let t = window.innerWidth;
                    for (let a of e) {
                        let [e, s] = a;
                        if (t >= e) {
                            n(s);
                            return
                        }
                    }
                }, [e]);
                return a.useEffect(() => {
                    s()
                }, [s]), a.useEffect(() => (window.addEventListener("resize", s), () => {
                    window.removeEventListener("resize", s)
                })), t
            }
        },
        697316: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("913144"),
                s = n("862853"),
                l = {
                    init() {
                        a.default.subscribe("CONNECTION_OPEN", () => {
                            (0, s.reset)()
                        }), a.default.subscribe("LOGOUT", () => {
                            (0, s.reset)()
                        })
                    }
                }
        },
        935246: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DismissibleContentNotices: function() {
                    return D
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("151426"),
                i = n("77078"),
                r = n("327037"),
                o = n("79112"),
                u = n("376556"),
                d = n("926994"),
                c = n("889293"),
                E = n("757557"),
                f = n("994750"),
                _ = n("966003"),
                I = n("363861"),
                h = n("695827"),
                C = n("425538"),
                T = n("393414"),
                m = n("600133"),
                S = n("936629"),
                N = n("489622"),
                A = n("599110"),
                p = n("509802"),
                g = n("994428"),
                R = n("49111"),
                O = n("935583"),
                L = n("646718"),
                M = n("782340"),
                v = n("185401");
            let D = e => {
                let {
                    dismissibleContent: t,
                    noticeType: D
                } = e, x = (0, s.useStateFromStores)([m.default], () => m.default.getNotice());
                return (0, a.jsx)(p.default, {
                    contentTypes: [t],
                    groupName: g.DismissibleContentGroupName.NOTICE_BAR,
                    bypassAutoDismiss: !0,
                    children: e => {
                        var t, s;
                        let {
                            visibleContent: m,
                            markAsDismissed: p
                        } = e;
                        switch (m) {
                            case l.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR:
                                return (0, a.jsx)(_.default, {
                                    dismissCurrentNotice: p
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.DEFAULT,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: p,
                                        noticeType: D
                                    }), M.default.Messages.NOTICE_NATIVE_APPS_2020_06, (0, a.jsx)("i", {
                                        className: v.iconApple
                                    }), (0, a.jsx)("i", {
                                        className: v.iconAndroid
                                    }), (0, a.jsx)("i", {
                                        className: v.iconWindows
                                    }), (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        noticeType: D,
                                        onClick: () => {
                                            (0, i.openModalLazy)(async () => {
                                                let {
                                                    default: e
                                                } = await n.el("649486").then(n.bind(n, "649486"));
                                                return t => (0, a.jsx)(e, {
                                                    source: "Top Bar Nag",
                                                    ...t
                                                })
                                            })
                                        },
                                        children: M.default.Messages.DOWNLOAD
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.SPOTIFY,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: p,
                                        noticeType: D
                                    }), (0, a.jsx)(S.default, {
                                        className: v.platformIcon
                                    }), M.default.Messages.NOTICE_CONNECT_SPOTIFY, (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        onClick: () => (0, d.default)(R.PlatformTypes.SPOTIFY, "Notice Bar"),
                                        noticeType: D,
                                        children: M.default.Messages.CONNECT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.PLAYSTATION,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: p
                                    }), (0, a.jsx)("img", {
                                        alt: "",
                                        className: v.platformIcon,
                                        src: u.default.get(R.PlatformTypes.PLAYSTATION).icon.whiteSVG
                                    }), M.default.Messages.NOTICE_CONNECT_PLAYSTATION, (0, a.jsx)(N.NoticeButton, {
                                        onClick: () => (0, d.default)(R.PlatformTypes.PLAYSTATION, "Notice Bar"),
                                        children: M.default.Messages.CONNECT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.DEFAULT,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: p,
                                        noticeType: D
                                    }), M.default.Messages.NOTICE_MFA_SMS_BACKUP, (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        onClick: () => o.default.open(R.UserSettingsSections.ACCOUNT),
                                        noticeType: D,
                                        children: M.default.Messages.NOTICE_MFA_SMS_BACKUP_BUTTON
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_PROMO:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.PREMIUM_TIER_2,
                                    children: [(0, a.jsx)("span", {
                                        className: v.premiumLogo
                                    }), (0, a.jsx)("span", {
                                        className: v.premiumText,
                                        children: M.default.Messages.NOTICE_PREMIUM_PROMO_MESSAGE
                                    }), (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        className: v.premiumAction,
                                        noticeType: D,
                                        onClick: () => {
                                            A.default.track(R.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
                                                location_section: R.AnalyticsSections.NOTIFICATION_BAR,
                                                location_object: R.AnalyticsObjects.BUTTON_CTA
                                            }), o.default.open(R.UserSettingsSections.PREMIUM)
                                        },
                                        children: M.default.Messages.NOTICE_PREMIUM_PROMO_ACTION
                                    }), (0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: () => {
                                            p(), (0, r.setFlag)(R.UserFlags.PREMIUM_PROMO_DISMISSED, !0)
                                        },
                                        noticeType: D
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING:
                                return (0, a.jsx)(C.default, {
                                    dismissCurrentNotice: p,
                                    subscriptionTier: L.PremiumSubscriptionSKUs.TIER_2
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_0_TRIAL_ENDING:
                                return (0, a.jsx)(C.default, {
                                    dismissCurrentNotice: p,
                                    subscriptionTier: L.PremiumSubscriptionSKUs.TIER_0
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.PREMIUM_TIER_2,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        noticeType: D,
                                        onClick: p
                                    }), M.default.Messages.PREMIUM_SUBSCRIPTION_REACTIVATION_NOTICE_TEXT, (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        noticeType: D,
                                        onClick: () => {
                                            p(), o.default.open(R.UserSettingsSections.PREMIUM)
                                        },
                                        children: M.default.Messages.PREMIUM_SUBSCRIPTION_REACTIVATION_NOTICE_BUTTON_TEXT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_LOCALIZED_PRICING:
                                return (0, a.jsx)(h.default, {
                                    notice: x,
                                    noticeType: D,
                                    dismissCurrentNotice: p
                                });
                            case l.DismissibleContent.QUEST_1_GO_LIVE_BANNER:
                                let P = null == x ? void 0 : null === (t = x.metadata) || void 0 === t ? void 0 : t.partnerGame;
                                return (0, a.jsx)(f.default, {
                                    noticeType: D,
                                    markAsDismissed: p,
                                    partnerGame: P
                                });
                            case l.DismissibleContent.QUEST_1_ENDED_INCOMPLETE:
                                let y = null == x ? void 0 : null === (s = x.metadata) || void 0 === s ? void 0 : s.partnerGame;
                                return (0, a.jsx)(E.default, {
                                    noticeType: D,
                                    markAsDismissed: p,
                                    partnerGame: y
                                });
                            case l.DismissibleContent.NAGBAR_BOUNCED_EMAIL_NOTICE:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.DANGER,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: p,
                                        noticeType: D
                                    }), M.default.Messages.BOUNCED_EMAIL_DETECTED_NOTICE, (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        noticeType: D,
                                        onClick: () => {
                                            (0, T.transitionTo)(R.Routes.SETTINGS("account"))
                                        },
                                        children: M.default.Messages.CHANGE_EMAIL_SHORT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_ACTIVATE_SERVER_SUBSCRIPTION:
                                let b = c.default.getEligibleGuildsForNagActivate();
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.DEFAULT,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: p,
                                        noticeType: D
                                    }), M.default.Messages.GUILD_ROLE_SUBSCRIPTION_NAGBAR_TEXT, (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        noticeType: D,
                                        onClick: () => {
                                            p(g.ContentDismissActionType.PRIMARY), (0, T.transitionTo)(1 === b.length ? R.Routes.GUILD_SETTINGS(b[0], "role-subscriptions") : R.Routes.PICK_GUILD_SETTINGS("role-subscriptions", void 0, "server-subscriptions-finish-setting-up"))
                                        },
                                        children: M.default.Messages.LETS_GO
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_POMELO:
                                return (0, a.jsxs)(N.default, {
                                    color: N.NoticeColors.WARNING,
                                    children: [(0, a.jsx)(N.NoticeCloseButton, {
                                        onClick: p,
                                        noticeType: D
                                    }), M.default.Messages.POMELO_ACTION_NEEDED.format(), (0, a.jsx)(N.PrimaryCTANoticeButton, {
                                        onClick: () => (0, I.default)(O.PomeloEntrypoints.NOTICE),
                                        noticeType: D,
                                        children: M.default.Messages.GET_STARTED
                                    })]
                                })
                        }
                    }
                })
            }
        },
        757557: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("697218"),
                i = n("489622"),
                r = n("579565"),
                o = n("994428"),
                u = n("782340"),
                d = n("229701"),
                c = e => {
                    var t;
                    let {
                        noticeType: n,
                        markAsDismissed: c,
                        partnerGame: E
                    } = e, f = (0, s.useStateFromStores)([l.default], () => l.default.getCurrentUser());
                    if (null == E) return null;
                    let _ = (0, r.getDrop)(E);
                    if (null == _) return null;
                    let I = "https://survey.alchemer.com/s3/7043057/Drops-NPS?user_id=".concat(null !== (t = null == f ? void 0 : f.id) && void 0 !== t ? t : "");
                    return (0, a.jsxs)(i.default, {
                        className: d.colorGuildBlue,
                        children: [u.default.Messages.DROPS_BANNER_ENDED_INCOMPLETE.format({
                            gameTitle: _.title
                        }), (0, a.jsx)(i.NoticeButtonAnchor, {
                            href: I,
                            target: "_blank",
                            onClick: () => {
                                c(o.ContentDismissActionType.PRIMARY)
                            },
                            children: u.default.Messages.DROPS_FEEDBACK_SURVEY
                        }), (0, a.jsx)(i.NoticeCloseButton, {
                            onClick: () => {
                                c(o.ContentDismissActionType.DISMISS)
                            },
                            noticeType: n
                        })]
                    })
                }
        },
        473503: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("79112"),
                r = n("945330"),
                o = n("376152"),
                u = n("243632"),
                d = n("49111"),
                c = n("994428"),
                E = n("782340"),
                f = n("905769");
            let _ = (e, t) => ({
                header: E.default.Messages.DROP_ENROLLMENT_CTA_TOOLTIP_HEADER.format({
                    gameName: e.title
                }),
                body: e.messages.enrollmentTooltip(t),
                imgSrc: e.assets.tooltipSrc,
                imgStyle: f.defaultDropImage
            });

            function I(e) {
                let {
                    markAsDismissed: t,
                    partnerGame: n
                } = e;
                (0, u.useTrackDropsImpression)(n, s.ImpressionTypes.POPOUT, s.ImpressionNames.DROPS_QUEST_ENROLLMENT);
                let I = (0, u.useDropsExperiment)(n);
                if (null == I) return null;
                let {
                    header: h,
                    body: C,
                    imgSrc: T,
                    imgStyle: m
                } = _(I.drop, I.config.streamLengthRequirement), S = () => {
                    t(c.ContentDismissActionType.DISMISS)
                };
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)("img", {
                        src: T,
                        alt: "",
                        className: m
                    }), (0, a.jsx)(l.Clickable, {
                        className: f.buttonClose,
                        "aria-label": E.default.Messages.CLOSE,
                        onClick: S,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            className: f.closeIcon
                        })
                    }), (0, a.jsx)(l.Heading, {
                        className: f.title,
                        variant: "heading-md/extrabold",
                        children: h
                    }), (0, a.jsx)(l.Text, {
                        variant: "text-sm/medium",
                        className: f.subTitle,
                        children: C
                    }), I.config.autoEnrollment ? (0, a.jsx)(l.Button, {
                        look: l.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            i.default.open(d.UserSettingsSections.INVENTORY), t(c.ContentDismissActionType.PRIMARY)
                        },
                        children: E.default.Messages.LEARN_MORE
                    }) : (0, a.jsx)(l.Button, {
                        innerClassName: f.button,
                        look: l.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            (0, o.enrollDropsUser)(I.drop.dropsQuestId), i.default.open(d.UserSettingsSections.INVENTORY), t(c.ContentDismissActionType.PRIMARY)
                        },
                        children: E.default.Messages.DROPS_ELIGIBILITY_ENROLLMENT_PRIMARY_CTA
                    }), (0, a.jsx)(l.Button, {
                        className: f.linkButtonContainer,
                        innerClassName: f.linkButton,
                        onClick: S,
                        look: l.Button.Looks.LINK,
                        fullWidth: !0,
                        color: l.Button.Colors.WHITE,
                        children: E.default.Messages.NOT_NOW
                    }), (0, a.jsx)("div", {
                        className: f.pointer
                    })]
                })
            }
        },
        994750: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("866227"),
                l = n.n(s),
                i = n("489622"),
                r = n("243632"),
                o = n("994428"),
                u = n("782340"),
                d = n("623158");
            let c = (e, t) => ({
                bodyText: u.default.Messages.DROPS_BANNER_NOTICE.format({
                    gameName: e.title,
                    endDate: l(e.endDate, "YYYY-MM-DD HH:mm").format("MMM Do"),
                    streamLengthRequirement: t
                }),
                articleUrl: e.articleUrl
            });
            var E = e => {
                let {
                    noticeType: t,
                    markAsDismissed: n,
                    partnerGame: s
                } = e, l = (0, r.useDropsExperiment)(s);
                if (null == l) return null;
                let {
                    bodyText: E,
                    articleUrl: f
                } = c(l.drop, l.config.streamLengthRequirement);
                return (0, a.jsxs)(i.default, {
                    className: d.colorGuildBlue,
                    children: [E, (0, a.jsx)(i.NoticeButtonAnchor, {
                        href: f,
                        target: "_blank",
                        onClick: () => {
                            n(o.ContentDismissActionType.PRIMARY)
                        },
                        children: u.default.Messages.LEARN_MORE
                    }), (0, a.jsx)(i.NoticeCloseButton, {
                        onClick: () => {
                            n(o.ContentDismissActionType.DISMISS)
                        },
                        noticeType: t
                    })]
                })
            }
        },
        257426: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("79112"),
                r = n("945330"),
                o = n("243632"),
                u = n("49111"),
                d = n("994428"),
                c = n("782340"),
                E = n("436815");
            let f = (e, t) => ({
                body: e.messages.completionTooltip(t),
                imgSrc: e.assets.tooltipSrc,
                imgStyle: E.defaultDropImage
            });

            function _(e) {
                let {
                    markAsDismissed: t,
                    partnerGame: n
                } = e;
                (0, o.useTrackDropsImpression)(n, s.ImpressionTypes.POPOUT, s.ImpressionNames.DROPS_QUEST_COMPLETION);
                let _ = (0, o.useDropsExperiment)(n);
                if (null == _) return null;
                let {
                    body: I,
                    imgSrc: h,
                    imgStyle: C
                } = f(_.drop, _.config.streamLengthRequirement), T = () => {
                    t(d.ContentDismissActionType.DISMISS)
                };
                return (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)("img", {
                        src: h,
                        alt: "",
                        className: C
                    }), (0, a.jsx)(l.Clickable, {
                        className: E.buttonClose,
                        "aria-label": c.default.Messages.CLOSE,
                        onClick: T,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            className: E.closeIcon
                        })
                    }), (0, a.jsx)(l.Heading, {
                        className: E.title,
                        variant: "heading-md/extrabold",
                        children: c.default.Messages.DROPS_QUEST_COMPLETION_TOOLTIP_HEADER
                    }), (0, a.jsx)(l.Text, {
                        variant: "text-sm/medium",
                        className: E.subTitle,
                        children: I
                    }), (0, a.jsx)(l.Button, {
                        look: l.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            i.default.open(u.UserSettingsSections.INVENTORY), t(d.ContentDismissActionType.PRIMARY)
                        },
                        children: c.default.Messages.REDEEM
                    }), (0, a.jsx)(l.Button, {
                        className: E.linkButtonContainer,
                        innerClassName: E.linkButton,
                        onClick: T,
                        look: l.Button.Looks.LINK,
                        fullWidth: !0,
                        color: l.Button.Colors.WHITE,
                        children: c.default.Messages.NOT_NOW
                    }), (0, a.jsx)("div", {
                        className: E.pointer
                    })]
                })
            }
        },
        587233: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("913144"),
                s = n("316272"),
                l = n("200008");

            function i(e) {
                let {
                    channel: {
                        id: t
                    }
                } = e;
                (0, l.removeFavoriteChannel)(t)
            }
            class r extends s.default {
                _initialize() {
                    a.default.subscribe("CHANNEL_DELETE", i)
                }
                _terminate() {
                    a.default.unsubscribe("CHANNEL_DELETE", i)
                }
            }
            var o = new r
        },
        683716: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("77078"),
                i = n("913144"),
                r = n("316272"),
                o = n("10641"),
                u = n("525065"),
                d = n("305961"),
                c = n("957255"),
                E = n("867965"),
                f = n("49111"),
                _ = n("994428");
            let I = e => {
                var t;
                let n = d.default.getGuild(e),
                    a = !!(null == n ? void 0 : n.hasFeature(f.GuildFeatures.COMMUNITY)),
                    l = c.default.can(f.Permissions.MANAGE_CHANNELS, n),
                    i = (0, o.isDismissibleContentDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL),
                    r = null !== (t = u.default.getMemberCount(e)) && void 0 !== t ? t : 0;
                return a && l && !i && r >= 200
            };
            class h extends r.default {
                _initialize() {
                    i.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect)
                }
                _terminate() {
                    i.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect)
                }
                handleChannelSelect(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == t) return;
                    let i = I(t);
                    if (!i) return;
                    (0, E.trackForumUpsellModalViewed)(), (0, o.requestMarkDismissibleContentAsShown)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL);
                    let r = function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : _.ContentDismissActionType.DISMISS;
                        (0, o.markDismissibleContentAsDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL, {
                            dismissAction: e
                        })
                    };
                    (0, l.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("135430").then(n.bind(n, "135430"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            onClose: e => {
                                r(e), n.onClose()
                            },
                            guildId: t,
                            shouldUpsellCreation: !0
                        })
                    }, {
                        onCloseCallback: () => (0, o.markDismissibleContentAsDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL, {
                            dismissAction: _.ContentDismissActionType.DISMISS
                        }),
                        onCloseRequest: f.NOOP_NULL
                    })
                }
            }
            var C = new h
        },
        390790: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("49111"),
                i = {
                    async fetch() {
                        try {
                            let e = await a.default.get({
                                url: l.Endpoints.FRIEND_SUGGESTIONS
                            });
                            s.default.dispatch({
                                type: "LOAD_FRIEND_SUGGESTIONS_SUCCESS",
                                suggestions: e.body
                            })
                        } catch (e) {
                            s.default.dispatch({
                                type: "LOAD_FRIEND_SUGGESTIONS_FAILURE"
                            })
                        }
                    },
                    ignore(e) {
                        a.default.delete(l.Endpoints.FRIEND_SUGGESTION(e))
                    }
                }
        },
        449004: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("766274"),
                o = n("697218"),
                u = n("390790");
            let d = {},
                c = 0,
                E = !1,
                f = !1;

            function _(e) {
                var t;
                return {
                    key: e.suggested_user.id,
                    name: null === (t = s.first(e.reasons)) || void 0 === t ? void 0 : t.name,
                    user: new r.default(e.suggested_user),
                    mutualFriendsCount: e.mutual_friends_count
                }
            }
            class I extends l.default.Store {
                initialize() {
                    this.waitFor(o.default)
                }
                getSuggestionCount() {
                    return c
                }
                getSuggestions() {
                    return Object.entries(d).map(e => {
                        let [t, n] = e;
                        return n
                    })
                }
                getSuggestion(e) {
                    return d[e]
                }
            }
            I.displayName = "FriendSuggestionStore";
            var h = new I(i.default, {
                CONNECTION_OPEN: function(e) {
                    d = {}, (c = e.friendSuggestionCount) > 0 && (f = !0, E || !f || (E = !0, f = !1, u.default.fetch()))
                },
                FRIEND_SUGGESTION_CREATE: function(e) {
                    let t = _(e.suggestion);
                    if (null != d[t.key]) return !1;
                    c++, d = {
                        ...d,
                        [t.key]: t
                    }
                },
                FRIEND_SUGGESTION_DELETE: function(e) {
                    c = Math.max(0, --c), delete d[e.suggestedUserId]
                },
                LOAD_FRIEND_SUGGESTIONS_SUCCESS: function(e) {
                    var t;
                    E = !1, t = e.suggestions, d = s.chain(t).map(_).keyBy(e => e.key).value(), c = s.keys(d).length
                },
                LOAD_FRIEND_SUGGESTIONS_FAILURE: function() {
                    E = !1, d = {}
                }
            })
        },
        167715: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("446674"),
                r = n("77078"),
                o = n("235660"),
                u = n("998564"),
                d = n("420145"),
                c = n("209969"),
                E = n("171644"),
                f = n("782340"),
                _ = n("505393");

            function I(e) {
                let {
                    platform: t
                } = e;
                return t === E.GameConsoleTypes.XBOX ? (0, a.jsx)(d.default, {
                    className: _.icon
                }) : t === E.GameConsoleTypes.PLAYSTATION ? (0, a.jsx)(u.default, {
                    className: _.icon
                }) : null
            }

            function h(e) {
                var t;
                let {
                    voiceState: n,
                    awaitingRemoteSessionInfo: s
                } = e, u = null != s ? (0, c.coercePlatformTypeToConsoleType)(s.type) : null, d = (0, i.useStateFromStores)([o.default], () => {
                    var e;
                    return null === (e = o.default.getSessionById(null !== (t = null == n ? void 0 : n.sessionId) && void 0 !== t ? t : "")) || void 0 === e ? void 0 : e.clientInfo.os
                }), h = null != u ? u : d;
                if (null == h || !E.GAME_CONSOLE_SESSIONS.has(h)) return null;
                let C = null != s,
                    T = C ? h === E.GameConsoleTypes.XBOX ? f.default.Messages.XBOX_TRANSFERRING_ELLIPSIS : f.default.Messages.PLAYSTATION_TRANSFERRING_ELLIPSIS : h === E.GameConsoleTypes.XBOX ? f.default.Messages.XBOX_REMOTE_CONNECTED.format() : f.default.Messages.PLAYSTATION_REMOTE_CONNECTED.format();
                return (0, a.jsxs)("div", {
                    className: l(_.root, C ? _.connecting : _.connected),
                    children: [(0, a.jsx)(I, {
                        platform: h
                    }), (0, a.jsx)(r.Text, {
                        color: C ? "header-primary" : "always-white",
                        variant: "text-xs/medium",
                        children: T
                    })]
                })
            }
        },
        954732: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("446674"),
                s = n("913144");
            let l = [];
            class i extends a.default.Store {
                getInvites() {
                    return l
                }
            }
            i.displayName = "GameInviteStore", new i(s.default, {
                CONNECTION_OPEN_SUPPLEMENTAL: function(e) {
                    let {
                        gameInvites: t
                    } = e;
                    l = t
                },
                GAME_INVITE_CREATE: function(e) {
                    let {
                        gameInvite: t
                    } = e;
                    l = [...l, t]
                },
                GAME_INVITE_DELETE: function(e) {
                    let {
                        inviteId: t
                    } = e;
                    l = l.filter(e => e.invite_id !== t)
                }
            })
        },
        132943: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("913144"),
                s = n("823411"),
                l = n("605250"),
                i = n("546463");
            let r = {};

            function o(e) {
                let {
                    name: t,
                    hash: n,
                    missingData: a
                } = e;
                for (let e of (i.default.markGameReported(t), a))
                    if ("icon" === e) {
                        let e = r[t];
                        null != e && s.default.uploadIcon(t, n, e);
                        return
                    } else new(0, l.default)("GameStoreIconManager").log("Could not find missing data key: ".concat(e))
            }

            function u(e) {
                let {
                    gameName: t,
                    icon: n
                } = e;
                r[t] = n
            }
            var d = {
                initialize() {
                    a.default.subscribe("UNVERIFIED_GAME_UPDATE", o), a.default.subscribe("GAME_ICON_UPDATE", u)
                }
            }
        },
        612365: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("913144"),
                s = n("823411"),
                l = n("568131"),
                i = n("316272"),
                r = n("686470");
            class o extends i.default {
                _initialize() {
                    a.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen)
                }
                _terminate() {
                    a.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen)
                }
                constructor(...e) {
                    super(...e), this.handleConnectionOpen = () => {
                        !r.default.fetched && (0, l.fetchLibrary)(), s.default.getDetectableGames()
                    }
                }
            }
            var u = new o
        },
        319769: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("913144"),
                s = n("546463"),
                l = n("269180"),
                i = n("860285");

            function r(e) {
                let {
                    gameId: t
                } = e;
                ! function(e) {
                    let t;
                    let n = i.default.launchableGames[e],
                        r = s.default.getGame(e);
                    (t = null != r ? l.default.isLaunchable(r) : l.default.isGameLaunchable(e)).then(t => {
                        t !== n && a.default.dispatch({
                            type: "GAME_LAUNCHABLE_UPDATE",
                            gameId: e,
                            isLaunchable: t
                        })
                    })
                }(t)
            }
            var o = {
                initialize() {
                    a.default.subscribe("CHECK_LAUNCHABLE_GAME", r)
                }
            }
        },
        506377: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("70614"),
                s = n("686470"),
                l = n("167726"),
                i = {
                    init() {
                        s.default.whenInitialized(() => {
                            null != l.default.testModeApplicationId && (0, a.authorizeAndSetTestModeApplication)(l.default.testModeApplicationId, l.default.testModeOriginURL)
                        })
                    }
                }
        },
        318915: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("913144"),
                s = n("190017"),
                l = n("271938"),
                i = n("602043");

            function r() {
                if (!(0, i.isSupportedPlatform)()) return;
                let e = l.default.getToken(),
                    t = l.default.getId();
                if (null == e) throw Error("missing user token");
                s.init(e, t)
            }

            function o() {
                s.destroy()
            }
            var u = {
                init() {
                    a.default.subscribe("CONNECTION_OPEN", r), a.default.subscribe("LOGOUT", o)
                }
            }
        },
        288207: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            let a = new Set(["nvidia"]);

            function s(e) {
                for (let t of Object.keys(e)) {
                    let n = e[t];
                    if (null != n && null == n.error && a.has(t)) return !0
                }
                return !1
            }
        },
        709496: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("570277"),
                s = n.n(a),
                l = n("773336");
            let i = {
                [l.PlatformTypes.WINDOWS]: {
                    nvidia: ">=397.93.0"
                }
            };

            function r(e) {
                let t = i[(0, l.getPlatform)()];
                if (null == t) return !1;
                for (let n of Object.keys(e)) {
                    let a = e[n],
                        l = t[n];
                    if (null == a || null == l || null != a.error) continue;
                    let i = function(e) {
                        var t, n;
                        return "".concat(null !== (t = e.major) && void 0 !== t ? t : 0, ".").concat(null !== (n = e.minor) && void 0 !== n ? n : 0, ".0")
                    }(a);
                    if (!s.satisfies(i, l)) return !0
                }
                return !1
            }
        },
        767960: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("773336"),
                i = n("50885"),
                r = n("288207"),
                o = n("709496");
            let u = !1,
                d = !0;
            class c extends a.default.Store {
                initialize() {
                    !(!l.isPlatformEmbedded || __OVERLAY__) && i.default.getGPUDriverVersions().then(e => {
                        u = (0, o.default)(e), d = (0, r.default)(e), this.emitChange()
                    })
                }
                get GPUDriversOutdated() {
                    return u
                }
                get canUseHardwareAcceleration() {
                    return d
                }
                getState() {
                    return {
                        GPUDriversOutdated: u,
                        canUseHardwareAcceleration: d
                    }
                }
            }
            c.displayName = "StreamingCapabilitiesStore";
            var E = new c(s.default, {
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        streamingCapabilitiesStoreState: t
                    } = e;
                    u = t.GPUDriversOutdated, d = t.canUseHardwareAcceleration
                }
            })
        },
        712258: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("990766"),
                s = n("373469"),
                l = n("42203"),
                i = n("305961"),
                r = n("42887"),
                o = n("957255"),
                u = n("568307"),
                d = n("18494"),
                c = n("703370"),
                E = n("223913"),
                f = n("479788"),
                _ = n("375202");

            function I() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                if (!(0, f.default)(r.default) || null != s.default.getCurrentUserActiveStream()) return !1;
                let t = (0, _.default)(u.default, c.default);
                if (null == t || t.isLauncher && !e) return !1;
                let n = d.default.getVoiceChannelId(),
                    I = l.default.getChannel(n);
                if (null == I) return !1;
                let h = I.getGuildId();
                return !!(0, E.canStreamInChannel)(I, i.default, o.default, !1) && ((0, a.startStream)(h, I.id, {
                    pid: t.pid
                }), !0)
            }
        },
        145067: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                showGuildHeaderPopout: function() {
                    return i
                },
                useGuildHeaderPopoutStore: function() {
                    return r
                }
            });
            var a = n("308503");
            let s = Object.freeze({
                    isPopoutOpen: !1
                }),
                l = (0, a.default)(e => s),
                i = e => {
                    l.setState(() => ({
                        isPopoutOpen: e
                    }))
                },
                r = l
        },
        963103: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("316693"),
                s = n("446674"),
                l = n("923959"),
                i = n("957255"),
                r = n("49111");

            function o(e) {
                var t;
                let n = (0, s.useStateFromStores)([l.default], () => null !== (t = l.default.getChannels(e)[l.GUILD_SELECTABLE_CHANNELS_KEY]) && void 0 !== t ? t : [], [e]);
                if (0 === n.length) return 0;
                let o = n.filter(e => {
                    let {
                        channel: t
                    } = e;
                    return i.default.can(a.default.combine(r.Permissions.SEND_MESSAGES, r.Permissions.VIEW_CHANNEL), t)
                });
                return o.length
            }
        },
        381065: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("466818"),
                o = n("645266"),
                u = n("305961"),
                d = n("18494"),
                c = n("162771"),
                E = n("109024"),
                f = n("45029"),
                _ = n("489622"),
                I = n("398654"),
                h = n("712125"),
                C = n("311161"),
                T = n("49111"),
                m = n("724210"),
                S = n("782340"),
                N = n("17629");

            function A(e) {
                var t, A;
                let {
                    onDismiss: p
                } = e, g = (0, l.useStateFromStores)([c.default], () => c.default.getGuildId()), R = (0, l.useStateFromStores)([d.default], () => null != g ? d.default.getChannelId(g) : null, [g]), O = (0, I.useFirstGuildIncidentId)(), L = (0, l.useStateFromStores)([u.default], () => null != O ? u.default.getGuild(O) : null, [O]), {
                    shouldShowIncidentActions: M,
                    incidentData: v,
                    isUnderLockdown: D
                } = (0, I.useGuildIncidentsState)(O), x = (0, r.useCanAccessMemberSafetyPage)(null !== (t = null == L ? void 0 : L.id) && void 0 !== t ? t : ""), P = s.useCallback(() => null != L && (0, o.goToMemberSafetyDashboard)(L.id), [L]);
                if (null == L || null == v || !M) return null;
                let y = e => {
                        if (!(e && x && R !== m.StaticChannelRoute.MEMBER_SAFETY && P()))(0, i.openModalLazy)(async () => {
                            let e = {
                                    source: h.GuildIncidentActionSources.NAGBAR,
                                    alertType: (0, C.getIncidentAlertType)(v)
                                },
                                {
                                    default: t
                                } = await n.el("186638").then(n.bind(n, "186638"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guildId: L.id,
                                analyticsData: e
                            })
                        })
                    },
                    b = (0, a.jsx)(E.default, {
                        className: N.guildIcon,
                        guild: L,
                        size: E.default.Sizes.MINI
                    }),
                    U = (0, C.getSecurityActionDetailsString)(v, L.name),
                    G = null !== (A = v.dmsDisabledUntil) && void 0 !== A ? A : v.invitesDisabledUntil;
                if (null != G && D) return (0, a.jsxs)(_.default, {
                    className: N.notice,
                    color: _.NoticeColors.NEUTRAL,
                    children: [(0, a.jsx)(_.NoticeCloseButton, {
                        onClick: p,
                        noticeType: T.NoticeTypes.GUILD_RAID_NOTIFICATION
                    }), b, U, (0, a.jsx)(_.NoticeButton, {
                        className: N.actionButton,
                        onClick: () => y(!1),
                        children: (0, a.jsxs)("div", {
                            className: N.actionButtonInner,
                            children: [(0, a.jsx)(f.default, {
                                width: 16,
                                height: 16
                            }), (0, a.jsx)("span", {
                                children: S.default.Messages.GUILD_ANTIRAID_LOCKDOWN_NAGBAR_ACTION
                            })]
                        })
                    })]
                });
                let j = (0, C.hasDetectedRaid)(v) ? S.default.Messages.GUILD_ANTIRAID_NAGBAR_RAID_MESSAGE_2_NEW.format({
                        guildName: L.name
                    }) : (0, C.hasDetectedDMRaid)(v) ? S.default.Messages.GUILD_ANTIRAID_NAGBAR_DM_RAID_MESSAGE_2_NEW.format({
                        guildName: L.name
                    }) : S.default.Messages.GUILD_ANTIRAID_NAGBAR_MESSAGE_2_NEW.format({
                        guildName: L.name
                    }),
                    F = x && R === m.StaticChannelRoute.MEMBER_SAFETY;
                return (0, a.jsxs)(_.default, {
                    className: N.notice,
                    color: _.NoticeColors.WARNING,
                    children: [(0, a.jsx)(_.NoticeCloseButton, {
                        onClick: p,
                        noticeType: T.NoticeTypes.GUILD_RAID_NOTIFICATION
                    }), b, j, !F && (0, a.jsx)(_.NoticeButton, {
                        className: N.actionButton,
                        onClick: () => y(!0),
                        children: (0, a.jsx)("div", {
                            className: N.actionButtonInner,
                            children: (0, a.jsx)("span", {
                                children: S.default.Messages.GUILD_ANTIRAID_NAGBAR_ACTION_VIEW
                            })
                        })
                    })]
                })
            }
        },
        840968: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("489622"),
                l = n("956967"),
                i = n("782340"),
                r = n("185401");

            function o(e) {
                let {
                    guildId: t,
                    analyticsLocations: n,
                    analyticsLocation: o
                } = e, [u, d] = (0, l.useOpenFixQuarantinedProfileModal)({
                    guildId: t,
                    analyticsLocations: n,
                    analyticsLocation: o,
                    openWithoutBackstack: !0
                }), c = d ? i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE : i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE_NO_PERMS, E = d ? i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE_CTA : i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_ACCOUNT_USERNAME_CTA;
                return (0, a.jsxs)(s.default, {
                    color: s.NoticeColors.CUSTOM,
                    className: r.quarantineNotice,
                    children: [c, (0, a.jsx)(s.NoticeButton, {
                        onClick: u,
                        children: E
                    })]
                })
            }
        },
        668214: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                AutomodCustomBlockMessageUpsellTooltip: function() {
                    return T
                },
                GuildMentionRaidLimitUpsellTooltip: function() {
                    return m
                },
                GuildAntiRaidUpsellTooltip: function() {
                    return S
                },
                AutomodUserProfileUpsellTooltip: function() {
                    return N
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("733724"),
                i = n("77078"),
                r = n("413476"),
                o = n("592407"),
                u = n("5667"),
                d = n("561359"),
                c = n("599110"),
                E = n("523096"),
                f = n("49111"),
                _ = n("782340"),
                I = n("325223");

            function h() {
                let e = (0, E.getAutomodAvatarURL)(!0);
                return (0, a.jsx)("div", {
                    children: (0, a.jsx)(i.Avatar, {
                        src: e,
                        size: i.AvatarSizes.SIZE_40,
                        "aria-label": _.default.Messages.GUILD_AUTOMOD_USERNAME
                    })
                })
            }

            function C(e) {
                let {
                    guildId: t,
                    onDismissed: n,
                    contentHeader: r,
                    contentBody: E,
                    acceptButtonText: C,
                    dismissButtonText: T,
                    imageHeader: m,
                    analyticsTooltipViewedType: S,
                    onAccept: N,
                    onInitialized: A
                } = e, p = null != N ? N : () => {
                    n(), o.default.open(t, f.GuildSettingsSections.GUILD_AUTOMOD), o.default.setSection(f.GuildSettingsSections.GUILD_AUTOMOD)
                };
                return s.useEffect(() => {
                    null != A && A()
                }, [A]), (0, a.jsx)(u.default, {
                    className: I.message,
                    header: r,
                    content: E,
                    onComponentMount: () => {
                        null != S && c.default.track(f.AnalyticEvents.TOOLTIP_VIEWED, {
                            type: S,
                            location: {
                                page: f.AnalyticsPages.GUILD_CHANNEL
                            }
                        })
                    },
                    asset: (0, a.jsx)("div", {
                        className: I.container,
                        children: (0, a.jsxs)("div", {
                            className: I.card,
                            children: [(0, a.jsx)(h, {}), (0, a.jsxs)("div", {
                                className: I.content,
                                children: [(0, a.jsxs)("div", {
                                    className: I.name,
                                    children: [(0, a.jsx)(i.Text, {
                                        variant: "text-sm/semibold",
                                        color: "text-brand",
                                        className: I.nameText,
                                        children: null != m ? m : _.default.Messages.GUILD_AUTOMOD_DEFAULT_UPSELL_ASSET_HEADER
                                    }), (0, a.jsx)(d.default, {
                                        width: 16,
                                        height: 16,
                                        color: l.default.BLUE_345,
                                        className: I.shield
                                    })]
                                }), (0, a.jsx)("div", {
                                    className: I.spoiler
                                })]
                            })]
                        })
                    }),
                    buttonCTA: null != C ? C : _.default.Messages.GUILD_AUTOMOD_DEFAULT_UPSELL_CTA,
                    onClick: p,
                    secondaryButtonCTA: null != T ? T : _.default.Messages.GUILD_AUTOMOD_DEFAULT_UPSELL_DISMISSAL,
                    markAsDismissed: n
                })
            }

            function T(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(C, {
                    guildId: t,
                    onDismissed: n,
                    contentHeader: _.default.Messages.GUILD_AUTOMOD_CUSTOM_BLOCK_MESSAGE_UPSELL_HEADER,
                    contentBody: _.default.Messages.GUILD_AUTOMOD_CUSTOM_BLOCK_MESSAGE_UPSELL_CONTENT.format(),
                    analyticsTooltipViewedType: "guild_automod_custom_block_message"
                })
            }

            function m(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(C, {
                    guildId: t,
                    onDismissed: n,
                    imageHeader: _.default.Messages.GUILD_MENTION_RAID_LIMIT_UPSELL_ASSET_HEADER,
                    contentHeader: _.default.Messages.GUILD_MENTION_RAID_LIMIT_UPSELL_HEADER,
                    contentBody: _.default.Messages.GUILD_MENTION_RAID_LIMIT_UPSELL_CONTENT,
                    analyticsTooltipViewedType: "guild_mention_raid_limit",
                    onAccept: () => {
                        n(), o.default.open(t, f.GuildSettingsSections.GUILD_AUTOMOD), o.default.setSection(f.GuildSettingsSections.GUILD_AUTOMOD, f.GuildSettingsSubsections.AUTOMOD_MENTION_SPAM)
                    }
                })
            }

            function S(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(C, {
                    guildId: t,
                    onDismissed: n,
                    imageHeader: _.default.Messages.GUILD_ANTIRAID_UPSELL_ASSET_HEADER,
                    contentHeader: _.default.Messages.GUILD_ANTIRAID_UPSELL_HEADER,
                    contentBody: _.default.Messages.GUILD_ANTIRAID_UPSELL_CONTENT.format(),
                    analyticsTooltipViewedType: "guild_anti_raid_upsell",
                    dismissButtonText: _.default.Messages.GUILD_ANTIRAID_UPSELL_DISMISSAL,
                    onAccept: () => {
                        n(), o.default.open(t, f.GuildSettingsSections.MODERATION)
                    },
                    onInitialized: () => {
                        r.RaidAlertExperiment.trackExposure({
                            guildId: t,
                            location: "4de95f_1"
                        })
                    }
                })
            }

            function N(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(C, {
                    guildId: t,
                    onDismissed: n,
                    contentHeader: _.default.Messages.AUTOMOD_USER_PROFILE_UPSELL_HEADER,
                    contentBody: _.default.Messages.AUTOMOD_USER_PROFILE_UPSELL_CONTENT.format(),
                    analyticsTooltipViewedType: "guild_automod_user_profile"
                })
            }
        },
        48821: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("363025"),
                r = n("963662"),
                o = n("592407"),
                u = n("735201"),
                d = n("427459"),
                c = n("49111"),
                E = n("782340"),
                f = n("557659"),
                _ = e => {
                    let {
                        guild: t
                    } = e, n = t.id, _ = (0, s.useStateFromStores)([u.default], () => u.default.getAppliedGuildBoostsForGuild(t.id));
                    return null == _ || 0 >= (0, d.appliedGuildBoostsRequiredForPerks)(_, n) ? null : (0, a.jsx)(r.default, {
                        guild: t,
                        onDismissed: () => {
                            (0, i.hidePremiumGuildGracePeriodNotice)(n)
                        },
                        onClick: () => {
                            o.default.open(n, c.GuildSettingsSections.GUILD_PREMIUM)
                        },
                        message: E.default.Messages.PREMIUM_GUILD_GRACE_PERIOD_NOTICE,
                        trackingSource: c.ChannelNoticeCtaSources.GRACE_PERIOD_NOTICE,
                        type: c.ChannelNoticeTypes.GUILD_BOOSTING_GRACE_PERIOD,
                        image: f,
                        cta: E.default.Messages.PREMIUM_GUILD_GRACE_PERIOD_NOTICE_BUTTON,
                        ctaColor: l.ButtonColors.PRIMARY
                    })
                }
        },
        388437: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("812204"),
                l = n("685665"),
                i = n("963662"),
                r = n("379532"),
                o = n("427459"),
                u = n("49111"),
                d = n("944305"),
                c = n("782340"),
                E = n("65016");

            function f(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e, f = (0, o.getNumberOfAppliedBoostsNeededForTier)(t, u.BoostedGuildTiers.TIER_2), {
                    analyticsLocations: _
                } = (0, l.default)(s.default.GUILD_BANNER_NOTICE);
                return (0, a.jsx)(i.default, {
                    guild: t,
                    onDismissed: n,
                    cta: c.default.Messages.GUILD_BANNER_NOTICE_CTA,
                    message: c.default.Messages.GUILD_BANNER_NOTICE.format({
                        boostsNeeded: f
                    }),
                    type: u.ChannelNoticeTypes.GUILD_BANNER,
                    image: E,
                    onClick: () => (0, r.default)({
                        analyticsLocations: _,
                        analyticsSourceLocation: {
                            section: u.AnalyticsSections.CHANNEL_NOTICE,
                            object: u.AnalyticsObjects.SERVER_BANNER_TOOLTIP
                        },
                        guild: t,
                        perks: (0, d.guildBannerUpsellPerks)()
                    }),
                    imageMarginTop: 15,
                    imageMarginX: 22
                })
            }
        },
        667048: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("963662"),
                r = n("95039"),
                o = n("525065"),
                u = n("49111"),
                d = n("782340"),
                c = n("367574");
            class E extends s.PureComponent {
                render() {
                    let {
                        guild: e,
                        memberCount: t,
                        markAsDismissed: n
                    } = this.props;
                    return (0, a.jsx)(i.default, {
                        guild: e,
                        onDismissed: n,
                        onClick: this.handleButtonClick,
                        message: null == t || t < 30 ? d.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE_SMALL_GUILD : d.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE,
                        cta: d.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE_BUTTON,
                        trackingSource: u.ChannelNoticeCtaSources.GUILD_SUBSCRIPTION_NOTICE,
                        type: u.ChannelNoticeTypes.GUILD_BOOSTING,
                        image: c,
                        imageMarginX: 26
                    })
                }
                constructor(...e) {
                    super(...e), this.handleButtonClick = () => {
                        let {
                            guild: e
                        } = this.props;
                        (0, r.openGuildBoostingMarketingModal)({
                            guildId: e.id,
                            location: {
                                section: u.AnalyticsSections.CHANNEL_NOTICE,
                                object: u.AnalyticsObjects.SERVER_STATUS_CTA
                            }
                        })
                    }
                }
            }
            var f = l.default.connectStores([o.default], e => {
                let {
                    guild: t
                } = e;
                return {
                    memberCount: o.default.getMemberCount(t.id)
                }
            })(E)
        },
        580362: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isContentDismissed: function() {
                    return _
                },
                useIsContentDismissed: function() {
                    return I
                },
                markContentAsDismissed: function() {
                    return h
                },
                useIsGuildDismissibleContentChannelNoticeShown: function() {
                    return C
                }
            });
            var a = n("446674"),
                s = n("151426"),
                l = n("570319"),
                i = n("762887"),
                r = n("872173"),
                o = n("374363"),
                u = n("599110"),
                d = n("674268"),
                c = n("49111"),
                E = n("994428"),
                f = n("397336");

            function _(e, t) {
                let n = o.default.getDismissedGuildContent(t);
                return null != n && (0, d.hasBit)(n, e)
            }

            function I(e, t) {
                return (0, a.useStateFromStores)([o.default], () => _(e, t))
            }

            function h(e, t, n, a) {
                (0, r.updateUserGuildSettings)(t, n => {
                    if (_(e, t)) return !1;
                    n.dismissedGuildContent = (0, d.addBit)(n.dismissedGuildContent, e)
                }, f.UserSettingsDelay.INFREQUENT_USER_ACTION), n && u.default.track(c.AnalyticEvents.DISMISSIBLE_CONTENT_DISMISSED, {
                    type: s.DismissibleGuildContent[e],
                    guild_id: t,
                    action: null != a ? a : E.ContentDismissActionType.UNKNOWN
                })
            }

            function C(e) {
                let t = (0, i.default)(e),
                    n = (0, l.default)(e);
                return !!t && !_(s.DismissibleGuildContent.SUMMARIES_NOTICE, e) || !!n && !_(s.DismissibleGuildContent.CLYDE_GUILD_NOTICE_NUX, e) || !1
            }
        },
        754707: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("77078"),
                r = n("402309"),
                o = n("599110"),
                u = n("991170"),
                d = n("580362"),
                c = n("49111"),
                E = n("994428"),
                f = n("695838"),
                _ = n("69741");

            function I(e) {
                var t;
                let I = (0, r.useCanCurrentUserViewDisableUnsafeGuildSettingsNotice)(e),
                    h = _.MODERATOR_PERMISSIONS.some(t => (null == e ? void 0 : e.id) !== f.FAVORITES_RAW_GUILD_ID && u.default.canEveryone(t, e)),
                    C = (null == e ? void 0 : e.defaultMessageNotifications) === c.UserNotificationSettings.ALL_MESSAGES,
                    T = (0, d.useIsContentDismissed)(l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : ""),
                    m = I && (h || C) && !T,
                    S = s.useCallback(() => {
                        var t;
                        (0, d.markContentAsDismissed)(l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "", !0, E.ContentDismissActionType.DISMISS)
                    }, [e]),
                    N = s.useRef(!1);
                s.useEffect(() => {
                    if (m && !N.current) {
                        var t;
                        (0, i.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await n.el("675454").then(n.bind(n, "675454"));
                            return n => (0, a.jsx)(t, {
                                guild: e,
                                canEveryoneModerate: h,
                                isDefaultNotificationsAllMessages: C,
                                ...n
                            })
                        }, {
                            onCloseCallback: S
                        }), o.default.track(c.AnalyticEvents.DISMISSIBLE_CONTENT_SHOWN, {
                            type: l.DismissibleGuildContent[l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE],
                            guild_id: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : ""
                        }), N.current = !0
                    }
                }, [h, e, S, C, m])
            }
        },
        527714: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("77078"),
                r = n("247030"),
                o = n("599110"),
                u = n("580362"),
                d = n("49111"),
                c = n("994428");

            function E(e) {
                var t;
                let E = (0, r.default)(null == e ? void 0 : e.id),
                    f = (0, u.useIsContentDismissed)(l.DismissibleGuildContent.SUMMARIES_ENABLED_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : ""),
                    _ = E && !f,
                    I = s.useCallback(() => {
                        var t;
                        (0, u.markContentAsDismissed)(l.DismissibleGuildContent.SUMMARIES_ENABLED_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "", !0, c.ContentDismissActionType.DISMISS)
                    }, [e]),
                    h = s.useRef(!1);
                s.useEffect(() => {
                    if (_ && !h.current) {
                        var t;
                        (0, i.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("390251").then(n.bind(n, "390251"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        }, {
                            onCloseCallback: I
                        }), o.default.track(d.AnalyticEvents.DISMISSIBLE_CONTENT_SHOWN, {
                            type: l.DismissibleGuildContent[l.DismissibleGuildContent.SUMMARIES_ENABLED_NOTICE],
                            guild_id: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : ""
                        }), h.current = !0
                    }
                }, [e, I, _])
            }
        },
        404103: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("611221"),
                s = n("913144"),
                l = n("316272"),
                i = n("887446"),
                r = n("582713"),
                o = n("271938"),
                u = n("982108"),
                d = n("42203"),
                c = n("18494"),
                E = n("162771"),
                f = n("599110"),
                _ = n("713810"),
                I = n("185014"),
                h = n("886484"),
                C = n("60036"),
                T = n("2804"),
                m = n("515631"),
                S = n("49111"),
                N = n("724210");
            class A extends l.default {
                _initialize() {
                    s.default.subscribe("MESSAGE_REACTION_ADD", this.handleReaction), s.default.subscribe("MESSAGE_REACTION_REMOVE", this.handleReaction), s.default.subscribe("SIDEBAR_VIEW_CHANNEL", this.handleSidebarViewChannel), s.default.subscribe("MESSAGE_CREATE", this.handleMessageCreate), s.default.subscribe("APP_STATE_UPDATE", this.handleAppStateUpdate)
                }
                _terminate() {
                    s.default.unsubscribe("MESSAGE_REACTION_ADD", this.handleReaction), s.default.unsubscribe("MESSAGE_REACTION_REMOVE", this.handleReaction), s.default.unsubscribe("SIDEBAR_VIEW_CHANNEL", this.handleSidebarViewChannel), s.default.unsubscribe("MESSAGE_CREATE", this.handleMessageCreate), s.default.unsubscribe("APP_STATE_UPDATE", this.handleAppStateUpdate)
                }
                handleReaction(e) {
                    let {
                        type: t,
                        userId: n,
                        messageId: a,
                        optimistic: s
                    } = e;
                    if (n !== o.default.getId() || !s) return;
                    let l = E.default.getGuildId();
                    if (null == l) return;
                    let r = c.default.getChannelId();
                    if (!(0, N.isGuildHomeChannel)(r)) return;
                    let u = I.default.getItemForMessageId(l, a);
                    if (null == u) return;
                    let d = (0, C.default)(u);
                    (0, _.trackFeedItemInteracted)({
                        feed_item_type: (0, T.getFeedItemTypeFromId)(u.id),
                        feed_item_id: u.id,
                        load_id: I.default.getLoadId(l),
                        action_type: "MESSAGE_REACTION_ADD" === t ? m.FeedItemInteractionType.REACTION_ADDED : m.FeedItemInteractionType.REACTION_REMOVED,
                        guild_id: l,
                        channel_id: d.channel_id,
                        message_id: a,
                        home_session_id: i.default.getHomeSessionId(l)
                    })
                }
                handleSidebarViewChannel(e) {
                    let {
                        channelId: t,
                        baseChannelId: n,
                        sidebarType: s
                    } = e;
                    if (s !== r.SidebarType.VIEW_THREAD || !(0, N.isGuildHomeChannel)(n)) return;
                    let l = E.default.getGuildId();
                    if (null == l) return;
                    let o = I.default.getItemForMessageId(l, t);
                    if (null != o) o.type !== a.GuildFeedItemTypes.FORUM_POST && (0, _.trackFeedItemInteracted)({
                        feed_item_type: (0, T.getFeedItemTypeFromId)(o.id),
                        feed_item_id: o.id,
                        load_id: I.default.getLoadId(l),
                        action_type: m.FeedItemInteractionType.THREAD_EMBED_CLICKED,
                        guild_id: l,
                        channel_id: (0, h.getChannelIdForItem)(o),
                        message_id: t,
                        home_session_id: i.default.getHomeSessionId(l)
                    })
                }
                handleMessageCreate(e) {
                    let t, n, {
                        optimistic: a,
                        message: s
                    } = e;
                    if (!a || s.state !== S.MessageStates.SENDING) return;
                    let l = E.default.getGuildId();
                    if (null == l) return;
                    let r = u.default.getSidebarState(N.StaticChannelRoute.GUILD_HOME);
                    if (null == r || !(0, u.isViewChannelSidebar)(r)) return;
                    let o = d.default.getChannel(r.channelId),
                        c = (0, h.getSidebarMessageId)(r, o);
                    if (null == c) return;
                    let f = I.default.getItemForMessageId(l, c);
                    if (null != f) {
                        if (s.type === S.MessageTypes.DEFAULT) t = m.FeedItemInteractionType.MESSAGED_IN_SIDEBAR, n = c;
                        else if (s.type === S.MessageTypes.REPLY) {
                            var C, A;
                            n = null === (C = s.message_reference) || void 0 === C ? void 0 : C.message_id, t = (null === (A = s.message_reference) || void 0 === A ? void 0 : A.message_id) === c ? m.FeedItemInteractionType.REPLIED_TO_MESSAGE : m.FeedItemInteractionType.REPLIED_IN_SIDEBAR
                        }
                        null != t && (0, _.trackFeedItemInteracted)({
                            feed_item_type: (0, T.getFeedItemTypeFromId)(f.id),
                            feed_item_id: f.id,
                            load_id: I.default.getLoadId(l),
                            action_type: t,
                            guild_id: l,
                            channel_id: s.channel_id,
                            message_id: n,
                            home_session_id: i.default.getHomeSessionId(l)
                        })
                    }
                }
                handleAppStateUpdate(e) {
                    let {
                        state: t
                    } = e;
                    if ("background" !== t) return;
                    let n = E.default.getGuildId();
                    null != n && f.default.track(S.AnalyticEvents.HOME_BACKGROUNDED, {
                        guild_id: n,
                        home_session_id: i.default.getHomeSessionId(n),
                        load_id: I.default.getLoadId(n)
                    })
                }
            }
            var p = new A
        },
        468670: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("118810"),
                s = n("887446"),
                l = n("713810"),
                i = n("185014"),
                r = n("60036"),
                o = n("2804"),
                u = n("515631");

            function d(e, t, n) {
                let {
                    feedItemId: r,
                    guildId: d,
                    channelId: c,
                    messageId: E
                } = n, f = e.target;
                for (;
                    (0, a.isElement)(f);) {
                    var _, I;
                    if (f === t) break;
                    let e = null !== (I = null === (_ = f.getAttribute("data-role")) || void 0 === _ ? void 0 : _.toUpperCase()) && void 0 !== I ? I : f.tagName;
                    if ("A" === e) return (0, l.trackFeedItemInteracted)({
                        feed_item_type: (0, o.getFeedItemTypeFromId)(r),
                        feed_item_id: r,
                        load_id: i.default.getLoadId(d),
                        action_type: u.FeedItemInteractionType.LINK_CLICKED,
                        guild_id: d,
                        channel_id: c,
                        message_id: E,
                        home_session_id: s.default.getHomeSessionId(d)
                    }), !0;
                    if ("IMG" === e) return (0, l.trackFeedItemInteracted)({
                        feed_item_type: (0, o.getFeedItemTypeFromId)(r),
                        feed_item_id: r,
                        load_id: i.default.getLoadId(d),
                        action_type: u.FeedItemInteractionType.IMAGE_CLICKED,
                        guild_id: d,
                        channel_id: c,
                        message_id: E,
                        home_session_id: s.default.getHomeSessionId(d)
                    }), !0;
                    else if ("BUTTON" === e || "button" === f.getAttribute("role")) {
                        let e = u.FeedItemInteractionType.BUTTON_CLICKED;
                        if ("view-more-replies" === f.getAttribute("data-action")) e = u.FeedItemInteractionType.VIEW_MORE_REPLIES;
                        return (0, l.trackFeedItemInteracted)({
                            feed_item_type: (0, o.getFeedItemTypeFromId)(r),
                            feed_item_id: r,
                            load_id: i.default.getLoadId(d),
                            action_type: e,
                            guild_id: d,
                            channel_id: c,
                            message_id: E,
                            home_session_id: s.default.getHomeSessionId(d)
                        }), !0
                    }
                    f = f.parentNode
                }
                return !1
            }

            function c(e) {
                let {
                    guildId: t,
                    channelId: n,
                    feedItemId: a,
                    onChannelClick: c,
                    onContentClick: E
                } = e, f = (e, d) => {
                    var c;
                    e.stopPropagation();
                    let f = i.default.getItem(t, a);
                    null != f && ((0, l.trackFeedItemInteracted)({
                        feed_item_type: (0, o.getFeedItemTypeFromId)(a),
                        feed_item_id: a,
                        load_id: i.default.getLoadId(t),
                        action_type: u.FeedItemInteractionType.MESSAGE_CLICKED,
                        guild_id: t,
                        channel_id: n,
                        message_id: null !== (c = null == d ? void 0 : d.id) && void 0 !== c ? c : (0, r.default)(f).id,
                        home_session_id: s.default.getHomeSessionId(t)
                    }), E(d))
                };
                return {
                    handleMessageClick: (e, s, l) => {
                        e.stopPropagation(), !d(e, s, {
                            feedItemId: a,
                            guildId: t,
                            channelId: n,
                            messageId: l.id
                        }) && f(e, l)
                    },
                    handleChannelClick: e => {
                        e.stopPropagation(), (0, l.trackFeedItemInteracted)({
                            feed_item_type: (0, o.getFeedItemTypeFromId)(a),
                            feed_item_id: a,
                            load_id: i.default.getLoadId(t),
                            action_type: u.FeedItemInteractionType.MESSAGE_CHANNEL_CLICKED,
                            guild_id: t,
                            channel_id: n,
                            home_session_id: s.default.getHomeSessionId(t)
                        }), c()
                    },
                    handleCardClick: (e, s) => {
                        !d(e, s, {
                            feedItemId: a,
                            guildId: t,
                            channelId: n
                        }) && f(e)
                    },
                    handleItemClick: f
                }
            }
        },
        465519: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getFeaturedExpirationTextColor: function() {
                    return r
                },
                areSecondLevelArraysEqual: function() {
                    return o
                }
            });
            var a = n("866227"),
                s = n.n(a),
                l = n("669491"),
                i = n("886484");
            let r = e => {
                let t = s(e).diff(s(), "s");
                return t <= i.FEATURE_EXPIRES_SECONDS.ONE_DAY ? l.default.colors.TEXT_DANGER : t <= i.FEATURE_EXPIRES_SECONDS.THREE_DAYS ? l.default.colors.TEXT_WARNING : l.default.colors.TEXT_POSITIVE
            };

            function o(e, t) {
                if (e.length !== t.length) return !1;
                for (let n = 0; n < e.length; n++) {
                    let a = e[n],
                        s = t[n];
                    if (a.length !== s.length || !a.some((e, t) => s[t] !== e)) return !1
                }
                return !0
            }
        },
        530853: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return j
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("355262"),
                o = n("446674"),
                u = n("77078"),
                d = n("272030"),
                c = n("679653"),
                E = n("419830"),
                f = n("537325"),
                _ = n("208021"),
                I = n("582713"),
                h = n("982108"),
                C = n("42203"),
                T = n("27618"),
                m = n("449008"),
                S = n("185014"),
                N = n("886484"),
                A = n("60036"),
                p = n("468670"),
                g = n("465519"),
                R = n("344934"),
                O = n("113312"),
                L = n("339274"),
                M = n("605143"),
                v = n("759668"),
                D = n("449405"),
                x = n("49111"),
                P = n("724210"),
                y = n("782340"),
                b = n("520627");
            let U = async () => {
                let {
                    default: e
                } = await n.el("814781").then(n.bind(n, "814781"));
                return e
            };

            function G(e) {
                let {
                    item: t,
                    referenceMessageBundles: n,
                    channel: l,
                    guildId: r,
                    animateAvatar: o,
                    onMessageClick: d
                } = e, c = s.useCallback(() => {
                    var e, a;
                    let s = n[n.length - 2 + 1];
                    _.default.openChannelAsSidebar({
                        guildId: r,
                        channelId: l.id,
                        baseChannelId: P.StaticChannelRoute.GUILD_HOME,
                        flash: !1,
                        details: {
                            type: I.SidebarOpenDetailsType.HOME,
                            initialMessageId: null !== (a = null == s ? void 0 : null === (e = s[0]) || void 0 === e ? void 0 : e.id) && void 0 !== a ? a : n[0][0].id,
                            highlightMessageIds: new Set((0, A.getAllMessageIdsFromFeedItem)(t))
                        }
                    })
                }, [t, l, r, n]);
                return (0, a.jsxs)("div", {
                    className: b.conversationArea,
                    children: [n.slice(0, 2).map((e, t) => {
                        let s = e[0];
                        return null == s ? null : (0, a.jsx)(R.GuildFeedConversationReply, {
                            className: i(b.conversationMessage, {
                                [b.mentioned]: s.mentioned
                            }),
                            guildId: r,
                            channel: l,
                            message: s,
                            onMessageClick: d,
                            isTruncated: e.length > 1,
                            animateAvatar: o,
                            children: t !== n.length - 1 && (0, a.jsx)("div", {
                                className: b.replySpine
                            })
                        }, s.id)
                    }), n.length > 2 && (0, a.jsx)("div", {
                        className: i(b.conversationMessage, b.viewMoreReplies),
                        children: (0, a.jsx)(u.Clickable, {
                            onClick: c,
                            "data-action": "view-more-replies",
                            children: y.default.Messages.GUILD_FEED_TRUNCATED_REPLIES_VIEW_MORE.format({
                                count: n.length - 2
                            })
                        })
                    }, "view-more")]
                })
            }
            var j = s.forwardRef(function(e, t) {
                var n, l;
                let {
                    guildId: R,
                    conversationItem: j,
                    showFeedback: F,
                    setOnDismissedFeedback: k
                } = e, {
                    root: B
                } = j, {
                    messages: w,
                    children: H
                } = B, V = w[0], Y = w[w.length - 1], W = Y.channel_id, K = (0, o.useStateFromStoresArray)([S.default], () => w.map(e => S.default.getCachedMessage(R, W, e.id)).filter(m.isNotNullish), [R, W, w]), z = (0, o.useStateFromStores)([C.default], () => C.default.getChannel(W)), q = (0, E.getChannelIconComponent)(z, void 0, {
                    textFocused: !0
                }), Q = (0, E.getChannelIconTooltipText)(z), X = (0, c.default)(z), [J, Z] = s.useState(!1), $ = (0, o.useStateFromStores)([T.default], () => null != Y && T.default.isBlocked(Y.author.id)), ee = (0, r.useListItem)(null !== (l = null === (n = K[K.length - 1]) || void 0 === n ? void 0 : n.id) && void 0 !== l ? l : j.id), et = j.id, en = (0, o.useStateFromStores)([h.default], () => h.default.getSidebarState(P.StaticChannelRoute.GUILD_HOME)), ea = (0, N.getSidebarMessageId)(en, z), es = null != ea && V.id === ea, {
                    handleItemClick: el,
                    handleChannelClick: ei,
                    handleCardClick: er,
                    handleMessageClick: eo
                } = (0, p.default)({
                    guildId: R,
                    channelId: W,
                    feedItemId: et,
                    onChannelClick: () => (0, f.default)(x.Routes.CHANNEL(R, W, V.id)),
                    onContentClick: e => {
                        var t;
                        _.default.openChannelAsSidebar({
                            guildId: R,
                            channelId: W,
                            baseChannelId: P.StaticChannelRoute.GUILD_HOME,
                            flash: !1,
                            details: {
                                type: I.SidebarOpenDetailsType.HOME,
                                initialMessageId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : V.id,
                                highlightMessageIds: new Set((0, A.getAllMessageIdsFromFeedItem)(j))
                            }
                        })
                    }
                }), eu = (0, o.useStateFromStores)([S.default], () => null == z ? [] : H.map(e => e.messages.map(e => S.default.getCachedMessage(R, z.id, e.id)).filter(m.isNotNullish)).filter(e => 0 !== e.length), [R, z, H], g.areSecondLevelArraysEqual);
                if (null == z || null == V || null == Y || $) return null;
                let ed = e => {
                    e.stopPropagation(), (0, d.openContextMenuLazy)(e, async () => {
                        let e = await U();
                        return t => (0, a.jsx)(e, {
                            ...t,
                            item: j,
                            channel: z
                        })
                    })
                };
                return (0, a.jsxs)(L.default, {
                    className: F ? b.containerNoPadding : b.container,
                    ref: t,
                    selected: es,
                    onCardClick: er,
                    onItemClick: el,
                    onContextMenu: ed,
                    itemId: et,
                    ariaLabel: y.default.Messages.GUILD_FEED_MESSAGE_ITEM_A11Y_LABEL.format({
                        channelName: X
                    }),
                    listItemProps: ee,
                    onMouseEnter: () => Z(!0),
                    onMouseLeave: () => Z(!1),
                    children: [(0, a.jsxs)(u.HeadingLevel, {
                        component: (0, a.jsxs)(M.default, {
                            children: [(0, a.jsx)("div", {
                                className: b.messageHeaderMenuLeft,
                                children: (0, a.jsxs)(u.Clickable, {
                                    className: b.channelNameContainer,
                                    onClick: ei,
                                    children: [null != q ? (0, a.jsx)(u.Tooltip, {
                                        text: Q,
                                        delay: 500,
                                        children: e => (0, a.jsx)(q, {
                                            ...e,
                                            className: b.channelIcon,
                                            height: 16,
                                            width: 16
                                        })
                                    }) : null, (0, a.jsx)(u.Heading, {
                                        lineClamp: 1,
                                        variant: "heading-sm/semibold",
                                        children: X
                                    })]
                                })
                            }), (0, a.jsx)("div", {
                                className: b.messageHeaderMenuRight,
                                children: (0, a.jsx)(v.default, {
                                    feedItem: j,
                                    guildId: R,
                                    onContextMenu: ed
                                })
                            })]
                        }),
                        children: [(0, a.jsx)("div", {
                            className: i(b.messageBundleItemBody, {
                                [b.conversationRoot]: eu.length > 0,
                                [b.hasReply]: V.type === x.MessageTypes.REPLY
                            }),
                            children: (0, a.jsx)(D.default, {
                                feedItemId: j.id,
                                guildId: R,
                                channel: z,
                                messages: K,
                                animateAvatar: J,
                                onMessageClick: eo
                            })
                        }), (0, a.jsx)(G, {
                            item: j,
                            channel: z,
                            guildId: R,
                            referenceMessageBundles: eu,
                            onMessageClick: eo,
                            animateAvatar: J
                        })]
                    }), F && (0, a.jsx)(O.default, {
                        guildId: R,
                        guildFeedItem: j,
                        setOnDismissFeedback: k
                    })]
                })
            })
        },
        344934: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildFeedConversationReply: function() {
                    return N
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("574073"),
                u = n("865343"),
                d = n("909917"),
                c = n("380986"),
                E = n("969706"),
                f = n("39331"),
                _ = n("115859"),
                I = n("497880"),
                h = n("93332"),
                C = n("587904"),
                T = n("894488"),
                m = n("307078");

            function S(e) {
                let {
                    message: t,
                    guildId: n,
                    animateAvatar: l,
                    channel: i,
                    author: o
                } = e, {
                    popouts: f,
                    setPopout: _
                } = (0, E.default)(t.id, T.DEFAULT_POPOUTS), {
                    usernameProfile: I,
                    avatarProfile: S
                } = f, N = s.useMemo(() => e => (0, d.default)(e, t), [t]), A = (0, c.useContextMenuUser)(t.author.id, i.id), p = (0, c.useClickMessageAuthorUsername)(t, i, I, _), g = (0, c.useClickMessageAuthorAvatar)(S, _), R = s.useCallback(() => _({
                    usernameProfile: !1,
                    avatarProfile: !1,
                    referencedUsernameProfile: !1
                }), [_]), O = (0, h.useAvatar)({
                    props: {
                        message: t,
                        channel: i,
                        author: o,
                        guildId: n,
                        compact: !0,
                        displayCompactAvatars: !0,
                        animate: l,
                        showAvatarPopout: S,
                        showUsernamePopout: I,
                        onContextMenu: A,
                        onClickUsername: p,
                        onClickAvatar: g,
                        onPopoutRequestClose: R
                    },
                    guildId: n,
                    handleRenderPopout: N,
                    className: m.avatar
                }), L = (0, h.useUsername)(e, N), M = (0, u.getMessageUsernameId)(t), v = (0, u.getMessageTimestampId)(t), D = "".concat(M, " ").concat(v), x = (0, u.getMessageReplyId)(t);
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsxs)(r.H, {
                        className: m.header,
                        "aria-describedby": x,
                        "aria-labelledby": D,
                        children: [O, (0, a.jsx)("span", {
                            id: (0, u.getMessageUsernameId)(t),
                            className: m.username,
                            children: (0, a.jsx)(a.Fragment, {
                                children: L
                            })
                        }), (0, a.jsx)(C.default, {
                            id: (0, u.getMessageTimestampId)(t),
                            timestamp: t.timestamp,
                            className: m.timestamp
                        })]
                    })
                })
            }
            let N = s.forwardRef(function(e, t) {
                let {
                    message: n,
                    className: l,
                    onMessageClick: u,
                    children: d,
                    isTruncated: c,
                    channel: E,
                    guildId: h,
                    animateAvatar: C
                } = e, T = s.useRef(null), {
                    content: N,
                    hasSpoilerEmbeds: A
                } = (0, f.default)(n, {
                    hideSimpleEmbedContent: !0
                }), p = (0, o.default)(n), g = s.useCallback(e => {
                    u(e, T.current, n)
                }, [u, n]);
                return (0, a.jsxs)("div", {
                    ref: T,
                    className: l,
                    onClick: g,
                    role: "article",
                    children: [(0, a.jsx)(r.FocusRing, {
                        offset: {
                            left: 4,
                            right: 4
                        },
                        children: (0, a.jsxs)("div", {
                            children: [(0, a.jsxs)("div", {
                                children: [(0, a.jsx)(S, {
                                    author: p,
                                    message: n,
                                    channel: E,
                                    guildId: h,
                                    animateAvatar: C
                                }), (0, a.jsx)(I.default, {
                                    className: i(m.messageContent, {
                                        [m.truncatedReply]: c
                                    }),
                                    message: n,
                                    content: N,
                                    contentRef: t
                                })]
                            }), (0, _.default)({
                                className: m.accessories,
                                channelMessageProps: e,
                                hasSpoilerEmbeds: A,
                                isInteracting: !1
                            })]
                        })
                    }), d]
                })
            })
        },
        113312: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return F
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("301165"),
                o = n("819855"),
                u = n("77078"),
                d = n("841098"),
                c = n("601414"),
                E = n("137215"),
                f = n("945330"),
                _ = n("302120"),
                I = n("782340"),
                h = n("710611"),
                C = n("499255"),
                T = n("704936"),
                m = n("465988"),
                S = n("526954"),
                N = n("35296"),
                A = n("344665"),
                p = n("93556"),
                g = n("118913"),
                R = n("125134"),
                O = n("380493"),
                L = n("783858"),
                M = n("181482"),
                v = n("925107"),
                D = n("347124"),
                x = n("630344"),
                P = n("735468");
            let y = [{
                light: D,
                dark: v,
                selected: x,
                value: _.GuildFeedbackRating.TERRIBLE,
                altDescription: () => I.default.Messages.GUILD_FEED_FEEDBACK_RATING_TERRIBLE,
                description: () => I.default.Messages.GUILD_FEED_FEEDBACK_RATING_TERRIBLE
            }, {
                light: T,
                dark: C,
                selected: m,
                value: _.GuildFeedbackRating.BAD,
                altDescription: () => I.default.Messages.GUILD_FEED_FEEDBACK_RATING_BAD
            }, {
                light: L,
                dark: O,
                selected: M,
                value: _.GuildFeedbackRating.OKAY,
                altDescription: () => I.default.Messages.GUILD_FEED_FEEDBACK_RATING_OKAY
            }, {
                light: g,
                dark: p,
                selected: R,
                value: _.GuildFeedbackRating.GOOD,
                altDescription: () => I.default.Messages.GUILD_FEED_FEEDBACK_RATING_GOOD
            }, {
                light: N,
                dark: S,
                selected: A,
                value: _.GuildFeedbackRating.EXCELLENT,
                altDescription: () => I.default.Messages.GUILD_FEED_FEEDBACK_RATING_EXCELLENT,
                description: () => I.default.Messages.GUILD_FEED_FEEDBACK_RATING_EXCELLENT
            }];

            function b(e) {
                let {
                    defaultSrc: t,
                    selectedSrc: n,
                    selected: l,
                    disableAnimation: i,
                    alt: o
                } = e, [u, d] = (0, r.useSpring)(() => ({
                    from: {
                        opacity: 1
                    },
                    config: {
                        duration: i ? 0 : _.GUILD_FEED_FEEDBACK_ANIMATION_DURATION
                    }
                }), [l, i]), [c, E] = (0, r.useSpring)(() => ({
                    from: {
                        opacity: 0
                    },
                    config: {
                        duration: i ? 0 : _.GUILD_FEED_FEEDBACK_ANIMATION_DURATION
                    }
                }), [l, i]);
                return s.useEffect(() => {
                    l ? (d({
                        opacity: 0
                    }), E({
                        opacity: 1
                    })) : (d({
                        opacity: 1
                    }), E({
                        opacity: 0
                    }))
                }, [l, i, d, E]), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(r.animated.img, {
                        style: {
                            opacity: c.opacity
                        },
                        src: n,
                        width: 40,
                        height: 40,
                        alt: o
                    }), (0, a.jsx)(r.animated.img, {
                        className: h.ratingInner,
                        style: {
                            opacity: u.opacity
                        },
                        src: t,
                        width: 40,
                        height: 40,
                        alt: o
                    })]
                })
            }

            function U(e) {
                let {
                    selectedRating: t,
                    setSelectedRating: n,
                    disableAnimation: s
                } = e, l = (0, d.default)();
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(u.Heading, {
                        variant: "heading-md/semibold",
                        children: I.default.Messages.GUILD_FEED_FEEDBACK_SECTION_1_TITLE
                    }), (0, a.jsx)(u.Text, {
                        variant: "text-md/normal",
                        children: I.default.Messages.GUILD_FEED_FEEDBACK_SECTION_1_SUBTITLE
                    }), (0, a.jsx)("div", {
                        className: h.ratingsContainer,
                        children: y.map(e => (0, a.jsxs)("div", {
                            className: h.ratingContainer,
                            children: [(0, a.jsx)(u.Clickable, {
                                className: h.rating,
                                onClick: () => {
                                    n(e.value)
                                },
                                children: (0, a.jsx)(b, {
                                    defaultSrc: (0, o.isThemeDark)(l) ? e.dark : e.light,
                                    selectedSrc: e.selected,
                                    selected: t === e.value,
                                    alt: e.altDescription(),
                                    disableAnimation: s
                                })
                            }), null != e.description ? (0, a.jsx)(u.Text, {
                                variant: "text-xs/normal",
                                children: e.altDescription()
                            }) : null]
                        }, e.value))
                    })]
                })
            }

            function G(e) {
                var t;
                let {
                    selectedRating: n,
                    selectedReasons: s,
                    onSelectedReasons: l,
                    onUserFeedbackChanged: r,
                    onSubmitPressed: o,
                    canSubmit: d
                } = e;
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(u.Heading, {
                        variant: "heading-md/semibold",
                        children: I.default.Messages.GUILD_FEED_FEEDBACK_SECTION_2_TITLE.format({
                            rating: n.toLowerCase()
                        })
                    }), (0, a.jsx)("div", {
                        className: h.pillContainer,
                        children: (null !== (t = (0, _.GUILD_FEED_FEEDBACK_REASONS)[n]) && void 0 !== t ? t : []).map(e => (0, a.jsx)(u.Clickable, {
                            onClick: () => l(e),
                            className: i(h.pill, s.has(e) ? h.pillSelected : null),
                            children: (0, a.jsx)(u.Text, {
                                variant: "text-md/normal",
                                children: (0, c.getDescriptionFromReason)(e)
                            })
                        }, e))
                    }), s.has(_.GuildFeedFeedbackReason.OTHER) ? (0, a.jsx)(u.TextInput, {
                        autoFocus: !0,
                        className: h.textInput,
                        onChange: r,
                        placeholder: I.default.Messages.GUILD_FEED_FEEDBACK_OTHER_PLACEHOLDER
                    }) : null, (0, a.jsx)(u.Button, {
                        className: h.button,
                        disabled: !d,
                        onClick: o,
                        children: I.default.Messages.SUBMIT
                    })]
                })
            }

            function j() {
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)("img", {
                        src: P,
                        width: 75,
                        height: 75,
                        alt: ""
                    }), (0, a.jsx)(u.Heading, {
                        variant: "heading-md/semibold",
                        children: I.default.Messages.GUILD_FEED_FEEDBACK_SECTION_3_TITLE
                    })]
                })
            }

            function F(e) {
                let t, n;
                let {
                    selectedRating: s,
                    setSelectedRating: l,
                    selectedReasons: r,
                    setSelectedReasons: o,
                    setUserFeedback: d,
                    backPressed: _,
                    onSubmitPressed: I,
                    onBackPressed: C,
                    onClosePressed: T,
                    showSubmitted: m,
                    canSubmit: S,
                    isAnimating: N,
                    useReducedMotion: A
                } = (0, c.useGuildFeedFeedback)(e);
                return m ? (n = !1, t = (0, a.jsx)(j, {})) : null == s || _ || N ? (n = !1, t = (0, a.jsx)(U, {
                    disableAnimation: _ || A,
                    selectedRating: s,
                    setSelectedRating: l
                })) : (n = !0, t = (0, a.jsx)(G, {
                    selectedRating: s,
                    selectedReasons: r,
                    onSelectedReasons: o,
                    onUserFeedbackChanged: d,
                    onBackPressed: C,
                    onSubmitPressed: I,
                    canSubmit: S
                })), (0, a.jsx)("div", {
                    className: h.parentContainer,
                    onClick: e => e.stopPropagation(),
                    children: (0, a.jsxs)("div", {
                        className: i(h.container, h.containerDivider),
                        children: [t, n ? (0, a.jsx)(u.Clickable, {
                            className: i(h.icon, h.back),
                            onClick: C,
                            children: (0, a.jsx)(E.default, {
                                direction: E.default.Directions.LEFT
                            })
                        }) : null, (0, a.jsx)(u.Clickable, {
                            className: i(h.icon, h.close),
                            onClick: T,
                            children: (0, a.jsx)(f.default, {})
                        })]
                    })
                })
            }
        },
        339274: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("333987"),
                u = n("975802"),
                d = s.forwardRef(function(e, t) {
                    let {
                        className: n,
                        children: l,
                        ariaLabel: d,
                        onContextMenu: c,
                        onCardClick: E,
                        onItemClick: f,
                        listItemProps: _,
                        itemId: I,
                        selected: h,
                        ...C
                    } = e, [T, m] = (0, o.default)(t), S = s.useRef(null);
                    return (0, a.jsxs)("div", {
                        ref: m,
                        className: i(u.card, u.interactiveCard, {
                            [u.selected]: h
                        }, n),
                        "data-item-id": I,
                        onContextMenu: c,
                        onClick: e => null == E ? void 0 : E(e, T.current),
                        ...C,
                        children: [(0, a.jsx)(r.Clickable, {
                            className: u.clickableTarget,
                            innerRef: S,
                            "aria-label": d,
                            onClick: f,
                            ..._
                        }), l]
                    })
                })
        },
        537594: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("611221"),
                i = n("446674"),
                r = n("449008"),
                o = n("713810"),
                u = n("185014"),
                d = n("530853"),
                c = n("435837"),
                E = n("592979"),
                f = n("232882"),
                _ = n("309673"),
                I = s.memo(function(e) {
                    let {
                        guildId: t,
                        itemId: n,
                        scrollerHeight: I,
                        scrollerRef: h,
                        showFeedback: C,
                        setOnDismissedFeedback: T
                    } = e, [m, S, N] = (0, i.useStateFromStoresArray)([u.default], () => [u.default.getItem(t, n), u.default.getIsItemHiding(t, n), u.default.getIsItemHidden(t, n)]), A = s.useRef(null);
                    if (s.useEffect(() => {
                            var e;
                            let a = A.current;
                            if (null == a || null == I) {
                                (0, o.markGuildFeedItemAsUnseen)(t, n, Date.now());
                                return
                            }
                            let s = a.clientHeight,
                                l = null === (e = h.current) || void 0 === e ? void 0 : e.getScrollerNode();
                            if (null == l) return;
                            let i = Math.min(.5, .5 * I / s),
                                r = new IntersectionObserver(e => (function(e, t, n) {
                                    for (let a of n) {
                                        let n = a.target.dataset.itemId;
                                        if (null == n) return;
                                        let s = Date.now();
                                        a.intersectionRatio >= t ? (0, o.markGuildFeedItemAsSeen)(e, n, s) : (0, o.markGuildFeedItemAsUnseen)(e, n, s)
                                    }
                                })(t, i, e), {
                                    root: l,
                                    rootMargin: "0px 100000px 0px 100000px",
                                    threshold: i
                                });
                            return r.observe(a), () => {
                                r.disconnect()
                            }
                        }, [n, t, h, I, S, N]), null == m || N) return null;
                    if (S) return (0, a.jsx)(c.default, {
                        guildId: t,
                        feedItem: m
                    });
                    switch (m.type) {
                        case l.GuildFeedItemTypes.FORUM_POST:
                            return (0, a.jsx)(_.default, {
                                ref: A,
                                guildId: t,
                                postItem: m,
                                showFeedback: C,
                                setOnDismissedFeedback: T
                            });
                        case l.GuildFeedItemTypes.MESSAGE:
                            return (0, a.jsx)(f.default, {
                                ref: A,
                                guildId: t,
                                messageItem: m,
                                showFeedback: C,
                                setOnDismissedFeedback: T
                            });
                        case l.GuildFeedItemTypes.MESSAGE_BUNDLE:
                            return (0, a.jsx)(E.default, {
                                ref: A,
                                guildId: t,
                                messageBundleItem: m,
                                showFeedback: C,
                                setOnDismissedFeedback: T
                            });
                        case l.GuildFeedItemTypes.CONVERSATION:
                            return (0, a.jsx)(d.default, {
                                ref: A,
                                guildId: t,
                                conversationItem: m,
                                showFeedback: C,
                                setOnDismissedFeedback: T
                            });
                        default:
                            (0, r.assertNever)(m)
                    }
                })
        },
        605143: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("880116");

            function r(e) {
                let {
                    children: t,
                    hideBorder: n
                } = e;
                return (0, a.jsx)("div", {
                    className: l(i.feedItemHeader, {
                        [i.hideBorder]: n
                    }),
                    children: t
                })
            }
        },
        435837: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return R
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("355262"),
                i = n("801110"),
                r = n("446674"),
                o = n("77078"),
                u = n("679653"),
                d = n("419830"),
                c = n("42203"),
                E = n("26989"),
                f = n("27618"),
                _ = n("697218"),
                I = n("116320"),
                h = n("867544"),
                C = n("387111"),
                T = n("713810"),
                m = n("60036"),
                S = n("339274"),
                N = n("605143"),
                A = n("782340"),
                p = n("327797");

            function g(e) {
                let {
                    guildId: t,
                    feedItem: n,
                    onSendFeedback: s
                } = e, l = (0, m.default)(n), h = l.channel_id, S = (0, r.useStateFromStores)([c.default], () => c.default.getChannel(h)), N = (0, u.default)(S), g = (0, d.getChannelIconComponent)(S), R = (0, r.useStateFromStores)([_.default], () => _.default.getUser(l.author.id)), O = (0, r.useStateFromStores)([c.default, E.default, f.default], () => C.default.getName(t, h, R)), L = e => {
                    (0, T.setFeedItemPreference)(t, e), s()
                };
                return (0, a.jsxs)("div", {
                    className: p.options,
                    children: [(0, a.jsx)(o.Clickable, {
                        className: p.option,
                        onClick: () => L({
                            channel_id: h,
                            message_id: l.id,
                            entity_type: i.GuildFeedPreferenceEntityTypes.MESSAGE
                        }),
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            color: "interactive-active",
                            children: A.default.Messages.GUILD_FEED_HIDDEN_MESSAGE_FEEDBACK_NO_LIKE
                        })
                    }), (0, a.jsx)(o.Clickable, {
                        className: p.option,
                        onClick: () => L({
                            channel_id: h,
                            entity_type: i.GuildFeedPreferenceEntityTypes.CHANNEL
                        }),
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            color: "interactive-active",
                            children: A.default.Messages.GUILD_FEED_HIDDEN_MESSAGE_FEEDBACK_SHOW_LESS_CHANNEL.format({
                                channelName: N,
                                channelNameHook: (e, t) => (0, a.jsxs)("span", {
                                    children: [null != g && (0, a.jsx)(g, {
                                        className: p.mentionIcon,
                                        width: 20,
                                        height: 20
                                    }), " ", e]
                                }, t)
                            })
                        })
                    }), (0, a.jsx)(o.Clickable, {
                        className: p.option,
                        onClick: () => {
                            var e;
                            return L({
                                user_id: null == l ? void 0 : null === (e = l.author) || void 0 === e ? void 0 : e.id,
                                entity_type: i.GuildFeedPreferenceEntityTypes.USER
                            })
                        },
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            color: "interactive-active",
                            children: A.default.Messages.GUILD_FEED_HIDDEN_MESSAGE_FEEDBACK_SHOW_LESS_USER.format({
                                username: O,
                                usernameHook: (e, t) => (0, a.jsxs)("span", {
                                    children: [(0, a.jsx)(I.default, {
                                        className: p.mentionIcon,
                                        width: 20,
                                        height: 20
                                    }), " ", e]
                                }, t)
                            })
                        })
                    })]
                })
            }

            function R(e) {
                let {
                    guildId: t,
                    feedItem: n
                } = e, [i, r] = s.useState(!1), u = (0, l.useListItem)(n.id);
                return (0, a.jsxs)(S.default, {
                    ariaLabel: A.default.Messages.GUILD_FEED_HIDDEN_MESSAGE_ITEM,
                    listItemProps: u,
                    children: [(0, a.jsxs)(N.default, {
                        hideBorder: i,
                        children: [(0, a.jsx)(h.default, {
                            className: p.icon,
                            width: 16,
                            height: 16,
                            foregroundColor: "currentColor"
                        }), i ? (0, a.jsxs)("div", {
                            className: p.title,
                            children: [(0, a.jsx)(o.Text, {
                                className: p.title,
                                variant: "text-md/medium",
                                color: "interactive-active",
                                children: A.default.Messages.GUILD_FEED_HIDDEN_MESSAGE_ITEM_FEEDBACK_RECEIVED_TITLE
                            }), (0, a.jsx)(o.Text, {
                                className: p.title,
                                variant: "text-xs/medium",
                                color: "interactive-normal",
                                children: A.default.Messages.GUILD_FEED_HIDDEN_MESSAGE_ITEM_FEEDBACK_RECEIVED_SUBTITLE
                            })]
                        }) : (0, a.jsx)(o.Text, {
                            className: p.title,
                            variant: "text-md/medium",
                            color: "interactive-active",
                            children: A.default.Messages.GUILD_FEED_HIDDEN_MESSAGE_ITEM
                        }), (0, a.jsx)(o.Button, {
                            size: o.Button.Sizes.SMALL,
                            color: o.Button.Colors.PRIMARY,
                            onClick: () => {
                                (0, T.unhideItemFromGuildFeed)(n, t)
                            },
                            children: A.default.Messages.UNDO
                        })]
                    }), !i && (0, a.jsx)(g, {
                        guildId: t,
                        feedItem: n,
                        onSendFeedback: () => r(!0)
                    })]
                })
            }
        },
        759668: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("433487"),
                i = n("782340"),
                r = n("225409");

            function o(e) {
                e.stopPropagation()
            }

            function u(e) {
                let {
                    onContextMenu: t
                } = e, n = i.default.Messages.MORE;
                return (0, a.jsx)("div", {
                    onClick: o,
                    onContextMenu: o,
                    children: (0, a.jsx)(s.Tooltip, {
                        text: n,
                        hideOnClick: !0,
                        children: e => {
                            let {
                                onMouseEnter: i,
                                onMouseLeave: o,
                                onClick: u
                            } = e;
                            return (0, a.jsx)(s.Button, {
                                onMouseEnter: i,
                                onMouseLeave: o,
                                look: s.Button.Looks.BLANK,
                                size: s.Button.Sizes.NONE,
                                onClick: e => {
                                    null == u || u(), t(e)
                                },
                                "aria-label": n,
                                className: r.overflowButton,
                                children: (0, a.jsx)(l.default, {
                                    className: r.icon
                                })
                            })
                        }
                    })
                })
            }
        },
        208695: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildFeedMessage: function() {
                    return H
                },
                default: function() {
                    return V
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("193865"),
                d = n("405645"),
                c = n("887446"),
                E = n("913491"),
                f = n("574073"),
                _ = n("865343"),
                I = n("909917"),
                h = n("380986"),
                C = n("969706"),
                T = n("39331"),
                m = n("115859"),
                S = n("702905"),
                N = n("611792"),
                A = n("554372"),
                p = n("256572"),
                g = n("208021"),
                R = n("582713"),
                O = n("42203"),
                L = n("780571"),
                M = n("497880"),
                v = n("93332"),
                D = n("713810"),
                x = n("185014"),
                P = n("2804"),
                y = n("603371"),
                b = n("515631"),
                U = n("49111"),
                G = n("724210"),
                j = n("894488"),
                F = n("782340"),
                k = n("923254"),
                B = n("877671");
            let w = s.memo(function(e) {
                    let {
                        message: t,
                        channel: n,
                        animateAvatar: l,
                        repliedMessage: i
                    } = e, {
                        popouts: r,
                        setPopout: o
                    } = (0, C.default)(t.id, j.DEFAULT_POPOUTS), {
                        usernameProfile: u,
                        avatarProfile: c
                    } = r, E = (0, h.useContextMenuUser)(t.author.id, n.id), _ = (0, h.useClickMessageAuthorUsername)(t, n, u, o), T = (0, h.useClickMessageAuthorAvatar)(c, o), m = s.useCallback(() => o({
                        usernameProfile: !1,
                        avatarProfile: !1,
                        referencedUsernameProfile: !1
                    }), [o]), S = (0, f.default)(t), N = (0, d.useRoleIcon)({
                        guildId: n.guild_id,
                        roleId: S.iconRoleId
                    });
                    return (0, a.jsx)(v.default, {
                        guildId: n.guild_id,
                        message: t,
                        channel: n,
                        repliedMessage: i,
                        author: S,
                        showTimestampOnHover: t.type !== U.MessageTypes.REPLY,
                        renderPopout: I.default,
                        showAvatarPopout: c,
                        showUsernamePopout: u,
                        onClickAvatar: T,
                        onClickUsername: _,
                        onPopoutRequestClose: m,
                        onContextMenu: E,
                        roleIcon: N,
                        animate: l
                    })
                }),
                H = s.forwardRef(function(e, t) {
                    var n, l;
                    let {
                        guildId: d,
                        channel: f,
                        message: I,
                        feedItemId: h,
                        className: C,
                        animateAvatar: v,
                        contentClassName: y,
                        children: j,
                        groupId: F,
                        onMessageClick: k,
                        hideHeader: H = !1,
                        forceAddReactions: V = !0,
                        ...Y
                    } = e, W = s.useRef(null), K = (0, r.useStateFromStores)([O.default], () => O.default.getChannel(f.id)), z = null != K && I.isFirstMessageInForumPost(K), q = (0, u.useShowImprovedMarkdownUserExperimentConfig)((null !== (n = I.editedTimestamp) && void 0 !== n ? n : I.timestamp).valueOf()), Q = (0, u.useShowImprovedMarkdownGuildExperimentConfig)(d, (null !== (l = I.editedTimestamp) && void 0 !== l ? l : I.timestamp).valueOf()), {
                        content: X,
                        hasSpoilerEmbeds: J
                    } = (0, T.default)(I, {
                        hideSimpleEmbedContent: !0,
                        allowList: z || q.showListsAndHeaders || Q.showListsAndHeaders,
                        allowHeading: z || q.showListsAndHeaders || Q.showListsAndHeaders,
                        allowLinks: q.showMaskedLinks || Q.showMaskedLinks,
                        previewLinkTarget: q.showMaskedLinks || Q.showMaskedLinks
                    }), Z = I.type === U.MessageTypes.REPLY ? I.messageReference : void 0, $ = (0, r.useStateFromStores)([p.default], () => p.default.getMessageByReference(Z)), ee = (0, r.useStateFromStores)([O.default], () => I.hasFlag(U.MessageFlags.HAS_THREAD) && O.default.getChannel(I.id)), et = (0, _.getMessageAriaLabelledBy)(I, F, {
                        hasTimestamp: I.id === F
                    }), en = (0, _.getMessageAriaDescribedBy)(I), ea = null != Z ? (0, a.jsx)(o.Clickable, {
                        onClick: e => {
                            null != $.message && (e.stopPropagation(), (0, D.trackFeedItemInteracted)({
                                feed_item_type: (0, P.getFeedItemTypeFromId)(h),
                                feed_item_id: h,
                                load_id: x.default.getLoadId(d),
                                action_type: b.FeedItemInteractionType.REFERENCED_MESSAGE_CLICKED,
                                guild_id: d,
                                channel_id: f.id,
                                message_id: I.id,
                                home_session_id: c.default.getHomeSessionId(d)
                            }), g.default.openChannelAsSidebar({
                                guildId: f.guild_id,
                                channelId: f.id,
                                baseChannelId: G.StaticChannelRoute.GUILD_HOME,
                                details: {
                                    type: R.SidebarOpenDetailsType.HOME,
                                    initialMessageId: $.message.id
                                }
                            }))
                        },
                        children: (0, A.default)(I, f, Z, $, !1)
                    }) : null, es = (0, E.default)(I), el = s.useCallback(e => {
                        k(e, W.current, I)
                    }, [k, I]);
                    return (0, a.jsx)(L.default, {
                        messageRef: W,
                        className: i(C, {
                            [B.mentioned]: I.mentioned && !(0, E.default)(I)
                        }),
                        onClick: el,
                        childrenRepliedMessage: ea,
                        childrenExecutedCommand: (0, N.default)(I, f, !1),
                        childrenHeader: es || H ? null : (0, a.jsx)(w, {
                            channel: f,
                            message: I,
                            animateAvatar: v,
                            repliedMessage: $
                        }),
                        childrenAccessories: (0, m.default)({
                            channelMessageProps: e,
                            hasSpoilerEmbeds: J,
                            isInteracting: !1,
                            forceAddReactions: V
                        }),
                        childrenMessageContent: (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(M.default, {
                                className: y,
                                message: I,
                                content: X,
                                contentRef: t
                            }), j]
                        }),
                        childrenSystemMessage: (0, S.default)(e),
                        hasThread: null != ee && I.hasFlag(U.MessageFlags.HAS_THREAD),
                        hasReply: I.type === U.MessageTypes.REPLY,
                        isSystemMessage: es,
                        "aria-labelledby": et,
                        "aria-describedby": en,
                        ...Y
                    })
                });
            var V = s.memo(function(e) {
                let {
                    message: t,
                    guildId: n,
                    feedItemId: l,
                    disableTruncation: r
                } = e, u = t.attachments.length > 0, [d, c] = s.useState(!1), [E, f] = (0, y.default)(n, l);
                return (0, a.jsx)(H, {
                    ref: e => {
                        null != e && !r && c(e.scrollHeight > e.clientHeight)
                    },
                    contentClassName: i({
                        [k.clampLarge]: !r && !E && !u,
                        [k.clampSmall]: !r && !E && u
                    }),
                    ...e,
                    children: d && !E ? (0, a.jsx)(o.Clickable, {
                        className: k.showMore,
                        onClick: e => f(e, t),
                        "aria-hidden": !0,
                        children: F.default.Messages.GUILD_FEED_TRUNCATED_MESSAGE_SEE_MORE
                    }) : null
                })
            })
        },
        449405: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("603371"),
                r = n("208695"),
                o = n("782340"),
                u = n("923254"),
                d = s.memo(function(e) {
                    let {
                        guildId: t,
                        feedItemId: n,
                        messages: d
                    } = e, c = s.useRef([]), E = d.some(e => e.attachments.length > 0), f = E ? 4 : 8, [_, I] = s.useState(), [h, C] = s.useState(), [T, m] = (0, i.default)(t, n);
                    if (s.useLayoutEffect(() => {
                            let e = 0;
                            for (let [n, a] of c.current.entries()) {
                                var t;
                                if (null == a) continue;
                                let s = parseFloat(null !== (t = window.getComputedStyle(a).getPropertyValue("line-height")) && void 0 !== t ? t : "0"),
                                    l = a.scrollHeight / s;
                                if ((e += l) > f) {
                                    I(n), C(l - (e - f));
                                    break
                                }
                            }
                        }, [d, f]), 0 === d.length) return null;
                    let S = d[0].id;
                    return (0, a.jsx)(a.Fragment, {
                        children: d.map((t, n) => {
                            if (null != _ && n > _ && !T) return null;
                            let s = _ === n,
                                i = s && null != h ? function(e) {
                                    if (e >= 10) return u.clampLarge;
                                    if (e >= 4 && e < 10) return u.clampMed;
                                    if (e < 4) return u.clampSmall
                                }(h) : null,
                                E = s && null != i && !T;
                            return (0, a.jsx)(r.GuildFeedMessage, {
                                message: t,
                                groupId: S,
                                ...e,
                                contentClassName: E ? i : void 0,
                                children: E ? (0, a.jsx)(l.Clickable, {
                                    className: u.showMore,
                                    onClick: e => m(e, t),
                                    "aria-hidden": !0,
                                    children: o.default.Messages.GUILD_FEED_TRUNCATED_MESSAGE_SEE_MORE
                                }) : null,
                                ref: e => c.current[n] = e,
                                hideHeader: 0 !== n,
                                forceAddReactions: n === d.length - 1
                            }, t.id)
                        })
                    })
                })
        },
        592979: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("355262"),
                i = n("446674"),
                r = n("77078"),
                o = n("272030"),
                u = n("679653"),
                d = n("419830"),
                c = n("537325"),
                E = n("208021"),
                f = n("582713"),
                _ = n("982108"),
                I = n("42203"),
                h = n("27618"),
                C = n("449008"),
                T = n("185014"),
                m = n("886484"),
                S = n("60036"),
                N = n("468670"),
                A = n("113312"),
                p = n("339274"),
                g = n("605143"),
                R = n("759668"),
                O = n("449405"),
                L = n("232882"),
                M = n("49111"),
                v = n("724210"),
                D = n("782340"),
                x = n("700045");
            let P = async () => {
                let {
                    default: e
                } = await n.el("814781").then(n.bind(n, "814781"));
                return e
            };
            var y = s.forwardRef(function(e, t) {
                var n, y, b;
                let {
                    guildId: U,
                    messageBundleItem: G,
                    showFeedback: j,
                    setOnDismissedFeedback: F
                } = e, {
                    messages: k
                } = G, B = k[0].message, w = k[k.length - 1].message, H = w.channel_id, V = (0, i.useStateFromStoresArray)([T.default], () => k.map(e => T.default.getCachedMessage(U, H, e.message.id)).filter(C.isNotNullish), [U, H, k]), Y = (0, i.useStateFromStores)([I.default], () => I.default.getChannel(H)), W = (0, d.getChannelIconComponent)(Y, void 0, {
                    textFocused: !0
                }), K = (0, d.getChannelIconTooltipText)(Y), z = (0, u.default)(Y), [q, Q] = s.useState(!1), X = (0, i.useStateFromStores)([h.default], () => null != w && h.default.isBlocked(w.author.id)), J = (0, l.useListItem)(null !== (y = null === (n = V[V.length - 1]) || void 0 === n ? void 0 : n.id) && void 0 !== y ? y : G.id), Z = G.id, $ = (0, i.useStateFromStores)([_.default], () => _.default.getSidebarState(v.StaticChannelRoute.GUILD_HOME)), ee = (0, m.getSidebarMessageId)($, Y), et = null != ee && B.id === ee, {
                    handleItemClick: en,
                    handleChannelClick: ea,
                    handleCardClick: es,
                    handleMessageClick: el
                } = (0, N.default)({
                    guildId: U,
                    channelId: H,
                    feedItemId: Z,
                    onChannelClick: () => (0, c.default)(M.Routes.CHANNEL(U, H, B.id)),
                    onContentClick: e => {
                        var t;
                        E.default.openChannelAsSidebar({
                            guildId: U,
                            channelId: H,
                            baseChannelId: v.StaticChannelRoute.GUILD_HOME,
                            flash: !1,
                            details: {
                                type: f.SidebarOpenDetailsType.HOME,
                                initialMessageId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : B.id,
                                highlightMessageIds: new Set((0, S.getAllMessageIdsFromFeedItem)(G))
                            }
                        })
                    }
                }), ei = s.useMemo(() => k.map(e => null !== (b = e.referenceMessages) && void 0 !== b ? b : []).flat(), [k]);
                if (null == Y || null == B || null == w || X) return null;
                let er = e => {
                    e.stopPropagation(), (0, o.openContextMenuLazy)(e, async () => {
                        let e = await P();
                        return t => (0, a.jsx)(e, {
                            ...t,
                            item: G,
                            channel: Y
                        })
                    })
                };
                return (0, a.jsxs)(p.default, {
                    className: j ? x.containerNoPadding : x.container,
                    ref: t,
                    selected: et,
                    onCardClick: es,
                    onItemClick: en,
                    onContextMenu: er,
                    itemId: Z,
                    ariaLabel: D.default.Messages.GUILD_FEED_MESSAGE_ITEM_A11Y_LABEL.format({
                        channelName: z
                    }),
                    listItemProps: J,
                    onMouseEnter: () => Q(!0),
                    onMouseLeave: () => Q(!1),
                    children: [(0, a.jsxs)(r.HeadingLevel, {
                        component: (0, a.jsxs)(g.default, {
                            children: [(0, a.jsx)("div", {
                                className: x.messageHeaderMenuLeft,
                                children: (0, a.jsxs)(r.Clickable, {
                                    className: x.channelNameContainer,
                                    onClick: ea,
                                    children: [null != W ? (0, a.jsx)(r.Tooltip, {
                                        text: K,
                                        delay: 500,
                                        children: e => (0, a.jsx)(W, {
                                            ...e,
                                            className: x.channelIcon,
                                            height: 16,
                                            width: 16
                                        })
                                    }) : null, (0, a.jsx)(r.Heading, {
                                        lineClamp: 1,
                                        variant: "heading-sm/semibold",
                                        children: z
                                    })]
                                })
                            }), (0, a.jsx)("div", {
                                className: x.messageHeaderMenuRight,
                                children: (0, a.jsx)(R.default, {
                                    feedItem: G,
                                    guildId: U,
                                    onContextMenu: er
                                })
                            })]
                        }),
                        children: [(0, a.jsx)("div", {
                            className: x.messageBundleItemBody,
                            children: (0, a.jsx)(O.default, {
                                feedItemId: G.id,
                                guildId: U,
                                channel: Y,
                                messages: V,
                                animateAvatar: q,
                                onMessageClick: el
                            })
                        }), (0, a.jsx)(L.ReferenceMessages, {
                            referenceMessages: ei,
                            guildId: U
                        })]
                    }), j && (0, a.jsx)(A.default, {
                        guildId: U,
                        guildFeedItem: G,
                        setOnDismissFeedback: F
                    })]
                })
            })
        },
        232882: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ReferenceMessagesBase: function() {
                    return b
                },
                ReferenceMessages: function() {
                    return U
                },
                default: function() {
                    return G
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("355262"),
                i = n("611221"),
                r = n("446674"),
                o = n("77078"),
                u = n("272030"),
                d = n("679653"),
                c = n("419830"),
                E = n("537325"),
                f = n("208021"),
                _ = n("582713"),
                I = n("982108"),
                h = n("42203"),
                C = n("27618"),
                T = n("811305"),
                m = n("185014"),
                S = n("886484"),
                N = n("2804"),
                A = n("468670"),
                p = n("120027"),
                g = n("113312"),
                R = n("339274"),
                O = n("605143"),
                L = n("759668"),
                M = n("208695"),
                v = n("49111"),
                D = n("724210"),
                x = n("782340"),
                P = n("820984");
            let y = async () => {
                let {
                    default: e
                } = await n.el("437150").then(n.bind(n, "437150"));
                return e
            };

            function b(e) {
                let {
                    guildId: t,
                    maxUsers: n,
                    users: s,
                    text: l
                } = e;
                return (0, a.jsxs)("div", {
                    className: P.referenceMessagesText,
                    children: [(0, a.jsx)(T.default, {
                        guildId: t,
                        users: s,
                        size: T.Sizes.SIZE_16,
                        className: P.userSummaryItem,
                        max: n,
                        showDefaultAvatarsForNullUsers: !0
                    }), (0, a.jsx)(o.Text, {
                        variant: "text-xs/normal",
                        color: "header-secondary",
                        children: l
                    })]
                })
            }

            function U(e) {
                let {
                    referenceMessages: t,
                    guildId: n
                } = e, l = s.useMemo(() => {
                    let e = new Set;
                    return t.map(e => e.author).filter(t => !(null == t || e.has(t.id)) && (e.add(t.id), !0)).slice(0, 3)
                }, [t]), i = t.length;
                if (0 === i) return null;
                let r = i > 3 ? x.default.Messages.GUILD_FEED_MESSAGE_ITEM_MAX_REPLIES.format({
                    maxReplies: 3
                }) : x.default.Messages.GUILD_FEED_MESSAGE_ITEM_NUM_REPLIES.format({
                    numReplies: i
                });
                return (0, a.jsx)(b, {
                    guildId: n,
                    users: l,
                    text: r
                })
            }
            var G = s.forwardRef(function(e, t) {
                var n, T;
                let {
                    guildId: b,
                    messageItem: G,
                    showFeedback: j,
                    setOnDismissedFeedback: F
                } = e, k = G.message.channel_id, B = G.message.id, {
                    message: w,
                    isFeaturedMessage: H
                } = (0, r.useStateFromStoresObject)([m.default], () => {
                    let e = m.default.getCachedMessage(b, k, B),
                        t = null != e && m.default.getIsItemFeatured({
                            guildId: b,
                            entity: e,
                            entityType: i.GuildFeedItemTypes.MESSAGE
                        });
                    return {
                        message: e,
                        isFeaturedMessage: t
                    }
                }, [b, k, B]), V = (0, r.useStateFromStores)([h.default], () => h.default.getChannel(k)), Y = (0, c.getChannelIconComponent)(V, void 0, {
                    textFocused: !0
                }), W = (0, c.getChannelIconTooltipText)(V), K = null !== (n = null == G ? void 0 : G.referenceMessages) && void 0 !== n ? n : [], z = (0, d.default)(V), [q, Q] = s.useState(!1), X = (0, r.useStateFromStores)([C.default], () => null != w && C.default.isBlocked(null == w ? void 0 : w.author.id)), J = (0, l.useListItem)(null !== (T = null == w ? void 0 : w.id) && void 0 !== T ? T : B), Z = (0, N.default)(G), $ = (0, r.useStateFromStores)([I.default], () => I.default.getSidebarState(D.StaticChannelRoute.GUILD_HOME)), ee = (0, S.getSidebarMessageId)($, V), et = null != ee && G.message.id === ee, en = G.highlighted ? x.default.Messages.GUILD_FEED_SPECIAL_HIGHLIGHT : H ? x.default.Messages.GUILD_FEED_FEATURED_BY_MODERATORS : null, {
                    handleItemClick: ea,
                    handleChannelClick: es,
                    handleCardClick: el,
                    handleMessageClick: ei
                } = (0, A.default)({
                    guildId: b,
                    channelId: k,
                    feedItemId: Z,
                    onChannelClick: () => (0, E.default)(v.Routes.CHANNEL(b, k, B)),
                    onContentClick: () => {
                        f.default.openChannelAsSidebar({
                            guildId: b,
                            channelId: k,
                            baseChannelId: D.StaticChannelRoute.GUILD_HOME,
                            details: {
                                type: _.SidebarOpenDetailsType.HOME,
                                initialMessageId: B,
                                highlightMessageIds: new Set([B])
                            }
                        })
                    }
                });
                if (null == V || null == w || null == G || X) return null;
                let er = e => {
                    e.stopPropagation(), (0, u.openContextMenuLazy)(e, async () => {
                        let e = await y();
                        return t => (0, a.jsx)(e, {
                            ...t,
                            messageItem: G,
                            channel: V,
                            message: w
                        })
                    })
                };
                return (0, a.jsxs)(R.default, {
                    className: j ? P.containerNoPadding : P.container,
                    ref: t,
                    selected: et,
                    onCardClick: el,
                    onItemClick: ea,
                    onContextMenu: er,
                    itemId: Z,
                    ariaLabel: x.default.Messages.GUILD_FEED_MESSAGE_ITEM_A11Y_LABEL.format({
                        channelName: z
                    }),
                    listItemProps: J,
                    onMouseEnter: () => Q(!0),
                    onMouseLeave: () => Q(!1),
                    children: [(0, a.jsxs)(o.HeadingLevel, {
                        component: (0, a.jsxs)(O.default, {
                            children: [(0, a.jsxs)("div", {
                                className: P.messageHeaderMenuLeft,
                                children: [(0, a.jsxs)(o.Clickable, {
                                    className: P.channelNameContainer,
                                    onClick: es,
                                    children: [null != Y ? (0, a.jsx)(o.Tooltip, {
                                        text: W,
                                        delay: 500,
                                        children: e => (0, a.jsx)(Y, {
                                            ...e,
                                            className: P.channelIcon,
                                            height: 16,
                                            width: 16
                                        })
                                    }) : null, (0, a.jsx)(o.Heading, {
                                        lineClamp: 1,
                                        variant: "heading-sm/semibold",
                                        children: z
                                    })]
                                }), null != en && (0, a.jsxs)("div", {
                                    className: P.featuredMessageContainer,
                                    children: [(0, a.jsx)(p.default, {
                                        height: 4,
                                        width: 4,
                                        "aria-hidden": "true",
                                        className: P.featuredMessageIcon
                                    }), (0, a.jsx)(o.Text, {
                                        className: P.featuredMessageText,
                                        variant: "text-sm/normal",
                                        color: "header-secondary",
                                        children: en
                                    })]
                                })]
                            }), (0, a.jsx)("div", {
                                className: P.messageHeaderMenuRight,
                                children: (0, a.jsx)(L.default, {
                                    feedItem: G,
                                    guildId: b,
                                    onContextMenu: er
                                })
                            })]
                        }),
                        children: [(0, a.jsx)(M.default, {
                            className: P.messageItemBody,
                            guildId: b,
                            animateAvatar: q,
                            channel: V,
                            message: w,
                            feedItemId: G.id,
                            onMessageClick: ei
                        }), (0, a.jsx)(U, {
                            referenceMessages: K,
                            guildId: b
                        })]
                    }), j && (0, a.jsx)(g.default, {
                        guildId: b,
                        guildFeedItem: G,
                        setOnDismissFeedback: F
                    })]
                })
            })
        },
        309673: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return H
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("597755"),
                i = n.n(l),
                r = n("355262"),
                o = n("611221"),
                u = n("446674"),
                d = n("77078"),
                c = n("272030"),
                E = n("679653"),
                f = n("419830"),
                _ = n("680986"),
                I = n("90625"),
                h = n("537325"),
                C = n("208021"),
                T = n("800843"),
                m = n("610730"),
                S = n("982108"),
                N = n("42203"),
                A = n("27618"),
                p = n("185014"),
                g = n("886484"),
                R = n("2804"),
                O = n("468670"),
                L = n("120027"),
                M = n("113312"),
                v = n("339274"),
                D = n("605143"),
                x = n("759668"),
                P = n("208695"),
                y = n("232882"),
                b = n("49111"),
                U = n("724210"),
                G = n("648564"),
                j = n("782340"),
                F = n("137722");
            let k = new Set(["Electron", "Chrome"]),
                B = async () => {
                    let {
                        default: e
                    } = await n.el("437150").then(n.bind(n, "437150"));
                    return e
                };

            function w(e) {
                var t;
                let {
                    channel: n
                } = e, s = (0, u.useStateFromStores)([m.default], () => null !== (t = m.default.getCount(n.id)) && void 0 !== t ? t : 0), l = s >= G.MAX_THREAD_MESSAGE_COUNT ? j.default.Messages.GUILD_FEED_MESSAGE_ITEM_MAX_REPLIES.format({
                    maxReplies: G.MAX_THREAD_MESSAGE_COUNT
                }) : j.default.Messages.GUILD_FEED_MESSAGE_ITEM_NUM_REPLIES.format({
                    numReplies: s
                }), i = (0, u.useStateFromStores)([T.default], () => T.default.getMemberIdsPreview(n.id)), r = (0, _.useFacepileUsers)(n, null != i ? i : []);
                return 0 === s ? null : (0, a.jsx)(y.ReferenceMessagesBase, {
                    guildId: n.guild_id,
                    maxUsers: 5,
                    users: r,
                    text: l
                })
            }
            var H = s.forwardRef(function(e, t) {
                var n;
                let {
                    guildId: l,
                    postItem: T,
                    showFeedback: m,
                    setOnDismissedFeedback: y
                } = e, {
                    thread: G
                } = T, H = (0, u.useStateFromStores)([N.default], () => N.default.getChannel(G.id), [G.id]), {
                    message: V,
                    isFeaturedPost: Y
                } = (0, u.useStateFromStoresObject)([p.default], () => {
                    let e = p.default.getCachedMessage(l, G.id, T.message.id),
                        t = p.default.getIsItemFeatured({
                            guildId: l,
                            entity: G,
                            entityType: o.GuildFeedItemTypes.FORUM_POST
                        });
                    return {
                        message: e,
                        isFeaturedPost: t
                    }
                }, [l, T.message.id, G]), W = (0, E.default)(G), K = (0, u.useStateFromStores)([A.default], () => null != V && A.default.isBlocked(null == V ? void 0 : V.author.id)), z = (0, r.useListItem)(null !== (n = null == V ? void 0 : V.id) && void 0 !== n ? n : T.message.id), q = (0, R.default)(T), Q = (0, f.getChannelIconTooltipText)(G), X = (0, u.useStateFromStores)([N.default], () => N.default.getChannel(G.parent_id)), J = (0, E.default)(X), Z = (0, f.getChannelIconComponent)(X), [$, ee] = s.useState(!1), et = (0, u.useStateFromStores)([S.default], () => S.default.getSidebarState(U.StaticChannelRoute.GUILD_HOME)), en = (0, g.getSidebarMessageId)(et, H), ea = null != en && T.message.id === en, es = T.highlighted ? j.default.Messages.GUILD_FEED_SPECIAL_HIGHLIGHT : Y ? j.default.Messages.GUILD_FEED_FEATURED_BY_MODERATORS : null, {
                    handleItemClick: el,
                    handleChannelClick: ei,
                    handleCardClick: er,
                    handleMessageClick: eo
                } = (0, O.default)({
                    guildId: l,
                    channelId: G.id,
                    feedItemId: q,
                    onChannelClick: () => (0, h.default)(b.Routes.CHANNEL(l, G.parent_id)),
                    onContentClick: () => C.default.openThreadAsSidebar({
                        guildId: l,
                        baseChannelId: U.StaticChannelRoute.GUILD_HOME,
                        channelId: G.id
                    })
                }), [eu, ed] = (0, _.useSomeAppliedTags)(G), ec = eu[0], eE = (0, _.useAppliedTags)(G).slice(1), ef = null != i.name && !k.has(i.name);
                if (null == G || null == H || null == V || null == T || K) return null;
                let e_ = e => {
                    e.stopPropagation(), (0, c.openContextMenuLazy)(e, async () => {
                        let e = await B();
                        return t => (0, a.jsx)(e, {
                            ...t,
                            messageItem: T,
                            channel: H,
                            message: V
                        })
                    })
                };
                return (0, a.jsxs)(v.default, {
                    className: m ? F.containerNoPadding : F.container,
                    ref: t,
                    selected: ea,
                    onCardClick: er,
                    onItemClick: el,
                    onContextMenu: e_,
                    itemId: q,
                    ariaLabel: j.default.Messages.GUILD_FEED_MESSAGE_ITEM_A11Y_LABEL.format({
                        channelName: W
                    }),
                    listItemProps: z,
                    onMouseEnter: () => ee(!0),
                    onMouseLeave: () => ee(!1),
                    children: [(0, a.jsx)(d.HeadingLevel, {
                        component: (0, a.jsxs)(D.default, {
                            children: [(0, a.jsxs)("div", {
                                className: F.postHeaderMenuLeft,
                                children: [(0, a.jsxs)(d.Clickable, {
                                    className: F.channelNameContainer,
                                    onClick: ei,
                                    children: [null != Z ? (0, a.jsx)(d.Tooltip, {
                                        text: Q,
                                        delay: 500,
                                        children: e => (0, a.jsx)(Z, {
                                            ...e,
                                            className: F.channelIcon,
                                            height: 16,
                                            width: 16
                                        })
                                    }) : null, (0, a.jsx)(d.Heading, {
                                        className: F.channelName,
                                        variant: "heading-sm/semibold",
                                        lineClamp: 1,
                                        children: J
                                    })]
                                }), null != es && (0, a.jsxs)("div", {
                                    className: F.featuredPostContainer,
                                    children: [(0, a.jsx)(L.default, {
                                        height: 4,
                                        width: 4,
                                        "aria-hidden": "true",
                                        className: F.featuredPostIcon
                                    }), (0, a.jsx)(d.Text, {
                                        className: F.featuredPostText,
                                        variant: "text-sm/normal",
                                        color: "header-secondary",
                                        children: es
                                    })]
                                })]
                            }), (0, a.jsx)("div", {
                                className: F.postHeaderMenuRight,
                                children: (0, a.jsx)(x.default, {
                                    feedItem: T,
                                    guildId: l,
                                    onContextMenu: e_
                                })
                            })]
                        }),
                        children: (0, a.jsxs)(d.HeadingLevel, {
                            component: (0, a.jsxs)("div", {
                                className: F.titleContainer,
                                children: [(0, a.jsx)(d.Heading, {
                                    className: F.title,
                                    variant: "heading-lg/semibold",
                                    children: G.name
                                }), null != ec ? (0, a.jsxs)("div", {
                                    className: F.tags,
                                    children: [(0, a.jsx)(I.default, {
                                        tag: ec,
                                        size: I.default.Sizes.SMALL
                                    }), ed > 0 ? (0, a.jsx)(I.ForumTagOverflow, {
                                        tags: eE,
                                        count: ed,
                                        size: I.default.Sizes.SMALL
                                    }) : null]
                                }) : null]
                            }),
                            children: [(0, a.jsx)(P.default, {
                                className: F.messageItemBody,
                                guildId: G.guild_id,
                                animateAvatar: $,
                                channel: G,
                                message: V,
                                feedItemId: T.id,
                                onMessageClick: eo,
                                disableTruncation: ef
                            }), (0, a.jsx)(w, {
                                channel: G
                            })]
                        })
                    }), m && (0, a.jsx)(M.default, {
                        guildId: l,
                        guildFeedItem: T,
                        setOnDismissFeedback: y
                    })]
                })
            })
        },
        603371: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("887446"),
                l = n("713810"),
                i = n("185014"),
                r = n("2804"),
                o = n("515631");

            function u(e, t) {
                let [n, u] = a.useState(!1), d = a.useCallback((n, a) => {
                    n.stopPropagation(), u(!0), (0, l.trackFeedItemInteracted)({
                        feed_item_type: (0, r.getFeedItemTypeFromId)(t),
                        feed_item_id: t,
                        load_id: i.default.getLoadId(e),
                        action_type: o.FeedItemInteractionType.EXPANDED_ITEM,
                        guild_id: e,
                        channel_id: a.channel_id,
                        message_id: a.id,
                        home_session_id: s.default.getHomeSessionId(e)
                    })
                }, [e, t]);
                return [n, d]
            }
        },
        302120: function(e, t, n) {
            "use strict";
            var a, s, l, i;
            n.r(t), n.d(t, {
                GUILD_FEED_FEEDBACK_LAST_SEEN: function() {
                    return r
                },
                GUILD_FEED_FEEDBACK_TIME_OUT: function() {
                    return o
                },
                GUILD_FEED_FEEDBACK_ANIMATION_DURATION: function() {
                    return u
                },
                GuildFeedbackRating: function() {
                    return a
                },
                GuildFeedFeedbackReason: function() {
                    return s
                },
                GUILD_FEED_FEEDBACK_REASONS: function() {
                    return d
                }
            });
            let r = "guild_feed_feedback_last_seen",
                o = 6048e5,
                u = 450;
            (l = a || (a = {})).TERRIBLE = "terrible", l.BAD = "bad", l.OKAY = "okay", l.GOOD = "good", l.EXCELLENT = "excellent", (i = s || (s = {}))[i.ALREADY_SAW = 0] = "ALREADY_SAW", i[i.IRRELEVANT = 1] = "IRRELEVANT", i[i.TOO_OLD = 2] = "TOO_OLD", i[i.CONFUSING_OR_RANDOM = 3] = "CONFUSING_OR_RANDOM", i[i.INAPPROPRIATE = 4] = "INAPPROPRIATE", i[i.UNINTERESTING = 5] = "UNINTERESTING", i[i.ENTERTAINING = 6] = "ENTERTAINING", i[i.INFORMATIVE = 7] = "INFORMATIVE", i[i.USEFUL = 8] = "USEFUL", i[i.OTHER = 9] = "OTHER", i[i.FUNNY = 10] = "FUNNY";
            let d = {
                [a.TERRIBLE]: [s.ALREADY_SAW, s.IRRELEVANT, s.TOO_OLD, s.CONFUSING_OR_RANDOM, s.INAPPROPRIATE, s.OTHER],
                [a.BAD]: [s.ALREADY_SAW, s.IRRELEVANT, s.TOO_OLD, s.CONFUSING_OR_RANDOM, s.INAPPROPRIATE, s.OTHER],
                [a.OKAY]: [s.IRRELEVANT, s.TOO_OLD, s.UNINTERESTING, s.ALREADY_SAW, s.OTHER],
                [a.GOOD]: [s.FUNNY, s.ENTERTAINING, s.INFORMATIVE, s.USEFUL, s.OTHER],
                [a.EXCELLENT]: [s.FUNNY, s.ENTERTAINING, s.INFORMATIVE, s.USEFUL, s.OTHER]
            }
        },
        601414: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useShowFeedback: function() {
                    return I
                },
                getDescriptionFromReason: function() {
                    return h
                },
                useGuildFeedFeedback: function() {
                    return C
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("95410"),
                i = n("206230"),
                r = n("185014"),
                o = n("760190"),
                u = n("599110"),
                d = n("677315"),
                c = n("887446"),
                E = n("302120"),
                f = n("49111"),
                _ = n("782340");

            function I() {
                let e = a.useMemo(() => o.default.getExperimentBucket(d.GuildHomeFeedbackExperiment.definition.id), []),
                    [t, n] = a.useState(!1),
                    s = a.useMemo(() => l.default.get(E.GUILD_FEED_FEEDBACK_LAST_SEEN), [t]),
                    i = a.useMemo(() => 100 * Math.random() < e && (null == s || Date.now() - s > E.GUILD_FEED_FEEDBACK_TIME_OUT), [e, s]);
                return {
                    showFeedback: i,
                    setOnDismissedFeedback: n
                }
            }

            function h(e) {
                switch (e) {
                    case E.GuildFeedFeedbackReason.ALREADY_SAW:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_ALREADY_SAW;
                    case E.GuildFeedFeedbackReason.IRRELEVANT:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_IRRELEVANT;
                    case E.GuildFeedFeedbackReason.TOO_OLD:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_TOO_OLD;
                    case E.GuildFeedFeedbackReason.CONFUSING_OR_RANDOM:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_CONFUSING;
                    case E.GuildFeedFeedbackReason.INAPPROPRIATE:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_INAPPROPRIATE;
                    case E.GuildFeedFeedbackReason.UNINTERESTING:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_UNINTERESTING;
                    case E.GuildFeedFeedbackReason.ENTERTAINING:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_ENTERTAINING;
                    case E.GuildFeedFeedbackReason.INFORMATIVE:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_INFORMATIVE;
                    case E.GuildFeedFeedbackReason.USEFUL:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_USEFUL;
                    case E.GuildFeedFeedbackReason.OTHER:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OTHER_REASON;
                    case E.GuildFeedFeedbackReason.FUNNY:
                        return _.default.Messages.GUILD_FEED_FEEDBACK_OPTION_FUNNY;
                    default:
                        return null
                }
            }

            function C(e) {
                let {
                    guildId: t,
                    guildFeedItem: n,
                    setOnDismissFeedback: o
                } = e, [d, _] = a.useState(), [I, C] = a.useState(new Set), [T, m] = a.useState(), [S, N] = a.useState(!1), [A, p] = a.useState(!1), [g, R] = a.useState(!1), O = a.useCallback(e => {
                    _(e), R(!0), N(!1), setTimeout(() => {
                        R(!1)
                    }, E.GUILD_FEED_FEEDBACK_ANIMATION_DURATION + 150)
                }, [_, N, R]), L = a.useCallback(e => {
                    e === E.GuildFeedFeedbackReason.OTHER && I.has(E.GuildFeedFeedbackReason.OTHER) && m(null);
                    let t = new Set(I);
                    t.has(e) ? t.delete(e) : t.add(e), C(t)
                }, [I, m, C]), M = a.useCallback(() => {
                    N(!0), C(new Set)
                }, [N, C]), v = a.useCallback(e => {
                    (function(e) {
                        var t;
                        let {
                            guildId: n,
                            guildFeedItem: a,
                            dismissed: s,
                            selectedRating: l = null,
                            selectedReasons: i = null,
                            userFeedback: o = null
                        } = e, d = Array.from(null != i ? i : []);
                        u.default.track(f.AnalyticEvents.HOME_FEEDBACK_SUBMITTED, {
                            guild_id: n,
                            home_session_id: c.default.getHomeSessionId(n),
                            feed_item_id: a.id,
                            feed_item_position: 0,
                            dismissed: s,
                            report_name: "feed_item_feedback",
                            load_id: r.default.getLoadId(n),
                            rating: l,
                            reason_codes: d,
                            reason_descriptions: d.map(e => null !== (t = h(e)) && void 0 !== t ? t : ""),
                            user_feedback: o
                        })
                    })({
                        guildId: t,
                        guildFeedItem: n,
                        dismissed: e,
                        selectedRating: d,
                        selectedReasons: I,
                        userFeedback: T
                    })
                }, [t, n, d, I, T]), D = a.useCallback(() => {
                    l.default.set(E.GUILD_FEED_FEEDBACK_LAST_SEEN, Date.now()), null == o || o(!0), !A && v(!0)
                }, [v, o, A]), x = a.useCallback(() => {
                    v(!1), p(!0), l.default.set(E.GUILD_FEED_FEEDBACK_LAST_SEEN, Date.now())
                }, [v]), P = a.useMemo(() => I.size > 0 && (!I.has(E.GuildFeedFeedbackReason.OTHER) || null != T && "" !== T), [I, T]), y = (0, s.useStateFromStores)([i.default], () => i.default.useReducedMotion), b = a.useRef(!1);
                return a.useEffect(() => () => {
                    b.current = !0
                }, []), a.useEffect(() => () => {
                    b.current && null != d && D()
                }, [d, D]), {
                    selectedRating: d,
                    setSelectedRating: O,
                    selectedReasons: I,
                    setSelectedReasons: L,
                    setUserFeedback: m,
                    backPressed: S,
                    onBackPressed: M,
                    onSubmitPressed: x,
                    onClosePressed: D,
                    showSubmitted: A,
                    isAnimating: g,
                    canSubmit: P,
                    useReducedMotion: y
                }
            }
        },
        608275: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                saveGuildHomeScrollPosition: function() {
                    return r
                },
                ensureGuildHomeSession: function() {
                    return o
                },
                trackGuildHomeOpened: function() {
                    return u
                }
            });
            var a = n("913144"),
                s = n("599110"),
                l = n("887446"),
                i = n("49111");

            function r(e, t) {
                a.default.dispatch({
                    type: "GUILD_HOME_SET_SCROLL_POSITION",
                    guildId: e,
                    scrollPosition: t
                })
            }

            function o(e) {
                a.default.dispatch({
                    type: "GUILD_HOME_ENSURE_HOME_SESSION",
                    guildId: e
                })
            }

            function u(e, t) {
                s.default.track(i.AnalyticEvents.HOME_OPENED, {
                    guild_id: e,
                    home_session_id: l.default.getHomeSessionId(e),
                    home_session_source: t
                })
            }
        },
        685911: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = {};
            class i extends a.default.PersistedStore {
                initialize(e) {
                    var t;
                    null != e && (l = null !== (t = e.numCleanLoadsForGuild) && void 0 !== t ? t : {})
                }
                getState() {
                    return {
                        numCleanLoadsForGuild: l
                    }
                }
                getTotalNumCleanLoads() {
                    let e = 0;
                    for (let n in l) {
                        var t;
                        e += null !== (t = l[n]) && void 0 !== t ? t : 0
                    }
                    return e
                }
            }
            i.displayName = "GuildHomeFeedbackStore", i.persistKey = "GuildHomeFeedbackStore";
            var r = new i(s.default, {
                GUILD_FEED_FETCH_SUCCESS: function(e) {
                    var t;
                    let {
                        guildId: n,
                        fresh: a
                    } = e;
                    if (!a) return !1;
                    l[n] = Math.min(50, (null !== (t = l[n]) && void 0 !== t ? t : 0) + 1)
                },
                LOGOUT: function() {
                    l = {}
                }
            })
        },
        720102: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("446674"),
                s = n("913144"),
                l = n("162771"),
                i = n("599110"),
                r = n("49111");
            let o = {};

            function u(e) {
                var t;
                if (null == e || e === r.ME || e === r.FAVORITES) return !1;
                let n = null !== (t = o[e]) && void 0 !== t ? t : 0;
                if (Date.now() <= n + 288e5) return !1;
                o[e] = Date.now(), i.default.track(r.AnalyticEvents.HIGHLIGHTS_TEST_LOADED, {
                    guild_id: e
                })
            }
            class d extends a.default.PersistedStore {
                initialize(e) {
                    this.waitFor(l.default), null != e && (o = e.lastHighlightsLoadMillis)
                }
                getState() {
                    return {
                        lastHighlightsLoadMillis: o
                    }
                }
            }
            d.displayName = "HighlightsTestStore", d.persistKey = "HighlightsTestStore", new d(s.default, {
                CONNECTION_OPEN: function() {
                    let e = l.default.getGuildId();
                    return u(e)
                },
                CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t
                    } = e;
                    return u(t)
                }
            })
        },
        379607: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return B
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("866227"),
                o = n.n(r),
                u = n("611221"),
                d = n("446674"),
                c = n("669491"),
                E = n("819855"),
                f = n("77078"),
                _ = n("272030"),
                I = n("590514"),
                h = n("750560"),
                C = n("679653"),
                T = n("419830"),
                m = n("713810"),
                S = n("185014"),
                N = n("465519"),
                A = n("120027"),
                p = n("699473"),
                g = n("42203"),
                R = n("697218"),
                O = n("730106"),
                L = n("215361"),
                M = n("345318"),
                v = n("782340"),
                D = n("120967"),
                x = n("782983"),
                P = n("229709");
            let y = async () => {
                let {
                    default: e
                } = await n.el("437150").then(n.bind(n, "437150"));
                return e
            }, b = e => {
                let {
                    featuredItem: t,
                    className: n
                } = e, l = c.default.colors.TEXT_POSITIVE, r = L.default, u = (0, d.useStateFromStores)([R.default], () => R.default.getUser(t.details.actorUserId), [t]), E = s.useMemo(() => null == u ? {} : {
                    [t.guildId]: [u.id]
                }, [t.guildId, u]);
                switch ((0, h.useSubscribeGuildMembers)(E), l = (0, N.getFeaturedExpirationTextColor)(t.details.expiresAt)) {
                    case c.default.colors.TEXT_DANGER:
                        r = O.default;
                        break;
                    case c.default.colors.TEXT_WARNING:
                        r = M.default;
                        break;
                    case c.default.colors.TEXT_POSITIVE:
                        r = L.default
                }
                return (0, a.jsxs)("div", {
                    className: i(n, D.header),
                    children: [(0, a.jsxs)("div", {
                        className: D.expirationContainer,
                        children: [(0, a.jsx)(r, {
                            color: l.css,
                            "aria-hidden": !0,
                            className: D.expiredIcon
                        }), (0, a.jsx)(f.Text, {
                            style: {
                                color: l.css
                            },
                            variant: "text-sm/normal",
                            children: v.default.Messages.GUILD_FEED_FEATURED_EXPIRED_IN.format({
                                fromNow: o(t.details.expiresAt).fromNow()
                            })
                        })]
                    }), (0, a.jsx)(A.default, {
                        height: 4,
                        width: 4,
                        "aria-hidden": "true",
                        className: D.dotIcon
                    }), (0, a.jsxs)("div", {
                        className: D.featuredByContainer,
                        children: [(0, a.jsx)(f.Text, {
                            className: D.featuredByText,
                            variant: "text-sm/normal",
                            children: v.default.Messages.GUILD_FEED_FEATURED_BY
                        }), null != u && (0, a.jsx)(f.Avatar, {
                            size: f.AvatarSizes.SIZE_16,
                            src: u.getAvatarURL(void 0, 16),
                            "aria-hidden": !0
                        })]
                    })]
                })
            }, U = e => {
                let {
                    channel: t
                } = e, n = (0, C.default)(t), s = (0, T.getChannelIconComponent)(t), l = (0, T.getChannelIconTooltipText)(t);
                return null == t ? null : (0, a.jsxs)("div", {
                    className: D.channelHeaderContainer,
                    children: [null != s ? (0, a.jsx)(f.Tooltip, {
                        text: l,
                        delay: 500,
                        children: e => (0, a.jsx)(s, {
                            ...e,
                            className: D.channelIcon,
                            height: 16,
                            width: 16
                        })
                    }) : null, (0, a.jsx)(f.Heading, {
                        className: D.channelHeader,
                        variant: "text-sm/semibold",
                        children: n
                    })]
                })
            }, G = s.memo(function(e) {
                let {
                    guildId: t,
                    featuredItem: n
                } = e, s = (0, d.useStateFromStores)([S.default], () => S.default.getCachedMessage(t, n.message.channel_id, n.message.id)), l = (0, d.useStateFromStores)([g.default], () => g.default.getChannel(null == s ? void 0 : s.channel_id));
                return null == l || null == s ? null : (0, a.jsxs)(f.Clickable, {
                    onContextMenu: e => {
                        e.stopPropagation(), (0, _.openContextMenuLazy)(e, async () => {
                            let e = await y();
                            return t => (0, a.jsx)(e, {
                                ...t,
                                messageItem: n,
                                channel: l,
                                message: s
                            })
                        })
                    },
                    className: D.featuredItemsGroupWrapper,
                    children: [(0, a.jsx)(b, {
                        featuredItem: n.featuredItem
                    }), (0, a.jsx)(U, {
                        channel: l
                    }), (0, a.jsx)(p.default, {
                        className: D.featuredItemsGroupCozy,
                        message: s,
                        channel: l
                    })]
                })
            }), j = s.memo(function(e) {
                let {
                    guildId: t,
                    featuredItem: n
                } = e, s = (0, d.useStateFromStores)([g.default], () => g.default.getChannel(n.thread.id)), l = (0, d.useStateFromStores)([g.default], () => g.default.getChannel(null == s ? void 0 : s.parent_id)), i = (0, d.useStateFromStores)([S.default], () => S.default.getCachedMessage(t, n.message.channel_id, n.message.id));
                return null == i || null == l || null == s ? null : (0, a.jsxs)(f.Clickable, {
                    onContextMenu: e => {
                        e.stopPropagation(), (0, _.openContextMenuLazy)(e, async () => {
                            let e = await y();
                            return t => (0, a.jsx)(e, {
                                ...t,
                                messageItem: n,
                                channel: s,
                                message: i
                            })
                        })
                    },
                    className: D.featuredItemsGroupWrapper,
                    children: [(0, a.jsx)(b, {
                        featuredItem: n.featuredItem
                    }), (0, a.jsx)(U, {
                        channel: l
                    }), (0, a.jsx)(f.Heading, {
                        className: D.forumPostHeading,
                        variant: "heading-md/semibold",
                        children: s.name
                    }), (0, a.jsx)(p.default, {
                        className: D.featuredItemsGroupCozy,
                        message: i,
                        channel: s
                    })]
                }, i.id)
            });

            function F(e) {
                let t = (0, E.isThemeLight)(e) ? P : x;
                return (0, a.jsxs)("div", {
                    className: D.emptyPlaceholder,
                    children: [(0, a.jsx)("div", {
                        className: D.emptyImage,
                        style: {
                            backgroundImage: "url(".concat(t, ")")
                        }
                    }), (0, a.jsx)("div", {
                        className: D.emptyBody,
                        children: v.default.Messages.GUILD_FEED_FEATURED_ITEMS_NO_ITEMS
                    })]
                })
            }

            function k() {
                return (0, a.jsx)(I.Header, {
                    title: v.default.Messages.GUILD_FEED_FEATURE_MESSAGE
                })
            }

            function B(e) {
                let {
                    guildId: t
                } = e, n = (0, d.useStateFromStoresArray)([S.default], () => S.default.getFeaturedItems(t), [t]), l = (0, d.useStateFromStores)([S.default], () => S.default.getFeaturedItemsFetchStatus(t), [t]);
                return s.useEffect(() => {
                    (0, m.fetchGuildFeedFeaturedItems)(t)
                }, [t]), (0, a.jsx)(f.Dialog, {
                    "aria-label": v.default.Messages.GUILD_FEED_FEATURED_MESSAGES,
                    children: (0, a.jsx)(I.ItemsPopout, {
                        analyticsName: "Featured Feed Items Popout",
                        listName: "featuredMessages",
                        items: n,
                        loading: l.loading !== S.LoadingStatus.NONE,
                        renderEmptyState: F,
                        renderHeader: k,
                        renderItem: function(e) {
                            return null == e ? [] : e.type === u.GuildFeedItemTypes.MESSAGE ? [(0, a.jsx)(G, {
                                guildId: t,
                                featuredItem: e
                            }, e.id)] : e.type === u.GuildFeedItemTypes.FORUM_POST ? [(0, a.jsx)(j, {
                                guildId: t,
                                featuredItem: e
                            }, e.id)] : []
                        }
                    })
                })
            }
        },
        241094: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActiveTextChannels: function() {
                    return _
                },
                useActiveVoiceChannels: function() {
                    return h
                }
            });
            var a = n("446674"),
                s = n("233069"),
                l = n("42203"),
                i = n("305961"),
                r = n("957255"),
                o = n("282109"),
                u = n("316133"),
                d = n("449008"),
                c = n("558130"),
                E = n("49111"),
                f = n("724210");
            let _ = e => (0, a.useStateFromStoresArray)([l.default, r.default, c.default, o.default], () => I(e, [l.default, r.default, c.default, o.default])),
                I = function(e) {
                    let [t, n, a, i] = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [l.default, r.default, c.default, o.default], u = a.getActiveChannelIds(e), _ = null != u ? Array.from(u) : [], I = i.getMutedChannels(e);
                    return _.map(e => t.getChannel(e)).filter(d.isNotNullish).filter(e => {
                        if ((null == e ? void 0 : e.hasFlag(f.ChannelFlags.ACTIVE_CHANNELS_REMOVED)) || !(0, s.isTextChannel)(e.type) || I.has(e.id) || null != e.parent_id && I.has(e.parent_id) || !n.can(E.Permissions.VIEW_CHANNEL, e)) return !1;
                        let a = t.getChannel(e.parent_id);
                        return !(e.isThread() && null != a && (null == a ? void 0 : a.hasFlag(f.ChannelFlags.ACTIVE_CHANNELS_REMOVED))) && !0
                    })
                },
                h = (e, t) => (0, a.useStateFromStoresArray)([r.default, l.default, u.default, i.default], () => C(e, t, [r.default, l.default, u.default, i.default])),
                C = function(e, t) {
                    var n;
                    let [a, s, o, c] = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [r.default, l.default, u.default, i.default], _ = o.getVoiceStates(e), I = Object.keys(_).filter(e => _[e].length > 0), h = null === (n = c.getGuild(e)) || void 0 === n ? void 0 : n.afkChannelId;
                    return I.filter(e => e !== h && e !== (null == t ? void 0 : t.channel_id)).map(e => s.getChannel(e)).filter(d.isNotNullish).filter(e => !(null == e ? void 0 : e.hasFlag(f.ChannelFlags.ACTIVE_CHANNELS_REMOVED)) && a.can(E.Permissions.VIEW_CHANNEL, e))
                }
        },
        577177: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("398604"),
                l = n("534222"),
                i = n("599110"),
                r = n("887446"),
                o = n("49111");

            function u(e) {
                let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
                    n = (0, l.default)(e);
                a.useEffect(() => {
                    t && i.default.track(o.AnalyticEvents.HOME_EVENTS_LOADED, {
                        guild_id: e,
                        active_events_shown: n.some(e => (0, s.isGuildScheduledEventActive)(e)) ? 1 : 0,
                        upcoming_events_shown: n.some(e => !(0, s.isGuildScheduledEventActive)(e)) ? 1 : 0,
                        home_session_id: r.default.getHomeSessionId(e)
                    })
                }, [e, t])
            }
        },
        75360: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("884691"),
                s = n("730290"),
                l = n("90915");

            function i() {
                let e = (0, l.useLocation)(),
                    {
                        highlight_channel_id: t,
                        highlight_message_id: n
                    } = (0, s.parse)(e.search);
                return a.useMemo(() => null != n && null != t ? {
                    messageId: n,
                    channelId: t
                } : null, [t, n])
            }
        },
        795783: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("298386"),
                s = n("446674"),
                l = n("923959"),
                i = n("282109");

            function r(e) {
                let t = (0, s.useStateFromStores)([l.default], () => l.default.getChannels(e)),
                    n = t[l.GUILD_SELECTABLE_CHANNELS_KEY],
                    r = (0, s.useStateFromStoresArray)([i.default], () => n.filter(e => {
                        let {
                            channel: t
                        } = e;
                        return a.ChannelTypesSets.READABLE.has(t.type) && !a.ChannelTypesSets.GUILD_VOCAL.has(t.type)
                    }).filter(t => {
                        let {
                            channel: n
                        } = t;
                        return i.default.isChannelMuted(e, n.id) || i.default.isCategoryMuted(e, n.id)
                    }), [e, n]);
                return r.length
            }
        },
        620840: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("65597"),
                l = n("697218"),
                i = n("685911"),
                r = n("994428");
            let o = new Date(Date.UTC(2022, 7, 6));

            function u(e, t) {
                let n = (0, s.default)([i.default], () => 2 >= i.default.getTotalNumCleanLoads()),
                    u = (0, s.default)([l.default], () => {
                        let e = l.default.getCurrentUser();
                        return null == e || e.createdAt.getTime() < o.getTime()
                    }),
                    d = a.useMemo(() => (null == e ? void 0 : e.joinedAt) != null && o.getTime() > e.joinedAt.getTime(), [null == e ? void 0 : e.joinedAt]),
                    c = n && u && !d;
                return a.useEffect(() => {
                    !c && t(r.ContentDismissActionType.AUTO)
                }, [c]), c || !0
            }
        },
        280110: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("884691"),
                s = n("599110"),
                l = n("887446"),
                i = n("49111");

            function r(e) {
                a.useEffect(() => {
                    let t = l.default.getHomeSessionId(e);
                    return () => {
                        s.default.track(i.AnalyticEvents.HOME_EXITED, {
                            guild_id: e,
                            home_session_id: t
                        })
                    }
                }, [e])
            }
        },
        154925: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DISPLAYED_PARTICIPANT_AVATARS: function() {
                    return h
                },
                ACTIVE_NOW_ICON_SIZE: function() {
                    return C
                },
                ActiveNowBase: function() {
                    return T
                },
                ActiveChannelBase: function() {
                    return m
                },
                ActiveNowFiller: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("974667"),
                o = n("77078"),
                u = n("834897"),
                d = n("419830"),
                c = n("811305"),
                E = n("515631"),
                f = n("782340"),
                _ = n("62082"),
                I = n("470932");
            let h = 3,
                C = 16,
                T = s.forwardRef(function(e, t) {
                    let {
                        shouldUseCollapsedLayout: n = !0,
                        listItemId: s,
                        onClick: l,
                        icon: d,
                        iconTooltipText: c,
                        textNode: f,
                        header: I,
                        accessoryNode: h,
                        children: C
                    } = e, T = (0, u.default)(E.COLLAPSED_SIZE_MEDIA_QUERY), m = (0, r.useListItem)(null != s ? s : "");
                    return (0, a.jsxs)("div", {
                        ref: t,
                        className: i(_.container, {
                            [_.containerCard]: T,
                            [_.collapsedLayout]: T && n
                        }),
                        children: [(0, a.jsxs)(o.Clickable, {
                            className: _.body,
                            onClick: l,
                            ...null != s ? m : void 0,
                            children: [(0, a.jsxs)("div", {
                                className: _.details,
                                children: [null != d ? (0, a.jsx)(o.Tooltip, {
                                    text: c,
                                    delay: 500,
                                    children: e => (0, a.jsx)("div", {
                                        ...e,
                                        className: _.iconContainer,
                                        children: d
                                    })
                                }) : null, (0, a.jsx)(o.Heading, {
                                    className: _.title,
                                    variant: "heading-sm/semibold",
                                    lineClamp: 1,
                                    children: I
                                }), (0, a.jsx)("div", {
                                    className: _.subtitle,
                                    children: f
                                })]
                            }), null != h && (0, a.jsx)("div", {
                                className: _.accessoryContainer,
                                children: h
                            })]
                        }), C]
                    })
                }),
                m = s.forwardRef(function(e, t) {
                    let {
                        children: n,
                        guildId: s,
                        channel: l,
                        text: i,
                        activityIndicator: r,
                        usersInSummary: f,
                        onChannelClick: I,
                        channelIconOptions: m
                    } = e, S = (0, u.default)(E.COLLAPSED_SIZE_MEDIA_QUERY), N = (0, d.getChannelIconComponent)(l, null, m);
                    return (0, a.jsx)(T, {
                        ref: t,
                        textNode: null != i ? (0, a.jsx)(o.Text, {
                            className: _.channelSubtitle,
                            variant: "text-xs/normal",
                            children: i
                        }) : null,
                        listItemId: l.id,
                        accessoryNode: (0, a.jsx)(c.default, {
                            guildId: s,
                            users: f,
                            size: S ? c.Sizes.SIZE_24 : c.Sizes.SIZE_16,
                            max: S ? 5 : h,
                            extraDetail: r
                        }),
                        onClick: I,
                        icon: null != N && (0, a.jsx)(N, {
                            width: C,
                            height: C
                        }),
                        iconTooltipText: (0, d.getChannelIconTooltipText)(l),
                        header: l.name,
                        children: n
                    })
                });

            function S() {
                return (0, a.jsxs)("div", {
                    className: i(_.container, _.containerCard, _.fillerCard),
                    children: [(0, a.jsx)("img", {
                        src: I,
                        className: _.spacerChannelImg,
                        alt: "",
                        "aria-hidden": !0
                    }), (0, a.jsxs)("div", {
                        className: _.fillerText,
                        children: [(0, a.jsx)(o.Heading, {
                            className: _.title,
                            variant: "heading-sm/semibold",
                            children: f.default.Messages.ACTIVE_CHANNELS_COLLAPSED_SPACER_TITLE
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-xs/normal",
                            children: f.default.Messages.ACTIVE_CHANNELS_COLLAPSED_SPACER_SUBTITLE
                        })]
                    })]
                })
            }
        },
        914878: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return F
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n("355262"),
                u = n("942367"),
                d = n("446674"),
                c = n("77078"),
                E = n("731898"),
                f = n("841098"),
                _ = n("510889"),
                I = n("191152"),
                h = n("425974"),
                C = n("398604"),
                T = n("534222"),
                m = n("316133"),
                S = n("461380"),
                N = n("599110"),
                A = n("558130"),
                p = n("887446"),
                g = n("241094"),
                R = n("154925"),
                O = n("128651"),
                L = n("229661"),
                M = n("540585"),
                v = n("821435"),
                D = n("49111"),
                x = n("782340"),
                P = n("382756"),
                y = n("897142"),
                b = n("352791");
            let U = {
                overflowX: void 0,
                overflowY: void 0
            };

            function G() {
                let e = (0, f.default)();
                return (0, a.jsxs)("div", {
                    className: P.emptyStateContainer,
                    children: [(0, a.jsx)("img", {
                        className: P.image,
                        src: "dark" === e ? y : b,
                        width: 154,
                        height: 48,
                        alt: ""
                    }), (0, a.jsx)(c.Heading, {
                        className: P.title,
                        variant: "heading-md/semibold",
                        children: x.default.Messages.ACTIVE_CHANNELS_EMPTY_TITLE
                    }), (0, a.jsx)(c.Text, {
                        className: P.subtitle,
                        color: "header-secondary",
                        variant: "text-sm/normal",
                        children: x.default.Messages.ACTIVE_CHANNELS_EMPTY_SUBTITLE
                    })]
                })
            }

            function j(e) {
                let {
                    isUsingCollapsedLayout: t,
                    scrollerRef: n,
                    handleScroll: s,
                    activeChannels: l,
                    totalActiveChannels: i
                } = e, r = (0, _.default)("active-channels", n, {
                    orientation: t ? u.Orientations.HORIZONTAL : u.Orientations.VERTICAL
                });
                return (0, a.jsx)(o.ListNavigatorProvider, {
                    navigator: r,
                    children: (0, a.jsx)(o.ListNavigatorContainer, {
                        children: e => {
                            let {
                                ref: r,
                                ...o
                            } = e;
                            return (0, a.jsxs)(c.AdvancedScrollerNone, {
                                className: P.channelList,
                                orientation: "horizontal",
                                paddingFix: !1,
                                onScroll: s,
                                style: t ? void 0 : U,
                                ref: e => {
                                    var t;
                                    n.current = e, r.current = null !== (t = null == e ? void 0 : e.getScrollerNode()) && void 0 !== t ? t : null, s()
                                },
                                ...o,
                                children: [l, t && i < 4 && (0, a.jsx)(R.ActiveNowFiller, {})]
                            })
                        }
                    })
                })
            }

            function F(e) {
                let {
                    guildId: t,
                    isUsingCollapsedLayout: n
                } = e, l = (0, d.useStateFromStores)([A.default], () => A.default.getActiveChannelsFetchStatus(t)), o = (0, g.useActiveTextChannels)(t), u = (0, T.useGuildActiveEvent)(t), f = (0, d.useStateFromStores)([m.default], () => m.default.getVoiceStates(t)), _ = (0, g.useActiveVoiceChannels)(t, u), R = o.length + _.length + (null != u ? 1 : 0), y = R > 0, b = s.useRef(null), U = (0, T.default)(t), F = U.filter(e => !(0, C.isGuildScheduledEventActive)(e)), [k, B] = s.useState(0 === F.length), [w, H] = s.useState(!0), [V, Y] = s.useState(!1), {
                    ref: W,
                    width: K
                } = (0, E.default)(), z = s.useCallback(() => {
                    let {
                        current: e
                    } = b;
                    if (null == e || null == K) return;
                    let {
                        scrollLeft: t,
                        scrollWidth: n
                    } = e.getScrollerState();
                    H(t <= 0), Y(t >= n - K - 1)
                }, [K]), q = s.useCallback(() => {
                    let {
                        current: e
                    } = b;
                    if (null == e || null == K) return;
                    let {
                        scrollLeft: t
                    } = e.getScrollerState(), n = K + 12, a = Math.max(.25 * K - 9, 140);
                    e.scrollTo({
                        to: Math.max(0, Math.ceil((t - n) / a) * a),
                        animate: !0
                    })
                }, [K]), Q = s.useCallback(() => {
                    let {
                        current: e
                    } = b;
                    if (null == e || null == K) return;
                    let {
                        scrollLeft: t,
                        scrollWidth: n
                    } = e.getScrollerState(), a = K + 12, s = Math.max(.25 * K - 9, 140);
                    e.scrollTo({
                        to: Math.min(n, Math.floor((t + a) / s) * s),
                        animate: !0
                    })
                }, [K]);
                s.useEffect(() => {
                    A.default.shouldFetch(t) && (0, I.fetchActiveChannels)(t)
                }, [t]), (0, h.default)(t, o, _);
                let X = s.useCallback(e => {
                        N.default.track(D.AnalyticEvents.ACTIVE_CHANNEL_CLICKED, {
                            guild_id: e.guild_id,
                            channel_id: e.id,
                            channel_type: e.type,
                            text_channels_shown: o.length,
                            voice_channels_shown: _.length,
                            home_session_id: p.default.getHomeSessionId(e.guild_id)
                        })
                    }, [o, _]),
                    J = o.map(e => (0, a.jsx)(L.default, {
                        guildId: t,
                        channel: e,
                        trackChannelClick: X
                    }, e.id)),
                    Z = _.map(e => (0, a.jsx)(M.default, {
                        guildId: t,
                        channel: e,
                        voiceStates: f[e.id],
                        trackChannelClick: X,
                        showPreview: !n
                    }, e.id)),
                    $ = [];
                if (n) $ = [...J, ...Z];
                else if (k) $ = r.compact([null != u && (0, a.jsx)(v.default, {
                    event: u,
                    isInList: !0
                }, "event"), ...J.slice(0, 10), ...Z]);
                else {
                    let e = r.take(J, 3 - (Z.length > 0 ? 1 : 0) - (null != u ? 1 : 0)),
                        t = r.take(Z, 3 - e.length - (null != u ? 1 : 0));
                    $ = r.compact([null != u && (0, a.jsx)(v.default, {
                        event: u,
                        isInList: !0
                    }, "event"), ...e, ...t])
                }
                return (0, a.jsx)("div", {
                    ref: W,
                    className: P.container,
                    children: (0, a.jsxs)(c.HeadingLevel, {
                        component: (0, a.jsxs)("div", {
                            className: P.header,
                            children: [(0, a.jsx)(c.Heading, {
                                variant: "heading-md/semibold",
                                children: x.default.Messages.ACTIVE_CHANNELS_HEADER
                            }), !n && (null == l ? void 0 : l.loading) !== !0 && R > 3 && (0, a.jsx)(c.Clickable, {
                                onClick: () => B(!k),
                                children: (0, a.jsx)(c.Text, {
                                    className: P.showAll,
                                    variant: "text-sm/normal",
                                    children: k ? x.default.Messages.GUILD_HOME_SEE_LESS : x.default.Messages.GUILD_HOME_SEE_ALL.format({
                                        count: R
                                    })
                                })
                            })]
                        }),
                        children: [(null == l ? void 0 : l.loading) ? (0, a.jsx)(c.AdvancedScrollerNone, {
                            className: P.channelList,
                            orientation: "horizontal",
                            paddingFix: !1,
                            children: (0, a.jsx)(O.default, {
                                guildId: t
                            })
                        }) : y ? (0, a.jsx)(j, {
                            isUsingCollapsedLayout: n,
                            scrollerRef: b,
                            handleScroll: z,
                            activeChannels: $,
                            totalActiveChannels: R
                        }) : (0, a.jsx)(G, {}), n && y && !w && (0, a.jsx)(c.Clickable, {
                            className: i(P.scrollIcon, P.left),
                            onClick: q,
                            "aria-hidden": !0,
                            children: (0, a.jsx)(S.default, {
                                direction: S.default.Directions.LEFT,
                                height: 12,
                                width: 12
                            })
                        }), n && y && !V && (0, a.jsx)(c.Clickable, {
                            className: i(P.scrollIcon, P.right),
                            onClick: Q,
                            "aria-hidden": !0,
                            children: (0, a.jsx)(S.default, {
                                direction: S.default.Directions.RIGHT,
                                height: 12,
                                width: 12
                            })
                        })]
                    })
                })
            }
        },
        128651: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("917351"),
                r = n("834897"),
                o = n("67602"),
                u = n("811305"),
                d = n("515631"),
                c = n("62082");

            function E(e) {
                let {
                    guildId: t
                } = e, n = (0, r.default)(d.COLLAPSED_SIZE_MEDIA_QUERY);
                return (0, a.jsxs)(a.Fragment, {
                    children: [i.times(n ? 4 : 3, e => (0, a.jsxs)("div", {
                        className: l(c.container, {
                            [c.loadingContainer]: !0,
                            [c.containerCard]: n,
                            [c.collapsedLayout]: n
                        }),
                        children: [(0, a.jsxs)("div", {
                            className: c.body,
                            children: [(0, a.jsxs)("div", {
                                className: c.details,
                                children: [(0, a.jsx)("div", {
                                    className: c.iconContainer
                                }), (0, a.jsx)(o.ContentBlob, {
                                    className: c.title,
                                    opacity: .2,
                                    width: 72
                                }), (0, a.jsx)(o.ContentBlob, {
                                    className: c.subtitle,
                                    opacity: .1,
                                    width: 100
                                })]
                            }), (0, a.jsx)("div", {
                                className: c.accessoryContainer,
                                children: (0, a.jsx)(u.default, {
                                    guildId: t,
                                    renderUser: () => (0, a.jsx)("div", {
                                        className: c.loadingUser,
                                        style: {
                                            width: n ? 24 : 16,
                                            height: n ? 24 : 16
                                        }
                                    }),
                                    users: [null, null],
                                    size: n ? u.Sizes.SIZE_24 : u.Sizes.SIZE_16,
                                    extraDetail: (0, a.jsx)("div", {
                                        className: c.typingIndicator
                                    })
                                })
                            })]
                        }), 2 === e && (0, a.jsx)("div", {
                            className: c.previewContainer
                        })]
                    }, e)), (0, a.jsx)("div", {}), " "]
                })
            }
        },
        229661: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("917351"),
                l = n.n(s),
                i = n("446674"),
                r = n("77078"),
                o = n("537325"),
                u = n("191542"),
                d = n("697218"),
                c = n("449008"),
                E = n("299039"),
                f = n("558130"),
                _ = n("154925"),
                I = n("49111"),
                h = n("782340"),
                C = n("62082");

            function T(e) {
                var t;
                let {
                    guildId: n,
                    channel: s,
                    trackChannelClick: T
                } = e, m = (0, i.useStateFromStoresArray)([f.default], () => null !== (t = f.default.getChannelMessageData(s.id)) && void 0 !== t ? t : []), S = l.uniq(l.map(m, "userId")), N = (0, i.useStateFromStoresArray)([d.default], () => S.map(e => d.default.getUser(e))), A = (0, i.useStateFromStores)([u.default], () => {
                    let e = u.default.getTypingUsers(s.id);
                    return Object.keys(e).length > 0
                }, [s.id]), p = m.length < f.MAX_STORED_MESSAGES ? h.default.Messages.ACTIVE_CHANNELS_FEW_MESSAGES.format({
                    count: m.length
                }) : h.default.Messages.ACTIVE_CHANNELS_MANY_MESSAGES, g = A ? (0, a.jsx)("div", {
                    className: C.typingIndicator,
                    children: (0, a.jsx)(r.Dots, {
                        className: C.ellipsis,
                        dotRadius: 2,
                        themed: !0
                    })
                }) : null;
                return (0, a.jsx)(_.ActiveChannelBase, {
                    guildId: n,
                    channel: s,
                    usersInSummary: N.filter(c.isNotNullish),
                    text: p,
                    activityIndicator: g,
                    onChannelClick: () => {
                        T(s), (0, o.default)(I.Routes.CHANNEL(s.guild_id, s.id, E.default.fromTimestamp(Date.now())))
                    }
                })
            }
        },
        540585: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("987317"),
                d = n("990766"),
                c = n("242740"),
                E = n("223913"),
                f = n("795026"),
                _ = n("673527"),
                I = n("848848"),
                h = n("233069"),
                C = n("373469"),
                T = n("271938"),
                m = n("957255"),
                S = n("18494"),
                N = n("267675"),
                A = n("158998"),
                p = n("154925"),
                g = n("49111"),
                R = n("62082");

            function O(e) {
                var t;
                let {
                    channel: n,
                    voiceStates: s,
                    showPlaceholder: l
                } = e, c = (0, r.useStateFromStores)([C.default], () => C.default.getAllApplicationStreamsForChannel(n.id)[0]), I = (0, r.useStateFromStores)([C.default], () => null != c ? C.default.getActiveStreamForApplicationStream(c) : null), h = (0, r.useStateFromStores)([T.default], () => T.default.getId()), [m, S] = (0, E.useCanWatchStream)(n);
                if (null == c) return null;
                let p = i.chain(s).map("member").find(["userId", c.ownerId]).value(),
                    O = i.chain(s).map("user").find(["id", c.ownerId]).value(),
                    L = null !== (t = null == p ? void 0 : p.nick) && void 0 !== t ? t : A.default.getName(O),
                    M = null != I && null != c && I.state !== g.ApplicationStreamStates.ENDED && I.ownerId === c.ownerId;
                return (0, a.jsxs)(o.Clickable, {
                    onClick: () => {
                        u.default.selectVoiceChannel(n.id), !M && (0, d.watchStreamAndTransitionToStream)(c)
                    },
                    className: R.previewContainer,
                    children: [l ? (0, a.jsx)(_.DefaultFallback, {
                        className: R.previewImage,
                        isLoading: !0
                    }) : (0, a.jsx)(_.default, {
                        className: R.previewImage,
                        stream: c
                    }), m ? (0, a.jsx)("div", {
                        className: R.previewHover,
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-sm/normal",
                            color: "none",
                            className: R.previewButton,
                            children: (0, f.default)(c, I, h, S)
                        })
                    }) : null, null != L ? (0, a.jsxs)("div", {
                        className: R.previewName,
                        children: [(0, a.jsx)(N.default, {
                            width: 18,
                            height: 18,
                            className: R.icon
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-sm/normal",
                            color: "none",
                            children: L
                        })]
                    }) : null]
                })
            }

            function L(e) {
                var t, n;
                let {
                    guildId: l,
                    channel: o,
                    voiceStates: u,
                    trackChannelClick: d,
                    showPreview: E
                } = e, f = u.map(e => e.user), {
                    needSubscriptionToAccess: _
                } = (0, I.default)(null !== (t = null == o ? void 0 : o.id) && void 0 !== t ? t : void 0), C = (0, r.useStateFromStores)([m.default], () => !m.default.can(g.Permissions.CONNECT, o)), T = s.useRef(null), N = function(e) {
                    let t = s.useRef(null),
                        [n, a] = s.useState(!1);
                    return s.useEffect(() => {
                        t.current = new IntersectionObserver(e => {
                            let [t] = e;
                            return a(t.isIntersecting)
                        })
                    }, []), s.useEffect(() => {
                        var n;
                        if (null != e.current) return null === (n = t.current) || void 0 === n || n.observe(e.current), () => {
                            var e;
                            null === (e = t.current) || void 0 === e || e.disconnect()
                        }
                    }, [e]), n
                }(T), R = s.useRef(!1);
                s.useEffect(() => {
                    N && (R.current = !0)
                }, [N]);
                let L = i.map(u, e => {
                        var t;
                        return null !== (n = null === (t = e.member) || void 0 === t ? void 0 : t.nick) && void 0 !== n ? n : A.default.getName(e.user)
                    }),
                    M = L.join(", ");
                return (0, a.jsx)(p.ActiveChannelBase, {
                    ref: T,
                    guildId: l,
                    channel: o,
                    text: M,
                    usersInSummary: f,
                    onChannelClick: () => {
                        if (!(0, h.isGuildVocalChannelType)(o.type)) return;
                        let e = S.default.getVoiceChannelId(),
                            t = !m.default.can(g.Permissions.CONNECT, o);
                        d(o), c.default.handleVoiceConnect({
                            channel: o,
                            locked: t,
                            connected: e === o.id,
                            needSubscriptionToAccess: _
                        })
                    },
                    channelIconOptions: {
                        locked: C
                    },
                    children: E && (0, a.jsx)(O, {
                        channel: o,
                        voiceStates: u,
                        showPlaceholder: !R.current
                    })
                })
            }
        },
        260730: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("713810"),
                r = n("404103"),
                o = n("350928"),
                u = n("185014"),
                d = n("60036"),
                c = n("435123"),
                E = n("537594"),
                f = n("38654"),
                _ = n("471671"),
                I = n("555158"),
                h = n("395118"),
                C = n("299039"),
                T = n("816454"),
                m = n("601414"),
                S = n("146005"),
                N = n("887446"),
                A = n("75360"),
                p = n("216364"),
                g = n("405700"),
                R = n("806727"),
                O = n("807058"),
                L = n("815619"),
                M = n("515631"),
                v = n("782340"),
                D = n("846928");
            let x = s.memo(function(e) {
                    let {
                        guildId: t
                    } = e, n = (0, l.useStateFromStores)([f.default], () => f.default.isViewingRoles(t));
                    return n ? (0, a.jsx)(I.default, {
                        messageType: I.HelpMessageTypes.WARNING,
                        children: v.default.Messages.GUILD_FEED_VIEW_AS_ROLE_WARNING
                    }) : null
                }),
                P = s.memo(function(e) {
                    let {
                        guildId: t,
                        hasMoreItems: n,
                        scrollerRef: l,
                        error: i,
                        fetchPage: r,
                        onReloadClick: o
                    } = e, u = s.useRef(null);
                    return (s.useEffect(() => {
                        var e;
                        let t = u.current,
                            a = null === (e = l.current) || void 0 === e ? void 0 : e.getScrollerNode();
                        if (null == a || null == t || !n) return;
                        let s = new IntersectionObserver(e => {
                            for (let t of e) t.intersectionRatio > 0 && r()
                        }, {
                            root: a,
                            rootMargin: "0px 0px 200px 0px",
                            threshold: 0
                        });
                        return s.observe(t), () => {
                            s.disconnect()
                        }
                    }, [l, u, r, t, n]), null != i) ? (0, a.jsx)(p.GuildFeedPaginationError, {
                        guildId: t,
                        onReloadClick: r
                    }) : n ? (0, a.jsx)("div", {
                        className: D.container,
                        ref: u,
                        children: (0, a.jsx)(g.default, {
                            count: 1
                        })
                    }) : (0, a.jsx)(p.GuildFeedFooter, {
                        guildId: t,
                        onReloadClick: o
                    })
                });

            function y(e) {
                var t, n, f, I, v;
                let {
                    guild: y,
                    renderMode: b,
                    scrollerRef: U,
                    seenManagerRef: G
                } = e, j = (0, A.default)(), [F, k, B, w] = (0, l.useStateFromStoresArray)([u.default], () => [M.GuildFeedSectionTypes.READ, M.GuildFeedSectionTypes.UNREAD, M.GuildFeedSectionTypes.HIGHLIGHTED, M.GuildFeedSectionTypes.ALL].map(e => u.default.getFeedItemSection(y.id, e))), H = (0, l.useStateFromStores)([u.default], () => u.default.getLoadId(y.id)), V = (0, l.useStateFromStores)([N.default], () => N.default.getHomeSessionId(y.id)), {
                    loading: Y,
                    error: W,
                    fetchFresh: K,
                    fetchPage: z
                } = (0, c.default)({
                    guildId: y.id,
                    highlightedItemData: j
                }), {
                    hasMoreItems: q
                } = (0, l.useStateFromStores)([u.default], () => u.default.getPaginationStatus(y.id)), {
                    hasNewHeader: Q
                } = S.GuildHomeHeaderRedesignExperiment.useExperiment({
                    guildId: y.id,
                    location: "00f40d_1"
                }, {
                    autoTrackExposure: !1
                }), {
                    homeHeaderScroll: X
                } = (0, L.useHomeHeader)(y);
                s.useEffect(() => (r.default.initialize(), () => {
                    r.default.terminate()
                }), []), s.useLayoutEffect(() => {
                    if (null == H || null == V) return;
                    (0, i.sendFeedShownAnalytics)(y.id);
                    let e = (0, T.getMainWindowId)(),
                        t = new o.default({
                            guildId: y.id,
                            loadId: H,
                            homeSessionId: V,
                            windowId: e,
                            isPaused: !_.default.isFocused(e)
                        });
                    return t.initialize(), G.current = t, () => {
                        t.terminate()
                    }
                }, [G, y.id, H, V]);
                let J = function(e) {
                        let [t, n] = s.useState(null);
                        return s.useEffect(() => {
                            var t;
                            let a = null === (t = e.current) || void 0 === t ? void 0 : t.getScrollerNode();
                            if (null == a) return;
                            let s = new ResizeObserver(e => {
                                for (let t of e) n(t.contentRect.height)
                            });
                            return s.observe(a), () => {
                                s.disconnect()
                            }
                        }, [e]), t
                    }(U),
                    Z = s.useMemo(() => b !== M.GuildFeedRenderMode.NEW ? [] : [...w].sort((e, t) => -C.default.compare((0, d.default)(e).id, (0, d.default)(t).id)), [w, b]),
                    $ = s.useCallback(async () => {
                        var e;
                        await (null === (e = G.current) || void 0 === e ? void 0 : e.maybeFlushSeenItems(h.ForceFlushType.IMMEDIATE)), K({
                            force: !0,
                            flushSeenItems: () => {
                                var e;
                                return null === (e = G.current) || void 0 === e ? void 0 : e.maybeFlushSeenItems(h.ForceFlushType.IMMEDIATE)
                            }
                        })
                    }, [G, K]);
                s.useEffect(() => {
                    if (Y === u.LoadingStatus.LOADING_FRESH_FEED) {
                        var e, t;
                        Q ? null === (e = U.current) || void 0 === e || e.scrollTo({
                            to: X
                        }) : null === (t = U.current) || void 0 === t || t.scrollToTop()
                    }
                }, [Y, Q, X]);
                let ee = 0 === w.length,
                    {
                        showFeedback: et,
                        setOnDismissedFeedback: en
                    } = (0, m.useShowFeedback)();
                if (ee) return Y === u.LoadingStatus.LOADING_FRESH_FEED ? (0, a.jsx)("div", {
                    className: D.container,
                    children: (0, a.jsx)(g.default, {})
                }) : null != W ? (0, a.jsx)(p.GuildFeedError, {
                    guildId: y.id,
                    onReloadClick: $
                }) : (0, a.jsx)(p.GuildFeedEmpty, {
                    guildId: y.id,
                    onReloadClick: $
                });
                if (b === M.GuildFeedRenderMode.TOP) return (0, a.jsxs)("div", {
                    className: D.container,
                    children: [(0, a.jsx)(R.default, {
                        guild: y
                    }), w.map((e, t) => (0, a.jsx)(E.default, {
                        guildId: y.id,
                        itemId: e.id,
                        scrollerHeight: J,
                        scrollerRef: U,
                        showFeedback: 0 === t && et,
                        setOnDismissedFeedback: en
                    }, e.id)), (0, a.jsx)(P, {
                        guildId: y.id,
                        hasMoreItems: null != q && q,
                        scrollerRef: U,
                        error: W,
                        fetchPage: z,
                        onReloadClick: $
                    })]
                });
                if (b === M.GuildFeedRenderMode.NEW) return (0, a.jsxs)("div", {
                    className: D.container,
                    children: [(0, a.jsx)(R.default, {
                        guild: y
                    }), Z.map((e, t) => (0, a.jsx)(E.default, {
                        guildId: y.id,
                        itemId: e.id,
                        scrollerHeight: J,
                        scrollerRef: U,
                        showFeedback: 0 === t && et,
                        setOnDismissedFeedback: en
                    }, e.id)), (0, a.jsx)(P, {
                        guildId: y.id,
                        hasMoreItems: null != q && q,
                        scrollerRef: U,
                        error: W,
                        fetchPage: z,
                        onReloadClick: $
                    })]
                });
                let ea = null !== (v = null !== (I = null === (t = B[0]) || void 0 === t ? void 0 : t.id) && void 0 !== I ? I : null === (n = k[0]) || void 0 === n ? void 0 : n.id) && void 0 !== v ? v : null === (f = F[0]) || void 0 === f ? void 0 : f.id;
                return (0, a.jsxs)("div", {
                    className: D.container,
                    children: [(0, a.jsx)(x, {
                        guildId: y.id
                    }), (0, a.jsx)(R.default, {
                        guild: y
                    }), B.map(e => (0, a.jsx)(E.default, {
                        guildId: y.id,
                        itemId: e.id,
                        scrollerHeight: J,
                        scrollerRef: U,
                        showFeedback: e.id === ea && et,
                        setOnDismissedFeedback: en
                    }, e.id)), k.map(e => (0, a.jsx)(E.default, {
                        guildId: y.id,
                        itemId: e.id,
                        scrollerHeight: J,
                        scrollerRef: U,
                        showFeedback: e.id === ea && et,
                        setOnDismissedFeedback: en
                    }, e.id)), F.length > 0 ? (0, a.jsx)(O.default, {}) : null, F.map(e => (0, a.jsx)(E.default, {
                        guildId: y.id,
                        itemId: e.id,
                        scrollerHeight: J,
                        scrollerRef: U,
                        showFeedback: e.id === ea && et,
                        setOnDismissedFeedback: en
                    }, e.id)), (0, a.jsx)(P, {
                        guildId: y.id,
                        hasMoreItems: null != q && q,
                        scrollerRef: U,
                        error: W,
                        fetchPage: z,
                        onReloadClick: $
                    })]
                })
            }
        },
        216364: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildFeedFooter: function() {
                    return h
                },
                GuildFeedEmpty: function() {
                    return C
                },
                GuildFeedError: function() {
                    return T
                },
                GuildFeedPaginationError: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("109264"),
                u = n("543289"),
                d = n("423487"),
                c = n("795783"),
                E = n("49111"),
                f = n("782340"),
                _ = n("916697");

            function I(e, t, s) {
                return (0, a.jsx)(r.Clickable, {
                    className: _.mutedChannelsHook,
                    onClick: function() {
                        (0, r.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("747593").then(n.bind(n, "747593"));
                            return t => (0, a.jsx)(e, {
                                ...t,
                                guildId: s
                            })
                        })
                    },
                    children: e
                }, t)
            }
            let h = s.memo(function(e) {
                    let {
                        guildId: t,
                        onReloadClick: n
                    } = e, s = (0, c.default)(t);
                    return (0, a.jsxs)("div", {
                        className: i(_.container, _.footerContainer),
                        children: [(0, a.jsxs)("div", {
                            className: _.iconContainer,
                            children: [(0, a.jsx)(o.default, {
                                className: _.icon,
                                width: 20,
                                height: 20
                            }), (0, a.jsx)(u.default, {
                                className: _.stars,
                                width: 52,
                                height: 40
                            })]
                        }), (0, a.jsx)(r.Heading, {
                            className: _.header,
                            variant: "heading-md/semibold",
                            children: f.default.Messages.GUILD_FEED_FOOTER_TITLE
                        }), (0, a.jsx)(r.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: s > 0 ? f.default.Messages.GUILD_FEED_MUTED_CHANNELS_SUBTITLE.format({
                                numMutedChannels: s,
                                mutedChannelsHook: (e, n) => I(e, n, t)
                            }) : f.default.Messages.GUILD_FEED_FOOTER_SUBTITLE
                        }), (0, a.jsx)(r.Button, {
                            onClick: n,
                            className: _.button,
                            children: f.default.Messages.GUILD_FEED_RELOAD
                        })]
                    })
                }),
                C = s.memo(function(e) {
                    let {
                        guildId: t,
                        onReloadClick: n
                    } = e, s = (0, c.default)(t);
                    return (0, a.jsxs)("div", {
                        className: i(_.container, _.background),
                        children: [(0, a.jsxs)("div", {
                            className: _.iconContainer,
                            children: [(0, a.jsx)(o.default, {
                                className: _.icon,
                                width: 36,
                                height: 36
                            }), (0, a.jsx)(u.default, {
                                className: _.stars
                            })]
                        }), (0, a.jsx)(r.Heading, {
                            className: _.header,
                            variant: "heading-md/semibold",
                            children: f.default.Messages.GUILD_FEED_EMPTY_TITLE
                        }), (0, a.jsx)(r.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: s > 0 ? f.default.Messages.GUILD_FEED_MUTED_CHANNELS_SUBTITLE.format({
                                numMutedChannels: s,
                                mutedChannelsHook: (e, n) => I(e, n, t)
                            }) : f.default.Messages.GUILD_FEED_EMPTY_SUBTITLE
                        }), (0, a.jsx)(r.Button, {
                            onClick: n,
                            className: _.button,
                            children: f.default.Messages.GUILD_FEED_RELOAD
                        })]
                    })
                }),
                T = s.memo(function(e) {
                    let {
                        onReloadClick: t
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i(_.container, _.background),
                        children: [(0, a.jsx)("div", {
                            className: _.iconContainer,
                            children: (0, a.jsx)(d.default, {
                                className: _.icon,
                                width: 36,
                                height: 36
                            })
                        }), (0, a.jsx)(r.Heading, {
                            className: _.header,
                            variant: "heading-md/semibold",
                            children: f.default.Messages.GUILD_FEED_ERROR_TITLE
                        }), (0, a.jsx)(r.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: f.default.Messages.GUILD_FEED_ERROR_SUBTITLE.format({
                                url: E.Links.STATUS
                            })
                        }), (0, a.jsx)(r.Button, {
                            onClick: t,
                            className: _.button,
                            children: f.default.Messages.GUILD_FEED_RELOAD
                        })]
                    })
                }),
                m = s.memo(function(e) {
                    let {
                        onReloadClick: t
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i(_.container, _.paginationContainer, _.primaryBackground),
                        children: [(0, a.jsx)("div", {
                            className: _.iconContainer,
                            children: (0, a.jsx)(d.default, {
                                className: _.icon,
                                width: 36,
                                height: 36
                            })
                        }), (0, a.jsx)(r.Heading, {
                            className: _.header,
                            variant: "heading-md/semibold",
                            children: f.default.Messages.GUILD_FEED_ERROR_TITLE
                        }), (0, a.jsx)(r.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: f.default.Messages.GUILD_FEED_ERROR_SUBTITLE.format({
                                url: E.Links.STATUS
                            })
                        }), (0, a.jsx)(r.Button, {
                            onClick: t,
                            className: _.button,
                            children: f.default.Messages.RETRY
                        })]
                    })
                })
        },
        405700: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("339274"),
                o = n("605143"),
                u = n("88243"),
                d = n("67602"),
                c = n("318675");

            function E() {
                let e = s.useMemo(() => {
                    if (!(.5 > i.random(1))) return {
                        ...(0, u.generateAttachmentSpec)(),
                        last: !0
                    }
                }, []);
                return (0, a.jsxs)(r.default, {
                    "aria-hidden": !0,
                    ariaLabel: "",
                    children: [(0, a.jsx)(o.default, {
                        children: (0, a.jsx)(d.ContentBlob, {
                            className: c.channelName,
                            opacity: .3,
                            width: 80
                        })
                    }), (0, a.jsx)("div", {
                        className: c.body,
                        children: (0, a.jsx)(d.default, {
                            messages: 5,
                            attachmentSpecs: e,
                            className: c.withoutCustomBackground
                        })
                    })]
                })
            }
            var f = s.memo(function(e) {
                let {
                    count: t
                } = e;
                return (0, a.jsx)(a.Fragment, {
                    children: i.times(null != t ? t : 5, e => (0, a.jsx)(E, {}, e))
                })
            })
        },
        67076: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("446674"),
                r = n("77078"),
                o = n("957255"),
                u = n("945330"),
                d = n("701909"),
                c = n("620840"),
                E = n("49111"),
                f = n("782340"),
                _ = n("719593"),
                I = n("487577");

            function h(e) {
                let {
                    children: t,
                    onClose: n
                } = e;
                return (0, a.jsxs)("div", {
                    className: _.container,
                    children: [(0, a.jsx)(r.Clickable, {
                        className: _.closeButton,
                        onClick: n,
                        children: (0, a.jsx)(u.default, {
                            className: _.closeIcon
                        })
                    }), (0, a.jsx)("div", {
                        className: _.textContainer,
                        children: t
                    }), (0, a.jsx)("img", {
                        className: _.image,
                        src: I,
                        alt: ""
                    })]
                })
            }

            function C(e) {
                let {
                    onClose: t
                } = e;
                return (0, a.jsxs)(h, {
                    onClose: t,
                    children: [(0, a.jsx)(r.Heading, {
                        style: {
                            color: "white"
                        },
                        variant: "heading-lg/semibold",
                        color: "none",
                        children: f.default.Messages.GUILD_FEED_NUX_MEMBER_TITLE
                    }), (0, a.jsx)(r.Text, {
                        className: _.bodySection,
                        variant: "text-sm/normal",
                        color: "none",
                        children: f.default.Messages.GUILD_FEED_NUX_MEMBER_BODY_1
                    }), (0, a.jsx)(r.Text, {
                        className: _.bodySection,
                        variant: "text-sm/normal",
                        color: "none",
                        children: f.default.Messages.GUILD_FEED_NUX_MEMBER_BODY_2
                    }), (0, a.jsx)(r.Anchor, {
                        className: l(_.cta, _.ctaLink, (0, r.getButtonStyle)({
                            look: r.Button.Looks.LINK,
                            color: r.Button.Colors.WHITE
                        })),
                        href: d.default.getArticleURL(E.HelpdeskArticles.GUILD_HOME),
                        children: f.default.Messages.GUILD_FEED_NUX_MEMBER_BODY_3
                    })]
                })
            }

            function T() {
                (0, r.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await n.el("56657").then(n.bind(n, "56657"));
                    return t => (0, a.jsx)(e, {
                        ...t
                    })
                })
            }

            function m(e) {
                let {
                    onClose: t
                } = e;
                return (0, a.jsxs)(h, {
                    onClose: t,
                    children: [(0, a.jsx)(r.Heading, {
                        style: {
                            color: "white"
                        },
                        variant: "heading-lg/semibold",
                        color: "none",
                        children: f.default.Messages.GUILD_FEED_NUX_MODERATOR_TITLE
                    }), (0, a.jsx)(r.Text, {
                        className: _.bodySection,
                        variant: "text-sm/normal",
                        color: "none",
                        children: f.default.Messages.GUILD_FEED_NUX_MEMBER_BODY_1
                    }), (0, a.jsx)(r.Text, {
                        className: _.bodySection,
                        variant: "text-sm/normal",
                        color: "none",
                        children: f.default.Messages.GUILD_FEED_NUX_MEMBER_BODY_2
                    }), (0, a.jsx)(r.Button, {
                        className: _.cta,
                        look: r.Button.Looks.INVERTED,
                        color: r.Button.Colors.BRAND,
                        onClick: T,
                        children: f.default.Messages.GUILD_FEED_NUX_MODERATOR_CTA
                    })]
                })
            }

            function S(e) {
                let {
                    guild: t,
                    onClose: n
                } = e, s = (0, i.useStateFromStores)([o.default], () => o.default.can(E.Permissions.MANAGE_MESSAGES, t)), l = (0, c.default)(t, n);
                return l ? s ? (0, a.jsx)(m, {
                    onClose: n
                }) : (0, a.jsx)(C, {
                    onClose: n
                }) : null
            }
        },
        806727: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("509802"),
                r = n("67076"),
                o = n("994428");
            let u = [l.DismissibleContent.GUILD_FEED_NUX_CARD];
            var d = s.memo(function(e) {
                let {
                    guild: t
                } = e;
                return (0, a.jsx)(i.default, {
                    contentTypes: u,
                    groupName: o.DismissibleContentGroupName.GUILD_FEED_TOP,
                    children: e => {
                        let {
                            visibleContent: n,
                            markAsDismissed: s
                        } = e;
                        if (n === l.DismissibleContent.GUILD_FEED_NUX_CARD) return (0, a.jsx)(r.default, {
                            guild: t,
                            onClose: s
                        });
                        return null
                    }
                })
            })
        },
        807058: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("36694"),
                r = n("782340"),
                o = n("263405"),
                u = s.memo(function() {
                    return (0, a.jsxs)("div", {
                        className: o.container,
                        children: [(0, a.jsxs)("div", {
                            className: o.divider,
                            children: [(0, a.jsx)("div", {
                                className: o.line
                            }), (0, a.jsx)("div", {
                                className: o.icon,
                                children: (0, a.jsx)(i.default, {
                                    height: 24,
                                    width: 24
                                })
                            }), (0, a.jsx)("div", {
                                className: o.line
                            })]
                        }), (0, a.jsx)(l.Text, {
                            className: o.title,
                            color: "header-primary",
                            variant: "text-md/semibold",
                            children: r.default.Messages.GUILD_FEED_UNREAD_DIVIDER_TITLE
                        }), (0, a.jsx)(l.Text, {
                            className: o.subtitle,
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: r.default.Messages.GUILD_FEED_UNREAD_DIVIDER_SUBTITLE
                        })]
                    })
                })
        },
        821435: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return w
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("298386"),
                o = n("446674"),
                u = n("77078"),
                d = n("834897"),
                c = n("419830"),
                E = n("374021"),
                f = n("398604"),
                _ = n("628059"),
                I = n("841363"),
                h = n("822516"),
                C = n("93550"),
                T = n("267567"),
                m = n("393414"),
                S = n("716214"),
                N = n("488464"),
                A = n("998716"),
                p = n("42203"),
                g = n("957255"),
                R = n("316133"),
                O = n("943232"),
                L = n("93393"),
                M = n("718550"),
                v = n("811305"),
                D = n("599110"),
                x = n("887446"),
                P = n("154925"),
                y = n("49111"),
                b = n("515631"),
                U = n("745049"),
                G = n("782340"),
                j = n("53176");

            function F(e) {
                let {
                    event: t
                } = e, {
                    scheduled_start_time: n,
                    scheduled_end_time: l
                } = t, r = (0, f.isGuildScheduledEventActive)(t), [{
                    startDateTimeString: o,
                    endDateTimeString: d,
                    currentOrPastEvent: c,
                    upcomingEvent: E,
                    diffMinutes: _
                }, I] = s.useState((0, h.getEventTimeData)(n, l));
                s.useEffect(() => {
                    let e = setInterval(() => I((0, h.getEventTimeData)(n, l)), 1e3);
                    return () => {
                        clearInterval(e)
                    }
                }, []);
                let C = o,
                    T = "header-secondary";
                return r ? (C = G.default.Messages.STAGE_CHANNEL_LIVE_NOW, T = "text-positive") : c ? (C = G.default.Messages.STARTING_SOON, T = "text-brand") : E ? (C = _ > 0 ? G.default.Messages.STARTING_IN_MINUTES.format({
                    minutes: _
                }) : G.default.Messages.STARTING_SOON, T = "text-brand") : null != d && "" !== d && (C = G.default.Messages.START_DATE_TO_END_DATE.format({
                    start: o,
                    end: d
                })), (0, a.jsxs)("div", {
                    className: i(j.eventTime, {
                        [j.isActive]: r,
                        [j.isBrand]: c || E
                    }),
                    children: [(0, a.jsx)(L.default, {
                        width: 12,
                        height: 12
                    }), (0, a.jsxs)(u.Text, {
                        color: T,
                        variant: "text-xs/normal",
                        className: j.eventTimeLabel,
                        children: [C, (0, a.jsx)("span", {
                            className: j.separator,
                            children: "•"
                        })]
                    })]
                })
            }

            function k(e) {
                let {
                    event: t,
                    channel: n,
                    isCollapsedSize: l,
                    onEventClick: i
                } = e, r = (0, o.useStateFromStores)([g.default], () => g.default.can(y.Permissions.CONNECT, n)), d = s.useCallback(() => {
                    null != n && null != n.getGuildId() && r && ((0, S.connectAndOpen)(n), (0, m.transitionToGuild)(n.getGuildId(), n.id))
                }, [n, r]), c = (0, C.default)(t), E = t.entity_type === U.GuildScheduledEventEntityTypes.STAGE_INSTANCE ? G.default.Messages.STAGE_CHANNEL_JOIN_BUTTON : G.default.Messages.JOIN;
                if (null == t.image || l) return null != n && r ? (0, a.jsx)("div", {
                    className: j.eventJoinContainer,
                    children: (0, a.jsx)(u.Button, {
                        className: j.joinButton,
                        onClick: d,
                        fullWidth: !0,
                        color: u.Button.Colors.GREEN,
                        children: E
                    })
                }) : null;
                return null != n && r ? (0, a.jsxs)(u.Clickable, {
                    onClick: d,
                    className: j.eventJoinContainer,
                    children: [(0, a.jsx)("div", {
                        className: j.eventImg,
                        style: {
                            backgroundImage: "url(".concat(c, ")")
                        }
                    }), (0, a.jsx)("div", {
                        className: j.eventImgHover,
                        children: (0, a.jsx)(u.Text, {
                            variant: "text-sm/normal",
                            color: "none",
                            className: j.eventImgJoinButton,
                            children: E
                        })
                    })]
                }) : (0, a.jsx)(u.Clickable, {
                    onClick: i,
                    className: j.eventJoinContainer,
                    children: (0, a.jsx)("div", {
                        className: j.eventImg,
                        style: {
                            backgroundImage: "url(".concat(c, ")")
                        }
                    })
                })
            }

            function B(e) {
                var t;
                let {
                    event: n,
                    channel: s,
                    isActive: l,
                    isCollapsedSize: r
                } = e, o = (0, c.getChannelIconComponent)(s);
                return (0, a.jsxs)("div", {
                    className: j.eventInfo,
                    children: [(!l || r) && (0, a.jsx)(F, {
                        event: n
                    }), (0, a.jsx)("div", {
                        className: j.location,
                        children: null != s && null != o ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(o, {
                                width: 12,
                                height: 12,
                                className: j.icon
                            }), (0, a.jsx)(u.Text, {
                                variant: "text-xs/normal",
                                className: j.locationLabel,
                                children: s.name
                            })]
                        }) : (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(M.default, {
                                height: 12,
                                width: 12,
                                className: i(j.channelContainer, j.icon)
                            }), (0, a.jsx)(u.Text, {
                                variant: "text-xs/normal",
                                className: j.locationLabel,
                                children: (0, _.guildEventDetailsParser)(null !== (t = (0, I.getLocationFromEvent)(n)) && void 0 !== t ? t : void 0, !0)
                            })]
                        })
                    })]
                })
            }

            function w(e) {
                let {
                    event: t,
                    isInList: n
                } = e, {
                    guild_id: l
                } = t, i = (0, d.default)(b.COLLAPSED_SIZE_MEDIA_QUERY), u = (0, f.isGuildScheduledEventActive)(t), c = (0, o.useStateFromStores)([p.default], () => p.default.getChannel(t.channel_id)), _ = (0, o.useStateFromStores)([T.default], () => T.default.isLurking(l), [l]), I = s.useCallback(() => {
                    D.default.track(y.AnalyticEvents.HOME_EVENT_CLICKED, {
                        guild_id: l,
                        home_session_id: x.default.getHomeSessionId(l),
                        guild_scheduled_event_id: t.id,
                        is_active: u
                    }), (0, E.openGuildEventDetails)({
                        eventId: t.id,
                        parentGuildId: l
                    })
                }, [t, l, u]), h = (0, o.useStateFromStoresArray)([R.default], () => null == c ? [] : R.default.getVoiceStatesForChannel(c).map(e => {
                    let {
                        user: t
                    } = e;
                    return t
                }), [c]), C = (0, o.useStateFromStores)([N.default], () => {
                    if (null != c && c.type === r.ChannelTypes.GUILD_STAGE_VOICE) return N.default.getParticipantCount(null == c ? void 0 : c.id, A.StageChannelParticipantNamedIndex.AUDIENCE)
                }, [c]);
                return (0, a.jsx)(P.ActiveNowBase, {
                    listItemId: n ? t.id : void 0,
                    shouldUseCollapsedLayout: !1,
                    onClick: _ ? void 0 : I,
                    icon: u ? (0, a.jsx)("div", {
                        className: j.liveNowIcon
                    }) : (0, a.jsx)(O.default, {
                        width: P.ACTIVE_NOW_ICON_SIZE,
                        height: P.ACTIVE_NOW_ICON_SIZE
                    }),
                    iconTooltipText: G.default.Messages.GUILD_HOME_EVENTS_TOOLTIP_TEXT,
                    header: t.name,
                    textNode: (0, a.jsx)(B, {
                        event: t,
                        channel: c,
                        isActive: u,
                        isCollapsedSize: i
                    }),
                    accessoryNode: u ? (0, a.jsx)(v.default, {
                        guildId: l,
                        users: h,
                        count: C,
                        size: v.Sizes.SIZE_16,
                        max: P.DISPLAYED_PARTICIPANT_AVATARS
                    }) : null,
                    children: u && (0, a.jsx)(k, {
                        event: t,
                        channel: c,
                        isCollapsedSize: i,
                        onEventClick: I
                    })
                })
            }
        },
        114935: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("866227"),
                o = n.n(r),
                u = n("151426"),
                d = n("77078"),
                c = n("834897"),
                E = n("10641"),
                f = n("398604"),
                _ = n("534222"),
                I = n("821435"),
                h = n("515631"),
                C = n("782340"),
                T = n("850858");

            function m(e) {
                let {
                    guild: t
                } = e, l = (0, c.default)(h.COLLAPSED_SIZE_MEDIA_QUERY), r = (0, _.default)(t.id), m = s.useMemo(() => {
                    let e = r.filter(e => (0, f.isGuildScheduledEventActive)(e));
                    return l && e.length > 0 ? i.head(e) : i.chain(r).filter(e => !(0, f.isGuildScheduledEventActive)(e)).minBy(e => o(e.scheduled_start_time)).value()
                }, [r, l]);
                if (null == m) return null;
                async function S() {
                    await (0, d.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("659707").then(n.bind(n, "659707"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            guildId: t.id
                        })
                    }), (0, E.markDismissibleContentAsDismissed)(u.DismissibleContent.GUILD_HEADER_EVENT_UPSELL)
                }
                return (0, a.jsxs)("div", {
                    className: T.container,
                    children: [(0, a.jsxs)("div", {
                        className: T.header,
                        children: [(0, a.jsx)(d.Heading, {
                            variant: "heading-md/semibold",
                            children: l ? C.default.Messages.GUILD_EVENTS : C.default.Messages.GUILD_HOME_EVENTS_TITLE
                        }), r.length >= 2 ? (0, a.jsx)(d.Clickable, {
                            onClick: S,
                            children: (0, a.jsx)(d.Text, {
                                className: T.showEvents,
                                variant: "text-sm/normal",
                                children: C.default.Messages.GUILD_HOME_SEE_ALL.format({
                                    count: r.length
                                })
                            })
                        }) : null]
                    }), (0, a.jsx)("div", {
                        className: T.events,
                        children: (0, a.jsx)(I.default, {
                            event: m,
                            isInList: !1
                        })
                    })]
                })
            }
        },
        20362: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("503021"),
                o = n("757414"),
                u = n("109024"),
                d = n("782340"),
                c = n("864732");

            function E(e) {
                let {
                    guild: t
                } = e;
                s.useEffect(() => {
                    (0, r.fetchGuildForPopout)(t.id)
                }, [t.id]);
                let n = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(t.id), [t]);
                return (0, a.jsxs)("div", {
                    className: c.memberInfo,
                    children: [(null == n ? void 0 : n.presenceCount) != null ? (0, a.jsxs)("div", {
                        className: c.memberCount,
                        children: [(0, a.jsx)("div", {
                            className: c.dotOnline
                        }), (0, a.jsx)(i.Text, {
                            variant: "text-sm/normal",
                            className: c.memberText,
                            children: d.default.Messages.MEMBER_VERIFICATION_NUM_ONLINE.format({
                                membersOnline: n.presenceCount
                            })
                        })]
                    }) : null, (null == n ? void 0 : n.memberCount) != null ? (0, a.jsxs)("div", {
                        className: c.memberCount,
                        children: [(0, a.jsx)("div", {
                            className: c.dotOffline
                        }), (0, a.jsx)(i.Text, {
                            variant: "text-sm/normal",
                            className: c.memberText,
                            children: d.default.Messages.MEMBER_VERIFICATION_NUM_MEMBERS.format({
                                members: n.memberCount
                            })
                        })]
                    }) : null]
                })
            }
            var f = s.memo(function(e) {
                let {
                    guild: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: c.container,
                    children: [(0, a.jsx)("div", {
                        className: c.iconWrapper,
                        children: (0, a.jsx)(u.default, {
                            className: c.icon,
                            guild: t,
                            size: u.default.Sizes.LARGER,
                            active: !0
                        })
                    }), (0, a.jsx)(i.Text, {
                        tag: "div",
                        className: c.name,
                        variant: "heading-xl/semibold",
                        children: t.name
                    }), null != t.description ? (0, a.jsx)(i.Text, {
                        className: c.description,
                        variant: "text-md/normal",
                        children: t.description
                    }) : null, (0, a.jsx)(E, {
                        guild: t
                    })]
                })
            })
        },
        815619: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHomeHeader: function() {
                    return O
                },
                default: function() {
                    return v
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("669491"),
                u = n("77078"),
                d = n("841098"),
                c = n("380710"),
                E = n("592407"),
                f = n("242757"),
                _ = n("957255"),
                I = n("40469"),
                h = n("109024"),
                C = n("181114"),
                T = n("118503"),
                m = n("818643"),
                S = n("315102"),
                N = n("49111"),
                A = n("782340"),
                p = n("53354"),
                g = n("141555"),
                R = n("520609");
            let O = e => {
                let t = s.useMemo(() => null == e ? null : S.default.getGuildHomeHeaderURL({
                    id: e.id,
                    homeHeader: e.homeHeader
                }), [e]);
                return {
                    homeHeaderImage: t,
                    isHomeHeaderImageSet: null != t,
                    homeHeaderScroll: null != t ? 200 : 0
                }
            };

            function L(e) {
                let {
                    guild: t
                } = e, n = () => {
                    E.default.open(t.id, N.GuildSettingsSections.ONBOARDING, void 0, N.GuildSettingsSubsections.SERVER_GUIDE)
                }, s = t.hasFeature(N.GuildFeatures.BANNER);
                return s ? (0, a.jsxs)(u.Button, {
                    className: p.editButton,
                    innerClassName: p.editButtonInner,
                    type: "button",
                    size: u.Button.Sizes.MEDIUM,
                    color: u.Button.Colors.BRAND,
                    onClick: n,
                    children: [(0, a.jsx)(m.default, {
                        height: 16,
                        width: 16,
                        color: o.default.unsafe_rawColors.WHITE_500.css
                    }), A.default.Messages.EDIT_IMAGE]
                }) : (0, a.jsxs)(C.default, {
                    color: u.Button.Colors.GREEN,
                    className: p.editButton,
                    innerClassName: p.editButtonInner,
                    onClick: n,
                    children: [(0, a.jsx)(T.default, {
                        height: 16,
                        width: 16,
                        className: p.premiumUpsellBadge
                    }), A.default.Messages.PREMIUM_GUILD_UNLOCK_WTH_BOOSTING_CTA]
                })
            }
            let M = s.memo(function(e) {
                let {
                    guild: t,
                    titleClassName: s
                } = e, {
                    homeHeaderImage: l,
                    isHomeHeaderImageSet: o
                } = O(t), E = (0, c.useGuildOnboardingSettingsAvailable)(t.id), C = (0, r.useStateFromStores)([_.default], () => (0, f.canViewInviteModal)(_.default, t)), T = (0, d.default)();
                return (0, a.jsxs)("div", {
                    className: p.header,
                    children: [(0, a.jsxs)("div", {
                        className: p.headerArtWrapper,
                        children: [(0, a.jsx)("div", {
                            className: i(p.headerArt, {
                                [p.headerArtPlaceholder]: !o
                            }),
                            style: {
                                backgroundImage: "url(".concat(o ? l : "dark" === T ? g : R, ")")
                            }
                        }), E && (0, a.jsx)(L, {
                            guild: t
                        })]
                    }), (0, a.jsx)("div", {
                        className: p.titleWrapper,
                        children: (0, a.jsxs)("div", {
                            className: s,
                            children: [(0, a.jsx)(h.default, {
                                className: p.headerIcon,
                                guild: t,
                                size: h.default.Sizes.XLARGE,
                                active: !0
                            }), (0, a.jsx)(u.HeadingLevel, {
                                children: (0, a.jsxs)("div", {
                                    className: p.headerName,
                                    children: [(0, a.jsx)(u.Heading, {
                                        className: p.headerName,
                                        variant: "heading-xxl/bold",
                                        children: t.name
                                    }), (0, a.jsx)(I.default, {
                                        size: 24,
                                        guild: t,
                                        tooltipPosition: "bottom",
                                        tooltipColor: u.Tooltip.Colors.PRIMARY,
                                        className: p.guildBadge
                                    }), C && (0, a.jsx)(u.Button, {
                                        className: p.inviteButton,
                                        size: u.Button.Sizes.MEDIUM,
                                        color: u.Button.Colors.PRIMARY,
                                        onClick: () => (0, u.openModalLazy)(async () => {
                                            let {
                                                default: e
                                            } = await n.el("310688").then(n.bind(n, "310688"));
                                            return n => (0, a.jsx)(e, {
                                                ...n,
                                                guild: t,
                                                source: N.InstantInviteSources.GUILD_HOME
                                            })
                                        }),
                                        children: A.default.Messages.INSTANT_INVITE
                                    })]
                                })
                            })]
                        })
                    })]
                })
            });
            var v = M
        },
        543071: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("503021"),
                o = n("757414"),
                u = n("794352"),
                d = n("782340"),
                c = n("864732");

            function E(e) {
                let {
                    guild: t
                } = e;
                s.useEffect(() => {
                    (0, r.fetchGuildForPopout)(t.id)
                }, [t.id]);
                let n = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(t.id), [t]);
                return (0, a.jsxs)("div", {
                    className: c.memberInfo,
                    children: [t.hasCommunityInfoSubheader() && (0, a.jsxs)("div", {
                        className: c.memberCount,
                        children: [(0, a.jsx)(u.default, {
                            width: 14,
                            height: 14
                        }), (0, a.jsx)(i.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: d.default.Messages.DISCOVERABLE_GUILD_HEADER_PUBLIC
                        })]
                    }), (null == n ? void 0 : n.presenceCount) != null && (0, a.jsxs)("div", {
                        className: c.memberCount,
                        children: [(0, a.jsx)("div", {
                            className: c.dotOnline
                        }), (0, a.jsx)(i.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: d.default.Messages.MEMBER_VERIFICATION_NUM_ONLINE.format({
                                membersOnline: n.presenceCount
                            })
                        })]
                    }), (null == n ? void 0 : n.memberCount) != null && (0, a.jsxs)("div", {
                        className: c.memberCount,
                        children: [(0, a.jsx)("div", {
                            className: c.dotOffline
                        }), (0, a.jsx)(i.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            children: d.default.Messages.MEMBER_VERIFICATION_NUM_MEMBERS.format({
                                members: n.memberCount
                            })
                        })]
                    })]
                })
            }
            var f = s.memo(function(e) {
                let {
                    guild: t
                } = e;
                return (0, a.jsx)("div", {
                    className: c.container,
                    children: (0, a.jsxs)(i.HeadingLevel, {
                        component: (0, a.jsx)("div", {
                            className: c.header,
                            children: (0, a.jsx)(i.Heading, {
                                variant: "heading-md/bold",
                                children: d.default.Messages.GUILD_HOME_ABOUT
                            })
                        }),
                        children: [null != t.description ? (0, a.jsx)(i.Text, {
                            className: c.description,
                            variant: "text-md/normal",
                            children: t.description
                        }) : null, (0, a.jsx)(E, {
                            guild: t
                        })]
                    })
                })
            })
        },
        144295: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eh
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("355262"),
                o = n("446674"),
                u = n("77078"),
                d = n("851387"),
                c = n("737960"),
                E = n("731898"),
                f = n("834897"),
                _ = n("510889"),
                I = n("665182"),
                h = n("624027"),
                C = n("462998"),
                T = n("69927"),
                m = n("298878"),
                S = n("713810"),
                N = n("185014"),
                A = n("290886"),
                p = n("957687"),
                g = n("90713"),
                R = n("539938"),
                O = n("144491"),
                L = n("56778"),
                M = n("208021"),
                v = n("582713"),
                D = n("861570"),
                x = n("982108"),
                P = n("760190"),
                y = n("305961"),
                b = n("957255"),
                U = n("744983"),
                G = n("223383"),
                j = n("550515"),
                F = n("664336"),
                k = n("395118"),
                B = n("599110"),
                w = n("608275"),
                H = n("677315"),
                V = n("146005"),
                Y = n("887446"),
                W = n("827298"),
                K = n("577177"),
                z = n("75360"),
                q = n("280110"),
                Q = n("914878"),
                X = n("260730"),
                J = n("114935"),
                Z = n("20362"),
                $ = n("815619"),
                ee = n("543071"),
                et = n("49111"),
                en = n("724210"),
                ea = n("515631"),
                es = n("782340"),
                el = n("895976"),
                ei = n("305794"),
                er = n("487577");
            let eo = 936,
                eu = s.memo(function(e) {
                    let {
                        guild: t,
                        seenManagerRef: n
                    } = e, l = function(e, t) {
                        let {
                            showRefreshButton: n
                        } = H.GuildFeedRefreshButtonExperiment.useExperiment({
                            location: "69386d_1"
                        }, {
                            autoTrackExposure: !1
                        });
                        s.useEffect(() => {
                            H.GuildFeedRefreshButtonExperiment.trackExposure({
                                location: "69386d_2"
                            })
                        }, []);
                        let l = (0, o.useStateFromStores)([b.default], () => b.default.can(et.Permissions.MANAGE_MESSAGES, e), [e]),
                            i = [];
                        return n && i.push((0, a.jsx)(F.Icon, {
                            tooltip: es.default.Messages.REFRESH,
                            icon: j.default,
                            onClick: function() {
                                (0, S.fetchGuildFeed)({
                                    guildId: e.id,
                                    refresh: !0,
                                    flushSeenItems: () => {
                                        var e;
                                        return null === (e = t.current) || void 0 === e ? void 0 : e.maybeFlushSeenItems(k.ForceFlushType.IMMEDIATE)
                                    }
                                })
                            }
                        })), l && i.push((0, a.jsx)(g.default, {
                            guildId: e.id
                        })), i
                    }(t, n);
                    return (0, a.jsxs)(R.default, {
                        channelId: en.StaticChannelRoute.GUILD_HOME,
                        guildId: t.id,
                        className: i(ei.title, el.background),
                        innerClassname: el.headerBarInner,
                        toolbar: l,
                        children: [(0, a.jsx)(R.default.Icon, {
                            icon: G.default,
                            "aria-hidden": !0
                        }), (0, a.jsxs)(R.default.Title, {
                            children: [(0, a.jsx)(u.HiddenVisually, {
                                children: t.name
                            }), es.default.Messages.GUILD_HOME]
                        }), (0, a.jsx)(m.default, {})]
                    })
                }),
                ed = s.memo(function(e) {
                    let {
                        guild: t,
                        containerHeight: n,
                        isUsingCollapsedLayout: l
                    } = e, [i, r] = s.useState(0), {
                        ref: o,
                        height: d
                    } = (0, E.default)();
                    (0, K.default)(t.id), s.useEffect(() => {
                        if (null == d) return;
                        let e = d + 128 - n;
                        r(e)
                    }, [n, d]);
                    let c = (0, u.useFocusJumpSection)(),
                        {
                            hasNewHeader: f
                        } = V.GuildHomeHeaderRedesignExperiment.useExperiment({
                            guildId: t.id,
                            location: "69386d_3"
                        }, {
                            autoTrackExposure: !1
                        });
                    return (0, a.jsx)("aside", {
                        className: el.widgets,
                        style: {
                            top: Math.min(-i, f ? -48 : 0)
                        },
                        children: (0, a.jsx)(u.FocusRing, {
                            children: (0, a.jsxs)("div", {
                                className: el.widgetsContainer,
                                ref: o,
                                tabIndex: l ? void 0 : 0,
                                "aria-label": es.default.Messages.GUILD_HOME_SIDEBAR_A11Y_LABEL,
                                ...l ? {} : c,
                                children: [f ? (0, a.jsx)(ee.default, {
                                    guild: t
                                }) : (0, a.jsx)(Z.default, {
                                    guild: t
                                }), (0, a.jsx)(Q.default, {
                                    guildId: t.id,
                                    isUsingCollapsedLayout: l
                                }), (0, a.jsx)(J.default, {
                                    guild: t
                                })]
                            })
                        })
                    })
                });

            function ec(e) {
                let t, {
                        pageWidth: n,
                        onSidebarResize: s
                    } = e,
                    l = (0, o.useStateFromStores)([x.default], () => x.default.getSidebarState(en.StaticChannelRoute.GUILD_HOME));
                if (null == l) return null;
                let i = n - et.CHANNEL_SIDEBAR_WIDTH - 552;
                return l.type === v.SidebarType.VIEW_THREAD ? t = (0, a.jsx)(D.default, {
                    channelId: l.channelId,
                    baseChannelId: en.StaticChannelRoute.GUILD_HOME,
                    channelViewSource: "Home View"
                }) : l.type === v.SidebarType.VIEW_CHANNEL && (t = (0, a.jsx)(C.default, {
                    channelId: l.channelId,
                    baseChannelId: en.StaticChannelRoute.GUILD_HOME,
                    channelViewSource: "Home View"
                })), (0, a.jsx)(I.default, {
                    sidebarType: I.ChatSidebarType.HomeSidebar,
                    maxWidth: i,
                    onWidthChange: s,
                    children: t
                })
            }
            let eE = [{
                label: "Segment Reads",
                value: ea.GuildFeedRenderMode.SEGMENTED_READ
            }, {
                label: "Top",
                value: ea.GuildFeedRenderMode.TOP
            }, {
                label: "New",
                value: ea.GuildFeedRenderMode.NEW
            }];

            function ef(e) {
                let {
                    renderMode: t,
                    setRenderMode: n
                } = e, {
                    showSelector: s
                } = H.GuildFeedRenderSelectorExperiment.useExperiment({
                    location: "69386d_4"
                }, {
                    autoTrackExposure: !1
                });
                return s ? (0, a.jsx)(u.Select, {
                    className: el.selector,
                    options: eE,
                    select: n,
                    isSelected: e => e === t,
                    serialize: e => String(e)
                }) : null
            }
            let e_ = (0, c.default)(function(e) {
                    let {
                        guild: t,
                        width: n,
                        height: l
                    } = e, d = t.id, c = (0, o.useStateFromStores)([x.default], () => x.default.getSection(en.StaticChannelRoute.GUILD_HOME)), I = (0, o.useStateFromStores)([U.default], () => U.default.getCurrentSearchId()), [h, C] = s.useState(!1), [m, S] = s.useState(et.DEFAULT_CHAT_SIDEBAR_WIDTH), A = c === et.ChannelSections.SEARCH, p = c === et.ChannelSections.SIDEBAR_CHAT, g = A || p, R = s.useRef(null), O = (0, _.default)("top-messages", R), {
                        ref: v
                    } = (0, E.default)(), [D, P] = s.useState(ea.GuildFeedRenderMode.SEGMENTED_READ), y = (0, f.default)(ea.COLLAPSED_SIZE_MEDIA_QUERY), b = s.useRef(!1), {
                        hasNewHeader: G
                    } = V.GuildHomeHeaderRedesignExperiment.useExperiment({
                        guildId: d,
                        location: "69386d_5"
                    }, {
                        autoTrackExposure: !1
                    }), {
                        homeHeaderScroll: j
                    } = (0, $.useHomeHeader)(t);
                    s.useEffect(() => {
                        b.current = !1
                    }, [d]), s.useEffect(() => {
                        let e = N.default.getLoadId(d);
                        null == e && M.default.closeChannelSidebar(en.StaticChannelRoute.GUILD_HOME)
                    }, [d]), (0, q.default)(d), s.useLayoutEffect(() => {
                        var e, t;
                        let n = Y.default.getSavedScrollPosition(d);
                        return G && (0 === n || null == n) ? null === (e = R.current) || void 0 === e || e.scrollTo({
                            to: j
                        }) : null != n && (null === (t = R.current) || void 0 === t || t.scrollTo({
                            to: n
                        })), () => {
                            var e;
                            let t = null === (e = R.current) || void 0 === e ? void 0 : e.getScrollerState();
                            null != t && (0, w.saveGuildHomeScrollPosition)(d, t.scrollTop)
                        }
                    }, [d, G, j]);
                    let F = n - et.CHANNEL_SIDEBAR_WIDTH - m,
                        k = s.useRef(null),
                        K = s.useCallback(() => {
                            !b.current && ((0, W.ackGuildHome)(d), b.current = !0, B.default.track(et.AnalyticEvents.HOME_FIRST_SCROLL_STARTED, {
                                guild_id: d,
                                home_session_id: Y.default.getHomeSessionId(d)
                            }))
                        }, [d]);
                    (0, T.usePageTitle)({
                        location: es.default.Messages.GUILD_HOME_HTML_TITLE.format({
                            guildName: t.name
                        })
                    });
                    let z = (0, u.useFocusJumpSection)(),
                        {
                            showDeprecationNotice: Q
                        } = H.GuildHomeDeprecationExperiment.useExperiment({
                            guildId: d,
                            location: "69386d_6"
                        }, {
                            autoTrackExposure: !1
                        }),
                        J = !(g && F < eo) || y ? (0, a.jsx)(ed, {
                            guild: t,
                            containerHeight: l,
                            isUsingCollapsedLayout: y
                        }, "widgets") : null;
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)("div", {
                            className: i(ei.chat, el.background, {
                                [ei.threadSidebarOpen]: g,
                                [ei.threadSidebarFloating]: g && h
                            }),
                            children: [(0, a.jsx)(eu, {
                                guild: t,
                                seenManagerRef: k
                            }), (0, a.jsxs)("div", {
                                ref: v,
                                className: ei.content,
                                children: [(0, a.jsx)(r.ListNavigatorProvider, {
                                    navigator: O,
                                    children: (0, a.jsx)(r.ListNavigatorContainer, {
                                        children: e => {
                                            let {
                                                ref: n,
                                                ...s
                                            } = e;
                                            return (0, a.jsxs)(u.AdvancedScrollerAuto, {
                                                customTheme: !0,
                                                onScroll: K,
                                                className: i(el.homeContainer, {
                                                    [el.homeContainerCollapsed]: y
                                                }),
                                                ref: e => {
                                                    var t;
                                                    R.current = e, n.current = null !== (t = null == e ? void 0 : e.getScrollerNode()) && void 0 !== t ? t : null
                                                },
                                                ...s,
                                                ...z,
                                                children: [G && (0, a.jsx)($.default, {
                                                    guild: t
                                                }), y ? J : null, (0, a.jsxs)("div", {
                                                    className: el.homeContent,
                                                    children: [Q && !t.hasFeature(et.GuildFeatures.GUILD_HOME_DEPRECATION_OVERRIDE) && (0, a.jsxs)("div", {
                                                        className: el.deprecationNotice,
                                                        children: [(0, a.jsxs)("div", {
                                                            className: el.deprecationNoticeContent,
                                                            children: [(0, a.jsx)(u.Heading, {
                                                                className: el.heading,
                                                                variant: "heading-lg/semibold",
                                                                color: "always-white",
                                                                children: es.default.Messages.GUILD_HOME_DEPRECATION_TITLE
                                                            }), (0, a.jsx)(u.Text, {
                                                                variant: "text-md/normal",
                                                                color: "always-white",
                                                                children: es.default.Messages.GUILD_HOME_DEPRECATION_DESCRIPTION
                                                            })]
                                                        }), (0, a.jsx)("img", {
                                                            width: 180,
                                                            className: el.image,
                                                            src: er,
                                                            alt: "",
                                                            "aria-hidden": !0
                                                        })]
                                                    }), (0, a.jsx)(u.HeadingLevel, {
                                                        component: (0, a.jsxs)("div", {
                                                            className: el.topMessagesHeader,
                                                            children: [(0, a.jsx)(u.Heading, {
                                                                variant: "heading-md/semibold",
                                                                children: es.default.Messages.GUILD_FEED_TITLE
                                                            }), (0, a.jsx)(ef, {
                                                                renderMode: D,
                                                                setRenderMode: P
                                                            })]
                                                        }),
                                                        children: (0, a.jsx)(X.default, {
                                                            guild: t,
                                                            renderMode: D,
                                                            scrollerRef: R,
                                                            seenManagerRef: k
                                                        })
                                                    })]
                                                }), y ? null : J]
                                            })
                                        }
                                    })
                                }), A && null != I && (0, a.jsx)(L.default, {
                                    searchId: I
                                })]
                            })]
                        }), p ? (0, a.jsx)(ec, {
                            pageWidth: n,
                            onSidebarResize: (e, t) => {
                                C(t), S(e)
                            }
                        }) : null]
                    })
                }),
                eI = (0, c.default)(p.default);
            var eh = function(e) {
                let {
                    guildId: t
                } = e, n = (0, o.useStateFromStores)([y.default], () => y.default.getGuild(t), [t]), l = (0, z.default)(), i = (0, o.useStateFromStores)([P.default], () => P.default.hasLoadedExperiments), r = (0, A.useCanSeeOnboardingHome)(t);
                return (s.useLayoutEffect(() => {
                    (0, w.ensureGuildHomeSession)(t)
                }, [t]), s.useEffect(() => {
                    if (!i) return;
                    let e = Y.default.getHomeSessionSource(t),
                        n = (0, H.canSeeGuildHome)(t) || r;
                    if (null != l) {
                        let {
                            channelId: t,
                            messageId: a
                        } = l;
                        if (!n) {
                            (0, O.transitionToMessage)(t, a);
                            return
                        }
                        e = ea.GuildHomeLandingSource.HIGHLIGHTS
                    } else if (!n) {
                        d.default.escapeToDefaultChannel(t);
                        return
                    }(0, w.trackGuildHomeOpened)(t, e)
                }, [t, l, i, r]), null == n) ? (0, a.jsx)(h.default, {
                    channelId: void 0
                }) : r ? (0, a.jsx)(eI, {
                    guild: n
                }) : (0, a.jsx)(e_, {
                    guild: n
                })
            }
        },
        994906: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openGuildMemberModViewSidebar: function() {
                    return i
                }
            });
            var a = n("208021"),
                s = n("582713"),
                l = n("459824");

            function i(e, t, n) {
                (0, l.canAccessGuildMemberModViewWithExperiment)(e) && a.default.openGuildSidebar({
                    guildId: e,
                    baseChannelId: n,
                    sidebarType: s.GuildSidebarType.GUILD_MEMBER_MOD_VIEW,
                    details: {
                        type: s.SidebarOpenDetailsType.GUILD_MEMBER_MOD_VIEW,
                        userId: t,
                        guildId: e
                    }
                })
            }
        },
        138219: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                usePaginatedMemberApplications: function() {
                    return c
                }
            });
            var a = n("884691"),
                s = n("866227"),
                l = n.n(s),
                i = n("249654"),
                r = n("448993"),
                o = n("549103"),
                u = n("567054");
            let d = u.MAX_RESULTS_PER_PAGE * u.MAX_VISIBLE_PAGES;

            function c(e) {
                let {
                    guildId: t,
                    guildJoinRequests: n
                } = e, s = a.useRef(!1), [c, E] = a.useState(null), f = a.useRef(null), _ = a.useRef(!1), I = a.useCallback(async (e, a) => {
                    if (s.current) return;
                    let I = "".concat(e, "-").concat(a),
                        h = !1;
                    if (I !== f.current && (f.current = I, _.current = !1, h = !0), _.current) return;
                    null != c && E(null);
                    let C = function(e, t, n, a) {
                        let s = n === u.GuildJoinRequestApplicationStatuses.SUBMITTED;
                        if (t === u.GuildJoinRequestSortOrders.TIMESTAMP_DESC) {
                            if (a) {
                                let e = i.default.fromTimestamp(new Date().getTime());
                                return {
                                    before: e
                                }
                            } {
                                let t = e[e.length - 1],
                                    n = s ? t.id : t.actionedAt;
                                return {
                                    before: n
                                }
                            }
                        }
                        if (a) {
                            let e = i.default.fromTimestamp(l().subtract(180, "days").valueOf());
                            return {
                                after: e
                            }
                        } {
                            let t = e[e.length - 1],
                                n = s ? t.id : t.actionedAt;
                            return {
                                after: n
                            }
                        }
                    }(n, e, a, h);
                    try {
                        s.current = !0;
                        let e = await o.default.fetchGuildJoinRequests({
                            guildId: t,
                            status: a,
                            limit: d,
                            ...C
                        });
                        if (null != e) {
                            let {
                                guild_join_requests: t
                            } = e.body;
                            t.length < d && (_.current = !0)
                        }
                    } catch (t) {
                        let e = new r.APIError(t);
                        E(e.getAnyErrorMessage())
                    } finally {
                        s.current = !1
                    }
                }, [c, t, n]);
                return {
                    fetchNextPage: I,
                    error: c
                }
            }
        },
        419555: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSelectedApplicationStatus: function() {
                    return l
                }
            });
            var a = n("446674"),
                s = n("90490");

            function l(e) {
                let {
                    guildId: t
                } = e, n = (0, a.useStateFromStores)([s.default], () => s.default.getSelectedApplicationStatus(t), [t]);
                return n
            }
        },
        122766: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSelectedGuildJoinRequest: function() {
                    return l
                }
            });
            var a = n("446674"),
                s = n("90490");

            function l(e) {
                let {
                    guildId: t
                } = e, n = (0, a.useStateFromStores)([s.default], () => s.default.getSelectedGuildJoinRequest(t), [t]);
                return n
            }
        },
        268027: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSelectedSortOrder: function() {
                    return l
                }
            });
            var a = n("446674"),
                s = n("90490");

            function l(e) {
                let {
                    guildId: t
                } = e, n = (0, a.useStateFromStores)([s.default], () => s.default.getSelectedSortOrder(t), [t]);
                return n
            }
        },
        533788: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSortedMemberApplications: function() {
                    return r
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("90490"),
                i = n("567054");

            function r(e) {
                let {
                    guildId: t,
                    applicationStatus: n,
                    sortOrder: r
                } = e, o = (0, s.useStateFromStores)([l.default], () => l.default.getRequests(t, n), [n, t]), u = a.useMemo(() => r === i.GuildJoinRequestSortOrders.TIMESTAMP_DESC ? [...o].reverse() : o, [r, o]);
                return {
                    guildJoinRequests: u
                }
            }
        },
        444752: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("109024"),
                i = n("782340"),
                r = n("120825"),
                o = n("270111"),
                u = e => {
                    let {
                        headerId: t,
                        reapplyText: n,
                        onReapply: u,
                        confirmText: d,
                        onConfirm: c,
                        rejectionReason: E = null,
                        guild: f = null
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: r.confirmation,
                        children: [(0, a.jsxs)("div", {
                            className: r.confirmationContent,
                            children: [null !== f ? (0, a.jsx)(l.default, {
                                size: l.default.Sizes.LARGER,
                                guild: f,
                                className: r.guildIcon
                            }) : (0, a.jsx)("img", {
                                alt: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_ICON,
                                src: o,
                                className: r.verificationStateIcon
                            }), (0, a.jsx)(s.Heading, {
                                id: t,
                                variant: "heading-xl/semibold",
                                className: r.header,
                                children: (null == f ? void 0 : f.name) != null ? i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE_WITH_GUILD_NAME.format({
                                    guildName: f.name
                                }) : i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE
                            }), null != E && "" !== E ? (0, a.jsx)(a.Fragment, {
                                children: (0, a.jsxs)(s.Text, {
                                    variant: "text-sm/normal",
                                    children: [(0, a.jsx)("span", {
                                        className: r.rejectionReasonLabel,
                                        children: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_REASON
                                    }), (0, a.jsx)("span", {
                                        className: r.rejectionReason,
                                        children: E
                                    })]
                                })
                            }) : null]
                        }), (0, a.jsxs)("div", {
                            className: r.confirmationButtonRow,
                            children: [(0, a.jsx)(s.Button, {
                                onClick: u,
                                color: s.Button.Colors.PRIMARY,
                                className: r.confirmationButton,
                                children: n
                            }), (0, a.jsx)(s.Button, {
                                onClick: c,
                                color: s.Button.Colors.PRIMARY,
                                className: r.confirmationButton,
                                children: d
                            })]
                        })]
                    })
                }
        },
        437942: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("109024"),
                i = n("782340"),
                r = n("120825"),
                o = n("158463"),
                u = e => {
                    let {
                        onCancel: t,
                        onLeave: n,
                        guild: u = null
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: r.confirmation,
                        children: [(0, a.jsxs)("div", {
                            className: r.confirmationContent,
                            children: [null !== u ? (0, a.jsx)(l.default, {
                                size: l.default.Sizes.LARGER,
                                guild: u,
                                className: r.guildIcon
                            }) : (0, a.jsx)("img", {
                                alt: i.default.Messages.MEMBER_VERIFICATION_PENDING_APPLICATION_ICON,
                                src: o,
                                className: r.verificationStateIcon
                            }), (0, a.jsx)(s.Heading, {
                                variant: "heading-xl/semibold",
                                className: r.header,
                                children: (null == u ? void 0 : u.name) != null ? i.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE_WITH_GUILD_NAME.format({
                                    guildName: u.name
                                }) : i.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE
                            }), (0, a.jsx)(s.Text, {
                                variant: "text-sm/normal",
                                color: "header-secondary",
                                children: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_SUBTITLE
                            })]
                        }), (0, a.jsxs)("div", {
                            className: r.confirmationButtonColumn,
                            children: [(0, a.jsx)(s.Button, {
                                onClick: t,
                                look: s.Button.Looks.LINK,
                                color: s.Button.Colors.LINK,
                                size: s.Button.Sizes.SMALL,
                                children: i.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION
                            }), (0, a.jsx)(s.Button, {
                                onClick: n,
                                look: s.Button.Looks.LINK,
                                color: s.Button.Colors.LINK,
                                size: s.Button.Sizes.SMALL,
                                children: i.default.Messages.MEMBER_VERIFICATION_PENDING_APPLICATION_MODAL_WITHDRAW_AND_LEAVE
                            })]
                        })]
                    })
                }
        },
        546102: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("393414"),
                o = n("305961"),
                u = n("554054"),
                d = n("831588"),
                c = n("315102"),
                E = n("549103"),
                f = n("50926"),
                _ = n("526253"),
                I = n("567054"),
                h = n("982527"),
                C = n("444752"),
                T = n("437942"),
                m = n("267235"),
                S = n("49111"),
                N = n("289382"),
                A = n("782340"),
                p = n("936791"),
                g = e => {
                    var t;
                    let {
                        guildId: n,
                        inviteCode: g
                    } = e, [R, O] = s.useState(N.WaveStates.INITIAL), L = (0, l.useStateFromStores)([_.default], () => _.default.get(n)), M = (0, l.useStateFromStores)([h.default], () => h.default.getRequest(n)), v = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(n)), {
                        hasFetchedRequestToJoinGuilds: D,
                        guildPreviewDisabled: x
                    } = (0, l.useStateFromStoresObject)([h.default], () => ({
                        hasFetchedRequestToJoinGuilds: h.default.hasFetchedRequestToJoinGuilds,
                        guildPreviewDisabled: h.default.getJoinRequestGuild(n)
                    }));
                    s.useEffect(() => {
                        null != v && (0, r.transitionTo)(S.Routes.CHANNEL(n))
                    }, [v, n]), s.useEffect(() => {
                        !D && E.default.fetchRequestToJoinGuilds()
                    }, [D]);
                    let P = s.useCallback(e => {
                            O(t => Math.max(t, e))
                        }, []),
                        y = (e, t) => () => {
                            (0, i.openModal)(n => (0, a.jsx)(i.ConfirmModal, {
                                header: A.default.Messages.MEMBER_VERIFICATION_CONFIRM_LEAVE_TITLE,
                                cancelText: A.default.Messages.NEVERMIND,
                                onConfirm: t,
                                confirmText: A.default.Messages.YES_TEXT,
                                confirmButtonColor: i.Button.Colors.RED,
                                ...n,
                                children: (0, a.jsx)(i.Text, {
                                    variant: "text-sm/normal",
                                    color: "header-secondary",
                                    children: e
                                })
                            }))
                        },
                        b = async e => {
                            await f.default.submitVerificationForm(n, e)
                        }, U = () => {
                            E.default.resetGuildJoinRequest(n)
                        }, G = y(A.default.Messages.LEAVE_SERVER_BODY.format({
                            name: null == v ? void 0 : v.toString()
                        }), () => {
                            O(Math.max(R, N.WaveStates.FILLING)), E.default.removeGuildJoinRequest(n), (0, r.transitionTo)(S.Routes.ME)
                        }), j = (null == L ? void 0 : null === (t = L.guild) || void 0 === t ? void 0 : t.splash) != null ? c.default.getGuildSplashURL({
                            id: L.guild.id,
                            splash: L.guild.splash
                        }) : (0, d.getArtForPath)();
                    return (0, a.jsx)("div", {
                        className: p.page,
                        children: (0, a.jsxs)(u.default, {
                            embedded: !0,
                            splash: j,
                            waveState: R,
                            showLogo: !1,
                            updateWaveState: P,
                            children: [(0, a.jsx)("div", {
                                className: p.dragRegion
                            }), (0, a.jsx)("div", {
                                className: p.contentWrapper,
                                children: (() => {
                                    switch (null == M ? void 0 : M.applicationStatus) {
                                        case I.GuildJoinRequestApplicationStatuses.SUBMITTED:
                                            return (0, a.jsx)(T.default, {
                                                onCancel: y(A.default.Messages.MEMBER_VERIFICATION_CANCEL_PENDING_APPLICATION_MODAL_TITLE, U),
                                                onLeave: G,
                                                guild: x
                                            });
                                        case I.GuildJoinRequestApplicationStatuses.REJECTED:
                                            return (0, a.jsx)(C.default, {
                                                reapplyText: A.default.Messages.MEMBER_VERIFICATION_APPLICATION_REAPPLY,
                                                onReapply: U,
                                                confirmText: A.default.Messages.LEAVE_SERVER,
                                                onConfirm: G,
                                                rejectionReason: null == M ? void 0 : M.rejectionReason,
                                                guild: x
                                            });
                                        default:
                                            return (0, a.jsx)(m.default, {
                                                guildId: n,
                                                inviteCode: g,
                                                onComplete: b
                                            })
                                    }
                                })()
                            })]
                        })
                    })
                }
        },
        747554: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("803182"),
                r = n("90915"),
                o = n("446674"),
                u = n("77078"),
                d = n("305961"),
                c = n("162771"),
                E = n("549103"),
                f = n("233322"),
                _ = n("567054"),
                I = n("982527"),
                h = n("49111"),
                C = n("724210"),
                T = n("782340"),
                m = n("884938"),
                S = n("105029"),
                N = () => {
                    var e, t;
                    let s = (0, o.useStateFromStores)([c.default], () => c.default.getGuildId(), []),
                        N = (0, o.useStateFromStores)([d.default], () => d.default.getGuild(s), [s]),
                        A = (0, o.useStateFromStores)([I.default], () => null != s ? I.default.getRequest(s) : null, [s]),
                        p = (0, r.useLocation)(),
                        g = (null === (e = (0, i.matchPath)(p.pathname, h.Routes.CHANNEL(null == N ? void 0 : N.id, C.StaticChannelRoute.GUILD_ONBOARDING))) || void 0 === e ? void 0 : e.isExact) === !0;
                    if (null == N || !N.hasVerificationGate() || g) return null;
                    let R = null !== (t = null == A ? void 0 : A.applicationStatus) && void 0 !== t ? t : _.GuildJoinRequestApplicationStatuses.STARTED,
                        O = null,
                        L = null,
                        M = null,
                        v = [m.notice, S.notice];
                    switch (R) {
                        case _.GuildJoinRequestApplicationStatuses.SUBMITTED:
                            O = T.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE, L = T.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION, M = () => {
                                (0, u.openModal)(e => (0, a.jsx)(u.ConfirmModal, {
                                    header: T.default.Messages.MODIFY_FOLLOWED_NEWS_HEADER,
                                    confirmText: T.default.Messages.CONFIRM,
                                    cancelText: T.default.Messages.CANCEL,
                                    onConfirm: () => E.default.removeGuildJoinRequest(N.id),
                                    confirmButtonColor: u.Button.Colors.BRAND,
                                    ...e,
                                    children: (0, a.jsx)(u.Text, {
                                        variant: "text-md/normal",
                                        children: T.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION_SUBTITLE
                                    })
                                }))
                            };
                            break;
                        case _.GuildJoinRequestApplicationStatuses.REJECTED:
                            O = T.default.Messages.MEMBER_VERIFICATION_REJECTED_TITLE, L = T.default.Messages.MEMBER_VERIFICATION_LEARN_MORE, M = () => {
                                (0, u.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("388435").then(n.bind(n, "388435"));
                                    return t => (0, a.jsx)(e, {
                                        guildId: N.id,
                                        ...t
                                    })
                                })
                            }, v.push(m.error);
                            break;
                        default:
                            O = T.default.Messages.MEMBER_VERIFICATION_NOTICE_TEXT, L = T.default.Messages.MEMBER_VERIFICATION_NOTICE_CTA, M = () => {
                                (0, f.openMemberVerificationModal)(N.id)
                            }
                    }
                    return (0, a.jsxs)("div", {
                        className: l(...v),
                        children: [(0, a.jsx)(u.Text, {
                            className: m.header,
                            variant: "text-sm/normal",
                            children: O
                        }), (0, a.jsx)(u.Button, {
                            className: m.button,
                            look: u.Button.Looks.OUTLINED,
                            color: u.Button.Colors.WHITE,
                            size: u.Button.Sizes.NONE,
                            onClick: M,
                            children: L
                        })]
                    })
                }
        },
        597235: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("69927"),
                r = n("766274"),
                o = n("305961"),
                u = n("549103"),
                d = n("50926"),
                c = n("122766"),
                E = n("117370"),
                f = n("276566"),
                _ = n("782340"),
                I = n("130769"),
                h = function(e) {
                    let {
                        guildId: t
                    } = e, n = (0, c.useSelectedGuildJoinRequest)({
                        guildId: t
                    }), {
                        user: h
                    } = null != n ? n : {}, C = s.useMemo(() => null != h ? new r.default(h) : null, [h]), T = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(t), [t]);
                    return (0, i.usePageTitle)({
                        subsection: _.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_REQUIREMENTS,
                        location: null == T ? void 0 : T.name
                    }), s.useEffect(() => {
                        d.default.fetchVerificationForm(t)
                    }, [t]), (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("div", {
                            className: I.content,
                            children: (0, a.jsx)(E.default, {
                                guildId: t
                            })
                        }), null != n && null != T && null != C && (0, a.jsx)("section", {
                            className: I.sidebar,
                            children: (0, a.jsx)(f.default, {
                                guild: T,
                                guildJoinRequest: n,
                                guildJoinRequestUser: C,
                                onClose: () => u.default.setSelectedGuildJoinRequest(t, null)
                            })
                        })]
                    })
                }
        },
        946128: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("567054"),
                r = n("782340"),
                o = function(e) {
                    let {
                        className: t,
                        sortOrder: n,
                        onSortChange: o
                    } = e, u = s.useMemo(() => [{
                        value: i.GuildJoinRequestSortOrders.TIMESTAMP_DESC,
                        label: r.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_SORT_NEWEST
                    }, {
                        value: i.GuildJoinRequestSortOrders.TIMESTAMP_ASC,
                        label: r.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_SORT_OLDEST
                    }], []);
                    return (0, a.jsx)(l.SingleSelect, {
                        className: t,
                        onChange: o,
                        value: n,
                        options: u
                    })
                }
        },
        117370: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("549103"),
                r = n("138219"),
                o = n("419555"),
                u = n("122766"),
                d = n("268027"),
                c = n("533788"),
                E = n("859130"),
                f = n("946128"),
                _ = n("652469"),
                I = n("255941"),
                h = n("782340"),
                C = n("295952"),
                T = s.memo(function(e) {
                    let {
                        guildId: t
                    } = e, n = s.useRef(null), T = (0, o.useSelectedApplicationStatus)({
                        guildId: t
                    }), m = (0, d.useSelectedSortOrder)({
                        guildId: t
                    }), S = (0, u.useSelectedGuildJoinRequest)({
                        guildId: t
                    }), N = (0, E.useSubmittedGuildJoinRequestTotal)({
                        guildId: t
                    }), {
                        guildJoinRequests: A
                    } = (0, c.useSortedMemberApplications)({
                        guildId: t,
                        applicationStatus: T,
                        sortOrder: m
                    }), {
                        fetchNextPage: p
                    } = (0, r.usePaginatedMemberApplications)({
                        guildId: t,
                        guildJoinRequests: A
                    }), g = s.useRef(!1);
                    !g.current && (g.current = !0, p(m, T));
                    let R = s.useRef(!1);
                    s.useEffect(() => {
                        R.current = !0
                    }, [m, T]), s.useEffect(() => {
                        if (R.current && 0 !== A.length) {
                            var e;
                            R.current = !1, i.default.setSelectedGuildJoinRequest(t, A[0]), null === (e = n.current) || void 0 === e || e.scrollToTop()
                        }
                    }, [t, A, S]);
                    let O = s.useCallback(async e => {
                            m !== e && (i.default.setSelectedSortOrder(t, e), await p(e, T))
                        }, [T, m, t, p]),
                        L = s.useCallback(async e => {
                            T !== e && (i.default.setSelectedApplicationStatus(t, e), i.default.setSelectedGuildJoinRequest(t, null), await p(m, e))
                        }, [T, m, t, p]),
                        M = s.useCallback(async () => {
                            var e;
                            let t = null === (e = n.current) || void 0 === e ? void 0 : e.getScrollerState();
                            if (null == t) return;
                            let a = t.scrollHeight - t.scrollTop - t.offsetHeight;
                            a < 200 && await p(m, T)
                        }, [T, m, p]);
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(_.default, {
                            applicationStatus: T,
                            onTabItemSelect: L,
                            pendingGuildJoinRequestsTotal: N
                        }), (0, a.jsxs)("div", {
                            className: C.content,
                            children: [(0, a.jsx)("div", {
                                className: C.listControls,
                                children: (0, a.jsx)(f.default, {
                                    className: C.sortSelect,
                                    sortOrder: m,
                                    onSortChange: O
                                })
                            }), (0, a.jsx)(l.Text, {
                                className: C.description,
                                variant: "text-xs/normal",
                                color: "header-secondary",
                                children: h.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_LIST_DESCRIPTION
                            }), (0, a.jsx)(I.default, {
                                applicationStatus: T,
                                guildJoinRequests: A,
                                guildId: t,
                                onScroll: M,
                                listRef: n
                            })]
                        })]
                    })
                })
        },
        652469: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("539938"),
                i = n("922577"),
                r = n("567054"),
                o = n("782340"),
                u = n("462590"),
                d = function(e) {
                    let {
                        pendingGuildJoinRequestsTotal: t,
                        applicationStatus: n,
                        onTabItemSelect: d
                    } = e;
                    return (0, a.jsxs)(l.default, {
                        className: u.container,
                        hideSearch: !0,
                        toolbar: (0, a.jsx)("div", {}),
                        children: [(0, a.jsx)(l.default.Icon, {
                            icon: i.default,
                            disabled: !0,
                            "aria-label": o.default.Messages.MEMBER_VERIFICATION_MEMBER_APPLICATIONS
                        }), (0, a.jsx)(l.default.Title, {
                            className: u.title,
                            children: o.default.Messages.MEMBER_VERIFICATION_MEMBER_APPLICATIONS
                        }), (0, a.jsx)(l.default.Divider, {
                            className: u.divider
                        }), (0, a.jsxs)(s.TabBar, {
                            "aria-label": o.default.Messages.FRIENDS,
                            selectedItem: n,
                            type: "top-pill",
                            onItemSelect: d,
                            className: u.tabBar,
                            children: [(0, a.jsx)(s.TabBar.Item, {
                                id: r.GuildJoinRequestApplicationStatuses.SUBMITTED,
                                children: 0 === t ? o.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_PENDING : o.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_PENDING_COUNT.format({
                                    count: t
                                })
                            }), (0, a.jsx)(s.TabBar.Item, {
                                id: r.GuildJoinRequestApplicationStatuses.APPROVED,
                                children: o.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_APPROVED
                            }), (0, a.jsx)(s.TabBar.Item, {
                                id: r.GuildJoinRequestApplicationStatuses.REJECTED,
                                children: o.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_REJECTED
                            })]
                        })]
                    })
                }
        },
        255941: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("974667"),
                r = n("446674"),
                o = n("77078"),
                u = n("302437"),
                d = n("305961"),
                c = n("36694"),
                E = n("128295"),
                f = n("414868"),
                _ = n("549103"),
                I = n("90490"),
                h = n("567054"),
                C = n("122766"),
                T = n("859130"),
                m = n("667793"),
                S = n("782340"),
                N = n("297298");
            let A = () => null;

            function p(e) {
                let {
                    status: t
                } = e, n = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_PENDING_APPLICATIONS_TITLE, s = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_PENDING_APPLICATIONS_BODY;
                switch (t) {
                    case h.GuildJoinRequestApplicationStatuses.REJECTED:
                        n = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_REJECTED_APPLICATIONS_TITLE, s = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_REJECTED_APPLICATIONS_BODY;
                        break;
                    case h.GuildJoinRequestApplicationStatuses.APPROVED:
                        n = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_APPROVED_APPLICATIONS_TITLE, s = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_APPROVED_APPLICATIONS_BODY;
                        break;
                    default:
                        n = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_PENDING_APPLICATIONS_TITLE, s = S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_EMPTY_PENDING_APPLICATIONS_BODY
                }
                return (0, a.jsxs)("div", {
                    className: N.emptyContainer,
                    children: [(0, a.jsxs)("div", {
                        className: N.emptyIcon,
                        children: [(0, a.jsx)(f.default, {
                            className: N.star
                        }), (0, a.jsx)(c.default, {
                            className: N.checkmark
                        }), (0, a.jsx)(E.default, {
                            className: N.plus
                        })]
                    }), (0, a.jsx)(o.Heading, {
                        variant: "heading-xl/semibold",
                        children: n
                    }), (0, a.jsx)(o.Text, {
                        color: "header-secondary",
                        className: N.emptyBody,
                        variant: "text-sm/normal",
                        children: s
                    })]
                })
            }
            var g = function(e) {
                let {
                    applicationStatus: t,
                    guildJoinRequests: n,
                    guildId: s,
                    onScroll: c,
                    listRef: E
                } = e, f = (0, r.useStateFromStores)([d.default], () => d.default.getGuild(s), [s]), g = (0, r.useStateFromStores)([I.default], () => I.default.isFetching()), R = g ? [n.length + 25] : [n.length], O = (0, C.useSelectedGuildJoinRequest)({
                    guildId: s
                }), L = (0, T.useSubmittedGuildJoinRequestTotal)({
                    guildId: s
                }), M = (0, u.default)("guild-join-requests"), v = e => {
                    let {
                        row: i
                    } = e, r = n[i];
                    return null == r ? (0, a.jsx)(m.MemberApplicationsListRowPlaceholder, {}, i) : (0, a.jsx)(m.MemberApplicationsListRow, {
                        className: l({
                            [N.selected]: O === r,
                            [N.siblingSelected]: O === n[i - 1]
                        }),
                        guild: f,
                        guildJoinRequest: r,
                        onClick: () => _.default.setSelectedGuildJoinRequest(s, r),
                        applicationStatus: t
                    }, "".concat(r.userId, "-").concat(r.applicationStatus, "-").concat(i))
                };
                return g || 0 !== n.length ? (0, a.jsxs)(a.Fragment, {
                    children: [0 !== L && t === h.GuildJoinRequestApplicationStatuses.SUBMITTED && (0, a.jsx)(o.Text, {
                        className: N.title,
                        variant: "text-xs/semibold",
                        color: "header-secondary",
                        children: (function(e, t) {
                            let n = t.toLocaleString();
                            switch (e) {
                                case h.GuildJoinRequestApplicationStatuses.SUBMITTED:
                                    return S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_PENDING_COUNT_HYPEN.format({
                                        count: n
                                    });
                                case h.GuildJoinRequestApplicationStatuses.REJECTED:
                                    return S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_REJECTED_COUNT_HYPEN.format({
                                        count: n
                                    });
                                case h.GuildJoinRequestApplicationStatuses.APPROVED:
                                    return S.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_APPROVED_COUNT_HYPEN.format({
                                        count: n
                                    });
                                default:
                                    return ""
                            }
                        })(t, L).toUpperCase()
                    }), (0, a.jsx)(i.ListNavigatorProvider, {
                        navigator: M,
                        children: (0, a.jsx)(i.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: t,
                                    role: n,
                                    ...s
                                } = e;
                                return (0, a.jsx)(o.List, {
                                    innerRole: n,
                                    innerAriaLabel: S.default.Messages.MEMBERS,
                                    ref: e => {
                                        var n;
                                        E.current = e, t.current = null !== (n = null == e ? void 0 : e.getScrollerNode()) && void 0 !== n ? n : null
                                    },
                                    paddingTop: 0,
                                    paddingBottom: 16,
                                    sectionHeight: 0,
                                    rowHeight: 64,
                                    renderSection: A,
                                    renderRow: v,
                                    sections: R,
                                    onScroll: c,
                                    fade: !0,
                                    ...s
                                }, "guild-application-review")
                            }
                        })
                    })]
                }) : (0, a.jsx)(p, {
                    status: t
                })
            }
        },
        667793: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MemberApplicationsListRow: function() {
                    return N
                },
                MemberApplicationsListRowPlaceholder: function() {
                    return A
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("866227"),
                o = n.n(r),
                u = n("77078"),
                d = n("272030"),
                c = n("766274"),
                E = n("36694"),
                f = n("945330"),
                _ = n("433487"),
                I = n("315102"),
                h = n("549103"),
                C = n("567054"),
                T = n("782340"),
                m = n("297298");

            function S(e) {
                let {
                    icon: t,
                    onClick: n,
                    submitting: s,
                    disabled: l
                } = e;
                return (0, a.jsx)(u.Clickable, {
                    className: i(m.actionIconContainer, {
                        [m.disabled]: l || s
                    }),
                    onClick: n,
                    children: s ? (0, a.jsx)(u.Dots, {
                        className: m.icon,
                        dotRadius: 2,
                        themed: !0
                    }) : (0, a.jsx)(t, {
                        className: m.icon,
                        height: 12,
                        width: 12
                    })
                })
            }

            function N(e) {
                let {
                    applicationStatus: t,
                    guild: l,
                    guildJoinRequest: r,
                    className: N,
                    onClick: A
                } = e, [p, g] = s.useState(null), {
                    user: R,
                    createdAt: O
                } = r;
                if (null == R) throw Error("Missing user on this guild join request!");
                let L = s.useMemo(() => new c.default(R), [R]),
                    M = I.default.getUserAvatarURL(L),
                    v = t === C.GuildJoinRequestApplicationStatuses.SUBMITTED,
                    D = s.useCallback(async (e, t) => {
                        let {
                            guildId: n,
                            userId: a
                        } = e;
                        if (null == p) {
                            g(t);
                            try {
                                await h.default.updateGuildJoinRequest(n, a, t)
                            } catch (e) {
                                (0, u.showToast)((0, u.createToast)(T.default.Messages.ERROR_GENERIC_TITLE, u.ToastType.FAILURE)), g(null)
                            }
                        }
                    }, [p]),
                    x = async () => {
                        await D(r, C.GuildJoinRequestApplicationStatuses.APPROVED)
                    }, P = async () => {
                        await D(r, C.GuildJoinRequestApplicationStatuses.REJECTED)
                    };
                return (0, a.jsxs)(u.Clickable, {
                    className: i(m.container, N),
                    onClick: A,
                    children: [(0, a.jsx)(u.Avatar, {
                        src: M,
                        size: u.AvatarSizes.SIZE_40,
                        "aria-label": R.username,
                        className: m.spacer
                    }), (0, a.jsxs)("div", {
                        className: m.userDetails,
                        children: [(0, a.jsx)(u.Text, {
                            variant: "text-md/semibold",
                            color: "header-primary",
                            children: R.username
                        }), (0, a.jsx)(u.Text, {
                            className: m.createdAt,
                            variant: "text-sm/normal",
                            color: "header-secondary",
                            children: o(O).format("lll")
                        })]
                    }), v && (0, a.jsx)(S, {
                        icon: E.default,
                        onClick: x,
                        submitting: p === C.GuildJoinRequestApplicationStatuses.APPROVED,
                        disabled: null != p && p !== C.GuildJoinRequestApplicationStatuses.APPROVED
                    }), v && (0, a.jsx)(S, {
                        icon: f.default,
                        onClick: P,
                        submitting: p === C.GuildJoinRequestApplicationStatuses.REJECTED,
                        disabled: null != p && p !== C.GuildJoinRequestApplicationStatuses.REJECTED
                    }), (0, a.jsx)(u.Clickable, {
                        className: i(m.overflowMenuContainer, {
                            [m.disabled]: null != p
                        }),
                        onClick: e => {
                            (0, d.openContextMenuLazy)(e, async () => {
                                let {
                                    default: e
                                } = await n.el("176032").then(n.bind(n, "176032"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    guild: l,
                                    user: L
                                })
                            }, {
                                position: "bottom",
                                align: "right"
                            })
                        },
                        children: (0, a.jsx)(_.default, {
                            className: m.icon,
                            width: 18
                        })
                    })]
                })
            }

            function A() {
                return (0, a.jsxs)("div", {
                    className: m.placeholder,
                    children: [(0, a.jsx)("div", {
                        className: i(m.placeholderAvatar)
                    }), (0, a.jsxs)("div", {
                        className: m.userDetails,
                        children: [(0, a.jsx)("div", {
                            className: m.placeholderUsername,
                            style: {
                                maxWidth: "".concat(Math.floor(50 * Math.random()) + 100, "px")
                            }
                        }), (0, a.jsx)("div", {
                            className: m.placeholderCreatedAt,
                            style: {
                                maxWidth: "".concat(Math.floor(25 * Math.random()) + 50, "px")
                            }
                        })]
                    })]
                })
            }
        },
        709863: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("866227"),
                i = n.n(l),
                r = n("249654"),
                o = n("446674"),
                u = n("669491"),
                d = n("77078"),
                c = n("272030"),
                E = n("401642"),
                f = n("26989"),
                _ = n("697218"),
                I = n("578706"),
                h = n("381546"),
                C = n("841811"),
                T = n("433487"),
                m = n("549103"),
                S = n("567054"),
                N = n("49111"),
                A = n("782340"),
                p = n("127953");

            function g(e) {
                var t;
                let {
                    guildJoinRequest: l,
                    guild: g,
                    guildJoinRequestUser: R
                } = e, [O, L] = s.useState(!1), {
                    createdAt: M,
                    actionedAt: v,
                    guildId: D,
                    userId: x
                } = l, P = null === (t = l.actionedByUser) || void 0 === t ? void 0 : t.id, y = (0, o.useStateFromStores)([_.default], () => _.default.getUser(P)), b = (0, o.useStateFromStores)([f.default], () => null != P ? f.default.getMember(D, P) : null, [P, D]), U = s.useCallback(() => {
                    (0, d.showToast)((0, d.createToast)(A.default.Messages.ERROR_GENERIC_TITLE, d.ToastType.FAILURE))
                }, []), G = async () => {
                    if (!O) {
                        L(!0);
                        try {
                            await m.default.updateGuildJoinRequest(D, x, S.GuildJoinRequestApplicationStatuses.APPROVED)
                        } catch {
                            U()
                        } finally {
                            L(!1)
                        }
                    }
                }, j = A.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_PENDING, F = (0, a.jsx)(C.default, {
                    width: 24,
                    height: 24,
                    className: p.icon
                });
                l.applicationStatus === S.GuildJoinRequestApplicationStatuses.APPROVED ? (j = A.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_APPROVED, F = (0, a.jsx)(I.default, {
                    width: 24,
                    height: 24,
                    className: p.iconApproved,
                    backgroundColor: u.default.unsafe_rawColors.WHITE_500.css
                })) : l.applicationStatus === S.GuildJoinRequestApplicationStatuses.REJECTED && (j = A.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_REJECTED, F = (0, a.jsx)(h.default, {
                    width: 24,
                    height: 24,
                    className: p.iconRejected,
                    backgroundColor: u.default.unsafe_rawColors.WHITE_500.css
                }));
                let k = null != y && null != v ? A.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_ACTIONED_BY_HOOK.format({
                    date: i(r.default.extractTimestamp(v)).format("ll"),
                    usernameHook: function() {
                        var e;
                        return (0, a.jsx)(d.Clickable, {
                            className: p.actionedByUser,
                            onClick: () => (0, E.openUserProfileModal)({
                                userId: y.id,
                                guildId: D,
                                analyticsLocation: {
                                    section: N.AnalyticsSections.GUILD_MEMBER_VERIFICATION_APPLICATION_REVIEW,
                                    object: N.AnalyticsObjects.ACTIONED_BY_USER
                                }
                            }),
                            tag: "div",
                            role: "link",
                            children: (0, a.jsx)(d.Text, {
                                variant: "text-xs/normal",
                                color: "header-primary",
                                children: null !== (e = null == b ? void 0 : b.nick) && void 0 !== e ? e : y.username
                            })
                        }, "username-hook")
                    }
                }) : i(M).format("lll");
                return (0, a.jsxs)("div", {
                    className: p.container,
                    children: [(0, a.jsxs)("div", {
                        className: p.wrapper,
                        children: [(0, a.jsxs)("div", {
                            className: p.inline,
                            children: [F, (0, a.jsxs)("div", {
                                children: [(0, a.jsx)(d.Heading, {
                                    variant: "heading-sm/semibold",
                                    children: j
                                }), (0, a.jsx)(d.Text, {
                                    className: p.headerSubtext,
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    children: k
                                })]
                            })]
                        }), (0, a.jsxs)("div", {
                            className: p.inline,
                            children: [l.applicationStatus === S.GuildJoinRequestApplicationStatuses.SUBMITTED && (0, a.jsxs)("div", {
                                className: p.buttons,
                                children: [(0, a.jsx)(d.Button, {
                                    color: d.Button.Colors.GREEN,
                                    submitting: O,
                                    onClick: () => G(),
                                    children: A.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_APPROVE_APPLICATION
                                }), (0, a.jsx)(d.Button, {
                                    color: d.Button.Colors.RED,
                                    onClick: () => {
                                        (0, d.openModalLazy)(async () => {
                                            let {
                                                default: e
                                            } = await n.el("155554").then(n.bind(n, "155554"));
                                            return t => (0, a.jsx)(e, {
                                                modalProps: t,
                                                guildId: D,
                                                userId: x,
                                                onError: U
                                            })
                                        })
                                    },
                                    disabled: O,
                                    children: A.default.Messages.GUILD_SETTINGS_MEMBER_VERIFICATION_DENY_APPLICATION
                                })]
                            }), (0, a.jsx)(d.Clickable, {
                                onClick: e => {
                                    (0, c.openContextMenuLazy)(e, async () => {
                                        let {
                                            default: e
                                        } = await n.el("176032").then(n.bind(n, "176032"));
                                        return t => (0, a.jsx)(e, {
                                            ...t,
                                            guild: g,
                                            user: R
                                        })
                                    })
                                },
                                className: p.overflow,
                                children: (0, a.jsx)(T.default, {
                                    width: 20,
                                    height: 20,
                                    className: p.iconInteractive
                                })
                            })]
                        })]
                    }), l.applicationStatus === S.GuildJoinRequestApplicationStatuses.REJECTED && null != l.rejectionReason && (0, a.jsx)("div", {
                        className: p.rejectionReason,
                        children: (0, a.jsx)(d.Text, {
                            variant: "text-sm/normal",
                            children: l.rejectionReason
                        })
                    })]
                })
            }
        },
        227457: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("401642"),
                o = n("315102"),
                u = n("49111"),
                d = n("782340"),
                c = n("22727");

            function E(e) {
                let {
                    user: t,
                    className: n
                } = e, {
                    discriminator: s,
                    username: E
                } = t, f = o.default.getUserAvatarURL(t);
                return (0, a.jsxs)("div", {
                    className: l(c.container, n),
                    children: [(0, a.jsx)(i.Avatar, {
                        src: f,
                        size: i.AvatarSizes.SIZE_80,
                        "aria-label": E,
                        className: c.avatar
                    }), (0, a.jsxs)("div", {
                        className: c.username,
                        children: [(0, a.jsx)(i.Heading, {
                            variant: "heading-xl/semibold",
                            children: E
                        }), (0, a.jsxs)(i.Text, {
                            variant: "text-md/normal",
                            color: "header-secondary",
                            children: ["#", s]
                        })]
                    }), (0, a.jsx)(i.Anchor, {
                        onClick: () => {
                            (0, r.openUserProfileModal)({
                                userId: t.id,
                                analyticsLocation: {
                                    section: u.AnalyticsSections.GUILD_MEMBER_VERIFICATION_APPLICATION_REVIEW,
                                    object: u.AnalyticsObjects.JOIN_REQUEST
                                }
                            })
                        },
                        children: d.default.Messages.VIEW_PROFILE
                    })]
                })
            }
        },
        276566: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("945330"),
                r = n("781896"),
                o = n("664336"),
                u = n("158998"),
                d = n("781609"),
                c = n("709863"),
                E = n("227457"),
                f = n("782340"),
                _ = n("536043"),
                I = function(e) {
                    var t;
                    let {
                        guild: n,
                        guildJoinRequest: I,
                        guildJoinRequestUser: h,
                        onClose: C
                    } = e, T = s.useMemo(() => null !== (t = I.formResponses) && void 0 !== t ? t : [], [I.formResponses]);
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)(o.default, {
                            toolbar: (0, a.jsx)(o.default.Icon, {
                                icon: i.default,
                                onClick: C,
                                tooltip: f.default.Messages.CLOSE
                            }),
                            children: [(0, a.jsx)(o.default.Icon, {
                                icon: r.default,
                                disabled: !0,
                                "aria-label": f.default.Messages.MEMBER_VERIFICATION_MEMBER_APPLICATION
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-md/semibold",
                                children: u.default.getName(h)
                            })]
                        }), (0, a.jsx)(c.default, {
                            guildJoinRequest: I,
                            guildJoinRequestUser: h,
                            guild: n
                        }), (0, a.jsxs)(l.Scroller, {
                            children: [(0, a.jsx)(E.default, {
                                user: h,
                                className: _.container
                            }), (0, a.jsx)("div", {
                                className: _.disabledFormRenderer,
                                children: (0, a.jsx)(d.default, {
                                    guildId: n.id,
                                    formFields: T,
                                    user: h
                                })
                            })]
                        })]
                    })
                }
        },
        781609: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("697218"),
                i = n("975743"),
                r = n("567054"),
                o = n("272460"),
                u = n("472850"),
                d = n("199901"),
                c = n("772970"),
                E = n("621115"),
                f = n("782340"),
                _ = function(e) {
                    let {
                        formFields: t,
                        user: n
                    } = e, _ = (0, s.useStateFromStores)([l.default], () => null != n ? n : l.default.getCurrentUser());
                    return null == _ ? null : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(o.RequirementRenderer, {
                            icon: i.default,
                            text: f.default.Messages.MEMBER_VERIFICATION_FORM_PASSED_REQUIREMENTS,
                            meetsRequirement: !0
                        }), t.map((e, t) => (function(e, t) {
                            switch (e.field_type) {
                                case r.VerificationFormFieldTypes.TERMS:
                                    return (0, a.jsx)(c.DisabledTermsRequirementFormField, {
                                        formField: e
                                    }, t);
                                case r.VerificationFormFieldTypes.TEXT_INPUT:
                                    return (0, a.jsx)(E.DisabledTextInputFormField, {
                                        formField: e
                                    }, t);
                                case r.VerificationFormFieldTypes.PARAGRAPH:
                                    return (0, a.jsx)(d.DisabledParagraphFormField, {
                                        formField: e
                                    }, t);
                                case r.VerificationFormFieldTypes.MULTIPLE_CHOICE:
                                    return (0, a.jsx)(u.DisabledMultipleChoiceFormField, {
                                        formField: e
                                    }, t)
                            }
                        })(e, t))]
                    })
                }
        },
        714247: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("812204"),
                r = n("685665"),
                o = n("744568"),
                u = n("208021"),
                d = n("982108"),
                c = n("305961"),
                E = n("49111"),
                f = n("973033");

            function _(e) {
                let {
                    guildId: t
                } = e, n = (0, l.useStateFromStores)([c.default], () => c.default.getGuild(t)), {
                    AnalyticsLocationProvider: _
                } = (0, r.default)(i.default.MEMBER_SAFETY_PAGE), I = (0, l.useStateFromStores)([d.default], () => d.default.getGuildSidebarState(t), [t]), h = s.useCallback(() => {
                    u.default.closeGuildSidebar(t)
                }, [t]);
                return null != n && null != I && null != I ? (0, a.jsx)(_, {
                    children: (0, a.jsx)("div", {
                        className: f.sidebarContainer,
                        style: {
                            width: E.DEFAULT_CHAT_SIDEBAR_WIDTH
                        },
                        children: (0, a.jsx)(o.default, {
                            userId: I.details.userId,
                            guildId: I.details.guildId,
                            onClose: h
                        })
                    })
                }) : null
            }
        },
        112265: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return G
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("812204"),
                d = n("685665"),
                c = n("69927"),
                E = n("994906"),
                f = n("459824"),
                _ = n("41594"),
                I = n("539938"),
                h = n("393414"),
                C = n("401642"),
                T = n("982108"),
                m = n("42203"),
                S = n("923959"),
                N = n("305961"),
                A = n("18494"),
                p = n("98292"),
                g = n("155207"),
                R = n("466818"),
                O = n("914985"),
                L = n("714247"),
                M = n("565556"),
                v = n("891222"),
                D = n("49111"),
                x = n("724210"),
                P = n("782340"),
                y = n("973033"),
                b = n("305794");

            function U(e) {
                let {
                    guild: t,
                    previousChannel: n
                } = e, l = P.default.Messages.MEMBER_SAFETY_CHANNEL_TITLE, i = P.default.Messages.MEMBER_SAFETY_CHANNEL_TITLE;
                return (0, c.usePageTitle)({
                    location: t.name,
                    subsection: l
                }), (0, a.jsxs)(I.default, {
                    className: y.header,
                    innerClassname: y.innerHeader,
                    channelId: x.StaticChannelRoute.MEMBER_SAFETY,
                    guildId: t.id,
                    hideSearch: !0,
                    toolbar: null != n ? (0, a.jsx)(o.Button, {
                        className: y.returnButton,
                        size: o.Button.Sizes.SMALL,
                        look: o.Button.Looks.OUTLINED,
                        color: o.Button.Colors.PRIMARY,
                        onClick: () => {
                            null != n && (0, h.transitionToGuild)(t.id, n.id)
                        },
                        children: (0, a.jsx)(o.Text, {
                            className: y.returnButtonText,
                            variant: "text-xs/medium",
                            color: "none",
                            children: P.default.Messages.RETURN_TO_CHANNEL.format({
                                channelNameHook: () => null == n ? null : (0, a.jsxs)(s.Fragment, {
                                    children: [(0, a.jsx)(_.ChannelItemIcon, {
                                        className: y.returnIcon,
                                        guild: t,
                                        channel: n
                                    }), (0, a.jsx)(p.default, {
                                        children: (0, a.jsx)(o.Text, {
                                            variant: "text-xs/medium",
                                            color: "none",
                                            children: n.name
                                        })
                                    })]
                                }, n.id)
                            })
                        })
                    }) : (0, a.jsx)("div", {}),
                    children: [(0, a.jsx)(I.default.Icon, {
                        icon: g.default,
                        "aria-hidden": !0
                    }), (0, a.jsx)(I.default.Title, {
                        children: i
                    })]
                })
            }

            function G(e) {
                let {
                    guildId: t
                } = e, n = (0, r.useStateFromStores)([N.default], () => N.default.getGuild(t)), {
                    AnalyticsLocationProvider: l
                } = (0, d.default)(u.default.MEMBER_SAFETY_PAGE), c = (0, R.useCanAccessMemberSafetyPage)(t), _ = (0, f.useCanAccessGuildMemberModView)(t), I = (0, r.useStateFromStores)([A.default], () => A.default.getLastSelectedChannelId(t)), p = (0, r.useStateFromStores)([m.default], () => m.default.getChannel(I)), g = s.useRef(null);
                s.useEffect(() => {
                    if (!c && null != n) {
                        var e;
                        let t = null === (e = S.default.getDefaultChannel(n.id)) || void 0 === e ? void 0 : e.id;
                        (0, h.transitionToGuild)(n.id, t)
                    }
                }, [n, c]);
                let P = (0, r.useStateFromStores)([T.default], () => null != T.default.getGuildSidebarState(t), [t]),
                    G = s.useCallback(e => {
                        _ ? (0, E.openGuildMemberModViewSidebar)(e.guildId, e.userId, x.StaticChannelRoute.MEMBER_SAFETY) : (0, C.openUserProfileModal)({
                            userId: e.userId,
                            guildId: e.guildId,
                            analyticsLocation: {
                                section: D.AnalyticsSections.MEMBER_SAFETY_PAGE
                            }
                        })
                    }, [_]);
                return null != n && c ? (0, a.jsxs)(l, {
                    children: [(0, a.jsxs)("div", {
                        className: i(b.chat, y.page, {
                            [b.threadSidebarOpen]: P
                        }),
                        children: [(0, a.jsx)(U, {
                            guild: n,
                            previousChannel: p
                        }), (0, a.jsx)(o.AdvancedScroller, {
                            className: i(y.scroller),
                            ref: g,
                            children: (0, a.jsxs)("div", {
                                className: i(b.content, y.container),
                                children: [(0, a.jsx)(O.default, {
                                    guild: n
                                }), (0, a.jsx)(v.default, {
                                    guild: n,
                                    onMemberSelect: G
                                })]
                            })
                        }), (0, a.jsx)(M.default, {
                            guildId: n.id
                        })]
                    }), _ && (0, a.jsx)(L.default, {
                        guildId: n.id
                    })]
                }) : null
            }
        },
        891222: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("301165"),
                o = n("65597"),
                u = n("219115"),
                d = n("178406"),
                c = n("553275"),
                E = n("691307"),
                f = n("314143"),
                _ = n("721302"),
                I = n("888940");

            function h(e) {
                let {
                    guild: t
                } = e, n = (0, u.useIsMakingRequestV2)(t.id), s = (0, r.useSpring)({
                    height: n ? 3 : 0,
                    config: r.config.stiff
                });
                return (0, a.jsx)("div", {
                    className: I.loaderContainer,
                    children: (0, a.jsx)(r.animated.div, {
                        className: I.loaderBar,
                        style: s
                    })
                })
            }

            function C(e) {
                let {
                    guild: t,
                    className: n,
                    onPageChange: l,
                    onMemberSelect: r
                } = e, C = (0, o.default)([d.default], () => d.default.getEstimatedMemberSearchCountByGuildId(t.id), [t.id]), T = (0, u.useIsMakingRequestV2)(t.id), m = (0, u.useIsStillIndexingV2)(t.id), S = s.useCallback(e => {
                    null != e && (null == r || r(e))
                }, [r]), N = (0, c.getSearchState)(m, T, C);
                return (0, a.jsxs)("div", {
                    className: i(I.mainTableContainer, n),
                    children: [(0, a.jsx)(_.default, {
                        guild: t
                    }), (0, a.jsx)(h, {
                        guild: t
                    }), (0, a.jsx)(E.default, {
                        guild: t,
                        onSelectRow: S,
                        searchState: N
                    }), N !== c.SearchState.SUCCESS_STILL_INDEXING && (0, a.jsx)(f.default, {
                        guildId: t.id,
                        onPageChange: l
                    })]
                })
            }
        },
        144141: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-01_guild_onboarding_includes_rules",
                label: "Guild Onboarding includes rules experience",
                defaultConfig: {
                    includeRules: !1
                },
                treatments: [{
                    id: 1,
                    label: "Last page of onboarding is rules",
                    config: {
                        includeRules: !0
                    }
                }]
            });
            var l = s
        },
        802896: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                doGuildOnboardingForPostAuthInvite: function() {
                    return i
                }
            });
            var a = n("970728"),
                s = n("487946"),
                l = n("305961");
            async function i(e) {
                let {
                    code: t
                } = e, i = await (0, s.default)(t), r = i.invite;
                if (null == r || null == r.guild) return;
                if (await
                    function() {
                        return new Promise(e => {
                            l.default.addConditionalChangeListener(() => !l.default.isLoaded() || (e(), !1))
                        })
                    }(), null == l.default.getGuild(r.guild.id)) return;
                let {
                    default: o
                } = await n.el("937692").then(n.bind(n, "937692"));
                await o({
                    guildId: r.guild.id
                }), a.default.transitionToInvite(r)
            }
        },
        469421: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("884691"),
                s = n("917351"),
                l = n.n(s),
                i = n("446674"),
                r = n("913144"),
                o = n("986003"),
                u = n("282109"),
                d = n("568734"),
                c = n("449008"),
                E = n("921031"),
                f = n("863636"),
                _ = n("397336");

            function I(e) {
                r.default.dispatch({
                    type: "CLEAR_PENDING_CHANNEL_AND_ROLE_UPDATES",
                    guildId: e
                })
            }
            let h = {};

            function C(e) {
                var t;
                let n = (0, i.useStateFromStores)([f.default], () => null !== (t = f.default.getPendingResponseOptions(e)) && void 0 !== t ? t : h, [e]);
                a.useEffect(() => (I(e), () => I(e)), [e]), a.useEffect(() => {
                    null != n && 0 !== Object.keys(n).length && E.default.updateOnboardingResponses(e)
                }, [e, n]);
                let s = a.useCallback((t, n, a) => {
                    let s = f.default.getOnboardingResponses(e),
                        {
                            addedRoleIds: i,
                            removedRoleIds: I
                        } = function(e, t, n, a) {
                            var s, i, r, o, u;
                            let d = [],
                                E = [];
                            if (e.singleSelect && n) {
                                let n = e.options.find(e => a.includes(e.id));
                                d = l.difference(null !== (s = t.roleIds) && void 0 !== s ? s : [], null !== (i = null == n ? void 0 : n.roleIds) && void 0 !== i ? i : []), E = l.difference(null !== (r = null == n ? void 0 : n.roleIds) && void 0 !== r ? r : [], null !== (o = t.roleIds) && void 0 !== o ? o : [])
                            } else if (n) d = null !== (u = t.roleIds) && void 0 !== u ? u : [], E = [];
                            else {
                                let n = e.options.filter(e => a.includes(e.id)),
                                    s = n.filter(e => t.id !== e.id),
                                    i = n.map(e => e.roleIds).flat().filter(c.isNotNullish),
                                    r = s.map(e => e.roleIds).flat().filter(c.isNotNullish);
                                d = [], E = l.difference(i, r)
                            }
                            return {
                                addedRoleIds: d,
                                removedRoleIds: E
                            }
                        }(t, n, a, s),
                        {
                            addedChannelIds: h,
                            removedChannelIds: C
                        } = function(e) {
                            var t, n, a, s, i;
                            let {
                                guildId: r,
                                prompt: u,
                                option: d,
                                selected: E,
                                responses: _
                            } = e, I = [], h = [];
                            if (u.singleSelect && E) {
                                let e = u.options.find(e => _.includes(e.id));
                                I = l.difference(null !== (t = d.channelIds) && void 0 !== t ? t : [], null !== (n = null == e ? void 0 : e.channelIds) && void 0 !== n ? n : []), h = l.difference(null !== (a = null == e ? void 0 : e.channelIds) && void 0 !== a ? a : [], null !== (s = d.channelIds) && void 0 !== s ? s : [])
                            } else if (E) I = null !== (i = d.channelIds) && void 0 !== i ? i : [], h = [];
                            else {
                                let e = u.options.filter(e => _.includes(e.id)),
                                    t = e.filter(e => d.id !== e.id),
                                    n = e.map(e => e.channelIds).flat().filter(c.isNotNullish),
                                    a = t.map(e => e.channelIds).flat().filter(c.isNotNullish);
                                I = [], h = l.difference(n, a)
                            }
                            return (0, o.hasNotSetUpChannelOptIn)(r) && I.push(...f.default.getDefaultChannelIds(r)), {
                                addedChannelIds: I,
                                removedChannelIds: h
                            }
                        }({
                            guildId: e,
                            prompt: t,
                            option: n,
                            selected: a,
                            responses: s
                        }),
                        T = h.reduce((t, n) => {
                            let a = u.default.getGuildChannelFlags(e, n);
                            return t[n] = {
                                flags: (0, d.setFlag)(a, _.ChannelNotificationSettingsFlags.OPT_IN_ENABLED, !0)
                            }, t
                        }, {}),
                        m = C.reduce((t, n) => {
                            let a = u.default.getGuildChannelFlags(e, n);
                            return t[n] = {
                                flags: (0, d.setFlag)(a, _.ChannelNotificationSettingsFlags.OPT_IN_ENABLED, !1)
                            }, t
                        }, {}),
                        S = {
                            ...T,
                            ...m
                        };
                    E.default.selectOption(e, t.id, n.id, a), r.default.dispatch({
                        type: "USER_GUILD_SETTINGS_CHANNEL_UPDATE_BULK",
                        guildId: e,
                        overrides: S
                    }), E.default.updateRolesLocal(e, i, I)
                }, [e]);
                return {
                    handleSelectOption: s
                }
            }
        },
        126623: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                },
                useCustomizeCommunityPromptHelpText: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("679653"),
                l = n("42203"),
                i = n("27618"),
                r = n("697218"),
                o = n("449008"),
                u = n("782340");

            function d(e, t, n) {
                return 0 === e.length ? "" : (n ? u.default.Messages.ONBOARDING_HELP_TEXT_ADD_ROLES_ALSO : u.default.Messages.ONBOARDING_HELP_TEXT_ADD_ROLES).format({
                    count: e.length,
                    extraCount: Math.max(e.length - 2, 0),
                    role1: e[0],
                    role2: e[1],
                    itemHook: t
                })
            }

            function c(e) {
                var t, n, c;
                let {
                    guild: E,
                    prompt: f,
                    selectedRoleIds: _,
                    selectedChannelIds: I,
                    itemHook: h
                } = e, C = (0, a.useStateFromStoresArray)([l.default, r.default, i.default], () => Array.from(I).map(e => l.default.getChannel(e)).filter(o.isNotNullish).map(e => (0, s.computeChannelName)(e, r.default, i.default, !0))), T = Array.from(_).map(e => {
                    var n;
                    return null === (n = (null !== (t = null == E ? void 0 : E.roles) && void 0 !== t ? t : {})[e]) || void 0 === n ? void 0 : n.name
                }).filter(o.isNotNullish).map(e => "@".concat(e)), m = (null == f ? void 0 : f.singleSelect) ? "" : u.default.Messages.ONBOARDING_CHOOSE_ALL_OPTIONS, S = "";
                if (0 === C.length && T.length > 0) m = d(T, h);
                else if (C.length > 0) {
                    ;
                    n = C, c = h, m = 0 === n.length ? "" : u.default.Messages.ONBOARDING_HELP_TEXT_ADD_CHANNELS.format({
                        count: n.length,
                        extraCount: Math.max(n.length - 2, 0),
                        channel1: n[0],
                        channel2: n[1],
                        itemHook: c
                    }), T.length > 0 && (S = d(T, h, !0))
                }
                return {
                    helpText: m,
                    helpTextAdditional: S
                }
            }

            function E(e) {
                var t;
                let {
                    guild: n,
                    prompt: d,
                    selectedRoleIds: c,
                    selectedChannelIds: E,
                    itemHook: f
                } = e, _ = (0, a.useStateFromStoresArray)([l.default, r.default, i.default], () => Array.from(E).map(e => l.default.getChannel(e)).filter(o.isNotNullish).map(e => (0, s.computeChannelName)(e, r.default, i.default, !0))), I = Array.from(c).map(e => {
                    var a;
                    return null === (a = (null !== (t = null == n ? void 0 : n.roles) && void 0 !== t ? t : {})[e]) || void 0 === a ? void 0 : a.name
                }).filter(o.isNotNullish).map(e => "@".concat(e)), h = (null == d ? void 0 : d.singleSelect) ? "" : u.default.Messages.ONBOARDING_CHOOSE_ALL_OPTIONS;
                return 0 === _.length && I.length > 0 ? h = u.default.Messages.CUSTOMIZE_COMMUNITY_ADD_ROLES.format({
                    count: I.length,
                    extraCount: Math.max(I.length - 2, 0),
                    role1: I[0],
                    role2: I[1],
                    itemHook: f
                }) : _.length > 0 && 0 === I.length ? h = u.default.Messages.CUSTOMIZE_COMMUNITY_ADD_CHANNELS.format({
                    count: _.length,
                    extraCount: Math.max(_.length - 2, 0),
                    channel1: _[0],
                    channel2: _[1],
                    itemHook: f
                }) : _.length > 0 && I.length > 0 && (h = u.default.Messages.CUSTOMIZE_COMMUNITY_ADD_CHANNELS_AND_ROLES.format({
                    channelCount: _.length,
                    extraChannelCount: Math.max(_.length - 2, 0),
                    channel1: _[0],
                    channel2: _[1],
                    itemHook: f,
                    roleCount: I.length,
                    extraRoleCount: Math.max(I.length - 2, 0),
                    role1: I[0],
                    role2: I[1]
                })), {
                    helpText: h,
                    helpTextAdditional: ""
                }
            }
        },
        15015: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("884691"),
                s = n("65597"),
                l = n("863636");

            function i(e) {
                let t = (0, s.useStateFromStoresArray)([l.default], () => l.default.getEnabledOnboardingPrompts(e));
                return a.useMemo(() => {
                    let e = 0,
                        n = [],
                        a = [],
                        s = [],
                        l = [];
                    for (var i = 0; i < t.length; i++) {
                        let r = t[i];
                        r.isNew ? n.push(r) : r.hasNewAnswers ? (a.push(r), e += r.options.filter(e => e.isUnseen).length) : r.inOnboarding ? l.push(r) : s.push(r)
                    }
                    return {
                        onboardingPromptsRaw: t,
                        newOnboardingPrompts: n,
                        onboardingPromptsWithNewAnswers: a,
                        newAnswersCount: e,
                        onboardingPrompts: s.concat(l)
                    }
                }, [t])
            }
        },
        534702: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("151426"),
                u = n("669491"),
                d = n("77078"),
                c = n("69927"),
                E = n("10641"),
                f = n("41594"),
                _ = n("539938"),
                I = n("676143"),
                h = n("5973"),
                C = n("15684"),
                T = n("393414"),
                m = n("982108"),
                S = n("42203"),
                N = n("305961"),
                A = n("18494"),
                p = n("98292"),
                g = n("446685"),
                R = n("956089"),
                O = n("361776"),
                L = n("961727"),
                M = n("653138"),
                v = n("724210"),
                D = n("994428"),
                x = n("782340"),
                P = n("168393"),
                y = n("305794");

            function b(e) {
                let {
                    guild: t,
                    previousChannel: n
                } = e, l = (0, O.default)(t);
                s.useEffect(() => {
                    (0, E.markDismissibleContentAsDismissed)(o.DismissibleContent.CHANNEL_BROWSER_NEW_BADGE_NUX, {
                        dismissAction: D.ContentDismissActionType.DISMISS
                    })
                });
                let i = l ? x.default.Messages.CHANNELS_AND_ROLES_HTML_TITLE.format({
                        guildName: t.name
                    }) : x.default.Messages.CHANNEL_BROWSER_HTML_TITLE.format({
                        guildName: t.name
                    }),
                    r = l ? x.default.Messages.CHANNELS_AND_ROLES : x.default.Messages.CHANNEL_BROWSER_TITLE;
                return (0, c.usePageTitle)({
                    location: i
                }), (0, a.jsxs)(_.default, {
                    className: P.header,
                    innerClassname: P.innerHeader,
                    hideSearch: !0,
                    channelId: v.StaticChannelRoute.CUSTOMIZE_COMMUNITY,
                    guildId: t.id,
                    toolbar: null != n ? (0, a.jsx)(d.Button, {
                        className: P.returnButton,
                        size: d.Button.Sizes.SMALL,
                        look: d.Button.Looks.OUTLINED,
                        color: d.Button.Colors.PRIMARY,
                        onClick: () => {
                            null != n && (0, T.transitionToGuild)(t.id, n.id)
                        },
                        children: (0, a.jsx)(d.Text, {
                            className: P.returnButtonText,
                            variant: "text-xs/medium",
                            color: "none",
                            children: x.default.Messages.RETURN_TO_CHANNEL.format({
                                channelNameHook: () => null == n ? null : (0, a.jsxs)(s.Fragment, {
                                    children: [(0, a.jsx)(f.ChannelItemIcon, {
                                        className: P.returnIcon,
                                        guild: t,
                                        channel: n
                                    }), (0, a.jsx)(p.default, {
                                        children: (0, a.jsx)(d.Text, {
                                            variant: "text-xs/medium",
                                            color: "none",
                                            children: n.name
                                        })
                                    })]
                                }, n.id)
                            })
                        })
                    }) : [],
                    children: [(0, a.jsx)(_.default.Icon, {
                        icon: g.default,
                        "aria-hidden": !0
                    }), (0, a.jsx)(_.default.Title, {
                        children: r
                    })]
                })
            }

            function U(e) {
                let {
                    guildId: t,
                    selectedSection: n
                } = e, l = (0, r.useStateFromStores)([N.default], () => N.default.getGuild(t)), o = (0, O.default)(l), [c, E] = s.useState(null != n ? n : M.GuildOnboardingTab.CUSTOMIZE);
                s.useEffect(() => {
                    null != n && E(n)
                }, [n]);
                let f = (0, r.useStateFromStores)([A.default], () => A.default.getLastSelectedChannelId(t)),
                    _ = (0, r.useStateFromStores)([m.default], () => m.default.getCurrentSidebarChannelId(v.StaticChannelRoute.CHANNEL_BROWSER)),
                    T = null != _ && c === M.GuildOnboardingTab.BROWSE,
                    p = (0, r.useStateFromStores)([S.default], () => S.default.getChannel(f)),
                    g = (0, r.useStateFromStores)([C.default], () => C.default.getNewChannelIds(t).size > 0),
                    D = (0, I.useChannelBrowserChannelCount)(t);
                return null == l ? null : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: i(y.chat, {
                            [y.threadSidebarOpen]: T
                        }),
                        children: [(0, a.jsx)(b, {
                            guild: l,
                            previousChannel: p
                        }), (0, a.jsxs)("div", {
                            className: i(y.content, P.container),
                            children: [o && (0, a.jsxs)(d.TabBar, {
                                className: P.tabBar,
                                type: "top",
                                look: "brand",
                                selectedItem: c,
                                onItemSelect: e => E(e),
                                children: [(0, a.jsx)(d.TabBar.Item, {
                                    className: P.tabBarItem,
                                    id: M.GuildOnboardingTab.CUSTOMIZE,
                                    children: x.default.Messages.OPT_IN_GUILD_NOTICE_CTA
                                }, M.GuildOnboardingTab.CUSTOMIZE), (0, a.jsxs)(d.TabBar.Item, {
                                    className: P.tabBarItem,
                                    id: M.GuildOnboardingTab.BROWSE,
                                    "aria-label": x.default.Messages.CHANNEL_BROWSER_TITLE,
                                    children: [x.default.Messages.CHANNEL_BROWSER_TITLE, (0, a.jsx)(R.TextBadge, {
                                        text: g ? x.default.Messages.CHANNEL_TYPE_NEW : D,
                                        color: g ? u.default.unsafe_rawColors.BRAND_260.css : u.default.colors.BACKGROUND_ACCENT.css,
                                        className: i({
                                            [P.newBadge]: g
                                        })
                                    })]
                                }, M.GuildOnboardingTab.BROWSE)]
                            }), (() => {
                                switch (c) {
                                    case M.GuildOnboardingTab.CUSTOMIZE:
                                        return (0, a.jsx)(L.default, {
                                            guildId: t,
                                            onBrowseChannels: () => E(M.GuildOnboardingTab.BROWSE)
                                        });
                                    case M.GuildOnboardingTab.BROWSE:
                                    default:
                                        return (0, a.jsx)(h.default, {
                                            guildId: t
                                        })
                                }
                            })()]
                        })]
                    }), T && (0, a.jsx)(h.ChannelBrowserSidebar, {
                        channelId: _
                    })]
                })
            }
        },
        961727: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return es
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("301165"),
                d = n("509043"),
                c = n("446674"),
                E = n("669491"),
                f = n("819855"),
                _ = n("77078"),
                I = n("267363"),
                h = n("834897"),
                C = n("841098"),
                T = n("606292"),
                m = n("688318"),
                S = n("449918"),
                N = n("38654"),
                A = n("368639"),
                p = n("393414"),
                g = n("506885"),
                R = n("217513"),
                O = n("19287"),
                L = n("26989"),
                M = n("305961"),
                v = n("660478"),
                D = n("697218"),
                x = n("956089"),
                P = n("449008"),
                y = n("158998"),
                b = n("50885"),
                U = n("921031"),
                G = n("685829"),
                j = n("863636"),
                F = n("380710"),
                k = n("469421"),
                B = n("126623"),
                w = n("15015"),
                H = n("771311"),
                V = n("667712"),
                Y = n("469242"),
                W = n("653138"),
                K = n("49111"),
                z = n("724210"),
                q = n("133335"),
                Q = n("782340"),
                X = n("231881"),
                J = n("305794"),
                Z = n("632215");
            let $ = _.AvatarSizes.SIZE_80,
                ee = "required";

            function et(e) {
                var t;
                let {
                    guild: n,
                    user: l
                } = e, {
                    avatarSrc: r,
                    eventHandlers: u,
                    isAvatarAnimating: E
                } = (0, O.useAnimatedAvatarSrc)({
                    user: l,
                    guildId: n.id,
                    size: 120
                }), {
                    avatarDecorationSrc: f
                } = (0, m.default)({
                    user: l,
                    size: (0, T.getDecorationSizeForAvatarSize)($),
                    animateOnHover: !E
                }), I = (0, c.useStateFromStores)([L.default], () => L.default.getSelfMember(n.id)), h = (0, c.useStateFromStoresArray)([L.default], () => L.default.getMemberRoleWithPendingUpdates(n.id, l.id)), C = o(h).filter(e => n.roles.hasOwnProperty(e)).map(e => n.roles[e]).orderBy("position", "desc").value(), S = (0, R.default)(l.id, n.id);
                s.useEffect(() => {
                    (0, g.default)(l.id, l.getAvatarURL(n.id, (0, _.getAvatarSize)($)), {
                        guildId: n.id
                    })
                }, []);
                let N = (0, A.parseBioReact)(null == S ? void 0 : S.bio),
                    p = b.default.getEnableHardwareAcceleration() ? _.AnimatedAvatar : _.Avatar;
                return (0, a.jsxs)("div", {
                    className: X.profile,
                    children: [(0, a.jsx)(_.Heading, {
                        variant: "heading-md/semibold",
                        color: "header-primary",
                        children: Q.default.Messages.CUSTOMIZE_COMMUNITY_PROFILE
                    }), (0, a.jsx)(_.Text, {
                        variant: "text-xs/normal",
                        color: "text-muted",
                        children: Q.default.Messages.CUSTOMIZE_COMMUNITY_PROFILE_DESCRIPTION
                    }), (0, a.jsxs)("div", {
                        className: X.profileCard,
                        children: [(0, a.jsx)("div", {
                            ...u,
                            children: (0, a.jsx)(p, {
                                src: r,
                                avatarDecoration: f,
                                size: $,
                                "aria-label": l.username
                            })
                        }), (0, a.jsx)(_.Text, {
                            variant: "text-lg/medium",
                            color: "header-primary",
                            className: X.username,
                            children: null !== (t = null == I ? void 0 : I.nick) && void 0 !== t ? t : y.default.getName(l)
                        }), (0, a.jsx)(_.Text, {
                            variant: "text-sm/normal",
                            color: "text-muted",
                            className: i(Z.markup, X.bio),
                            children: N
                        }), null != C && C.length > 0 && (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)("hr", {
                                className: X.separator
                            }), (0, a.jsx)(_.Text, {
                                variant: "text-xs/semibold",
                                color: "text-muted",
                                className: X.title,
                                children: Q.default.Messages.ROLES
                            }), (0, a.jsx)("div", {
                                className: X.roles,
                                children: null == C ? void 0 : C.map(e => {
                                    var t;
                                    return (0, a.jsxs)("div", {
                                        className: X.role,
                                        children: [(0, a.jsx)(_.RoleCircle, {
                                            color: null !== (t = e.colorString) && void 0 !== t ? t : (0, d.int2hex)(K.DEFAULT_ROLE_COLOR),
                                            className: X.roleDot
                                        }), (0, a.jsx)(_.Text, {
                                            variant: "text-xs/medium",
                                            color: "header-primary",
                                            children: e.name
                                        })]
                                    }, e.id)
                                })
                            })]
                        })]
                    })]
                })
            }

            function en(e) {
                var t;
                let {
                    prompt: n,
                    guild: l
                } = e, [r, o] = s.useState(null), [d, f] = s.useState(new Set), I = null == n ? void 0 : null === (t = n.options) || void 0 === t ? void 0 : t.filter(e => d.has(e.id)), h = (0, F.getSelectedRoleIds)(I), C = (0, F.getSelectedChannelIds)(I), T = (0, c.useStateFromStoresArray)([j.default], () => j.default.getOnboardingResponsesForPrompt(l.id, n.id)), {
                    helpText: m,
                    helpTextAdditional: N
                } = (0, B.useCustomizeCommunityPromptHelpText)({
                    guild: l,
                    prompt: n,
                    selectedRoleIds: h,
                    selectedChannelIds: C,
                    itemHook: (e, t) => (0, a.jsx)(_.Text, {
                        variant: "text-xs/medium",
                        color: "header-primary",
                        children: e
                    }, t)
                }), {
                    handleSelectOption: A
                } = (0, k.default)(l.id), p = (0, _.useToken)(E.default.unsafe_rawColors.BRAND_500), g = (0, u.useSpring)({
                    from: {
                        color: n.isNew ? p.hex({
                            opacity: 1
                        }) : p.hex({
                            opacity: 0
                        })
                    },
                    color: p.hex({
                        opacity: 0
                    }),
                    config: {
                        duration: 300
                    },
                    delay: 500
                }), R = n.options.map(e => ({
                    value: e.id,
                    ...e
                })), O = n.options.filter(e => T.includes(e.id)).map(e => e.id);
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsxs)(u.animated.div, {
                        className: X.prompt,
                        style: {
                            borderColor: g.color
                        },
                        children: [n.isNew && (0, a.jsx)(x.TextBadge, {
                            color: (0, S.getColor)(K.Color.BRAND_260),
                            text: Q.default.Messages.NEW,
                            className: X.newBadge
                        }), (0, a.jsxs)(_.Heading, {
                            className: X.promptTitle,
                            variant: "heading-md/semibold",
                            color: "header-primary",
                            children: [n.title, n.required ? (0, a.jsx)("span", {
                                className: i(X.required, {
                                    [X.error]: (null == r ? void 0 : r.type) === ee
                                }),
                                children: "*"
                            }) : null]
                        }), (0, a.jsx)(Y.default, {
                            options: R,
                            value: O,
                            onChange: e => {
                                let t = e.find(e => !T.includes(e.id)),
                                    a = e.map(e => e.id),
                                    s = null != t;
                                if (s) A(n, t, !0), n.singleSelect && n.options.forEach(e => d.delete(e.id)), d.add(t.id);
                                else {
                                    let e = T.filter(e => !a.includes(e)),
                                        t = n.options.filter(t => e.includes(t.id));
                                    if (T.length <= t.length && n.required) {
                                        o({
                                            type: ee
                                        });
                                        return
                                    }
                                    t.forEach(e => {
                                        A(n, e, !1), d.delete(e.id)
                                    })
                                }
                                f(new Set(d)), o(null)
                            },
                            canBeNew: !n.isNew
                        }), (0, a.jsxs)(_.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            className: X.helpText,
                            children: [m, " ", N]
                        })]
                    })
                })
            }

            function ea(e) {
                var t;
                let {
                    prompt: n,
                    guild: l
                } = e, [r, o] = s.useState(null), [d, f] = s.useState(new Set), I = null == n ? void 0 : null === (t = n.options) || void 0 === t ? void 0 : t.filter(e => d.has(e.id)), h = (0, F.getSelectedRoleIds)(I), C = (0, F.getSelectedChannelIds)(I), T = (0, c.useStateFromStoresArray)([j.default], () => j.default.getOnboardingResponsesForPrompt(l.id, n.id)), {
                    helpText: m,
                    helpTextAdditional: N
                } = (0, B.useCustomizeCommunityPromptHelpText)({
                    guild: l,
                    prompt: n,
                    selectedRoleIds: h,
                    selectedChannelIds: C,
                    itemHook: (e, t) => (0, a.jsx)(_.Text, {
                        variant: "text-xs/medium",
                        color: "header-primary",
                        children: e
                    }, t)
                }), {
                    handleSelectOption: A
                } = (0, k.default)(l.id), p = (e, t) => {
                    if (!t && 1 === T.length && n.required) {
                        o({
                            type: ee
                        });
                        return
                    }
                    A(n, e, null != t && t), n.singleSelect && t && n.options.forEach(e => d.delete(e.id)), t ? d.add(e.id) : d.delete(e.id), f(new Set(d)), o(null)
                }, g = (0, _.useToken)(E.default.unsafe_rawColors.BRAND_500), R = (0, u.useSpring)({
                    from: {
                        color: n.isNew ? g.hex({
                            opacity: 1
                        }) : g.hex({
                            opacity: 0
                        })
                    },
                    color: g.hex({
                        opacity: 0
                    }),
                    config: {
                        duration: 300
                    },
                    delay: 500
                });
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsxs)(u.animated.div, {
                        className: X.prompt,
                        style: {
                            borderColor: R.color
                        },
                        children: [n.isNew && (0, a.jsx)(x.TextBadge, {
                            color: (0, S.getColor)(K.Color.BRAND_260),
                            text: Q.default.Messages.NEW,
                            className: X.newBadge
                        }), (0, a.jsxs)(_.Heading, {
                            className: X.promptTitle,
                            variant: "heading-md/semibold",
                            color: "header-primary",
                            children: [n.title, n.required ? (0, a.jsx)("span", {
                                className: i(X.required, {
                                    [X.error]: (null == r ? void 0 : r.type) === ee
                                }),
                                children: "*"
                            }) : null]
                        }), (0, a.jsx)("div", {
                            className: X.promptOptions,
                            children: n.options.map(e => (0, a.jsx)(V.default, {
                                hideMemberCount: !0,
                                guildId: l.id,
                                option: e,
                                onSelect: t => p(e, t),
                                selected: T.includes(e.id),
                                canBeNew: !n.isNew
                            }, e.id))
                        }), (0, a.jsxs)(_.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            className: X.helpText,
                            children: [m, " ", N]
                        })]
                    })
                })
            }

            function es(e) {
                let {
                    guildId: t,
                    onBrowseChannels: n
                } = e, l = (0, f.isThemeDark)((0, C.default)()), r = (0, c.useStateFromStores)([M.default], () => M.default.getGuild(t)), o = (0, c.useStateFromStores)([D.default], () => D.default.getCurrentUser()), u = (0, h.default)("(min-width: 1344px)") && null != o, d = s.useCallback(() => {
                    (0, p.transitionTo)(K.Routes.CHANNEL(t, z.StaticChannelRoute.CHANNEL_BROWSER)), null == n || n()
                }, [t, n]), E = (0, c.useStateFromStores)([v.default], () => v.default.hasUnread(t, q.ReadStateTypes.GUILD_ONBOARDING_QUESTION)), {
                    onboardingPromptsRaw: T,
                    newOnboardingPrompts: m,
                    onboardingPromptsWithNewAnswers: A,
                    newAnswersCount: g,
                    onboardingPrompts: R
                } = (0, w.default)(t);
                s.useEffect(() => {
                    if ((null == r ? void 0 : r.id) != null) !N.default.isFullServerPreview(r.id) && (j.default.shouldFetchPrompts(r.id) || E) && (0, G.fetchOnboardingPrompts)(r.id)
                }, [null == r ? void 0 : r.id, E]), s.useEffect(() => {
                    if ((null == r ? void 0 : r.id) != null) {
                        if (!N.default.isFullServerPreview(r.id)) return () => {
                            (0, I.ackGuildFeature)(r.id, q.ReadStateTypes.GUILD_ONBOARDING_QUESTION, j.default.ackIdForGuild(r.id)), U.default.updateOnboardingResponses(r.id)
                        }
                    }
                }, [null == r ? void 0 : r.id]);
                let O = s.useCallback(e => {
                    if (null == r) return null;
                    switch (e.type) {
                        case W.OnboardingPromptType.MULTIPLE_CHOICE:
                            return (0, a.jsx)(ea, {
                                prompt: e,
                                guild: r
                            }, e.id);
                        case W.OnboardingPromptType.DROPDOWN:
                            return (0, a.jsx)(en, {
                                prompt: e,
                                guild: r
                            }, e.id);
                        default:
                            (0, P.assertNever)(e.type)
                    }
                }, [r]);
                if (null == r) return null;
                if (0 === T.length) {
                    let e = (0, S.getColor)(l ? K.Color.PRIMARY_300 : K.Color.PRIMARY_500),
                        t = (0, S.getColor)(l ? K.Color.PRIMARY_700 : K.Color.PRIMARY_230);
                    return (0, a.jsx)("div", {
                        className: J.chat,
                        children: (0, a.jsx)("div", {
                            className: i(J.content, X.emptyPage),
                            children: (0, a.jsxs)("div", {
                                className: X.emptyContainer,
                                children: [(0, a.jsx)(H.default, {
                                    className: X.emptyIcon,
                                    foregroundColor: e,
                                    backgroundColor: t
                                }), (0, a.jsx)(_.Heading, {
                                    className: X.emptyHeader,
                                    variant: "heading-md/semibold",
                                    children: Q.default.Messages.CUSTOMIZE_COMMUNITY_EMPTY_HEADER
                                }), (0, a.jsx)(_.Text, {
                                    variant: "text-sm/medium",
                                    children: Q.default.Messages.CUSTOMIZE_COMMUNITY_EMPTY_SUBHEADER.format({
                                        onBrowseChannels: d
                                    })
                                })]
                            })
                        })
                    })
                }
                return (0, a.jsx)("div", {
                    className: i(J.chat, X.scrollerContainer),
                    children: (0, a.jsxs)(_.AdvancedScroller, {
                        className: X.scroller,
                        fade: !0,
                        children: [(0, a.jsxs)("div", {
                            className: X.pageBody,
                            children: [(m.length > 0 || A.length > 0) && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsx)("div", {
                                    children: (0, a.jsx)(_.Heading, {
                                        variant: "heading-md/semibold",
                                        color: "header-primary",
                                        children: Q.default.Messages.ONBOARDING_PROMPT_ANSWERS_NEW.format({
                                            count: m.length + g
                                        })
                                    })
                                }), m.map(O), A.map(O), (0, a.jsx)("div", {
                                    className: X.sectionSeparator
                                })]
                            }), R.length > 0 && (0, a.jsxs)(a.Fragment, {
                                children: [(0, a.jsxs)("div", {
                                    children: [(0, a.jsx)(_.Heading, {
                                        variant: "heading-md/semibold",
                                        color: "header-primary",
                                        children: Q.default.Messages.ONBOARDING_PROMPT_QUESTIONS_HEADER.format({
                                            count: R.length
                                        })
                                    }), (0, a.jsx)(_.Text, {
                                        variant: "text-xs/normal",
                                        color: "text-muted",
                                        children: Q.default.Messages.ONBOARDING_PROMPT_MEMBER_DESCRIPTION
                                    })]
                                }), R.map(O)]
                            })]
                        }), u && (0, a.jsx)(et, {
                            guild: r,
                            user: o
                        })]
                    })
                })
            }
        },
        771311: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 120,
                    height: n = 80,
                    backgroundColor: l,
                    foregroundColor: i,
                    ...r
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 120 80",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: [(0, a.jsx)("circle", {
                        cx: "60",
                        cy: "40",
                        r: "32",
                        fill: l
                    }), (0, a.jsx)("path", {
                        d: "M75.0832 29.8546L75.0835 29.8548C75.1362 29.884 75.1683 29.9391 75.1683 29.9983C75.1683 30.5369 75.1197 37.4409 73.0784 44.1629C71.005 50.9907 67.1615 56.8317 60.0016 56.8317C52.8418 56.8317 48.9982 50.9907 46.9248 44.1629C44.8836 37.4409 44.835 30.5369 44.835 29.9983C44.835 29.9391 44.8671 29.884 44.9197 29.8548L44.9201 29.8546L59.919 21.5218C59.9191 21.5218 59.9193 21.5217 59.9194 21.5216C59.9718 21.4928 60.0316 21.4928 60.0839 21.5217C60.084 21.5217 60.0842 21.5218 60.0843 21.5218L75.0832 29.8546ZM52.2516 46.6667V48.1667H53.7516H66.2516H67.7516V46.6667C67.7516 44.43 67.0409 42.4584 65.6254 41.0429C64.7687 40.1861 63.7082 39.5876 62.5086 39.2485C64.3809 38.3237 65.6683 36.3949 65.6683 34.165C65.6683 31.0349 63.1317 28.4983 60.0016 28.4983C56.8715 28.4983 54.335 31.0349 54.335 34.165C54.335 36.3949 55.6224 38.3237 57.4947 39.2485C56.295 39.5876 55.2346 40.1861 54.3778 41.0429C52.9623 42.4584 52.2516 44.43 52.2516 46.6667Z",
                        fill: i,
                        stroke: i,
                        strokeWidth: "3"
                    }), (0, a.jsx)("path", {
                        d: "M103.67 1.80634C103.67 0.808724 102.862 0 101.864 0C100.866 0 100.058 0.808724 100.058 1.80634V3.64278C100.058 4.64039 100.866 5.44911 101.864 5.44911C102.862 5.44911 103.67 4.64039 103.67 3.64278V1.80634Z",
                        fill: "#58F287"
                    }), (0, a.jsx)("path", {
                        d: "M103.67 16.3574C103.67 15.3597 102.862 14.551 101.864 14.551C100.866 14.551 100.058 15.3597 100.058 16.3574V18.1938C100.058 19.1914 100.866 20.0001 101.864 20.0001C102.862 20.0001 103.67 19.1914 103.67 18.1938V16.3574Z",
                        fill: "#58F287"
                    }), (0, a.jsx)("path", {
                        d: "M110.194 11.8412C111.191 11.8412 112 11.0325 112 10.0349C112 9.03724 111.191 8.22852 110.194 8.22852H108.357C107.36 8.22852 106.551 9.03724 106.551 10.0349C106.551 11.0325 107.36 11.8412 108.357 11.8412H110.194Z",
                        fill: "#58F287"
                    }), (0, a.jsx)("path", {
                        d: "M95.6429 11.7413C96.6405 11.7413 97.4492 10.9326 97.4492 9.935C97.4492 8.93739 96.6405 8.12866 95.6429 8.12866H93.8064C92.8088 8.12866 92.0001 8.93739 92.0001 9.935C92.0001 10.9326 92.8088 11.7413 93.8064 11.7413H95.6429Z",
                        fill: "#58F287"
                    }), (0, a.jsx)("path", {
                        d: "M19.1501 74.4573L23.3147 73.0684C23.5192 72.9747 23.6925 72.8241 23.814 72.6347C23.9354 72.4454 24 72.225 24 72C24 71.775 23.9354 71.5546 23.814 71.3653C23.6925 71.1759 23.5192 71.0253 23.3147 70.9316L19.1501 69.5427C18.8657 69.4142 18.6378 69.1862 18.5094 68.9016L17.0145 64.7348C16.9442 64.521 16.8083 64.3349 16.6262 64.203C16.444 64.071 16.2249 64 16 64C15.7751 64 15.556 64.071 15.3738 64.203C15.1917 64.3349 15.0558 64.521 14.9855 64.7348L13.4906 68.9016C13.3622 69.1862 13.1343 69.4142 12.8499 69.5427L8.68528 70.9316C8.4808 71.0253 8.30752 71.1759 8.18604 71.3653C8.06457 71.5546 8 71.775 8 72C8 72.225 8.06457 72.4454 8.18604 72.6347C8.30752 72.8241 8.4808 72.9747 8.68528 73.0684L12.8499 74.4573C13.0011 74.5032 13.1387 74.5858 13.2505 74.6976C13.3622 74.8094 13.4447 74.9471 13.4906 75.0984L14.9855 79.2652C15.0558 79.479 15.1917 79.6651 15.3738 79.797C15.556 79.929 15.7751 80 16 80C16.2249 80 16.444 79.929 16.6262 79.797C16.8083 79.6651 16.9442 79.479 17.0145 79.2652L18.5094 75.0984C18.5553 74.9471 18.6378 74.8094 18.7495 74.6976C18.8613 74.5858 18.9989 74.5032 19.1501 74.4573Z",
                        fill: "#FFD01A"
                    })]
                })
            }
        },
        889145: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("685829"),
                r = n("937692"),
                o = n("782340"),
                u = n("613230");

            function d(e) {
                let {
                    guildId: t,
                    channelId: n
                } = e, d = s.useCallback(() => {
                    null != t && null != n && ((0, i.startOnboarding)(t), (0, r.default)({
                        guildId: t,
                        returnChannelId: n
                    }))
                }, [t, n]);
                return (0, a.jsx)("div", {
                    className: u.container,
                    children: (0, a.jsxs)("div", {
                        className: u.explainerContainer,
                        children: [(0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            children: o.default.Messages.ONBOARDING_ERROR_PAGE_TEXT
                        }), (0, a.jsx)(l.Button, {
                            onClick: d,
                            children: (0, a.jsx)(l.Text, {
                                variant: "text-md/medium",
                                children: o.default.Messages.START_ONBOARDING
                            })
                        })]
                    })
                })
            }
        },
        413896: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return P
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("301165"),
                o = n("446674"),
                u = n("77078"),
                d = n("851387"),
                c = n("528502"),
                E = n("731898"),
                f = n("206230"),
                _ = n("895026"),
                I = n("38654"),
                h = n("393414"),
                C = n("305961"),
                T = n("313609"),
                m = n("315102"),
                S = n("284679"),
                N = n("103603"),
                A = n("921031"),
                p = n("863636"),
                g = n("471706"),
                R = n("798796"),
                O = n("686692"),
                L = n("547840"),
                M = n("49111"),
                v = n("782340"),
                D = n("240805");
            async function x(e) {
                let t = await new Promise((t, n) => {
                    let a = new Image;
                    a.crossOrigin = "Anonymous", a.onerror = e => {
                        n(e), a.onerror = a.onload = null, a = null
                    }, a.onload = () => {
                        t((0, N.getPalette)(a, 2, 10)), a.onerror = a.onload = null, a = null
                    }, a.src = e
                });
                return null == t ? void 0 : t.map(e => {
                    let [t, n, a] = e;
                    return (0, S.rgbToHex)(t, n, a)
                })
            }

            function P(e) {
                let {
                    guildId: t
                } = e, n = (0, o.useStateFromStores)([f.default], () => f.default.useReducedMotion), {
                    ref: l,
                    width: N,
                    height: P
                } = (0, E.default)(), [y, b] = s.useState(), U = (0, o.useStateFromStoresArray)([p.default], () => p.default.getOnboardingPromptsForOnboarding(t)), G = (0, o.useStateFromStores)([p.default], () => p.default.getEnabled(t)), j = s.useCallback((e, n, a) => {
                    A.default.selectOption(t, e, n, a)
                }, [t]), F = s.useCallback(() => {
                    A.default.completeOnboarding(t, U)
                }, [t, U]), k = (0, o.useStateFromStores)([C.default], () => C.default.getGuild(t)), B = s.useMemo(() => null == k ? null : m.default.getGuildSplashURL({
                    id: k.id,
                    splash: k.splash
                }), [k]), w = (0, o.useStateFromStores)([g.default], () => g.default.getCurrentOnboardingStep(t)), [H, V] = s.useState(null != B ? null : "cover");
                null != B && null == y && x(B).then(e => {
                    b(e[0])
                });
                let Y = s.useCallback(e => {
                        V(w), A.default.setUserOnboardingStep(t, e)
                    }, [t, w]),
                    W = (0, o.useStateFromStores)([I.default], () => I.default.isFullServerPreview(t)),
                    K = (0, o.useStateFromStores)([g.default], () => g.default.getOnboardingStatus(t)),
                    z = null != U && U.length > 0,
                    q = s.useCallback(() => {
                        (0, g.isOnboarding)(K) && G && z ? Y(0) : F()
                    }, [K, G, z, Y, F]);
                s.useEffect(() => {
                    if (!g.default.shouldShowOnboarding(t)) return d.default.escapeToDefaultChannel(t);
                    (0, _.fetchMemberCounts)(t)
                }, [t]);
                let Q = (0, r.useTransition)(w, {
                        config: r.config.default,
                        from: {
                            scale: .8,
                            opacity: 0
                        },
                        enter: {
                            scale: 1,
                            opacity: 1
                        },
                        immediate: n || "cover" !== H && null !== H
                    }),
                    X = g.default.shouldShowOnboarding(t),
                    J = null == k;
                if (s.useEffect(() => {
                        if (!X || J) {
                            let e = setTimeout(() => {
                                (0, h.transitionTo)(M.Routes.CHANNEL(t))
                            }, 1e3);
                            return () => clearTimeout(e)
                        }
                    }, [X, J, t]), !g.default.shouldShowOnboarding(t) || null == k) return null;
                let Z = () => {
                    switch (w) {
                        case "cover":
                            return (0, a.jsx)(R.default, {
                                guild: k,
                                onboardingStatus: g.GuildOnboardingStatus.READY,
                                onStart: q,
                                disableTracking: W
                            });
                        case "rules":
                            return (0, a.jsx)(L.default, {
                                setCurrentStep: Y,
                                previousPromptIndex: U.length - 1,
                                guild: k,
                                prompts: U,
                                completeOnboarding: F,
                                disableTracking: W
                            });
                        case null:
                            return null;
                        default:
                            return (0, a.jsx)(O.default, {
                                guild: k,
                                prompts: U,
                                step: w,
                                selectOption: j,
                                completeOnboarding: F,
                                setCurrentStep: Y,
                                disableTracking: W
                            })
                    }
                };
                return (0, a.jsxs)("div", {
                    className: D.main,
                    ref: l,
                    children: [null != B ? (0, a.jsx)(T.default, {
                        className: i(D.artwork),
                        src: B,
                        width: N,
                        height: P,
                        imageClassName: D.cover
                    }) : (0, a.jsx)(c.default, {
                        className: D.artwork,
                        preserveAspectRatio: "xMinYMin slice"
                    }), null != y && (0, a.jsx)("div", {
                        className: D.gradient,
                        style: {
                            background: "linear-gradient(180deg, ".concat((0, S.hexOpacityToRgba)(y, .16), " 0%, ").concat((0, S.hexOpacityToRgba)(y, 1), " 100%)")
                        }
                    }), (0, a.jsx)("div", {
                        className: D.gradient
                    }), Q((e, t, n) => {
                        let {
                            key: s
                        } = n;
                        return (0, a.jsx)(r.animated.div, {
                            style: e,
                            children: Z()
                        }, s)
                    }), "cover" === w && (0, a.jsx)("div", {
                        className: D.bottomCenterContent,
                        children: (0, a.jsx)(u.Heading, {
                            variant: "heading-sm/normal",
                            color: "header-secondary",
                            children: v.default.Messages.ONBOARDING_COVER_PRIVACY_POLICY.format({
                                privacyLink: M.MarketingURLs.PRIVACY
                            })
                        })
                    })]
                })
            }
        },
        686692: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("77078"),
                r = n("716241"),
                o = n("50926"),
                u = n("526253"),
                d = n("795228"),
                c = n("137215"),
                E = n("599110"),
                f = n("449008"),
                _ = n("144141"),
                I = n("863636"),
                h = n("380710"),
                C = n("126623"),
                T = n("667712"),
                m = n("469242"),
                S = n("653138"),
                N = n("49111"),
                A = n("782340"),
                p = n("710362");

            function g(e, t) {
                return (0, a.jsx)("span", {
                    className: p.helpTextItem,
                    children: e
                }, t)
            }

            function R(e) {
                return null != e && _.default.getCurrentConfig({
                    location: "ba216b_1"
                }, {
                    autoTrackExposure: !0
                }).includeRules
            }

            function O(e) {
                let {
                    headerId: t,
                    guild: n,
                    step: s,
                    lastPrompt: r,
                    questionCount: o,
                    currentPrompt: u,
                    selectOption: E,
                    gotoPrevPrompt: f,
                    gotoNextPrompt: _,
                    completeOnboarding: T
                } = e, S = (0, l.useStateFromStoresArray)([I.default], () => I.default.getOnboardingResponsesForPrompt(n.id, u.id)), N = 0 === S.length && (null == u ? void 0 : u.required), R = null == u ? void 0 : u.options.filter(e => S.includes(e.id)), O = (0, h.getSelectedRoleIds)(R), L = (0, h.getSelectedChannelIds)(R), M = 0 === S.length, {
                    helpText: v,
                    helpTextAdditional: D
                } = (0, C.default)({
                    guild: n,
                    prompt: u,
                    selectedRoleIds: O,
                    selectedChannelIds: L,
                    itemHook: g
                }), x = (0, d.default)(n.id, 1e3), P = u.options.map(e => ({
                    value: e.id,
                    ...e
                })), y = u.options.filter(e => S.includes(e.id)).map(e => e.id);
                return (0, a.jsx)("div", {
                    className: p.prompt,
                    children: (0, a.jsxs)("div", {
                        className: p.promptContent,
                        children: [(0, a.jsxs)(i.ScrollerThin, {
                            className: p.scrollerContent,
                            children: [(0, a.jsxs)("div", {
                                className: p.questionHeader,
                                children: [(0, a.jsx)(i.Text, {
                                    variant: "text-sm/medium",
                                    color: "text-muted",
                                    children: A.default.Messages.ONBOARDING_QUESTION_COUNT.format({
                                        currentQuestion: s + 1,
                                        questionCount: o
                                    })
                                }), u.required ? (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsx)(i.Text, {
                                        variant: "text-xs/normal",
                                        className: p.headerSeparator,
                                        children: "\xb7"
                                    }), (0, a.jsx)(i.Text, {
                                        variant: "text-sm/medium",
                                        color: "text-brand",
                                        children: A.default.Messages.ONBOARDING_PROMPT_REQUIRED_LABEL
                                    })]
                                }) : null]
                            }), (0, a.jsx)(i.Heading, {
                                className: p.title,
                                variant: "heading-xl/semibold",
                                color: "header-primary",
                                id: t,
                                children: u.title
                            }), (0, a.jsx)(m.default, {
                                options: P,
                                value: y,
                                onChange: e => {
                                    let t = e.find(e => !S.includes(e.id)),
                                        n = e.map(e => e.id);
                                    if (null != t) E(u.id, t.id, !0);
                                    else {
                                        let e = S.filter(e => !n.includes(e)),
                                            t = u.options.filter(t => e.includes(t.id));
                                        t.forEach(e => {
                                            E(u.id, e.id, !1)
                                        })
                                    }
                                },
                                memberCounts: x
                            })]
                        }), (0, a.jsxs)("div", {
                            className: p.navButtons,
                            children: [(0, a.jsx)("div", {
                                className: p.leftButtons,
                                children: s > 0 && (0, a.jsxs)(i.Button, {
                                    className: p.button,
                                    innerClassName: p.buttonInner,
                                    onClick: () => f(S.length),
                                    size: i.Button.Sizes.MEDIUM,
                                    look: i.Button.Looks.OUTLINED,
                                    grow: !1,
                                    color: i.Button.Colors.PRIMARY,
                                    children: [(0, a.jsx)(c.default, {
                                        className: p.arrow,
                                        direction: c.default.Directions.LEFT
                                    }), A.default.Messages.BACK]
                                })
                            }), (0, a.jsxs)("div", {
                                className: p.rightButtons,
                                children: [(0, a.jsxs)(i.Text, {
                                    className: p.helpText,
                                    variant: "text-xs/normal",
                                    color: "text-muted",
                                    children: [v, " ", D]
                                }), (0, a.jsx)(i.Tooltip, {
                                    text: N ? A.default.Messages.ONBOARDING_REQUIRED_QUESTION : null,
                                    children: e => {
                                        let {
                                            onMouseEnter: t,
                                            onMouseLeave: n
                                        } = e;
                                        return (0, a.jsx)(i.Button, {
                                            className: p.button,
                                            innerClassName: p.buttonInner,
                                            onMouseEnter: t,
                                            onMouseLeave: n,
                                            onClick: () => r ? T() : _(S.length),
                                            disabled: N,
                                            size: i.Button.Sizes.MEDIUM,
                                            look: i.Button.Looks.FILLED,
                                            grow: !1,
                                            color: M ? i.Button.Colors.PRIMARY : i.Button.Colors.BRAND,
                                            children: r ? (0, a.jsxs)(a.Fragment, {
                                                children: [A.default.Messages.FINISH, (0, a.jsx)("span", {
                                                    className: p.finishEmoji,
                                                    role: "img",
                                                    "aria-hidden": !0,
                                                    children: "\uD83C\uDF89"
                                                })]
                                            }) : (0, a.jsxs)(a.Fragment, {
                                                children: [M ? A.default.Messages.SKIP : A.default.Messages.NEXT, (0, a.jsx)(c.default, {
                                                    className: p.arrow,
                                                    direction: c.default.Directions.RIGHT
                                                })]
                                            })
                                        })
                                    }
                                })]
                            })]
                        })]
                    })
                })
            }

            function L(e) {
                let {
                    headerId: t,
                    guild: n,
                    step: s,
                    lastPrompt: r,
                    questionCount: o,
                    currentPrompt: u,
                    selectOption: d,
                    gotoPrevPrompt: E,
                    gotoNextPrompt: f,
                    completeOnboarding: _
                } = e, m = (0, l.useStateFromStoresArray)([I.default], () => I.default.getOnboardingResponsesForPrompt(n.id, u.id)), S = 0 === m.length && (null == u ? void 0 : u.required), N = null == u ? void 0 : u.options.filter(e => m.includes(e.id)), R = (0, h.getSelectedRoleIds)(N), O = (0, h.getSelectedChannelIds)(N), L = 0 === m.length, {
                    helpText: M,
                    helpTextAdditional: v
                } = (0, C.default)({
                    guild: n,
                    prompt: u,
                    selectedRoleIds: R,
                    selectedChannelIds: O,
                    itemHook: g
                });
                return (0, a.jsx)("div", {
                    className: p.prompt,
                    children: (0, a.jsxs)("div", {
                        className: p.promptContent,
                        children: [(0, a.jsxs)(i.ScrollerThin, {
                            className: p.scrollerContent,
                            children: [(0, a.jsxs)("div", {
                                className: p.questionHeader,
                                children: [(0, a.jsx)(i.Text, {
                                    variant: "text-sm/medium",
                                    color: "text-muted",
                                    children: A.default.Messages.ONBOARDING_QUESTION_COUNT.format({
                                        currentQuestion: s + 1,
                                        questionCount: o
                                    })
                                }), u.required ? (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsx)(i.Text, {
                                        variant: "text-xs/normal",
                                        className: p.headerSeparator,
                                        children: "\xb7"
                                    }), (0, a.jsx)(i.Text, {
                                        variant: "text-sm/medium",
                                        color: "text-brand",
                                        children: A.default.Messages.ONBOARDING_PROMPT_REQUIRED_LABEL
                                    })]
                                }) : null]
                            }), (0, a.jsx)(i.Heading, {
                                className: p.title,
                                variant: "heading-xl/semibold",
                                color: "header-primary",
                                id: t,
                                children: u.title
                            }), (0, a.jsx)("div", {
                                className: p.promptOptions,
                                children: u.options.map(e => (0, a.jsx)(T.default, {
                                    guildId: n.id,
                                    option: e,
                                    onSelect: t => d(u.id, e.id, null != t && t),
                                    selected: m.includes(e.id)
                                }, e.id))
                            })]
                        }), (0, a.jsxs)("div", {
                            className: p.navButtons,
                            children: [(0, a.jsx)("div", {
                                className: p.leftButtons,
                                children: s > 0 && (0, a.jsxs)(i.Button, {
                                    className: p.button,
                                    innerClassName: p.buttonInner,
                                    onClick: () => E(m.length),
                                    size: i.Button.Sizes.MEDIUM,
                                    look: i.Button.Looks.OUTLINED,
                                    grow: !1,
                                    color: i.Button.Colors.PRIMARY,
                                    children: [(0, a.jsx)(c.default, {
                                        className: p.arrow,
                                        direction: c.default.Directions.LEFT
                                    }), A.default.Messages.BACK]
                                })
                            }), (0, a.jsxs)("div", {
                                className: p.rightButtons,
                                children: [(0, a.jsxs)(i.Text, {
                                    className: p.helpText,
                                    variant: "text-xs/normal",
                                    color: "text-muted",
                                    children: [M, " ", v]
                                }), (0, a.jsx)(i.Tooltip, {
                                    text: S ? A.default.Messages.ONBOARDING_REQUIRED_QUESTION : null,
                                    children: e => {
                                        let {
                                            onMouseEnter: t,
                                            onMouseLeave: n
                                        } = e;
                                        return (0, a.jsx)(i.Button, {
                                            className: p.button,
                                            innerClassName: p.buttonInner,
                                            onMouseEnter: t,
                                            onMouseLeave: n,
                                            onClick: () => r ? _() : f(m.length),
                                            disabled: S,
                                            size: i.Button.Sizes.MEDIUM,
                                            look: i.Button.Looks.FILLED,
                                            grow: !1,
                                            color: L ? i.Button.Colors.PRIMARY : i.Button.Colors.BRAND,
                                            children: r ? (0, a.jsxs)(a.Fragment, {
                                                children: [A.default.Messages.FINISH, (0, a.jsx)("span", {
                                                    className: p.finishEmoji,
                                                    role: "img",
                                                    "aria-hidden": !0,
                                                    children: "\uD83C\uDF89"
                                                })]
                                            }) : (0, a.jsxs)(a.Fragment, {
                                                children: [L ? A.default.Messages.SKIP : A.default.Messages.NEXT, (0, a.jsx)(c.default, {
                                                    className: p.arrow,
                                                    direction: c.default.Directions.RIGHT
                                                })]
                                            })
                                        })
                                    }
                                })]
                            })]
                        })]
                    })
                })
            }

            function M(e) {
                let {
                    guild: t,
                    prompts: n,
                    step: i,
                    selectOption: d,
                    completeOnboarding: c,
                    setCurrentStep: _,
                    headerId: I,
                    disableTracking: h
                } = e, C = (0, l.default)([u.default], () => u.default.getRulesPrompt(t.id));
                s.useEffect(() => {
                    o.default.fetchVerificationForm(t.id)
                }, [t.id]);
                let T = n[i],
                    m = i + 1 >= n.length && !R(C),
                    A = n[0].required;
                s.useEffect(() => {
                    !h && E.default.track(N.AnalyticEvents.GUILD_ONBOARDING_STEP_VIEWED, {
                        ...(0, r.collectGuildAnalyticsMetadata)(t.id),
                        step: 0,
                        required: A
                    })
                }, [t.id, A, h]);
                let p = e => {
                        !h && (E.default.track(N.AnalyticEvents.GUILD_ONBOARDING_STEP_COMPLETED, {
                            ...(0, r.collectGuildAnalyticsMetadata)(t.id),
                            step: i,
                            options_selected: e,
                            skipped: 0 === e,
                            back: !1,
                            in_onboarding: !0,
                            is_final_step: !1
                        }), i < n.length - 1 && E.default.track(N.AnalyticEvents.GUILD_ONBOARDING_STEP_VIEWED, {
                            ...(0, r.collectGuildAnalyticsMetadata)(t.id),
                            step: i,
                            required: n[i + 1].required
                        })), i + 1 < n.length ? _(i + 1) : R(C) && _("rules")
                    },
                    g = e => {
                        !h && (E.default.track(N.AnalyticEvents.GUILD_ONBOARDING_STEP_COMPLETED, {
                            ...(0, r.collectGuildAnalyticsMetadata)(t.id),
                            step: i,
                            skipped: !1,
                            back: !0,
                            options_selected: e,
                            in_onboarding: !0,
                            is_final_step: !1
                        }), i > 0 && E.default.track(N.AnalyticEvents.GUILD_ONBOARDING_STEP_VIEWED, {
                            ...(0, r.collectGuildAnalyticsMetadata)(t.id),
                            step: i - 1,
                            required: n[i - 1].required
                        })), _(Math.max(0, i - 1))
                    };
                if (null == T) return null;
                switch (T.type) {
                    case S.OnboardingPromptType.MULTIPLE_CHOICE:
                        return (0, a.jsx)(L, {
                            guild: t,
                            headerId: I,
                            step: i,
                            questionCount: n.length,
                            currentPrompt: T,
                            lastPrompt: m,
                            selectOption: d,
                            gotoPrevPrompt: g,
                            gotoNextPrompt: p,
                            completeOnboarding: c
                        });
                    case S.OnboardingPromptType.DROPDOWN:
                        return (0, a.jsx)(O, {
                            guild: t,
                            headerId: I,
                            step: i,
                            questionCount: n.length,
                            currentPrompt: T,
                            lastPrompt: m,
                            selectOption: d,
                            gotoPrevPrompt: g,
                            gotoNextPrompt: p,
                            completeOnboarding: c
                        });
                    default:
                        (0, f.assertNever)(T.type)
                }
            }
        },
        966003: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("151426"),
                r = n("10641"),
                o = n("592407"),
                u = n("305961"),
                d = n("162771"),
                c = n("489622"),
                E = n("599110"),
                f = n("179803"),
                _ = n("49111"),
                I = n("782340");

            function h(e) {
                let {
                    dismissCurrentNotice: t
                } = e, n = (0, l.default)([d.default], () => d.default.getGuildId(), []), h = (0, l.default)([u.default], () => u.default.getGuild(n), [n]);
                return (s.useEffect(() => {
                    (0, r.requestMarkDismissibleContentAsShown)(i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR)
                }, []), null == h) ? null : (0, a.jsxs)(c.default, {
                    color: c.NoticeColors.DEFAULT,
                    children: [(0, a.jsx)(c.NoticeCloseButton, {
                        onClick: () => {
                            E.default.track(_.AnalyticEvents.UPSELL_CLICKED, {
                                type: i.DismissibleContent[i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR],
                                action: "dismiss"
                            }), t(), (0, f.dismissedGuildOnboardingUpsell)(h.id, i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR)
                        }
                    }), I.default.Messages.GUILD_ONBOARDING_NAGBAR_MESSAGE, (0, a.jsx)(c.NoticeButton, {
                        onClick: () => {
                            E.default.track(_.AnalyticEvents.UPSELL_CLICKED, {
                                type: i.DismissibleContent[i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR],
                                action: "primary"
                            }), o.default.open(h.id, _.GuildSettingsSections.ONBOARDING), (0, f.dismissedGuildOnboardingUpsell)(h.id, i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR)
                        },
                        children: I.default.Messages.GUILD_ONBOARDING_UPSELL_COACHMARK_CHECK_IT_OUT
                    })]
                })
            }
        },
        667712: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("301165"),
                o = n("65597"),
                u = n("669491"),
                d = n("819855"),
                c = n("77078"),
                E = n("430568"),
                f = n("841098"),
                _ = n("385976"),
                I = n("795228"),
                h = n("695284"),
                C = n("956089"),
                T = n("782340"),
                m = n("489319");

            function S(e) {
                var t;
                let {
                    guildId: n,
                    option: l,
                    selected: S,
                    onSelect: N,
                    hideMemberCount: A,
                    canBeNew: p
                } = e, g = (0, d.isThemeDark)((0, f.default)()), [R, O] = s.useState(!1), L = R && !A, M = s.useRef(null), {
                    reducedMotion: v
                } = s.useContext(c.AccessibilityPreferencesContext), D = (0, o.default)([_.default], () => {
                    var e, n, a;
                    return (null === (e = l.emoji) || void 0 === e ? void 0 : e.id) != null && null !== (t = null === (n = _.default.getCustomEmojiById(null === (a = l.emoji) || void 0 === a ? void 0 : a.id)) || void 0 === n ? void 0 : n.animated) && void 0 !== t && t
                }), x = (0, I.default)(n, 1e3), P = null == x || null == l.roleIds ? 0 : Math.max(...l.roleIds.map(e => x[e])), y = p && !S && l.isUnseen, b = (0, r.useSpring)({
                    transform: S || v.enabled ? "scale(1)" : "scale(0.7)",
                    opacity: S ? 1 : 0,
                    config: {
                        duration: 150
                    }
                }), U = (0, c.useToken)(u.default.colors.BACKGROUND_MODIFIER_ACCENT), G = (0, c.useToken)(u.default.unsafe_rawColors.BRAND_500), j = (0, r.useSpring)({
                    from: {
                        color: G.spring()
                    },
                    color: U.spring({
                        opacity: g ? .5 : .25
                    }),
                    config: {
                        duration: 300
                    },
                    delay: 500
                }), F = (0, r.useTransition)(L, {
                    from: {
                        transform: v.enabled ? "translateX(0)" : "translateX(8px)",
                        opacity: 0
                    },
                    enter: {
                        transform: "translateX(0)",
                        opacity: 1
                    },
                    leave: {
                        opacity: 0
                    },
                    trail: 400,
                    config: {
                        duration: 150
                    }
                }), [k, B] = s.useState(!1);
                s.useEffect(() => {
                    if (L) return M.current = setTimeout(() => {
                        O(!1), M.current = null
                    }, 3e3), () => {
                        null != M.current && clearTimeout(M.current)
                    }
                }, [L]);
                let w = i(m.optionButtonWrapper, {
                        [m.selected]: S,
                        [m.pressed]: k
                    }),
                    H = y ? {
                        borderColor: j.color
                    } : {};
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsx)(r.animated.div, {
                        style: H,
                        className: w,
                        children: (0, a.jsxs)(c.Clickable, {
                            className: i(m.optionButton),
                            onClick: () => {
                                O(!S), N(!S)
                            },
                            onMouseDown: () => B(!0),
                            onMouseUp: () => B(!1),
                            children: [null != l.emoji && (null != l.emoji.id || null != l.emoji.name) ? (0, a.jsx)(E.default, {
                                animated: l.emoji.animated || D,
                                className: m.buttonEmoji,
                                emojiId: l.emoji.id,
                                emojiName: l.emoji.name
                            }) : null, (0, a.jsxs)("div", {
                                className: m.buttonText,
                                children: [(0, a.jsx)(c.Text, {
                                    variant: "text-md/medium",
                                    color: "header-primary",
                                    children: l.title
                                }), l.description.length > 0 ? (0, a.jsx)(c.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    children: l.description
                                }) : null]
                            }), (0, a.jsx)(r.animated.div, {
                                className: m.checkIcon,
                                style: b,
                                children: (0, a.jsx)(h.default, {
                                    width: 10,
                                    height: 10,
                                    color: u.default.unsafe_rawColors.WHITE_500.css
                                })
                            }), F((e, t) => P > 0 && t && (0, a.jsx)(r.animated.div, {
                                className: m.memberCount,
                                style: e,
                                children: (0, a.jsx)(c.Text, {
                                    variant: "text-xs/normal",
                                    color: "always-white",
                                    children: T.default.Messages.ONBOARDING_OPTION_ROLE_COUNTS.format({
                                        memberCount: P
                                    })
                                })
                            })), y && (0, a.jsx)(C.TextBadge, {
                                color: u.default.unsafe_rawColors.BRAND_260.css,
                                text: T.default.Messages.NEW,
                                className: m.newBadge
                            })]
                        })
                    })
                })
            }
        },
        469242: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("448105"),
                i = n.n(l),
                r = n("669491"),
                o = n("77078"),
                u = n("430568"),
                d = n("954419"),
                c = n("945330"),
                E = n("956089"),
                f = n("782340"),
                _ = n("191134");

            function I(e) {
                return null != e && (null != e.id || null != e.name)
            }
            let h = {
                ...d.DEFAULT_SELECT_STYLES,
                control: (e, t) => {
                    let {
                        isDisabled: n,
                        menuIsOpen: a
                    } = t;
                    return {
                        ...e,
                        backgroundColor: "var(--input-background)",
                        borderColor: "var(--input-background)",
                        opacity: n ? .6 : 1,
                        boxShadow: void 0,
                        borderRadius: a ? "8px 8px 0 0" : "8px",
                        minHeight: 40,
                        transition: "border 0.15s ease",
                        cursor: n ? "not-allowed" : void 0,
                        pointerEvents: n ? "none" : void 0,
                        "&:hover": {
                            borderColor: "var(--input-background)"
                        }
                    }
                },
                valueContainer: e => ({
                    ...e,
                    padding: "8px",
                    display: "flex",
                    flexDirection: "row",
                    gap: "8px",
                    cursor: "text"
                }),
                indicatorsContainer: e => ({
                    ...e,
                    alignItems: "flex-start",
                    paddingTop: 4
                }),
                option: (e, t) => {
                    let {
                        isSelected: n,
                        isFocused: a
                    } = t;
                    return {
                        ...e,
                        ...n ? {
                            backgroundColor: "var(--background-modifier-selected)",
                            color: "var(--interactive-active)"
                        } : a ? {
                            backgroundColor: "var(--background-modifier-hover)",
                            color: "var(--interactive-hover)"
                        } : {
                            backgroundColor: "transparent",
                            color: "var(--interactive-normal)"
                        },
                        cursor: "pointer",
                        display: "flex",
                        padding: 12,
                        alignItems: "center",
                        minHeight: 40,
                        "&:active": {
                            backgroundColor: "var(--background-modifier-selected)",
                            color: "var(--interactive-active)"
                        },
                        "&:hover [data-hover=true]": {
                            opacity: 1
                        }
                    }
                }
            };

            function C(e) {
                let {
                    options: t,
                    value: n,
                    onChange: l,
                    canBeNew: C,
                    memberCounts: T
                } = e, m = e => {
                    e.preventDefault(), e.stopPropagation()
                }, S = s.useCallback(e => {
                    var s, i, r, d;
                    return (0, a.jsxs)("div", {
                        className: _.selectValuePill,
                        onMouseDown: m,
                        children: [I(e.emoji) && (0, a.jsx)(u.default, {
                            emojiId: null === (s = e.emoji) || void 0 === s ? void 0 : s.id,
                            emojiName: null === (i = e.emoji) || void 0 === i ? void 0 : i.name,
                            animated: null !== (d = null === (r = e.emoji) || void 0 === r ? void 0 : r.animated) && void 0 !== d && d
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-sm/normal",
                            children: e.title
                        }), (0, a.jsx)(o.Clickable, {
                            className: _.selectValuePillClose,
                            onClick: () => {
                                l(t.filter(t => n.includes(t.id) && t.id !== e.id))
                            },
                            children: (0, a.jsx)(c.default, {
                                className: _.selectValuePillCloseIcon
                            })
                        })]
                    })
                }, [l, t, n]), N = s.useCallback(e => {
                    var t, n, s, l;
                    let i = null == T || null == e.roleIds ? 0 : Math.max(...e.roleIds.map(e => T[e])),
                        d = null != T && i > 0;
                    return (0, a.jsxs)("div", {
                        className: _.selectOption,
                        children: [(0, a.jsxs)("div", {
                            className: _.selectOptionTitle,
                            children: [I(e.emoji) && (0, a.jsx)(u.default, {
                                emojiId: null === (t = e.emoji) || void 0 === t ? void 0 : t.id,
                                emojiName: null === (n = e.emoji) || void 0 === n ? void 0 : n.name,
                                animated: null !== (l = null === (s = e.emoji) || void 0 === s ? void 0 : s.animated) && void 0 !== l && l
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-sm/normal",
                                children: e.title
                            })]
                        }), C && e.isUnseen && (0, a.jsx)(E.TextBadge, {
                            color: r.default.unsafe_rawColors.BRAND_260.css,
                            text: f.default.Messages.NEW,
                            className: _.optionNewBadge
                        }), d && (0, a.jsx)("div", {
                            className: _.selectOptionMemberCount,
                            "data-hover": !0,
                            children: (0, a.jsx)(o.Text, {
                                variant: "text-xs/normal",
                                color: "always-white",
                                children: f.default.Messages.ONBOARDING_OPTION_ROLE_COUNTS.format({
                                    memberCount: i
                                })
                            })
                        })]
                    })
                }, [C, T]), A = s.useCallback((e, t) => {
                    let {
                        data: n
                    } = e;
                    return 0 === t.length || i(t.toLowerCase(), n.title.toLowerCase())
                }, []);
                return (0, a.jsx)(d.default, {
                    styleOverrides: h,
                    clearable: !1,
                    isMulti: !0,
                    options: t,
                    onChange: l,
                    value: n,
                    closeMenuOnSelect: !1,
                    multiValueRenderer: S,
                    optionRenderer: N,
                    filterOption: A
                })
            }
        },
        547840: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("819855"),
                r = n("77078"),
                o = n("841098"),
                u = n("716241"),
                d = n("50926"),
                c = n("526253"),
                E = n("367376"),
                f = n("137215"),
                _ = n("599110"),
                I = n("49111"),
                h = n("782340"),
                C = n("710362");

            function T(e) {
                var t;
                let {
                    guild: n,
                    prompts: T,
                    completeOnboarding: m,
                    setCurrentStep: S,
                    disableTracking: N,
                    previousPromptIndex: A
                } = e, p = s.useRef(null), g = (0, l.default)([c.default], () => c.default.getRulesPrompt(n.id)), [R, O] = s.useState(null !== (t = null == g ? void 0 : g.response) && void 0 !== t && t), L = (0, l.default)([c.default], () => c.default.get(n.id)), M = (0, o.default)(), v = s.useRef(null), D = s.useRef(null), x = (0, i.isThemeDark)(M) ? "linear-gradient(to top, rgba(54, 57, 63, 1), rgba(54, 57, 63, 0))" : "linear-gradient(to top, rgba(242, 243, 245, 1), rgba(242, 243, 245, 0))", P = s.useCallback(async () => {
                    if (null != L && null != g) {
                        try {
                            await d.default.submitVerificationForm(n.id, {
                                ...L,
                                formFields: [{
                                    ...g,
                                    response: R
                                }]
                            })
                        } catch {}
                        m()
                    }
                }, [n.id, L, g, R, m]);

                function y(e) {
                    let [t] = e;
                    t.isIntersecting && O(!0)
                }
                return (s.useEffect(() => {
                    let e = new IntersectionObserver(y, {
                            root: v.current,
                            rootMargin: "0px",
                            threshold: 0
                        }),
                        t = D.current;
                    return null != t && null != t.lastElementChild && e.observe(t.lastElementChild), () => {
                        null != t && null != t.lastElementChild && e.unobserve(t.lastElementChild)
                    }
                }, [D, v]), null == g) ? null : (0, a.jsx)("div", {
                    className: C.prompt,
                    children: (0, a.jsxs)("div", {
                        className: C.promptContent,
                        ref: v,
                        children: [(0, a.jsxs)(r.AdvancedScrollerThin, {
                            className: C.scrollerContent,
                            ref: p,
                            children: [(0, a.jsx)(r.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                children: h.default.Messages.ONBOARDING_RULES_STEP
                            }), (0, a.jsx)(r.Heading, {
                                variant: "heading-xl/semibold",
                                children: h.default.Messages.ONBOARDING_RULES_TITLE
                            }), (0, a.jsx)("div", {
                                className: C.termsFieldBody,
                                ref: D,
                                children: g.values.map((e, t) => (0, a.jsxs)("div", {
                                    className: C.termsRow,
                                    children: [(0, a.jsx)(r.Text, {
                                        variant: "text-sm/normal",
                                        color: "text-muted",
                                        children: "".concat(t + 1, ".")
                                    }), (0, a.jsx)(r.Text, {
                                        variant: "text-sm/normal",
                                        className: C.termsRowContent,
                                        children: E.default.parseGuildVerificationFormRule(e, !0, {
                                            channelId: n.rulesChannelId
                                        })
                                    })]
                                }, "term-".concat(t)))
                            })]
                        }), (0, a.jsx)("div", {
                            className: C.overlay,
                            style: {
                                background: x
                            }
                        }), (0, a.jsxs)("div", {
                            className: C.navButtons,
                            children: [(0, a.jsx)("div", {
                                className: C.leftButtons,
                                children: -1 !== A && (0, a.jsxs)(r.Button, {
                                    innerClassName: C.buttonInner,
                                    onClick: () => {
                                        !N && (_.default.track(I.AnalyticEvents.GUILD_ONBOARDING_STEP_COMPLETED, {
                                            ...(0, u.collectGuildAnalyticsMetadata)(n.id),
                                            step: -1,
                                            skipped: !1,
                                            back: !0,
                                            options_selected: 0,
                                            in_onboarding: !0,
                                            is_final_step: !1
                                        }), A >= 0 && _.default.track(I.AnalyticEvents.GUILD_ONBOARDING_STEP_VIEWED, {
                                            ...(0, u.collectGuildAnalyticsMetadata)(n.id),
                                            step: A,
                                            required: T[A].required
                                        })), S(A)
                                    },
                                    size: r.Button.Sizes.MEDIUM,
                                    look: r.Button.Looks.OUTLINED,
                                    grow: !1,
                                    color: r.Button.Colors.PRIMARY,
                                    children: [(0, a.jsx)(f.default, {
                                        className: C.arrow,
                                        direction: f.default.Directions.LEFT
                                    }), h.default.Messages.BACK]
                                })
                            }), (0, a.jsxs)("div", {
                                className: C.rightButtons,
                                children: [(0, a.jsx)(r.Text, {
                                    className: C.helpText,
                                    variant: "text-xs/normal",
                                    color: "text-muted",
                                    children: R ? h.default.Messages.MEMBER_VERIFICATION_READ_AGREE_RULES : h.default.Messages.MEMBER_VERIFICATION_MUST_READ_RULES
                                }), (0, a.jsxs)(r.Button, {
                                    innerClassName: C.buttonInner,
                                    onClick: P,
                                    disabled: !R,
                                    size: r.Button.Sizes.MEDIUM,
                                    look: r.Button.Looks.FILLED,
                                    grow: !1,
                                    color: r.Button.Colors.BRAND,
                                    children: [h.default.Messages.FINISH, (0, a.jsx)("span", {
                                        className: C.finishEmoji,
                                        role: "img",
                                        "aria-hidden": !0,
                                        children: "\uD83C\uDF89"
                                    })]
                                })]
                            })]
                        })]
                    })
                })
            }
        },
        768945: function(e, t, n) {
            "use strict";

            function a(e) {
                var t, n;
                if (null == e) return null;
                if ((null === (t = e.content) || void 0 === t ? void 0 : t.length) > 0) return e.content;
                if ((null === (n = e.embeds) || void 0 === n ? void 0 : n.length) > 0) {
                    for (let t of e.embeds)
                        if (null != t.rawDescription && t.rawDescription.length > 0) return t.rawDescription
                }
                return null
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        778613: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHasPendingMemberAction: function() {
                    return f
                }
            });
            var a = n("65597"),
                s = n("42203"),
                l = n("26989"),
                i = n("305961"),
                r = n("568734"),
                o = n("698882"),
                u = n("675305"),
                d = n("6263"),
                c = n("49111"),
                E = n("657944");

            function f(e, t) {
                let n = (0, a.default)([i.default], () => i.default.getGuild(e)),
                    f = (0, a.default)([s.default], () => s.default.getChannel(t)),
                    _ = (0, a.default)([l.default], () => null == e ? null : l.default.getSelfMember(e)),
                    {
                        showOnboardingHome: I
                    } = (0, d.useOnboardingHomeExperiment)(n, _);
                return (0, a.default)([u.default, o.default, l.default], () => {
                    var e, t;
                    return null != n && null != f && I && n.hasFeature(c.GuildFeatures.GUILD_SERVER_GUIDE) && !r.hasFlag(null !== (t = null === (e = l.default.getSelfMember(n.id)) || void 0 === e ? void 0 : e.flags) && void 0 !== t ? t : 0, E.GuildMemberFlags.COMPLETED_HOME_ACTIONS) && o.default.hasMemberAction(n.id, f.id) && !u.default.hasCompletedActionForChannel(n.id, f.id)
                })
            }
        },
        99384: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("65597"),
                s = n("42203"),
                l = n("698882");

            function i(e) {
                return (0, a.useStateFromStoresArray)([l.default, s.default], () => {
                    let t = l.default.getResourceChannels(e);
                    return t.filter(e => null != s.default.getChannel(e.channelId))
                })
            }
        },
        414033: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MIN_GUILD_HOME_PAGE_WIDTH: function() {
                    return d
                },
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("665182"),
                i = n("462998"),
                r = n("982108"),
                o = n("49111"),
                u = n("724210");
            let d = 656;

            function c(e) {
                let {
                    pageWidth: t,
                    onSidebarResize: n
                } = e, c = (0, s.useStateFromStores)([r.default], () => r.default.getSidebarState(u.StaticChannelRoute.GUILD_HOME));
                if (null == c || null == c.channelId) return null;
                let E = t - o.CHANNEL_SIDEBAR_WIDTH - d;
                return (0, a.jsx)(l.default, {
                    sidebarType: l.ChatSidebarType.HomeSidebar,
                    maxWidth: E,
                    onWidthChange: n,
                    children: (0, a.jsx)(i.default, {
                        channelId: c.channelId,
                        baseChannelId: u.StaticChannelRoute.GUILD_HOME,
                        channelViewSource: "Home View",
                        isResourceChannelView: !0
                    })
                })
            }
        },
        957687: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("65597"),
                o = n("77078"),
                u = n("851387"),
                d = n("834897"),
                c = n("716241"),
                E = n("815619"),
                f = n("539938"),
                _ = n("208021"),
                I = n("982108"),
                h = n("620193"),
                C = n("599110"),
                T = n("347895"),
                m = n("698882"),
                S = n("675305"),
                N = n("363176"),
                A = n("414033"),
                p = n("831629"),
                g = n("749623"),
                R = n("112886"),
                O = n("768596"),
                L = n("49111"),
                M = n("724210"),
                v = n("515631"),
                D = n("782340"),
                x = n("139238"),
                P = n("305794");
            let y = A.MIN_GUILD_HOME_PAGE_WIDTH + 300 + 64,
                b = s.memo(function(e) {
                    let {
                        guild: t
                    } = e;
                    return (0, a.jsxs)(f.default, {
                        channelId: M.StaticChannelRoute.GUILD_HOME,
                        guildId: t.id,
                        className: i(x.title, x.background),
                        innerClassname: x.headerBarInner,
                        children: [(0, a.jsx)(f.default.Icon, {
                            icon: h.default,
                            "aria-hidden": !0
                        }), (0, a.jsxs)(f.default.Title, {
                            children: [(0, a.jsx)(o.HiddenVisually, {
                                children: t.name
                            }), D.default.Messages.SERVER_GUIDE]
                        })]
                    })
                });

            function U(e) {
                var t, n;
                let {
                    guild: l,
                    width: f
                } = e, h = (0, r.default)([I.default], () => I.default.getSection(M.StaticChannelRoute.GUILD_HOME)), [D, U] = s.useState(!1), [G, j] = s.useState(L.DEFAULT_CHAT_SIDEBAR_WIDTH), F = h === L.ChannelSections.SIDEBAR_CHAT, k = (0, o.useFocusJumpSection)(), B = (0, r.default)([m.default], () => m.default.getSettings(l.id)), w = null == B ? void 0 : B.welcomeMessage, H = (0, N.default)(l.id), V = !H && (null !== (n = null == B ? void 0 : null === (t = B.resourceChannels) || void 0 === t ? void 0 : t.length) && void 0 !== n ? n : 0) === 0, Y = (0, d.default)(v.COLLAPSED_SIZE_MEDIA_QUERY), W = f - L.CHANNEL_SIDEBAR_WIDTH - G, K = F && W < y || Y || V;
                return (s.useEffect(() => {
                    if (B === m.NO_SETTINGS)(0, T.fetchGuildHomeSettings)(l.id);
                    else if (null != B) {
                        var e, t, n, a, s;
                        C.default.track(L.AnalyticEvents.SERVER_GUIDE_VIEWED, {
                            ...(0, c.collectGuildAnalyticsMetadata)(l.id),
                            num_member_actions: null !== (n = null === (e = B.newMemberActions) || void 0 === e ? void 0 : e.length) && void 0 !== n ? n : 0,
                            num_member_actions_completed: Object.keys(null !== (a = S.default.getCompletedActions(l.id)) && void 0 !== a ? a : {}).length,
                            num_resource_channels: null !== (s = null === (t = B.resourceChannels) || void 0 === t ? void 0 : t.length) && void 0 !== s ? s : 0
                        })
                    }
                }, [l.id, B]), s.useEffect(() => () => {
                    _.default.closeChannelSidebar(M.StaticChannelRoute.GUILD_HOME)
                }, []), s.useEffect(() => {
                    V && B !== m.NO_SETTINGS && u.default.escapeToDefaultChannel(l.id)
                }, [l.id, V, B]), V) ? null : (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: i(P.chat, x.background, {
                            [P.threadSidebarOpen]: F,
                            [P.threadSidebarFloating]: F && D
                        }),
                        children: [(0, a.jsx)(b, {
                            guild: l
                        }), (0, a.jsx)(o.AdvancedScrollerAuto, {
                            ...k,
                            children: (0, a.jsxs)("div", {
                                className: i(x.homeContainer, {
                                    [x.homeContainerCollapsed]: K
                                }),
                                children: [(0, a.jsx)("div", {
                                    className: x.maxWidthWrapper,
                                    children: (0, a.jsx)(E.default, {
                                        guild: l,
                                        titleClassName: Y ? x.emptyHeaderTitle : void 0
                                    })
                                }), (0, a.jsxs)("div", {
                                    className: i(x.homeContent, x.maxWidthWrapper),
                                    children: [(0, a.jsxs)("div", {
                                        className: x.mainContent,
                                        children: [H && (0, a.jsx)(O.default, {
                                            guildId: l.id,
                                            welcomeMessage: w
                                        }), H && (0, a.jsx)(g.default, {
                                            guildId: l.id
                                        }), !H || K ? (0, a.jsx)(R.default, {
                                            guild: l,
                                            isNewMember: H
                                        }) : null]
                                    }), K ? null : (0, a.jsx)(p.default, {
                                        guild: l,
                                        isNewMember: H
                                    })]
                                })]
                            })
                        })]
                    }), F ? (0, a.jsx)(A.default, {
                        pageWidth: f,
                        onSidebarResize: (e, t) => {
                            U(t), j(e)
                        }
                    }) : null]
                })
            }
        },
        831629: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("77078"),
                r = n("819689"),
                o = n("791234"),
                u = n("503021"),
                d = n("757414"),
                c = n("208021"),
                E = n("42203"),
                f = n("377253"),
                _ = n("957255"),
                I = n("16865"),
                h = n("315102"),
                C = n("347895"),
                T = n("99384"),
                m = n("49111"),
                S = n("782340"),
                N = n("139238");
            let A = s.memo(function(e) {
                    let {
                        guild: t
                    } = e, n = (0, l.default)([d.default], () => d.default.getGuild(t.id), [t]);
                    return s.useEffect(() => {
                        null == n && (0, u.fetchGuildForPopout)(t.id)
                    }, [t.id, n]), (0, a.jsx)("div", {
                        className: N.sidebarCardWrapper,
                        children: (0, a.jsxs)("div", {
                            className: N.sidebarCard,
                            children: [(0, a.jsx)(i.Heading, {
                                className: N.sidebarCardHeader,
                                variant: "heading-md/bold",
                                color: "header-primary",
                                children: S.default.Messages.GUILD_HOME_ABOUT
                            }), (0, a.jsx)(i.Text, {
                                className: N.guildDescription,
                                variant: "text-md/normal",
                                color: "text-normal",
                                children: t.description
                            }), (0, a.jsx)("div", {
                                className: N.guildInfo,
                                children: (null == n ? void 0 : n.memberCount) != null && (null == n ? void 0 : n.presenceCount) != null && (0, a.jsxs)(a.Fragment, {
                                    children: [(0, a.jsx)("div", {
                                        className: N.dotOnline
                                    }), (0, a.jsx)(i.Text, {
                                        className: N.guildInfoText,
                                        variant: "text-xs/normal",
                                        color: "text-muted",
                                        children: S.default.Messages.GUILD_ONBOARDING_HOME_GUILD_MEMBERS_RATIO.format({
                                            online: null == n ? void 0 : n.presenceCount,
                                            total: null == n ? void 0 : n.memberCount
                                        })
                                    })]
                                })
                            })]
                        })
                    })
                }),
                p = e => {
                    let {
                        channelId: t,
                        title: n,
                        icon: u
                    } = e, d = (0, l.default)([E.default], () => E.default.getChannel(t)), T = (0, l.default)([f.default], () => f.default.getMessages(t)), S = (0, l.default)([_.default], () => _.default.can(m.Permissions.VIEW_CHANNEL, d)), A = T.first(), p = (0, o.useForumPostMediaProperties)(A, !1), g = (null == p ? void 0 : p.length) > 0 ? p[0] : null, R = null != d && null == A && !T.loadingMore && !T.ready && !T.hasFetched && S;
                    s.useEffect(() => {
                        R && r.default.fetchMessages({
                            channelId: t,
                            after: t,
                            limit: 5
                        })
                    }, [t, R]);
                    let O = e => {
                        null != d && (e.shiftKey ? (0, C.selectHomeResourceChannel)(d.guild_id, d.id) : c.default.openResourceChannelAsSidebar({
                            guildId: d.guild_id,
                            channelId: d.id
                        }))
                    };
                    return (0, a.jsx)(i.Clickable, {
                        className: N.resourceChannel,
                        onClick: e => O(e),
                        children: (0, a.jsxs)(a.Fragment, {
                            children: [(() => {
                                let e = h.default.getResourceChannelIconURL({
                                    channelId: t,
                                    icon: u
                                });
                                return null != u && null != e ? (0, a.jsx)("img", {
                                    src: e,
                                    className: N.resourceImage,
                                    alt: "",
                                    "aria-hidden": !0
                                }) : null != g ? (0, a.jsx)("img", {
                                    className: N.resourceImage,
                                    src: g.src,
                                    alt: g.alt
                                }) : (0, a.jsx)("div", {
                                    className: N.placeholderImage,
                                    children: (0, a.jsx)(I.default, {})
                                })
                            })(), (0, a.jsx)(i.Text, {
                                className: N.guildInfoText,
                                variant: "text-sm/semibold",
                                color: "none",
                                children: n
                            })]
                        })
                    }, t)
                },
                g = s.memo(function(e) {
                    let {
                        guild: t
                    } = e, n = (0, T.default)(t.id);
                    return 0 === n.length ? null : (0, a.jsx)("div", {
                        className: N.sidebarCardWrapper,
                        children: (0, a.jsxs)("div", {
                            className: N.sidebarCard,
                            children: [(0, a.jsx)(i.Heading, {
                                className: N.sidebarCardHeader,
                                variant: "heading-md/bold",
                                color: "header-primary",
                                children: S.default.Messages.GUILD_HOME_RESOURCES
                            }), (0, a.jsx)("div", {
                                className: N.resourceChannelsList,
                                children: n.map(e => (0, a.jsx)(p, {
                                    channelId: e.channelId,
                                    title: e.title,
                                    icon: e.icon
                                }, "widget-resource-".concat(e.channelId)))
                            })]
                        })
                    })
                }),
                R = s.memo(function(e) {
                    let {
                        guild: t,
                        isNewMember: n
                    } = e;
                    return (0, a.jsxs)("aside", {
                        className: N.sidebar,
                        children: [(0, a.jsx)(A, {
                            guild: t
                        }), n && (0, a.jsx)(g, {
                            guild: t
                        })]
                    })
                });
            var O = R
        },
        112886: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("819689"),
                d = n("791234"),
                c = n("512630"),
                E = n("367376"),
                f = n("651693"),
                _ = n("605160"),
                I = n("933629"),
                h = n("393414"),
                C = n("208021"),
                T = n("845579"),
                m = n("42203"),
                S = n("923959"),
                N = n("377253"),
                A = n("957255"),
                p = n("471671"),
                g = n("315102"),
                R = n("347895"),
                O = n("768945"),
                L = n("99384"),
                M = n("49111"),
                v = n("782340"),
                D = n("100703"),
                x = n("632215"),
                P = n("448738");

            function y(e) {
                let t, n, {
                        firstMedia: s,
                        channelId: l
                    } = e,
                    o = (0, r.useStateFromStores)([m.default], () => m.default.getChannel(l)),
                    [u, d] = (0, _.useShouldObscure)({
                        media: s,
                        channel: o
                    }),
                    E = (0, _.getObscuredAlt)(d),
                    h = (0, r.useStateFromStores)([p.default], () => p.default.isFocused()),
                    C = (0, f.isAnimatedImageUrl)(s.src),
                    S = T.GifAutoPlay.useSetting(),
                    {
                        src: N,
                        width: A,
                        height: g,
                        alt: R
                    } = s;
                return g > A ? n = 72 : t = 72, (0, a.jsxs)("div", {
                    className: D.media,
                    children: [(0, I.renderImageComponent)({
                        src: N,
                        maxHeight: t,
                        maxWidth: n,
                        width: A,
                        height: g,
                        alt: null != R && u && null != E ? E : R,
                        autoPlay: S,
                        animated: C && !u && h,
                        containerClassName: D.thumbnailContainer,
                        imageClassName: i({
                            [D.obscured]: u
                        })
                    }), u && (0, a.jsx)(c.default, {
                        obscureReason: d,
                        iconClassname: D.obscuredTag
                    })]
                })
            }

            function b(e) {
                let {
                    resource: t
                } = e, n = (0, r.useStateFromStores)([m.default], () => m.default.getChannel(t.channelId)), l = (0, r.useStateFromStores)([N.default], () => N.default.getMessages(t.channelId)), c = (0, r.useStateFromStores)([A.default], () => A.default.can(M.Permissions.VIEW_CHANNEL, n)), f = l.first(), _ = (0, O.default)(f), I = (0, d.useForumPostMediaProperties)(f, !1), h = (null == I ? void 0 : I.length) > 0 ? I[0] : null, T = null != n && null == l.first() && !l.loadingMore && !l.ready && !l.hasFetched && c;
                s.useEffect(() => {
                    T && u.default.fetchMessages({
                        channelId: t.channelId,
                        after: t.channelId,
                        limit: 5
                    })
                }, [t.channelId, T]);
                if (null == n || null == n.guild_id) return null;
                let S = g.default.getResourceChannelIconURL({
                        channelId: n.id,
                        icon: t.icon
                    }),
                    p = null == t.description || 0 === t.description.length;
                return (0, a.jsxs)(o.Clickable, {
                    className: D.row,
                    onClick: e => {
                        null != n && (e.shiftKey ? (0, R.selectHomeResourceChannel)(n.guild_id, n.id) : C.default.openResourceChannelAsSidebar({
                            guildId: n.guild_id,
                            channelId: n.id
                        }))
                    },
                    children: [(0, a.jsxs)("div", {
                        className: D.content,
                        children: [(0, a.jsx)(o.Text, {
                            className: D.title,
                            variant: "text-md/bold",
                            color: "header-primary",
                            children: t.title
                        }), p && null != _ && (0, a.jsx)(o.Text, {
                            className: D.messageContent,
                            variant: "text-sm/normal",
                            color: "header-secondary",
                            lineClamp: 3,
                            children: E.default.parse(_, !0, {
                                guildId: n.guild_id,
                                channelId: n.id
                            })
                        }), !p && (0, a.jsx)(o.Text, {
                            className: i(D.messageContent, x.markup),
                            variant: "text-sm/normal",
                            color: "header-secondary",
                            lineClamp: 3,
                            children: E.default.parse(t.description, !0, {
                                guildId: n.guild_id,
                                channelId: n.id
                            })
                        })]
                    }), null != t.icon && null != S ? (0, a.jsx)("div", {
                        className: D.media,
                        children: (0, a.jsx)("img", {
                            src: S,
                            className: D.thumbnail,
                            width: 72,
                            height: 72,
                            alt: "",
                            "aria-hidden": !0
                        })
                    }) : null, null == S && null != h ? (0, a.jsx)(y, {
                        firstMedia: h,
                        channelId: t.channelId
                    }) : null]
                })
            }

            function U(e) {
                let {
                    guild: t,
                    isNewMember: n
                } = e, s = (0, L.default)(t.id);
                if (0 === s.length) return n ? null : (0, a.jsxs)("div", {
                    className: D.emptyContainer,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-xl/bold",
                        color: "header-primary",
                        children: v.default.Messages.MEMBER_ACTION_COMPLETE_EMPTY_STATE
                    }), (0, a.jsx)("img", {
                        className: D.emptyStateImage,
                        src: P,
                        alt: ""
                    }), (0, a.jsx)(o.Button, {
                        className: D.emptyStateButton,
                        onClick: () => {
                            let e = S.default.getDefaultChannel(t.id);
                            null != e && (0, h.transitionTo)(M.Routes.CHANNEL(t.id, e.id))
                        },
                        fullWidth: !0,
                        children: v.default.Messages.MEMBER_ACTION_COMPLETE_EMPTY_STATE_CTA
                    })]
                });
                return (0, a.jsxs)("div", {
                    className: D.container,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-lg/bold",
                        color: "header-primary",
                        children: v.default.Messages.GUILD_HOME_RESOURCES
                    }), s.map(e => (0, a.jsx)(b, {
                        resource: e
                    }, e.channelId))]
                })
            }
        },
        665274: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("446674"),
                s = n("913144"),
                l = n("271938"),
                i = n("42203"),
                r = n("305961"),
                o = n("188631");
            let u = {};

            function d(e, t) {
                let n = u[e];
                return !(null == n || n.has(t)) && (u[e] = new Set(n.add(t)), !0)
            }
            class c extends a.default.PersistedStore {
                initialize(e) {
                    this.waitFor(l.default, r.default), u = {}, null != e && Object.keys(e).forEach(t => {
                        let n = e[t];
                        null != n && "function" == typeof n[Symbol.iterator] && (u[t] = new Set(n))
                    })
                }
                getProgress(e) {
                    return u[e]
                }
                hasProgress(e) {
                    let t = u[e];
                    return null != t && !t.has(o.Steps.DISMISSED)
                }
                getState() {
                    return u
                }
            }
            c.displayName = "GuildProgressStore", c.persistKey = "GuildProgressStore", new c(s.default, {
                CONNECTION_OPEN: function() {
                    let e = [];
                    Object.keys(u).forEach(t => {
                        u[t].has(o.Steps.COMPLETED) && e.push(t)
                    }), e.forEach(e => d(e, o.Steps.DISMISSED))
                },
                GUILD_PROGRESS_INITIALIZE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    null == u[t] && (u[t] = new Set), !u[t].has(o.Steps.COMPLETED) && u[t].delete(o.Steps.DISMISSED)
                },
                GUILD_PROGRESS_COMPLETED_SEEN: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == u[t]) return !1;
                    u[t] = new Set(u[t].add(o.Steps.COMPLETED))
                },
                GUILD_PROGRESS_DISMISS: function(e) {
                    let {
                        guildId: t
                    } = e;
                    return d(t, o.Steps.DISMISSED)
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: {
                            id: t,
                            member_count: n
                        }
                    } = e, a = r.default.getGuild(t);
                    if (null == a) return !1;
                    a.ownerId === l.default.getId() && null != u[a.id] && (null != a.icon && u[a.id].add(o.Steps.AVATAR), n > 1 && u[a.id].add(o.Steps.INVITE))
                },
                CHANNEL_CREATE: function(e) {
                    let {
                        channel: t
                    } = e;
                    return null != t && null != t.guild_id && null != u[t.guild_id] && d(t.guild_id, o.Steps.CHANNEL)
                },
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e, n = !1;
                    for (let e of t) null != e && null != e.guild_id && null != u[e.guild_id] && !1 !== d(e.guild_id, o.Steps.CHANNEL) && (n = !0);
                    return n
                },
                GUILD_SETTINGS_SUBMIT_SUCCESS: function(e) {
                    let {
                        guild: t
                    } = e;
                    return null != t && null != t.id && null != u[t.id] && null != t.icon && d(t.id, o.Steps.AVATAR)
                },
                MESSAGE_CREATE: function(e) {
                    var t;
                    let {
                        channelId: n,
                        message: a
                    } = e, s = i.default.getChannel(n);
                    return (null === (t = a.author) || void 0 === t ? void 0 : t.id) === l.default.getId() && null != s && null != u[s.guild_id] && d(s.guild_id, o.Steps.MESSAGE)
                },
                GUILD_MEMBER_LIST_UPDATE: function(e) {
                    let {
                        guildId: t,
                        memberCount: n
                    } = e;
                    return null != u[t] && !!(n > 1) && d(t, o.Steps.INVITE)
                }
            })
        },
        93877: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("305961"),
                l = n("858560"),
                i = n("808388"),
                r = n("65722"),
                o = n("49111");

            function u(e) {
                let t = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    n = (0, i.useGuildEligibleForTierTemplates)(e),
                    u = (0, i.useUserEligibleForTierTemplates)(),
                    d = (null == t ? void 0 : t.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED)) === !0 && (null == t ? void 0 : t.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE)) === !1,
                    c = (0, r.canManageGuildRoleSubscriptions)(t);
                return d && u && c && l.GuildRoleSubscriptionsTierTemplatesExperiment.trackExposure({
                    guildId: e,
                    location: "ca30d9_1"
                }), d && u && c && n
            }
        },
        167790: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("7331"),
                l = n("305961"),
                i = n("697218"),
                r = n("49111");

            function o(e) {
                var t;
                let n = (0, a.useStateFromStores)([l.default], () => l.default.getGuild(e)),
                    o = (0, a.useStateFromStores)([i.default], () => i.default.getCurrentUser()),
                    u = (null == n ? void 0 : n.ownerId) === (null == o ? void 0 : o.id),
                    d = (0, s.useIsUserInCreatorMonetizationEligibleCountry)();
                return u && null !== (t = null == n ? void 0 : n.hasFeature(r.GuildFeatures.COMMUNITY)) && void 0 !== t && t && d && !((null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE)) || (null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)) || (null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_DISABLED)))
            }
        },
        755574: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("191814"),
                o = n("423487"),
                u = n("751083");

            function d(e) {
                let {
                    message: t,
                    error: n,
                    onClick: s,
                    submitting: d,
                    className: c,
                    ctaMessage: E
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(u.container, c),
                    children: [(0, a.jsxs)("div", {
                        className: u.textContainer,
                        children: [(0, a.jsx)(o.default, {
                            className: u.warningIcon
                        }), (0, a.jsx)(r.default, {
                            size: 10,
                            horizontal: !0
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(r.default, {
                                size: 1
                            }), (0, a.jsx)(i.Text, {
                                className: u.info,
                                variant: "text-sm/normal",
                                children: t
                            }), null != n && (0, a.jsx)(i.Text, {
                                className: l(u.info, u.error),
                                variant: "text-sm/normal",
                                children: n
                            })]
                        })]
                    }), (0, a.jsx)(r.default, {
                        size: 16,
                        horizontal: !0
                    }), (0, a.jsx)(i.Button, {
                        className: u.undoButton,
                        color: i.Button.Colors.LINK,
                        look: i.Button.Looks.LINK,
                        size: i.Button.Sizes.ICON,
                        onClick: s,
                        submitting: d,
                        children: E
                    })]
                })
            }
        },
        526843: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("65597"),
                i = n("428958"),
                r = n("592407"),
                o = n("5667"),
                u = n("305961"),
                d = n("697218"),
                c = n("49111"),
                E = n("782340"),
                f = n("123685"),
                _ = n("936775");

            function I(e) {
                let {
                    guildId: t,
                    markAsDismissed: n
                } = e, I = (0, l.default)([u.default, d.default], () => {
                    let e = d.default.getCurrentUser(),
                        n = u.default.getGuild(t);
                    return (null == n ? void 0 : n.isOwner(e)) === !0
                });
                return (0, i.default)({
                    type: s.ImpressionTypes.POPOUT,
                    name: s.ImpressionNames.ENABLE_CREATOR_MONETIZATION_GUILD_HEADER_UPSELL,
                    properties: {
                        guild_id: t,
                        is_owner: I
                    }
                }), (0, a.jsx)("div", {
                    className: f.container,
                    children: (0, a.jsx)(o.default, {
                        header: E.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_HEADER,
                        content: E.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_BODY,
                        asset: (0, a.jsx)("div", {
                            className: f.image,
                            children: (0, a.jsx)("img", {
                                alt: E.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_IMG_ALT,
                                src: _,
                                className: f.image
                            })
                        }),
                        buttonCTA: E.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_UPSELL_CTA,
                        onClick: () => {
                            r.default.open(t, c.GuildSettingsSections.ROLE_SUBSCRIPTIONS)
                        },
                        secondaryButtonCTA: E.default.Messages.DISMISS,
                        markAsDismissed: n
                    })
                })
            }
        },
        442619: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("592407"),
                l = n("5667"),
                i = n("58608"),
                r = n("49111"),
                o = n("782340"),
                u = n("992703");

            function d(e) {
                let {
                    guildId: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)("div", {
                    className: u.container,
                    children: (0, a.jsx)(l.default, {
                        header: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_TITLE,
                        content: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_BODY,
                        asset: (0, a.jsx)(i.default, {
                            className: u.video,
                            src: "https://cdn.discordapp.com/assets/server-subscription-tier-template/upsell.mov",
                            autoPlay: !0,
                            loop: !0
                        }),
                        buttonCTA: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_CTA,
                        onClick: () => {
                            s.default.open(t, r.GuildSettingsSections.ROLE_SUBSCRIPTIONS, void 0, r.GuildSettingsSubsections.ROLE_SUBSCRIPTION_TIER_TEMPLATE)
                        },
                        secondaryButtonCTA: o.default.Messages.DISMISS,
                        markAsDismissed: n
                    })
                })
            }
        },
        430780: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("866227"),
                i = n.n(l),
                r = n("850068"),
                o = n("812204"),
                u = n("685665"),
                d = n("837008"),
                c = n("755574"),
                E = n("782340");
            let f = e => {
                let [t, n] = s.useState(!1), [a, l] = s.useState(null), i = async t => {
                    n(!0), l(null);
                    try {
                        await (0, r.deleteRenewalMutation)(t, e)
                    } catch (e) {
                        l(e)
                    } finally {
                        n(!1)
                    }
                };
                return {
                    resetRenewalMutation: i,
                    submitting: t,
                    error: a
                }
            };

            function _(e) {
                let {
                    groupListingId: t,
                    subscription: n,
                    className: l
                } = e, {
                    analyticsLocations: r
                } = (0, u.default)(o.default.PENDING_PLAN_CHANGE_NOTICE), {
                    resetRenewalMutation: _,
                    submitting: I,
                    error: h
                } = f(r), C = (0, d.useSubscriptionListingsForGroup)(t, {
                    includeSoftDeleted: !0
                }), {
                    currentListing: T,
                    nextListing: m
                } = s.useMemo(() => {
                    if ((null == n ? void 0 : n.renewalMutations) == null) return {
                        currentListing: void 0,
                        nextListing: void 0
                    };
                    let e = n.items[0].planId,
                        t = n.renewalMutations.items[0].planId,
                        a = C.find(t => t.subscription_plans[0].id === e),
                        s = C.find(e => e.subscription_plans[0].id === t);
                    return {
                        currentListing: a,
                        nextListing: s
                    }
                }, [n, C]);
                if (null == n || null == T || null == m) return null;
                let S = i(n.currentPeriodEnd).format("MMM DD, YYYY");
                return (0, a.jsx)(c.default, {
                    message: E.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_DELETE_MUTATION_DESCRIPTION.format({
                        currentListing: T.name,
                        nextListing: m.name,
                        changeDate: S
                    }),
                    error: null == h ? void 0 : h.message,
                    onClick: () => _(n),
                    submitting: I,
                    ctaMessage: E.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_DELETE_MUTATION_CTA,
                    className: l
                })
            }
        },
        904698: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("79112"),
                l = n("191814"),
                i = n("755574"),
                r = n("49111"),
                o = n("397336"),
                u = n("782340");

            function d(e) {
                let {
                    subscription: t
                } = e;
                return null == t ? null : t.status === r.SubscriptionStatusTypes.PAST_DUE ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(l.default, {
                        size: 16
                    }), (0, a.jsx)(i.default, {
                        message: u.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                        ctaMessage: u.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_CTA,
                        onClick: () => {
                            s.default.open(r.UserSettingsSections.SUBSCRIPTIONS, o.ROLE_SUBSCRIPTION_SUBSECTION)
                        }
                    })]
                }) : null
            }
        },
        38112: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("819855"),
                i = n("841098"),
                r = n("75196");

            function o(e) {
                let {
                    width: t = 255,
                    height: n = 178,
                    color: o = s.default.unsafe_rawColors.WHITE_500.css,
                    ...u
                } = e, d = (0, i.default)(), c = (0, l.isThemeLight)(d);
                return (0, a.jsx)("svg", {
                    ...(0, r.default)(u),
                    width: t,
                    height: n,
                    viewBox: "0 0 ".concat(t, " ").concat(n),
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...u,
                    children: (0, a.jsxs)("g", {
                        id: "Frame 3483",
                        children: [(0, a.jsx)("path", {
                            id: "Vector",
                            d: "M215.747 15.0149C213.174 14.0709 210.986 12.8216 209.33 11.3516C207.673 9.88152 206.588 8.22496 206.147 6.49398L204.563 0.545222C204.526 0.397049 204.4 0.26087 204.207 0.159969C204.119 0.109264 204.014 0.0690328 203.899 0.0415817C203.783 0.0141306 203.659 0 203.534 0C203.409 0 203.285 0.0141306 203.17 0.0415817C203.054 0.0690328 202.949 0.109264 202.861 0.159969C202.674 0.262 202.555 0.398273 202.525 0.545222L200.921 6.49398C200.464 8.22048 199.379 9.87273 197.735 11.3436C196.082 12.8166 193.894 14.0686 191.321 15.0149L189.936 15.5134C189.794 15.5698 189.684 15.6486 189.619 15.7401C189.538 15.8271 189.497 15.9246 189.5 16.0233C189.499 16.1182 189.54 16.2118 189.619 16.2953C189.684 16.3868 189.794 16.4655 189.936 16.5219L191.321 17.0205C193.89 17.9697 196.076 19.2212 197.735 20.6917C199.379 22.1626 200.464 23.8149 200.921 25.5413L202.525 31.4901C202.559 31.6299 202.678 31.7582 202.861 31.8527C203.05 31.9441 203.287 31.996 203.534 32C203.783 32 204.022 31.9475 204.207 31.8527C204.404 31.7628 204.531 31.6328 204.563 31.4901L206.147 25.5413C206.588 23.8104 207.673 22.1538 209.33 20.6838C210.986 19.2137 213.174 17.9644 215.747 17.0205L217.133 16.5219C217.275 16.463 217.391 16.3853 217.469 16.2953C217.509 16.206 217.509 16.1126 217.469 16.0233C217.51 15.9304 217.51 15.833 217.469 15.7401C217.391 15.6501 217.275 15.5723 217.133 15.5134L215.747 15.0149Z",
                            fill: o
                        }), (0, a.jsx)("path", {
                            id: "Vector_2",
                            d: "M255.5 62.4052C220.712 49.4637 180.269 51.9055 159.371 82.4277C138.474 112.95 117.207 114.049 93.3595 104.282C69.5117 94.5145 -12.9722 108.066 2.39367 179H243.207C249.968 179 255.5 173.506 255.5 166.791V62.4052Z",
                            fill: o,
                            "fill-opacity": c ? .25 : .1
                        }), (0, a.jsx)("path", {
                            id: "Vector_3",
                            d: "M48.6862 105.854C47.4917 105.234 46.4756 104.414 45.7066 103.449C44.9376 102.485 44.4337 101.398 44.229 100.262L43.4938 96.3578C43.4765 96.2606 43.418 96.1712 43.3283 96.105C43.2874 96.0717 43.2387 96.0453 43.185 96.0273C43.1314 96.0093 43.0739 96 43.0159 96C42.9578 96 42.9003 96.0093 42.8467 96.0273C42.7931 96.0453 42.7444 96.0717 42.7034 96.105C42.6165 96.1719 42.5612 96.2614 42.5472 96.3578L41.8028 100.262C41.5905 101.395 41.0865 102.479 40.3232 103.444C39.5557 104.411 38.5402 105.233 37.3456 105.854L36.7023 106.181C36.6365 106.218 36.5854 106.269 36.5552 106.329C36.5175 106.387 36.4985 106.451 36.5001 106.515C36.4997 106.578 36.5187 106.639 36.5552 106.694C36.5854 106.754 36.6365 106.805 36.7023 106.842L37.3456 107.17C38.5382 107.793 39.5533 108.614 40.3232 109.579C41.0865 110.544 41.5905 111.628 41.8028 112.762L42.5472 116.665C42.5631 116.757 42.6184 116.841 42.7034 116.903C42.791 116.963 42.9012 116.997 43.0159 117C43.1312 117 43.2424 116.966 43.3283 116.903C43.4195 116.844 43.4788 116.759 43.4938 116.665L44.229 112.762C44.4337 111.626 44.9376 110.538 45.7066 109.574C46.4756 108.609 47.4917 107.789 48.6862 107.17L49.3295 106.842C49.3956 106.804 49.4492 106.753 49.4857 106.694C49.504 106.635 49.504 106.574 49.4857 106.515C49.5048 106.454 49.5048 106.39 49.4857 106.329C49.4492 106.27 49.3956 106.219 49.3295 106.181L48.6862 105.854Z",
                            fill: o
                        }), (0, a.jsxs)("g", {
                            id: "Group 196",
                            children: [(0, a.jsx)("path", {
                                id: "Vector_4",
                                d: "M150.967 133.46C150.967 132.654 150.315 132 149.51 132C148.706 132 148.054 132.654 148.054 133.46V134.92C148.054 135.726 148.706 136.38 149.51 136.38C150.315 136.38 150.967 135.726 150.967 134.92V133.46Z",
                                fill: o
                            }), (0, a.jsx)("path", {
                                id: "Vector_5",
                                d: "M150.967 145.124C150.967 144.318 150.315 143.664 149.51 143.664C148.706 143.664 148.054 144.318 148.054 145.124V146.584C148.054 147.39 148.706 148.044 149.51 148.044C150.315 148.044 150.967 147.39 150.967 146.584V145.124Z",
                                fill: o
                            }), (0, a.jsx)("path", {
                                id: "Vector_6",
                                d: "M156.05 141.489C156.855 141.489 157.507 140.836 157.507 140.029C157.507 139.223 156.855 138.569 156.05 138.569H154.594C153.789 138.569 153.137 139.223 153.137 140.029C153.137 140.836 153.789 141.489 154.594 141.489H156.05Z",
                                fill: o
                            }), (0, a.jsx)("path", {
                                id: "Vector_7",
                                d: "M144.413 141.489C145.217 141.489 145.869 140.836 145.869 140.029C145.869 139.223 145.217 138.569 144.413 138.569H142.956C142.152 138.569 141.5 139.223 141.5 140.029C141.5 140.836 142.152 141.489 142.956 141.489H144.413Z",
                                fill: o
                            })]
                        })]
                    })
                })
            }
        },
        602818: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("819855"),
                i = n("841098"),
                r = n("75196");

            function o(e) {
                let {
                    width: t = 160,
                    height: n = 210,
                    color: o = s.default.unsafe_rawColors.WHITE_500.css,
                    ...u
                } = e, d = (0, i.default)(), c = (0, l.isThemeLight)(d);
                return (0, a.jsx)("svg", {
                    ...(0, r.default)(u),
                    width: t,
                    height: n,
                    viewBox: "0 0 ".concat(t, " ").concat(n),
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...u,
                    children: (0, a.jsxs)("g", {
                        id: "Group 1000",
                        children: [(0, a.jsx)("path", {
                            id: "Vector",
                            d: "M-1.08633 0C-15.5168 0 -1.0868 11.6983 -1.0868 25.9962V156.497C30.3979 181.713 68.4419 181.453 93.3673 167.675C128.263 148.438 135.609 99.8254 100.714 67.8501C79.9863 48.3529 69.7537 18.1973 86.2832 0H-1.08633Z",
                            fill: o,
                            "fill-opacity": c ? .25 : .1
                        }), (0, a.jsx)("path", {
                            id: "Vector_2",
                            d: "M56.4358 99.9151C54.8737 99.3546 53.545 98.6129 52.5394 97.74C51.5338 96.8672 50.8749 95.8836 50.6071 94.8558L49.6457 91.3237C49.6231 91.2357 49.5466 91.1549 49.4294 91.095C49.3758 91.0649 49.3121 91.041 49.242 91.0247C49.1718 91.0084 49.0967 91 49.0208 91C48.9448 91 48.8696 91.0084 48.7995 91.0247C48.7294 91.041 48.6657 91.0649 48.6122 91.095C48.4985 91.1556 48.4262 91.2365 48.4079 91.3237L47.4344 94.8558C47.1569 95.8809 46.4977 96.8619 45.4995 97.7353C44.4959 98.6098 43.1679 99.3532 41.6058 99.9151L40.7645 100.211C40.6785 100.245 40.6117 100.291 40.5722 100.346C40.5229 100.397 40.4981 100.455 40.5001 100.514C40.4996 100.57 40.5244 100.626 40.5722 100.675C40.6117 100.73 40.6785 100.776 40.7645 100.81L41.6058 101.106C43.1654 101.67 44.4927 102.413 45.4995 103.286C46.4977 104.159 47.1569 105.14 47.4344 106.165L48.4079 109.697C48.4287 109.78 48.501 109.856 48.6122 109.913C48.7267 109.967 48.8708 109.998 49.0208 110C49.1715 110 49.317 109.969 49.4294 109.913C49.5486 109.859 49.6261 109.782 49.6457 109.697L50.6071 106.165C50.8749 105.137 51.5338 104.154 52.5394 103.281C53.545 102.408 54.8737 101.666 56.4358 101.106L57.277 100.81C57.3635 100.775 57.4336 100.729 57.4813 100.675C57.5052 100.622 57.5052 100.567 57.4813 100.514C57.5062 100.459 57.5062 100.401 57.4813 100.346C57.4336 100.292 57.3635 100.246 57.277 100.211L56.4358 99.9151Z",
                            fill: o
                        }), (0, a.jsx)("path", {
                            id: "Vector_3",
                            d: "M118.686 198.854C117.492 198.234 116.476 197.414 115.707 196.449C114.938 195.485 114.434 194.398 114.229 193.262L113.494 189.358C113.476 189.261 113.418 189.171 113.328 189.105C113.287 189.072 113.239 189.045 113.185 189.027C113.131 189.009 113.074 189 113.016 189C112.958 189 112.9 189.009 112.847 189.027C112.793 189.045 112.744 189.072 112.703 189.105C112.616 189.172 112.561 189.261 112.547 189.358L111.803 193.262C111.591 194.395 111.086 195.479 110.323 196.444C109.556 197.411 108.54 198.233 107.346 198.854L106.702 199.181C106.636 199.218 106.585 199.269 106.555 199.329C106.518 199.387 106.499 199.451 106.5 199.515C106.5 199.578 106.519 199.639 106.555 199.694C106.585 199.754 106.636 199.805 106.702 199.842L107.346 200.17C108.538 200.793 109.553 201.614 110.323 202.579C111.086 203.544 111.591 204.628 111.803 205.762L112.547 209.665C112.563 209.757 112.618 209.841 112.703 209.903C112.791 209.963 112.901 209.997 113.016 210C113.131 210 113.242 209.966 113.328 209.903C113.42 209.844 113.479 209.759 113.494 209.665L114.229 205.762C114.434 204.626 114.938 203.538 115.707 202.574C116.476 201.609 117.492 200.789 118.686 200.17L119.329 199.842C119.396 199.804 119.449 199.753 119.486 199.694C119.504 199.635 119.504 199.574 119.486 199.515C119.505 199.454 119.505 199.39 119.486 199.329C119.449 199.27 119.396 199.219 119.329 199.181L118.686 198.854Z",
                            fill: o
                        }), (0, a.jsxs)("g", {
                            id: "Group 197",
                            children: [(0, a.jsx)("path", {
                                id: "Vector_4",
                                d: "M152.967 54.4599C152.967 53.6536 152.315 53 151.51 53C150.706 53 150.054 53.6536 150.054 54.4599V55.9198C150.054 56.7261 150.706 57.3797 151.51 57.3797C152.315 57.3797 152.967 56.7261 152.967 55.9198V54.4599Z",
                                fill: o
                            }), (0, a.jsx)("path", {
                                id: "Vector_5",
                                d: "M152.967 66.124C152.967 65.3177 152.315 64.6641 151.51 64.6641C150.706 64.6641 150.054 65.3177 150.054 66.124V67.5839C150.054 68.3901 150.706 69.0438 151.51 69.0438C152.315 69.0438 152.967 68.3901 152.967 67.5839V66.124Z",
                                fill: o
                            }), (0, a.jsx)("path", {
                                id: "Vector_6",
                                d: "M158.05 62.4891C158.855 62.4891 159.507 61.8355 159.507 61.0292C159.507 60.2229 158.855 59.5693 158.05 59.5693H156.594C155.789 59.5693 155.137 60.2229 155.137 61.0292C155.137 61.8355 155.789 62.4891 156.594 62.4891H158.05Z",
                                fill: o
                            }), (0, a.jsx)("path", {
                                id: "Vector_7",
                                d: "M146.413 62.4892C147.217 62.4892 147.869 61.8355 147.869 61.0292C147.869 60.223 147.217 59.5693 146.413 59.5693H144.956C144.152 59.5693 143.5 60.223 143.5 61.0292C143.5 61.8355 144.152 62.4892 144.956 62.4892H146.413Z",
                                fill: o
                            })]
                        })]
                    })
                })
            }
        },
        740316: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BackToPreviousScreenNotice: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("246053"),
                i = n("489622"),
                r = n("49111"),
                o = n("395200");

            function u(e) {
                let {
                    buttonText: t,
                    onGoBack: n,
                    onDismiss: u,
                    showCloseButton: d
                } = e;
                return (0, a.jsxs)(i.default, {
                    className: o.backNotice,
                    children: [d && (0, a.jsx)(i.NoticeCloseButton, {
                        onClick: u,
                        noticeType: r.NoticeTypes.BACK_TO_PREVIOUS_SCREEN
                    }), (0, a.jsxs)(s.Button, {
                        className: o.backButton,
                        innerClassName: o.backButtonInner,
                        look: s.Button.Looks.OUTLINED,
                        color: s.Button.Colors.WHITE,
                        size: s.Button.Sizes.NONE,
                        onClick: n,
                        children: [(0, a.jsx)(l.default, {
                            width: 16,
                            height: 16,
                            direction: l.default.Directions.LEFT,
                            className: o.backArrow
                        }), t]
                    })]
                })
            }
        },
        967251: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("837008"),
                i = n("167109"),
                r = n("176687"),
                o = n("847426"),
                u = n("430780"),
                d = n("904698"),
                c = n("900076"),
                E = n("108314"),
                f = n("337239"),
                _ = n("49111"),
                I = n("782340"),
                h = n("773461"),
                C = e => {
                    var t, n, C;
                    let {
                        guild: T
                    } = e, m = (0, l.useGroupListingsForGuild)(T.id)[0];
                    (0, o.default)({
                        guildId: T.id,
                        groupListingId: null == m ? void 0 : m.id,
                        location: _.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB,
                        relevantSubscriptionListingIds: null == m ? void 0 : m.subscription_listings_ids
                    });
                    let {
                        activeSubscription: S
                    } = (0, r.default)(null == m ? void 0 : m.id), N = (0, l.useSubscriptionsSettings)(T.id), A = null == N ? void 0 : N.description, {
                        editStateIds: p
                    } = i.useEditStateIds(null !== (t = null == m ? void 0 : m.id) && void 0 !== t ? t : null, T.id);
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)(f.default, {
                            title: I.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_PAGE_GROUP_CTA.format({
                                serverName: T.toString()
                            }),
                            description: null != A ? A : null,
                            coverImageAsset: null !== (n = null == N ? void 0 : N.cover_image_asset) && void 0 !== n ? n : null,
                            guild: T,
                            children: [null != m ? (0, a.jsx)(u.default, {
                                className: h.pendingPlanChangeNotice,
                                groupListingId: m.id,
                                subscription: S
                            }) : null, (0, a.jsx)(d.default, {
                                subscription: S
                            })]
                        }), (0, a.jsx)(s.HeadingLevel, {
                            children: (0, a.jsx)(c.default, {
                                guildId: T.id,
                                children: p.map(e => (0, a.jsx)(E.default, {
                                    guildId: T.id,
                                    groupListingId: null !== (C = null == m ? void 0 : m.id) && void 0 !== C ? C : "",
                                    listingId: e,
                                    analyticsLocation: _.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB
                                }, e))
                            })
                        })]
                    })
                }
        },
        663831: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildRoleSubscriptionsOverviewErrorType: function() {
                    return s
                },
                GuildRoleSubscriptionsOverviewErrorPage: function() {
                    return E
                }
            });
            var a, s, l = n("37983");
            n("884691");
            var i = n("759843"),
                r = n("77078"),
                o = n("428958"),
                u = n("782340"),
                d = n("33716"),
                c = n("12469");
            (a = s || (s = {})).GUILD_NOT_ELIGIBLE = "guild_not_eligible", a.NOT_GUILD_MEMBER = "not_guild_member";
            let E = e => {
                let {
                    errorType: t
                } = e;
                return (0, o.default)({
                    type: i.ImpressionTypes.PAGE,
                    name: i.ImpressionNames.ROLE_SUBSCRIPTION_LISTING_UPSELL_ERROR_PAGE,
                    properties: {
                        error_page_type: t
                    }
                }), (0, l.jsx)("div", {
                    className: d.errorPageContainer,
                    children: (0, l.jsxs)("div", {
                        className: d.errorPageContent,
                        children: [(0, l.jsx)("img", {
                            src: c,
                            alt: "",
                            className: d.errorPageIllo
                        }), (0, l.jsx)(r.Heading, {
                            variant: "heading-xl/extrabold",
                            className: d.errorPageTitle,
                            children: t === s.GUILD_NOT_ELIGIBLE ? u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_TITLE : u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_TITLE
                        }), (0, l.jsx)(r.Text, {
                            variant: "text-md/normal",
                            className: d.errorPagSubtitle,
                            children: t === s.GUILD_NOT_ELIGIBLE ? u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_SUBTITLE : u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_SUBTITLE
                        })]
                    })
                })
            }
        },
        993057: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("394846"),
                i = n("446674"),
                r = n("77078"),
                o = n("850068"),
                u = n("516899"),
                d = n("69927"),
                c = n("657199"),
                E = n("250666"),
                f = n("465869"),
                _ = n("619443"),
                I = n("539938"),
                h = n("305961"),
                C = n("160299"),
                T = n("257869"),
                m = n("638779"),
                S = n("459736"),
                N = n("967251"),
                A = n("663831"),
                p = n("170185"),
                g = n("277860"),
                R = n("724210"),
                O = n("782340"),
                L = n("981239");

            function M(e) {
                let {
                    guildId: t
                } = e, n = (0, i.useStateFromStores)([h.default], () => h.default.getGuild(t), [t]), M = (0, i.useStateFromStores)([_.default], () => _.default.isConnected()), v = (0, E.default)(t), D = (0, m.default)(t), x = (0, i.useStateFromStores)([C.default], () => C.default.isSubscriptionFetching), P = (0, T.useGroupListingsFetchContext)(), {
                    shouldHideGuildPurchaseEntryPoints: y,
                    restrictionsLoading: b
                } = (0, f.useShouldHideGuildPurchaseEntryPoints)(t);
                (0, d.usePageTitle)({
                    subsection: O.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                    location: null == n ? void 0 : n.name
                }), (0, u.default)(l.isMobile ? "role-subscriptions-overview" : void 0);
                let U = M && (null == n || !(v || D) || y && !b);
                if (s.useEffect(() => {
                        o.fetchSubscriptions()
                    }, []), s.useEffect(() => {
                        U && !l.isMobile && (0, c.handleInaccessiblePage)(t, R.StaticChannelRoute.ROLE_SUBSCRIPTIONS)
                    }, [t, U]), l.isMobile && U) {
                    let e = null == n ? A.GuildRoleSubscriptionsOverviewErrorType.NOT_GUILD_MEMBER : A.GuildRoleSubscriptionsOverviewErrorType.GUILD_NOT_ELIGIBLE;
                    return (0, a.jsx)(A.GuildRoleSubscriptionsOverviewErrorPage, {
                        errorType: e
                    })
                }
                return (0, a.jsxs)("div", {
                    className: L.container,
                    children: [(0, a.jsxs)(I.default, {
                        toolbar: (0, a.jsx)(s.Fragment, {}),
                        className: L.headerBar,
                        children: [(0, a.jsx)(I.default.Icon, {
                            icon: S.default,
                            "aria-hidden": !0
                        }), (0, a.jsx)(I.default.Title, {
                            children: O.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                        })]
                    }), (0, a.jsx)("div", {
                        id: g.OVERVIEW_NOTICE_ROOT
                    }), (0, a.jsx)("div", {
                        className: L.content,
                        children: v ? (0, a.jsx)(r.ScrollerNone, {
                            className: L.scroller,
                            children: (0, a.jsx)("div", {
                                className: L.scrollerContent,
                                children: null == n || !P || x || b ? (0, a.jsx)(r.Spinner, {}) : (0, a.jsx)(N.default, {
                                    guild: n
                                })
                            })
                        }) : (0, a.jsx)(p.default, {})
                    })]
                })
            }

            function v(e) {
                let {
                    guildId: t
                } = e;
                return (0, a.jsx)(T.GroupListingsFetchContextProvider, {
                    guildId: t,
                    refetchOnMount: !0,
                    children: (0, a.jsx)(M, {
                        guildId: t
                    })
                })
            }
        },
        170185: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("191814"),
                i = n("782340"),
                r = n("160317"),
                o = n("936775");

            function u() {
                return (0, a.jsx)("div", {
                    className: r.container,
                    children: (0, a.jsxs)("div", {
                        className: r.content,
                        children: [(0, a.jsx)("img", {
                            src: o,
                            alt: i.default.Messages.CREATOR_MONETIZATION_NOTICE_ILLO_A11Y_LABEL
                        }), (0, a.jsx)(l.default, {
                            size: 12
                        }), (0, a.jsx)(s.Heading, {
                            className: r.header,
                            variant: "heading-lg/semibold",
                            children: i.default.Messages.CREATOR_MONETIZATION_DISABLED_NOTICE_TITLE
                        }), (0, a.jsx)(l.default, {
                            size: 8
                        }), (0, a.jsx)(s.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: i.default.Messages.CREATOR_MONETIZATION_DISABLED_NOTICE_DESCRIPTION
                        })]
                    })
                })
            }
        },
        277860: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                OVERVIEW_NOTICE_ROOT: function() {
                    return a
                }
            });
            let a = "guild-role-subscription-overview-notice"
        },
        337239: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("845579"),
                i = n("109024"),
                r = n("866190"),
                o = n("132349"),
                u = n("492969");

            function d(e) {
                let {
                    coverImageAsset: t,
                    title: n,
                    guild: d,
                    description: c,
                    children: E
                } = e, f = l.GifAutoPlay.useSetting(), _ = (0, r.useIsWindowFocused)(), I = _ && f, [h, C] = (0, o.default)(t, I);
                return (0, a.jsxs)("div", {
                    className: u.container,
                    children: [(0, a.jsx)("div", {
                        ref: h,
                        className: u.coverImageContainer,
                        children: null != C && (0, a.jsx)("img", {
                            src: C,
                            alt: "",
                            className: u.coverImage
                        })
                    }), (0, a.jsx)("div", {
                        className: u.guildIconContainer,
                        children: (0, a.jsx)(i.default, {
                            guild: d,
                            size: i.default.Sizes.XLARGE
                        })
                    }), (0, a.jsx)(s.Heading, {
                        variant: "heading-xl/semibold",
                        className: u.ctaTitle,
                        children: n
                    }), (0, a.jsx)(s.Text, {
                        className: u.ctaSubtitle,
                        variant: "text-md/normal",
                        color: "header-secondary",
                        children: c
                    }), E]
                })
            }
        },
        395869: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                hideLiveChannelNotice: function() {
                    return s
                },
                hideUpcomingEventNotice: function() {
                    return l
                },
                markUpcomingEventNoticeAsSeen: function() {
                    return i
                }
            });
            var a = n("913144");

            function s(e) {
                let {
                    eventId: t,
                    stageId: n
                } = e;
                (null != t || null != n) && a.default.dispatch({
                    type: "LIVE_CHANNEL_NOTICE_HIDE",
                    eventId: t,
                    stageId: n
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "UPCOMING_GUILD_EVENT_NOTICE_HIDE",
                    eventId: e
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "UPCOMING_GUILD_EVENT_NOTICE_SEEN",
                    guildEventId: e
                })
            }
        },
        824650: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("745049");
            let i = {
                hiddenEventsAndStages: []
            };
            class r extends a.default.PersistedStore {
                initialize(e) {
                    null != e && null != e.hiddenEventsAndStages && (i = e)
                }
                isLiveChannelNoticeHidden(e) {
                    let {
                        eventId: t,
                        stageId: n
                    } = e;
                    return !!(null != n && i.hiddenEventsAndStages.includes("stage-".concat(n))) || null != t && i.hiddenEventsAndStages.includes("event-".concat(t))
                }
                getState() {
                    return i
                }
            }
            r.displayName = "LiveChannelNoticesStore", r.persistKey = "liveChannelNotices_v2";
            var o = new r(s.default, {
                LIVE_CHANNEL_NOTICE_HIDE: function(e) {
                    let {
                        eventId: t,
                        stageId: n
                    } = e;
                    null != t ? i.hiddenEventsAndStages.push("event-".concat(t)) : null != n && i.hiddenEventsAndStages.push("stage-".concat(n))
                },
                GUILD_SCHEDULED_EVENT_UPDATE: function(e) {
                    let {
                        guildScheduledEvent: t
                    } = e, n = "event-".concat(t.id);
                    i.hiddenEventsAndStages.includes(n) && (t.status === l.GuildScheduledEventStatus.CANCELED || t.status === l.GuildScheduledEventStatus.COMPLETED) && (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(e => e !== n))
                },
                GUILD_SCHEDULED_EVENT_DELETE: function(e) {
                    let {
                        guildScheduledEvent: t
                    } = e, n = "event-".concat(t.id);
                    i.hiddenEventsAndStages.includes(n) && (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(e => e !== n))
                },
                STAGE_INSTANCE_DELETE: function(e) {
                    let {
                        instance: t
                    } = e, n = "stage-".concat(t.id);
                    i.hiddenEventsAndStages.includes(n) && (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(e => e !== n))
                }
            })
        },
        73675: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "guild",
                id: "2023-09_upcoming_guild_events_notice",
                label: "Shows additional notices in the channel list for upcoming events",
                defaultConfig: {
                    canSeeUpcomingEventsNotices: !1
                },
                treatments: [{
                    id: 1,
                    label: "Guild members can see upcoming events notices",
                    config: {
                        canSeeUpcomingEventsNotices: !0
                    }
                }]
            });
            var l = s
        },
        628059: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                guildEventDetailsParser: function() {
                    return s
                }
            });
            var a = n("367376");
            let s = a.default.parseGuildEventDescription
        },
        593897: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActiveEventOrStageInstanceChannel: function() {
                    return i
                }
            });
            var a = n("170183"),
                s = n("42203"),
                l = n("534222");

            function i(e) {
                var t;
                let n = (0, l.useFirstActiveEventChannel)(e),
                    i = (0, a.default)(e),
                    r = s.default.getChannel(null === (t = i[0]) || void 0 === t ? void 0 : t.id);
                return null != n ? n : r
            }
        },
        568500: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useGuildHasLiveChannelNotice: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("834052"),
                l = n("170183"),
                i = n("42203"),
                r = n("824650"),
                o = n("534222");

            function u(e) {
                var t;
                let n = (0, l.default)(e),
                    u = i.default.getChannel(null === (t = n[0]) || void 0 === t ? void 0 : t.id),
                    d = (0, a.useStateFromStores)([s.default], () => s.default.getStageInstanceByChannel(null == u ? void 0 : u.id), [u]),
                    c = (0, o.useGuildActiveEvent)(e),
                    {
                        isStageNoticeHidden: E,
                        isEventNoticeHidden: f
                    } = (0, a.useStateFromStoresObject)([r.default], () => ({
                        isStageNoticeHidden: r.default.isLiveChannelNoticeHidden({
                            stageId: null == d ? void 0 : d.id
                        }),
                        isEventNoticeHidden: r.default.isLiveChannelNoticeHidden({
                            eventId: null == c ? void 0 : c.id
                        })
                    }), [d, c]);
                if (null != c) return null != d ? !E : !f;
                return null != d && !E
            }
        },
        153014: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildNoticeBody: function() {
                    return z
                },
                VoiceChannelType: function() {
                    return s
                },
                LiveVoiceOrStageChannelNotice: function() {
                    return et
                },
                default: function() {
                    return en
                }
            });
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("446674"),
                o = n("77078"),
                u = n("419830"),
                d = n("478761"),
                c = n("810467"),
                E = n("393414"),
                f = n("716214"),
                _ = n("488464"),
                I = n("998716"),
                h = n("230324"),
                C = n("834052"),
                T = n("160870"),
                m = n("957255"),
                S = n("316133"),
                N = n("660279"),
                A = n("943232"),
                p = n("36694"),
                g = n("945330"),
                R = n("272339"),
                O = n("718550"),
                L = n("228427"),
                M = n("811305"),
                v = n("599110"),
                D = n("449008"),
                x = n("374021"),
                P = n("398604"),
                y = n("322224"),
                b = n("395869"),
                U = n("824650"),
                G = n("431934"),
                j = n("73675"),
                F = n("1339"),
                k = n("593897"),
                B = n("534222"),
                w = n("841363"),
                H = n("822516"),
                V = n("745049"),
                Y = n("49111"),
                W = n("782340"),
                K = n("640701");
            let z = i.memo(function(e) {
                let {
                    heading: t,
                    location: n,
                    locationIcon: a,
                    details: s,
                    detailsIcon: i,
                    topic: r,
                    onClickCloseIcon: u,
                    onClickTopicText: d,
                    children: c
                } = e, E = (0, l.jsx)(o.Text, {
                    color: "header-primary",
                    variant: "text-md/semibold",
                    className: K.eventName,
                    children: r
                });
                return (0, l.jsxs)("div", {
                    className: K.channelNotice,
                    children: [(0, l.jsxs)("div", {
                        className: K.textBlock,
                        children: [(0, l.jsx)("div", {
                            className: K.liveIndicator
                        }), (0, l.jsx)(o.Text, {
                            color: "text-positive",
                            variant: "text-xs/bold",
                            className: K.liveNowText,
                            children: t
                        }), null != u && (0, l.jsx)(o.Clickable, {
                            onClick: u,
                            className: K.closeIcon,
                            "aria-label": W.default.Messages.CLOSE,
                            children: (0, l.jsx)(g.default, {
                                height: 16,
                                width: 16
                            })
                        })]
                    }), null == d ? E : (0, l.jsx)(o.Button, {
                        size: o.Button.Sizes.MIN,
                        look: o.Button.Looks.LINK,
                        color: o.Button.Colors.PRIMARY,
                        onClick: d,
                        children: E
                    }), (0, l.jsxs)("div", {
                        className: K.textBlock,
                        children: [a, (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: K.channelName,
                            children: n
                        }), null != s && null != i && (0, l.jsxs)(l.Fragment, {
                            children: [(0, l.jsx)(o.Text, {
                                className: K.dotDivider,
                                color: "header-secondary",
                                variant: "text-xs/normal",
                                children: "•"
                            }), i, (0, l.jsx)(o.Text, {
                                color: "header-secondary",
                                variant: "text-xs/normal",
                                children: s
                            })]
                        })]
                    }), c]
                })
            });

            function q(e) {
                let {
                    guildEvent: t,
                    channel: n
                } = e, a = (0, r.useStateFromStoresArray)([S.default], () => S.default.getVoiceStatesForChannel(n).map(e => {
                    let {
                        user: t
                    } = e;
                    return t
                }), [n]), i = (0, u.getChannelIconComponent)(n);
                return (0, l.jsx)(z, {
                    onClickCloseIcon: () => (0, b.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id
                    }),
                    heading: W.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                    topic: t.name,
                    location: n.name,
                    locationIcon: null != i ? (0, l.jsx)(i, {
                        width: 16,
                        height: 16,
                        className: K.stageIcon
                    }) : null,
                    children: (0, l.jsx)(et, {
                        channel: n,
                        speakers: a,
                        voiceType: s.VOICE
                    })
                })
            }

            function Q(e) {
                let {
                    guildEvent: t,
                    noticeType: n
                } = e, a = (0, r.useStateFromStores)([P.default], () => P.default.hasRsvp(t.id, t.guild_id), [t.guild_id, t.id]), s = (0, r.useStateFromStores)([G.default], () => G.default.getUpcomingNoticeSeenTime(t.id), [t.id]);
                return !a && null == s && (0, b.markUpcomingEventNoticeAsSeen)(t.id), (0, l.jsxs)(o.Button, {
                    fullWidth: !0,
                    className: K.joinButton,
                    innerClassName: K.rsvpButton,
                    onClick: function() {
                        a ? y.default.deleteRsvpForGuildEvent(t.id, t.guild_id) : y.default.createRsvpForGuildEvent(t.id, t.guild_id), v.default.track(Y.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                            guild_id: t.guild_id,
                            notice_type: n
                        }), setTimeout(() => (0, b.hideUpcomingEventNotice)(t.id), 1e3)
                    },
                    look: a ? o.Button.Looks.OUTLINED : o.Button.Looks.FILLED,
                    color: a ? o.Button.Colors.TRANSPARENT : o.Button.Colors.GREEN,
                    size: o.Button.Sizes.SMALL,
                    children: [a ? (0, l.jsx)(p.default, {
                        width: 16,
                        height: 16,
                        className: K.buttonIcon
                    }) : (0, l.jsx)(N.default, {
                        width: 16,
                        height: 16,
                        className: K.buttonIcon
                    }), W.default.Messages.INDICATE_RSVP]
                })
            }

            function X(e) {
                var t;
                let {
                    guildEvent: n,
                    noticeType: a
                } = e, s = (0, w.getLocationFromEvent)(n), r = null != s ? (0, F.guildEventDetailsParser)(s, !0) : null, d = (0, w.getChannelFromEvent)(n), c = (0, u.getChannelIconComponent)(d), {
                    startDateTimeString: E,
                    upcomingEvent: f,
                    diffMinutes: _
                } = (0, H.getEventTimeData)(n.scheduled_start_time, n.scheduled_end_time), I = f ? _ > 0 ? W.default.Messages.STARTING_IN_MINUTES.format({
                    minutes: _
                }) : W.default.Messages.STARTING_SOON : W.default.Messages.STARTING_ON_DATE.format({
                    date: E
                });
                return i.useEffect(() => {
                    v.default.track(Y.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
                        notice_type: a,
                        guild_id: n.guild_id
                    })
                }, [n, a]), (0, l.jsxs)("div", {
                    className: K.channelNotice,
                    children: [(0, l.jsxs)("div", {
                        className: K.textBlock,
                        children: [(0, l.jsx)(o.Clickable, {
                            onClick: () => (0, x.openGuildEventDetails)({
                                eventId: n.id
                            }),
                            className: K.eventNameClickable,
                            children: (0, l.jsx)(o.Text, {
                                color: "header-primary",
                                variant: "text-md/semibold",
                                className: K.eventName,
                                children: n.name
                            })
                        }), (0, l.jsx)(o.Clickable, {
                            onClick: () => {
                                v.default.track(Y.AnalyticEvents.CHANNEL_NOTICE_CLOSED, {
                                    notice_type: a,
                                    guild_id: n.guild_id
                                }), (0, b.hideUpcomingEventNotice)(n.id)
                            },
                            className: K.closeIcon,
                            "aria-label": W.default.Messages.CLOSE,
                            children: (0, l.jsx)(g.default, {
                                height: 16,
                                width: 16
                            })
                        })]
                    }), (0, l.jsxs)("div", {
                        className: K.textBlock,
                        children: [(0, l.jsx)(A.default, {
                            className: K.stageIcon,
                            width: 16,
                            height: 16
                        }), (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: K.startTime,
                            children: I
                        })]
                    }), (0, l.jsxs)("div", {
                        className: K.textBlock,
                        children: [null != c ? (0, l.jsx)(c, {
                            width: 16,
                            height: 16,
                            className: K.stageIcon
                        }) : (0, l.jsx)(O.default, {
                            width: 16,
                            height: 16,
                            className: K.stageIcon
                        }), (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: K.channelName,
                            children: null !== (t = null == d ? void 0 : d.name) && void 0 !== t ? t : r
                        })]
                    }), (0, l.jsx)(Q, {
                        guildEvent: n,
                        noticeType: a
                    })]
                })
            }

            function J(e) {
                let {
                    guildEvent: t
                } = e, n = (0, w.getLocationFromEvent)(t);
                return null == n ? null : (0, l.jsx)(z, {
                    onClickCloseIcon: () => (0, b.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id
                    }),
                    heading: W.default.Messages.HAPPENING_NOW,
                    topic: t.name,
                    location: (0, F.guildEventDetailsParser)(n, !0),
                    locationIcon: (0, l.jsx)(O.default, {
                        width: 16,
                        height: 16,
                        className: K.stageIcon
                    }),
                    children: (0, l.jsx)(Z, {
                        guildEvent: t
                    })
                })
            }

            function Z(e) {
                let {
                    guildEvent: t
                } = e, n = i.useCallback(() => {
                    (0, x.openGuildEventDetails)({
                        eventId: t.id
                    })
                }, [t]);
                return (0, l.jsx)(o.Button, {
                    fullWidth: !0,
                    className: K.joinButton,
                    onClick: n,
                    color: o.Button.Colors.GREEN,
                    size: o.Button.Sizes.SMALL,
                    children: W.default.Messages.SEE_DETAIL
                })
            }

            function $(e) {
                let {
                    channel: t,
                    label: n
                } = e;
                return (0, l.jsx)(o.Button, {
                    fullWidth: !0,
                    className: K.joinButton,
                    onClick: () => {
                        null != t && null != t.getGuildId() && ((0, f.connectAndOpen)(t), (0, E.transitionToGuild)(t.getGuildId(), t.id))
                    },
                    color: o.Button.Colors.GREEN,
                    size: o.Button.Sizes.SMALL,
                    children: n
                })
            }

            function ee(e) {
                let {
                    stageInstance: t,
                    channel: n
                } = e, {
                    speakers: a,
                    listenerCount: i
                } = (0, r.useStateFromStoresObject)([_.default], () => {
                    let e = _.default.getMutableParticipants(n.id, I.StageChannelParticipantNamedIndex.SPEAKER),
                        t = _.default.getParticipantCount(n.id, I.StageChannelParticipantNamedIndex.AUDIENCE);
                    return {
                        speakers: [...new Set(e.map(e => e.user))],
                        listenerCount: t
                    }
                }, [n.id]), o = W.default.Messages.LISTENING_COUNT.format({
                    count: "".concat(i)
                });
                return (0, l.jsx)(z, {
                    onClickCloseIcon: () => (0, b.hideLiveChannelNotice)({
                        stageId: null == t ? void 0 : t.id
                    }),
                    heading: W.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                    location: n.name,
                    details: o,
                    detailsIcon: (0, l.jsx)(R.default, {
                        width: 14,
                        height: 14,
                        className: K.stageIcon
                    }),
                    locationIcon: (0, l.jsx)(L.default, {
                        width: 16,
                        height: 16,
                        className: K.stageIcon
                    }),
                    topic: t.topic,
                    children: (0, l.jsx)(et, {
                        channel: n,
                        speakers: a,
                        voiceType: s.STAGE
                    })
                })
            }

            function et(e) {
                let {
                    channel: t,
                    speakers: n,
                    voiceType: a
                } = e, u = t.getGuildId(), d = i.useMemo(() => n.slice(0, 3), [n]), c = (0, r.useStateFromStores)([m.default], () => m.default.can(Y.Permissions.CONNECT, t)), E = (0, T.default)(t.id), f = W.default.Messages.JOIN;
                switch (a) {
                    case s.VOICE:
                        f = W.default.Messages.JOIN;
                        break;
                    case s.STAGE:
                        f = W.default.Messages.STAGE_CHANNEL_JOIN_BUTTON, (null == E ? void 0 : E.speaker) ? f = W.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != E && (f = W.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON);
                        break;
                    case s.STUDY_ROOM:
                        f = W.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA;
                        break;
                    default:
                        (0, D.assertNever)(a)
                }
                return null == u ? null : (0, l.jsxs)(l.Fragment, {
                    children: [d.length > 0 ? (0, l.jsxs)("div", {
                        className: K.textBlock,
                        children: [(0, l.jsx)(M.default, {
                            guildId: u,
                            users: d,
                            showUserPopout: !0,
                            size: M.Sizes.SIZE_16
                        }), (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: K.userNames,
                            children: (0, h.summarizeUsernamesParticipating)(u, d, null == t ? void 0 : t.id, n.length)
                        })]
                    }) : null, c && null == E && (0, l.jsx)($, {
                        channel: t,
                        label: f
                    })]
                })
            }(a = s || (s = {}))[a.VOICE = 1] = "VOICE", a[a.STAGE = 2] = "STAGE", a[a.STUDY_ROOM = 3] = "STUDY_ROOM";
            var en = i.memo(function(e) {
                let {
                    guild: t
                } = e, {
                    showRedesignedLiveChannelNotice: n
                } = (0, d.useChannelNoticeRedesignExperiment)(!0), a = (0, k.useActiveEventOrStageInstanceChannel)(t.id), s = (0, B.useGuildActiveEvent)(t.id), i = (0, B.useGuildUpcomingEventsNotice)(t.id), {
                    canSeeUpcomingEventsNotices: o
                } = j.default.useExperiment({
                    guildId: t.id,
                    location: "Guild Channel Notice"
                }, {
                    autoTrackExposure: !1
                }), u = (0, r.useStateFromStores)([C.default], () => C.default.getStageInstanceByChannel(null == a ? void 0 : a.id), [a]), {
                    isStageNoticeHidden: E,
                    isEventNoticeHidden: f
                } = (0, r.useStateFromStoresObject)([U.default], () => ({
                    isStageNoticeHidden: U.default.isLiveChannelNoticeHidden({
                        stageId: null == u ? void 0 : u.id
                    }),
                    isEventNoticeHidden: U.default.isLiveChannelNoticeHidden({
                        eventId: null == s ? void 0 : s.id
                    })
                }), [u, s]), _ = null, I = null != u && null != a && !E;
                if (n) return (0, l.jsx)(c.default, {
                    guild: t
                });
                null == s || f ? I && (_ = (0, l.jsx)(ee, {
                    stageInstance: u,
                    channel: a
                })) : s.entity_type === V.GuildScheduledEventEntityTypes.STAGE_INSTANCE && I ? _ = (0, l.jsx)(ee, {
                    stageInstance: u,
                    channel: a
                }) : s.entity_type === V.GuildScheduledEventEntityTypes.EXTERNAL ? _ = (0, l.jsx)(J, {
                    guildEvent: s
                }) : s.entity_type === V.GuildScheduledEventEntityTypes.VOICE && null != a && (_ = (0, l.jsx)(q, {
                    guildEvent: s,
                    channel: a
                }));
                let h = t.hasFeature(Y.GuildFeatures.COMMUNITY) || t.hasFeature(Y.GuildFeatures.HUB);
                if (null == _ && null != i && !h) {
                    let {
                        upcomingEvent: e,
                        noticeType: n
                    } = i;
                    j.default.trackExposure({
                        guildId: t.id,
                        location: "Guild Live Channel Notice"
                    }), _ = o ? (0, l.jsx)(X, {
                        guildEvent: e,
                        noticeType: n
                    }) : null
                }
                return _
            })
        },
        73968: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openGuildSettingsPickerModal: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078");

            function l(e) {
                (0, s.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await n.el("945216").then(n.bind(n, "945216"));
                    return n => (0, a.jsx)(t, {
                        ...n,
                        ...e
                    })
                }, {
                    modalKey: "Guild Settings Picker Modal"
                })
            }
        },
        951568: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TutorialType: function() {
                    return s
                },
                EmbeddedActivityTutorial: function() {
                    return A
                }
            });
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("446674"),
                o = n("77078"),
                u = n("244201"),
                d = n("550766"),
                c = n("478272"),
                E = n("812204"),
                f = n("685665"),
                _ = n("42203"),
                I = n("58608"),
                h = n("599110"),
                C = n("49111"),
                T = n("782340"),
                m = n("314796");
            (a = s || (s = {})).BOOSTING = "BOOSTING", a.NITRO = "NITRO", a.BASH_OUT = "BASH_OUT", a.GARTIC_PHONE = "GARTIC_PHONE", a.GAME_NIGHT = "GAME_NIGHT";
            let S = "https://cdn.discordapp.com/attachments/860252504826445825/1029516100356018217/Activities_NUX_GL_1.mp4",
                N = "https://cdn.discordapp.com/attachments/887469171804356628/916446867586416660/activities-video-poster-512.png",
                A = e => {
                    let {
                        channelId: t,
                        markAsDismissed: n,
                        tutorialType: a
                    } = e, {
                        analyticsLocation: A,
                        analyticsType: p,
                        ctaText: g,
                        dismissText: R,
                        description: O,
                        learnMore: L,
                        title: M,
                        videoPosterUrl: v,
                        videoUrl: D
                    } = function(e) {
                        switch (e) {
                            case s.BOOSTING:
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_BOOSTING, analyticsType: "embedded_activity_discovery_tutorial", description: T.default.Messages.EMBEDDED_ACTIVITY_NOTICE_WTP_DESCRIPTION, learnMore: !0, title: T.default.Messages.EMBEDDED_ACTIVITY_NOTICE_TITLE, videoPosterUrl: N, videoUrl: S, ctaText: T.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT, dismissText: T.default.Messages.DISMISS
                                };
                            case s.NITRO:
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_NITRO, analyticsType: "embedded_activity_nitro_discovery_tutorial", description: T.default.Messages.EMBEDDED_ACTIVITY_NOTICE_NITRO_DESCRIPTION, learnMore: !0, title: T.default.Messages.EMBEDDED_ACTIVITY_NOTICE_NITRO_TITLE, videoPosterUrl: N, videoUrl: S, ctaText: T.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT, dismissText: T.default.Messages.DISMISS
                                };
                            case s.BASH_OUT:
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_BASH_OUT, analyticsType: "embedded_activity_bash_out_tutorial", description: T.default.Messages.EMBEDDED_ACTIVITY_NOTICE_BASH_OUT_DESCRIPTION, learnMore: !1, title: T.default.Messages.EMBEDDED_ACTIVITIES_AVAILABLE_NOW, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1037963592227635230/bash_out.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1037967755955146762/bash_out.mp4", ctaText: T.default.Messages.PLAY, dismissText: T.default.Messages.DISMISS
                                };
                            case s.GARTIC_PHONE:
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_GARTIC_PHONE, analyticsType: "embedded_activity_gartic_phone_tutorial", description: T.default.Messages.EMBEDDED_ACTIVITY_GARTIC_PHONE_DESCRIPTION, learnMore: !1, title: T.default.Messages.EMBEDDED_ACTIVITY_GARTIC_PHONE_TITLE, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1083484393609367563/23_023_GarticPhone_Web_Coachmark_English.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1083484048539779173/23_023_GarticPhone_Web_Coachmark_English.mp4", ctaText: T.default.Messages.PLAY_NOW, dismissText: T.default.Messages.MAYBE_LATER
                                };
                            case s.GAME_NIGHT:
                                return {
                                    analyticsLocation: E.default.ACTIVITIES_COACH_MARK_GAME_NIGHT, analyticsType: "embedded_activity_game_night_tutorial", description: T.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_BODY, learnMore: !1, title: T.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_HEADING, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1093287297950175272/game_night_desktop.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1093286971708813382/game_night_desktop.mp4", ctaText: T.default.Messages.PLAY_NOW, dismissText: T.default.Messages.MAYBE_LATER
                                };
                            default:
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_NITRO, analyticsType: "", description: "", learnMore: !1, title: "", videoPosterUrl: "", videoUrl: "", ctaText: "", dismissText: ""
                                }
                        }
                    }(a), {
                        analyticsLocations: x,
                        AnalyticsLocationProvider: P
                    } = (0, f.default)(A);
                    i.useEffect(() => {
                        h.default.track(C.AnalyticEvents.TOOLTIP_VIEWED, {
                            type: p
                        })
                    }, [p]);
                    let y = (0, u.useAppContext)(),
                        b = y === C.AppContext.POPOUT,
                        U = (0, r.useStateFromStores)([_.default], () => _.default.getChannel(t), [t]);
                    return (0, l.jsx)(P, {
                        children: (0, l.jsx)("div", {
                            className: m.wrapper,
                            children: (0, l.jsx)("div", {
                                className: m.container,
                                children: (0, l.jsxs)("div", {
                                    className: m.content,
                                    children: [(0, l.jsx)(I.default, {
                                        className: m.video,
                                        src: D,
                                        poster: v,
                                        width: 224,
                                        height: 126,
                                        loop: !0,
                                        muted: !0,
                                        autoPlay: !0
                                    }), (0, l.jsx)("div", {
                                        className: m.header,
                                        children: (0, l.jsx)(o.Heading, {
                                            className: m.headerText,
                                            variant: "text-sm/bold",
                                            color: "always-white",
                                            children: M
                                        })
                                    }), (0, l.jsxs)(o.Text, {
                                        className: m.subheaderText,
                                        variant: "text-xs/normal",
                                        color: "always-white",
                                        children: [O, L ? (0, l.jsxs)(l.Fragment, {
                                            children: [" ", (0, l.jsx)(o.Anchor, {
                                                className: m.learnMoreLink,
                                                href: "https://support.discord.com/hc/articles/4422142836759",
                                                children: T.default.Messages.LEARN_MORE
                                            })]
                                        }) : null]
                                    }), (0, l.jsxs)("div", {
                                        className: m.ctaActionWrapper,
                                        children: [(0, l.jsx)(o.Button, {
                                            color: o.Button.Colors.BRAND,
                                            onClick: () => {
                                                n()
                                            },
                                            children: R
                                        }), (0, l.jsx)(o.Button, {
                                            color: o.Button.Colors.BRAND,
                                            look: o.Button.Looks.INVERTED,
                                            onClick: () => {
                                                n(), null != U && ((0, c.default)({
                                                    channel: U.isGuildVoice() ? U : void 0,
                                                    guildId: U.guild_id,
                                                    locationObject: {
                                                        page: C.AnalyticsPages.GUILD_CHANNEL,
                                                        section: C.AnalyticsSections.GUILD_CHANNEL_LIST,
                                                        object: C.AnalyticsObjects.ACTIVITIES_COACH_MARK,
                                                        objectType: C.AnalyticsObjectTypes.ACTIVITY
                                                    },
                                                    openInPopout: b,
                                                    analyticsLocations: x
                                                }), (0, d.fetchShelf)({
                                                    guildId: U.guild_id
                                                }))
                                            },
                                            children: g
                                        })]
                                    })]
                                })
                            })
                        })
                    })
                }
        },
        828931: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return V
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("819855"),
                r = n("77078"),
                o = n("685665"),
                u = n("593094"),
                d = n("951169"),
                c = n("509802"),
                E = n("668214"),
                f = n("379532"),
                _ = n("526843"),
                I = n("442619"),
                h = n("592407"),
                C = n("465511"),
                T = n("519119"),
                m = n("125826"),
                S = n("5667"),
                N = n("79798"),
                A = n("599110"),
                p = n("427459"),
                g = n("701909"),
                R = n("344696"),
                O = n("49111"),
                L = n("988268"),
                M = n("994428"),
                v = n("944305"),
                D = n("646718"),
                x = n("782340"),
                P = n("706904"),
                y = n("142190"),
                b = n("288562"),
                U = n("553274"),
                G = n("824489"),
                j = n("311492"),
                F = n("776432");

            function k(e) {
                null != e && h.default.open(e.id, O.GuildSettingsSections.OVERVIEW, {
                    section: O.AnalyticsSections.PREMIUM_GUILD_PROGRESS_BAR
                }, O.GuildSettingsSubsections.DISPLAY)
            }

            function B(e, t) {
                t && h.default.open(e.id, O.GuildSettingsSections.DISCOVERY)
            }

            function w(e, t) {
                null != t && ((0, p.isTierUnlocked)(t, O.BoostedGuildTiers.TIER_1) ? h.default.open(t.id, O.GuildSettingsSections.OVERVIEW, {
                    section: O.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH
                }, O.GuildSettingsSubsections.INVITE) : (0, f.default)({
                    analyticsLocations: e,
                    analyticsSourceLocation: O.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH,
                    guild: t,
                    perks: (0, v.guildInviteUpsellPerks)()
                }))
            }

            function H(e) {
                let {
                    renderPopout: t,
                    renderGuildHeaderDropdownButton: n
                } = e;
                return (0, a.jsx)(r.Popout, {
                    renderPopout: () => (0, a.jsx)("div", {
                        onClick: e => e.stopPropagation(),
                        children: t
                    }),
                    position: "bottom",
                    align: "center",
                    animation: r.Popout.Animation.TRANSLATE,
                    shouldShow: !0,
                    children: () => n()
                })
            }
            var V = s.memo(function(e) {
                let {
                    contentTypes: t,
                    theme: n,
                    guild: s,
                    renderGuildHeaderDropdownButton: r
                } = e, {
                    analyticsLocations: f
                } = (0, o.default)(), v = () => {
                    A.default.track(O.AnalyticEvents.TOOLTIP_VIEWED, {
                        type: D.PremiumUpsellTypes.PREMIUM_PROGRESS_BAR,
                        location: {
                            page: O.AnalyticsPages.GUILD_CHANNEL
                        }
                    })
                }, V = () => {
                    A.default.track(O.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: D.PremiumUpsellTypes.INVITE_SPLASH_UPSELL,
                        location: {
                            page: O.AnalyticsPages.GUILD_CHANNEL
                        },
                        location_stack: f
                    })
                }, Y = (0, i.isThemeDark)(n) ? U : G, [W, K] = (0, c.useDismissibleContentGroup)(t, M.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS);
                return (0, a.jsx)(a.Fragment, {
                    children: (() => {
                        switch (W) {
                            case l.DismissibleContent.GUILD_MENTION_RAID_LIMIT:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(E.GuildMentionRaidLimitUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_AUTOMOD_CUSTOM_BLOCK_MESSAGE:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(E.AutomodCustomBlockMessageUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_AUTOMOD_USER_PROFILE_UPSELL_AB:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(E.AutomodUserProfileUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.ANTI_RAID_SAFETY_ALERT_NOTICE:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(E.GuildAntiRaidUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        onComponentMount: v,
                                        header: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: Y,
                                            className: y.fullWidthImage
                                        }),
                                        content: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CONTENT.format(),
                                        buttonCTA: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                                        secondaryButtonCTA: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => k(),
                                        onClick: () => k(s),
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        onComponentMount: v,
                                        header: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: Y,
                                            className: y.fullWidthImage
                                        }),
                                        content: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_CONTENT.format(),
                                        buttonCTA: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                                        secondaryButtonCTA: x.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => k(),
                                        onClick: () => k(s),
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(_.default, {
                                        guildId: s.id,
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(d.default, {
                                        onClick: () => B(s, !0),
                                        onSecondaryClick: () => B(s),
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(u.default, {
                                        guild: s,
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_INVITE_SPLASH:
                                let e = (0, p.isTierUnlocked)(s, O.BoostedGuildTiers.TIER_1) ? x.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT.format() : x.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT_LOCKED.format({
                                        boostCount: (0, p.getNumberOfAppliedBoostsNeededForTier)(s, O.BoostedGuildTiers.TIER_1)
                                    }),
                                    t = (0, p.isTierUnlocked)(s, O.BoostedGuildTiers.TIER_1) ? x.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS : x.default.Messages.LEARN_MORE;
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        onComponentMount: V,
                                        header: x.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: b,
                                            className: y.fullWidthImage
                                        }),
                                        content: e,
                                        buttonCTA: t,
                                        secondaryButtonCTA: x.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => w(f),
                                        onClick: () => w(f, s),
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(C.default, {
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        className: P.tooltipOverrideColor,
                                        header: x.default.Messages.ACTIVE_THREADS_UPSELL_HEADER,
                                        content: x.default.Messages.ACTIVE_THREADS_UPSELL_CONTENT,
                                        buttonCTA: x.default.Messages.GOT_IT,
                                        onClick: () => K(),
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.CLYDE_GUILD_HEADER_NUX:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        header: (0, a.jsxs)(a.Fragment, {
                                            children: [x.default.Messages.CLYDE_MODAL_TITLE, (0, a.jsx)(N.default, {
                                                className: P.botTag,
                                                type: L.BotTagTypes.AI,
                                                verified: !0
                                            })]
                                        }),
                                        headerClassName: P.clydeTooltipHeaderContainer,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: j,
                                            className: P.clydeTooltipAsset
                                        }),
                                        content: x.default.Messages.CLYDE_GUILD_TOOLTIP_DETAILS.format({
                                            learnMoreURL: g.default.getArticleURL(O.HelpdeskArticles.CLYDE_AI)
                                        }),
                                        buttonCTA: x.default.Messages.ENABLE,
                                        onClick: () => {
                                            h.default.open(s.id, O.GuildSettingsSections.INTEGRATIONS)
                                        },
                                        secondaryButtonCTA: x.default.Messages.DISMISS,
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        header: x.default.Messages.SOUNDBOARD_TOOLTIP_TITLE_NEW,
                                        content: x.default.Messages.SOUNDBOARD_TOOLTIP_BODY,
                                        buttonCTA: x.default.Messages.CHECK_IT_OUT,
                                        secondaryButtonCTA: x.default.Messages.NO_THANKS,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: F,
                                            className: y.fullWidthImage
                                        }),
                                        onClick: () => {
                                            h.default.open(s.id, O.GuildSettingsSections.ROLES), h.default.selectRole(s.id, x.default.Messages.USE_SOUNDBOARD)
                                        },
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.MEDIA_CHANNEL_UPSELL:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(T.default, {
                                        guildId: s.id,
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_SUMMARIES_UPSELL:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(m.default, {
                                        guild: s,
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(I.default, {
                                        guildId: s.id,
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.INVENTORY_GUILD_SETTINGS_MODMIN_COACHMARK:
                                return (0, a.jsx)(H, {
                                    renderPopout: (0, a.jsx)(R.default, {
                                        guild: s,
                                        markAsDismissed: K
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            default:
                                return r()
                        }
                    })()
                })
            })
        },
        118971: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eG
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("301165"),
                d = n("446674"),
                c = n("151426"),
                E = n("862337"),
                f = n("77078"),
                _ = n("913144"),
                I = n("272030"),
                h = n("366634"),
                C = n("225664"),
                T = n("241845"),
                m = n("84339"),
                S = n("614175"),
                N = n("180065"),
                A = n("768613"),
                p = n("812204"),
                g = n("685665"),
                R = n("619935"),
                O = n("731681"),
                L = n("185314"),
                M = n("453910"),
                v = n("862853"),
                D = n("10641"),
                x = n("509802"),
                P = n("149362"),
                y = n("145067"),
                b = n("701203"),
                U = n("348934"),
                G = n("95039"),
                j = n("580362"),
                F = n("754707"),
                k = n("527714"),
                B = n("93877"),
                w = n("167790"),
                H = n("81732"),
                V = n("518953"),
                Y = n("341563"),
                W = n("240239"),
                K = n("6895"),
                z = n("817963"),
                q = n("694768"),
                Q = n("921228"),
                X = n("414581"),
                J = n("848877"),
                Z = n("1501"),
                $ = n("819565"),
                ee = n("689275"),
                et = n("12896"),
                en = n("612246"),
                ea = n("5667"),
                es = n("161778"),
                el = n("42203"),
                ei = n("350522"),
                er = n("162805"),
                eo = n("341542"),
                eu = n("923959"),
                ed = n("525065"),
                ec = n("305961"),
                eE = n("778588"),
                ef = n("957255"),
                e_ = n("945956"),
                eI = n("568307"),
                eh = n("697218"),
                eC = n("719923"),
                eT = n("197881"),
                em = n("120817"),
                eS = n("951568"),
                eN = n("637667"),
                eA = n("828931"),
                ep = n("89956"),
                eg = n("421595"),
                eR = n("49111"),
                eO = n("427474"),
                eL = n("994428"),
                eM = n("695838"),
                ev = n("646718"),
                eD = n("782340"),
                ex = n("706904");
            let eP = 64,
                ey = "server-settings",
                eb = {
                    origin: {
                        x: -8,
                        y: -48
                    },
                    targetWidth: 40,
                    targetHeight: 40,
                    offset: {
                        x: 0,
                        y: 0
                    }
                };
            class eU extends s.PureComponent {
                static getDerivedStateFromProps(e) {
                    let {
                        guild: t,
                        hasChannelNotice: n
                    } = e;
                    return null == t || null == t.banner || n ? {
                        renderBanner: !1,
                        bannerVisible: !1
                    } : null
                }
                componentDidMount() {
                    var e;
                    this.setAnimatedValue(0), _.default.subscribe("LAYER_PUSH", this.closeAllHeaderNotices), this.historyUnlisten = Z.default.addRouteChangeListener(this.handleHistoryChange);
                    let {
                        location: t
                    } = Z.default.getHistory();
                    (null === (e = t.state) || void 0 === e ? void 0 : e.shouldShowSubscribeTooltip) && this.showTimeout.start(1e3, () => this.setState({
                        shouldShowSubscribeTooltip: !0
                    }))
                }
                componentWillUnmount() {
                    this.showTimeout.stop(), this.state.controller.dispose(), this.historyUnlisten(), _.default.unsubscribe("LAYER_PUSH", this.closeAllHeaderNotices)
                }
                getGuildBannerHash() {
                    let {
                        guild: e,
                        hasChannelNotice: t
                    } = this.props;
                    return null == e || t ? null : e.banner
                }
                renderGuildHeaderNotices(e) {
                    let {
                        showGuildTemplateDirtyTooltip: t,
                        showGuildHeaderTutorial: n,
                        anyLayerOpen: s
                    } = this.props, {
                        shouldShowSubscribeTooltip: l
                    } = this.state;
                    if (n) return (0, a.jsx)("div", {
                        onClick: t => e ? null : t.stopPropagation(),
                        children: (0, a.jsx)(et.default, {
                            tutorialId: ey,
                            position: "bottom",
                            inlineSpecs: eb,
                            children: this.renderGuildHeaderDropdownButton(e)
                        })
                    });
                    if (t) return (0, a.jsx)(f.Tooltip, {
                        forceOpen: !0,
                        color: f.TooltipColors.BRAND,
                        position: "bottom",
                        shouldShow: !e && !s,
                        text: eD.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
                        "aria-label": eD.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
                        children: () => this.renderGuildHeaderDropdownButton(e)
                    });
                    if (!s && !e) return l ? (0, a.jsx)(f.Popout, {
                        renderPopout: () => (0, a.jsx)("div", {
                            onClick: e => e.stopPropagation(),
                            children: (0, a.jsx)(ea.default, {
                                header: eD.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_HEADER,
                                content: eD.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_TEXT,
                                buttonCTA: eD.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_CLOSE,
                                onClick: this.handleCloseSubscribeTooltip
                            })
                        }),
                        position: "bottom",
                        align: "center",
                        animation: f.Popout.Animation.TRANSLATE,
                        shouldShow: !0,
                        children: () => this.renderGuildHeaderDropdownButton(e)
                    }) : this.renderGuildHeaderUpsellPopout(e);
                    return this.renderGuildHeaderDropdownButton(e)
                }
                renderGuildHeader(e) {
                    let {
                        guild: t,
                        isHeaderPopoutOpen: n,
                        showGuildHeaderTutorial: s,
                        showGuildTemplateDirtyTooltip: l,
                        isGuildHeaderDismissibleTooltipShown: i,
                        HeaderAnalyticsLocationProvider: r
                    } = this.props, {
                        controller: o,
                        renderBanner: u,
                        bannerVisible: d,
                        bannerVisibleHeight: c,
                        communityInfoVisible: E
                    } = this.state, _ = s || l || i;
                    return null == t ? null : (0, a.jsx)(r, {
                        children: (0, a.jsx)(f.LazyPopout, {
                            renderPopout: this.renderMenuPopout,
                            position: "bottom",
                            align: "center",
                            animation: f.Popout.Animation.SCALE,
                            shouldShow: n,
                            onRequestClose: () => {
                                (0, J.dismissPremiumTutorialFlow)(ev.PremiumTutorialSteps.BOOSTING), (0, y.showGuildHeaderPopout)(!1)
                            },
                            children: s => {
                                let {
                                    onClick: l,
                                    ...i
                                } = s;
                                return (0, a.jsx)(eN.default, {
                                    guild: t,
                                    controller: o,
                                    renderBanner: u,
                                    hasSubheader: e,
                                    bannerVisible: d,
                                    communityInfoVisible: E,
                                    guildBanner: this.getGuildBannerHash(),
                                    onClick: this.handleHeaderMenuToggle,
                                    onContextMenu: this.handleHeaderContextMenu,
                                    disableBannerAnimation: _,
                                    animationOverlayHeight: c,
                                    ...i,
                                    children: this.renderGuildHeaderNotices(n)
                                })
                            }
                        })
                    })
                }
                setAnimatedValue(e) {
                    let {
                        guild: t
                    } = this.props, n = null != this.getGuildBannerHash(), a = null == t ? void 0 : t.hasCommunityInfoSubheader();
                    null != t && (n || a) && (n ? this.setAnimatedValueForBanner(e) : this.setAnimatedValueForGuildInfo(e))
                }
                setAnimatedValueForBanner(e) {
                    let {
                        renderBanner: t,
                        communityInfoVisible: n,
                        bannerVisible: a,
                        bannerVisibleHeight: s,
                        controller: l
                    } = this.state;
                    (e >= eP && a || e < eP && !a) && (a = !a), (e >= 88 && !t || e < 88 && t) && (t = !t), s = Math.max(88 - e, 0), n = a, (t !== this.state.renderBanner || a !== this.state.bannerVisible || s !== this.state.bannerVisibleHeight || n !== this.state.communityInfoVisible) && this.setState({
                        renderBanner: t,
                        bannerVisible: a,
                        bannerVisibleHeight: s,
                        communityInfoVisible: n
                    }), l.update({
                        value: Math.min(1, Math.max(0, 1 - e / 88)),
                        immediate: !0
                    }).start()
                }
                setAnimatedValueForGuildInfo(e) {
                    let {
                        communityInfoVisible: t,
                        controller: n
                    } = this.state;
                    (e >= 20 && t || e < 20 && !t) && (t = !t), t !== this.state.communityInfoVisible && this.setState({
                        communityInfoVisible: t
                    }), n.update({
                        value: Math.min(1, Math.max(0, 1 - e / 20)),
                        immediate: !0
                    }).start()
                }
                renderChannelList() {
                    let {
                        isUnavailable: e,
                        guild: t,
                        selectedChannel: n,
                        enableStudyGroup: s,
                        ...l
                    } = this.props;
                    if (e || null == t) return (0, a.jsx)(eg.default, {
                        withBannerPadding: null != t && null != this.getGuildBannerHash()
                    });
                    {
                        if (t.hasFeature(eR.GuildFeatures.HUB) && !s) return (0, a.jsx)("div", {
                            className: ex.hubContainer,
                            children: (0, a.jsx)(W.default, {
                                guild: t,
                                channel: null != n ? n : eu.default.getDefaultChannel(t.id)
                            })
                        });
                        let e = t.id === eM.FAVORITES_RAW_GUILD_ID ? em.FavoritesChannelList : em.GuildChannelList;
                        return (0, a.jsx)(e, {
                            guild: t,
                            ...l,
                            guildBanner: this.getGuildBannerHash(),
                            hasGuildSubheader: this.state.hasGuildSubheader,
                            onScroll: null != t && (null != this.getGuildBannerHash() || t.hasCommunityInfoSubheader()) ? this.pinBannerOrGuildInfo : null
                        })
                    }
                }
                renderFooter() {
                    let {
                        selectedChannelId: e,
                        shouldRenderBashOutCoachMark: t,
                        shouldRenderGarticPhoneCoachMark: n,
                        shouldRenderActivitiesGameNightCoachMark: s,
                        isEligibleForClipsPremiumEarlyAccessCoachmark: l
                    } = this.props, i = [];
                    return t && i.push(c.DismissibleContent.BASH_OUT_COACH_MARK), n && i.push(c.DismissibleContent.ACTIVITY_COACH_MARK_GARTIC_PHONE), s && i.push(c.DismissibleContent.ACTIVITIES_COACH_MARK_GAME_NIGHT), l && i.push(c.DismissibleContent.CLIPS_GUILD_PANEL_PREMIUM_EARLY_ACCESS_COACHMARK), (0, a.jsx)(x.default, {
                        contentTypes: i,
                        children: t => {
                            let {
                                visibleContent: n,
                                markAsDismissed: s
                            } = t;
                            switch (n) {
                                case c.DismissibleContent.BASH_OUT_COACH_MARK:
                                    return (0, a.jsx)(eS.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: s,
                                        tutorialType: eS.TutorialType.BASH_OUT
                                    });
                                case c.DismissibleContent.ACTIVITY_COACH_MARK_GARTIC_PHONE:
                                    return (0, a.jsx)(eS.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: s,
                                        tutorialType: eS.TutorialType.GARTIC_PHONE
                                    });
                                case c.DismissibleContent.ACTIVITIES_COACH_MARK_GAME_NIGHT:
                                    return (0, a.jsx)(eS.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: s,
                                        tutorialType: eS.TutorialType.GAME_NIGHT
                                    });
                                case c.DismissibleContent.CLIPS_GUILD_PANEL_PREMIUM_EARLY_ACCESS_COACHMARK:
                                    return (0, a.jsx)(L.default, {
                                        markAsDismissed: s
                                    });
                                default:
                                    return (0, a.jsx)(a.Fragment, {})
                            }
                        }
                    })
                }
                render() {
                    let {
                        guild: e,
                        FooterAnalyticsLocationProvider: t
                    } = this.props;
                    return (0, a.jsxs)("nav", {
                        className: ex.container,
                        onContextMenu: this.handleContextMenu,
                        "aria-label": eD.default.Messages.GUILD_SIDEBAR_A11Y_LABEL.format({
                            guildName: null != e ? e.toString() : ""
                        }),
                        children: [null != e && this.renderGuildHeader(this.state.hasGuildSubheader), null != e && (0, a.jsx)(ep.default, {
                            guild: e,
                            setHasSubheader: e => this.setState({
                                hasGuildSubheader: e
                            })
                        }), this.renderChannelList(), (0, a.jsx)(t, {
                            children: this.renderFooter()
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.historyUnlisten = () => {}, this.showTimeout = new E.Timeout, this.state = {
                        controller: new u.Controller({
                            value: 1,
                            immediate: !0
                        }),
                        renderBanner: !1,
                        bannerVisible: !1,
                        communityInfoVisible: !1,
                        shouldShowSubscribeTooltip: !1,
                        bannerVisibleHeight: 88,
                        hasGuildSubheader: !1
                    }, this.handleHistoryChange = e => {
                        null != e.state && e.state.shouldShowSubscribeTooltip && this.showTimeout.start(1e3, () => this.setState({
                            shouldShowSubscribeTooltip: !0
                        }))
                    }, this.handleHeaderMenuToggle = e => {
                        let {
                            isHeaderPopoutOpen: t
                        } = this.props;
                        e.stopPropagation(), (0, y.showGuildHeaderPopout)(!t), (0, J.dismissPremiumTutorialTooltip)(c.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP), this.closeAllHeaderNotices()
                    }, this.handleContextMenu = e => {
                        let {
                            guild: t
                        } = this.props;
                        null != t && (0, I.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("358060").then(n.bind(n, "358060"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }, this.handleHeaderContextMenu = e => {
                        let {
                            guild: t
                        } = this.props;
                        null != t && (0, I.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("374705").then(n.bind(n, "374705"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }, this.closeAllHeaderNotices = () => {
                        this.handleCloseSubscribeTooltip(), this.handleCloseTemplateDirtyTooltip(), this.handleCloseStudentHubPrivacySettingsTooltip()
                    }, this.handleCloseStudentHubPrivacySettingsTooltip = () => {
                        var e;
                        let t = (0, D.isDismissibleContentDismissed)(c.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP),
                            n = null === (e = this.props.guild) || void 0 === e ? void 0 : e.hasFeature(eR.GuildFeatures.HUB);
                        !t && n && (0, D.markDismissibleContentAsDismissed)(c.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP, {
                            dismissAction: eL.ContentDismissActionType.AUTO
                        })
                    }, this.handleCloseSubscribeTooltip = () => {
                        this.showTimeout.stop(), this.state.shouldShowSubscribeTooltip && this.setState({
                            shouldShowSubscribeTooltip: !1
                        })
                    }, this.handleCloseTemplateDirtyTooltip = () => {
                        let {
                            guild: e,
                            showGuildTemplateDirtyTooltip: t
                        } = this.props;
                        null != e && t && H.default.hideGuildTemplateDirtyTooltip(e.id)
                    }, this.renderMenuPopout = async () => {
                        let {
                            default: e
                        } = await n.el("992996").then(n.bind(n, "992996"));
                        return t => {
                            let {
                                closePopout: n
                            } = t, {
                                guild: s
                            } = this.props;
                            return null != s && (0, a.jsx)(e, {
                                onClose: n,
                                guild: s
                            })
                        }
                    }, this.renderGuildHeaderUpsellPopout = e => {
                        let {
                            showGuildBoostingProgressBarUpsell: t,
                            showGuildBoostingProgressBarSizeUpsell: n,
                            showRoleSubscriptionUpsell: s,
                            showDiscoveryTooltip: l,
                            showInviteSplashUpsell: i,
                            showDiscoveryLandingPageSettingsUpsell: r,
                            showHubPrivacySettingsTooltip: o,
                            showActiveThreadsNotice: u,
                            showAntiRaidUpsellNotice: d,
                            showMentionRaidLimitUpsell: E,
                            showAutomodCustomBlockMessageUpsell: f,
                            showAutomodUserProfileUpsell: _,
                            showGuildSoundboardPermissionUpsell: I,
                            showMediaChannelUpsell: h,
                            showSummaryUpsell: C,
                            showTierTemplatesUpsell: T,
                            showInventoryGuildSettingsModminCoachmark: m,
                            guild: S,
                            theme: N
                        } = this.props;
                        if (null == S) return this.renderGuildHeaderDropdownButton(e);
                        let A = [];
                        return (o && A.push(c.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP), u && A.push(c.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE), t && A.push(c.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS), n && A.push(c.DismissibleContent.GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK), s && A.push(c.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL), I && A.push(c.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION), i && A.push(c.DismissibleContent.GUILD_HEADER_INVITE_SPLASH), l && A.push(c.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP), r && A.push(c.DismissibleContent.GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL), d && A.push(c.DismissibleContent.ANTI_RAID_SAFETY_ALERT_NOTICE), E && A.push(c.DismissibleContent.GUILD_MENTION_RAID_LIMIT), f && A.push(c.DismissibleContent.GUILD_AUTOMOD_CUSTOM_BLOCK_MESSAGE), _ && A.push(c.DismissibleContent.GUILD_AUTOMOD_USER_PROFILE_UPSELL_AB), 0 === A.length) ? this.renderGuildHeaderDropdownButton(e) : (h && A.push(c.DismissibleContent.MEDIA_CHANNEL_UPSELL), C && A.push(c.DismissibleContent.GUILD_HEADER_SUMMARIES_UPSELL), T && A.push(c.DismissibleContent.SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL), m && A.push(c.DismissibleContent.INVENTORY_GUILD_SETTINGS_MODMIN_COACHMARK), (0, a.jsx)(eA.default, {
                            contentTypes: A,
                            theme: N,
                            guild: S,
                            renderGuildHeaderDropdownButton: () => this.renderGuildHeaderDropdownButton(e)
                        }))
                    }, this.renderGuildHeaderDropdownButton = e => {
                        let {
                            guild: t,
                            shouldShowBoostingHighlight: n,
                            isTutorialHighlightDismissed: s,
                            isBoostingFlowDismissed: l
                        } = this.props, {
                            enabled: r
                        } = q.default.getCurrentConfig({
                            location: "91c8a9_1"
                        }, {
                            autoTrackExposure: !1
                        }), o = n && !s && !l;
                        return (0, a.jsx)(X.PremiumTutorialSubstep, {
                            substeps: [ev.PremiumTutorialSubsteps.BOOSTING_GUILD_MENU_ITEM],
                            disableFlow: r && !e || null == t,
                            tooltipPosition: "right",
                            tooltipSpacingRight: 16,
                            tooltipSpacingBottom: 16,
                            onNext: () => {
                                null != t && (0, G.openGuildBoostingMarketingModal)({
                                    guildId: t.id,
                                    location: {
                                        section: eR.AnalyticsSections.GUILD_HEADER_POPOUT
                                    }
                                })
                            },
                            disableHighlight: !0,
                            children: t => (0, a.jsx)("div", {
                                className: i({
                                    [ex.dropdownWrapperHighlighted]: o
                                }),
                                children: (0, a.jsx)(h.default, {
                                    open: e,
                                    className: ex.dropdownButton,
                                    withHighlight: o
                                })
                            })
                        })
                    }, this.pinBannerOrGuildInfo = e => {
                        let {
                            scrollTop: t
                        } = e;
                        this.setAnimatedValue(t)
                    }
                }
            }

            function eG(e) {
                var t;
                let {
                    guildId: n,
                    hideSelectedChannel: l,
                    selectedChannelId: i
                } = e, r = (0, d.useStateFromStores)([ec.default], () => ec.default.getGuild(n));
                (0, T.useGlobalTriggerDebugging)(n);
                let u = (0, P.default)(n),
                    E = (0, d.useStateFromStores)([er.default], () => er.default.getGuildDimensions(n).scrollTo),
                    _ = (0, d.useStateFromStores)([e_.default], () => e_.default.getChannelId()),
                    [I, h, L] = (0, d.useStateFromStoresArray)([ef.default], () => [ef.default.can(eR.Permissions.MANAGE_GUILD, r), ef.default.can(eR.Permissions.MANAGE_ROLES, r), ef.default.can(eR.Permissions.MANAGE_THREADS, r)]),
                    x = (0, d.useStateFromStores)([eo.default], () => eo.default.isUnavailable(n)),
                    G = (0, d.useStateFromStores)([eh.default], () => eh.default.getCurrentUser()),
                    H = (0, d.useStateFromStores)([es.default], () => es.default.darkSidebar ? eR.ThemeTypes.DARK : es.default.theme),
                    {
                        enableStudyGroup: W
                    } = (0, Y.useHubStudyGroupExperiment)(r),
                    q = (0, v.default)(e => e.currentlyShown.has(c.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION)),
                    [X, J] = s.useState(!q),
                    Z = (0, m.default)(n),
                    {
                        AnalyticsLocationProvider: et
                    } = (0, g.default)(p.default.GUILD_HEADER),
                    {
                        AnalyticsLocationProvider: ea
                    } = (0, g.default)(p.default.GUILD_CHANNEL_LIST_FOOTER);
                s.useEffect(() => {
                    n !== Z && J(!q)
                }, [n, Z, q]);
                let [eu, em] = (0, v.default)(e => [eO.CHANNEL_NOTICES.some(t => e.currentlyShown.has(t.dismissibleContentType)), e.currentlyShownGroup.has(eL.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS)]), eS = (0, j.useIsGuildDismissibleContentChannelNoticeShown)(n), eN = (0, O.default)(r), eA = (0, f.useModalsStore)(f.hasAnyModalOpenSelector), ep = (0, d.useStateFromStores)([eE.default], () => eE.default.hasLayers()), eg = (0, d.useStateFromStores)([en.default], () => en.default.shouldShow(ey)), eM = I && (null == r ? void 0 : r.premiumProgressBarEnabled) === !1 && !eT.ProcessArgs.isDisallowPopupsSet(), eD = (0, d.useStateFromStores)([ed.default], () => ed.default.getMemberCount(n)), ex = I && null != eD && eD >= 30 && (null == r ? void 0 : r.premiumProgressBarEnabled) === !1 && !eT.ProcessArgs.isDisallowPopupsSet(), eP = h && null != r && (r.hasFeature(eR.GuildFeatures.COMMUNITY) || null != eD && eD > 50), eb = (0, w.default)(n), eG = (0, M.useLowerMemberCountRequirements)(n), ej = (null == r ? void 0 : r.hasFeature(eR.GuildFeatures.HUB)) === !0, eF = I && (null == r ? void 0 : r.hasFeature(eR.GuildFeatures.DISCOVERABLE)) === !0, ek = (0, R.useBlockedPaymentsConfig)(), eB = (I || (null == r ? void 0 : r.premiumTier) === eR.BoostedGuildTiers.NONE) && !eT.ProcessArgs.isDisallowPopupsSet() && !ek, ew = (0, d.useStateFromStores)([V.default, eE.default], () => null != r && null != G && I && !eE.default.hasLayers() && V.default.shouldShowGuildTemplateDirtyTooltip(n)), eH = (0, d.useStateFromStores)([el.default], () => el.default.getChannel(i)), {
                    isPopoutOpen: eV
                } = (0, y.useGuildHeaderPopoutStore)(), eY = null !== (t = null == r ? void 0 : r.hasFeature(eR.GuildFeatures.COMMUNITY)) && void 0 !== t && t, eW = (0, d.useStateFromStores)([ee.default], () => !o.isEmpty(ee.default.getThreadsForGuild(n))), eK = (0, Q.useIsPremiumTutorialEnabled)("ConnectedGuildSidebar"), ez = (0, D.useIsDismissibleContentDismissed)(ev.PremiumTutorialSteps.BOOSTING), {
                    enabled: eq
                } = A.BashOutCoachMarkExperiment.useExperiment({
                    location: "91c8a9_2"
                }, {
                    autoTrackExposure: !0
                }), eQ = eC.default.canUsePremiumActivities(G), eX = eC.default.isNewUser(G), {
                    enabled: eJ
                } = (0, C.useBurstReactionsExperiment)(n), eZ = (0, C.useBurstReactionsUserExperiment)(), {
                    enabled: e$
                } = N.ActivityCoachMarkGarticPhoneExperiment.useExperiment({
                    location: "91c8a9_3"
                }, {
                    autoTrackExposure: !0
                }), {
                    enabled: e0
                } = S.ActivitiesGameNightExperiment.useExperiment({
                    location: "91c8a9_4"
                }, {
                    autoTrackExposure: !0
                }), e1 = (0, d.useStateFromStores)([eI.default], () => eI.default.getVisibleGame()), e4 = (0, d.useStateFromStores)([ei.default], () => ei.default.hasConsented(eR.Consents.PERSONALIZATION));
                (0, F.default)(r), (0, k.default)(r);
                let e9 = (0, D.useIsDismissibleContentDismissed)(c.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP),
                    e8 = (0, b.useShowEnableRaidAlertsUpsell)(r),
                    e2 = (0, b.useShowMentionRaidLimitUpsell)(r),
                    e6 = (0, U.useShowAutomodCustomBlockMessageUpsell)(r),
                    e7 = (0, U.useShowAutomodUserProfileUpsell)(r),
                    e3 = (0, K.default)(n),
                    e5 = (0, $.default)(n),
                    te = (0, B.default)(n),
                    tt = (0, z.useHasInventoryGuildSettingsPermission)(r);
                return (0, a.jsx)(eU, {
                    guildId: n,
                    hideSelectedChannel: l,
                    guild: r,
                    scrollToChannel: E,
                    selectedChannelId: l ? null : i,
                    selectedChannel: eH,
                    selectedVoiceChannelId: _,
                    voiceStates: u,
                    isUnavailable: x,
                    theme: H,
                    user: G,
                    hasChannelNotice: null != eN || eu || eS,
                    anyLayerOpen: eA || ep,
                    showGuildBoostingProgressBarUpsell: eM,
                    showGuildBoostingProgressBarSizeUpsell: ex,
                    showInviteSplashUpsell: eB,
                    showDiscoveryLandingPageSettingsUpsell: eF,
                    showGuildHeaderTutorial: eg,
                    showGuildTemplateDirtyTooltip: ew,
                    showRoleSubscriptionUpsell: eb,
                    showDiscoveryTooltip: eG,
                    showHubPrivacySettingsTooltip: ej,
                    showNewUnreadsBar: eY,
                    showActiveThreadsNotice: L && null != eD && eD >= 200 && eW,
                    showAntiRaidUpsellNotice: e8,
                    showMentionRaidLimitUpsell: e2,
                    showAutomodCustomBlockMessageUpsell: e6,
                    showAutomodUserProfileUpsell: e7,
                    showGuildSoundboardPermissionUpsell: eP,
                    showMediaChannelUpsell: e3,
                    showSummaryUpsell: e5,
                    showInventoryGuildSettingsModminCoachmark: tt,
                    showTierTemplatesUpsell: te,
                    isHeaderPopoutOpen: eV,
                    enableStudyGroup: W,
                    isGuildHeaderDismissibleTooltipShown: em,
                    canShowCoachMarkAtBottom: X,
                    HeaderAnalyticsLocationProvider: et,
                    FooterAnalyticsLocationProvider: ea,
                    shouldShowBoostingHighlight: eK,
                    isBoostingFlowDismissed: ez,
                    shouldRenderBashOutCoachMark: X && eq && eQ,
                    shouldRenderGarticPhoneCoachMark: X && e$,
                    shouldRenderActivitiesGameNightCoachMark: X && e0,
                    isEligibleForClipsPremiumEarlyAccessCoachmark: null != e1 && e4,
                    isTutorialHighlightDismissed: e9,
                    shouldRenderBurstCoachmark: X && (eJ || eZ) && !eX
                })
            }
        },
        89956: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("640322"),
                i = n("477635");

            function r(e) {
                let {
                    guild: t,
                    setHasSubheader: n
                } = e, r = s.useRef(null);
                return s.useLayoutEffect(() => {
                    let e = r.current;
                    null != e && n(e.childNodes.length > 0)
                }), (0, a.jsx)("div", {
                    className: i.container,
                    ref: r,
                    children: (0, a.jsx)(l.default, {
                        guild: t
                    })
                })
            }
        },
        344696: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("592407"),
                l = n("252931"),
                i = n("5667"),
                r = n("49111"),
                o = n("782340"),
                u = n("147070"),
                d = n("696414"),
                c = e => {
                    let {
                        guild: t,
                        markAsDismissed: n
                    } = e, {
                        getNewSettingsDescription: c
                    } = (0, l.useInventoryGuildSettingsExperiment)({
                        guildId: t.id
                    });
                    return (0, a.jsx)(i.default, {
                        header: o.default.Messages.INVENTORY_NEW_SETTING,
                        content: c(),
                        buttonCTA: o.default.Messages.GOT_IT,
                        asset: (0, a.jsx)("img", {
                            alt: "Nelly the hamster holding a wrench",
                            src: d,
                            className: u.tooltipImage
                        }),
                        onClick: n,
                        onSecondaryClick: () => {
                            s.default.open(t.id, r.GuildSettingsSections.EMOJI), n()
                        },
                        secondaryButtonCTA: o.default.Messages.INVENTORY_VIEW_SETTING,
                        markAsDismissed: n
                    })
                }
        },
        421595: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("244510");
            let r = () => (0, a.jsx)("div", {
                    className: i.spacer
                }),
                o = () => (0, a.jsx)("div", {
                    className: i.category
                }),
                u = e => {
                    let {
                        width: t
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i.channel,
                        children: [(0, a.jsx)("div", {
                            className: i.channelIcon
                        }), (0, a.jsx)("div", {
                            className: i.channelName,
                            style: {
                                width: "".concat(t, "px")
                            }
                        })]
                    })
                };
            var d = e => {
                let {
                    withBannerPadding: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(i.container, {
                        [i.bannerPadding]: t
                    }),
                    children: [(0, a.jsx)(o, {}), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 74
                    }), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 70
                    }), (0, a.jsx)(u, {
                        width: 112
                    }), (0, a.jsx)(u, {
                        width: 175
                    }), (0, a.jsx)(r, {}), (0, a.jsx)(o, {}), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 74
                    }), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 70
                    }), (0, a.jsx)(u, {
                        width: 112
                    }), (0, a.jsx)(u, {
                        width: 56
                    })]
                })
            }
        },
        518953: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("446674"),
                s = n("95410"),
                l = n("913144");
            let i = "hasSeenGuildTemplatePromotionTooltip",
                r = {},
                o = !0 === s.default.get(i);

            function u(e) {
                let {
                    guildId: t
                } = e;
                r = {
                    ...r,
                    [t]: !1
                }
            }
            class d extends a.default.Store {
                shouldShowGuildTemplateDirtyTooltip(e) {
                    var t;
                    return null !== (t = r[e]) && void 0 !== t && t
                }
                shouldShowGuildTemplatePromotionTooltip() {
                    return !o
                }
            }
            d.displayName = "GuildTemplateTooltipStore";
            var c = new d(l.default, {
                GUILD_TEMPLATE_DIRTY_TOOLTIP_REFRESH: function(e) {
                    let {
                        guildTemplate: t
                    } = e;
                    r = {
                        ...r,
                        [t.source_guild_id]: t.is_dirty || !1
                    }
                },
                GUILD_TEMPLATE_PROMOTION_TOOLTIP_HIDE: function() {
                    s.default.set(i, !0), o = !0
                },
                GUILD_TEMPLATE_SYNC_SUCCESS: function(e) {
                    r = {
                        ...r,
                        [e.guildTemplate.source_guild_id]: !1
                    }
                },
                GUILD_TEMPLATE_DIRTY_TOOLTIP_HIDE: u,
                GUILD_TEMPLATE_DELETE_SUCCESS: u
            })
        },
        913645: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("742270"),
                s = n("815157"),
                l = n("391679"),
                i = n("523086"),
                r = n("599110"),
                o = n("65300"),
                u = n("883069"),
                d = n("49111");
            let c = "template";
            var E = {
                ...u.default,
                openNativeAppModal(e) {
                    i.default.openNativeAppModal(e, d.RPCCommands.GUILD_TEMPLATE_BROWSER)
                },
                openMobileApp(e, t) {
                    if (null != platform.ua && platform.ua.toLowerCase().indexOf("googlebot") > -1) return;
                    let n = null != e ? (0, a.getGuildTemplateDynamicLinkTemplate)(e) : (0, a.getDefaultDynamicLinkTemplate)(),
                        i = (0, s.generateAttemptId)(),
                        u = (0, s.default)(n, {
                            utmSource: c,
                            fingerprint: t,
                            attemptId: i
                        });
                    r.default.track(d.AnalyticEvents.DEEP_LINK_CLICKED, {
                        fingerprint: (0, l.maybeExtractId)(t),
                        attempt_id: i,
                        source: c,
                        guild_template_code: e
                    }), o.default.launch(u, () => {})
                }
            }
        },
        90713: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("379607"),
                r = n("290581"),
                o = n("664336"),
                u = n("782340"),
                d = function(e) {
                    let {
                        guildId: t
                    } = e, [n, d] = s.useState(!1), c = s.useCallback(() => {
                        d(e => !e)
                    }, []);
                    return (0, a.jsx)(l.Popout, {
                        shouldShow: n,
                        animation: l.Popout.Animation.NONE,
                        position: "bottom",
                        align: "right",
                        autoInvert: !1,
                        ignoreModalClicks: !0,
                        onRequestClose: () => d(!1),
                        renderPopout: function(e) {
                            return (0, a.jsx)(i.default, {
                                guildId: t,
                                ...e
                            })
                        },
                        children: (e, t) => {
                            let {
                                isShown: n
                            } = t;
                            return (0, a.jsx)(o.Icon, {
                                ...e,
                                onClick: c,
                                tooltip: n ? null : u.default.Messages.GUILD_FEED_FEATURED_ITEMS,
                                icon: r.default,
                                "aria-label": u.default.Messages.GUILD_FEED_FEATURED_ITEMS,
                                selected: n
                            })
                        }
                    })
                }
        },
        488284: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsHolidayRingtoneEligible: function() {
                    return s
                }
            }), n("446674"), n("193990"), n("845579"), n("385649"), n("599110");
            var a = n("684581");

            function s() {
                let e = a.default.useIsEligible();
                return e && null != a.default.ringtone && null != a.default.soundSettingsLabel
            }
            n("49111"), n("782340")
        },
        236199: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("913144"),
                s = n("597517"),
                l = n("533613"),
                i = {
                    init() {
                        a.default.subscribe("VOICE_CHANNEL_SELECT", e => {
                            let {
                                channelId: t
                            } = e;
                            null == t && s.hideHotspot(l.HotspotLocations.VOICE_PANEL_INTRODUCTION)
                        })
                    }
                }
        },
        341563: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHubStudyGroupExperiment: function() {
                    return r
                }
            });
            var a = n("884691"),
                s = n("862205"),
                l = n("49111");
            let i = (0, s.createExperiment)({
                    kind: "guild",
                    id: "2021-10_study_group",
                    label: "Student hub study group",
                    defaultConfig: {
                        enableStudyGroup: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables study group sidebar",
                        config: {
                            enableStudyGroup: !0
                        }
                    }]
                }),
                r = e => {
                    var t;
                    a.useEffect(() => {
                        null != e && e.hasFeature(l.GuildFeatures.HUB) && i.trackExposure({
                            guildId: e.id,
                            location: "467c32_1"
                        })
                    }, [e]);
                    let n = i.useExperiment({
                        guildId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "",
                        location: "467c32_2"
                    }, {
                        autoTrackExposure: !1,
                        disable: null == e || !e.hasFeature(l.GuildFeatures.HUB)
                    });
                    return n
                }
        },
        973191: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("782340"),
                i = n("672639"),
                r = e => {
                    let {
                        hasHub: t
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i.container,
                        children: [(0, a.jsx)("div", {
                            className: i.iconContainer,
                            children: (0, a.jsx)("div", {
                                className: i.icon
                            })
                        }), (0, a.jsx)(s.Text, {
                            color: "header-primary",
                            variant: "text-lg/semibold",
                            className: i.header,
                            children: t ? l.default.Messages.HUB_EMAIL_CONNECTION_ADD_HEADER : l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_HEADER
                        }), (0, a.jsx)(s.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            className: i.description,
                            children: t ? l.default.Messages.HUB_EMAIL_CONNECTION_ADD_DESCRIPTION : l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_CARD_DESCRIPTION
                        }), (0, a.jsx)("div", {
                            className: i.gap
                        }), (0, a.jsx)(s.Button, {
                            size: s.Button.Sizes.LARGE,
                            color: t ? s.Button.Colors.PRIMARY : s.Button.Colors.GREEN,
                            onClick: () => (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("927475").then(n.bind(n, "927475"));
                                return t => (0, a.jsx)(e, {
                                    ...t
                                })
                            }),
                            children: (0, a.jsx)(s.Text, {
                                variant: "text-sm/semibold",
                                className: i.addButton,
                                color: "none",
                                children: t ? l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_ANOTHER : l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_MY_SCHOOOL
                            })
                        })]
                    })
                }
        },
        143217: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("851387"),
                r = n("161778"),
                o = n("465126"),
                u = n("973191"),
                d = n("782340"),
                c = n("683449"),
                E = e => {
                    let {
                        guilds: t
                    } = e, n = (0, s.useStateFromStores)([r.default], () => r.default.theme), E = t.map(e => (0, a.jsx)(o.default, {
                        className: c.guildCard,
                        onView: () => i.default.transitionToGuildSync(e.id),
                        guild: {
                            ...e,
                            presenceCount: void 0,
                            memberCount: void 0,
                            premiumSubscriptionCount: void 0,
                            emojis: void 0
                        },
                        theme: n
                    }, e.id));
                    return (0, a.jsx)("section", {
                        className: c.guildListSection,
                        children: t.length > 0 ? (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(l.Heading, {
                                className: c.title,
                                variant: "heading-lg/semibold",
                                children: d.default.Messages.YOUR_HUB
                            }), (0, a.jsxs)("div", {
                                className: c.guildList,
                                children: [E, (0, a.jsx)(u.default, {
                                    hasHub: !0
                                })]
                            })]
                        }) : (0, a.jsx)("div", {
                            className: c.guildList,
                            children: (0, a.jsx)(u.default, {
                                hasHub: !1
                            })
                        })
                    })
                }
        },
        40546: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("139321"),
                r = n("269596"),
                o = n("745633"),
                u = n("11056"),
                d = n("447621"),
                c = n("782340"),
                E = n("763065"),
                f = e => {
                    let {
                        handleCategorySelect: t,
                        shouldDisplaySelectedCategory: n,
                        currentCategoryId: f
                    } = e, _ = (0, s.useStateFromStores)([r.default], () => r.default.hasHotspot(i.HotspotLocations.HUB_NEW));
                    return (0, a.jsx)(u.default, {
                        avatar: (0, a.jsx)(o.default, {}),
                        name: c.default.Messages.HUB_SCHOOL_HUBS,
                        focusProps: {
                            offset: {
                                right: 4,
                                top: 1,
                                bottom: 1
                            }
                        },
                        onClick: () => {
                            t(d.DISCORD_HUB_ID), (0, i.hideHotspot)(i.HotspotLocations.HUB_NEW)
                        },
                        wrapContent: !0,
                        selected: n && d.DISCORD_HUB_ID === f,
                        className: E.categoryItem,
                        selectedClassName: E.selectedCategoryItem,
                        innerClassName: E.itemInner,
                        children: _ && (0, a.jsx)("div", {
                            className: E.new,
                            children: (0, a.jsx)(l.Text, {
                                color: "none",
                                variant: "text-xs/semibold",
                                className: E.newText,
                                children: c.default.Messages.NEW
                            })
                        })
                    }, d.DISCORD_HUB_ID)
                }
        },
        349682: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("69927"),
                r = n("794818"),
                o = n("244922"),
                u = n("143217"),
                d = n("447621"),
                c = n("782340"),
                E = n("254514"),
                f = n("152985"),
                _ = e => {
                    let {
                        loadId: t
                    } = e, n = (0, o.default)();
                    return s.useEffect(() => {
                        (0, r.trackDiscoveryViewed)({
                            loadId: t,
                            gamesYouPlayGuilds: [],
                            allGuilds: [],
                            categoryId: d.DISCORD_HUB_ID
                        })
                    }, [t]), (0, i.usePageTitle)({
                        subsection: c.default.Messages.HUB_SCHOOL_HUBS,
                        location: c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE
                    }), (0, a.jsx)(l.Scroller, {
                        className: E.scroller,
                        children: (0, a.jsxs)("div", {
                            className: E.viewWrapper,
                            children: [(0, a.jsxs)("div", {
                                className: E.headerContainer,
                                children: [(0, a.jsx)("img", {
                                    alt: "",
                                    className: E.headerImage,
                                    src: f
                                }), (0, a.jsxs)("div", {
                                    className: E.headerContent,
                                    children: [(0, a.jsx)(l.Heading, {
                                        className: E.headerText,
                                        variant: "heading-xl/semibold",
                                        children: c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE
                                    }), (0, a.jsx)(l.Text, {
                                        className: E.headerDescription,
                                        variant: "text-md/normal",
                                        color: "none",
                                        children: c.default.Messages.HUB_DIRECTORY_SEARCH_SUBTITLE
                                    })]
                                })]
                            }), (0, a.jsx)(u.default, {
                                guilds: n
                            }), (0, a.jsx)("div", {
                                className: E.divider
                            }), (0, a.jsx)(l.Text, {
                                className: E.footerDescription,
                                variant: "text-md/medium",
                                color: "header-secondary",
                                children: c.default.Messages.HUB_DISCOVERY_FOOTER_DESCRIPTION
                            })]
                        })
                    })
                }
        },
        273457: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("970728"),
                r = n("393414"),
                o = n("305961"),
                u = n("337543"),
                d = n("554054"),
                c = n("831588"),
                E = n("927475"),
                f = n("49111"),
                _ = n("289382"),
                I = n("694907"),
                h = e => {
                    let {
                        guildId: t,
                        inviteCode: n
                    } = e, [h, C] = s.useState(_.WaveStates.INITIAL), [T, m] = s.useState(null != n);
                    s.useEffect(() => {
                        null != n && i.default.resolveInvite(n, "Hub").finally(() => m(!1))
                    }, [n]);
                    let S = (0, l.useStateFromStores)([u.default], () => null != n ? u.default.getInvite(n) : null),
                        N = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(t));
                    s.useEffect(() => {
                        null != N && (0, r.transitionTo)(f.Routes.CHANNEL(t))
                    }, [N, t]);
                    let A = s.useCallback(e => {
                            C(t => Math.max(t, e))
                        }, []),
                        p = (0, c.getArtForPath)();
                    return (0, a.jsx)("div", {
                        className: I.page,
                        children: (0, a.jsxs)(d.default, {
                            embedded: !0,
                            splash: p,
                            waveState: h,
                            showLogo: !1,
                            updateWaveState: A,
                            children: [(0, a.jsx)("div", {
                                className: I.dragRegion
                            }), (0, a.jsx)("div", {
                                className: I.contentWrapper,
                                children: !T && (0, a.jsx)(E.HubEmailConnectionModalView, {
                                    invite: S
                                })
                            })]
                        })
                    })
                }
        },
        79176: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("963662"),
                i = n("49111"),
                r = n("782340"),
                o = n("843528");

            function u(e) {
                let {
                    guild: t,
                    markAsDismissed: u
                } = e;
                return (0, a.jsx)(l.default, {
                    guild: t,
                    onDismissed: u,
                    onClick: function() {
                        (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("927475").then(n.bind(n, "927475"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    },
                    message: r.default.Messages.HUB_LINK_CHANNEL_NOTICE_BODY,
                    cta: r.default.Messages.LEARN_MORE,
                    trackingSource: i.ChannelNoticeCtaSources.HUB_LINK_NOTICE,
                    type: i.ChannelNoticeTypes.HUB_LINK,
                    image: o
                })
            }
        },
        465511: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("994428"),
                i = n("782340"),
                r = n("617979");

            function o(e) {
                let {
                    markAsDismissed: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: r.container,
                    children: [(0, a.jsx)("div", {
                        className: r.pointer
                    }), (0, a.jsx)(s.Text, {
                        variant: "text-sm/normal",
                        className: r.content,
                        children: i.default.Messages.HUB_PRIVACY_SETTINGS_TOOLTIP
                    }), (0, a.jsx)(s.Button, {
                        look: s.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            t(l.ContentDismissActionType.AUTO)
                        },
                        children: i.default.Messages.GOT_IT
                    })]
                })
            }
        },
        244922: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("446674"),
                s = n("305961"),
                l = n("49111");

            function i() {
                return (0, a.useStateFromStores)([s.default], () => {
                    let e = s.default.getGuilds();
                    return Object.entries(e).filter(e => {
                        let [t, n] = e;
                        return n.hasFeature(l.GuildFeatures.HUB)
                    }).map(e => {
                        let [t, n] = e;
                        return n
                    })
                })
            }
        },
        986321: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("301165"),
                l = n("446674"),
                i = n("139321"),
                r = n("923959"),
                o = n("957255"),
                u = n("119153"),
                d = n("602632"),
                c = n("723872"),
                E = n("49111");

            function f(e) {
                let {
                    channel: t,
                    guild: n
                } = e, r = (0, l.useStateFromStores)([i.HotspotStore], () => i.HotspotStore.hasHotspot(i.HotspotLocations.HUB_STUDY_ROOM_NOTICE)), o = (0, c.useConnectedInCurrentHub)(t.guild_id), E = (0, s.useSpring)({
                    maxHeight: o ? 0 : 300,
                    overflow: "hidden",
                    delay: 400
                });
                return (0, a.jsx)(s.animated.div, {
                    style: E,
                    children: r ? (0, a.jsx)(u.default, {
                        channel: t,
                        guild: n
                    }) : (0, a.jsx)(d.default, {
                        name: "\uD83D\uDCDA☕ ".concat(t.name),
                        channel: t
                    })
                })
            }
            var _ = function(e) {
                let {
                    guild: t
                } = e, n = (0, l.useStateFromStores)([r.default], () => {
                    let e = r.default.getChannels(t.id),
                        n = e[r.GUILD_VOCAL_CHANNELS_KEY];
                    return n[0]
                }), s = (0, l.useStateFromStores)([o.default], () => null != n && o.default.can(E.Permissions.CONNECT, n.channel));
                return t.hasFeature(E.GuildFeatures.HUB) && null != n && s ? (0, a.jsx)(f, {
                    channel: n.channel,
                    guild: t
                }) : null
            }
        },
        119153: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("963662"),
                l = n("139321"),
                i = n("393414"),
                r = n("716214"),
                o = n("49111"),
                u = n("782340"),
                d = n("963301"),
                c = e => {
                    let {
                        channel: t,
                        guild: n
                    } = e;
                    return (0, a.jsx)(s.default, {
                        guild: n,
                        onDismissed: () => {
                            (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE)
                        },
                        onClick: () => {
                            (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE), null != t && null != t.getGuildId() && ((0, r.connectAndOpen)(t), (0, i.transitionToGuild)(t.getGuildId(), t.id))
                        },
                        title: u.default.Messages.HUB_STUDY_ROOM_NOTICE_TITLE,
                        message: u.default.Messages.HUB_STUDY_ROOM_NOTICE_DESCRIPTION,
                        cta: u.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
                        image: d,
                        type: o.ChannelNoticeTypes.HUB_STUDY_ROOM
                    })
                }
        },
        602632: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("419830"),
                i = n("153014"),
                r = n("316133"),
                o = n("782340"),
                u = n("916333"),
                d = function(e) {
                    let {
                        name: t,
                        channel: n
                    } = e, d = (0, s.useStateFromStoresArray)([r.default], () => r.default.getVoiceStatesForChannel(n).map(e => {
                        let {
                            user: t
                        } = e;
                        return t
                    }), [n]), c = (0, l.getChannelIconComponent)(n);
                    return (0, a.jsx)(i.GuildNoticeBody, {
                        heading: o.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                        topic: t,
                        location: o.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
                        locationIcon: null != c ? (0, a.jsx)(c, {
                            width: 16,
                            height: 16,
                            className: u.icon
                        }) : null,
                        children: (0, a.jsx)(i.LiveVoiceOrStageChannelNotice, {
                            channel: n,
                            speakers: d,
                            voiceType: i.VoiceChannelType.STUDY_ROOM
                        })
                    })
                }
        },
        519440: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("963662"),
                l = n("592407"),
                i = n("702411"),
                r = n("49111"),
                o = n("782340"),
                u = n("885634");

            function d(e) {
                let {
                    guild: t
                } = e, n = () => i.default.dismissNotice(t.id);
                return (0, a.jsx)(s.default, {
                    guild: t,
                    onDismissed: n,
                    cta: o.default.Messages.CHECK_IT_OUT,
                    message: o.default.Messages.COMMANDS_SCOPE_MIGRATION_ADMIN_NOTICE.format(),
                    type: r.ChannelNoticeTypes.COMMANDS_MIGRATION,
                    image: u,
                    onClick: () => {
                        n(), l.default.open(t.id, r.GuildSettingsSections.INTEGRATIONS)
                    },
                    imageMarginTop: 15,
                    imageMarginX: 22
                })
            }
        },
        470055: function(e, t, n) {
            "use strict";
            let a, s, l, i, r;
            n.r(t), n.d(t, {
                InteractionModalState: function() {
                    return u
                },
                default: function() {
                    return T
                }
            });
            var o, u, d = n("627445"),
                c = n.n(d),
                E = n("446674"),
                f = n("913144"),
                _ = n("819689"),
                I = n("798609"),
                h = n("274800");
            (o = u || (u = {}))[o.IN_FLIGHT = 0] = "IN_FLIGHT", o[o.ERRORED = 1] = "ERRORED", o[o.SUCCEEDED = 2] = "SUCCEEDED";
            class C extends E.default.Store {
                getModalState(e) {
                    return e !== a ? null : s
                }
            }
            C.displayName = "InteractionModalStore";
            var T = new C(f.default, {
                LOGOUT: function() {
                    return a = null, s = null, l = null, i = null, r = null, !0
                },
                INTERACTION_MODAL_CREATE: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return t === r && (_.default.deleteMessage(i, l, !0), l = null, i = null, r = null), !1
                },
                INTERACTION_IFRAME_MODAL_CREATE: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return t === r && (_.default.deleteMessage(i, l, !0), l = null, i = null, r = null), !1
                },
                INTERACTION_QUEUE: function(e) {
                    let {
                        messageId: t,
                        nonce: n,
                        data: o
                    } = e;
                    switch (o.interactionType) {
                        case I.InteractionTypes.APPLICATION_COMMAND:
                            return l = t, i = o.channelId, r = n, !1;
                        case I.InteractionTypes.MODAL_SUBMIT:
                            return c(null == a || s === u.ERRORED || s === u.SUCCEEDED, "cannot submit multiple modals at once"), a = n, s = u.IN_FLIGHT, setTimeout(() => {
                                a === n && s === u.IN_FLIGHT && (0, h.setFailed)(n)
                            }, 1e4), !0;
                        default:
                            return !1
                    }
                },
                INTERACTION_SUCCESS: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return null != t && t === a && (s = u.SUCCEEDED, !0)
                },
                INTERACTION_FAILURE: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return null != t && t === a && (s = u.ERRORED, !0)
                }
            })
        },
        940035: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var a = n("913144"),
                s = n("629109"),
                l = n("539405"),
                i = n("987317"),
                r = n("990766"),
                o = n("52289"),
                u = n("316272"),
                d = n("56947"),
                c = n("803725"),
                E = n("374014"),
                f = n("712258"),
                _ = n("393414"),
                I = n("245463"),
                h = n("570413"),
                C = n("373469"),
                T = n("42887"),
                m = n("102985"),
                S = n("860957"),
                N = n("901165"),
                A = n("599110"),
                p = n("360782"),
                g = n("49111"),
                R = n("353927");
            let O = {
                [g.GlobalKeybindActions.TOGGLE_PRIORITY_SPEAKER]: {
                    onTrigger() {},
                    keyEvents: {}
                },
                [g.GlobalKeybindActions.UNASSIGNED]: {
                    onTrigger() {},
                    keyEvents: {}
                },
                [g.GlobalKeybindActions.PUSH_TO_TALK]: {
                    onTrigger(e, t) {
                        T.default.getMode(t.context) === g.InputModes.PUSH_TO_TALK && (O[g.GlobalKeybindActions.PUSH_TO_TALK].isPressed = e, T.default.getMediaEngine().eachConnection(t => t.setForceAudioInput(e, !1), t.context))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [g.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY]: {
                    onTrigger(e) {
                        T.default.getMode() === g.InputModes.PUSH_TO_TALK && (O[g.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY].isPressed = e, T.default.getMediaEngine().eachConnection(t => t.setForceAudioInput(e, !0), R.MediaEngineContextTypes.DEFAULT))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [g.GlobalKeybindActions.PUSH_TO_MUTE]: {
                    onTrigger(e) {
                        if (T.default.getMode() === g.InputModes.VOICE_ACTIVITY) !T.default.isSelfDeaf() && (O[g.GlobalKeybindActions.PUSH_TO_MUTE].isPressed = e, s.default.setTemporarySelfMute(e))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [g.GlobalKeybindActions.TOGGLE_MUTE]: {
                    onTrigger: () => s.default.toggleSelfMute(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_DEAFEN]: {
                    onTrigger() {
                        s.default.toggleSelfDeaf()
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_VOICE_MODE]: {
                    onTrigger() {
                        let e = T.default.getMode() === g.InputModes.PUSH_TO_TALK ? g.InputModes.VOICE_ACTIVITY : g.InputModes.PUSH_TO_TALK;
                        s.default.setMode(e)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_OVERLAY]: {
                    onTrigger() {
                        let e = S.default.enabled;
                        l.default.setEnabled(!e)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK]: {
                    onTrigger(e) {
                        let t = (0, p.default)();
                        null != t && (e ? l.default.setUILocked(!N.default.isUILocked(t), t) : l.default.setInputLocked(!S.default.isInputLocked(t), t))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    }
                },
                [g.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET]: {
                    onTrigger() {
                        let e = S.default.getFocusedPID(),
                            t = null != e;
                        null != e && t && N.default.isPinned(g.OverlayWidgets.TEXT) && S.default.isReady(e) && S.default.isInputLocked(e) && l.default.activateRegion(g.OverlayActiveRegions.TEXT_WIDGET)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING]: {
                    onTrigger() {
                        let e = C.default.getCurrentUserActiveStream();
                        if (null != e) return (0, r.stopStream)((0, E.encodeStreamKey)(e));
                        (0, f.default)()
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_STREAMER_MODE]: {
                    onTrigger() {
                        o.default.setEnabled(!m.default.enabled)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.NAVIGATE_BACK]: {
                    onTrigger: () => (0, _.back)(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        focused: !0,
                        blurred: !1
                    }
                },
                [g.GlobalKeybindActions.NAVIGATE_FORWARD]: {
                    onTrigger: () => (0, _.forward)(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        focused: !0,
                        blurred: !1
                    }
                },
                [g.GlobalKeybindActions.SOUNDBOARD]: {
                    onTrigger: () => {
                        if (!(0, I.canSelectedVoiceChannelUseSoundboard)()) return;
                        let e = (0, p.default)();
                        null != e && (N.default.isUILocked(e) ? (0, h.openSoundboardInOverlay)(!0, e) : (0, h.closeSoundboardInOverlay)(e))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.SOUNDBOARD_HOLD]: {
                    onTrigger: e => {
                        if (!(0, I.canSelectedVoiceChannelUseSoundboard)()) return;
                        let t = (0, p.default)();
                        if (null != t) {
                            e ? (0, h.openSoundboardInOverlay)(!1, t) : (0, h.closeSoundboardInOverlay)(t);
                            return
                        }
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    }
                },
                [g.GlobalKeybindActions.SAVE_CLIP]: {
                    onTrigger: () => {
                        let e = (0, d.areClipsEnabled)();
                        e && (A.default.track(g.AnalyticEvents.CLIP_SAVE_KEYBIND_PRESSED), (0, c.saveClip)())
                    },
                    keyEvents: {
                        keyup: !1,
                        keydown: !0
                    }
                },
                [g.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL]: {
                    onTrigger(e, t) {
                        let {
                            params: {
                                channelId: n
                            }
                        } = t;
                        null != n && i.default.selectVoiceChannel(n)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        blurred: !0,
                        focused: !0
                    }
                },
                [g.GlobalKeybindActions.DISCONNECT_FROM_VOICE_CHANNEL]: {
                    onTrigger() {
                        i.default.selectVoiceChannel(null)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        blurred: !0,
                        focused: !0
                    }
                }
            };
            class L extends u.default {
                _initialize() {
                    a.default.wait(() => a.default.dispatch({
                        type: "KEYBINDS_REGISTER_GLOBAL_KEYBIND_ACTIONS",
                        keybinds: O
                    }))
                }
                _terminate() {}
            }
            var M = new L
        },
        363691: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("851387"),
                d = n("393414"),
                c = n("305961"),
                E = n("162771"),
                f = n("531470"),
                _ = n("794818"),
                I = n("267567"),
                h = n("49111"),
                C = n("782340"),
                T = n("600323"),
                m = n("105029"),
                S = () => {
                    let e = (0, r.useStateFromStores)([E.default], () => E.default.getGuildId(), []),
                        t = (0, r.useStateFromStores)([c.default], () => c.default.getGuild(e), [e]),
                        n = (0, r.useStateFromStores)([I.default], () => I.default.getHistorySnapshot(), []),
                        [l, S] = s.useState(!1);
                    if (null == t) return null;
                    let N = async () => {
                        S(!0);
                        try {
                            _.trackGuildJoinClicked(t.id), await u.default.joinGuild(t.id, {
                                source: h.JoinGuildSources.NOTICE_BAR
                            })
                        } catch {
                            S(!1)
                        }
                    };
                    return (0, a.jsxs)("div", {
                        className: i(T.notice, m.notice),
                        children: [(0, a.jsxs)(o.Button, {
                            look: o.Button.Looks.OUTLINED,
                            color: o.Button.Colors.WHITE,
                            size: o.Button.Sizes.NONE,
                            className: i(T.button, T.back),
                            innerClassName: T.iconButton,
                            onClick: () => {
                                let e = (0, d.getHistory)();
                                null != n && null != n.location ? (0, d.replaceWith)({
                                    ...n.location
                                }) : e.goBack()
                            },
                            children: [(0, a.jsx)(f.default, {
                                width: 16,
                                height: 16,
                                className: T.arrow
                            }), C.default.Messages.BACK]
                        }), (0, a.jsx)(o.Text, {
                            className: T.header,
                            variant: "text-sm/normal",
                            children: C.default.Messages.LURKER_MODE_NAG_BAR_HEADER
                        }), (0, a.jsx)(o.Button, {
                            className: T.button,
                            look: o.Button.Looks.OUTLINED,
                            color: o.Button.Colors.WHITE,
                            size: o.Button.Sizes.NONE,
                            submitting: l,
                            onClick: N,
                            children: C.default.Messages.LURKER_MODE_NAG_BAR_BUTTON.format({
                                guild: t.name
                            })
                        })]
                    })
                }
        },
        6895: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("305961"),
                l = n("957255"),
                i = n("690563"),
                r = n("49111");

            function o(e) {
                let t = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    n = (0, i.useGuildEligibleForMediaChannels)(t),
                    o = l.default.can(r.Permissions.MANAGE_CHANNELS, t);
                return n && o
            }
        },
        519119: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("716241"),
                i = n("5667"),
                r = n("58608"),
                o = n("599110"),
                u = n("701909"),
                d = n("49111"),
                c = n("782340"),
                E = n("45243");

            function f(e) {
                let {
                    guildId: t,
                    markAsDismissed: f
                } = e, _ = (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(s.Text, {
                        color: "always-white",
                        variant: "text-sm/normal",
                        className: E.upsellBody,
                        children: c.default.Messages.MEDIA_CHANNEL_UPSELL_BODY
                    }), (0, a.jsx)(s.Text, {
                        color: "always-white",
                        variant: "text-sm/normal",
                        children: c.default.Messages.MEDIA_CHANNEL_LEARN_MORE.format({
                            hcArticleUrl: u.default.getCreatorSupportArticleURL(d.HelpdeskArticles.MEDIA_CHANNEL)
                        })
                    })]
                });
                return (0, a.jsx)(i.default, {
                    header: c.default.Messages.MEDIA_CHANNEL_UPSELL_TITLE,
                    content: _,
                    asset: (0, a.jsx)(r.default, {
                        className: E.video,
                        src: "https://cdn.discordapp.com/assets/media_channel/media_channel_upsell_demo.mp4",
                        autoPlay: !0,
                        loop: !0
                    }),
                    buttonCTA: c.default.Messages.MEDIA_CHANNEL_UPSELL_CREATE_NOW_CTA,
                    onClick: () => {
                        o.default.track(d.AnalyticEvents.MEDIA_CHANNEL_UPSELL_CLICKED, {
                            ...(0, l.collectGuildAnalyticsMetadata)(t)
                        }), (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("581354").then(n.bind(n, "581354"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channelType: d.ChannelTypes.GUILD_MEDIA,
                                guildId: t
                            })
                        })
                    },
                    secondaryButtonCTA: c.default.Messages.DISMISS,
                    markAsDismissed: f
                })
            }
        },
        283896: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("913144"),
                s = n("987317"),
                l = n("316272");
            class i extends l.default {
                _initialize() {
                    a.default.subscribe("RTC_CONNECTION_FORCED_SF_DISCONNECT", this.handleForcedDisconnect)
                }
                _terminate() {
                    a.default.unsubscribe("RTC_CONNECTION_FORCED_SF_DISCONNECT", this.handleForcedDisconnect)
                }
                handleForcedDisconnect(e) {
                    let {} = e;
                    s.default.disconnect()
                }
            }
            var r = new i
        },
        94372: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("75247"),
                s = n("913144"),
                l = n("280468"),
                i = n("605250"),
                r = n("42203"),
                o = n("377253"),
                u = n("344442"),
                d = n("255608");
            let c = -1 / 0,
                E = new i.default("MessagePreviewStore");
            class f extends a.default {
                isLatest(e, t) {
                    var n;
                    let a = this.guilds.get(null != e ? e : null);
                    return null !== (n = null == a ? void 0 : a.isLatest(t, this.generation)) && void 0 !== n && n
                }
                isLocalFetchNeeded(e) {
                    var t, n;
                    return null === (n = null === (t = this.guilds.get(e)) || void 0 === t ? void 0 : t.localNeeded) || void 0 === n || n
                }
                message(e, t) {
                    var n, a;
                    return null !== (a = null === (n = this.guilds.get(e)) || void 0 === n ? void 0 : n.messageRecord(t)) && void 0 !== a ? a : null
                }
                data(e) {
                    return !this.guilds.has(e) && this.guilds.set(e, new u.PreviewData), this.guilds.get(e)
                }
                handleOneGuildCreate(e) {
                    var t, n;
                    let a = this.data(e.id);
                    a.putMany(null !== (t = e.lastMessages) && void 0 !== t ? t : [], this.generation), a.putMany(null !== (n = e.threadMessages) && void 0 !== n ? n : [], this.generation), null != e.lastMessages && (a.localNeeded = !1)
                }
                handleConnectionOpen(e) {
                    if (!(0, d.default)()) return !1;
                    for (let t of (this.generation += 1, e.guilds)) this.handleOneGuildCreate(t)
                }
                handleGuildCreate(e) {
                    if (!(0, d.default)()) return !1;
                    this.handleOneGuildCreate(e.guild)
                }
                handleGuildDelete(e) {
                    if (!(0, d.default)()) return !1;
                    this.guilds.delete(e.guild.id)
                }
                handleMessageCreate(e) {
                    var t;
                    if (!(0, d.default)() || e.optimistic || e.isPushNotification) return !1;
                    this.data(null !== (t = e.guildId) && void 0 !== t ? t : null).put(e.message.channel_id, e.message, this.generation)
                }
                handleMessageDelete(e) {
                    var t, n;
                    if (!(0, d.default)()) return !1;
                    let a = null !== (n = e.guildId) && void 0 !== n ? n : null,
                        s = null === (t = this.data(a)) || void 0 === t ? void 0 : t.messageId(e.channelId);
                    if (s === e.id) {
                        let t = o.default.getMessages(e.channelId),
                            n = t.hasMoreAfter ? null : t.last();
                        null != n ? this.data(a).put(e.channelId, n, this.generation) : this.data(a).delete(e.channelId)
                    }
                }
                handleMessageUpdate(e) {
                    var t;
                    if (!(0, d.default)()) return;
                    let n = null !== (t = e.guildId) && void 0 !== t ? t : null,
                        a = e.message.channel_id,
                        s = e.message.id;
                    if (null == a || null == s) return !1;
                    let l = this.data(n),
                        i = null == l ? void 0 : l.messageId(a);
                    if (i !== s) return !1;
                    null == l || l.update(e.message)
                }
                handleThreadListSync(e) {
                    var t;
                    if (!(0, d.default)()) return !1;
                    this.data(e.guildId).putMany(null !== (t = e.mostRecentMessages) && void 0 !== t ? t : [], this.generation)
                }
                handleLoadMessagesSuccess(e) {
                    if (!(0, d.default)()) return;
                    let t = r.default.getBasicChannel(e.channelId);
                    if (null != t) {
                        var n;
                        (0, l.requireSortedDescending)(e.messages), this.data(t.guild_id).putNew(e.channelId, null !== (n = e.messages[0]) && void 0 !== n ? n : null, this.generation)
                    }
                }
                handleLocalMessagesLoaded(e) {
                    if (!(0, d.default)()) return;
                    let t = r.default.getBasicChannel(e.channelId);
                    if (null != t) {
                        var n;
                        (0, l.requireSortedDescending)(e.messages), this.data(t.guild_id).putNew(e.channelId, null !== (n = e.messages[0]) && void 0 !== n ? n : null, c)
                    }
                }
                handleMessagePreviewsLoaded(e) {
                    if (!(0, d.default)()) return;
                    E.log("adding remote previews (guildId: ".concat(e.guildId, ", messages: ").concat(e.messages.length, ")"));
                    let t = this.data(e.guildId);
                    for (let n of e.messages) !t.isLatest(n.channel_id, this.generation) && t.put(n.channel_id, n, this.generation)
                }
                handleMessagePreviewsLocallyLoaded(e) {
                    if (!(0, d.default)()) return;
                    E.log("adding local previews (guildId: ".concat(e.guildId, ", messages: ").concat(e.messages.length, ")"));
                    let t = this.data(e.guildId);
                    for (let [n, a] of e.messages) !t.has(n) && t.put(n, a, c);
                    t.localNeeded = !1
                }
                handleLogout(e) {
                    this.guilds.clear()
                }
                constructor() {
                    super(s.default, {
                        CONNECTION_OPEN: e => this.handleConnectionOpen(e),
                        GUILD_CREATE: e => this.handleGuildCreate(e),
                        GUILD_DELETE: e => this.handleGuildDelete(e),
                        LOAD_MESSAGES_SUCCESS: e => this.handleLoadMessagesSuccess(e),
                        LOCAL_MESSAGES_LOADED: e => this.handleLocalMessagesLoaded(e),
                        LOGOUT: e => this.handleLogout(e),
                        MESSAGE_CREATE: e => this.handleMessageCreate(e),
                        MESSAGE_DELETE: e => this.handleMessageDelete(e),
                        MESSAGE_PREVIEWS_LOADED: e => this.handleMessagePreviewsLoaded(e),
                        MESSAGE_PREVIEWS_LOCALLY_LOADED: e => this.handleMessagePreviewsLocallyLoaded(e),
                        MESSAGE_UPDATE: e => this.handleMessageUpdate(e),
                        THREAD_LIST_SYNC: e => this.handleThreadListSync(e)
                    }), this.guilds = new Map, this.generation = 0
                }
            }
            new f
        },
        344442: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PreviewData: function() {
                    return r
                }
            });
            var a = n("249654"),
                s = n("692038"),
                l = n("719926"),
                i = n("660478");
            class r {
                isLatest(e, t) {
                    return this.messageGeneration(e, t) === t
                }
                messageGeneration(e, t) {
                    let n = this.messages.get(e);
                    return null == n ? -1 / 0 : n.generation !== t && null != n.message && n.message.id === i.default.lastMessageId(e) ? (this.messages.set(e, {
                        ...n,
                        generation: t
                    }), t) : n.generation
                }
                messageId(e) {
                    var t, n;
                    let a = this.messages.get(e);
                    return null !== (n = null == a ? void 0 : null === (t = a.message) || void 0 === t ? void 0 : t.id) && void 0 !== n ? n : null
                }
                messageRecord(e) {
                    var t;
                    let n = this.messages.get(e);
                    return null != n && null != n.message && !(n.message instanceof l.default) && (n.message = (0, s.createMessageRecord)(n.message)), null !== (t = null == n ? void 0 : n.message) && void 0 !== t ? t : null
                }
                has(e) {
                    return this.messages.has(e)
                }
                put(e, t, n) {
                    this.messages.set(e, {
                        message: t,
                        generation: n
                    })
                }
                putNew(e, t, n) {
                    var s;
                    let l = this.messages.get(e);
                    null != t && function(e, t) {
                        return null == t || a.default.compare(e, t) > 0
                    }(t.id, null == l ? void 0 : null === (s = l.message) || void 0 === s ? void 0 : s.id) && this.put(e, t, n)
                }
                putMany(e, t) {
                    for (let n of e) this.put(n.channel_id, n, t)
                }
                update(e) {
                    var t;
                    if (null == e.id || null == e.channel_id) return;
                    let n = e.channel_id,
                        a = this.messages.get(n);
                    if ((null == a ? void 0 : null === (t = a.message) || void 0 === t ? void 0 : t.id) !== e.id) return;
                    let i = a.message instanceof l.default ? (0, s.updateMessageRecord)(a.message, e) : (0, s.updateServerMessage)(a.message, e);
                    this.messages.set(n, {
                        ...a,
                        message: i
                    })
                }
                delete(e) {
                    this.messages.delete(e)
                }
                constructor() {
                    this.localNeeded = !0, this.messages = new Map
                }
            }
        },
        255608: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("21121"),
                s = n("771382");

            function l() {
                return (0, a.isInMainTabsExperiment)() || (0, s.isOldUIMessagesTabEnabled)()
            }
        },
        460929: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                sortChannelIds: function() {
                    return s
                }
            });
            var a = n("249654");

            function s(e) {
                return e.sort((e, t) => a.default.compare(e.lastMessageId, t.lastMessageId)).reverse()
            }
        },
        803524: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useListHasSingleMessageRequest: function() {
                    return u
                },
                useListHasSingleSpamMessageRequest: function() {
                    return d
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("288518"),
                i = n("486503"),
                r = n("260488"),
                o = n("452229");

            function u() {
                let e = (0, r.useMessageRequestsCount)(),
                    t = a.useRef(e),
                    n = (0, s.useStateFromStores)([l.default], () => l.default.isReady()),
                    i = a.useRef(n);
                return a.useEffect(() => {
                    n && !i.current && (i.current = !0, t.current = e)
                }, [n, e]), t.current <= 1 && 1 === e
            }

            function d() {
                let e = (0, o.useSpamMessageRequestCount)(),
                    t = a.useRef(e),
                    n = (0, s.useStateFromStores)([i.default], () => i.default.isReady()),
                    l = a.useRef(n);
                return a.useEffect(() => {
                    n && !l.current && (l.current = !0, t.current = e)
                }, [n, e]), t.current <= 1 && 1 === e
            }
        },
        91830: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMessageRequestRelativeTimestampText: function() {
                    return o
                }
            }), n("866227");
            var a = n("249654"),
                s = n("446674"),
                l = n("487269"),
                i = n("660478"),
                r = n("389495");

            function o(e) {
                let t = (0, r.useMessageRequestPreview)(e),
                    n = (0, s.useStateFromStores)([i.default], () => i.default.lastMessageId(e.id)),
                    o = function(e) {
                        let {
                            lastMessageId: t,
                            message: n,
                            loaded: s
                        } = e;
                        return s && null != n ? a.default.extractTimestamp(n.id) : null != t ? a.default.extractTimestamp(t) : null
                    }({
                        lastMessageId: n,
                        ...t
                    });
                return null == o ? "" : (0, l.getTimestampString)(o)
            }
        },
        639547: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useShouldShowMessageRequestsRow: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("288518"),
                l = n("415435"),
                i = n("486503");

            function r() {
                return (0, a.useStateFromStores)([s.default, i.default], () => (0, l.shouldShowMessageRequests)([s.default, i.default]))
            }
        },
        500526: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("42203"),
                i = n("697218"),
                r = n("288518"),
                o = n("460929");

            function u() {
                let e = (0, s.useStateFromStores)([l.default], () => l.default.getPrivateChannelsVersion()),
                    t = (0, s.useStateFromStoresArray)([l.default, r.default], () => {
                        let e = l.default.getMutablePrivateChannels(),
                            t = Array.from(r.default.getMessageRequestChannelIds()).map(t => e[t]).filter(e => null != e);
                        return (0, o.sortChannelIds)(t)
                    }, [e]),
                    n = (0, s.useStateFromStoresObject)([i.default], () => {
                        let e = {};
                        return t.forEach(t => {
                            let n = i.default.getUser(t.recipients[0]);
                            null != n && (e[t.id] = n)
                        }), e
                    }, [t]),
                    u = a.useMemo(() => t.map(e => ({
                        channel: e,
                        user: n[e.id]
                    })), [t, n]);
                return u
            }
        },
        521702: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("42203"),
                i = n("697218"),
                r = n("460929"),
                o = n("486503");

            function u() {
                let e = (0, s.useStateFromStores)([l.default], () => l.default.getPrivateChannelsVersion()),
                    t = (0, s.useStateFromStoresArray)([l.default, o.default], () => {
                        let e = l.default.getMutablePrivateChannels(),
                            t = Array.from(o.default.getSpamChannelIds()).map(t => e[t]).filter(e => null != e);
                        return (0, r.sortChannelIds)(t)
                    }, [e]),
                    n = (0, s.useStateFromStoresObject)([i.default], () => {
                        let e = {};
                        return t.forEach(t => {
                            let n = i.default.getUser(t.recipients[0]);
                            null != n && (e[t.id] = n)
                        }), e
                    }, [t]),
                    u = a.useMemo(() => t.map(e => ({
                        channel: e,
                        user: n[e.id]
                    })), [t, n]);
                return u
            }
        },
        452229: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSpamMessageRequestCount: function() {
                    return l
                }
            });
            var a = n("446674"),
                s = n("486503");

            function l() {
                return (0, a.useStateFromStores)([s.default], () => s.default.getSpamChannelsCount())
            }
        },
        24927: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("458960"),
                o = n("974667"),
                u = n("77078"),
                d = n("272030"),
                c = n("973199"),
                E = n("649678"),
                f = function(e) {
                    let {
                        children: t,
                        user: l,
                        channel: f,
                        onClick: _,
                        isFocused: I,
                        isActive: h,
                        onOtherHover: C,
                        className: T
                    } = e, [m, S] = s.useState(!1), [N, A] = s.useState(!1), p = () => {
                        if (S(!0), I && !h && !N) null == C || C()
                    }, g = () => {
                        S(!1)
                    }, R = (e, t) => {
                        null != t && (A(!0), (0, d.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: () => {
                                A(!1)
                            }
                        }))
                    };
                    return (0, a.jsx)(o.ListNavigatorItem, {
                        id: f.id,
                        children: e => (0, a.jsx)(u.FocusRing, {
                            offset: {
                                left: -8,
                                right: -8
                            },
                            children: (0, a.jsx)(r.default.div, {
                                className: i(E.messageRequestItem, T, {
                                    [E.active]: h || N
                                }),
                                onContextMenu: e => R(e, l),
                                onMouseEnter: p,
                                onMouseLeave: g,
                                onClick: null != _ ? _ : void 0,
                                style: {
                                    LIST_ROW_HEIGHT: c.LIST_ROW_HEIGHT,
                                    opacity: 1
                                },
                                ...e,
                                children: t(m || h || N)
                            })
                        })
                    })
                }
        },
        598156: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return el
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("974667"),
                o = n("432710"),
                u = n("446674"),
                d = n("151426"),
                c = n("77078"),
                E = n("939488"),
                f = n("737960"),
                _ = n("74456"),
                I = n("206230"),
                h = n("302437"),
                C = n("665182"),
                T = n("442174"),
                m = n("69927"),
                S = n("10641"),
                N = n("509802"),
                A = n("539938"),
                p = n("155084"),
                g = n("393414"),
                R = n("582713"),
                O = n("970366"),
                L = n("5667"),
                M = n("161778"),
                v = n("982108"),
                D = n("42203"),
                x = n("778588"),
                P = n("556081"),
                y = n("826684"),
                b = n("599110"),
                U = n("439932"),
                G = n("288518"),
                j = n("486503"),
                F = n("916650"),
                k = n("803524"),
                B = n("7643"),
                w = n("785770"),
                H = n("260488"),
                V = n("500526"),
                Y = n("452229"),
                W = n("196986"),
                K = n("410560"),
                z = n("433591"),
                q = n("973199"),
                Q = n("49111"),
                X = n("782340"),
                J = n("618223"),
                Z = n("305794");

            function $() {
                let e = s.useRef(null),
                    t = (0, H.useMessageRequestsCount)(),
                    n = (0, V.default)(),
                    l = (0, k.useListHasSingleMessageRequest)(),
                    u = (0, _.useIsRejectAllMessageRequestsEnabled)(),
                    d = s.useCallback(() => {
                        (0, c.showToast)((0, c.createToast)(X.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, c.ToastType.FAILURE))
                    }, []),
                    {
                        rejectAll: E
                    } = (0, B.useMessageRequestActions)({
                        onError: d
                    }),
                    f = (0, h.default)("message-requests-list"),
                    {
                        channelId: I
                    } = (0, w.useMessageRequestSidebarState)(),
                    C = s.useCallback(() => {
                        let e = n.map(e => e.channel.id);
                        E(e)
                    }, [n, E]),
                    T = s.useCallback(e => {
                        var t, s;
                        let {
                            row: r
                        } = e, o = n[r], u = null === (s = n[r + 1]) || void 0 === s ? void 0 : null === (t = s.channel) || void 0 === t ? void 0 : t.id, d = o.channel.id, c = null != I && I === d, E = null != I && I === u;
                        return (0, a.jsx)(K.default, {
                            className: i({
                                [J.selected]: c,
                                [J.siblingSelected]: E
                            }),
                            channel: o.channel,
                            user: o.user,
                            hasSingleMessageRequest: l
                        }, d)
                    }, [l, n, I]),
                    m = s.useCallback(() => (0, a.jsxs)(y.default, {
                        className: J.sectionTitle,
                        children: [t > 0 ? X.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE_WITH_COUNT.format({
                            count: t
                        }) : X.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE, u && t > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(c.Text, {
                                className: J.titleDivider,
                                variant: "eyebrow",
                                color: "header-secondary",
                                tag: "span",
                                children: "•"
                            }), (0, a.jsx)(c.Button, {
                                onClick: C,
                                look: c.ButtonLooks.LINK,
                                color: c.ButtonColors.LINK,
                                size: c.ButtonSizes.SMALL,
                                className: J.clearAllButton,
                                "aria-label": X.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                                children: X.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL
                            })]
                        }) : null]
                    }, "title"), [t, C, u]);
                return (n.length !== t && p.default.increment({
                    name: o.MetricEvents.MESSAGE_REQUEST_COUNT_DRIFT
                }), 0 === n.length) ? (0, a.jsx)(W.default, {
                    section: q.MessageRequestSections.REQUESTS
                }) : (0, a.jsx)(r.ListNavigatorProvider, {
                    navigator: f,
                    children: (0, a.jsx)(r.ListNavigatorContainer, {
                        children: t => {
                            let {
                                ref: s,
                                role: l,
                                ...i
                            } = t;
                            return (0, a.jsx)(c.List, {
                                className: J.list,
                                innerRole: l,
                                innerAriaLabel: X.default.Messages.MESSAGE_REQUESTS,
                                ref: t => {
                                    var n;
                                    e.current = t, s.current = null !== (n = null == t ? void 0 : t.getScrollerNode()) && void 0 !== n ? n : null
                                },
                                paddingTop: 24,
                                paddingBottom: 24,
                                sectionHeight: q.LIST_SECTION_HEIGHT,
                                rowHeight: q.LIST_ROW_HEIGHT,
                                renderSection: m,
                                renderRow: T,
                                sections: [n.length],
                                chunkSize: 30,
                                fade: !0,
                                ...i
                            }, "message-requests-list")
                        }
                    })
                })
            }

            function ee(e) {
                let {
                    pageWidth: t,
                    onSidebarResize: n
                } = e, s = (0, u.useStateFromStores)([v.default], () => v.default.getSidebarState(v.MESSAGE_REQUESTS_BASE_CHANNEL_ID)), l = (0, u.useStateFromStores)([D.default], () => D.default.getChannel(null == s ? void 0 : s.channelId));
                if (null == s || s.type !== R.SidebarType.VIEW_MESSAGE_REQUEST || null == l || !l.isPrivate()) return null;
                let i = t - Q.DEFAULT_MESSAGE_REQUEST_SIDEBAR_WIDTH;
                return (0, a.jsx)(C.default, {
                    sidebarType: C.ChatSidebarType.MessageRequestSidebar,
                    maxWidth: i,
                    onWidthChange: n,
                    children: (0, a.jsx)(T.default, {
                        channel: l,
                        baseChannelId: v.MESSAGE_REQUESTS_BASE_CHANNEL_ID
                    })
                })
            }
            let et = function(e) {
                    let {
                        markAsDismissed: t
                    } = e;
                    return (0, a.jsx)(L.default, {
                        header: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_TITLE,
                        content: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONTENT_TEENS,
                        buttonCTA: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_DISMISS,
                        className: J.messageRequestCoachmark,
                        onClick: t,
                        markAsDismissed: t,
                        caretPosition: L.CaretPosition.TOP_CENTER,
                        headerClassName: J.header
                    })
                },
                en = e => {
                    let t = (0, F.default)(),
                        n = () => x.default.hasLayers() || (0, c.hasAnyModalOpen)(),
                        l = (0, u.useStateFromStores)([I.default], () => I.default.useReducedMotion);
                    return s.useEffect(() => {
                        (0, S.requestMarkDismissibleContentAsShown)(d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK)
                    }, []), (0, a.jsx)(N.default, {
                        contentTypes: [d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK],
                        children: s => {
                            let {
                                visibleContent: i,
                                markAsDismissed: r
                            } = s;
                            if (i === d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK) return (0, a.jsx)(c.Popout, {
                                renderPopout: () => t ? (0, a.jsx)(et, {
                                    markAsDismissed: r
                                }) : (0, a.jsx)(L.default, {
                                    header: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_TITLE,
                                    content: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONTENT,
                                    buttonCTA: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONFIRM,
                                    secondaryButtonCTA: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_DISMISS,
                                    className: J.messageRequestCoachmark,
                                    onClick: e => {
                                        e.stopPropagation(), (0, g.transitionTo)(Q.Routes.SETTINGS("privacy-and-safety"))
                                    },
                                    markAsDismissed: r,
                                    caretPosition: L.CaretPosition.TOP_CENTER,
                                    headerClassName: J.header
                                }),
                                position: "bottom",
                                align: "center",
                                animation: l ? c.Popout.Animation.NONE : c.Popout.Animation.TRANSLATE,
                                shouldShow: !n(),
                                spacing: 16,
                                children: () => e.children
                            });
                            return e.children
                        }
                    })
                };

            function ea(e) {
                let {
                    section: t
                } = e;
                return t === q.MessageRequestSections.SPAM ? (0, a.jsx)(z.default, {}) : (0, a.jsx)($, {})
            }
            let es = (0, f.default)(function(e) {
                let {
                    width: t
                } = e, n = (0, H.useMessageRequestsCount)();
                s.useEffect(() => {
                    E.setHomeLink(Q.Routes.MESSAGE_REQUESTS), (0, O.trackAppUIViewed)("message-requests"), b.default.track(Q.AnalyticEvents.MESSAGE_REQUESTS_VIEWED, {
                        num_message_requests: n
                    }), p.default.increment({
                        name: o.MetricEvents.MESSAGE_REQUEST_VIEW
                    })
                }, []);
                let l = (0, u.useStateFromStores)([M.default], () => M.default.theme),
                    r = (0, Y.useSpamMessageRequestCount)(),
                    [d, f] = s.useState(!1),
                    _ = (0, u.useStateFromStores)([v.default, G.default, j.default], () => {
                        let e = v.default.getSidebarState(v.MESSAGE_REQUESTS_BASE_CHANNEL_ID);
                        return null != e && e.type === R.SidebarType.VIEW_MESSAGE_REQUEST && (G.default.isMessageRequest(e.channelId) || j.default.isSpam(e.channelId))
                    }),
                    [I, h] = s.useState(q.MessageRequestSections.REQUESTS);
                return (0, m.usePageTitle)({
                    location: X.default.Messages.MESSAGE_REQUESTS
                }), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: i(Z.chat, J.container, {
                            [Z.threadSidebarOpen]: _,
                            [Z.threadSidebarFloating]: _ && d
                        }),
                        children: [(0, a.jsxs)(A.default, {
                            className: (0, U.getThemeClass)(l),
                            toolbar: !0,
                            children: [(0, a.jsx)(A.default.Icon, {
                                icon: P.default,
                                "aria-hidden": !0
                            }), (0, a.jsx)(en, {
                                children: (0, a.jsx)(A.default.Title, {
                                    children: X.default.Messages.MESSAGE_REQUESTS
                                })
                            }), (0, a.jsx)(A.default.Divider, {}), (0, a.jsxs)(c.TabBar, {
                                "aria-label": X.default.Messages.MESSAGE_REQUESTS,
                                selectedItem: I,
                                type: "top-pill",
                                onItemSelect: e => {
                                    h(e)
                                },
                                className: J.tabBar,
                                children: [(0, a.jsx)(c.TabBar.Item, {
                                    id: q.MessageRequestSections.REQUESTS,
                                    className: J.item,
                                    children: X.default.Messages.MESSAGE_REQUESTS_REQUESTS_TAB_TITLE
                                }), (0, a.jsx)(c.TabBar.Item, {
                                    id: q.MessageRequestSections.SPAM,
                                    className: J.item,
                                    children: 0 === r ? X.default.Messages.MESSAGE_REQUESTS_SPAM_TAB_TITLE : X.default.Messages.MESSAGE_REQUESTS_SPAM_TAB_TITLE_WITH_COUNT.format({
                                        count: r
                                    })
                                })]
                            })]
                        }), (0, a.jsx)("div", {
                            className: Z.content,
                            children: (0, a.jsx)(ea, {
                                section: I
                            })
                        })]
                    }), _ && (0, a.jsx)(ee, {
                        pageWidth: t,
                        onSidebarResize: (e, t) => {
                            f(t)
                        }
                    })]
                })
            });
            var el = es
        },
        214621: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("70845"),
                d = n("95045"),
                c = n("845579"),
                E = n("957255"),
                f = n("27618"),
                _ = n("505684"),
                I = n("93427"),
                h = n("389495"),
                C = n("49111"),
                T = n("719347"),
                m = n("782340"),
                S = n("863452"),
                N = n("632215");
            let A = s.memo(function(e) {
                let {
                    channel: t
                } = e, {
                    loaded: n,
                    error: l,
                    message: A
                } = (0, h.useMessageRequestPreview)(t), p = (0, r.useStateFromStores)([f.default], () => null != A && f.default.isBlocked(A.author.id), [A]), g = (0, r.useStateFromStores)([E.default], () => E.default.can(C.Permissions.MANAGE_MESSAGES, t)), R = c.RenderSpoilers.useSetting(), {
                    content: O
                } = s.useMemo(() => (null == A ? void 0 : A.content) != null && "" !== A.content ? (0, d.default)(A, {
                    formatInline: !0,
                    noStyleAndInteraction: !0
                }) : {
                    content: null
                }, [A]), L = null;
                if (l) L = (0, a.jsx)(o.Text, {
                    className: S.messageReplacement,
                    variant: "text-sm/normal",
                    color: "text-muted",
                    children: m.default.Messages.MESSAGE_REQUESTS_ERROR_LOADING_PREVIEW
                });
                else if (n) {
                    if (null != A && p) L = (0, a.jsx)(o.Text, {
                        className: S.messageReplacement,
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: m.default.Messages.MESSAGE_REQUESTS_BLOCKED_MESSAGE
                    });
                    else if (null != A) {
                        let {
                            contentPlaceholder: e,
                            renderedContent: t
                        } = (0, I.renderSingleLineMessage)(A, O, p, i(S.messageContent, N.inlineFormat, N.smallFontSize), {
                            iconClass: S.messageContentIcon,
                            iconSize: T.SINGLE_LINE_MESSAGE_DEFAULT_ICON_SIZE
                        });
                        L = null != t ? (0, a.jsx)(o.Text, {
                            variant: "text-sm/normal",
                            color: "text-muted",
                            className: S.messageContent,
                            children: t
                        }) : (0, a.jsx)(o.Text, {
                            tag: "span",
                            variant: "text-sm/normal",
                            color: "text-muted",
                            className: S.messageReplacement,
                            children: e
                        })
                    } else L = (0, a.jsx)(o.Text, {
                        className: S.messageReplacement,
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: m.default.Messages.MESSAGE_REQUESTS_DELETED_MESSAGE
                    })
                } else L = null;
                return (0, a.jsx)(_.ObscuredDisplayContext.Provider, {
                    value: (0, u.default)(R, g),
                    children: (0, a.jsx)(o.FocusBlock, {
                        className: S.messageFocusBlock,
                        children: L
                    })
                })
            });
            var p = A
        },
        98708: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("145079"),
                r = n("206230"),
                o = n("606292"),
                u = n("688318"),
                d = n("843962"),
                c = n("27618"),
                E = n("158998"),
                f = n("50885"),
                _ = n("91830"),
                I = n("214621"),
                h = n("782340"),
                C = n("556559");
            let T = f.default.getEnableHardwareAcceleration() ? l.AnimatedAvatar : l.Avatar;

            function m(e) {
                var t;
                let {
                    channel: n,
                    otherUser: f,
                    active: m
                } = e, S = (0, s.useStateFromStores)([r.default], () => r.default.useReducedMotion), N = (0, s.useStateFromStores)([c.default], () => null == f ? null : c.default.getNickname(f.id)), A = !S && m, p = (0, _.useMessageRequestRelativeTimestampText)(n), {
                    avatarDecorationSrc: g
                } = (0, u.default)({
                    user: f,
                    size: (0, o.getDecorationSizeForAvatarSize)(l.AvatarSizes.SIZE_40),
                    animateOnHover: !0
                });
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(T, {
                        className: C.avatar,
                        src: (0, d.getChannelIconURL)(n, 40, A),
                        avatarDecoration: g,
                        size: l.AvatarSizes.SIZE_40,
                        "aria-label": null !== (t = null == f ? void 0 : f.username) && void 0 !== t ? t : h.default.Messages.UNKNOWN_USER
                    }), (0, a.jsxs)("div", {
                        className: C.userPreview,
                        children: [(0, a.jsxs)("div", {
                            className: C.userContainerWithPreview,
                            children: [(0, a.jsx)(i.default, {
                                nick: N,
                                user: f,
                                showAccountIdentifier: !0,
                                className: C.tagContainer,
                                usernameClass: C.username,
                                discriminatorClass: null != E.default.getGlobalName(f) ? C.globalName : C.discriminator
                            }), (0, a.jsx)(l.Text, {
                                className: C.timestampWithPreview,
                                color: "text-muted",
                                variant: "text-xs/normal",
                                children: p
                            })]
                        }), (0, a.jsx)("div", {
                            className: C.messagePreview,
                            children: (0, a.jsx)(I.default, {
                                channel: n
                            })
                        })]
                    })]
                })
            }
        },
        196986: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("161778"),
                i = n("941886"),
                r = n("973199"),
                o = n("782340"),
                u = n("772473"),
                d = n("855143"),
                c = n("934516");

            function E(e) {
                let {
                    section: t
                } = e, n = (0, s.useStateFromStores)([l.default], () => l.default.theme);
                return (0, a.jsxs)(i.default, {
                    theme: n,
                    className: u.emptyStateContainer,
                    children: [(0, a.jsx)(i.default.Image, {
                        width: 415,
                        height: 200,
                        lightSrc: c,
                        darkSrc: d
                    }), (0, a.jsx)(i.default.Text, {
                        note: t === r.MessageRequestSections.SPAM ? o.default.Messages.MESSAGE_REQUESTS_SPAM_EMPTY_STATE_BODY : o.default.Messages.MESSAGE_REQUESTS_EMPTY_STATE_BODY
                    })]
                })
            }
        },
        410560: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("208021"),
                l = n("982108"),
                i = n("599110"),
                r = n("659500"),
                o = n("785770"),
                u = n("24927"),
                d = n("410688"),
                c = n("49111");

            function E(e) {
                let {
                    className: t,
                    channel: n,
                    user: E,
                    hasSingleMessageRequest: f
                } = e, {
                    channelId: _
                } = (0, o.useMessageRequestSidebarState)();
                return (0, a.jsx)(u.default, {
                    className: t,
                    isFocused: _ === n.id,
                    channel: n,
                    user: E,
                    onClick: e => {
                        e.stopPropagation(), s.default.openPrivateChannelAsSidebar({
                            channelId: n.id,
                            baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                            hasSingleMessageRequest: f
                        }), i.default.track(c.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                            is_spam: !1,
                            channel_id: n.id,
                            other_user_id: E.id
                        }), setTimeout(() => {
                            r.ComponentDispatch.dispatch(c.ComponentActions.FOCUS_CHANNEL_TEXT_AREA, {
                                channelId: n.id
                            })
                        }, 0)
                    },
                    children: e => (0, a.jsx)(d.PendingMessageRequestRowItem, {
                        active: e,
                        user: E,
                        channel: n
                    })
                })
            }
        },
        410688: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PendingMessageRequestRowItem: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("144491"),
                r = n("208021"),
                o = n("982108"),
                u = n("803524"),
                d = n("7643"),
                c = n("98708"),
                E = n("782340"),
                f = n("727447");

            function _(e) {
                let {
                    active: t,
                    user: n,
                    channel: _
                } = e, I = (0, u.useListHasSingleMessageRequest)(), h = s.useCallback(() => {
                    (0, l.showToast)((0, l.createToast)(E.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, l.ToastType.FAILURE))
                }, []), C = s.useCallback(() => {
                    r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID)
                }, []), T = s.useCallback(() => {
                    r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID), I && (0, i.transitionToChannel)(_.id)
                }, [_.id, I]), {
                    acceptMessageRequest: m,
                    rejectMessageRequest: S,
                    isAcceptLoading: N,
                    isRejectLoading: A,
                    isUserProfileLoading: p,
                    isOptimisticAccepted: g,
                    isOptimisticRejected: R
                } = (0, d.useMessageRequestActions)({
                    user: n,
                    onAcceptSuccess: T,
                    onRejectSuccess: C,
                    onError: h
                }), O = N || A || p || g || R;
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)(c.default, {
                        channel: _,
                        otherUser: n,
                        active: t
                    }), (0, a.jsxs)("div", {
                        className: f.actions,
                        children: [(0, a.jsx)(l.Button, {
                            className: f.button,
                            color: l.ButtonColors.PRIMARY,
                            size: l.Button.Sizes.SMALL,
                            onClick: e => {
                                e.stopPropagation(), S(_.id)
                            },
                            disabled: O,
                            submitting: A || R,
                            children: E.default.Messages.MESSAGE_REQUEST_IGNORE
                        }), (0, a.jsx)(l.Button, {
                            className: f.button,
                            color: l.ButtonColors.BRAND,
                            size: l.Button.Sizes.SMALL,
                            onClick: e => {
                                e.stopPropagation(), m(_.id)
                            },
                            disabled: O,
                            submitting: N || p || g,
                            children: E.default.Messages.MESSAGE_REQUEST_ACCEPT
                        })]
                    })]
                })
            }
        },
        92918: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("208021"),
                l = n("982108"),
                i = n("599110"),
                r = n("659500"),
                o = n("24927"),
                u = n("745772"),
                d = n("49111");

            function c(e) {
                let {
                    className: t,
                    channel: n,
                    user: c,
                    hasSingleMessageRequest: E
                } = e;
                return (0, a.jsx)(o.default, {
                    className: t,
                    isFocused: !1,
                    channel: n,
                    user: c,
                    onClick: e => {
                        e.stopPropagation(), s.default.openPrivateChannelAsSidebar({
                            channelId: n.id,
                            baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                            hasSingleMessageRequest: E
                        }), i.default.track(d.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                            is_spam: !0,
                            channel_id: n.id,
                            other_user_id: c.id
                        }), setTimeout(() => {
                            r.ComponentDispatch.dispatch(d.ComponentActions.FOCUS_CHANNEL_TEXT_AREA, {
                                channelId: n.id
                            })
                        }, 0)
                    },
                    children: e => (0, a.jsx)(u.default, {
                        active: e,
                        user: c,
                        channel: n
                    })
                })
            }
        },
        433591: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("355262"),
                o = n("432710"),
                u = n("77078"),
                d = n("74456"),
                c = n("302437"),
                E = n("155084"),
                f = n("826684"),
                _ = n("599110"),
                I = n("803524"),
                h = n("7643"),
                C = n("785770"),
                T = n("521702"),
                m = n("452229"),
                S = n("196986"),
                N = n("92918"),
                A = n("973199"),
                p = n("49111"),
                g = n("782340"),
                R = n("127671");

            function O() {
                let e = s.useRef(null),
                    t = (0, T.default)(),
                    n = (0, m.useSpamMessageRequestCount)(),
                    l = (0, I.useListHasSingleSpamMessageRequest)(),
                    O = (0, d.useIsRejectAllMessageRequestsEnabled)(),
                    L = (0, c.default)("message-requests-spam-list"),
                    {
                        channelId: M
                    } = (0, C.useMessageRequestSidebarState)(),
                    v = s.useCallback(() => {
                        (0, u.showToast)((0, u.createToast)(g.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, u.ToastType.FAILURE))
                    }, []),
                    {
                        rejectAll: D
                    } = (0, h.useMessageRequestActions)({
                        onError: v
                    }),
                    x = s.useCallback(() => {
                        let e = t.map(e => e.channel.id);
                        D(e)
                    }, [t, D]);
                s.useEffect(() => {
                    _.default.track(p.AnalyticEvents.SPAM_MESSAGE_REQUESTS_VIEWED, {
                        num_spam_message_requests: n
                    }), E.default.increment({
                        name: o.MetricEvents.SPAM_MESSAGE_REQUEST_VIEW
                    })
                }, []);
                let P = s.useCallback(e => {
                        var n, s;
                        let {
                            row: r
                        } = e, o = t[r], u = null === (s = t[r + 1]) || void 0 === s ? void 0 : null === (n = s.channel) || void 0 === n ? void 0 : n.id, d = o.channel.id, c = null != M && M === d, E = null != M && M === u;
                        return (0, a.jsx)(N.default, {
                            className: i({
                                [R.selected]: c,
                                [R.siblingSelected]: E
                            }),
                            channel: o.channel,
                            user: o.user,
                            hasSingleMessageRequest: l
                        }, d)
                    }, [t, l, M]),
                    y = s.useCallback(() => (0, a.jsxs)(f.default, {
                        className: R.sectionTitle,
                        children: [g.default.Messages.MESSAGE_REQUESTS_SPAM_HEADER.format({
                            count: n
                        }), O && n > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(u.Text, {
                                className: R.titleDivider,
                                variant: "eyebrow",
                                color: "header-secondary",
                                tag: "span",
                                children: "•"
                            }), (0, a.jsx)(u.Button, {
                                onClick: x,
                                look: u.ButtonLooks.LINK,
                                color: u.ButtonColors.LINK,
                                size: u.ButtonSizes.SMALL,
                                className: R.clearAllButton,
                                "aria-label": g.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                                children: g.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL
                            })]
                        }) : null]
                    }, "message-requests-spam-title"), [n, x, O]);
                return 0 === t.length ? (0, a.jsx)(S.default, {
                    section: A.MessageRequestSections.SPAM
                }) : (0, a.jsx)(r.ListNavigatorProvider, {
                    navigator: L,
                    children: (0, a.jsx)(r.ListNavigatorContainer, {
                        children: n => {
                            let {
                                ref: s,
                                role: l,
                                ...i
                            } = n;
                            return (0, a.jsx)(u.List, {
                                className: R.list,
                                innerRole: l,
                                innerAriaLabel: g.default.Messages.MESSAGE_REQUESTS,
                                ref: t => {
                                    var n;
                                    e.current = t, s.current = null !== (n = null == t ? void 0 : t.getScrollerNode()) && void 0 !== n ? n : null
                                },
                                paddingTop: 24,
                                paddingBottom: 24,
                                sectionHeight: A.LIST_SECTION_HEIGHT,
                                rowHeight: A.LIST_ROW_HEIGHT,
                                renderSection: y,
                                renderRow: P,
                                sections: [t.length],
                                chunkSize: 30,
                                fade: !0,
                                ...i
                            }, "message-requests-spam-list")
                        }
                    })
                })
            }
        },
        745772: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("432710"),
                i = n("77078"),
                r = n("155084"),
                o = n("144491"),
                u = n("208021"),
                d = n("982108"),
                c = n("803524"),
                E = n("7643"),
                f = n("98708"),
                _ = n("28424"),
                I = n("782340"),
                h = n("578484");

            function C(e) {
                let {
                    active: t,
                    user: n,
                    channel: C
                } = e, T = (0, c.useListHasSingleSpamMessageRequest)(), m = s.useCallback(() => {
                    (0, i.showToast)((0, i.createToast)(I.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE, i.ToastType.FAILURE)), r.default.increment({
                        name: l.MetricEvents.SPAM_MESSAGE_REQUEST_ERROR_VIEW
                    })
                }, []), S = s.useCallback(() => {
                    u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID)
                }, []), N = s.useCallback(() => {
                    u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID), T && (0, o.transitionToChannel)(C.id)
                }, [C.id, T]), {
                    acceptMessageRequest: A,
                    isAcceptLoading: p,
                    isUserProfileLoading: g,
                    isOptimisticAccepted: R
                } = (0, E.useMessageRequestActions)({
                    user: n,
                    onAcceptSuccess: N,
                    onRejectSuccess: S,
                    onError: m
                }), O = p || g;
                return (0, a.jsxs)("div", {
                    className: h.container,
                    children: [(0, a.jsx)(f.default, {
                        otherUser: n,
                        channel: C,
                        active: t
                    }), (0, a.jsxs)("div", {
                        className: h.actions,
                        children: [(0, a.jsx)(i.Button, {
                            className: h.button,
                            color: i.ButtonColors.PRIMARY,
                            size: i.Button.Sizes.SMALL,
                            onClick: e => {
                                A(C.id), e.stopPropagation()
                            },
                            disabled: O || R,
                            submitting: O,
                            children: I.default.Messages.MESSAGE_REQUESTS_SPAM_ACCEPT
                        }), (0, a.jsx)(_.default, {
                            className: h.button,
                            channel: C,
                            buttonSize: i.Button.Sizes.SMALL
                        })]
                    })]
                })
            }
        },
        397039: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("913144"),
                s = {
                    closeSidebar() {
                        a.default.dispatch({
                            type: "MOBILE_WEB_SIDEBAR_CLOSE"
                        })
                    },
                    openSidebar() {
                        a.default.dispatch({
                            type: "MOBILE_WEB_SIDEBAR_OPEN"
                        })
                    }
                }
        },
        628805: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("394846"),
                s = n("446674"),
                l = n("913144");
            let i = !1;
            class r extends s.default.Store {
                getIsOpen() {
                    return !a.isMobile || i
                }
            }
            r.displayName = "MobileWebSidebarStore";
            var o = new r(l.default, {
                MOBILE_WEB_SIDEBAR_OPEN: function() {
                    i = !0
                },
                MOBILE_WEB_SIDEBAR_CLOSE: function() {
                    i = !1
                }
            })
        },
        397009: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2022-04_account_profile_popout",
                label: "Account Profile Popout",
                defaultConfig: {
                    isPopupEnabled: !1,
                    isTaglessAccountPanelEnabled: !1,
                    isJoinedTagButtonEnabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Account Profile Popout",
                    config: {
                        isPopupEnabled: !0,
                        isTaglessAccountPanelEnabled: !1,
                        isJoinedTagButtonEnabled: !1
                    }
                }, {
                    id: 2,
                    label: "Enable Account Profile Popout w/ DiscordTag button",
                    config: {
                        isPopupEnabled: !0,
                        isTaglessAccountPanelEnabled: !1,
                        isJoinedTagButtonEnabled: !0
                    }
                }]
            })
        },
        81516: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("845579"),
                s = n("101125"),
                l = n("599110"),
                i = n("49111");
            async function r(e, t, n) {
                null == t && (t = s.default.getStatus()), await a.StatusSetting.updateSetting(e);
                let r = {
                    next_status: e,
                    prev_status: t
                };
                null != n && (r = {
                    ...r,
                    ...n
                }), l.default.track(i.AnalyticEvents.USER_STATUS_UPDATED, r)
            }
        },
        337328: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return Y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("627445"),
                o = n.n(r),
                u = n("394846"),
                d = n("446674"),
                c = n("77078"),
                E = n("327037"),
                f = n("997289"),
                _ = n("731898"),
                I = n("252744"),
                h = n("502651"),
                C = n("812204"),
                T = n("685665"),
                m = n("321833"),
                S = n("8977"),
                N = n("106803"),
                A = n("861370"),
                p = n("217513"),
                g = n("430312"),
                R = n("763866"),
                O = n("10532"),
                L = n("935409"),
                M = n("373469"),
                v = n("52028"),
                D = n("824563"),
                x = n("697218"),
                P = n("304121"),
                y = n("599110"),
                b = n("158998"),
                U = n("81516"),
                G = n("644091"),
                j = n("891964"),
                F = n("49111"),
                k = n("590456"),
                B = n("782340"),
                w = n("135231");

            function H(e, t, n, s) {
                return (0, a.jsx)(c.MenuItem, {
                    id: e,
                    keepItemStyles: !0,
                    render: t => {
                        let {
                            isFocused: n
                        } = t;
                        return (0, a.jsxs)("div", {
                            className: w.statusItem,
                            children: [(0, a.jsx)(c.Status, {
                                status: e,
                                className: w.icon,
                                size: 10,
                                color: n ? "currentColor" : void 0
                            }), (0, a.jsx)("div", {
                                className: w.status,
                                children: (0, b.humanizeStatus)(e)
                            }), null != s && (0, a.jsx)("div", {
                                className: w.description,
                                children: s
                            })]
                        })
                    },
                    action: () => (0, U.default)(e, t, n)
                })
            }

            function V(e) {
                var t, n;
                let {
                    user: l,
                    customStatus: r,
                    guildId: o,
                    isApplicationStreaming: E,
                    onClose: M,
                    onSelect: v,
                    closePopout: x
                } = e, U = (0, f.useAnalyticsContext)(), {
                    AnalyticsLocationProvider: V
                } = (0, T.default)(C.default.ACCOUNT_PROFILE_POPOUT), Y = (0, p.default)(l.id, o), [W, K, z, q] = (0, d.useStateFromStoresArray)([D.default], () => {
                    var e;
                    let t = l.id;
                    return "string" != typeof t ? [void 0, void 0, F.StatusTypes.UNKNOWN, !1] : [null !== (e = D.default.findActivity(t, e => e.type !== F.ActivityTypes.CUSTOM_STATUS)) && void 0 !== e ? e : void 0, D.default.findActivity(l.id, e => e.type === F.ActivityTypes.CUSTOM_STATUS), D.default.getStatus(t), D.default.isMobileOnline(t)]
                });
                let Q = (t = z, n = U, (0, a.jsxs)(a.Fragment, {
                        children: [H(F.StatusTypes.ONLINE, t, n), (0, a.jsx)(c.MenuSeparator, {}, "menu-separator-statuses"), H(F.StatusTypes.IDLE, t, n), H(F.StatusTypes.DND, t, n, B.default.Messages.STATUS_DND_HELP), H(F.StatusTypes.INVISIBLE, t, n, B.default.Messages.STATUS_INVISIBLE_HELPER)]
                    })),
                    {
                        shouldShow: X
                    } = (0, S.default)(l),
                    {
                        ref: J,
                        height: Z
                    } = (0, _.default)(),
                    $ = (0, I.default)(J);
                s.useEffect(() => {
                    y.default.track(F.AnalyticEvents.OPEN_POPOUT, {
                        type: "User Status Menu",
                        has_custom_status: null != r,
                        other_user_id: l.id,
                        application_id: null != W ? W.application_id : void 0,
                        is_streaming: E,
                        application_name: null != W ? W.name : void 0,
                        profile_has_nitro_customization: (null == Y ? void 0 : Y.banner) != null,
                        location: U.location,
                        has_profile_effect: (null == Y ? void 0 : Y.profileEffectID) != null
                    })
                }, []);
                let ee = (0, G.useMultiAccountMenuItems)(),
                    et = (0, N.useCustomStatusMenuItem)(null != r ? r : void 0, w.menuItemFocused),
                    en = (0, A.default)({
                        id: l.id,
                        label: B.default.Messages.COPY_ID_USER,
                        showIconFirst: !0
                    });
                return (0, a.jsx)(V, {
                    children: (0, a.jsxs)("div", {
                        className: w.popoutContainer,
                        ref: J,
                        children: [X && (0, a.jsx)(m.default, {
                            height: Z,
                            onClose: M,
                            user: l
                        }), (0, a.jsxs)(g.default, {
                            user: l,
                            profileType: k.UserProfileTypes.POPOUT,
                            children: [(0, a.jsx)(L.default, {
                                user: l,
                                displayProfile: Y,
                                onClose: () => null == x ? void 0 : x(),
                                isMobile: q,
                                isStreaming: (0, h.default)(W),
                                status: z,
                                disableUserProfileLink: __OVERLAY__,
                                isHovering: $,
                                showPremiumBadgeUpsell: !1
                            }), (0, a.jsxs)(g.default.Inner, {
                                children: [(0, a.jsx)(R.default, {
                                    activity: W,
                                    customStatusActivity: K,
                                    displayProfile: Y,
                                    user: l,
                                    onClose: M,
                                    setNote: !1,
                                    canDM: !1,
                                    hideNote: !0,
                                    showCopiableUsername: !0
                                }), (0, a.jsx)(O.default, {
                                    className: w.divider
                                }), (0, a.jsxs)(c.Menu, {
                                    navId: "account",
                                    "aria-label": B.default.Messages.SET_STATUS,
                                    hideScroller: !0,
                                    className: w.menu,
                                    onClose: M,
                                    onSelect: v,
                                    children: [(0, a.jsxs)(c.MenuGroup, {
                                        children: [(0, a.jsx)(c.MenuItem, {
                                            id: "status-picker",
                                            label: (0, b.humanizeStatus)(z),
                                            focusedClassName: w.menuItemFocused,
                                            subMenuIconClassName: w.subMenuIcon,
                                            action: u.isMobile ? function() {
                                                (0, c.openModalLazy)(() => new Promise(e => {
                                                    e(e => (0, a.jsx)(c.ModalRoot, {
                                                        ...e,
                                                        size: c.ModalSize.SMALL,
                                                        className: w.modal,
                                                        "aria-label": B.default.Messages.SET_STATUS,
                                                        children: (0, a.jsx)(c.Menu, {
                                                            navId: "account",
                                                            variant: "fixed",
                                                            "aria-label": B.default.Messages.SET_STATUS,
                                                            hideScroller: !0,
                                                            className: w.statusPickerModalMenu,
                                                            onClose: e.onClose,
                                                            onSelect: e.onClose,
                                                            children: Q
                                                        })
                                                    }))
                                                }))
                                            } : void 0,
                                            showIconFirst: !0,
                                            icon: e => {
                                                let {
                                                    className: t,
                                                    isFocused: n
                                                } = e;
                                                return (0, a.jsx)(c.Status, {
                                                    status: z,
                                                    size: 12,
                                                    className: i(t, w.mainStatusIcon),
                                                    color: n ? "currentColor" : void 0
                                                })
                                            },
                                            children: u.isMobile ? void 0 : Q
                                        }, "status-picker"), et]
                                    }), (0, a.jsx)(c.MenuGroup, {
                                        children: (0, a.jsx)(c.MenuItem, {
                                            id: "switch-account",
                                            focusedClassName: w.menuItemFocused,
                                            subMenuIconClassName: w.subMenuIcon,
                                            label: B.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                                            icon: P.default,
                                            showIconFirst: !0,
                                            action: j.default,
                                            children: ee
                                        }, "switch-account")
                                    }), (0, a.jsx)(c.MenuGroup, {
                                        children: en
                                    })]
                                })]
                            })]
                        })]
                    })
                })
            }

            function Y(e) {
                let {
                    userId: t,
                    user: n,
                    guildId: l,
                    onClose: i,
                    onSelect: r
                } = e, u = (0, d.useStateFromStores)([x.default], () => x.default.getUser(t), [t]), c = (0, d.useStateFromStores)([v.default], () => v.default.getCustomStatusActivity()), [f, _] = s.useState(!1), I = null != u ? u : n, h = (0, d.useStateFromStores)([M.default], () => null != I && null != M.default.getAnyStreamForUser(I.id));
                return (s.useEffect(() => {
                    null == u && e();
                    async function e() {
                        "string" == typeof t && (await (0, E.getUser)(t), _(!0))
                    }
                }, [u, t]), null == I) ? (f && o(null != I, "Unexpected missing user"), null) : (0, a.jsx)(V, {
                    closePopout: i,
                    user: I,
                    customStatus: c,
                    guildId: l,
                    isApplicationStreaming: h,
                    onClose: i,
                    onSelect: r
                })
            }
        },
        891964: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("583374");

            function r() {
                (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await n.el("685807").then(n.bind(n, "685807"));
                    return t => (0, a.jsx)(e, {
                        ...t
                    })
                }, {
                    onCloseCallback: () => {
                        l.default.dispatch({
                            type: "CLEAR_AUTHENTICATION_ERRORS"
                        }), l.default.dispatch({
                            type: "LOGIN_RESET",
                            isMultiAccount: !0
                        })
                    },
                    modalKey: i.SWITCH_ACCOUNTS_MODAL_KEY
                })
            }
        },
        644091: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMultiAccountMenuItems: function() {
                    return N
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("449918"),
                r = n("766274"),
                o = n("102985"),
                u = n("697218"),
                d = n("578706"),
                c = n("423487"),
                E = n("599110"),
                f = n("158998"),
                _ = n("694787"),
                I = n("770032"),
                h = n("927101"),
                C = n("891964"),
                T = n("49111"),
                m = n("782340"),
                S = n("962101");

            function N() {
                let e = (0, s.useStateFromStores)([u.default], () => u.default.getCurrentUser()),
                    t = (0, s.useStateFromStores)([o.default], () => o.default.hidePersonalInformation),
                    {
                        multiAccountUsers: n
                    } = (0, h.useMultiAccountUsers)(),
                    N = t => {
                        t !== (null == e ? void 0 : e.id) && (E.default.track(T.AnalyticEvents.MULTI_ACCOUNT_SWITCH_ATTEMPT, {
                            location: {
                                section: T.AnalyticsSections.PROFILE_POPOUT
                            }
                        }), _.switchAccount(t))
                    },
                    A = n.map(n => {
                        let s = new r.default(n),
                            o = s.id === (null == e ? void 0 : e.id),
                            u = n.tokenStatus === I.MultiAccountTokenStatus.INVALID,
                            E = t ? null : "#".concat(s.discriminator);
                        return (0, a.jsx)(l.MenuItem, {
                            id: s.id,
                            focusedClassName: S.focused,
                            label: e => {
                                let {
                                    isFocused: r
                                } = e;
                                return (0, a.jsxs)("div", {
                                    className: S.userMenuItem,
                                    children: [(0, a.jsx)(l.Avatar, {
                                        src: s.getAvatarURL(void 0, 40),
                                        size: l.AvatarSizes.SIZE_24,
                                        "aria-label": n.username
                                    }), (0, a.jsxs)("div", {
                                        className: S.userMenuUsername,
                                        children: [(0, a.jsx)(l.Text, {
                                            className: S.userMenuText,
                                            variant: "text-sm/normal",
                                            children: f.default.getUserTag(s, {
                                                mode: "username",
                                                identifiable: t ? "never" : "always"
                                            })
                                        }), !s.isPomelo() && (0, a.jsx)(l.Text, {
                                            className: S.userMenuDiscriminator,
                                            variant: "text-sm/normal",
                                            children: E
                                        })]
                                    }), o && (0, a.jsx)(d.default, {
                                        color: (0, i.getColor)(r ? T.Color.WHITE_500 : T.Color.BRAND_500),
                                        backgroundColor: (0, i.getColor)(r ? T.Color.BRAND_500 : T.Color.WHITE_500),
                                        width: 18,
                                        height: 18,
                                        className: S.activeIcon
                                    }), u && (0, a.jsx)(c.default, {
                                        color: (0, i.getColor)(T.Color.RED_400),
                                        backgroundColor: (0, i.getColor)(T.Color.WHITE_500),
                                        width: 15,
                                        height: 15,
                                        className: S.activeIcon
                                    })]
                                })
                            },
                            action: () => {
                                u ? (0, C.default)() : N(s.id)
                            }
                        }, s.id)
                    });
                return A.push((0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(l.MenuSeparator, {}), (0, a.jsx)(l.MenuItem, {
                        id: "manage-accounts",
                        label: m.default.Messages.SWITCH_ACCOUNTS_MANAGE_ACCOUNTS,
                        action: C.default
                    })]
                })), A
            }
        },
        636174: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ICON_SIZE: function() {
                    return a
                }
            });
            let a = 64
        },
        744923: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                mount: function() {
                    return s
                },
                unmount: function() {
                    return l
                }
            });
            var a = n("913144");

            function s() {
                a.default.dispatch({
                    type: "NOW_PLAYING_MOUNTED"
                })
            }

            function l() {
                a.default.dispatch({
                    type: "NOW_PLAYING_UNMOUNTED"
                })
            }
        },
        386133: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("913144"),
                d = n("777273"),
                c = n("843823"),
                E = n("697218"),
                f = n("392453"),
                _ = n("744923"),
                I = n("333705"),
                h = n("749554"),
                C = n("62659"),
                T = n("36512"),
                m = n("638441"),
                S = n("782340"),
                N = n("561368");
            let A = (0, m.default)(function(e) {
                    let {
                        party: t,
                        onUserContextMenu: n,
                        onChannelContextMenu: s
                    } = e, l = (0, a.jsx)(h.default, {
                        party: t,
                        onUserContextMenu: n
                    }), i = (0, a.jsx)(I.default, {
                        party: t,
                        onChannelContextMenu: s
                    });
                    return null != l || null != i ? (0, a.jsx)(o.Popout, {
                        position: "left",
                        renderPopout: e => {
                            let {
                                closePopout: n
                            } = e;
                            return (0, a.jsx)(T.default, {
                                party: t,
                                close: n
                            })
                        },
                        spacing: 8,
                        children: (e, t) => {
                            let {
                                isShown: n
                            } = t;
                            return (0, a.jsx)(C.default, {
                                ...e,
                                "aria-haspopup": "menu",
                                className: N.itemCard,
                                active: n,
                                children: (0, a.jsxs)("div", {
                                    children: [l, i]
                                })
                            })
                        }
                    }) : null
                }),
                p = i.throttle(() => d.fetchUserAffinities(!1), 3e5);

            function g() {
                let {
                    nowPlayingCards: e,
                    loaded: t,
                    needsRefresh: n,
                    fetching: l,
                    currentUser: i
                } = (0, r.useStateFromStoresObject)([f.default, c.default, E.default], () => ({
                    nowPlayingCards: f.default.nowPlayingCards,
                    loaded: f.default.loaded,
                    needsRefresh: c.default.needsRefresh(),
                    fetching: c.default.getFetching(),
                    currentUser: E.default.getCurrentUser()
                }));
                s.useEffect(() => (u.default.wait(() => _.mount()), () => u.default.wait(() => _.unmount())), [null == i ? void 0 : i.id]), s.useEffect(() => {
                    n && !l && p()
                }, [n, l]);
                let d = null;
                return t ? (d = e.length > 0 ? e.map(e => {
                    let {
                        party: t
                    } = e;
                    return (0, a.jsx)(A, {
                        party: t
                    }, t.id)
                }) : (0, a.jsxs)("div", {
                    className: N.emptyCard,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-md/semibold",
                        className: N.emptyHeader,
                        children: S.default.Messages.ACTIVITY_FEED_NONE_PLAYING_HEADER
                    }), (0, a.jsx)(o.Text, {
                        color: "none",
                        className: N.emptyText,
                        variant: "text-sm/normal",
                        children: S.default.Messages.ACTIVITY_FEED_NONE_PLAYING_BODY
                    })]
                }), (0, a.jsx)(a.Fragment, {
                    children: d
                })) : (0, a.jsx)("div", {
                    className: N.emptyCard,
                    children: (0, a.jsx)(o.Spinner, {})
                })
            }
        },
        333705: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("987317"),
                l = n("990766"),
                i = n("309570"),
                r = n("152311"),
                o = n("429928"),
                u = n("36539"),
                d = n("502651"),
                c = n("239380"),
                E = n("550368"),
                f = n("67139"),
                _ = n("62659"),
                I = n("636174"),
                h = n("49111");

            function C(e) {
                let {
                    party: t,
                    onChannelContextMenu: n
                } = e, {
                    voiceChannels: C,
                    currentActivities: T,
                    partiedMembers: m,
                    applicationStreams: S,
                    guildContext: N
                } = t, A = [], p = e => {
                    var t, n;
                    let {
                        length: s
                    } = A;
                    if (0 === s) {
                        A.push(e);
                        return
                    }
                    let l = A[s - 1],
                        i = "".concat(null !== (t = null == e ? void 0 : e.key) && void 0 !== t ? t : ""),
                        r = "".concat(null !== (n = null == l ? void 0 : l.key) && void 0 !== n ? n : ""),
                        o = r.startsWith("game") && i.startsWith("rich-presence");
                    A.push((0, a.jsx)(_.default.Separator, {
                        inset: o
                    }, "sep-".concat(i))), A.push(e)
                };
                for (let {
                        activity: e
                    }
                    of(C.length > 0 && C.forEach(e => {
                        let {
                            members: t,
                            channel: s,
                            guild: l
                        } = e;
                        p((0, a.jsx)(_.default.VoiceSection, {
                            guild: l,
                            channel: s,
                            members: t,
                            partySize: function(e, t) {
                                let n;
                                let a = e.length,
                                    s = 0;
                                if (null != t && null != t.party && null != t.party.size && t.party.size.length >= 2) {
                                    let a = t.party.size;
                                    s = Math.max(a[0] - e.length, 0), n = a[1]
                                } else n = a + s;
                                return {
                                    knownSize: a,
                                    unknownSize: s,
                                    totalSize: n
                                }
                            }(t),
                            onChannelContextMenu: n,
                            onGuildClick: () => {
                                (0, c.transitionToGuild)(l.id)
                            }
                        }, "voice-".concat(s.id)))
                    }), t.currentActivities))
                    if (null != e) {
                        let t = f.createBody(e);
                        if (null != t) {
                            p(t);
                            break
                        }
                    } return S.length > 0 && S.forEach(e => {
                    let {
                        stream: t,
                        streamUser: n,
                        activity: i
                    } = e;
                    p((0, a.jsx)(_.default.ApplicationStreamingSection, {
                        guildId: null == N ? void 0 : N.id,
                        user: n,
                        activity: i,
                        applicationStream: t,
                        onPreviewClick: () => {
                            s.default.selectVoiceChannel(t.channelId), (0, l.watchStreamAndTransitionToStream)(t)
                        }
                    }, "application-stream-".concat(t.ownerId)))
                }), T.forEach((e, t) => {
                    var n, s, l, c, f, S, A, g;
                    let {
                        activity: R,
                        game: O,
                        playingMembers: L,
                        activityUser: M
                    } = e;
                    if (null == R || null == R.type) return null;
                    if (T.length > 1 && R.type === h.ActivityTypes.PLAYING && !(0, i.default)(R) && null != O) p((0, a.jsx)(_.default.GameSection, {
                        icon: O.getIconURL(I.ICON_SIZE),
                        name: O.name,
                        partySize: {
                            knownSize: L.length,
                            unknownSize: 0,
                            totalSize: L.length
                        },
                        members: L
                    }, "game-".concat(null !== (n = R.session_id) && void 0 !== n ? n : t, "-").concat(null !== (s = R.application_id) && void 0 !== s ? s : t)));
                    else if ((0, r.default)(R)) {
                        let e = new Set(L.map(e => e.id)),
                            t = null === (l = C.find(e => null != e)) || void 0 === l ? void 0 : l.channel;
                        null != t && p((0, a.jsx)(_.default.EmbeddedActivitySection, {
                            activity: R,
                            participants: e,
                            channel: t,
                            guildId: t.guild_id
                        }, "embedded-activity-".concat(R.application_id)))
                    } else if ((null != R.assets || (0, i.default)(R)) && R.type === h.ActivityTypes.PLAYING) p((0, a.jsx)(_.default.RichPresenceSection, {
                        activity: R,
                        getAssetImage: E.getAssetImage
                    }, "rich-presence-".concat(null !== (c = R.session_id) && void 0 !== c ? c : t, "-").concat(M.id)));
                    else if ((0, d.default)(R)) {
                        let e = C.length > 0 && C[0].members.length > 1,
                            n = L.length > 1;
                        p((0, a.jsx)(_.default.TwitchSection, {
                            guildId: null == N ? void 0 : N.id,
                            activity: R,
                            user: e || n ? M : null,
                            getAssetImage: E.getAssetImage
                        }, "streaming-".concat(null !== (f = R.session_id) && void 0 !== f ? f : t)))
                    } else(0, o.default)(R) ? p((0, a.jsx)(_.default.SpotifySection, {
                        activity: R,
                        isSolo: 1 === m.length,
                        partySize: {
                            knownSize: L.length,
                            unknownSize: 0,
                            totalSize: L.length
                        },
                        getAssetImage: E.getAssetImage,
                        members: L
                    }, "spotify-".concat(null !== (S = R.session_id) && void 0 !== S ? S : t, "-").concat(M.id))) : (null != R.assets || (0, i.default)(R)) && R.type === h.ActivityTypes.LISTENING ? p((0, a.jsx)(_.default.RichPresenceSection, {
                        activity: R,
                        getAssetImage: E.getAssetImage
                    }, "rich-presence-".concat(null !== (A = R.session_id) && void 0 !== A ? A : t, "-").concat(M.id))) : (0, u.default)(R) && p((0, a.jsx)(_.default.XboxSection, {
                        title: O.name
                    }, "xbox-".concat(null !== (g = R.session_id) && void 0 !== g ? g : t)))
                }), A.length > 0 ? (0, a.jsx)(_.default.Body, {
                    children: A
                }) : null
            }
        },
        67139: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createHeader: function() {
                    return o
                },
                createBody: function() {
                    return u
                },
                shouldShowActivity: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("885590"),
                l = n("837979"),
                i = n("732827");
            let r = {
                [l.STAGE_APPLICATION_ID]: new s.StageChannelNowPlayingDelegate
            };

            function o(e) {
                var t;
                let n = e.application_id;
                if (null == n) return;
                let a = r[n];
                if (null != a && (null === (t = a.shouldShow) || void 0 === t ? void 0 : t.call(a, e)) !== !1) return a.createHeader(e)
            }

            function u(e) {
                var t;
                let n = e.application_id;
                if (null == n) return;
                let s = r[n];
                if ((null == s ? void 0 : s.body) != null && (null === (t = s.shouldShow) || void 0 === t ? void 0 : t.call(s, e)) !== !1) {
                    let t = s.body;
                    return (0, a.jsx)("section", {
                        className: i.section,
                        children: (0, a.jsx)(t, {
                            activity: e
                        })
                    }, "delegate-".concat(n))
                }
            }

            function d(e) {
                var t;
                let n = e.application_id;
                if (null == n) return !0;
                let a = r[n];
                return null == a || (null === (t = a.shouldShow) || void 0 === t ? void 0 : t.call(a, e)) !== !1
            }
        },
        749554: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("627445"),
                l = n.n(s),
                i = n("152311"),
                r = n("429928"),
                o = n("36539"),
                u = n("280174"),
                d = n("158998"),
                c = n("67139"),
                E = n("62659"),
                f = n("636174"),
                _ = n("49111"),
                I = n("782340");

            function h(e) {
                let {
                    party: t,
                    onUserContextMenu: s
                } = e, {
                    priorityMembers: h,
                    guildContext: C
                } = t, T = h[0], m = function(e) {
                    let {
                        priorityMembers: t,
                        partiedMembers: n
                    } = e, a = new Set(t.map(e => {
                        let {
                            user: t
                        } = e;
                        return t.id
                    })), s = n.filter(e => !a.has(e.id)), l = d.default.getName(t[0].user), i = null != t[1] ? d.default.getName(t[1].user) : null != s[0] ? d.default.getName(s[0]) : null;
                    switch (n.length) {
                        case 1:
                            return l;
                        case 2:
                            return I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN_ONLY.format({
                                user1: l,
                                user2: i
                            });
                        default:
                            return I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN.format({
                                user1: l,
                                user2: i,
                                extras: n.length - 2
                            })
                    }
                }(t), {
                    subtitle: S,
                    icon: N
                } = function(e) {
                    var t;
                    let {
                        priorityMembers: s,
                        partiedMembers: d,
                        voiceChannels: h,
                        currentActivities: C
                    } = e, T = s.length, m = d.length - T, S = C[0], N = null == S ? void 0 : S.activity, A = null == S ? void 0 : S.startedPlayingTime, p = {
                        name: null !== (t = null == N ? void 0 : N.name) && void 0 !== t ? t : ""
                    };
                    if ((0, i.default)(N) && null != N) return {
                        subtitle: (0, a.jsx)(u.default, {
                            start: A,
                            location: u.default.Locations.ACTIVITY_FEED_NEW,
                            messageProps: p
                        }),
                        icon: null
                    };
                    if (T + m === 1 && null != S) {
                        let {
                            game: e
                        } = S;
                        if (null == N) return {
                            subtitle: null,
                            icon: null
                        };
                        let t = c.createHeader(N);
                        if (null != t) return t;
                        switch (N.type) {
                            case _.ActivityTypes.PLAYING:
                                if ((0, o.default)(N)) return {
                                    subtitle: I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_XBOX,
                                    icon: (0, a.jsx)(E.default.Header.Icon, {
                                        src: E.default.Header.Icon.Src.XBOX
                                    })
                                };
                                return {
                                    subtitle: (0, a.jsx)(u.default, {
                                        start: A,
                                        location: u.default.Locations.ACTIVITY_FEED_NEW,
                                        messageProps: p
                                    }), icon: null != e ? (0, a.jsx)(E.default.Header.Icon, {
                                        src: null != e.getIconURL(f.ICON_SIZE) ? e.getIconURL(f.ICON_SIZE) : n("992739")
                                    }) : null
                                };
                            case _.ActivityTypes.STREAMING:
                                return {
                                    subtitle: I.default.Messages.ACTIVITY_FEED_NOW_STREAMING_TWITCH, icon: null != e && null != e.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                        src: e.getIconURL(f.ICON_SIZE)
                                    }) : null
                                };
                            case _.ActivityTypes.LISTENING:
                                let s;
                                return s = (0, r.default)(N) ? (0, a.jsx)(E.default.Header.Icon, {
                                    src: E.default.Header.Icon.Src.SPOTIFY
                                }) : null != e.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                    src: e.getIconURL(f.ICON_SIZE)
                                }) : (0, a.jsx)(E.default.Header.Icon, {
                                    src: n("992739")
                                }), {
                                    subtitle: I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_LISTENING.format({
                                        name: N.name
                                    }),
                                    icon: s
                                };
                            case _.ActivityTypes.WATCHING:
                                return {
                                    subtitle: I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_WATCHING, icon: null != e && null != e.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                        src: e.getIconURL(f.ICON_SIZE)
                                    }) : null
                                };
                            default:
                                return {
                                    subtitle: I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL, icon: null
                                }
                        }
                    }
                    if (0 === C.length) {
                        if (h.length > 0) return {
                            subtitle: I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL,
                            icon: null
                        };
                        let e = C[0];
                        if (null != e) {
                            let {
                                activity: t
                            } = e;
                            if (null != t) {
                                let e = c.createHeader(t);
                                if (null != e) return e
                            }
                            if (null != t && t.type === _.ActivityTypes.LISTENING) return {
                                subtitle: I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_SPOTIFY,
                                icon: (0, a.jsx)(E.default.Header.Icon, {
                                    src: E.default.Header.Icon.Src.SPOTIFY
                                })
                            }
                        }
                    } else if (1 === C.length) {
                        let e = C.find(e => null != e.activity);
                        if (null == e) return {
                            subtitle: null,
                            icon: null
                        };
                        let {
                            activity: t,
                            game: n,
                            startedPlayingTime: s
                        } = e;
                        return l(null != t, "Activity was null somehow"), {
                            subtitle: (0, a.jsx)(u.default, {
                                start: s,
                                location: u.default.Locations.ACTIVITY_FEED_NEW,
                                messageProps: p
                            }),
                            icon: null != n && null != n.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                src: n.getIconURL(f.ICON_SIZE)
                            }) : null
                        }
                    }
                    return {
                        subtitle: I.default.Messages.ACTIVITY_FEED_NOW_PLAYING_MULTIPLE_GAMES,
                        icon: (0, a.jsx)(E.default.Header.Icon, {
                            src: E.default.Header.Icon.Src.MULTIPLE
                        })
                    }
                }(t);
                return (0, a.jsx)(E.default.Header, {
                    priorityUser: T,
                    guildId: null == C ? void 0 : C.id,
                    title: m,
                    subtitle: S,
                    icon: N,
                    onContextMenu: e => s(e, T.user)
                })
            }
        },
        62659: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ei
                }
            });
            var a, s, l, i = n("37983"),
                r = n("884691"),
                o = n("414456"),
                u = n.n(o),
                d = n("446674"),
                c = n("669491"),
                E = n("77078"),
                f = n("832627"),
                _ = n("997289"),
                I = n("376556"),
                h = n("706508"),
                C = n("287585"),
                T = n("309570"),
                m = n("985677"),
                S = n("429928"),
                N = n("502651"),
                A = n("29088"),
                p = n("698372"),
                g = n("141962"),
                R = n("685665"),
                O = n("679653"),
                L = n("223913"),
                M = n("673527"),
                v = n("395763"),
                D = n("271938"),
                x = n("42203"),
                P = n("546463"),
                y = n("697218"),
                b = n("944832"),
                U = n("953109"),
                G = n("280174"),
                j = n("163466"),
                F = n("316887"),
                k = n("936629"),
                B = n("420145"),
                w = n("368121"),
                H = n("980423"),
                V = n("550368"),
                Y = n("449008"),
                W = n("158998"),
                K = n("807534"),
                z = n("49111"),
                q = n("782340"),
                Q = n("732827");
            let X = {
                    SMALL: 64,
                    LARGE: 160
                },
                J = [14, 14, 12, 12, 10, 8, 6],
                Z = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return (0, i.jsx)(E.Text, {
                        className: u(Q.textContent, t),
                        variant: "text-sm/semibold",
                        children: e
                    })
                },
                $ = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return (0, i.jsx)(E.Text, {
                        className: u(Q.textContent, t),
                        variant: "text-xs/normal",
                        children: e
                    })
                },
                ee = (0, f.default)(e => {
                    let {
                        message: t
                    } = e;
                    return (0, i.jsx)("div", {
                        className: Q.timestamp,
                        children: t
                    })
                }),
                et = e => {
                    let {
                        children: t
                    } = e;
                    return (0, i.jsx)("section", {
                        className: Q.section,
                        children: t
                    })
                };
            class en extends r.Component {
                renderTimePlayed() {
                    let e;
                    let {
                        activity: t
                    } = this.props, {
                        timestamps: n
                    } = t;
                    return null == n || !(0, m.default)(t) || (0, S.default)(t) ? null : $(e = (0, T.default)(t) ? (0, i.jsx)(ee, {
                        timestamps: n
                    }) : (0, i.jsx)(G.default, {
                        start: n.start,
                        end: n.end,
                        location: G.default.Locations.USER_ACTIVITY,
                        className: Q.playTime
                    }))
                }
                render() {
                    var e, t;
                    let {
                        activity: {
                            assets: a,
                            details: s,
                            state: l,
                            application_id: r
                        },
                        getAssetImage: o
                    } = this.props;
                    return (0, i.jsx)(et, {
                        children: (0, i.jsxs)("div", {
                            className: Q.activitySection,
                            children: [null != a && 0 !== Object.keys(a).length ? (0, i.jsxs)("div", {
                                className: Q.activitySectionAssets,
                                children: [(0, i.jsx)("img", {
                                    alt: null !== (e = a.large_text) && void 0 !== e ? e : "",
                                    src: o(r, a.large_image, [X.LARGE, X.LARGE]),
                                    className: u(Q.largeImage, {
                                        [Q.largeImageMask]: null != a.small_image
                                    })
                                }), null != a.small_image ? (0, i.jsx)("img", {
                                    alt: null !== (t = a.small_text) && void 0 !== t ? t : "",
                                    src: o(r, a.small_image, [X.SMALL, X.SMALL]),
                                    className: Q.smallImage
                                }) : null]
                            }) : (0, i.jsx)("div", {
                                className: Q.activitySectionAssets,
                                children: (0, i.jsx)("img", {
                                    alt: "",
                                    src: n("992739"),
                                    className: Q.largeImage
                                })
                            }), (0, i.jsxs)("div", {
                                children: [Z(null != s && "" !== s ? s : q.default.Messages.USER_ACTIVITY_HEADER_PLAYING), null != l ? $(l) : null, this.renderTimePlayed()]
                            })]
                        })
                    })
                }
            }(a = l || (l = {})).XBOX = "XBOX", a.SPOTIFY = "SPOTIFY", a.MULTIPLE = "MULTIPLE";
            let ea = e => {
                let t, {
                    src: n,
                    onClick: a,
                    onContextMenu: s
                } = e;
                switch (n) {
                    case l.XBOX:
                        t = (0, i.jsx)(B.default, {
                            className: Q.headerIcon,
                            color: c.default.unsafe_rawColors.PRIMARY_300.css
                        });
                        break;
                    case l.SPOTIFY:
                        t = (0, i.jsx)(k.default, {
                            className: Q.headerIcon,
                            color: c.default.unsafe_rawColors.SPOTIFY.css
                        });
                        break;
                    case l.MULTIPLE:
                        t = (0, i.jsx)("div", {
                            className: Q.multipleIconWrapper,
                            children: (0, i.jsx)(F.default, {
                                className: u(Q.headerIcon, Q.multipleIcon),
                                color: c.default.unsafe_rawColors.PRIMARY_300.css
                            })
                        });
                        break;
                    default:
                        t = (0, i.jsx)("img", {
                            src: null != n ? n : void 0,
                            alt: "",
                            className: Q.headerIcon
                        })
                }
                return null != a || null != s ? (0, i.jsx)(E.Clickable, {
                    onClick: a,
                    className: u(null != a ? Q.clickableIcon : ""),
                    onContextMenu: s,
                    children: t
                }) : t
            };
            ea.Src = l;
            let es = e => {
                let {
                    priorityUser: t,
                    title: n,
                    subtitle: a,
                    icon: s,
                    onContextMenu: l,
                    guildId: r
                } = e;
                return (0, i.jsxs)("header", {
                    className: null != s ? Q.headerFull : Q.headerSimple,
                    children: [(0, i.jsx)(E.Avatar, {
                        src: t.user.getAvatarURL(r, 32),
                        "aria-label": t.user.username,
                        size: E.AvatarSizes.SIZE_32,
                        className: Q.headerAvatar,
                        status: t.status,
                        onContextMenu: l
                    }), (0, i.jsxs)("div", {
                        className: Q.headerDetails,
                        children: [(0, i.jsx)(E.Text, {
                            className: u(Q.textContent),
                            variant: "text-md/semibold",
                            children: n
                        }), (0, i.jsx)(E.Text, {
                            color: "header-secondary",
                            className: Q.textContent,
                            variant: "text-sm/normal",
                            children: a
                        })]
                    }), null != s ? s : null]
                })
            };
            es.Icon = ea;
            let el = e => {
                let {
                    children: t,
                    className: n,
                    ...a
                } = e;
                return (0, i.jsx)(E.FocusRing, {
                    children: (0, i.jsx)(j.default, {
                        className: u(n, Q.wrapper),
                        padded: !0,
                        ...a,
                        children: t
                    })
                })
            };
            el.Header = es, el.Body = e => {
                let {
                    children: t
                } = e;
                return (0, i.jsx)(j.default, {
                    inset: !0,
                    padded: !1,
                    className: Q.body,
                    children: t
                })
            }, el.Separator = e => {
                let {
                    inset: t,
                    className: n
                } = e;
                return (0, i.jsx)("div", {
                    className: u(Q.separator, {
                        [Q.inset]: t
                    }, n)
                })
            }, el.VoiceSection = e => {
                var t, n;
                let {
                    guild: a,
                    channel: s,
                    onGuildClick: l,
                    partySize: o,
                    members: d,
                    onChannelContextMenu: c
                } = e, f = r.useRef(null), _ = (0, O.default)(s, !0);
                return (0, i.jsx)(et, {
                    children: (0, i.jsxs)("div", {
                        className: Q.voiceSection,
                        ref: f,
                        onContextMenu: e => c(e, s),
                        children: [(0, i.jsx)(E.Clickable, {
                            onClick: l,
                            "aria-hidden": !0,
                            tabIndex: -1,
                            children: (0, i.jsxs)("div", {
                                className: Q.voiceSectionAssets,
                                children: [null != a.getIconURL(32) ? (0, i.jsx)("img", {
                                    alt: "",
                                    src: null !== (t = a.getIconURL(32)) && void 0 !== t ? t : void 0,
                                    className: u(Q.voiceSectionGuildImage, Q.largeImageMask)
                                }) : (0, i.jsx)("div", {
                                    className: Q.voiceSectionNoGuildImageWrapper,
                                    children: (0, i.jsx)("div", {
                                        className: Q.voiceSectionNoGuildImage,
                                        style: {
                                            fontSize: null !== (n = J[a.acronym.length]) && void 0 !== n ? n : J[J.length - 1]
                                        },
                                        children: a.acronym
                                    })
                                }), (0, i.jsx)("div", {
                                    className: Q.voiceSectionIconWrapper,
                                    children: (0, i.jsx)(w.default, {
                                        className: Q.voiceSectionIcon
                                    })
                                })]
                            })
                        }), (0, i.jsx)(E.Clickable, {
                            onClick: l,
                            focusProps: {
                                ringTarget: f
                            },
                            children: (0, i.jsxs)("div", {
                                className: Q.voiceSectionDetails,
                                children: [Z(a.toString(), Q.voiceSectionText), $(_, Q.voiceSectionText)]
                            })
                        }), (0, i.jsx)(K.default, {
                            partySize: o,
                            members: d,
                            guildId: a.id
                        })]
                    })
                })
            }, el.GameSection = e => {
                let {
                    icon: t,
                    name: n,
                    partySize: a,
                    members: s
                } = e;
                return (0, i.jsx)(et, {
                    children: (0, i.jsxs)("div", {
                        className: Q.gameSection,
                        children: [null != t ? (0, i.jsx)("img", {
                            alt: "",
                            src: t,
                            className: Q.gameSectionIcon
                        }) : null, (0, i.jsxs)("div", {
                            children: [Z(n), $(q.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format({
                                memberCount: a.totalSize
                            }))]
                        }), (0, i.jsx)(K.default, {
                            partySize: a,
                            members: s
                        })]
                    })
                })
            }, el.RichPresenceSection = en, el.XboxSection = e => {
                let {
                    title: t
                } = e;
                return (0, i.jsx)(et, {
                    children: (0, i.jsxs)("div", {
                        className: Q.xboxSection,
                        children: [(0, i.jsx)(B.default, {
                            className: Q.xboxSectionIcon
                        }), (0, i.jsxs)("div", {
                            className: Q.xboxSectionDetails,
                            children: [Z(t), $(q.default.Messages.GAME_FEED_ACTIVITY_PLAYING_XBOX)]
                        })]
                    })
                })
            }, el.SpotifySection = e => {
                let {
                    activity: {
                        assets: t,
                        details: n,
                        state: a,
                        application_id: l
                    },
                    partySize: r,
                    members: o,
                    isSolo: d,
                    getAssetImage: E
                } = e;
                return (0, i.jsx)(et, {
                    children: (0, i.jsxs)("div", {
                        className: Q.spotifySection,
                        children: [null != t ? (0, i.jsxs)("div", {
                            className: Q.activitySectionAssets,
                            children: [(0, i.jsx)("img", {
                                alt: null !== (s = t.large_text) && void 0 !== s ? s : "",
                                src: E(l, t.large_image, [X.LARGE, X.LARGE]),
                                className: u(Q.largeImage, Q.borderRadius0, {
                                    [Q.largeImageMask]: null != t.small_image
                                })
                            }), d ? null : (0, i.jsx)(k.default, {
                                className: Q.smallImage,
                                color: c.default.unsafe_rawColors.SPOTIFY.css
                            })]
                        }) : (0, i.jsx)("div", {}), (0, i.jsxs)("div", {
                            children: [null != n ? Z(n) : null, null != a ? $(a) : null]
                        }), (0, i.jsx)(K.default, {
                            minAvatarsShown: d ? 2 : 1,
                            partySize: r,
                            members: o
                        })]
                    })
                })
            }, el.TwitchSection = e => {
                let t, {
                        activity: a,
                        user: s,
                        getAssetImage: l,
                        guildId: r
                    } = e,
                    {
                        name: o,
                        details: d,
                        assets: c,
                        application_id: f
                    } = a;
                if (null != c && (0, N.default)(a)) {
                    var _;
                    t = (0, i.jsx)(b.default, {
                        className: Q.twitchSectionPreviewWrapper,
                        aspectRatio: 16 / 9,
                        children: (0, i.jsxs)(E.Clickable, {
                            href: (0, C.default)(a),
                            tag: "a",
                            target: "_blank",
                            children: [(0, i.jsx)("img", {
                                alt: null !== (_ = c.large_text) && void 0 !== _ ? _ : "",
                                src: l(f, c.large_image, [900, 500]),
                                className: Q.twitchSectionPreview
                            }), (0, i.jsx)("img", {
                                src: n("306910"),
                                className: Q.twitchSectionPlayButton,
                                alt: ""
                            })]
                        })
                    })
                }
                return (0, i.jsxs)(et, {
                    children: [(0, i.jsxs)("div", {
                        className: u({
                            [Q.twitchSectionSimple]: null == s,
                            [Q.twitchSectionFull]: null != s
                        }),
                        children: [(0, i.jsx)("img", {
                            alt: "",
                            src: I.default.get(z.PlatformTypes.TWITCH).icon.lightSVG,
                            className: Q.twitchSectionIcon
                        }), (0, i.jsxs)("div", {
                            children: [Z(o), null != d ? $(d) : null]
                        }), null != s ? (0, i.jsx)(E.Avatar, {
                            src: s.getAvatarURL(r, 24),
                            "aria-label": s.username,
                            className: Q.twitchSectionAvatar,
                            size: E.AvatarSizes.SIZE_24
                        }) : null]
                    }), t]
                })
            }, el.ApplicationStreamingSection = e => {
                var t;
                let {
                    activity: n,
                    user: a,
                    applicationStream: s,
                    onPreviewClick: l,
                    guildId: r
                } = e, o = (0, d.useStateFromStores)([x.default], () => x.default.getChannel(s.channelId)), [u, c] = (0, L.useCanWatchStream)(o), f = (0, i.jsx)(b.default, {
                    className: Q.applicationStreamingPreviewWrapper,
                    aspectRatio: 16 / 9,
                    children: (0, i.jsxs)(E.Clickable, {
                        onClick: u ? l : void 0,
                        className: Q.applicationStreamingPreviewSize,
                        children: [(0, i.jsx)(M.default, {
                            stream: s,
                            className: Q.applicationStreamingPreviewSize
                        }), (0, i.jsx)("div", {
                            className: Q.applicationStreamingHoverWrapper,
                            children: (0, i.jsx)("div", {
                                className: Q.applicationStreamingHoverText,
                                children: (0, L.getStreamCTAString)(c)
                            })
                        })]
                    })
                }), _ = null !== (t = (0, A.default)(n, s)) && void 0 !== t ? t : q.default.Messages.SHARING_SCREEN;
                return (0, i.jsxs)(et, {
                    children: [(0, i.jsxs)("div", {
                        className: Q.applicationStreamingSection,
                        children: [(0, i.jsx)(E.Avatar, {
                            size: E.AvatarSizes.SIZE_32,
                            src: a.getAvatarURL(r, 32),
                            "aria-label": a.username,
                            className: Q.applicationStreamingAvatar
                        }), (0, i.jsxs)("div", {
                            children: [Z(W.default.getName(a)), $(_)]
                        }), (0, i.jsx)(H.default, {
                            size: H.default.Sizes.SMALL
                        })]
                    }), f]
                })
            }, el.EmbeddedActivitySection = e => {
                var t;
                let {
                    activity: n,
                    channel: a,
                    guildId: s,
                    participants: l
                } = e, o = (0, p.default)(), [u, c] = r.useState(null);
                r.useEffect(() => {
                    null != n.application_id && (0, V.fetchAssetIds)(n.application_id, ["embedded_background"]).then(e => {
                        let [t] = e;
                        return c(t)
                    })
                }, [n.application_id]);
                let f = (0, d.useStateFromStoresArray)([y.default, D.default], () => Array.from(l).map(e => D.default.getId() === e ? null : y.default.getUser(e)).filter(Y.isNotNullish)),
                    I = (0, _.useAnalyticsContext)(),
                    {
                        analyticsLocations: C
                    } = (0, R.default)(),
                    T = P.default.getGame(null !== (t = null == n ? void 0 : n.application_id) && void 0 !== t ? t : "");
                if (null == T) return null;
                let m = null != n.created_at && n.created_at > 0 ? {
                        start: n.created_at
                    } : void 0,
                    S = (0, V.getAssetImage)(T.id, u, 300);
                return (0, i.jsxs)(et, {
                    children: [(0, i.jsxs)("div", {
                        className: Q.embeddedActivityTopRow,
                        children: [(0, i.jsx)(U.default, {
                            game: T,
                            size: U.default.Sizes.XSMALL,
                            className: Q.embeddedActivityIcon
                        }), (0, i.jsx)("div", {
                            className: Q.embeddedActivityName,
                            children: (0, i.jsx)(E.Text, {
                                variant: "text-sm/semibold",
                                children: T.name
                            })
                        }), null != m ? (0, i.jsx)("div", {
                            className: Q.embeddedActivityTimeElapsed,
                            children: (0, i.jsx)(E.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                children: (0, i.jsx)(ee, {
                                    timestamps: m
                                })
                            })
                        }) : null]
                    }), (0, i.jsx)(b.default, {
                        aspectRatio: 16 / 9,
                        children: (0, i.jsxs)("div", {
                            className: Q.embeddedActivityPlayerContainer,
                            children: [null != S ? (0, i.jsx)("img", {
                                src: S,
                                alt: T.name,
                                className: Q.embeddedActivityImage
                            }) : null, (0, i.jsxs)("div", {
                                className: Q.embeddedActivityImageOverlay,
                                children: [(0, i.jsx)(v.Avatars, {
                                    users: f,
                                    guildId: s,
                                    channelId: a.id
                                }), (0, i.jsx)("div", {
                                    className: Q.embeddedActivityJoinWrapper,
                                    children: (0, i.jsx)(E.Button, {
                                        size: E.Button.Sizes.SMALL,
                                        onClick: e => {
                                            e.stopPropagation(), (0, h.default)({
                                                activity: n,
                                                currentEmbeddedApplication: o,
                                                activityChannelId: a.id,
                                                locationObject: I.location,
                                                embeddedActivitiesManager: g.default,
                                                analyticsLocations: C
                                            })
                                        },
                                        children: q.default.Messages.JOIN
                                    })
                                })]
                            })]
                        })
                    })]
                })
            };
            var ei = el
        },
        265412: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("151426"),
                i = n("77078"),
                r = n("901582"),
                o = n("812204"),
                u = n("685665"),
                d = n("509802"),
                c = n("911574"),
                E = n("350522"),
                f = n("476765"),
                _ = n("386133"),
                I = n("49111"),
                h = n("782340"),
                C = n("607626");

            function T() {
                let {
                    AnalyticsLocationProvider: e
                } = (0, u.default)(o.default.ACTIVE_NOW_COLUMN), t = (0, s.useStateFromStores)([E.default], () => E.default.hasConsented(I.Consents.PERSONALIZATION)), n = t ? [] : [l.DismissibleContent.NOW_PLAYING_CONSENT_CARD], T = (0, f.useUID)();
                return (0, a.jsx)(e, {
                    children: (0, a.jsx)(r.default, {
                        section: I.AnalyticsSections.ACTIVE_NOW_COLUMN,
                        children: (0, a.jsx)("aside", {
                            className: C.container,
                            "aria-labelledby": T,
                            children: (0, a.jsxs)(i.Scroller, {
                                className: C.scroller,
                                children: [(0, a.jsx)(i.Heading, {
                                    variant: "heading-lg/semibold",
                                    className: C.header,
                                    id: T,
                                    children: h.default.Messages.GAME_FEED_CURRENT_HEADER_TITLE
                                }), (0, a.jsx)(d.default, {
                                    contentTypes: n,
                                    children: e => {
                                        let {
                                            visibleContent: t,
                                            markAsDismissed: n
                                        } = e;
                                        if (t === l.DismissibleContent.NOW_PLAYING_CONSENT_CARD) return (0, a.jsx)(c.default, {
                                            className: C.consentCard,
                                            markAsDismissed: n
                                        })
                                    }
                                }), (0, a.jsx)(_.default, {})]
                            })
                        })
                    })
                })
            }
        },
        807534: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("917351"),
                l = n.n(s),
                i = n("77078"),
                r = n("86621"),
                o = n("506885"),
                u = n("981601"),
                d = n("479020"),
                c = n("449008"),
                E = n("49111"),
                f = n("683168");
            let _ = (0, r.default)(e => {
                let {
                    member: t,
                    empty: n,
                    analyticsContext: s,
                    guildId: l
                } = e;
                if (n) return (0, a.jsx)("div", {
                    className: f.partyMemberEmpty
                });
                if (null == t) return (0, a.jsx)("div", {
                    className: f.partyMemberUnknown,
                    children: (0, a.jsx)(d.default, {
                        className: f.partyMemberUnknownIcon
                    })
                });
                let r = {
                    location: {
                        ...s.location,
                        object: E.AnalyticsObjects.AVATAR
                    }
                };
                return (0, a.jsx)("div", {
                    className: f.partyMemberKnown,
                    children: (0, a.jsx)(i.Popout, {
                        preload: () => (0, o.default)(t.id, t.getAvatarURL(l, 80), {
                            guildId: l
                        }),
                        renderPopout: e => (0, a.jsx)(u.default, {
                            ...e,
                            userId: t.id,
                            analyticsParams: r
                        }),
                        position: "left",
                        children: e => (0, a.jsx)(i.Avatar, {
                            ...e,
                            src: t.getAvatarURL(l, 24),
                            "aria-label": t.username,
                            size: i.AvatarSizes.SIZE_24,
                            className: f.partyMember
                        })
                    })
                })
            });
            var I = e => {
                let {
                    partySize: t,
                    members: n,
                    minAvatarsShown: s = 1,
                    maxAvatarsShown: i = 2,
                    guildId: r
                } = e, {
                    unknownSize: o,
                    totalSize: u,
                    knownSize: d
                } = t;
                if (u < s) return null;
                let E = l(n).filter(c.isNotNullish).take(i).map(e => (0, a.jsx)(_, {
                    member: e,
                    guildId: r
                }, e.id)).value();
                for (let e = 0; e < o && E.length < i; e++) E.push((0, a.jsx)(_, {
                    guildId: r
                }, "unknown-member-".concat(e)));
                let I = u - d - o;
                for (let e = 0; e < I && E.length < i; e++) E.push((0, a.jsx)(_, {
                    empty: !0,
                    guildId: r
                }, "empty-member-".concat(e)));
                let h = Math.max(Math.min(u - E.length, 99), 0);
                if (1 === h) {
                    let e = n[i];
                    E.push((0, a.jsx)(_, {
                        member: e,
                        guildId: r
                    }, e.id))
                }
                return (0, a.jsx)("div", {
                    className: f.wrapper,
                    children: (0, a.jsxs)("div", {
                        className: f.partyMembers,
                        children: [E, h > 1 ? (0, a.jsxs)("div", {
                            className: f.partyMemberOverflow,
                            children: ["+", h]
                        }) : null]
                    })
                })
            }
        },
        36512: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("186888"),
                i = n("70118"),
                r = n("398953"),
                o = n("7259"),
                u = n("250529"),
                d = n("391950"),
                c = n("782340");

            function E(e) {
                let {
                    party: t,
                    close: n,
                    onSelect: E
                } = e, f = (0, r.default)(t), _ = (0, d.default)(t), I = (0, u.default)(t), h = (0, o.default)(t), C = (0, l.default)(t), T = (0, i.default)(t);
                return (0, a.jsxs)(s.Menu, {
                    navId: "now-playing-menu",
                    onClose: n,
                    "aria-label": c.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onSelect: E,
                    children: [f, (0, a.jsxs)(s.MenuGroup, {
                        children: [_, I]
                    }), (0, a.jsx)(s.MenuGroup, {
                        children: h
                    }), (0, a.jsx)(s.MenuGroup, {
                        children: C
                    }), T]
                })
            }
        },
        444097: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                },
                NowPlayingUnknownMemberMenuItem: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("145079"),
                o = n("402243");

            function u(e) {
                let {
                    user: t,
                    status: n,
                    isFocused: s,
                    guildId: l
                } = e;
                return (0, a.jsxs)("div", {
                    className: o.memberItem,
                    children: [(0, a.jsx)(i.Avatar, {
                        src: t.getAvatarURL(l, 24),
                        className: o.avatar,
                        "aria-label": t.username,
                        size: i.AvatarSizes.SIZE_24,
                        status: n,
                        statusColor: s ? "currentColor" : void 0
                    }), (0, a.jsx)(r.default, {
                        user: t,
                        hideDiscriminator: !0
                    })]
                })
            }

            function d(e) {
                let {
                    label: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: o.memberItem,
                    children: [(0, a.jsx)("div", {
                        className: l(o.avatar, o.unknown)
                    }), (0, a.jsx)("div", {
                        children: t
                    })]
                })
            }
        },
        186888: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("260365"),
                o = n("987317"),
                u = n("79112"),
                d = n("376556"),
                c = n("871388"),
                E = n("152311"),
                f = n("36539"),
                _ = n("860285"),
                I = n("47319"),
                h = n("86878"),
                C = n("686470"),
                T = n("568307"),
                m = n("535974"),
                S = n("599110"),
                N = n("602043"),
                A = n("780009"),
                p = n("49111"),
                g = n("782340");
            let R = d.default.get(p.PlatformTypes.XBOX).name;

            function O(e) {
                let {
                    currentActivities: t
                } = e, n = t.length > 1, O = function(e) {
                    let {
                        currentActivities: t
                    } = e, n = (0, l.useStateFromStores)([I.default], () => I.default.getAccounts().some(e => e.type === d.default.get(p.PlatformTypes.XBOX).type)), s = t.some(e => {
                        let {
                            activity: t
                        } = e;
                        return (0, f.default)(t)
                    });
                    return n || !s ? null : (0, a.jsx)(i.MenuItem, {
                        id: "xbox-connect",
                        action: () => u.default.open(p.UserSettingsSections.CONNECTIONS),
                        label: g.default.Messages.USER_ACTIVITY_CONNECT_PLATFORM.format({
                            platform: R
                        })
                    })
                }(e), L = function(e) {
                    let {
                        currentActivities: t
                    } = e, n = s.useContext(S.AnalyticsContext);
                    return (0, l.useStateFromStoresArray)([T.default, C.default, _.default, m.default, h.default], () => t.filter(e => !(0, E.default)(e.activity)).map(e => {
                        let {
                            activity: t,
                            game: a
                        } = e, s = C.default.getActiveLibraryApplication(a.id);
                        return {
                            ...e,
                            libraryApplication: s,
                            canJoin: null != t && (0, c.default)(t, p.ActivityFlags.JOIN) && t.type === p.ActivityTypes.PLAYING,
                            canPlay: (0, N.isLaunchable)({
                                LibraryApplicationStore: C.default,
                                LaunchableGameStore: _.default,
                                DispatchApplicationStore: m.default,
                                ConnectedAppsStore: h.default,
                                applicationId: a.id,
                                branchId: null != s ? s.branchId : null
                            }),
                            isLaunching: _.default.launchingGames.has(a.id),
                            isRunning: T.default.getRunningVerifiedApplicationIds().includes(a.id),
                            location: n.location
                        }
                    }), [n.location, t])
                }(e), M = [];
                for (let e of L) {
                    let {
                        activity: t
                    } = e;
                    null != t && null != t.type && M.push(function(e, t) {
                        let {
                            canJoin: n,
                            activity: s,
                            activityUser: l
                        } = e;
                        if (!n || null == s) return null;
                        async function u() {
                            if (null == s) return;
                            let e = await r.default.sendActivityInviteUser({
                                type: p.ActivityActionTypes.JOIN_REQUEST,
                                userId: l.id,
                                activity: s,
                                location: p.AnalyticsLocations.PROFILE_POPOUT
                            });
                            null != e && o.default.selectPrivateChannel(e.id)
                        }
                        return (0, a.jsx)(i.MenuItem, {
                            id: "join-".concat(s.session_id),
                            label: t ? g.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN_USER.format({
                                name: l.toString()
                            }) : g.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN,
                            action: u
                        })
                    }(e, n), function(e, t) {
                        let {
                            activity: n,
                            game: s,
                            libraryApplication: l,
                            location: r,
                            canPlay: o,
                            isRunning: u,
                            isLaunching: d
                        } = e;
                        if (!o || null == n) return null;
                        let c = u ? g.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_RUNNING.format({
                            name: s.name
                        }) : d ? g.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_LAUNCHING.format({
                            name: s.name
                        }) : void 0;
                        return (0, a.jsx)(i.MenuItem, {
                            id: "play-".concat(n.session_id),
                            action: function() {
                                (0, A.playApplication)(s.id, l, {
                                    analyticsParams: {
                                        location: {
                                            ...r,
                                            object: p.AnalyticsObjects.LIST_ITEM
                                        }
                                    }
                                })
                            },
                            label: t ? g.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH_APPLICATION_NAME.format({
                                name: s.name
                            }) : g.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH,
                            subtext: c
                        })
                    }(e, n))
                }
                return [O, ...M]
            }
        },
        70118: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("401642"),
                r = n("444097"),
                o = n("49111"),
                u = n("782340");

            function d(e, t, n, s, d) {
                let c = [];
                for (let {
                        user: t,
                        status: n
                    }
                    of e) c.push((0, a.jsx)(l.MenuItem, {
                    id: t.id,
                    keepItemStyles: !0,
                    render: e => (0, a.jsx)(r.default, {
                        ...e,
                        user: t,
                        status: n,
                        guildId: d
                    }),
                    action: () => (0, i.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: {
                            section: o.AnalyticsSections.ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU
                        }
                    })
                }));
                for (let e of t) c.push((0, a.jsx)(l.MenuItem, {
                    id: e.id,
                    keepItemStyles: !0,
                    render: t => (0, a.jsx)(r.default, {
                        ...t,
                        user: e,
                        guildId: d
                    }),
                    action: () => (0, i.openUserProfileModal)({
                        userId: e.id,
                        analyticsLocation: {
                            section: o.AnalyticsSections.ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU
                        }
                    })
                }));
                let E = n - c.length;
                if (E > 0) c.push((0, a.jsx)(l.MenuItem, {
                    id: "unknown-members-".concat(null == s ? void 0 : s.session_id),
                    render: e => (0, a.jsx)(r.NowPlayingUnknownMemberMenuItem, {
                        ...e,
                        label: u.default.Messages.GAME_FEED_UNKNOWN_PLAYERS.format({
                            count: E
                        })
                    })
                }));
                return c
            }

            function c(e) {
                var t, n;
                let {
                    priorityMembers: i,
                    partiedMembers: r,
                    currentActivities: o,
                    guildContext: c
                } = e, E = new Set(i.map(e => {
                    let {
                        user: t
                    } = e;
                    return t.id
                })), f = r.filter(e => !E.has(e.id)), _ = s.useMemo(() => {
                    let e = o.flatMap(e => {
                        let {
                            playingMembers: t
                        } = e;
                        return t
                    }).map(e => e.id);
                    return r.filter(t => !e.includes(t.id))
                }, [r, o]);
                if (o.length <= 1 && 0 === _.length) return (0, a.jsx)(l.MenuGroup, {
                    label: r.length > 1 ? u.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format({
                        memberCount: r.length
                    }) : void 0,
                    children: d(i, f, r.length, null !== (n = null === (t = o[0]) || void 0 === t ? void 0 : t.activity) && void 0 !== n ? n : void 0, null == c ? void 0 : c.id)
                });
                let I = o.map((e, t) => {
                        let {
                            playingMembers: n,
                            game: s,
                            activity: r
                        } = e, o = new Set(n.map(e => e.id));
                        return (0, a.jsx)(l.MenuGroup, {
                            label: "".concat(s.name, " - ").concat(n.length),
                            children: d(i.filter(e => {
                                let {
                                    user: t
                                } = e;
                                return o.has(t.id)
                            }), n.filter(e => !E.has(e.id)), n.length, null != r ? r : void 0, null == c ? void 0 : c.id)
                        }, t)
                    }),
                    h = _.map(e => e.id),
                    C = (0, a.jsx)(l.MenuGroup, {
                        label: "".concat(u.default.Messages.ACTIVITY_FEED_OTHER_MEMBER_LIST_HEADER, " - ").concat(_.length),
                        children: d(i.filter(e => {
                            let {
                                user: t
                            } = e;
                            return h.includes(t.id)
                        }), _.filter(e => !E.has(e.id)), _.length, void 0, null == c ? void 0 : c.id)
                    });
                return [...I, C]
            }
        },
        398953: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("450911"),
                r = n("716241"),
                o = n("456353"),
                u = n("599110"),
                d = n("49111"),
                c = n("782340");

            function E(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    {
                        priorityMembers: n,
                        partiedMembers: E
                    } = e,
                    f = s.useContext(u.AnalyticsContext),
                    _ = n.map(e => {
                        let {
                            user: t
                        } = e;
                        return t.id
                    }),
                    I = 1 === E.length && 1 === n.length,
                    h = n.length - E.length > 0;
                return (I || t) && !h && 0 !== _.length ? (0, a.jsx)(l.MenuItem, {
                    id: "message",
                    action: function() {
                        i.default.openPrivateChannel(_).then(t => r.default.trackWithMetadata(d.AnalyticEvents.ACTIVITY_FEED_DM_VISITED, {
                            source: {
                                ...f.location,
                                object: d.AnalyticsObjects.LIST_ITEM
                            },
                            channel_id: t,
                            recipient_id: "string" == typeof _ ? _ : _[0],
                            af_recently_played: !1,
                            ...(0, o.getPartyMetadata)(e)
                        }))
                    },
                    label: c.default.Messages.SEND_DM
                }) : null
            }
        },
        7259: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("2129");

            function s(e) {
                let {
                    currentActivities: t,
                    isSpotifyActivity: n
                } = e, s = t[0], l = (0, a.default)(null == s ? void 0 : s.activity, null == s ? void 0 : s.activityUser);
                return n ? l : null
            }
        },
        250529: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("987317"),
                i = n("990766"),
                r = n("158998"),
                o = n("782340");

            function u(e) {
                let {
                    applicationStreams: t
                } = e;
                return t.map(e => {
                    let {
                        stream: t,
                        streamUser: n
                    } = e;
                    return (0, a.jsx)(s.MenuItem, {
                        id: "spectate-".concat(t.ownerId),
                        action: () => {
                            l.default.selectVoiceChannel(t.channelId), (0, i.watchStreamAndTransitionToStream)(t)
                        },
                        label: o.default.Messages.WATCH_USER_STREAM.format({
                            streamerName: r.default.getName(n)
                        })
                    }, "spectate-".concat(t.ownerId))
                })
            }
        },
        391950: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("987317"),
                o = n("716241"),
                u = n("239380"),
                d = n("957255"),
                c = n("456353"),
                E = n("599110"),
                f = n("49111"),
                _ = n("782340");

            function I(e) {
                let t = s.useContext(E.AnalyticsContext),
                    n = e.voiceChannels[0],
                    I = (0, l.useStateFromStores)([d.default], () => null != n && d.default.can(f.Permissions.CONNECT, n.channel));
                return null == n ? null : [(0, a.jsx)(i.MenuItem, {
                    id: "join-voice",
                    action: function() {
                        (0, u.transitionToGuild)(n.guild.id), r.default.selectVoiceChannel(n.channel.id), o.default.trackWithMetadata(f.AnalyticEvents.ACTIVITY_FEED_VOICE_CHANNEL_VISITED, {
                            source: {
                                ...t.location,
                                object: f.AnalyticsObjects.LIST_ITEM
                            },
                            guild_id: n.guild.id,
                            channel_id: n.channel.id,
                            ...(0, c.getPartyMetadata)(e)
                        })
                    },
                    label: _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_JOIN_CHANNEL,
                    disabled: !I
                }, "join-voice"), (0, a.jsx)(i.MenuItem, {
                    id: "goto-server",
                    action: function() {
                        (0, u.transitionToGuild)(n.guild.id), o.default.trackWithMetadata(f.AnalyticEvents.ACTIVITY_FEED_GUILD_VISITED, {
                            source: {
                                ...t.location,
                                object: f.AnalyticsObjects.LIST_ITEM
                            },
                            guild_id: n.guild.id,
                            af_recently_played: !1,
                            ...(0, c.getPartyMetadata)(e)
                        })
                    },
                    label: _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_GO_TO_SERVER
                }, "goto-server")]
            }
        },
        638441: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("450911"),
                i = n("272030"),
                r = n("86621"),
                o = n("305961");

            function u(e) {
                return (0, r.default)(class extends s.Component {
                    render() {
                        return (0, a.jsx)(e, {
                            ...this.props,
                            onMessageUser: this.handleMessageUser,
                            onUserContextMenu: this.handleUserContextMenu,
                            onGuildContextMenu: this.handleGuildContextMenu,
                            onChannelContextMenu: this.handleChannelContextMenu
                        })
                    }
                    handleMessageUser(e, t) {
                        return l.default.openPrivateChannel(t.id)
                    }
                    handleUserContextMenu(e, t, s) {
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: s
                        })
                    }
                    handleGuildContextMenu(e, t) {
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("374705").then(n.bind(n, "374705"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }
                    handleChannelContextMenu(e, t) {
                        let s = o.default.getGuild(t.getGuildId());
                        if (null == s) return null;
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("754938").then(n.bind(n, "754938"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t,
                                guild: s
                            })
                        })
                    }
                })
            }
        },
        527441: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = null;
            class i extends a.default.PersistedStore {
                initialize(e) {
                    var t;
                    l = null !== (t = null == e ? void 0 : e.type) && void 0 !== t ? t : null
                }
                getType() {
                    return l
                }
                getState() {
                    return {
                        type: l
                    }
                }
            }
            i.displayName = "NewUserStore", i.persistKey = "nuf";
            var r = new i(s.default, {
                NUF_NEW_USER: function(e) {
                    let {
                        newUserType: t
                    } = e;
                    l = t
                },
                NUF_COMPLETE: function() {
                    l = null
                }
            })
        },
        218971: function(e, t, n) {
            "use strict";
            var a, s;
            n.r(t), n.d(t, {
                NUFSlides: function() {
                    return a
                }
            }), (s = a || (a = {})).AGE_GATE = "age-gate", s.CHOOSE_TEMPLATE = "choose-template", s.CUSTOMIZE_GUILD = "customize-server", s.CHANNEL_PROMPT = "channel-prompt", s.JOIN_GUILD = "join-server", s.CREATION_INTENT = "creation-intent", s.COMPLETE = "complete"
        },
        946522: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var s = n("37983");
            n("884691");
            var l = n("77078"),
                i = n("913144"),
                r = n("316272"),
                o = n("19009"),
                u = n("774146"),
                d = n("233322"),
                c = n("42963"),
                E = n("223170"),
                f = n("59811"),
                _ = n("341542"),
                I = n("305961"),
                h = n("162771"),
                C = n("697218"),
                T = n("449008"),
                m = n("773336"),
                S = n("165926"),
                N = n("527441"),
                A = n("56235"),
                p = n("218971"),
                g = n("49111"),
                R = n("492397"),
                O = n("149806");

            function L() {
                null != a && (0, l.closeModal)(a)
            }
            class M extends r.default {
                _initialize() {
                    i.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen), i.default.subscribe("LOGOUT", L)
                }
                _terminate() {
                    i.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen), i.default.unsubscribe("LOGOUT", L)
                }
                handleConnectionOpen() {
                    var e;
                    let t, i = N.default.getType();
                    if (null == i) return;
                    switch (i) {
                        case A.NewUserTypes.INVITE_UNCLAIMED:
                            c.default.flowStart(O.FlowType.INVITE, O.RegistrationSteps.NUF_STARTED);
                            break;
                        case A.NewUserTypes.ORGANIC_REGISTERED:
                            c.default.flowStart(O.FlowType.ORGANIC, O.RegistrationSteps.NUF_STARTED);
                            break;
                        case A.NewUserTypes.MARKETING_UNCLAIMED:
                            c.default.flowStart(O.FlowType.ORGANIC_MARKETING, O.RegistrationSteps.NUF_STARTED)
                    }
                    let r = !1,
                        L = h.default.getGuildId();
                    if (i === A.NewUserTypes.INVITE_UNCLAIMED) {
                        let e = I.default.getGuild(L);
                        (null == e ? void 0 : e.hasVerificationGate()) && (r = !0, (0, E.fetchWelcomeScreen)(e.id))
                    }
                    let M = () => 0 === _.default.totalGuilds && !m.isPlatformEmbedded,
                        v = o.userNeedsAgeGate();
                    e = [{
                        key: "Unified NUF Modal",
                        open: async function e(e) {
                            let t = e => {
                                switch (e) {
                                    case p.NUFSlides.AGE_GATE:
                                        c.default.flowStep(O.FlowType.ANY, O.RegistrationSteps.AGE_GATE);
                                        break;
                                    case p.NUFSlides.CHOOSE_TEMPLATE:
                                        c.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.GUILD_TEMPLATES);
                                        break;
                                    case p.NUFSlides.CUSTOMIZE_GUILD:
                                        c.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.GUILD_CREATE);
                                        break;
                                    case p.NUFSlides.CHANNEL_PROMPT:
                                        c.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.CHANNEL_PROMPT);
                                        break;
                                    case p.NUFSlides.JOIN_GUILD:
                                        c.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.JOIN_GUILD);
                                        break;
                                    case p.NUFSlides.CREATION_INTENT:
                                        c.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.CREATION_INTENT);
                                        break;
                                    case p.NUFSlides.COMPLETE:
                                        c.default.flowStep(O.FlowType.ANY, O.CreateGuildSteps.SUCCESS);
                                        break;
                                    case null:
                                        break;
                                    default:
                                        T.assertNever(e)
                                }
                            };
                            a = await (0, l.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("439431").then(n.bind(n, "439431"));
                                return n => (0, s.jsx)(e, {
                                    ...n,
                                    onSlideChange: t
                                })
                            }, {
                                onCloseRequest: g.NOOP,
                                onCloseCallback: e,
                                modalKey: a
                            })
                        },
                        predicate: () => M() && !R.CONFERENCE_MODE_ENABLED
                    }, {
                        key: "New User Age Gate",
                        open: u.openNewUserAgeGateModal,
                        predicate: () => v && !M() && !R.CONFERENCE_MODE_ENABLED
                    }, {
                        key: "Claim Account Modal",
                        open: e => u.openClaimAccountModal(m.isPlatformEmbedded, e),
                        predicate: () => {
                            var e;
                            return !r && null != C.default.getCurrentUser() && !(null === (e = C.default.getCurrentUser()) || void 0 === e ? void 0 : e.isClaimed()) && !R.CONFERENCE_MODE_ENABLED
                        }
                    }, {
                        key: "Verification Gate with Claim Account",
                        open: e => (0, d.openMemberVerificationModal)(L, null != e ? e : void 0),
                        predicate: () => {
                            var e;
                            return r && !(null === (e = C.default.getCurrentUser()) || void 0 === e ? void 0 : e.isClaimed()) && !R.CONFERENCE_MODE_ENABLED
                        }
                    }, {
                        key: "Guild Welcome Modal",
                        open: e => (0, l.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("900257").then(n.bind(n, "900257"));
                            return t => (0, s.jsx)(e, {
                                ...t,
                                guildId: L
                            })
                        }, {
                            onCloseCallback: e
                        }),
                        predicate: () => null != L && null != f.default.get(L) && f.default.get(L) !== f.NO_WELCOME_SCREEN
                    }], t = () => {
                        S.setNewUserFlowCompleted(), c.default.flowStep(O.FlowType.ANY, O.RegistrationSteps.NUF_COMPLETE, !0)
                    }, [...e].reverse().forEach(e => {
                        let n = t;
                        t = () => {
                            e.predicate() ? e.open(n) : n()
                        }
                    }), t()
                }
            }
            var v = new M
        },
        61845: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("913144"),
                i = n("820542"),
                r = n("870691"),
                o = n("282109"),
                u = n("629220"),
                d = n("986003"),
                c = n("49111");

            function E(e) {
                l.default.dispatch({
                    type: "CLEAR_PENDING_CHANNEL_AND_ROLE_UPDATES",
                    guildId: e
                })
            }

            function f(e) {
                let t = (0, s.useStateFromStores)([o.default], () => o.default.getPendingChannelUpdates(e));
                a.useEffect(() => (E(e), () => E(e)), [e]), a.useEffect(() => {
                    null != t && (0, u.updateOptInChannelsBatched)(e, t)
                }, [e, t]);
                let n = a.useCallback((e, t, n) => {
                    let a = o.default.isChannelOptedIn(e, t),
                        s = t === n;
                    !a && r.default.isCollapsed(n) && null != n && (0, i.categoryExpand)(n), (0, d.hasNotSetUpChannelOptIn)(e) ? s ? (0, d.optIntoAllChannelsForExistingMember)(e, {
                        include: new Set([t])
                    }) : (0, d.optIntoAllChannelsForExistingMember)(e, {
                        exclude: new Set([t])
                    }) : (0, u.updateOptInChannelsImmediate)(e, t, !a, {
                        section: c.AnalyticsSections.CHANNEL_BROWSER
                    })
                }, []);
                return {
                    onChannelClick: n
                }
            }
        },
        5973: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ChannelBrowserSidebar: function() {
                    return O
                },
                default: function() {
                    return L
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("665182"),
                d = n("462998"),
                c = n("982108"),
                E = n("245997"),
                f = n("923959"),
                _ = n("305961"),
                I = n("957255"),
                h = n("810567"),
                C = n("689476"),
                T = n("599110"),
                m = n("676143"),
                S = n("724268"),
                N = n("49111"),
                A = n("724210"),
                p = n("782340"),
                g = n("505658"),
                R = n("305794");

            function O(e) {
                let {
                    channelId: t
                } = e;
                return (0, a.jsx)(u.default, {
                    sidebarType: u.ChatSidebarType.ThreadSidebar,
                    maxWidth: 600,
                    children: (0, a.jsx)(d.default, {
                        channelId: t,
                        baseChannelId: A.StaticChannelRoute.CHANNEL_BROWSER
                    })
                })
            }

            function L(e) {
                let {
                    guildId: t
                } = e, [l, u] = s.useState(""), d = (0, r.useStateFromStores)([_.default], () => _.default.getGuild(t)), O = (0, r.useStateFromStores)([f.default], () => f.default.getChannels(t)), L = (0, r.useStateFromStores)([E.default], () => E.default.getCategories(t)), M = (0, m.useFilterCategoriesByQuery)(t, L, O, l), v = (0, r.useStateFromStores)([I.default], () => I.default.canWithPartialContext(N.Permissions.MANAGE_CHANNELS, {
                    guildId: t
                })), D = (0, r.useStateFromStores)([c.default], () => null != c.default.getCurrentSidebarChannelId(A.StaticChannelRoute.CHANNEL_BROWSER)), x = s.useCallback(() => u(""), [u]), P = s.useCallback(() => {
                    (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("581354").then(n.bind(n, "581354"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            channelType: null,
                            guildId: t
                        })
                    })
                }, [t]);
                return null == d ? null : (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsx)("div", {
                        className: i(R.chat, g.container),
                        children: (0, a.jsxs)("div", {
                            className: i(g.pageBody),
                            children: [(0, a.jsxs)("div", {
                                className: g.header,
                                children: [(0, a.jsx)(h.default, {
                                    className: g.search,
                                    size: h.default.Sizes.MEDIUM,
                                    query: l,
                                    onChange: e => {
                                        "" === l && "" !== e && T.default.track(N.AnalyticEvents.SEARCH_STARTED, {
                                            search_type: "channel browser"
                                        }), u(e.toLowerCase())
                                    },
                                    onClear: x,
                                    placeholder: p.default.Messages.CHANNEL_BROWSER_SEARCH_PLACEHOLDER
                                }), v ? (0, a.jsxs)(o.Button, {
                                    className: g.createButton,
                                    innerClassName: g.createButtonInner,
                                    onClick: P,
                                    children: [(0, a.jsx)(C.default, {
                                        className: g.createIcon
                                    }), p.default.Messages.CREATE]
                                }) : null]
                            }), (0, a.jsx)(S.default, {
                                className: g.browser,
                                channels: O,
                                categories: M,
                                guild: d,
                                hasSidebar: D
                            })]
                        })
                    })
                })
            }
        },
        341258: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsChecked: function() {
                    return r
                },
                useIsDisabled: function() {
                    return o
                },
                useDisabledTooltip: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("282109"),
                l = n("986003"),
                i = n("782340");

            function r(e, t, n) {
                return (0, a.useStateFromStores)([s.default], () => {
                    var a, i, r;
                    if (t === n) return s.default.isChannelOptedIn(e, t, !0);
                    return a = e, i = t, r = s.default, !!(0, l.hasNotSetUpChannelOptIn)(a) || r.isChannelOptedIn(a, i, !0) || null != n && s.default.isChannelOptedIn(e, n, !0)
                })
            }

            function o(e, t, n) {
                return (0, a.useStateFromStores)([s.default], () => t !== n && null != n && s.default.isChannelOptedIn(e, n, !0))
            }

            function u(e, t) {
                return (0, a.useStateFromStores)([s.default], () => {
                    if (null != t && s.default.isChannelOptedIn(e, t, !0)) return i.default.Messages.CHANNEL_BROWSER_DISABLED_BY_CATEGORY
                })
            }
        },
        724268: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return k
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("151426"),
                u = n("669491"),
                d = n("77078"),
                c = n("272030"),
                E = n("483038"),
                f = n("10641"),
                _ = n("848848"),
                I = n("915675"),
                h = n("41594"),
                C = n("367376"),
                T = n("15684"),
                m = n("393414"),
                S = n("208021"),
                N = n("716214"),
                A = n("401690"),
                p = n("98292"),
                g = n("956089"),
                R = n("676143"),
                O = n("61845"),
                L = n("341258"),
                M = n("9108"),
                v = n("49111"),
                D = n("724210"),
                x = n("782340"),
                P = n("360330");
            let y = new Set([v.ChannelTypes.GUILD_FORUM, v.ChannelTypes.GUILD_MEDIA]),
                b = new Set([v.ChannelTypes.GUILD_VOICE, v.ChannelTypes.GUILD_STAGE_VOICE]);

            function U(e) {
                let {
                    guild: t,
                    channel: s,
                    onCategoryClick: l
                } = e, r = (0, L.useIsChecked)(t.id, s.id, s.id), o = (0, L.useIsDisabled)(t.id, s.id, s.id);
                return (0, a.jsxs)("div", {
                    className: i(P.categoryRow, {
                        [P.uncategorized]: "null" === s.id
                    }),
                    onContextMenu: e => {
                        (0, c.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("142047").then(n.bind(n, "142047"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: s,
                                guild: t
                            })
                        })
                    },
                    children: [(0, a.jsx)(d.Text, {
                        className: P.categoryText,
                        color: "text-muted",
                        variant: "text-xs/semibold",
                        lineClamp: 1,
                        children: s.name
                    }), "null" !== s.id && !o && (0, a.jsxs)(d.Clickable, {
                        className: P.selectAll,
                        onClick: () => {
                            !o && l(t.id, s.id, s.id)
                        },
                        children: [(0, a.jsx)(d.Checkbox, {
                            className: P.selectAllCheckbox,
                            size: 14,
                            shape: d.Checkbox.Shapes.SMALL_BOX,
                            value: r,
                            type: d.Checkbox.Types.INVERTED,
                            displayOnly: !0
                        }), (0, a.jsx)(d.Text, {
                            color: "text-muted",
                            variant: "text-xs/medium",
                            children: x.default.Messages.CHANNEL_BROWSER_SELECT_ALL
                        })]
                    })]
                })
            }
            let G = s.memo(function() {
                    return (0, a.jsx)("div", {
                        className: P.separator
                    })
                }),
                j = s.memo(function(e) {
                    let {
                        index: t
                    } = e;
                    return (0, a.jsx)(d.Text, {
                        variant: "text-xs/normal",
                        className: P.subtitleSeparator,
                        children: "\xb7"
                    }, "separator-".concat(t))
                }),
                F = s.memo(function(e) {
                    let {
                        channel: t,
                        category: s,
                        guild: l,
                        isFirstChannel: o,
                        isLastChannel: f,
                        onChannelClick: O,
                        tooltipDirection: M = "right"
                    } = e, {
                        isSubscriptionGated: U
                    } = (0, _.default)(t.id), F = (0, L.useIsChecked)(l.id, t.id, s.id), k = (0, L.useIsDisabled)(l.id, t.id, s.id), B = (0, L.useDisabledTooltip)(l.id, s.id), w = (0, r.useStateFromStores)([A.default], () => A.default.getActiveThreadCount(l.id, t.id)), H = (0, r.useStateFromStores)([E.default], () => E.default.getHighlightedMessageIdCount(t.id)), V = (0, r.useStateFromStores)([T.default], () => T.default.shouldIndicateNewChannel(l.id, t.id)), Y = e => {
                        if (!k) return e.stopPropagation(), O(l.id, t.id, s.id), !0
                    }, W = e => {
                        t.isGuildVocal() ? (0, c.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("168003").then(n.bind(n, "168003"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t,
                                guild: l
                            })
                        }) : (0, c.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("327241").then(n.bind(n, "327241"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t,
                                guild: l
                            })
                        })
                    }, K = function(e, t, n) {
                        let s = [];
                        return n > 0 && s.push((0, a.jsx)(d.Text, {
                            variant: "text-xs/medium",
                            className: P.channelSubtitle,
                            color: "text-brand",
                            children: x.default.Messages.CHANNEL_HIGHLIGHTS_COUNT.format({
                                count: n
                            })
                        }, "thread-count")), v.ChannelTypesSets.GUILD_THREADS_ONLY.has(e.type) && t >= 1 && s.push((0, a.jsx)(d.Text, {
                            variant: "text-xs/normal",
                            className: P.channelSubtitle,
                            children: x.default.Messages.ACTIVE_FORUM_POST_COUNT.format({
                                count: t
                            })
                        }, "thread-count")), !b.has(e.type) && s.push((0, a.jsx)(d.Text, {
                            variant: "text-xs/normal",
                            className: P.channelSubtitle,
                            children: (0, R.getActiveAgoTimestamp)(e.id)
                        }, "active")), null != e.topic && e.topic.length > 0 && s.push((0, a.jsx)(p.default, {
                            children: (0, a.jsx)(d.Text, {
                                className: P.topic,
                                variant: "text-xs/normal",
                                children: C.default.parseTopic(e.topic, !0, {
                                    channelId: e.id
                                })
                            })
                        }, "topic")), [s.map((e, t) => [e, (0, a.jsx)(j, {
                            index: t
                        }, "subtitle-separator-".concat(t))])].flat(2).slice(0, -1)
                    }(t, w, H), z = e => (e.stopPropagation(), y.has(t.type) || e.shiftKey) ? ((0, m.transitionToGuild)(l.id, t.id), !0) : t.isGuildStageVoice() || t.isGuildVoice() ? ((0, N.connectAndOpen)(t), !0) : (S.default.openChannelAsSidebar({
                        guildId: t.guild_id,
                        channelId: t.id,
                        baseChannelId: D.StaticChannelRoute.CHANNEL_BROWSER
                    }), !0), q = x.default.Messages.CHANNEL_BROWSER_VIEW;
                    t.isGuildStageVoice() || t.isGuildVoice() ? q = x.default.Messages.JOIN : t.isForumLikeChannel() && (q = x.default.Messages.OPEN);
                    let Q = k ? "text-muted" : "text-normal",
                        X = (0, d.useToken)(k ? u.default.colors.TEXT_MUTED : u.default.colors.TEXT_NORMAL).hex();
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(d.Tooltip, {
                            text: B,
                            delay: 500,
                            position: M,
                            children: e => (0, a.jsxs)(d.Clickable, {
                                className: i(P.channelRow, {
                                    [P.firstChannel]: o,
                                    [P.lastChannel]: f,
                                    [P.disabled]: k
                                }),
                                ...e,
                                onClick: Y,
                                onContextMenu: W,
                                children: [(0, a.jsxs)("div", {
                                    className: P.channelInfo,
                                    children: [(0, a.jsxs)("div", {
                                        className: P.channelName,
                                        children: [(0, a.jsx)(h.ChannelItemIcon, {
                                            channel: t,
                                            guild: l
                                        }), (0, a.jsx)(p.default, {
                                            className: P.name,
                                            children: (0, a.jsx)(d.Text, {
                                                className: P.channelText,
                                                variant: "text-md/medium",
                                                lineClamp: 1,
                                                color: Q,
                                                children: t.name
                                            })
                                        }), U ? (0, a.jsx)(I.default, {
                                            color: X,
                                            className: P.premiumIcon
                                        }) : null, V ? (0, a.jsx)(g.TextBadge, {
                                            text: x.default.Messages.NEW,
                                            color: u.default.unsafe_rawColors.BRAND_260.css,
                                            className: P.titleBadge
                                        }) : null]
                                    }), (0, a.jsx)("div", {
                                        className: P.channelSubtitles,
                                        children: K
                                    })]
                                }), (0, a.jsxs)("div", {
                                    className: P.channelActions,
                                    children: [(0, a.jsx)(d.Button, {
                                        look: d.ButtonLooks.OUTLINED,
                                        color: d.ButtonColors.PRIMARY,
                                        size: d.ButtonSizes.SMALL,
                                        className: P.viewChannelButton,
                                        onClick: z,
                                        children: q
                                    }), (0, a.jsx)(d.Checkbox, {
                                        "aria-checked": F,
                                        value: F,
                                        type: d.Checkbox.Types.INVERTED,
                                        disabled: k,
                                        innerClassName: P.checkboxInner,
                                        displayOnly: !0
                                    })]
                                })]
                            })
                        }), !f && (0, a.jsx)(G, {})]
                    })
                });

            function k(e) {
                let {
                    categories: t,
                    guild: n,
                    className: l,
                    innerClassName: r,
                    hasSidebar: u
                } = e, {
                    onChannelClick: c
                } = (0, O.default)(n.id), E = (0, f.useIsDismissibleContentDismissed)(o.DismissibleContent.CHANNEL_BROWSER_NUX), _ = E ? 0 : -1, I = s.useCallback(e => {
                    let {
                        section: s
                    } = e;
                    if (0 === s && -1 === _) return null;
                    let l = t._categories[s + _];
                    return (0, a.jsx)(U, {
                        channel: l.channel,
                        guild: n,
                        onCategoryClick: c
                    }, l.channel.id)
                }, [t, n, _, c]), h = s.useCallback(e => {
                    let {
                        section: s,
                        row: l
                    } = e;
                    if (0 === s && -1 === _) return (0, a.jsx)(M.default, {
                        guild: n
                    });
                    let i = t._categories[s + _],
                        r = t[i.channel.id][l];
                    return null == r ? null : (0, a.jsx)(F, {
                        category: i.channel,
                        channel: r.channel,
                        guild: n,
                        isFirstChannel: 0 === l,
                        isLastChannel: t[i.channel.id].length - 1 === l,
                        tooltipDirection: u ? "right" : "top",
                        onChannelClick: c
                    }, r.channel.id)
                }, [t, n, _, u, c]), C = (0, M.useNuxCardHeight)(n.id), T = (0, R.useChannelBrowserSections)(n.id, t, 64, C);
                return (0, a.jsx)(d.ListAuto, {
                    className: l,
                    innerClassName: i(r, P.scrollerInner),
                    sectionHeight: 48,
                    rowHeight: e => T[e].rowHeight,
                    renderSection: I,
                    renderRow: h,
                    sections: T.map(e => e.rowCount)
                }, "channel-browser-list")
            }
        },
        9108: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useNuxCardHeight: function() {
                    return T
                },
                default: function() {
                    return m
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("151426"),
                r = n("77078"),
                o = n("10641"),
                u = n("592407"),
                d = n("584027"),
                c = n("945330"),
                E = n("512395"),
                f = n("49111"),
                _ = n("994428"),
                I = n("782340"),
                h = n("20458"),
                C = n("652720");

            function T(e) {
                let t = (0, E.useShouldShowOnboardingAdminUpsellForGuild)(e);
                return t ? 250 : 152
            }

            function m(e) {
                let {
                    guild: t
                } = e, n = (0, E.useShouldShowOnboardingAdminUpsellForGuild)(t.id), s = (0, o.useIsDismissibleContentDismissed)(i.DismissibleContent.GUILD_HEADER_COMMUNITY_ONBOARDING_ADMIN_UPSELL), T = n && !s ? i.DismissibleContent.GUILD_HEADER_COMMUNITY_ONBOARDING_ADMIN_UPSELL : i.DismissibleContent.CHANNEL_BROWSER_NUX;
                (0, o.requestMarkDismissibleContentAsShown)(T);
                let m = n ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        children: [(0, a.jsx)(r.Heading, {
                            className: h.heading,
                            color: "always-white",
                            variant: "heading-lg/semibold",
                            children: I.default.Messages.CHANNEL_BROWSER_ADMIN_NUX_TITLE
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-md/normal",
                            color: "always-white",
                            children: I.default.Messages.CHANNEL_BROWSER_ADMIN_NUX_DESCRIPTION
                        }), (0, a.jsx)(r.Button, {
                            className: h.checkItOut,
                            onClick: () => {
                                u.default.open(t.id, f.GuildSettingsSections.ONBOARDING), (0, o.markDismissibleContentAsDismissed)(T, {
                                    dismissAction: _.ContentDismissActionType.PRIMARY
                                })
                            },
                            look: r.Button.Looks.INVERTED,
                            children: (0, a.jsx)(r.Text, {
                                variant: "text-md/medium",
                                color: "none",
                                children: I.default.Messages.CHANNEL_BROWSER_ADMIN_NUX_CTA
                            })
                        })]
                    }), (0, a.jsx)(d.OnboardingPreview, {
                        isTooltip: !0
                    })]
                }) : (0, a.jsxs)("div", {
                    className: h.nuxContent,
                    children: [(0, a.jsx)("img", {
                        width: 180,
                        className: h.image,
                        src: C,
                        alt: "",
                        "aria-hidden": !0
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(r.Heading, {
                            className: h.heading,
                            variant: "heading-lg/semibold",
                            color: "header-primary",
                            children: I.default.Messages.CHANNEL_BROWSER_NUX_TITLE
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-md/normal",
                            color: "header-secondary",
                            children: I.default.Messages.CHANNEL_BROWSER_NUX_DESCRIPTION
                        }), (0, a.jsx)(r.Text, {
                            className: h.tip,
                            variant: "text-md/normal",
                            color: "header-secondary",
                            children: I.default.Messages.CHANNEL_BROWSER_NUX_DESCRIPTION_2.format()
                        })]
                    })]
                });
                return (0, a.jsxs)("div", {
                    className: l(h.container, {
                        [h.adminUpsell]: n
                    }),
                    children: [(0, a.jsx)(r.Clickable, {
                        className: h.closeButton,
                        onClick: () => {
                            (0, o.markDismissibleContentAsDismissed)(T, {
                                dismissAction: _.ContentDismissActionType.DISMISS
                            })
                        },
                        children: (0, a.jsx)(c.default, {})
                    }), m]
                })
            }
        },
        710768: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = {
                isScreenLandscape: () => null
            }
        },
        755729: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return e$
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("151426"),
                u = n("862337"),
                d = n("966900"),
                c = n("358917"),
                E = n("397659"),
                f = n("359902"),
                _ = n("696675"),
                I = n("780624"),
                h = n("696526"),
                C = n("197801"),
                T = n("582601"),
                m = n("77078"),
                S = n("850068"),
                N = n("272030"),
                A = n("79112"),
                p = n("146350"),
                g = n("901582"),
                R = n("415929"),
                O = n("687531"),
                L = n("875212"),
                M = n("899633"),
                v = n("126259"),
                D = n("606292"),
                x = n("489740"),
                P = n("355025"),
                y = n("842272"),
                b = n("14124"),
                U = n("959646"),
                G = n("338677"),
                j = n("805172"),
                F = n("580280"),
                k = n("20606"),
                B = n("225772"),
                w = n("775377"),
                H = n("10641"),
                V = n("509802"),
                Y = n("243632"),
                W = n("180273"),
                K = n("579565"),
                z = n("473503"),
                q = n("257426"),
                Q = n("76393"),
                X = n("957833"),
                J = n("397009"),
                Z = n("337328"),
                $ = n("167209"),
                ee = n("691818"),
                et = n("106457"),
                en = n("507917"),
                ea = n("662286"),
                es = n("642839"),
                el = n("837944"),
                ei = n("374089"),
                er = n("189726"),
                eo = n("666647"),
                eu = n("286914"),
                ed = n("235004"),
                ec = n("696770"),
                eE = n("506885"),
                ef = n("845579"),
                e_ = n("933422"),
                eI = n("924658"),
                eh = n("244390"),
                eC = n("271938"),
                eT = n("42203"),
                em = n("778588"),
                eS = n("42887"),
                eN = n("945956"),
                eA = n("101125"),
                ep = n("102985"),
                eg = n("697218"),
                eR = n("521012"),
                eO = n("145131"),
                eL = n("398288"),
                eM = n("837899"),
                ev = n("425190"),
                eD = n("474571"),
                ex = n("272339"),
                eP = n("200639"),
                ey = n("925877"),
                eb = n("849467"),
                eU = n("97347"),
                eG = n("962541"),
                ej = n("78574"),
                eF = n("329858"),
                ek = n("956089"),
                eB = n("599110"),
                ew = n("315102"),
                eH = n("306160"),
                eV = n("719923"),
                eY = n("197881"),
                eW = n("158998"),
                eK = n("50885"),
                ez = n("49111"),
                eq = n("411511"),
                eQ = n("782340"),
                eX = n("374555");
            let eJ = eK.default.getEnableHardwareAcceleration() ? m.AnimatedAvatar : m.Avatar;
            class eZ extends s.PureComponent {
                get isCopiedStreakGodlike() {
                    let {
                        copiedStreak: e
                    } = this.state;
                    return e >= 10
                }
                componentDidUpdate(e) {
                    let {
                        speakingWhileMuted: t,
                        occluded: n
                    } = e, {
                        speakingWhileMuted: a,
                        occluded: s
                    } = this.props;
                    s !== n && this.handleOccludedChanged(), a !== t && this.handleSpeakingWhileMutedChanged()
                }
                componentWillUnmount() {
                    this.copiedTimeout.stop(), this.copiedDecayTimeout.stop(), this.speakingWhileMutedTooltipTimeout.stop()
                }
                renderCopiedSuccess() {
                    let {
                        copiedStreak: e
                    } = this.state, t = [eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_1, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_2, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_3, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_4, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_5, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_6, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_7, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_8, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_9, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_10, eQ.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_11], n = Math.min(Math.max(0, e - 1), t.length - 1);
                    return (0, a.jsx)(m.Shaker, {
                        isShaking: this.isCopiedStreakGodlike,
                        children: t[n]
                    })
                }
                renderNameTag() {
                    let e;
                    let {
                        hovered: t
                    } = this.state, {
                        customStatusActivity: n,
                        userTag: s,
                        currentUser: l,
                        status: i
                    } = this.props;
                    if (null == l) return null;
                    let r = eW.default.getName(l),
                        o = null != i && i !== ez.StatusTypes.UNKNOWN,
                        u = null != n;
                    return (u || o && l.isPomelo()) && (e = (0, a.jsx)(eL.default, {
                        hoverText: s,
                        forceHover: t,
                        children: u ? (0, a.jsx)(w.default, {
                            activity: n,
                            emojiClassName: eX.emoji,
                            className: eX.customStatus
                        }) : eW.default.humanizeStatus(i)
                    })), (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("div", {
                            className: eX.panelTitleContainer,
                            children: (0, a.jsx)(eF.default, {
                                children: r
                            })
                        }), (0, a.jsx)("div", {
                            className: eX.panelSubtextContainer,
                            children: (0, a.jsx)(ej.default, {
                                children: null != e ? e : s
                            })
                        })]
                    })
                }
                renderCopiableNameTag() {
                    let {
                        currentUser: e
                    } = this.props, {
                        shouldShowNametagTooltip: t,
                        shouldShowCopiedFeedback: n
                    } = this.state;
                    if (null == e) return null;
                    let s = null,
                        l = m.TooltipColors.PRIMARY;
                    return eH.SUPPORTS_COPY && (s = eQ.default.Messages.ACCOUNT_CLICK_TO_COPY, n && (s = this.renderCopiedSuccess(), l = this.isCopiedStreakGodlike ? m.TooltipColors.RED : m.TooltipColors.GREEN)), (0, a.jsx)(m.Tooltip, {
                        text: s,
                        forceOpen: t,
                        "aria-label": !!eH.SUPPORTS_COPY && eQ.default.Messages.ACCOUNT_CLICK_TO_COPY,
                        color: l,
                        delay: 500,
                        onAnimationRest: (e, a) => {
                            n && !t && a.phase === ez.SpringTransitionPhases.LEAVE && this.setState({
                                shouldShowCopiedFeedback: !1
                            })
                        },
                        children: e => {
                            let {
                                onClick: t,
                                onMouseEnter: s,
                                ...l
                            } = e;
                            return (0, a.jsx)(m.Clickable, {
                                ...l,
                                onMouseEnter: () => {
                                    if (n) this.copiedTimeout.stop(), this.setState({
                                        shouldShowNametagTooltip: !1
                                    }, s);
                                    else null == s || s()
                                },
                                onClick: () => {
                                    null == t || t(), this.handleCopyTag()
                                },
                                className: i(eX.nameTag, {
                                    [eX.canCopy]: eH.SUPPORTS_COPY
                                }),
                                children: this.renderNameTag()
                            })
                        }
                    })
                }
                renderAvatarWithPopout() {
                    let {
                        speaking: e,
                        streaming: t,
                        currentUser: n,
                        status: s,
                        showTagAsButton: l,
                        showTaglessAccountPanel: r
                    } = this.props;
                    if (null == n) return null;
                    let o = (0, ew.getAvatarDecorationURL)({
                        avatarDecoration: n.avatarDecoration,
                        size: (0, D.getDecorationSizeForAvatarSize)(m.AvatarSizes.SIZE_32)
                    });
                    return (0, a.jsx)(g.default, {
                        object: ez.AnalyticsObjects.AVATAR,
                        children: (0, a.jsx)(m.Popout, {
                            renderPopout: this.renderStatusPickerPopout,
                            position: "top",
                            align: "left",
                            animation: m.Popout.Animation.FADE,
                            spacing: 14,
                            fixed: !0,
                            preload: () => (0, eE.default)(n.id, null == n ? void 0 : n.getAvatarURL(null, 80)),
                            children: (u, d) => (0, a.jsxs)(m.Clickable, {
                                ...u,
                                "aria-label": eQ.default.Messages.SET_STATUS,
                                className: i(eX.avatarWrapper, {
                                    [eX.withTagAsButton]: l,
                                    [eX.withTagless]: r
                                }),
                                children: [(0, a.jsx)(eJ, {
                                    size: m.AvatarSizes.SIZE_32,
                                    src: n.getAvatarURL(void 0, 32, !1),
                                    avatarDecoration: o,
                                    "aria-label": n.username,
                                    status: t ? ez.StatusTypes.STREAMING : s,
                                    isSpeaking: e,
                                    className: eX.avatar
                                }), l || r ? (0, a.jsx)("div", {
                                    className: i(eX.nameTag, {
                                        [eX.canCopy]: eH.SUPPORTS_COPY
                                    }),
                                    children: r ? (0, a.jsx)(eG.default, {
                                        tooltipText: null,
                                        icon: d.isShown ? eM.default : ev.default,
                                        role: "switch",
                                        "aria-label": eQ.default.Messages.SET_STATUS
                                    }) : this.renderNameTag()
                                }) : null]
                            })
                        })
                    })
                }
                renderNameZone() {
                    let {
                        currentUser: e,
                        dismissibleContents: t
                    } = this.props, {
                        showTagAsButton: n,
                        showTaglessAccountPanel: s
                    } = this.props;
                    return null == e ? null : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(V.default, {
                            contentTypes: t.avatar,
                            children: e => {
                                let {
                                    visibleContent: t
                                } = e;
                                return this.renderAvatarWithPopout()
                            }
                        }), n || s ? null : this.renderCopiableNameTag()]
                    })
                }
                render() {
                    let {
                        currentUser: e,
                        selfDeaf: t,
                        selfMute: n,
                        awaitingRemote: s,
                        serverMute: l,
                        serverDeaf: r,
                        suppress: u,
                        dismissibleContents: d
                    } = this.props, {
                        shouldShowSpeakingWhileMutedTooltip: c
                    } = this.state;
                    if (null == e) return null;
                    let E = n || u || l,
                        f = t || r;
                    return (0, a.jsxs)("div", {
                        className: eX.container,
                        onMouseEnter: this.handleMouseEnter,
                        onMouseLeave: this.handleMouseLeave,
                        children: [this.renderNameZone(), (0, a.jsxs)(eO.default, {
                            grow: 0,
                            children: [(0, a.jsx)(eG.default, {
                                tooltipText: c ? eQ.default.Messages.ACCOUNT_SPEAKING_WHILE_MUTED : (0, b.default)(n, l, u, s),
                                tooltipColor: c ? m.TooltipColors.GREEN : void 0,
                                tooltipForceOpen: c || void 0,
                                onMouseEnter: this.handleMouseEnterMute,
                                onMouseLeave: this.handleMouseLeaveMute,
                                icon: (0, a.jsx)(e1, {
                                    selfMute: n,
                                    serverMute: l,
                                    suppress: u
                                }),
                                iconForeground: E ? eX.strikethrough : null,
                                onClick: this.handleToggleSelfMute,
                                innerClassName: i({
                                    [eX.redIcon]: l || u
                                }),
                                onContextMenu: this.handleInputAudioContextMenu,
                                role: "switch",
                                "aria-label": eQ.default.Messages.MUTE,
                                "aria-checked": E,
                                disabled: s
                            }), (0, a.jsx)(eG.default, {
                                tooltipText: (0, y.default)(t, r, s),
                                icon: (0, a.jsx)(e4, {
                                    selfDeaf: t,
                                    serverDeaf: r
                                }),
                                onClick: this.handleToggleSelfDeaf,
                                onContextMenu: this.handleOutputAudioContextMenu,
                                innerClassName: i({
                                    [eX.redIcon]: r
                                }),
                                iconForeground: f ? eX.strikethrough : null,
                                role: "switch",
                                "aria-label": eQ.default.Messages.DEAFEN,
                                "aria-checked": f,
                                disabled: s
                            }), (0, a.jsx)(V.default, {
                                contentTypes: d.settings,
                                children: e => {
                                    let {
                                        visibleContent: t,
                                        markAsDismissed: n
                                    } = e;
                                    switch (t) {
                                        case o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(en.default, {}),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(z.default, {
                                                    markAsDismissed: n,
                                                    partnerGame: eq.PartnerGame.FORTNITE
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(q.default, {
                                                    markAsDismissed: n,
                                                    partnerGame: eq.PartnerGame.FORTNITE
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_SAFE_DIRECT_MESSAGING:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(e_.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_BLOCK:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(er.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_MUTE:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(eo.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ec.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_REPORTING:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(eu.UserSafetyEducationReportingCoachmark, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.COLLECTIBLES_AVATAR_DECORATION_SHOP_COACHMARK:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(v.default, {}),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.COLLECTIBLES_PROFILE_EFFECT_SHOP_COACHMARK:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(es.default, {}),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_COACHMARK:
                                            return (0, a.jsx)(m.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(F.default, {}),
                                                children: this.renderSettingsGear
                                            });
                                        default:
                                            return this.renderSettingsGear()
                                    }
                                }
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.copiedTimeout = new u.Timeout, this.copiedDecayTimeout = new u.Timeout, this.speakingWhileMutedTooltipTimeout = new u.Timeout, this.state = {
                        hovered: !1,
                        copiedStreak: 0,
                        shouldShowNametagTooltip: !1,
                        shouldShowCopiedFeedback: !1,
                        shouldShowSpeakingWhileMutedTooltip: !1,
                        hoveringOnMute: !1
                    }, this.handleToggleSelfMute = () => {
                        let {
                            serverMute: e,
                            suppress: t
                        } = this.props;
                        (0, G.default)(e, t)
                    }, this.handleToggleSelfDeaf = () => {
                        let {
                            serverDeaf: e
                        } = this.props;
                        (0, U.default)(e)
                    }, this.handleOpenAccountSettings = () => {
                        this.handleOpenSettings()
                    }, this.handleOpenSettings = function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ez.UserSettingsSections.ACCOUNT,
                            t = arguments.length > 1 ? arguments[1] : void 0,
                            n = arguments.length > 2 ? arguments[2] : void 0;
                        A.default.open(e, t, n)
                    }, this.handleOpenSettingsContextMenu = e => {
                        let {
                            currentUser: t
                        } = this.props;
                        null != t && (0, N.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("727212").then(n.bind(n, "727212"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t,
                                premiumSubscription: this.props.premiumSubscription,
                                webBuildOverride: this.props.webBuildOverride
                            })
                        })
                    }, this.handleInputAudioContextMenu = e => {
                        (0, N.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("266392").then(n.bind(n, "266392"));
                            return () => (0, a.jsx)(e, {
                                onClose: N.closeContextMenu,
                                renderInputDevices: !0,
                                renderInputModes: !0,
                                renderInputVolume: !0
                            })
                        })
                    }, this.handleOutputAudioContextMenu = e => {
                        (0, N.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("266392").then(n.bind(n, "266392"));
                            return () => (0, a.jsx)(e, {
                                onClose: N.closeContextMenu,
                                renderOutputDevices: !0,
                                renderOutputVolume: !0
                            })
                        })
                    }, this.handleMouseEnter = () => {
                        this.setState({
                            hovered: !0
                        })
                    }, this.handleMouseLeave = () => {
                        this.setState({
                            hovered: !1
                        })
                    }, this.handleMouseEnterMute = () => {
                        this.setState({
                            hoveringOnMute: !0,
                            shouldShowSpeakingWhileMutedTooltip: !1
                        }), this.speakingWhileMutedTooltipTimeout.stop()
                    }, this.handleMouseLeaveMute = () => {
                        this.setState({
                            hoveringOnMute: !1
                        })
                    }, this.handleCopyTag = () => {
                        let {
                            currentUser: e
                        } = this.props, {
                            shouldShowNametagTooltip: t,
                            copiedStreak: n
                        } = this.state;
                        if (null == e) return;
                        (0, eH.copy)(eW.default.getUserTag(e, {
                            decoration: "never",
                            identifiable: "always"
                        })), eB.default.track(ez.AnalyticEvents.TEXT_COPIED, {
                            type: "User Tag"
                        });
                        let a = {
                            shouldShowCopiedFeedback: !0,
                            shouldShowNametagTooltip: !0
                        };
                        !t && (a.copiedStreak = n + 1), this.setState(a, () => {
                            this.copiedTimeout.start(1e3, () => this.setState({
                                shouldShowNametagTooltip: !1
                            })), this.copiedDecayTimeout.start(2e3, () => this.setState({
                                copiedStreak: 0
                            }))
                        })
                    }, this.handleOccludedChanged = () => {
                        let {
                            occluded: e
                        } = this.props;
                        e && this.setState({
                            shouldShowNametagTooltip: !1,
                            shouldShowSpeakingWhileMutedTooltip: !1
                        })
                    }, this.handleSpeakingWhileMutedChanged = () => {
                        let {
                            selfMute: e,
                            serverMute: t,
                            suppress: n,
                            speakingWhileMuted: a,
                            occluded: s
                        } = this.props, {
                            hoveringOnMute: l
                        } = this.state;
                        a ? !l && e && !t && !n && !s && this.setState({
                            shouldShowSpeakingWhileMutedTooltip: !0
                        }, () => {
                            this.speakingWhileMutedTooltipTimeout.start(2e3, () => this.setState({
                                shouldShowSpeakingWhileMutedTooltip: !1
                            }))
                        }) : (this.setState({
                            shouldShowSpeakingWhileMutedTooltip: !1
                        }), this.speakingWhileMutedTooltipTimeout.stop())
                    }, this.renderStatusPickerPopout = e => {
                        let {
                            closePopout: t
                        } = e, {
                            showRichProfilePopup: n,
                            currentUser: s
                        } = this.props;
                        if (n) {
                            let e = {
                                userId: null == s ? void 0 : s.id,
                                user: s,
                                onClose: () => {
                                    this.handleMouseLeave(), null == t || t()
                                }
                            };
                            return (0, a.jsx)("div", {
                                className: eX.accountProfilePopoutWrapper,
                                children: (0, a.jsx)(Z.default, {
                                    ...e
                                })
                            })
                        }
                        return (0, a.jsx)(p.default, {
                            onClose: () => {
                                this.handleMouseLeave(), null == t || t()
                            }
                        })
                    }, this.renderSettingsGear = () => (0, a.jsx)(e0, {
                        isEligibleForPomelo: this.props.isEligibleForPomelo,
                        webBuildOverride: this.props.webBuildOverride,
                        onClick: this.handleOpenAccountSettings,
                        onContextMenu: this.handleOpenSettingsContextMenu
                    })
                }
            }

            function e$() {
                let e = (0, r.useStateFromStores)([eg.default], () => eg.default.getCurrentUser()),
                    t = (0, Y.useShowEligibilityEnrollmentTooltip)(eq.PartnerGame.FORTNITE),
                    n = (0, r.useStateFromStores)([eC.default], () => eC.default.getId()),
                    l = ef.CustomStatusSetting.useSetting(),
                    i = s.useMemo(() => null != l ? (0, B.default)(l) : null, [l]),
                    {
                        streaming: u,
                        status: d
                    } = (0, r.useStateFromStoresObject)([eA.default], () => ({
                        streaming: null != eA.default.findActivity(e => e.type === ez.ActivityTypes.STREAMING),
                        status: eA.default.getStatus()
                    })),
                    c = (0, M.default)({
                        userId: n
                    }),
                    E = eW.default.useUserTag(e, {
                        decoration: "never"
                    }),
                    f = (0, r.useStateFromStores)([ep.default], () => ep.default.hidePersonalInformation),
                    _ = (0, r.useStateFromStores)([eN.default, eT.default], () => {
                        let e = eN.default.getChannelId();
                        return null != e ? eT.default.getChannel(e) : null
                    }),
                    {
                        mute: I,
                        selfMute: h,
                        suppress: C
                    } = (0, eh.default)(_),
                    {
                        selfDeaf: T,
                        deaf: N
                    } = (0, eI.default)(_),
                    A = (0, r.useStateFromStores)([x.default], () => {
                        var e;
                        return (0, P.probablyHasBuildOverride)() ? null === (e = x.default.getCurrentBuildOverride().overrides) || void 0 === e ? void 0 : e.discord_web : null
                    }),
                    p = (0, r.useStateFromStores)([eR.default], () => eR.default.getPremiumTypeSubscription()),
                    g = (0, r.useStateFromStores)([eS.default], () => eS.default.getEverSpeakingWhileMuted()),
                    v = (0, r.useStateFromStores)([em.default], () => em.default.hasLayers()),
                    D = (0, m.useModalsStore)(m.hasAnyModalOpenSelector),
                    y = D || v || eY.ProcessArgs.isDisallowPopupsSet(),
                    b = (0, $.useIsEligibleForPomelo)();
                s.useEffect(() => {
                    J.default.trackExposure({
                        location: "08bd40_3"
                    })
                });
                let U = (0, r.useStateFromStores)([Q.default], () => null != Q.default.getAwaitingRemoteSessionInfo()),
                    {
                        isPopupEnabled: G,
                        isJoinedTagButtonEnabled: F,
                        isTaglessAccountPanelEnabled: k
                    } = J.default.useExperiment({
                        location: "08bd40_4"
                    }, {
                        autoTrackExposure: !1
                    }),
                    w = (0, r.useStateFromStores)([W.default], () => W.default.isCurrentQuestCompleted),
                    V = (0, r.useStateFromStores)([W.default], () => W.default.currentDropQuestGameTitle),
                    z = (0, X.useIsHomeSelected)(),
                    q = (0, O.useIsDmSpamFilterCoachmarkEnabled)(),
                    Z = (0, el.useCanSeeSafetyEducationBlockMuteCoachmark)(),
                    en = (0, R.useIsSafetyConsumerEducationBlockMuteBucket)(),
                    es = (0, ei.useCanSeeSafetyEducationReportingCoachmark)(),
                    er = "account";
                (0, L.useTriggerDebuggingAA)({
                    location: er + " auto on",
                    autoTrackExposure: !0
                }), (0, L.useTriggerDebuggingAA)({
                    location: er + " auto off",
                    autoTrackExposure: !1
                });
                let eo = (0, ea.useCanUseProfileEffects)({
                        location: "AccountSettingsUpsell"
                    }),
                    {
                        shopForAllEnabled: eu
                    } = (0, j.default)({
                        location: "Account"
                    });
                (0, el.useSafetyEducationAATriggerPoint)();
                let ec = (0, r.useStateFromStores)([ed.default], () => ed.default.hasHadOtherUserPlaySoundInSession()),
                    eE = function() {
                        let e = (0, H.useIsDismissibleContentDismissed)(o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2),
                            [t, n] = (0, r.useStateFromStoresArray)([ee.default], () => [ee.default.hasFetchedRelevance, ee.default.profileThemesRelevanceExceeded]),
                            [a, l] = (0, r.useStateFromStoresArray)([eR.default], () => [eR.default.hasFetchedMostRecentPremiumTypeSubscription(), eR.default.getMostRecentPremiumTypeSubscription()]),
                            {
                                enabled: i
                            } = et.default.useExperiment({
                                location: "08bd40_1"
                            }, {
                                autoTrackExposure: !0
                            }),
                            u = s.useMemo(() => {
                                let e = new Date().getTime();
                                return null != l && (l.status === ez.SubscriptionStatusTypes.ACTIVE || e - l.currentPeriodEnd.getTime() < 2592e6)
                            }, [l]);
                        return s.useEffect(() => {
                            let s = async () => {
                                if (!e && null == n && !!i) {
                                    if (!a) {
                                        await (0, S.fetchMostRecentSubscription)();
                                        return
                                    }!u && !t && await (0, S.getPerksRelevance)()
                                }
                            };
                            s()
                        }, [i, n, e, a, t, u]), !e && !!i && !u && null != n && n
                    }(),
                    e_ = {
                        avatar: [],
                        settings: []
                    };
                if (!y) {
                    if (eE && e_.settings.push(o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2), t) {
                        var eO;
                        e_.settings.push(o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP), w && V === (null === (eO = (0, K.getDrop)(eq.PartnerGame.FORTNITE)) || void 0 === eO ? void 0 : eO.title) && e_.settings.push(o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP)
                    }
                    z && q && e_.settings.push(o.DismissibleContent.USER_SAFETY_SAFE_DIRECT_MESSAGING), Z && (1 === en ? e_.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_MUTE) : e_.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_BLOCK)), ec && e_.settings.push(o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION), es && e_.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_REPORTING), eu && !eV.default.canUseCollectibles(e) ? e_.settings.push(o.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_COACHMARK) : (e_.settings.push(o.DismissibleContent.COLLECTIBLES_AVATAR_DECORATION_SHOP_COACHMARK), eo && e_.settings.push(o.DismissibleContent.COLLECTIBLES_PROFILE_EFFECT_SHOP_COACHMARK))
                }
                return (0, a.jsx)(eZ, {
                    currentUser: e,
                    customStatusActivity: i,
                    dismissibleContents: e_,
                    userTag: E,
                    hidePrivateData: f,
                    occluded: y,
                    premiumSubscription: p,
                    selfDeaf: T,
                    selfMute: h,
                    serverDeaf: N,
                    serverMute: I,
                    showRichProfilePopup: G,
                    showTagAsButton: F,
                    showTaglessAccountPanel: k,
                    speaking: c,
                    speakingWhileMuted: g,
                    status: d,
                    streaming: u,
                    suppress: C,
                    webBuildOverride: A,
                    awaitingRemote: U,
                    isEligibleForPomelo: b
                })
            }

            function e0(e) {
                let {
                    webBuildOverride: t,
                    isEligibleForPomelo: n,
                    onClick: s,
                    onContextMenu: l
                } = e, i = (0, m.useRedesignIconContext)().enabled, r = null, o = eD.default;
                return i ? o = null != t ? T.SettingsInfoIcon : n ? h.SettingsCircleIcon : C.SettingsIcon : null != t ? r = (0, a.jsx)(ey.default, {
                    width: 9,
                    height: 9,
                    className: eX.hasBuildOverride,
                    "aria-hidden": !0
                }) : n && (r = (0, a.jsx)(ek.CircleBadge, {
                    color: k.default.STATUS_DANGER,
                    className: eX.hasBuildOverride,
                    "aria-hidden": !0
                })), (0, a.jsx)(eG.default, {
                    tooltipText: null != t ? eQ.default.Messages.USER_SETTINGS_WITH_BUILD_OVERRIDE.format({
                        webBuildOverride: t.id
                    }) : eQ.default.Messages.USER_SETTINGS,
                    onClick: s,
                    onContextMenu: l,
                    innerClassName: null != t || n ? eX.buildOverrideButton : null,
                    icon: o,
                    children: r
                })
            }

            function e1(e) {
                let {
                    selfMute: t,
                    suppress: n,
                    serverMute: s
                } = e, l = (0, m.useRedesignIconContext)().enabled;
                if (l) {
                    let e, l;
                    return s ? (e = f.MicrophoneDenyIcon, l = m.tokens.colors.STATUS_DANGER) : e = n ? f.MicrophoneDenyIcon : t ? I.MicrophoneSlashIcon : _.MicrophoneIcon, (0, a.jsx)(e, {
                        width: 20,
                        height: 20,
                        color: null != l ? l : "currentColor"
                    })
                } {
                    let e = t || n || s,
                        l = e ? eU.default : eb.default;
                    return (0, a.jsx)(l, {
                        width: 20,
                        height: 20,
                        foreground: e ? eX.strikethrough : void 0
                    })
                }
            }

            function e4(e) {
                let {
                    selfDeaf: t,
                    serverDeaf: n
                } = e, s = (0, m.useRedesignIconContext)().enabled;
                if (s) {
                    let e, s;
                    return n ? (e = d.HeadphonesDenyIcon, s = m.tokens.colors.STATUS_DANGER) : e = t ? E.HeadphonesSlashIcon : c.HeadphonesIcon, (0, a.jsx)(e, {
                        width: 20,
                        height: 20,
                        color: null != s ? s : "currentColor"
                    })
                } {
                    let e = t ? eP.default : ex.default;
                    return (0, a.jsx)(e, {
                        width: 20,
                        height: 20,
                        foreground: t ? eX.strikethrough : void 0
                    })
                }
            }
        },
        566396: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("272030"),
                u = n("630273"),
                d = n("823704"),
                c = n("662285"),
                E = n("981601"),
                f = n("925758"),
                _ = n("27618"),
                I = n("697218"),
                h = n("663449"),
                C = n("449008"),
                T = n("782340");
            class m extends s.PureComponent {
                hasParty(e) {
                    return e.length > 1
                }
                handleStopListening() {
                    (0, d.default)()
                }
                renderUserPopout(e, t) {
                    return (0, a.jsx)(E.default, {
                        ...e,
                        userId: t.id
                    })
                }
                render() {
                    let {
                        currentUser: e,
                        host: t,
                        party: n
                    } = this.props;
                    return this.hasParty(n) && null != e ? (0, a.jsx)(h.default, {
                        currentUser: e,
                        host: t,
                        party: n,
                        renderUserPopout: this.renderUserPopout,
                        renderOverflowPopout: this.renderOverflowPopout,
                        onStopListening: this.handleStopListening,
                        onUserContextMenu: this.handleUserContextMenu
                    }) : null
                }
                constructor(...e) {
                    super(...e), this.handleUserContextMenu = (e, t) => {
                        (0, o.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        })
                    }, this.renderOverflowPopout = () => {
                        let {
                            party: e
                        } = this.props;
                        return (0, a.jsx)(u.default, {
                            party: e,
                            header: T.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENING_ALONG_COUNT.format({
                                count: e.length
                            })
                        })
                    }
                }
            }
            var S = r.default.connectStores([c.default, I.default, _.default, f.default], () => {
                let e, t;
                let n = c.default.getSyncingWith(),
                    a = c.default.getActivity(),
                    s = I.default.getCurrentUser(),
                    l = [];
                if (null != n ? (e = I.default.getUser(n.userId), t = n.partyId) : null != a && null != a.party && null != a.party.id && (e = s, t = a.party.id), null != t) {
                    var r;
                    l = i(Array.from(null !== (r = f.default.getParty(t)) && void 0 !== r ? r : [])).map(e => I.default.getUser(e)).filter(C.isNotNullish).orderBy([t => null == e || e.id === t.id, e => _.default.isFriend(e.id)], ["desc", "desc"]).value()
                }
                return {
                    currentUser: s,
                    host: e,
                    party: l
                }
            })(m)
        },
        618489: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ez
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("627445"),
                o = n.n(r),
                u = n("90915"),
                d = n("446674"),
                c = n("77078"),
                E = n("629109"),
                f = n("272030"),
                _ = n("406189"),
                I = n("32296"),
                h = n("412026"),
                C = n("86621"),
                T = n("997289"),
                m = n("244201"),
                S = n("140708"),
                N = n("84460"),
                A = n("191225"),
                p = n("372610"),
                g = n("380691"),
                R = n("943349"),
                O = n("702173"),
                L = n("10524"),
                M = n("478272"),
                v = n("812204"),
                D = n("685665"),
                x = n("754493"),
                P = n("458685"),
                y = n("679653"),
                b = n("76393"),
                U = n("261552"),
                G = n("167715"),
                j = n("479788"),
                F = n("16916"),
                k = n("597517"),
                B = n("269596"),
                w = n("38654"),
                H = n("393414"),
                V = n("245463"),
                Y = n("486185"),
                W = n("488464"),
                K = n("998716"),
                z = n("819450"),
                q = n("111542"),
                Q = n("924872"),
                X = n("274438"),
                J = n("808422"),
                Z = n("845579"),
                $ = n("999180"),
                ee = n("830210"),
                et = n("289180"),
                en = n("951691"),
                ea = n("19065"),
                es = n("977347"),
                el = n("799808"),
                ei = n("727284"),
                er = n("116439"),
                eo = n("373469"),
                eu = n("271938"),
                ed = n("42203"),
                ec = n("305961"),
                eE = n("778588"),
                ef = n("42887"),
                e_ = n("957255"),
                eI = n("945956"),
                eh = n("27618"),
                eC = n("697218"),
                eT = n("800762"),
                em = n("316133"),
                eS = n("145131"),
                eN = n("437825"),
                eA = n("406019"),
                ep = n("220075"),
                eg = n("82636"),
                eR = n("394832"),
                eO = n("394640"),
                eL = n("343571"),
                eM = n("962541"),
                ev = n("78574"),
                eD = n("599110"),
                ex = n("701909"),
                eP = n("158998"),
                ey = n("452469"),
                eb = n("997769"),
                eU = n("49111"),
                eG = n("533613"),
                ej = n("782340"),
                eF = n("833076"),
                ek = n("926622");

            function eB(e) {
                let t = e.currentTarget;
                eD.default.track(eU.AnalyticEvents.NOISE_CANCELLATION_LINK_CLICKED, {
                    text: t.text,
                    href: t.href,
                    location: {
                        section: eU.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                    }
                })
            }

            function ew() {
                let e = s.useRef(null);
                (0, c.useFocusLock)(e), s.useEffect(() => {
                    eD.default.track(eU.AnalyticEvents.OPEN_POPOUT, {
                        type: eU.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                    })
                }, []);
                let t = (0, d.useStateFromStores)([ef.default], () => ef.default.getNoiseCancellation());
                return (0, a.jsxs)("div", {
                    ref: e,
                    className: eF.noiseCancellationPopout,
                    children: [(0, a.jsx)(c.FormSwitch, {
                        hideBorder: !0,
                        className: ek.marginBottom4,
                        value: t,
                        onChange: () => E.default.setNoiseCancellation(!t, {
                            section: eU.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        }),
                        note: ej.default.Messages.NOISE_CANCELLATION_POPOUT_DESCRIPTION,
                        children: ej.default.Messages.NOISE_CANCELLATION_POPOUT_HEADER
                    }), (0, a.jsx)(I.default, {
                        title: ej.default.Messages.NOISE_CANCELLATION_POPOUT_MIC_TEST_TITLE,
                        notchBackground: I.NotchBackground.BLACK,
                        buttonTest: ej.default.Messages.NOISE_CANCELLATION_POPOUT_TEST,
                        buttonStop: ej.default.Messages.NOISE_CANCELLATION_POPOUT_STOP,
                        buttonClassName: eF.micTestButton,
                        buttonColor: c.Button.Colors.PRIMARY,
                        location: {
                            section: eU.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        }
                    }), (0, a.jsx)(c.FormTitle, {
                        tag: c.FormTitleTags.H5,
                        className: i(ek.marginBottom8, ek.marginTop20),
                        children: ej.default.Messages.NOISE_CANCELLATION_POPOUT_FOOTER
                    }), (0, a.jsxs)(eS.default, {
                        justify: eS.default.Justify.BETWEEN,
                        className: eF.footer,
                        children: [(0, a.jsx)(c.Anchor, {
                            href: eU.MarketingURLs.KRISP,
                            onClick: e => eB(e),
                            children: (0, a.jsx)("div", {
                                className: eF.krispLogo
                            })
                        }), (0, a.jsx)(c.Anchor, {
                            href: ex.default.getArticleURL(eU.HelpdeskArticles.NOISE_SUPPRESSION),
                            className: eF.krispLink,
                            onClick: e => eB(e),
                            children: ej.default.Messages.LEARN_MORE
                        })]
                    })]
                })
            }

            function eH() {
                let e = (0, d.useStateFromStores)([X.default], () => X.default.isMuted()),
                    t = e ? ej.default.Messages.STAGE_MUSIC_UNMUTE : ej.default.Messages.STAGE_MUSIC_MUTE;
                return (0, a.jsx)(eM.default, {
                    "aria-label": t,
                    tooltipText: t,
                    icon: e ? eL.default : eO.default,
                    onClick: () => (0, q.updateStageMusicMuted)(!e)
                })
            }

            function eV(e) {
                let {
                    channel: t,
                    enableActivities: n,
                    disabled: l
                } = e, r = (0, $.default)(), o = (0, et.default)(t), u = (0, d.useStateFromStoresObject)([A.default], () => null != A.default.getSelfEmbeddedActivityForChannel(t.id)), f = (0, V.default)(t), {
                    reachedLimit: _,
                    limit: I
                } = (0, ee.default)(t), h = s.useCallback(() => {
                    (0, ea.default)()
                }, []), C = (0, m.useAppContext)(), T = s.useCallback(e => {
                    if (ef.default.isVideoEnabled() === e) return;
                    let n = () => {
                        var n;
                        E.default.setVideoEnabled(e), e && (0, H.transitionTo)(eU.Routes.CHANNEL(null !== (n = t.getGuildId()) && void 0 !== n ? n : eU.ME, t.id))
                    };
                    e ? (0, ei.default)(n, C) : n()
                }, [t, C]), S = u || n || f, N = (0, a.jsx)(eN.default, {
                    className: i(eF.buttonIcon, {
                        [eF.withText]: !S
                    })
                });
                return (0, a.jsx)(er.VideoButtonWrapper, {
                    onChange: T,
                    onCameraUnavailable: h,
                    hasPermission: o,
                    channelLimit: I,
                    channelLimitReached: _,
                    ...r,
                    enabled: !l && r.enabled,
                    children: e => {
                        let {
                            unavailable: t,
                            active: n,
                            label: s,
                            iconComponent: l,
                            ...r
                        } = e;
                        return (0, a.jsx)(c.Popout, {
                            renderPopout: e => {
                                let {
                                    closePopout: t
                                } = e;
                                return (0, a.jsx)(P.default, {
                                    onClose: t
                                })
                            },
                            position: "top",
                            align: "center",
                            animation: c.Popout.Animation.FADE,
                            children: (e, l) => {
                                let {
                                    onClick: o,
                                    ...u
                                } = e, {
                                    isShown: d
                                } = l;
                                return (0, a.jsx)(c.Tooltip, {
                                    text: s,
                                    children: e => (0, a.jsx)(c.Button, {
                                        ...r,
                                        ...e,
                                        ...u,
                                        onClick: t => {
                                            var n;
                                            r.onClick(t), null === (n = e.onClick) || void 0 === n || n.call(e), d && o(t)
                                        },
                                        onContextMenu: t => {
                                            var n;
                                            o(t), null === (n = e.onContextMenu) || void 0 === n || n.call(e)
                                        },
                                        size: c.Button.Sizes.SMALL,
                                        className: i(eF.button, eF.buttonColor, {
                                            [eF.buttonActive]: n,
                                            [eF.fauxDisabled]: t,
                                            [eF.disabled]: r.disabled
                                        }),
                                        innerClassName: eF.buttonContents,
                                        wrapperClassName: eF.button,
                                        fullWidth: !0,
                                        children: S ? N : (0, a.jsxs)(eS.default, {
                                            align: eS.default.Align.CENTER,
                                            children: [N, ej.default.Messages.VIDEO]
                                        })
                                    })
                                })
                            }
                        })
                    }
                })
            }

            function eY(e) {
                let {
                    channel: t,
                    enableActivities: n
                } = e, s = (0, m.useAppContext)(), {
                    analyticsLocations: l
                } = (0, D.default)(), r = s === eU.AppContext.POPOUT, o = (0, d.useStateFromStores)([N.default], () => N.default.getIsEnabled(), []), u = t.getGuildId();
                (0, S.useActivitiesRolloutExperiments)(u);
                let E = (0, R.useEmbeddedActivityLaunchability)(t.id),
                    f = (0, R.getEmbeddedActivityLaunchabilityLabel)(E),
                    [_] = (0, d.useStateFromStores)([A.default], () => null != t.id && "" !== t.id ? A.default.getEmbeddedActivitiesForChannel(t.id) : A.NO_ACTIVITIES),
                    {
                        userInActivity: I
                    } = (0, d.useStateFromStoresObject)([A.default], () => ({
                        userInActivity: null != A.default.getSelfEmbeddedActivityForChannel(t.id)
                    })),
                    h = (0, T.useAnalyticsContext)(),
                    C = (0, g.useShowActivityIndicator)(),
                    p = E !== R.EmbeddedActivityLaunchability.CAN_LAUNCH;
                return n ? (0, a.jsx)(c.Tooltip, {
                    text: f,
                    children: e => (0, a.jsxs)(c.Button, {
                        ...e,
                        fullWidth: !0,
                        size: c.Button.Sizes.SMALL,
                        onClick: () => {
                            var n;
                            (0, M.default)({
                                channel: t,
                                guildId: t.guild_id,
                                locationObject: h.location,
                                openInPopout: r,
                                analyticsLocations: l
                            }), null === (n = e.onClick) || void 0 === n || n.call(e)
                        },
                        disabled: p,
                        className: i(eF.button, eF.buttonColor, {
                            [eF.buttonDeveloperActivityShelf]: o,
                            [eF.buttonActive]: I || null != _,
                            [eF.disabled]: p
                        }),
                        innerClassName: eF.buttonContents,
                        wrapperClassName: eF.button,
                        children: [C ? (0, a.jsx)(L.FreeActivityIndicatorDot, {
                            top: -1,
                            right: -1
                        }) : null, (0, a.jsx)(eg.default, {
                            className: eF.buttonIcon
                        })]
                    })
                }) : null
            }

            function eW(e) {
                let t, {
                        channel: n,
                        canGoLive: l,
                        enableActivities: r,
                        disabled: o
                    } = e,
                    u = (0, d.useStateFromStores)([eC.default], () => eC.default.getCurrentUser()),
                    E = (0, d.useStateFromStoresArray)([eo.default], () => eo.default.getAllActiveStreams()),
                    f = (0, et.default)(n),
                    _ = n.getGuildId(),
                    I = (0, d.useStateFromStoresObject)([A.default], () => null != A.default.getSelfEmbeddedActivityForChannel(n.id)),
                    h = (0, V.default)(n),
                    C = s.useCallback(() => {
                        (0, el.default)(_, n.id, eU.AnalyticsSections.ACTIVITY_PANEL)
                    }, [_, n.id]),
                    T = E.find(e => e.ownerId === (null == u ? void 0 : u.id)),
                    m = (0, en.useOtherStreams)(n, u, E);
                t = null == T ? l ? C : es.default : () => (0, F.default)(T);
                let S = null != T || m.length > 0,
                    N = f ? ej.default.Messages.SHARE_YOUR_SCREEN : ej.default.Messages.ACTIVITY_PANEL_GO_LIVE_TOOLTIP_NO_PERMISSION_IN_VOICE,
                    p = I || r || h,
                    g = (0, a.jsx)(eR.default, {
                        className: i(eF.buttonIcon, {
                            [eF.withText]: !p
                        })
                    });
                return (0, a.jsx)(c.Popout, {
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(en.default, {
                            channel: n,
                            currentUser: u,
                            activeStreams: E,
                            onClose: t,
                            handleGoLive: l ? C : es.default
                        })
                    },
                    position: "top",
                    align: "center",
                    animation: c.Popout.Animation.FADE,
                    children: e => {
                        let {
                            onClick: n,
                            ...s
                        } = e;
                        return (0, a.jsx)(c.Tooltip, {
                            text: N,
                            children: e => (0, a.jsx)(c.Button, {
                                ...e,
                                size: c.Button.Sizes.SMALL,
                                onClick: a => {
                                    var s;
                                    S ? n(a) : t(), null === (s = e.onClick) || void 0 === s || s.call(e)
                                },
                                disabled: !f || o,
                                className: i(eF.button, eF.buttonColor, {
                                    [eF.buttonActive]: null != T,
                                    [eF.disabled]: !f || o
                                }),
                                ...S ? s : null,
                                innerClassName: eF.buttonContents,
                                wrapperClassName: eF.button,
                                children: p ? g : (0, a.jsxs)(eS.default, {
                                    align: eS.default.Align.CENTER,
                                    children: [g, ej.default.Messages.GO_LIVE_SHARE_SCREEN]
                                })
                            })
                        })
                    }
                })
            }
            class eK extends s.PureComponent {
                renderConnectionStatus() {
                    let e;
                    let {
                        channel: t,
                        guild: n,
                        rtcConnectionQuality: s,
                        rtcConnectionState: l,
                        rtcConnectionLastPing: i,
                        hasVideo: r,
                        isBroadcasting: o
                    } = this.props;
                    if (null == t) return null;
                    let d = (0, y.computeChannelName)(t, eC.default, eh.default);
                    return null != n ? (e = eU.Routes.CHANNEL(n.id, t.id), d = "".concat(d, " / ").concat(n.name)) : e = eU.Routes.CHANNEL(eU.ME, t.id), o && t.isBroadcastChannel() && (d = ej.default.Messages.BROADCASTING), (0, a.jsx)(h.default, {
                        statusTextClassName: eF.statusWithPopout,
                        quality: s,
                        state: l,
                        lastPing: i,
                        hasVideo: r,
                        children: (0, a.jsx)(c.FocusRing, {
                            children: (0, a.jsx)(u.Link, {
                                to: e,
                                onClick: this.handleChannelLinkClick,
                                onContextMenu: this.handleChannelLinkContextMenu,
                                children: (0, a.jsx)(ev.default, {
                                    className: eF.channel,
                                    children: d
                                })
                            })
                        })
                    })
                }
                renderNoiseCancellation() {
                    let {
                        noiseCancellationActive: e,
                        noiseCancellationError: t,
                        hasLayers: n,
                        remoteVoiceState: s,
                        channel: l,
                        voiceStates: i
                    } = this.props;
                    if (null != s) return null;
                    if (null == l ? void 0 : l.isGuildStageVoice()) {
                        let e = null != i.find(e => e.user.id === eu.default.getId() && (0, J.getAudienceRequestToSpeakState)(e.voiceState) === J.RequestToSpeakStates.ON_STAGE);
                        if (!e && (0, Q.shouldShowStageMusicMuteButton)(l.id)) return (0, a.jsx)(eH, {})
                    }
                    return !n && t ? (0, a.jsx)(c.Tooltip, {
                        text: ej.default.Messages.NOISE_CANCELLATION_CPU_OVERUSE,
                        tooltipClassName: eF.noiseCancellationTooltip,
                        forceOpen: !0,
                        children: e => {
                            let {
                                "aria-label": t
                            } = e;
                            return (0, a.jsx)(eM.default, {
                                "aria-label": t,
                                tooltipText: null,
                                disabled: !0,
                                icon: ep.default
                            })
                        }
                    }) : (0, a.jsx)(c.Popout, {
                        position: "top",
                        align: "center",
                        renderPopout: () => (0, a.jsx)(ew, {}),
                        children: (t, n) => {
                            let {
                                isShown: s
                            } = n;
                            return (0, a.jsx)(eM.default, {
                                ...t,
                                tooltipClassName: eF.noiseCancellationTooltip,
                                tooltipText: s ? null : ej.default.Messages.NOISE_CANCELLATION_TOOLTIP,
                                icon: e ? eA.default : ep.default
                            })
                        }
                    }, "krisp-popout")
                }
                renderVoiceStates() {
                    let {
                        channel: e,
                        voiceStates: t,
                        showVoiceStates: n
                    } = this.props;
                    return null != e && n && 0 !== t.length ? (0, a.jsx)(eb.default, {
                        voiceStates: t,
                        channel: e,
                        className: eF.voiceUsers
                    }) : null
                }
                renderChannelButtons() {
                    let {
                        channel: e,
                        canGoLive: t,
                        remoteVoiceState: n,
                        enableActivities: s,
                        voiceStates: l,
                        selfStream: r,
                        isPrivateChannelWithEnabledActivities: o
                    } = this.props;
                    if (null == e || null != n) return null;
                    let u = eu.default.getId();
                    if (e.isGuildStageVoice()) {
                        if (!(0, z.isStageVideoEnabled)(e.guild_id) || !t) return null;
                        let n = l.find(e => e.user.id === u);
                        if (null == n || n.voiceState.suppress) return null
                    }
                    let d = (e.isGuildVoice() || o) && s,
                        {
                            reachedLimit: c
                        } = (0, ee.getChannelVideoLimit)(e),
                        E = (0, z.getStageHasMedia)(e.id);
                    return (0, a.jsxs)("div", {
                        className: eF.actionButtons,
                        children: [(0, a.jsx)(eV, {
                            channel: e,
                            enableActivities: d,
                            disabled: !E && c
                        }), (0, a.jsx)(eW, {
                            channel: e,
                            canGoLive: t,
                            enableActivities: d,
                            disabled: e.isGuildStageVoice() && (E && null == r || !E && c)
                        }), (0, a.jsxs)(a.Fragment, {
                            children: [d ? (0, a.jsx)(eY, {
                                channel: e,
                                enableActivities: s
                            }) : null, (0, V.default)(e) ? (0, a.jsx)(Y.default, {
                                className: i(eF.button, eF.buttonColor),
                                iconClassName: eF.buttonIcon,
                                channel: e
                            }) : null]
                        })]
                    })
                }
                render() {
                    let {
                        channel: e,
                        noiseCancellationSupported: t,
                        shouldShowVoicePanelIntroduction: n
                    } = this.props;
                    return null == e ? null : (0, a.jsx)(c.Popout, {
                        renderPopout: this.renderVoicePanelIntroduction,
                        position: "top",
                        align: "center",
                        animation: c.Popout.Animation.TRANSLATE,
                        shouldShow: n,
                        children: () => (0, a.jsxs)("div", {
                            className: eF.container,
                            children: [(0, a.jsxs)(eS.default, {
                                className: eF.connection,
                                align: eS.default.Align.CENTER,
                                children: [(0, a.jsx)("div", {
                                    className: eF.inner,
                                    children: this.renderConnectionStatus()
                                }), (0, a.jsxs)(eS.default, {
                                    grow: 0,
                                    shrink: 0,
                                    children: [t ? this.renderNoiseCancellation() : null, (0, a.jsx)(ey.default, {
                                        channel: e
                                    })]
                                })]
                            }), this.renderVoiceStates(), this.renderChannelButtons()]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.canScreenshare = () => {
                        let {
                            channel: e,
                            canGoLive: t
                        } = this.props;
                        return t && null != e && null != e.getGuildId()
                    }, this.handleNoiseCancellationClicked = () => {
                        let {
                            noiseCancellationActive: e
                        } = this.props;
                        E.default.setNoiseCancellation(!e, {
                            section: eU.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        })
                    }, this.handleGoLive = () => {
                        let {
                            guild: e,
                            channel: t
                        } = this.props, n = null != t ? t.getGuildId() : null != e ? e.id : null;
                        null != n && (0, el.default)(n, t.id, eU.AnalyticsLocations.VOICE_PANEL)
                    }, this.handleChannelLinkClick = e => {
                        var t;
                        let {
                            guild: n,
                            channel: a
                        } = this.props;
                        o(null != a, "Channel is null during navigation click"), e.stopPropagation(), _.default.channelListScrollTo(null !== (t = null == n ? void 0 : n.id) && void 0 !== t ? t : eU.ME, a.id)
                    }, this.handleChannelLinkContextMenu = e => {
                        let {
                            channel: t
                        } = this.props;
                        (0, f.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("19577").then(n.bind(n, "19577"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t
                            })
                        })
                    }, this.handleCloseVoicePanelIntroduction = () => {
                        k.hideHotspot(eG.HotspotLocations.VOICE_PANEL_INTRODUCTION)
                    }, this.renderVoicePanelIntroduction = () => (0, a.jsxs)("div", {
                        className: i(eF.voicePanelIntroductionWrapper, "theme-light"),
                        children: [(0, a.jsx)(c.Heading, {
                            className: eF.voicePanelIntroductionHeader,
                            variant: "heading-md/semibold",
                            children: ej.default.Messages.VOICE_PANEL_INTRODUCTION_HEADER
                        }), (0, a.jsx)(c.Text, {
                            className: eF.voicePanelIntroductionText,
                            variant: "text-sm/normal",
                            children: ej.default.Messages.VOICE_PANEL_INTRODUCTION_TEXT
                        }), (0, a.jsx)(c.Button, {
                            className: eF.voicePanelIntroductionButton,
                            color: c.Button.Colors.BRAND,
                            onClick: this.handleCloseVoicePanelIntroduction,
                            children: ej.default.Messages.VOICE_PANEL_INTRODUCTION_CLOSE
                        })]
                    })
                }
            }
            var ez = (0, C.default)(function(e) {
                var t, n;
                let l = (0, U.default)(),
                    i = (0, d.useStateFromStores)([b.default], () => b.default.getAwaitingRemoteSessionInfo()),
                    r = (0, d.useStateFromStores)([eC.default], () => eC.default.getCurrentUser()),
                    {
                        channelId: o,
                        ...u
                    } = (0, d.useStateFromStoresObject)([eI.default], () => null != l ? {
                        channelId: l.channelId,
                        rtcConnectionQuality: eU.RTCConnectionQuality.FINE,
                        rtcConnectionState: eU.RTCConnectionStates.RTC_CONNECTED,
                        rtcConnectionLastPing: 0
                    } : {
                        channelId: eI.default.getChannelId(),
                        rtcConnectionQuality: eI.default.getQuality(),
                        rtcConnectionState: eI.default.getState(),
                        rtcConnectionLastPing: eI.default.getLastPing()
                    }),
                    E = (0, d.useStateFromStores)([ed.default], () => ed.default.getChannel(o), [o]),
                    f = null == E ? void 0 : E.getGuildId(),
                    _ = (0, d.useStateFromStores)([ec.default], () => ec.default.getGuild(f), [f]),
                    I = (0, d.useStateFromStoresObject)([ef.default], () => ({
                        noiseCancellationSupported: ef.default.isNoiseCancellationSupported(),
                        noiseCancellationActive: ef.default.getNoiseCancellation(),
                        noiseCancellationError: ef.default.isNoiseCancellationError(),
                        canGoLive: (0, j.default)(ef.default)
                    })),
                    h = (0, d.useStateFromStores)([ef.default, B.default], () => B.default.hasHotspot(eG.HotspotLocations.VOICE_PANEL_INTRODUCTION) && (0, eP.isNewUser)(r) && !ef.default.isInteractionRequired() && !(null == E ? void 0 : E.isGuildStageVoice())),
                    C = (0, d.useStateFromStores)([eT.default], () => null != o && eT.default.hasVideo(o), [o]),
                    T = (0, d.useStateFromStores)([eo.default], () => eo.default.getCurrentUserActiveStream()),
                    m = (0, d.useStateFromStores)([eE.default], () => eE.default.hasLayers()),
                    S = (0, d.useStateFromStores)([w.default], () => w.default.isViewingRoles(f)),
                    N = (0, d.useStateFromStores)([e_.default], () => S && !e_.default.can(eU.Permissions.VIEW_CHANNEL, E), [S, E]),
                    A = Z.RtcPanelShowVoiceStates.useSetting(),
                    [g, R, L] = (0, d.useStateFromStoresArray)([em.default, W.default], () => (null == E ? void 0 : E.isGuildStageVoice()) ? [W.default.getMutableParticipants(E.id, K.StageChannelParticipantNamedIndex.SPEAKER), W.default.getParticipantsVersion(E.id), null] : [null, null, null != E ? em.default.getVoiceStatesForChannel(E) : null], [E]),
                    M = s.useMemo(() => null !== (n = null !== (t = null == g ? void 0 : g.map(e => {
                        let {
                            user: t,
                            userNick: n,
                            voiceState: a
                        } = e;
                        return {
                            user: t,
                            nick: n,
                            voiceState: a
                        }
                    })) && void 0 !== t ? t : L) && void 0 !== n ? n : [], [g, R, L]),
                    [P, y] = s.useState(!1);
                s.useEffect(() => {
                    (S || N) && y(!1)
                }, [S, N, y]);
                let {
                    AnalyticsLocationProvider: F
                } = (0, D.default)(v.default.RTC_PANEL), k = (0, p.default)(null != f ? f : "", null == E ? void 0 : E.id), H = (0, O.default)(null == E ? void 0 : E.id), V = (0, x.default)();
                return (0, a.jsx)(F, {
                    children: (0, a.jsxs)("div", {
                        className: eF.wrapper,
                        children: [null != l || null != i ? (0, a.jsx)(G.default, {
                            voiceState: l,
                            awaitingRemoteSessionInfo: i
                        }) : null, (0, a.jsx)(eK, {
                            ...e,
                            ...I,
                            ...u,
                            enableActivities: k,
                            remoteVoiceState: l,
                            guild: _,
                            channel: E,
                            hasVideo: C,
                            selfStream: T,
                            hasLayers: m,
                            voiceStates: M,
                            showVoiceStates: A,
                            shouldShowVoicePanelIntroduction: h,
                            isPrivateChannelWithEnabledActivities: H,
                            isBroadcasting: V
                        }), !P && S && null != f ? (0, a.jsxs)("div", {
                            className: eF.viewAsRolesWarning,
                            children: [(0, a.jsx)(c.Text, {
                                variant: "text-sm/normal",
                                className: eF.viewAsRolesWarningText,
                                children: N ? ej.default.Messages.VIEW_AS_ROLES_HIDDEN_VC_WARNING : ej.default.Messages.VIEW_AS_ROLES_VOICE_WARNING
                            }), (0, a.jsx)(c.Button, {
                                className: eF.viewAsRolesWarningButton,
                                size: c.Button.Sizes.MIN,
                                onClick: () => {
                                    y(!0)
                                },
                                children: ej.default.Messages.DISMISS
                            })]
                        }) : null]
                    })
                })
            })
        },
        452469: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("987317"),
                l = n("713726"),
                i = n("754493"),
                r = n("374021"),
                o = n("649275"),
                u = n("751661"),
                d = n("734019"),
                c = n("293137"),
                E = n("962541"),
                f = n("782340");

            function _() {
                return (0, a.jsx)(E.default, {
                    tooltipText: f.default.Messages.DISCONNECT_SELF,
                    onClick: () => {
                        (0, l.stopBroadcast)(), s.default.disconnect()
                    },
                    icon: c.default
                })
            }

            function I(e) {
                let {
                    channel: t
                } = e;
                return (0, a.jsx)(E.default, {
                    tooltipText: f.default.Messages.AUDIENCE_DISCONNECT,
                    onClick: () => {
                        if ((0, d.default)(t)) {
                            (0, u.openEndStageModal)(t);
                            return
                        }
                        s.default.disconnect()
                    },
                    icon: c.default
                })
            }

            function h(e) {
                let {
                    channel: t
                } = e;
                return (0, a.jsx)(E.default, {
                    tooltipText: f.default.Messages.DISCONNECT_SELF,
                    onClick: () => {
                        if ((0, o.default)(t)) {
                            (0, r.openEndEventModal)(t);
                            return
                        }
                        s.default.disconnect()
                    },
                    icon: c.default
                })
            }

            function C(e) {
                let {
                    channel: t
                } = e, n = (0, i.default)();
                return t.isGuildStageVoice() ? (0, a.jsx)(I, {
                    channel: t
                }) : n && t.isBroadcastChannel() ? (0, a.jsx)(_, {}) : (0, a.jsx)(h, {
                    channel: t
                })
            }
        },
        997769: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("966900"),
                u = n("397659"),
                d = n("359902"),
                c = n("780624"),
                E = n("77078"),
                f = n("272030"),
                _ = n("899633"),
                I = n("835040"),
                h = n("506885"),
                C = n("981601"),
                T = n("271938"),
                m = n("42887"),
                S = n("211248"),
                N = n("200639"),
                A = n("97347"),
                p = n("151185"),
                g = n("342169"),
                R = n("158998"),
                O = n("39141"),
                L = n("782340"),
                M = n("346216");
            let v = {
                    offset: 2
                },
                D = {
                    serverDeaf: {
                        icon: N.default,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_DEAFENED
                    },
                    serverMute: {
                        icon: A.default,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_MUTED
                    },
                    deaf: {
                        icon: N.default,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_DEAFENED
                    },
                    mute: {
                        icon: A.default,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_MUTED
                    }
                },
                x = {
                    serverDeaf: {
                        icon: o.HeadphonesDenyIcon,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_DEAFENED
                    },
                    serverMute: {
                        icon: d.MicrophoneDenyIcon,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_MUTED
                    },
                    deaf: {
                        icon: u.HeadphonesSlashIcon,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_DEAFENED
                    },
                    mute: {
                        icon: c.MicrophoneSlashIcon,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_MUTED
                    },
                    localMute: {
                        icon: d.MicrophoneDenyIcon,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_LOCAL_MUTED
                    }
                };

            function P(e) {
                var t, s;
                let {
                    channel: l,
                    user: o,
                    nick: u,
                    mute: d,
                    deaf: c,
                    serverMute: T,
                    serverDeaf: S
                } = e, N = (0, r.useStateFromStores)([m.default], () => m.default.isLocalMute(o.id)), A = (0, _.default)({
                    userId: o.id,
                    checkSoundSharing: !0
                }), p = null !== (t = l.getGuildId()) && void 0 !== t ? t : void 0, g = o.getAvatarURL(l.guild_id, 24), P = null != u ? u : R.default.getName(o), {
                    icon: y,
                    colorize: b,
                    getStatus: U
                } = null !== (s = function(e) {
                    let {
                        serverDeaf: t,
                        deaf: n,
                        serverMute: a,
                        mute: s,
                        localMute: l
                    } = e, i = (0, E.useRedesignIconContext)().enabled;
                    if (t) return i ? x.serverDeaf : D.serverDeaf;
                    if (n) return i ? x.deaf : D.deaf;
                    if (a) return i ? x.serverMute : D.serverMute;
                    else if (l) return i ? x.localMute : D.mute;
                    else if (s) return i ? x.mute : D.mute
                }({
                    serverDeaf: S,
                    deaf: c,
                    serverMute: T,
                    mute: d,
                    localMute: N
                })) && void 0 !== s ? s : {}, G = null != U ? L.default.Messages.VOICE_PANEL_USER_TOOLTIP.format({
                    userName: P,
                    status: U()
                }) : P;

                function j(e) {
                    null != p ? (0, f.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("834247").then(n.bind(n, "834247"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            user: o,
                            guildId: p,
                            channel: l,
                            showMediaItems: !0
                        })
                    }) : (0, f.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("406784").then(n.bind(n, "406784"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            user: o,
                            showMediaItems: !0
                        })
                    })
                }
                return (0, a.jsx)(E.Popout, {
                    preload: () => (0, h.default)(o.id, o.getAvatarURL(p, 80), {
                        guildId: p,
                        channelId: l.id
                    }),
                    position: "top",
                    renderPopout: e => (0, a.jsx)(C.default, {
                        userId: o.id,
                        guildId: p,
                        channelId: l.id,
                        ...e
                    }),
                    children: e => (0, a.jsx)(E.Tooltip, {
                        text: G,
                        children: t => (0, a.jsx)(E.Clickable, {
                            ...t,
                            ...e,
                            className: M.avatarContainer,
                            onContextMenu: j,
                            focusProps: v,
                            children: (0, a.jsx)(I.default, {
                                shakeLocation: O.ShakeLocation.VOICE_USER,
                                isShaking: A,
                                children: (0, a.jsx)("div", {
                                    className: i(M.avatar, {
                                        [M.speaking]: A
                                    }),
                                    style: {
                                        backgroundImage: "url(".concat(g, ")")
                                    },
                                    children: null != y ? (0, a.jsx)(y, {
                                        className: i(M.avatarIconOverlay, {
                                            [M.avatarIconRed]: b
                                        }),
                                        color: "currentColor",
                                        width: 16,
                                        height: 16,
                                        foreground: M.avatarIconRed
                                    }) : null
                                })
                            })
                        })
                    })
                })
            }

            function y(e) {
                let {
                    voiceStates: t,
                    channel: n,
                    className: l
                } = e, [o, u] = s.useState(!1), d = o ? g.default : p.default, c = (0, a.jsx)(S.default, {
                    className: M.expandButton,
                    onClick: () => u(!o),
                    color: S.CircleIconButtonColors.PRIMARY,
                    size: S.CircleIconButtonSizes.SIZE_24,
                    tooltip: o ? L.default.Messages.VOICE_PANEL_HIDE_EXTRAS : L.default.Messages.VOICE_PANEL_SHOW_EXTRAS,
                    icon: (0, a.jsx)(d, {
                        width: 16,
                        height: 16
                    }),
                    focusProps: v
                }), f = (0, r.useStateFromStores)([T.default], () => T.default.getId(), []), [_, I] = function(e, t) {
                    let n = [];
                    for (let a of e) {
                        if (a.user.id !== t) {
                            if (!n.some(e => e.user.id === a.user.id)) {
                                if (n.length >= 7) return [n, !0];
                                n.push(a)
                            }
                        }
                    }
                    return [n, !1]
                }(t, f), h = I && o ? t : _;
                return h.length <= 0 ? null : (0, a.jsx)(E.ScrollerThin, {
                    className: i(M.scroller, l),
                    fade: !0,
                    children: (0, a.jsxs)("div", {
                        className: M.voiceUsers,
                        role: "group",
                        "aria-label": L.default.Messages.VOICE_PANEL_USERS_A11Y_LABEL,
                        children: [h.map(e => {
                            let {
                                user: t,
                                nick: s,
                                voiceState: l
                            } = e;
                            return t.id !== f ? (0, a.jsx)(P, {
                                channel: n,
                                user: t,
                                nick: s,
                                mute: l.isVoiceMuted(),
                                deaf: l.isVoiceDeafened(),
                                video: l.selfVideo,
                                serverMute: l.mute,
                                serverDeaf: l.deaf
                            }, t.id) : null
                        }), I ? c : null]
                    })
                })
            }
        },
        544556: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                updateLinkForUserId: function() {
                    return o
                },
                removeLinkForUserId: function() {
                    return u
                },
                getLinkCodeForCurrentUser: function() {
                    return d
                },
                default: function() {
                    return c
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("599110"),
                i = n("922832"),
                r = n("49111");
            async function o(e, t) {
                await a.default.patch({
                    url: r.Endpoints.FAMILY_CENTER_LINKED_USERS,
                    body: {
                        linked_user_id: e,
                        link_status: t
                    }
                }).then(e => {
                    let {
                        body: t
                    } = e;
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_REQUEST_LINK_UPDATE_SUCCESS",
                        linkedUsers: t
                    }), t
                })
            }
            async function u(e) {
                await a.default.delete({
                    url: r.Endpoints.FAMILY_CENTER_LINKED_USERS,
                    body: {
                        linked_user_id: e
                    }
                }).then(t => {
                    let {
                        body: n
                    } = t;
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_REQUEST_LINK_REMOVE_SUCCESS",
                        linkedUsers: n,
                        deletedUserId: e
                    }), n
                })
            }
            async function d() {
                await a.default.get({
                    url: r.Endpoints.FAMILY_CENTER_LINK_CODE
                }).then(e => {
                    let {
                        body: t
                    } = e, n = t.link_code;
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_LINK_CODE_FETCH_SUCCESS",
                        linkCode: n
                    }), n
                })
            }
            var c = {
                async initialPageLoad() {
                    var e, t, n, l;
                    s.default.dispatch({
                        type: "FAMILY_CENTER_FETCH_START"
                    });
                    let {
                        body: i
                    } = await a.default.get({
                        url: r.Endpoints.FAMILY_CENTER_TEEN_ACTIVITY_ME
                    }), {
                        teen_audit_log: o,
                        linked_users: u,
                        users: d
                    } = i, c = {
                        teenId: null == o ? void 0 : o.teen_user_id,
                        rangeStartId: null == o ? void 0 : o.range_start_id,
                        totals: null !== (e = null == o ? void 0 : o.totals) && void 0 !== e ? e : {},
                        actions: null !== (t = null == o ? void 0 : o.actions) && void 0 !== t ? t : [],
                        users: null !== (n = null == o ? void 0 : o.users) && void 0 !== n ? n : [],
                        guilds: null !== (l = null == o ? void 0 : o.guilds) && void 0 !== l ? l : []
                    };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_INITIAL_LOAD",
                        familyCenterTeenActivity: c,
                        linkedUsers: u,
                        users: d
                    }), c
                },
                async fetchLinkedUsers() {
                    let {
                        body: e
                    } = await a.default.get({
                        url: r.Endpoints.FAMILY_CENTER_LINKED_USERS
                    }), t = {
                        linkedUsers: e.linked_users,
                        users: e.users
                    };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_LINKED_USERS_FETCH_SUCCESS",
                        ...t
                    }), t
                },
                async requestLink(e, t) {
                    let {
                        body: n
                    } = await a.default.post({
                        url: r.Endpoints.FAMILY_CENTER_LINKED_USERS,
                        body: {
                            recipient_id: e,
                            code: t
                        }
                    }), l = {
                        linkedUsers: n.linked_users,
                        users: n.users
                    };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_REQUEST_LINK_SUCCESS",
                        ...l
                    }), l
                },
                async fetchTeenActivity(e) {
                    s.default.dispatch({
                        type: "FAMILY_CENTER_FETCH_START"
                    });
                    let t = r.Endpoints.FAMILY_CENTER_TEEN_ACTIVITY(e),
                        {
                            body: n
                        } = await a.default.get({
                            url: t
                        }),
                        l = n.teen_audit_log,
                        i = {
                            teenId: l.teen_user_id,
                            rangeStartId: l.range_start_id,
                            totals: l.totals,
                            actions: l.actions,
                            users: l.users,
                            guilds: l.guilds
                        };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_TEEN_ACTIVITY_FETCH_SUCCESS",
                        familyCenterTeenActivity: i
                    }), i
                },
                async fetchMoreTeenActivity(e, t, n, o) {
                    let {
                        body: u
                    } = await a.default.get({
                        url: r.Endpoints.FAMILY_CENTER_TEEN_ACTIVITY_MORE(e, t, n, o)
                    }), {
                        teen_audit_log: d
                    } = u, c = {
                        teenId: d.teen_user_id,
                        rangeStartId: d.range_start_id,
                        actions: d.actions,
                        users: d.users,
                        guilds: d.guilds
                    };
                    return l.default.track(r.AnalyticEvents.FAMILY_CENTER_ACTION, {
                        action: i.FamilyCenterAction.LoadMore,
                        selected_teen_id: e,
                        action_display_type: t
                    }), s.default.dispatch({
                        type: "FAMILY_CENTER_TEEN_ACTIVITY_MORE_FETCH_SUCCESS",
                        familyCenterTeenActivity: c
                    }), d
                },
                selectTab(e) {
                    s.default.dispatch({
                        type: "FAMILY_CENTER_HANDLE_TAB_SELECT",
                        tab: e
                    })
                }
            }
        },
        922832: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FAMILY_CENTER_REFETCH_COOLDOWN: function() {
                    return L
                },
                MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS: function() {
                    return M
                },
                MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS: function() {
                    return v
                },
                FAMILY_CENTER_REQUEST_SECTION_HEIGHT: function() {
                    return D
                },
                FAMILY_CENTER_REQUEST_ROW_HEIGHT: function() {
                    return x
                },
                FAMILY_CENTER_REQUEST_QR_CODE_URL: function() {
                    return P
                },
                FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS: function() {
                    return y
                },
                QR_CODE_AUTO_HIDE_TIMEOUT: function() {
                    return b
                },
                PLACEHOLDER_QR_CODE_URL: function() {
                    return U
                },
                FAMILY_CENTER_SUB_ROUTES: function() {
                    return G
                },
                UserLinkStatus: function() {
                    return h
                },
                TeenActionDisplayType: function() {
                    return C
                },
                FamilyCenterSubPages: function() {
                    return T
                },
                FamilyCenterSubPageAnalyticsIds: function() {
                    return m
                },
                FamilyCenterPageLocation: function() {
                    return S
                },
                FamilyCenterPageLocationAnalyticsIds: function() {
                    return N
                },
                FamilyCenterAction: function() {
                    return A
                },
                ACTION_TO_TEXT: function() {
                    return j
                },
                PENDING_LINK_REQUEST_TIMESTAMP_FORMATTER: function() {
                    return F
                },
                ACCEPTED_LINK_REQUEST_TIMESTAMP_FORMATTER: function() {
                    return k
                }
            });
            var a, s, l, i, r, o, u, d, c, E, f, _, I, h, C, T, m, S, N, A, p, g, R = n("447669"),
                O = n("782340");
            let L = 3e4,
                M = 8,
                v = 3,
                D = 26,
                x = 64,
                P = (e, t) => "https://discord.com/feature/family-center/my-family/".concat(e, "/").concat(t),
                y = 4,
                b = 3e5,
                U = "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
                G = (0, R.wrapPaths)(Object.freeze({
                    FAMILY_CENTER_SETTINGS: "/family-center/settings",
                    FAMILY_CENTER_MY_FAMILY: "/family-center/my-family"
                }), [":", "?", "@"]);
            (a = _ || (_ = {}))[a.DM_MESSAGE_SEND = 1] = "DM_MESSAGE_SEND", a[a.GDM_MESSAGE_SEND = 2] = "GDM_MESSAGE_SEND", a[a.MESSAGE_REACT = 3] = "MESSAGE_REACT", a[a.ADD_FRIEND = 4] = "ADD_FRIEND", a[a.SEND_CALL = 5] = "SEND_CALL", a[a.CALL_JOIN = 6] = "CALL_JOIN", a[a.GUILD_JOIN = 7] = "GUILD_JOIN", (s = I || (I = {}))[s.PARENT = 1] = "PARENT", s[s.CHILD = 2] = "CHILD", (l = h || (h = {}))[l.PENDING = 1] = "PENDING", l[l.ACTIVE = 2] = "ACTIVE", l[l.INACTIVE = 3] = "INACTIVE", l[l.DECLINED = 4] = "DECLINED", l[l.EXPIRED = 5] = "EXPIRED", (i = C || (C = {}))[i.USER_ADD = 1] = "USER_ADD", i[i.GUILD_ADD = 2] = "GUILD_ADD", i[i.USER_INTERACTION = 3] = "USER_INTERACTION", i[i.GUILD_INTERACTION = 4] = "GUILD_INTERACTION", i[i.USER_CALLED = 5] = "USER_CALLED", (r = T || (T = {})).ACTIVITY = "ACTIVITY", r.REQUESTS = "REQUESTS", r.SETTINGS = "SETTINGS", (o = m || (m = {}))[o.ACTIVITY = 0] = "ACTIVITY", o[o.REQUESTS = 1] = "REQUESTS", o[o.SETTINGS = 2] = "SETTINGS", (u = S || (S = {})).SIDENAV = "SIDENAV", u.SETTINGS = "SETTINGS", (d = N || (N = {}))[d.SIDENAV = 0] = "SIDENAV", d[d.SETTINGS = 1] = "SETTINGS", (c = A || (A = {}))[c.TabChange = 0] = "TabChange", c[c.ShowQRCodeModal = 1] = "ShowQRCodeModal", c[c.RevealQRCode = 2] = "RevealQRCode", c[c.ScanQRCodeButton = 3] = "ScanQRCodeButton", c[c.ScanQRCode = 4] = "ScanQRCode", c[c.LoadMore = 5] = "LoadMore", c[c.SelectTeen = 6] = "SelectTeen", c[c.HideQRCode = 7] = "HideQRCode";
            let j = new Map([
                [C.USER_INTERACTION, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_TEEN,
                    timestampFormatter: () => ({
                        today: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_MESSAGED_TIMESTAMP_TODAY,
                        yesterday: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_MESSAGED_TIMESTAMP_YESTERDAY,
                        days: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_MESSAGED_TIMESTAMP_DAYS
                    })
                }],
                [C.USER_CALLED, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_TEEN,
                    timestampFormatter: () => ({
                        today: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TIMESTAMP_TODAY,
                        yesterday: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TIMESTAMP_YESTERDAY,
                        days: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TIMESTAMP_DAYS
                    })
                }],
                [C.USER_ADD, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_TEEN,
                    timestampFormatter: () => ({
                        today: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_ADDED_TIMESTAMP_TODAY,
                        yesterday: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_ADDED_TIMESTAMP_YESTERDAY,
                        days: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_ADDED_TIMESTAMP_DAYS
                    })
                }],
                [C.GUILD_ADD, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_TEEN
                }],
                [C.GUILD_INTERACTION, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_TEEN
                }]
            ]);
            (E = p || (p = {}))[E.CHECK = 0] = "CHECK", E[E.X = 1] = "X", (f = g || (g = {}))[f.GENERIC_ERROR = 0] = "GENERIC_ERROR", f[f.INELIGIBLE_FOR_FAMILY_CENTER = 1] = "INELIGIBLE_FOR_FAMILY_CENTER", f[f.PENDING_REQUEST_EXISTS = 2] = "PENDING_REQUEST_EXISTS", f[f.MAX_CONNECTIONS_REACHED = 3] = "MAX_CONNECTIONS_REACHED", g.INELIGIBLE_FOR_FAMILY_CENTER, g.MAX_CONNECTIONS_REACHED, g.PENDING_REQUEST_EXISTS, g.GENERIC_ERROR, p.X, g.PENDING_REQUEST_EXISTS, p.CHECK, g.MAX_CONNECTIONS_REACHED, p.X, g.INELIGIBLE_FOR_FAMILY_CENTER, p.X;
            let F = () => ({
                    seconds: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_SECONDS,
                    minutes: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_MINUTES,
                    hours: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_HOURS,
                    yesterday: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_YESTERDAY,
                    days: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_DAYS,
                    date: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_DATE
                }),
                k = () => ({
                    seconds: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_SECONDS,
                    minutes: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_MINUTES,
                    hours: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_HOURS,
                    yesterday: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_YESTERDAY,
                    days: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_DAYS,
                    date: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_DATE
                })
        },
        138505: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FamilyCenterGuild: function() {
                    return s
                }
            });
            var a = n("813006");
            class s extends a.default {
                constructor(e) {
                    super(e), this.approximateMemberCount = e.approximate_member_count
                }
            }
        },
        822825: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return V
                }
            });
            var a = n("249654"),
                s = n("988415"),
                l = n("455079"),
                i = n("697218"),
                r = n("544556"),
                o = n("138505"),
                u = n("117933"),
                d = n("922832");
            let c = null,
                E = null,
                f = {},
                _ = p(),
                I = g(),
                h = null,
                C = function() {
                    var e, t, n, a;
                    return (null === (t = window) || void 0 === t ? void 0 : null === (e = t.location) || void 0 === e ? void 0 : e.pathname) === d.FAMILY_CENTER_SUB_ROUTES.FAMILY_CENTER_MY_FAMILY ? d.FamilyCenterSubPages.REQUESTS : (null === (a = window) || void 0 === a ? void 0 : null === (n = a.location) || void 0 === n ? void 0 : n.pathname) === d.FAMILY_CENTER_SUB_ROUTES.FAMILY_CENTER_SETTINGS ? d.FamilyCenterSubPages.SETTINGS : d.FamilyCenterSubPages.ACTIVITY
                }(),
                T = !1,
                m = !1,
                S = null,
                N = null,
                A = {};

            function p() {
                return {
                    [d.TeenActionDisplayType.USER_ADD]: {},
                    [d.TeenActionDisplayType.GUILD_ADD]: {},
                    [d.TeenActionDisplayType.USER_INTERACTION]: {},
                    [d.TeenActionDisplayType.GUILD_INTERACTION]: {},
                    [d.TeenActionDisplayType.USER_CALLED]: {}
                }
            }

            function g() {
                return {
                    [d.TeenActionDisplayType.USER_ADD]: 0,
                    [d.TeenActionDisplayType.GUILD_ADD]: 0,
                    [d.TeenActionDisplayType.USER_INTERACTION]: 0,
                    [d.TeenActionDisplayType.GUILD_INTERACTION]: 0,
                    [d.TeenActionDisplayType.USER_CALLED]: 0
                }
            }

            function R() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    t = arguments.length > 1 ? arguments[1] : void 0;
                return f = e.length > 0 ? e.reduce((e, t) => ({
                    ...e,
                    [t.user_id]: t
                }), {}) : {}
            }

            function O(e) {
                void 0 !== e && (I = e)
            }

            function L(e, t) {
                let n = t ? _ : p();
                return _ = e.reduce((e, t) => {
                    let a = t.display_type;
                    return void 0 !== n[a] && void 0 === n[a][t.event_id] && (e[a][t.event_id] = t), e
                }, n)
            }

            function M(e) {
                A = e.reduce((e, t) => ({
                    ...e,
                    [t.id]: new o.FamilyCenterGuild(t)
                }), A)
            }

            function v() {
                m = !0
            }

            function D(e) {
                let {
                    linkedUsers: t,
                    familyCenterTeenActivity: n
                } = e, {
                    actions: s,
                    guilds: l,
                    totals: i,
                    teenId: r,
                    rangeStartId: o
                } = n;
                c = r, E = o, L(s), O(i), M(l), R(t), m = !1, S = a.default.fromTimestamp(Date.now()), T = !0
            }

            function x(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t)
            }

            function P(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t)
            }

            function y(e) {
                let {
                    familyCenterTeenActivity: t
                } = e;
                if (void 0 === t) return;
                let {
                    actions: n,
                    totals: s,
                    guilds: l,
                    teenId: i,
                    rangeStartId: r
                } = t;
                c = i, E = r, L(n), O(s), M(l), m = !1, S = a.default.fromTimestamp(Date.now())
            }

            function b(e) {
                let {
                    familyCenterTeenActivity: t
                } = e, {
                    actions: n,
                    guilds: a
                } = t;
                L(n, !0), M(a)
            }

            function U(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t)
            }

            function G(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t, !0)
            }

            function j(e) {
                let {
                    linkCode: t
                } = e;
                h = t
            }

            function F(e) {
                let {
                    tab: t
                } = e;
                C = t
            }

            function k(e) {
                let {
                    user: t
                } = e;
                if (void 0 === t.linked_users) return;
                let n = i.default.getUsers(),
                    a = t.linked_users.some(e => {
                        let {
                            user_id: t
                        } = e;
                        return void 0 === n[t]
                    });
                a && t.linked_users.length > Object.keys(f).length ? r.default.fetchLinkedUsers() : R(t.linked_users)
            }

            function B(e) {
                var t;
                let {
                    countryCode: n
                } = e;
                null != n && (N = null !== (t = (0, s.getCountryCodeByAlpha2)(n)) && void 0 !== t ? t : null)
            }

            function w() {
                c = null, E = null, f = {}, _ = p(), I = g(), A = {}, m = !1, S = null
            }
            class H extends l.default {
                takeSnapshot() {
                    return {
                        version: H.LATEST_SNAPSHOT_VERSION,
                        data: {
                            linkedUsers: Object.values(f),
                            teenActivityTotals: Object.entries(I).map(e => {
                                let [t, n] = e;
                                return "".concat(t, ":").concat(n)
                            }),
                            teenActivity: function() {
                                let e = [];
                                return Object.entries(_).forEach(t => {
                                    let [n, a] = t;
                                    e.push(...Object.values(a))
                                }), e
                            }(),
                            guilds: Object.values(A)
                        }
                    }
                }
                getSelectedTeenId() {
                    return c
                }
                getLinkedUsers() {
                    return f
                }
                getLinkTimestamp(e) {
                    var t;
                    let n = f[e];
                    return null == n ? null : null !== (t = n.updated_at) && void 0 !== t ? t : n.created_at
                }
                getRangeStartTimestamp() {
                    return null == E ? null : a.default.extractTimestamp(E)
                }
                getActionsForDisplayType(e) {
                    return Object.values(_[e])
                }
                getTotalForDisplayType(e) {
                    return I[e]
                }
                getLinkCode() {
                    return h
                }
                getGuild(e) {
                    return A[e]
                }
                getSelectedTab() {
                    return C
                }
                getStartId() {
                    return E
                }
                getIsInitialized() {
                    return T
                }
                getUserCountry() {
                    return N
                }
                isLoading() {
                    return m
                }
                canRefetch() {
                    return null === S || a.default.age(S) > d.FAMILY_CENTER_REFETCH_COOLDOWN
                }
                constructor() {
                    super(), this.loadCache = () => {
                        let e = this.readSnapshot(H.LATEST_SNAPSHOT_VERSION);
                        if (null != e) R(e.linkedUsers), M(e.guilds), L(e.teenActivity), I = e.teenActivityTotals.reduce((e, t) => {
                            let [n, a] = t.split(":"), s = (0, u.displayTypeFromString)(n);
                            return void 0 === s ? e : {
                                ...e,
                                [s]: parseInt(a, 10)
                            }
                        }, g())
                    }, this.registerActionHandlers({
                        CURRENT_USER_UPDATE: k,
                        CACHE_LOADED_LAZY: this.loadCache,
                        FAMILY_CENTER_INITIAL_LOAD: D,
                        FAMILY_CENTER_FETCH_START: v,
                        FAMILY_CENTER_LINKED_USERS_FETCH_SUCCESS: x,
                        FAMILY_CENTER_TEEN_ACTIVITY_FETCH_SUCCESS: y,
                        FAMILY_CENTER_TEEN_ACTIVITY_MORE_FETCH_SUCCESS: b,
                        FAMILY_CENTER_REQUEST_LINK_SUCCESS: P,
                        FAMILY_CENTER_REQUEST_LINK_UPDATE_SUCCESS: U,
                        FAMILY_CENTER_REQUEST_LINK_REMOVE_SUCCESS: G,
                        FAMILY_CENTER_LINK_CODE_FETCH_SUCCESS: j,
                        FAMILY_CENTER_HANDLE_TAB_SELECT: F,
                        SET_LOCATION_METADATA: B,
                        LOGOUT: w
                    }), this.waitFor(i.default)
                }
            }
            H.displayName = "FamilyCenterStore", H.LATEST_SNAPSHOT_VERSION = 3;
            var V = new H
        },
        117933: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getEmptyActivityFormatter: function() {
                    return c
                },
                getActivityWindowTimestampFormatter: function() {
                    return E
                },
                formatUserActivityTimestamp: function() {
                    return f
                },
                formatLinkTimestamp: function() {
                    return _
                },
                isUserAction: function() {
                    return I
                },
                isGuildAction: function() {
                    return h
                },
                displayTypeFromString: function() {
                    return C
                }
            });
            var a = n("866227"),
                s = n.n(a),
                l = n("922832"),
                i = n("782340");
            let r = 3600,
                o = 24 * r,
                u = 2 * o,
                d = 7 * o,
                c = () => ({
                    today: i.default.Messages.FAMILY_CENTER_EMPTY_ACTIVITY_TODAY,
                    yesterday: i.default.Messages.FAMILY_CENTER_EMPTY_ACTIVITY_YESTERDAY,
                    days: i.default.Messages.FAMILY_CENTER_EMPTY_ACTIVITY_DAYS
                }),
                E = e => e ? {
                    today: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_PARENT_TODAY,
                    yesterday: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_PARENT_YESTERDAY,
                    days: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_PARENT_DAYS
                } : {
                    today: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_TEEN_TODAY,
                    yesterday: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_TEEN_YESTERDAY,
                    days: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_TEEN_DAYS
                },
                f = (e, t, n) => {
                    let a = s().diff(s(e), "s"),
                        l = t(),
                        i = s(e).format("LL");
                    return i = a < o ? l.today : a < u ? l.yesterday : l.days.format({
                        days: Math.min(Math.floor(a / o), null != n ? n : 999)
                    })
                },
                _ = (e, t) => {
                    let n = s().diff(s(e), "s"),
                        a = t(),
                        l = s(e).format("LL");
                    return l = n < 60 ? a.seconds : n < r ? a.minutes.format({
                        count: Math.floor(n / 60)
                    }) : n < o ? a.hours.format({
                        count: Math.floor(n / r)
                    }) : n < u ? a.yesterday : n < d ? a.days.format({
                        count: Math.floor(n / o)
                    }) : a.date.format({
                        date: l
                    })
                },
                I = e => e.display_type === l.TeenActionDisplayType.USER_ADD || e.display_type === l.TeenActionDisplayType.USER_INTERACTION || e.display_type === l.TeenActionDisplayType.USER_CALLED,
                h = e => e.display_type === l.TeenActionDisplayType.GUILD_ADD || e.display_type === l.TeenActionDisplayType.GUILD_INTERACTION,
                C = e => {
                    let t = Object.values(l.TeenActionDisplayType);
                    for (let n of t)
                        if (n.toString() === e) return n
                }
        },
        368874: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useAgeSpecificText: function() {
                    return s
                }
            });
            var a = n("775032");
            let s = (e, t) => {
                let n = (0, a.default)();
                return n ? t : e
            }
        },
        648750: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useFamilyCenterActions: function() {
                    return o
                }
            });
            var a = n("884691"),
                s = n("448993"),
                l = n("544556"),
                i = n("822825"),
                r = n("922832");

            function o(e) {
                let {
                    onError: t,
                    onSuccess: n
                } = null != e ? e : {}, [o, u] = a.useState(!1), [d, c] = a.useState(!1), [E, f] = a.useState(!1), [_, I] = a.useState(!1), [h, C] = a.useState(!1), [T, m] = a.useState(!1), [S, N] = a.useState(!1), [A, p] = a.useState(!1), g = o || d || E || _ || T || A, R = a.useCallback(async e => {
                    if (!g) {
                        u(!0);
                        try {
                            await (0, l.updateLinkForUserId)(e.id, r.UserLinkStatus.ACTIVE), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            u(!1)
                        }
                    }
                }, [g, t, n]), O = a.useCallback(async e => {
                    if (!g) {
                        c(!0);
                        try {
                            await (0, l.updateLinkForUserId)(e.id, r.UserLinkStatus.DECLINED), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            c(!1)
                        }
                    }
                }, [g, t, n]), L = a.useCallback(async e => {
                    if (!g) {
                        f(!0);
                        try {
                            await (0, l.updateLinkForUserId)(e.id, r.UserLinkStatus.INACTIVE), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            f(!1)
                        }
                    }
                }, [g, t, n]), M = a.useCallback(async e => {
                    if (!g) {
                        I(!0);
                        try {
                            await (0, l.removeLinkForUserId)(e.id), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            I(!1)
                        }
                    }
                }, [g, t, n]), v = a.useCallback(async () => {
                    if (!h) {
                        C(!0);
                        try {
                            await (0, l.getLinkCodeForCurrentUser)(), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            C(!1)
                        }
                    }
                }, [h, t, n]), D = a.useCallback(async e => {
                    if (!S) {
                        N(!0);
                        try {
                            await l.default.fetchTeenActivity(e), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            N(!1)
                        }
                    }
                }, [S, t, n]), x = a.useCallback(async (e, a) => {
                    if (!T) {
                        m(!0);
                        try {
                            await l.default.requestLink(e, a), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            m(!1)
                        }
                    }
                }, [T, t, n]), P = a.useCallback(async e => {
                    let n = i.default.getActionsForDisplayType(e),
                        a = n[n.length - 1],
                        r = i.default.getStartId(),
                        o = i.default.getSelectedTeenId();
                    if (!A && null != r && null != o) {
                        p(!0);
                        try {
                            await l.default.fetchMoreTeenActivity(o, e, r, a.event_id)
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            p(!1)
                        }
                    }
                }, [A, t]);
                return {
                    acceptLinkRequest: R,
                    declineLinkRequest: O,
                    disconnectLinkRequest: L,
                    cancelLinkRequest: M,
                    selectTeenUser: D,
                    getLinkCode: v,
                    requestLink: x,
                    loadMore: P,
                    isAcceptLoading: o,
                    isDeclineLoading: d,
                    isDisconnectLoading: E,
                    isCancelLoading: _,
                    isGetLinkCodeLoading: h,
                    isSelectTeenUserLoading: S,
                    isRequestingLink: T,
                    isMoreLoading: A
                }
            }
        },
        710514: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActionsForDisplayType: function() {
                    return i
                },
                useActionTotalsForDisplayType: function() {
                    return r
                },
                useHasActionForAnyDisplayType: function() {
                    return o
                }
            });
            var a = n("65597"),
                s = n("822825"),
                l = n("922832");

            function i(e) {
                let t = (0, a.useStateFromStoresArray)([s.default], () => s.default.getActionsForDisplayType(e));
                return t
            }

            function r(e) {
                return (0, a.default)([s.default], () => s.default.getTotalForDisplayType(e))
            }

            function o() {
                return (0, a.default)([s.default], () => Object.values(l.TeenActionDisplayType).some(e => {
                    let t = s.default.getTotalForDisplayType(e);
                    return t > 0
                }))
            }
        },
        652126: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useShouldShowHelplineLink: function() {
                    return c
                }
            });
            var a = n("884691"),
                s = n("65597"),
                l = n("16108"),
                i = n("915639"),
                r = n("822825"),
                o = n("775032");
            let u = new Set(["US"]),
                d = new Set(["en-US", "es-ES"]),
                c = () => {
                    let e = (0, o.default)(),
                        t = (0, s.default)([r.default], () => r.default.getUserCountry()),
                        n = (0, s.default)([i.default], () => i.default.locale);
                    return a.useEffect(() => {
                        null == t && (0, l.fetchUserCountryCode)()
                    }, [t]), !e && null != t && u.has(t.alpha2) && d.has(n)
                }
        },
        104887: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("65597"),
                s = n("599110"),
                l = n("544556"),
                i = n("822825"),
                r = n("922832"),
                o = n("49111"),
                u = () => {
                    let e = (0, a.default)([i.default], () => i.default.getSelectedTab());
                    return {
                        selectedTab: e,
                        handleTabChange: e => {
                            l.default.selectTab(e), s.default.track(o.AnalyticEvents.FAMILY_CENTER_ACTION, {
                                action: r.FamilyCenterAction.TabChange,
                                tab: e
                            })
                        }
                    }
                }
        },
        771783: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSelectedTeenId: function() {
                    return l
                }
            });
            var a = n("65597");
            n("697218");
            var s = n("822825");
            let l = () => (0, a.default)([s.default], () => s.default.getSelectedTeenId())
        },
        339853: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSelectedTeenUser: function() {
                    return r
                },
                useTeenUserForId: function() {
                    return o
                }
            });
            var a = n("65597"),
                s = n("697218"),
                l = n("822825"),
                i = n("775032");
            let r = () => {
                    let e = (0, i.default)();
                    return (0, a.default)([l.default, s.default], () => {
                        if (!e) return s.default.getCurrentUser();
                        let t = l.default.getSelectedTeenId();
                        if (null !== t) return s.default.getUser(t)
                    })
                },
                o = e => (0, a.default)([s.default], () => {
                    let t = s.default.getUser(e);
                    if (null != t) return t
                })
        },
        775032: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("446674"),
                s = n("697218");

            function l() {
                let e = (0, a.useStateFromStores)([s.default], () => {
                    var e;
                    return null === (e = s.default.getCurrentUser()) || void 0 === e ? void 0 : e.nsfwAllowed
                });
                return e
            }
        },
        25132: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useUserForLinkStatus: function() {
                    return d
                },
                useUserQRLinkUrl: function() {
                    return c
                },
                useHasMaxConnections: function() {
                    return E
                },
                usePendingRequestCount: function() {
                    return f
                },
                useAcceptedRequestsCount: function() {
                    return _
                },
                useActivityWindowTimeStamp: function() {
                    return I
                },
                useLinkTimestampText: function() {
                    return h
                }
            });
            var a = n("65597"),
                s = n("697218"),
                l = n("822825"),
                i = n("117933"),
                r = n("771783"),
                o = n("775032"),
                u = n("922832");

            function d(e) {
                var t;
                let n = (0, a.default)([l.default], () => l.default.getLinkedUsers()),
                    i = Object.values(n).filter(t => null != t && t.link_status === e),
                    r = i.sort((e, t) => new Date(e.updated_at).getTime() - new Date(t.updated_at).getTime()).map(e => null !== (t = e.user_id) && void 0 !== t ? t : void 0).filter(e => null != e);
                return (0, a.useStateFromStoresArray)([s.default], () => r.map(e => s.default.getUser(e))).filter(e => null != e)
            }

            function c() {
                let e = (0, a.default)([l.default], () => l.default.getLinkCode()),
                    t = (0, a.default)([s.default], () => s.default.getCurrentUser());
                return null == e || null == t ? null : (0, u.FAMILY_CENTER_REQUEST_QR_CODE_URL)(t.id, e)
            }

            function E() {
                let e = (0, o.default)(),
                    t = d(u.UserLinkStatus.ACTIVE),
                    n = e ? u.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS : u.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS;
                return t.length >= n
            }

            function f() {
                let e = (0, a.default)([s.default], () => s.default.getCurrentUser()),
                    t = (0, a.default)([l.default], () => l.default.getLinkedUsers());
                if (null == e) return 0;
                let n = Object.values(t).filter(t => null != t && t.link_status === u.UserLinkStatus.PENDING && e.id !== t.requestor_id);
                return n.length
            }

            function _() {
                let e = (0, a.default)([s.default], () => s.default.getCurrentUser()),
                    t = (0, a.default)([l.default], () => l.default.getLinkedUsers());
                if (null == e) return 0;
                let n = Object.values(t).filter(e => null != e && e.link_status === u.UserLinkStatus.ACTIVE);
                return n.length
            }

            function I(e) {
                let t = (0, r.useSelectedTeenId)(),
                    n = (0, a.default)([l.default], () => null == t ? null : l.default.getRangeStartTimestamp());
                return null == n ? null : (0, i.formatUserActivityTimestamp)(new Date(n).getTime(), () => e, 7)
            }

            function h(e, t) {
                let n = (0, a.default)([l.default], () => l.default.getLinkTimestamp(e));
                return null != n ? (0, i.formatLinkTimestamp)(Date.parse(n), t === u.UserLinkStatus.PENDING ? u.PENDING_LINK_REQUEST_TIMESTAMP_FORMATTER : u.ACCEPTED_LINK_REQUEST_TIMESTAMP_FORMATTER) : null
            }
        },
        322372: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("368874"),
                i = n("104887"),
                r = n("775032"),
                o = n("25132"),
                u = n("806468"),
                d = n("922832"),
                c = n("782340"),
                E = n("960943"),
                f = n("358616"),
                _ = n("865932");
            let I = () => {
                let e = (0, o.useUserForLinkStatus)(d.UserLinkStatus.ACTIVE),
                    t = (0, r.default)(),
                    {
                        handleTabChange: n
                    } = (0, i.default)(),
                    l = (0, o.useHasMaxConnections)();
                return l || t && e.length > 0 ? null : (0, a.jsx)("div", {
                    className: E.button,
                    children: t ? (0, a.jsx)(s.Button, {
                        fullWidth: !1,
                        size: s.ButtonSizes.LARGE,
                        onClick: () => n(d.FamilyCenterSubPages.REQUESTS),
                        children: c.default.Messages.GET_STARTED
                    }) : (0, a.jsx)(u.default, {})
                })
            };
            var h = () => {
                let e = (0, r.default)(),
                    t = (0, l.useAgeSpecificText)(c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_HEADER_TEEN, c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_HEADER_PARENT),
                    n = (0, l.useAgeSpecificText)(c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_DESCRIPTION_TEEN.format({
                        articleLink: "https://support.discord.com/hc/articles/14155060633623"
                    }), c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_DESCRIPTION_PARENT.format({
                        articleLink: "https://support.discord.com/hc/articles/14155043715735"
                    }));
                return (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsxs)("div", {
                        children: [(0, a.jsx)("div", {
                            children: (0, a.jsxs)("div", {
                                className: E.headerText,
                                children: [(0, a.jsx)(s.Heading, {
                                    variant: "heading-xl/medium",
                                    children: (0, a.jsx)(s.HeadingLevel, {
                                        children: t
                                    })
                                }), (0, a.jsx)(s.Text, {
                                    variant: "text-sm/medium",
                                    color: "text-muted",
                                    children: n
                                })]
                            })
                        }), (0, a.jsx)(I, {})]
                    }), (0, a.jsx)("div", {
                        className: E.headerImage,
                        children: (0, a.jsx)("img", {
                            src: e ? f : _,
                            alt: c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_IMAGE_ALT
                        })
                    })]
                })
            }
        },
        447342: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return j
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("65597"),
                o = n("77078"),
                u = n("462579"),
                d = n("266926"),
                c = n("599110"),
                E = n("299039"),
                f = n("822825"),
                _ = n("117933"),
                I = n("368874"),
                h = n("648750"),
                C = n("710514"),
                T = n("339853"),
                m = n("775032"),
                S = n("25132"),
                N = n("453479"),
                A = n("975344"),
                p = n("57"),
                g = n("863972"),
                R = n("884706"),
                O = n("424373"),
                L = n("922832"),
                M = n("49111"),
                v = n("782340"),
                D = n("354591");

            function x() {
                let e = s.useCallback(() => {
                    (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("538969").then(n.bind(n, "538969"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    })
                }, []);
                return (0, a.jsx)(o.Clickable, {
                    className: D.tooltip,
                    onClick: e,
                    children: (0, a.jsx)(d.default, {
                        className: D.icon,
                        width: 15,
                        height: 15
                    })
                })
            }

            function P(e) {
                let {
                    displayType: t
                } = e, n = s.useCallback(() => {
                    (0, o.showToast)((0, o.createToast)(v.default.Messages.FAMILY_CENTER_ERROR_GENERIC_TOAST, o.ToastType.FAILURE))
                }, []), l = (0, m.default)(), r = (0, C.useActionsForDisplayType)(t), u = (0, C.useActionTotalsForDisplayType)(t), {
                    loadMore: d,
                    isMoreLoading: c
                } = (0, h.useFamilyCenterActions)({
                    onError: n
                }), f = L.ACTION_TO_TEXT.get(t), [I, T] = s.useState(L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS), S = s.useCallback(() => {
                    T(e => e + L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS), d(t)
                }, [t, d]);
                i(f, "No text for action type");
                let N = f.sectionHeader(u),
                    g = s.useCallback(e => {
                        let {
                            row: t
                        } = e, n = r[t];
                        return (0, _.isUserAction)(n) ? (0, a.jsx)(p.default, {
                            userId: n.entity_id,
                            timestamp: E.default.extractTimestamp(n.event_id),
                            timestampFormatter: f.timestampFormatter
                        }, n.event_id) : (0, _.isGuildAction)(n) ? (0, a.jsx)(A.default, {
                            guildId: n.entity_id
                        }, n.event_id) : void 0
                    }, [r, f.timestampFormatter]),
                    R = s.useCallback(() => (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(o.Text, {
                            className: D.sectionHeader,
                            variant: "eyebrow",
                            color: "header-secondary",
                            children: N
                        }), void 0 !== f.sectionDescription ? (0, a.jsx)(o.Text, {
                            className: D.sectionDescription,
                            variant: "text-md/medium",
                            color: "text-muted",
                            children: f.sectionDescription(null != l && l)
                        }) : null]
                    }), [N, f, l]);
                if (0 === r.length) return null;
                let O = r.slice(0, I);
                return (0, a.jsxs)("div", {
                    className: D.actionSection,
                    children: [R(), (0, a.jsx)("div", {
                        className: D.actions,
                        style: {
                            maxHeight: 65 * O.length
                        },
                        children: O.map((e, t) => g({
                            row: t
                        }))
                    }), O.length !== u ? (0, a.jsx)(o.Clickable, {
                        className: D.loadMoreBar,
                        onClick: S,
                        role: "button",
                        children: c ? (0, a.jsx)(o.Spinner, {
                            type: o.Spinner.Type.PULSING_ELLIPSIS,
                            className: D.spinner
                        }) : (0, a.jsx)(o.Text, {
                            className: D.loadMore,
                            variant: "text-sm/bold",
                            children: v.default.Messages.FAMILY_CENTER_ACTIVITY_MORE.format({
                                pageSize: Math.min(u - O.length, L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS)
                            })
                        })
                    }) : null]
                })
            }
            let y = () => {
                    let e = (0, m.default)(),
                        t = (0, S.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE),
                        n = (0, I.useAgeSpecificText)(v.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_PREFACE_TEEN.format({
                            activeLinks: t.length
                        }), v.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_PREFACE_PARENT),
                        s = (0, _.getActivityWindowTimestampFormatter)(!!e),
                        l = (0, S.useActivityWindowTimeStamp)(s);
                    return e && t.length > 1 ? (0, a.jsx)(o.Text, {
                        variant: "eyebrow",
                        children: l
                    }) : (0, a.jsxs)(a.Fragment, {
                        children: [e ? null : (0, a.jsx)(u.default, {
                            className: D.icon
                        }), (0, a.jsx)(o.Text, {
                            variant: "eyebrow",
                            children: n
                        })]
                    })
                },
                b = e => {
                    let {
                        userId: t,
                        subText: n,
                        avatarSize: s = o.AvatarSizes.SIZE_40
                    } = e, l = (0, T.useTeenUserForId)(t);
                    return void 0 === l ? null : (0, a.jsxs)("div", {
                        className: D.accountRow,
                        children: [(0, a.jsx)(g.FamilyCenterAvatar, {
                            user: l,
                            avatarSize: s
                        }), (0, a.jsxs)("div", {
                            className: D.headerText,
                            children: [(0, a.jsx)(R.default, {
                                user: l
                            }), void 0 !== n ? (0, a.jsx)(o.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                children: n
                            }) : null]
                        })]
                    })
                },
                U = () => {
                    let e = (0, S.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE),
                        t = (0, r.default)([f.default], () => f.default.getSelectedTeenId()),
                        {
                            selectTeenUser: n
                        } = (0, h.useFamilyCenterActions)({}),
                        l = e.map(e => ({
                            label: e.id,
                            value: e.id
                        })),
                        i = s.useCallback(e => (0, a.jsx)(b, {
                            userId: e.value,
                            avatarSize: o.AvatarSizes.SIZE_24
                        }), []);
                    return (0, a.jsx)(o.Select, {
                        className: D.select,
                        renderOptionLabel: i,
                        renderOptionValue: e => {
                            let [t] = e;
                            return i(t)
                        },
                        serialize: e => e,
                        select: e => {
                            n(e), c.default.track(M.AnalyticEvents.FAMILY_CENTER_ACTION, {
                                action: L.FamilyCenterAction.SelectTeen
                            })
                        },
                        isSelected: e => e === t,
                        options: l
                    })
                },
                G = e => {
                    let {
                        userId: t
                    } = e, n = (0, m.default)(), s = (0, S.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE), l = (0, _.getActivityWindowTimestampFormatter)(!!n), i = (0, S.useActivityWindowTimeStamp)(l);
                    return n && 1 !== s.length ? (0, a.jsx)(U, {}) : (0, a.jsx)(b, {
                        userId: t,
                        subText: i
                    })
                };
            var j = e => {
                let {
                    user: t
                } = e, n = Array.from(L.ACTION_TO_TEXT.entries()), s = (0, C.useHasActionForAnyDisplayType)(), l = (0, _.getEmptyActivityFormatter)(), i = (0, S.useActivityWindowTimeStamp)(l);
                return (0, a.jsxs)("div", {
                    className: D.container,
                    children: [(0, a.jsxs)("div", {
                        className: D.connectedCounter,
                        children: [(0, a.jsx)(y, {}), (0, a.jsx)(x, {})]
                    }), (0, a.jsxs)("div", {
                        className: D.card,
                        children: [(0, a.jsx)("div", {
                            className: D.header,
                            children: (0, a.jsx)(G, {
                                userId: t.id
                            })
                        }), (0, a.jsxs)("div", {
                            className: D.content,
                            children: [(0, a.jsx)("div", {
                                className: D.activityCounterRow,
                                children: n.map(e => {
                                    let [t, n] = e;
                                    return (0, a.jsx)(N.default, {
                                        displayType: t,
                                        header: n.tooltipHeader()
                                    }, "counter-".concat(t))
                                })
                            }), (0, a.jsx)("div", {
                                className: D.activityOverview,
                                children: s ? n.map(e => {
                                    let [t] = e;
                                    return (0, a.jsx)(P, {
                                        displayType: t
                                    }, "".concat(t, "-list"))
                                }) : (0, a.jsx)(O.default, {
                                    className: D.emptyActivity,
                                    text: null != i ? i : ""
                                })
                            })]
                        })]
                    })]
                })
            }
        },
        453479: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("710514"),
                i = n("629788"),
                r = e => {
                    let {
                        header: t,
                        displayType: n
                    } = e, r = (0, l.useActionTotalsForDisplayType)(n);
                    return (0, a.jsxs)("div", {
                        className: i.counter,
                        children: [(0, a.jsx)(s.Heading, {
                            variant: "heading-xxl/medium",
                            color: r > 0 ? "text-brand" : "text-muted",
                            children: (0, a.jsx)(s.HeadingLevel, {
                                children: null != r ? r : 0
                            })
                        }), (0, a.jsx)(s.Text, {
                            variant: "text-sm/semibold",
                            children: t
                        })]
                    })
                }
        },
        299138: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("368874"),
                i = n("328911"),
                r = n("782340"),
                o = n("186614"),
                u = n("392963"),
                d = () => {
                    let e = (0, l.useAgeSpecificText)(r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_DESCRIPTION_TEEN, r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_DESCRIPTION_PARENT);
                    return (0, a.jsxs)("div", {
                        className: o.container,
                        children: [(0, a.jsxs)("div", {
                            className: o.content,
                            children: [(0, a.jsx)(s.Heading, {
                                className: o.header,
                                variant: "heading-md/bold",
                                children: (0, a.jsx)(s.HeadingLevel, {
                                    children: r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_HEADER
                                })
                            }), (0, a.jsx)(s.Text, {
                                className: o.description,
                                variant: "text-sm/medium",
                                color: "text-muted",
                                children: e
                            }), (0, a.jsx)(i.default, {})]
                        }), (0, a.jsx)("div", {
                            className: o.artContainer,
                            children: (0, a.jsx)("img", {
                                src: u,
                                alt: r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_ALT
                            })
                        })]
                    })
                }
        },
        975344: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("617258"),
                r = n("65597"),
                o = n("77078"),
                u = n("580357"),
                d = n("822825"),
                c = n("49111"),
                E = n("782340"),
                f = n("116658");
            let _ = [18, 18, 16, 16, 14, 12, 10];
            var I = e => {
                let {
                    guildId: t
                } = e, n = (0, r.default)([d.default], () => d.default.getGuild(t));
                if (void 0 === n) return null;
                let s = n.hasFeature(c.GuildFeatures.VERIFIED) || n.hasFeature(c.GuildFeatures.PARTNERED),
                    I = n.toString(),
                    h = n.getIconURL(40, !0),
                    C = null,
                    T = _[_.length - 1];
                if (null == n.icon && null != I) {
                    var m;
                    T = null !== (m = _[(C = (0, i.getAcronym)(I)).length - 1]) && void 0 !== m ? m : _[_.length - 1]
                }
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsxs)("div", {
                        style: {
                            fontSize: T
                        },
                        children: [null != C ? (0, a.jsx)("div", {
                            className: l(f.childWrapper, f.acronym),
                            "aria-hidden": !0,
                            children: C
                        }) : null, null != h ? (0, a.jsx)(o.Avatar, {
                            src: n.getIconURL(40, !0),
                            size: o.AvatarSizes.SIZE_40,
                            "aria-hidden": !0
                        }) : null]
                    }), (0, a.jsxs)("div", {
                        className: f.descriptors,
                        children: [(0, a.jsxs)("div", {
                            className: f.header,
                            children: [s ? (0, a.jsx)(u.default, {
                                guild: n,
                                tooltipPosition: "bottom",
                                tooltipColor: o.Tooltip.Colors.PRIMARY,
                                className: f.guildBadge
                            }) : null, (0, a.jsx)(o.Text, {
                                variant: "text-md/semibold",
                                children: n.toString()
                            })]
                        }), void 0 !== n.approximateMemberCount ? (0, a.jsx)(o.Text, {
                            variant: "text-xs/medium",
                            color: "text-muted",
                            children: E.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_ROW_MEMBER_COUNT.format({
                                members: n.approximateMemberCount
                            })
                        }) : null]
                    })]
                })
            }
        },
        544553: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("697218"),
                i = n("171710"),
                r = n("462579"),
                o = n("368874"),
                u = n("339853"),
                d = n("25132"),
                c = n("322372"),
                E = n("447342"),
                f = n("299138"),
                _ = n("893302"),
                I = n("490013"),
                h = n("922832"),
                C = n("782340"),
                T = n("54236"),
                m = () => {
                    let e = (0, d.useUserForLinkStatus)(h.UserLinkStatus.ACTIVE),
                        t = (0, u.useSelectedTeenUser)(),
                        n = (0, s.default)([l.default], () => l.default.getCurrentUser()),
                        m = (0, o.useAgeSpecificText)(C.default.Messages.FAMILY_CENTER_FEATURE_CARD_MESSAGES_DESCRIPTION_TEEN, C.default.Messages.FAMILY_CENTER_FEATURE_CARD_MESSAGES_DESCRIPTION_PARENT),
                        S = (0, o.useAgeSpecificText)(C.default.Messages.FAMILY_CENTER_FEATURE_CARD_SHARING_DESCRIPTION_TEEN, C.default.Messages.FAMILY_CENTER_FEATURE_CARD_SHARING_DESCRIPTION_PARENT),
                        N = (0, o.useAgeSpecificText)(C.default.Messages.FAMILY_CENTER_FEATURE_CARD_PAIRING_DESCRIPTION_TEEN, C.default.Messages.FAMILY_CENTER_FEATURE_CARD_PAIRING_DESCRIPTION_PARENT);
                    return void 0 === n ? null : (0, a.jsxs)("div", {
                        className: T.container,
                        children: [(0, a.jsx)("div", {
                            className: T.banner,
                            children: (0, a.jsx)(c.default, {})
                        }), (0, a.jsxs)("div", {
                            className: T.featureCards,
                            children: [(0, a.jsx)(_.default, {
                                iconClassName: T.chatCheckIcon,
                                icon: i.default,
                                header: C.default.Messages.FAMILY_CENTER_FEATURE_CARD_MESSAGES_HEADER,
                                description: m
                            }), (0, a.jsx)(_.default, {
                                icon: r.default,
                                header: C.default.Messages.FAMILY_CENTER_FEATURE_CARD_SHARING_HEADER,
                                description: S
                            }), (0, a.jsx)(_.default, {
                                icon: I.default,
                                header: C.default.Messages.FAMILY_CENTER_FEATURE_CARD_PAIRING_HEADER,
                                description: N
                            })]
                        }), 0 === e.length ? (0, a.jsx)(f.default, {}) : null, void 0 !== t && e.length > 0 ? (0, a.jsx)(E.default, {
                            user: t
                        }) : null]
                    })
                }
        },
        57: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("77078"),
                i = n("697218"),
                r = n("158998"),
                o = n("117933"),
                u = n("863972"),
                d = n("630345"),
                c = e => {
                    let {
                        userId: t,
                        timestamp: n,
                        timestampFormatter: c
                    } = e, E = (0, s.default)([i.default], () => i.default.getUser(t));
                    return void 0 === E ? null : (0, a.jsxs)("div", {
                        className: d.container,
                        children: [(0, a.jsx)(u.FamilyCenterAvatar, {
                            user: E,
                            avatarSize: l.AvatarSizes.SIZE_40
                        }), (0, a.jsx)("div", {
                            children: (0, a.jsxs)("div", {
                                className: d.descriptors,
                                children: [(0, a.jsx)(l.Text, {
                                    variant: "text-md/semibold",
                                    children: r.default.getName(E)
                                }), (0, a.jsx)(l.Text, {
                                    variant: "text-xs/medium",
                                    color: "text-muted",
                                    children: (0, o.formatUserActivityTimestamp)(new Date(n).getTime(), c)
                                })]
                            })
                        })]
                    })
                }
        },
        863972: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FamilyCenterAvatar: function() {
                    return d
                },
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("106435"),
                i = n("50885"),
                r = n("782340"),
                o = n("751226");
            let u = i.default.getEnableHardwareAcceleration() ? s.AnimatedAvatar : s.Avatar,
                d = e => {
                    let {
                        user: t,
                        avatarSize: n = s.AvatarSizes.SIZE_48
                    } = e, {
                        avatarSrc: i,
                        avatarDecorationSrc: d,
                        eventHandlers: c
                    } = (0, l.default)({
                        user: t,
                        size: n
                    });
                    return (0, a.jsx)("div", {
                        ...c,
                        children: (0, a.jsx)(u, {
                            className: o.avatar,
                            src: i,
                            avatarDecoration: d,
                            size: n,
                            "aria-label": r.default.Messages.FAMILY_CENTER_AVATAR_ARIA.format({
                                name: t.username
                            })
                        })
                    })
                };
            var c = e => {
                let {
                    currentUser: t,
                    otherUser: n,
                    children: s
                } = e;
                return (0, a.jsx)("div", {
                    className: o.avatarPairContainer,
                    children: (0, a.jsxs)("div", {
                        className: o.avatarPair,
                        children: [(0, a.jsx)(d, {
                            user: t
                        }), s, (0, a.jsx)(d, {
                            user: n
                        })]
                    })
                })
            }
        },
        328911: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("945330"),
                o = n("549586"),
                u = n("564875"),
                d = n("368874"),
                c = n("589333"),
                E = n("782340"),
                f = n("635577"),
                _ = n("926622");
            let I = e => {
                let {
                    header: t,
                    description: n,
                    icon: s,
                    inModal: r
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(f.row, _.marginBottom8, {
                        [f.inModal]: r
                    }),
                    children: [(0, a.jsx)("div", {
                        className: f.iconContainer,
                        children: s
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(i.Text, {
                            className: f.header,
                            variant: "text-sm/bold",
                            color: "header-primary",
                            children: t
                        }), (0, a.jsx)(i.Text, {
                            variant: "text-xs/medium",
                            color: "header-secondary",
                            children: n
                        })]
                    })]
                })
            };
            var h = e => {
                let {
                    inModal: t
                } = e, n = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_INCLUDED_HEADER_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_INCLUDED_HEADER_PARENT), s = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_HEADER_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_HEADER_PARENT), l = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_HEADER_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_HEADER_PARENT), _ = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_DESCRIPTION_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_DESCRIPTION_PARENT);
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(i.Text, {
                        className: f.groupHeader,
                        variant: "text-xxs/bold",
                        color: "header-secondary",
                        children: n
                    }), (0, a.jsx)(I, {
                        header: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_FRIEND_ADD_HEADER,
                        description: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_FRIEND_ADD_DESCRIPTION,
                        icon: (0, a.jsx)(u.default, {
                            width: 20,
                            height: 20,
                            className: f.positive
                        }),
                        inModal: t
                    }), (0, a.jsx)(I, {
                        header: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_GUILD_PARTICIPATION_HEADER,
                        description: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_GUILD_PARTICIPATION_DESCRIPTION,
                        icon: (0, a.jsx)(o.default, {
                            width: 20,
                            height: 20,
                            className: f.positive
                        }),
                        inModal: t
                    }), (0, a.jsx)(I, {
                        header: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_USERS_MESSAGED_HEADER,
                        description: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_USERS_MESSAGED_DESCRIPTION,
                        icon: (0, a.jsx)(c.default, {
                            width: 20,
                            height: 20,
                            className: f.positive
                        }),
                        inModal: t
                    }), (0, a.jsx)(i.Text, {
                        className: f.groupHeader,
                        variant: "text-xxs/bold",
                        color: "header-secondary",
                        children: s
                    }), (0, a.jsx)(I, {
                        header: l,
                        description: _,
                        icon: (0, a.jsx)(r.default, {
                            width: 20,
                            height: 20,
                            className: f.negative
                        }),
                        inModal: t
                    })]
                })
            }
        },
        884706: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("158998"),
                o = n("833381"),
                u = e => {
                    let {
                        user: t,
                        fill: n
                    } = e, s = "\xa0(@".concat(r.default.getUserTag(t, {
                        decoration: "never"
                    }), ")");
                    return (0, a.jsxs)(i.Text, {
                        className: l([o.text, {
                            [o.fill]: n
                        }]),
                        variant: "text-md/medium",
                        children: [(0, a.jsx)("span", {
                            className: o.username,
                            children: r.default.getName(t)
                        }), (0, a.jsx)("span", {
                            className: o.discriminator,
                            children: s
                        })]
                    })
                }
        },
        424373: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("852410"),
                o = n("926622"),
                u = n("871859"),
                d = e => {
                    let {
                        text: t,
                        className: n
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: l(n, r.empty),
                        children: [(0, a.jsx)("img", {
                            className: r.image,
                            src: u,
                            alt: ""
                        }), (0, a.jsx)(i.Text, {
                            className: o.marginTop8,
                            variant: "text-sm/medium",
                            color: "text-muted",
                            children: t
                        })]
                    })
                }
        },
        893302: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("281319"),
                o = e => {
                    let {
                        icon: t,
                        iconClassName: n,
                        header: s,
                        description: o
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: r.container,
                        children: [(0, a.jsx)("div", {
                            className: r.circle,
                            children: (0, a.jsx)(t, {
                                className: l(r.icon, n),
                                width: 21,
                                height: 21
                            })
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(i.Heading, {
                                variant: "heading-md/bold",
                                className: r.header,
                                children: (0, a.jsx)(i.HeadingLevel, {
                                    children: s
                                })
                            }), (0, a.jsx)(i.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                children: o
                            })]
                        })]
                    })
                }
        },
        589333: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 20 20",
                    fill: "none",
                    children: [(0, a.jsx)("path", {
                        d: "M5.42999 16C5.73201 16 5.97454 15.7326 5.98651 15.4309C5.99216 15.2885 6 15.145 6 15C6 10.582 8.97355 7 13.6115 7C15.3176 7 16.9378 7.60732 18.2734 8.47894C18.6009 8.69267 19.0088 8.49717 19.0012 8.10616C19.0004 8.06876 19 8.03318 19 8C19 3.589 15.0439 0 10.1825 0C5.32115 0 1.36504 3.589 1.36504 8C1.36504 9.24168 1.67304 10.4357 2.26529 11.523C2.49433 11.9436 2.45549 12.472 2.12042 12.8141L0.664819 14.3003C0.0449194 14.9332 0.493315 16 1.37923 16H5.42999Z",
                        fill: l
                    }), (0, a.jsx)("path", {
                        d: "M20.0134 17.8398C19.8366 17.558 19.8172 17.2085 19.9242 16.8935C20.1307 16.2852 20.2371 15.6451 20.2371 15C20.2371 11.691 17.4914 9 14.1166 9C10.7419 9 7.99609 11.691 7.99609 15C7.99609 18.309 10.7419 21 14.1166 21H20.1882C20.9744 21 21.4531 20.1345 21.0353 19.4685L20.0134 17.8398Z",
                        fill: l
                    })]
                })
            }
        },
        153935: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserSettingsFamilyCenterPage: function() {
                    return K
                },
                default: function() {
                    return z
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("394846"),
                o = n("432710"),
                u = n("65597"),
                d = n("151426"),
                c = n("77078"),
                E = n("939488"),
                f = n("669499"),
                _ = n("69927"),
                I = n("10641"),
                h = n("539938"),
                C = n("155084"),
                T = n("970366"),
                m = n("161778"),
                S = n("845579"),
                N = n("697218"),
                A = n("476765"),
                p = n("155207"),
                g = n("956089"),
                R = n("599110"),
                O = n("439932"),
                L = n("544556"),
                M = n("822825"),
                v = n("104887"),
                D = n("771783"),
                x = n("775032"),
                P = n("25132"),
                y = n("544553"),
                b = n("210173"),
                U = n("68818"),
                G = n("922832"),
                j = n("49111"),
                F = n("586391"),
                k = n("994428"),
                B = n("782340"),
                w = n("177960");
            let H = {
                    [G.FamilyCenterSubPages.REQUESTS]: () => (0, a.jsx)(b.default, {}),
                    [G.FamilyCenterSubPages.ACTIVITY]: () => (0, a.jsx)(y.default, {}),
                    [G.FamilyCenterSubPages.SETTINGS]: () => (0, a.jsx)(U.default, {})
                },
                V = {
                    [G.FamilyCenterSubPages.REQUESTS]: () => (0, a.jsx)(b.default, {}),
                    [G.FamilyCenterSubPages.ACTIVITY]: () => (0, a.jsx)(y.default, {})
                };

            function Y(e) {
                let {
                    section: t,
                    handleItemSelect: n
                } = e, s = (0, P.usePendingRequestCount)(), l = (0, x.default)();
                return (0, a.jsxs)(c.TabBar, {
                    className: w.settingsTabBar,
                    "aria-label": B.default.Messages.FAMILY_CENTER_TITLE,
                    selectedItem: t,
                    type: "top",
                    look: "brand",
                    onItemSelect: n,
                    children: [(0, a.jsx)(c.TabBar.Item, {
                        className: w.settingsTabBarItem,
                        id: G.FamilyCenterSubPages.ACTIVITY,
                        children: B.default.Messages.FAMILY_CENTER_ACTIVITY_TAB
                    }), (0, a.jsxs)(c.TabBar.Item, {
                        className: w.settingsTabBarItem,
                        id: G.FamilyCenterSubPages.REQUESTS,
                        "aria-label": B.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
                        children: [B.default.Messages.FAMILY_CENTER_REQUESTS_TAB, s > 0 ? (0, a.jsx)(g.NumberBadge, {
                            className: w.badge,
                            count: s
                        }) : null]
                    }), l ? (0, a.jsx)(c.TabBar.Item, {
                        className: w.settingsTabBarItem,
                        id: G.FamilyCenterSubPages.SETTINGS,
                        children: B.default.Messages.SETTINGS
                    }) : null]
                })
            }

            function W(e) {
                let {
                    theme: t,
                    section: n,
                    handleItemSelect: s
                } = e, l = (0, A.useUID)(), o = (0, P.usePendingRequestCount)();
                return (0, a.jsxs)(h.default, {
                    className: i((0, O.getThemeClass)(t), w.sidebarTabBar),
                    scrollable: r.isMobile,
                    role: "navigation",
                    "aria-labelledby": l,
                    toolbar: !0,
                    children: [(0, a.jsx)(h.default.Icon, {
                        icon: p.default,
                        "aria-hidden": !0
                    }), (0, a.jsx)(h.default.Title, {
                        id: l,
                        children: B.default.Messages.FAMILY_CENTER_TITLE
                    }), (0, a.jsx)(h.default.Divider, {}), (0, a.jsxs)(c.TabBar, {
                        "aria-label": B.default.Messages.FAMILY_CENTER_TITLE,
                        selectedItem: n,
                        type: "top-pill",
                        onItemSelect: s,
                        className: w.tabBar,
                        children: [(0, a.jsx)(c.TabBar.Item, {
                            id: G.FamilyCenterSubPages.ACTIVITY,
                            className: w.item,
                            children: B.default.Messages.FAMILY_CENTER_ACTIVITY_TAB
                        }), (0, a.jsxs)(c.TabBar.Item, {
                            id: G.FamilyCenterSubPages.REQUESTS,
                            className: w.item,
                            "aria-label": B.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
                            children: [B.default.Messages.FAMILY_CENTER_REQUESTS_TAB, o > 0 ? (0, a.jsx)(g.NumberBadge, {
                                className: w.badge,
                                count: o
                            }) : null]
                        })]
                    })]
                })
            }

            function K() {
                let e = (0, x.default)(),
                    t = (0, P.useAcceptedRequestsCount)(),
                    n = (0, I.useIsDismissibleContentDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE),
                    l = (0, u.default)([M.default], () => M.default.getIsInitialized()),
                    r = (0, D.useSelectedTeenId)(),
                    {
                        selectedTab: E,
                        handleTabChange: h
                    } = (0, v.default)(),
                    m = (0, A.useUID)(),
                    S = N.default.getCurrentUser(),
                    p = null != e,
                    g = l && null != S && !p;
                return (s.useEffect(() => {
                    (0, T.trackAppUIViewed)("family-center"), L.default.initialPageLoad(), !n && (0, I.markDismissibleContentAsDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE, {
                        dismissAction: k.ContentDismissActionType.AUTO,
                        forceTrack: !0
                    })
                }, []), s.useEffect(() => {
                    l && p && (R.default.track(j.AnalyticEvents.FAMILY_CENTER_VIEWED, {
                        is_considered_adult: e,
                        num_of_accepted_links: t,
                        selected_teen_id: r,
                        initial_page: G.FamilyCenterSubPageAnalyticsIds[E],
                        source: G.FamilyCenterPageLocationAnalyticsIds[G.FamilyCenterPageLocation.SIDENAV]
                    }), C.default.increment({
                        name: o.MetricEvents.FAMILY_CENTER_VIEW
                    }))
                }, [l, p]), g) ? ((0, f.openAgeGateModal)(F.AgeGateSource.FAMILY_CENTER), null) : (0, a.jsxs)("main", {
                    className: i(w.container),
                    "aria-label": B.default.Messages.FAMILY_CENTER_TITLE,
                    children: [(0, a.jsx)(_.AppPageTitle, {
                        location: B.default.Messages.FAMILY_CENTER_TITLE
                    }), (0, a.jsx)(Y, {
                        section: E,
                        handleItemSelect: e => {
                            h(e)
                        }
                    }), (0, a.jsx)(c.TabBar.Panel, {
                        id: E,
                        "aria-labelledby": m,
                        className: w.contentPanel,
                        children: (0, a.jsx)("div", {
                            children: H[E]()
                        })
                    })]
                })
            }

            function z() {
                let e = (0, x.default)(),
                    t = (0, P.useAcceptedRequestsCount)(),
                    n = (0, I.useIsDismissibleContentDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE),
                    l = (0, u.default)([M.default], () => M.default.getIsInitialized()),
                    r = (0, D.useSelectedTeenId)(),
                    h = (0, u.default)([m.default], () => m.default.theme),
                    {
                        selectedTab: p,
                        handleTabChange: g
                    } = (0, v.default)(),
                    O = (0, A.useUID)(),
                    y = N.default.getCurrentUser(),
                    b = null != e,
                    U = l && null != y && !b;
                if (s.useEffect(() => {
                        E.setHomeLink(j.Routes.FAMILY_CENTER), (0, T.trackAppUIViewed)("family-center"), !M.default.isLoading() && M.default.canRefetch() && L.default.initialPageLoad(), !n && (0, I.markDismissibleContentAsDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE, {
                            dismissAction: k.ContentDismissActionType.AUTO,
                            forceTrack: !0
                        })
                    }, []), s.useEffect(() => {
                        l && b && (R.default.track(j.AnalyticEvents.FAMILY_CENTER_VIEWED, {
                            is_considered_adult: e,
                            num_of_accepted_links: t,
                            selected_teen_id: r,
                            initial_page: G.FamilyCenterSubPageAnalyticsIds[p],
                            source: G.FamilyCenterPageLocationAnalyticsIds[G.FamilyCenterPageLocation.SIDENAV]
                        }), C.default.increment({
                            name: o.MetricEvents.FAMILY_CENTER_VIEW
                        }))
                    }, [l, b]), s.useEffect(() => {
                        let t = S.FamilyCenterEnabled.getSetting();
                        l && e && void 0 === t && S.FamilyCenterEnabled.updateSetting(!0)
                    }, [l, e]), U) return (0, f.openAgeGateModal)(F.AgeGateSource.FAMILY_CENTER), null;
                let H = p !== G.FamilyCenterSubPages.SETTINGS ? p : G.FamilyCenterSubPages.ACTIVITY,
                    Y = V[H];
                return (0, a.jsxs)("main", {
                    className: i(w.container, w.containerSidenav),
                    "aria-label": B.default.Messages.FAMILY_CENTER_TITLE,
                    children: [(0, a.jsx)(_.AppPageTitle, {
                        location: B.default.Messages.FAMILY_CENTER_TITLE
                    }), (0, a.jsx)(W, {
                        theme: h,
                        section: H,
                        handleItemSelect: e => {
                            g(e)
                        }
                    }), (0, a.jsx)(c.TabBar.Panel, {
                        id: H,
                        "aria-labelledby": O,
                        className: w.contentPanel,
                        children: (0, a.jsx)("div", {
                            className: w.sideNavContent,
                            children: Y()
                        })
                    })]
                })
            }
        },
        490013: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        d: "M2.36002 2.35999V7.39991H7.39994V2.35999H2.36002ZM5.96009 5.96006H3.80009V3.80006H5.96009V5.96006Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M2.36002 14.5999V19.6401H7.39994V14.5999H2.36002ZM5.96009 18.2002H3.80009V16.0402H5.96009V18.2002Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M14.6001 2.35999V7.39991H19.64V2.35999H14.6001ZM18.2 5.96006H16.04V3.80006H18.2V5.96006Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M18.2 8.84003V13.16H14.6001V14.5999H19.64V8.84003H18.2Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M14.6001 16.0402V19.64H16.04V17.48H18.2V19.64H19.64V16.0402H14.6001Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M8.84006 2.35999V3.80006H11.72V7.39991H13.1601V2.35999H8.84006Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M11.72 8.84003V11.7202H8.84006V16.0402H11.72V19.64H13.1601V14.5999H10.2801V13.16H13.1601V10.2801H14.6001V11.7202H16.04V8.84003H11.72Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M10.2801 17.48H8.84006V19.64H10.2801V17.48Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M7.39999 11.7202H5.23999V13.1601H7.39999V11.7202Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M8.84001 5.23999V8.84006H2.36002V13.1601H3.80009V10.2801H10.2801V5.23999H8.84001Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    })]
                })
            }
        },
        210173: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("355262"),
                o = n("77078"),
                u = n("302437"),
                d = n("826684"),
                c = n("368874"),
                E = n("652126"),
                f = n("775032"),
                _ = n("25132"),
                I = n("424373"),
                h = n("806468"),
                C = n("863023"),
                T = n("299387"),
                m = n("154640"),
                S = n("922832"),
                N = n("782340"),
                A = n("563662"),
                p = n("926622"),
                g = n("371997");

            function R(e) {
                let {
                    header: t,
                    description: n,
                    stepNumber: s
                } = e;
                return (0, a.jsxs)("div", {
                    className: A.step,
                    children: [(0, a.jsx)("div", {
                        className: A.stepNumber,
                        children: (0, a.jsx)(o.Heading, {
                            variant: "heading-md/semibold",
                            color: "text-brand",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: s
                            })
                        })
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(o.Heading, {
                            variant: "heading-sm/bold",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: t
                            })
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            children: n
                        })]
                    })]
                })
            }

            function O() {
                return (0, a.jsxs)("div", {
                    className: i(A.box, A.linkingBanner, A.linkingBannerParent),
                    children: [(0, a.jsxs)("div", {
                        className: i(A.linkingBannerUpper),
                        children: [(0, a.jsxs)("div", {
                            className: A.header,
                            children: [(0, a.jsx)(o.Heading, {
                                className: p.marginBottom8,
                                variant: "heading-xl/medium",
                                children: (0, a.jsx)(o.HeadingLevel, {
                                    children: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_HEADER_PARENT
                                })
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                className: p.marginBottom20,
                                children: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_DESCRIPTION_PARENT
                            })]
                        }), (0, a.jsx)("img", {
                            className: A.bannerArt,
                            src: g,
                            alt: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_ASSET_ALT
                        })]
                    }), (0, a.jsxs)("div", {
                        className: A.steps,
                        children: [(0, a.jsx)(R, {
                            header: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_1_HEADER,
                            description: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_1_DESCRIPTION,
                            stepNumber: 1
                        }), (0, a.jsx)(R, {
                            header: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_2_HEADER,
                            description: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_2_DESCRIPTION,
                            stepNumber: 2
                        }), (0, a.jsx)(R, {
                            header: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_3_HEADER,
                            description: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_3_DESCRIPTION,
                            stepNumber: 3
                        })]
                    })]
                })
            }

            function L() {
                let e = (0, _.useHasMaxConnections)();
                return (0, a.jsxs)("div", {
                    className: i(A.box, A.linkingBanner),
                    children: [(0, a.jsxs)("div", {
                        children: [(0, a.jsx)(o.Heading, {
                            className: p.marginBottom8,
                            variant: "heading-xl/medium",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_HEADER_TEEN
                            })
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            className: p.marginBottom20,
                            children: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_DESCRIPTION_TEEN.format({
                                link: "https://support.discord.com/hc/articles/14155060633623"
                            })
                        }), e ? null : (0, a.jsx)(h.default, {})]
                    }), (0, a.jsx)("img", {
                        className: A.bannerArt,
                        src: g,
                        alt: N.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_ASSET_ALT
                    })]
                })
            }

            function M(e) {
                let {
                    sectionType: t,
                    sectionTitle: n,
                    requests: l
                } = e, i = s.useRef(null), c = "".concat(t, "-list"), E = (0, u.default)(c), f = s.useCallback(e => {
                    let {
                        row: n,
                        listIndex: s
                    } = e, i = l[n], r = s === l.length;
                    return null == i ? null : (0, a.jsx)(m.default, {
                        userId: i.id,
                        isLast: r,
                        children: () => t === S.UserLinkStatus.ACTIVE ? (0, a.jsx)(C.UserLinkAcceptedRequestRow, {
                            user: i
                        }) : (0, a.jsx)(T.UserLinkPendingRequestRow, {
                            user: i
                        })
                    }, i.id)
                }, [l, t]), _ = s.useCallback(() => (0, a.jsx)(d.default, {
                    className: A.sectionTitle,
                    children: (0, a.jsx)(o.Text, {
                        className: p.marginBottom8,
                        variant: "eyebrow",
                        color: "header-secondary",
                        children: n
                    })
                }, "title"), [n]);
                return (0, a.jsx)("div", {
                    className: A.section,
                    children: (0, a.jsx)(r.ListNavigatorProvider, {
                        navigator: E,
                        children: (0, a.jsx)(r.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: t,
                                    role: s,
                                    ...r
                                } = e;
                                return (0, a.jsx)(o.List, {
                                    className: A.list,
                                    innerRole: s,
                                    innerAriaLabel: n,
                                    ref: e => {
                                        var n;
                                        i.current = e, t.current = null !== (n = null == e ? void 0 : e.getScrollerNode()) && void 0 !== n ? n : null
                                    },
                                    sectionHeight: S.FAMILY_CENTER_REQUEST_SECTION_HEIGHT,
                                    rowHeight: S.FAMILY_CENTER_REQUEST_ROW_HEIGHT,
                                    renderSection: _,
                                    renderRow: f,
                                    sections: [l.length],
                                    chunkSize: 30,
                                    fade: !0,
                                    ...r
                                }, c)
                            }
                        })
                    })
                })
            }
            let v = () => {
                    let e = (0, f.default)(),
                        t = (0, _.useUserForLinkStatus)(S.UserLinkStatus.ACTIVE),
                        n = e ? S.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS : S.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS,
                        s = {
                            count: t.length,
                            max: n
                        },
                        l = (0, c.useAgeSpecificText)(N.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_TITLE_TEEN.format(s), N.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_TITLE_PARENT.format(s));
                    return (0, a.jsx)(a.Fragment, {
                        children: t.length > 0 ? (0, a.jsx)(M, {
                            sectionType: S.UserLinkStatus.ACTIVE,
                            sectionTitle: l,
                            requests: t
                        }) : (0, a.jsxs)("div", {
                            className: A.section,
                            children: [(0, a.jsx)(o.Text, {
                                className: p.marginBottom8,
                                variant: "eyebrow",
                                color: "header-secondary",
                                children: l
                            }), (0, a.jsx)("div", {
                                className: A.box,
                                children: (0, a.jsx)(I.default, {
                                    text: N.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_EMPTY_DESCRIPTION
                                })
                            })]
                        })
                    })
                },
                D = () => {
                    let e = (0, _.useHasMaxConnections)(),
                        t = (0, f.default)(),
                        n = t ? S.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS : S.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS,
                        s = (0, c.useAgeSpecificText)(N.default.Messages.FAMILY_CENTER_REQUESTS_LIMIT_INFO_TEEN.format({
                            maxConnections: n
                        }), N.default.Messages.FAMILY_CENTER_REQUESTS_LIMIT_INFO_PARENT.format({
                            maxConnections: n
                        }));
                    return e ? (0, a.jsx)("div", {
                        className: A.maxConnectionInfo,
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-xxs/medium",
                            color: "text-muted",
                            children: s
                        })
                    }) : null
                },
                x = () => {
                    let e = (0, E.useShouldShowHelplineLink)();
                    return e ? (0, a.jsxs)("div", {
                        className: i(A.helpLineInfo, p.marginTop20),
                        children: [(0, a.jsx)(o.Heading, {
                            className: A.supportHeader,
                            variant: "heading-sm/semibold",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: N.default.Messages.FAMILY_CENTER_HELP_LINE_HEADER
                            })
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-xs/medium",
                            color: "text-muted",
                            children: N.default.Messages.FAMILY_CENTER_HELP_LINE_CONTENT.format({
                                helpLink: "https://support.discord.com/hc/articles/7925648993943-Crisis-Text-Line"
                            })
                        })]
                    }) : null
                },
                P = () => {
                    let e = (0, _.useUserForLinkStatus)(S.UserLinkStatus.PENDING),
                        t = (0, c.useAgeSpecificText)(N.default.Messages.FAMILY_CENTER_PENDING_REQUESTS_TITLE_TEEN.format({
                            count: e.length
                        }), N.default.Messages.FAMILY_CENTER_PENDING_REQUESTS_TITLE_PARENT.format({
                            count: e.length
                        }));
                    return 0 === e.length ? null : (0, a.jsx)(M, {
                        sectionType: S.UserLinkStatus.PENDING,
                        sectionTitle: t,
                        requests: e
                    })
                };
            var y = () => {
                let e = (0, f.default)();
                return (0, a.jsxs)("div", {
                    className: A.container,
                    children: [e ? (0, a.jsx)(O, {}) : (0, a.jsx)(L, {}), (0, a.jsx)(v, {}), (0, a.jsx)(P, {}), (0, a.jsx)(D, {}), (0, a.jsx)(x, {})]
                })
            }
        },
        209688: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("90915"),
                l = n("775032"),
                i = n("153935"),
                r = n("49111");

            function o() {
                let e = (0, l.default)();
                return !1 === e ? (0, a.jsx)(s.Redirect, {
                    to: r.Routes.SETTINGS("family-center")
                }) : (0, a.jsx)(i.default, {})
            }
        },
        68818: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("90915"),
                o = n("750485"),
                u = n("446674"),
                d = n("77078"),
                c = n("54239"),
                E = n("389434"),
                f = n("521128"),
                _ = n("845579"),
                I = n("538137"),
                h = n("956089"),
                C = n("49111"),
                T = n("853994"),
                m = n("782340"),
                S = n("724708"),
                N = n("926622"),
                A = () => {
                    let e = _.FamilyCenterEnabled.useSetting(),
                        {
                            categories: t,
                            initialized: n
                        } = (0, u.useStateFromStoresObject)([f.default], () => f.default.getEmailSettings());
                    return s.useEffect(() => {
                        null == n && (0, E.fetchEmailSettings)()
                    }, [n]), (0, a.jsxs)("div", {
                        className: S.container,
                        children: [(0, a.jsx)(d.Text, {
                            variant: "eyebrow",
                            color: "text-muted",
                            children: m.default.Messages.FAMILY_CENTER_SETTINGS_FORM_TITLE
                        }), (0, a.jsx)(d.FormSwitch, {
                            className: i(N.marginTop8, N.marginBottom20),
                            value: e,
                            note: m.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_SWITCH_NOTE,
                            hideBorder: !0,
                            onChange: _.FamilyCenterEnabled.updateSetting,
                            children: m.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_SWITCH
                        }), e ? (0, a.jsx)(d.Card, {
                            className: S.enableCard,
                            type: d.Card.Types.CUSTOM,
                            outline: !0,
                            children: (0, a.jsxs)(o.default, {
                                justify: o.default.Justify.END,
                                children: [(0, a.jsx)(o.default.Child, {
                                    children: (0, a.jsx)(d.Text, {
                                        variant: "text-sm/semibold",
                                        color: "text-normal",
                                        children: m.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_PROMPT
                                    })
                                }), (0, a.jsx)(d.Clickable, {
                                    children: (0, a.jsx)(r.Link, {
                                        onClick: c.popLayer,
                                        to: {
                                            pathname: C.Routes.FAMILY_CENTER,
                                            state: {
                                                scrollRestoration: !1
                                            }
                                        },
                                        children: m.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_CTA
                                    })
                                }), (0, a.jsx)(h.IconBadge, {
                                    icon: I.default,
                                    className: S.arrow,
                                    disableColor: !0
                                })]
                            })
                        }) : null, (0, a.jsx)(d.FormSwitch, {
                            className: i(N.marginTop20, N.marginBottom20),
                            value: !!t[T.EmailCategories.FAMILY_CENTER_DIGEST],
                            note: m.default.Messages.FAMILY_CENTER_SETTINGS_EMAIL_DIGEST_ENABLE_SWITCH_NOTE,
                            hideBorder: !0,
                            onChange: function(e) {
                                (0, E.updateEmailSetting)(T.EmailCategories.FAMILY_CENTER_DIGEST, e)
                            },
                            children: m.default.Messages.FAMILY_CENTER_SETTINGS_EMAIL_DIGEST_ENABLE_SWITCH
                        })]
                    })
                }
        },
        806468: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("599110"),
                i = n("698370"),
                r = n("922832"),
                o = n("49111"),
                u = n("782340"),
                d = n("615108");

            function c() {
                return (0, a.jsxs)(s.Button, {
                    innerClassName: d.qrCodeButtonContent,
                    size: s.Button.Sizes.LARGE,
                    onClick: () => {
                        (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("668170").then(n.bind(n, "668170"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        }), l.default.track(o.AnalyticEvents.FAMILY_CENTER_ACTION, {
                            action: r.FamilyCenterAction.ShowQRCodeModal
                        })
                    },
                    children: [(0, a.jsx)(i.default, {}), u.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_BUTTON]
                })
            }
        },
        698370: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 18,
                    height: n = 18,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 18 18",
                    children: [(0, a.jsx)("path", {
                        fill: l,
                        d: "M1.8 1.8V6H6V1.8H1.8Zm3 3H3V3h1.8v1.8ZM1.8 12v4.2H6V12H1.8Zm3 3H3v-1.8h1.8V15ZM12 1.8V6h4.2V1.8H12Zm3 3h-1.8V3H15v1.8ZM7.2 1.8V3h2.4v3h1.2V1.8H7.2ZM6 9.6H4.2v1.2H6V9.6Z"
                    }), (0, a.jsx)("path", {
                        fill: l,
                        d: "M7.2 4.2v3H1.8v3.6H3V8.4h5.4V4.2H7.2ZM12.417 10.75c-.92 0-1.667.748-1.667 1.667 0 .92.748 1.666 1.667 1.666s1.666-.747 1.666-1.666c0-.92-.747-1.667-1.666-1.667Z"
                    }), (0, a.jsx)("path", {
                        fill: l,
                        d: "M15.75 9.5h-.804a.834.834 0 0 1-.694-.37l-.338-.509a.834.834 0 0 0-.693-.371h-1.608a.835.835 0 0 0-.694.37l-.338.51a.833.833 0 0 1-.694.37h-.804a.833.833 0 0 0-.833.833v4.584c0 .46.373.833.833.833h6.667c.46 0 .833-.373.833-.833v-4.584a.834.834 0 0 0-.833-.833Zm-3.333 5.417a2.503 2.503 0 0 1-2.5-2.5c0-1.379 1.12-2.5 2.5-2.5 1.378 0 2.5 1.121 2.5 2.5s-1.122 2.5-2.5 2.5Z"
                    })]
                })
            }
        },
        863023: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserLinkAcceptedRequestRow: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("65597"),
                o = n("77078"),
                u = n("697218"),
                d = n("945330"),
                c = n("768815"),
                E = n("176661"),
                f = n("922832"),
                _ = n("782340"),
                I = n("850832");

            function h(e) {
                let {
                    user: t
                } = e, l = (0, r.default)([u.default], () => u.default.getCurrentUser()), h = s.useCallback(() => {
                    i(void 0 !== l, "User must be logged in to accept a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("127563").then(n.bind(n, "127563"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: l,
                            otherUser: t
                        })
                    })
                }, [l, t]);
                return (0, a.jsxs)("div", {
                    className: I.container,
                    children: [(0, a.jsx)("div", {
                        className: I.details,
                        children: (0, a.jsx)(E.default, {
                            otherUser: t,
                            status: f.UserLinkStatus.ACTIVE
                        })
                    }), (0, a.jsx)("div", {
                        className: I.actions,
                        children: (0, a.jsx)(c.default, {
                            icon: d.default,
                            className: I.actionDeny,
                            tooltip: _.default.Messages.FAMILY_CENTER_LINK_ACTION_DISCONNECT,
                            onClick: h
                        })
                    })]
                })
            }
        },
        768815: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("292346");

            function o(e) {
                let {
                    icon: t,
                    tooltip: n,
                    onClick: s,
                    className: o
                } = e, u = e => {
                    e.preventDefault(), e.stopPropagation(), s(e)
                };
                return (0, a.jsx)(i.Tooltip, {
                    text: n,
                    children: e => (0, a.jsx)(i.Clickable, {
                        ...e,
                        "aria-label": n,
                        onClick: u,
                        className: l(r.actionButton, o),
                        children: (0, a.jsx)(t, {
                            className: r.icon
                        })
                    })
                })
            }
        },
        299387: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserLinkPendingRequestRow: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("65597"),
                o = n("77078"),
                u = n("697218"),
                d = n("36694"),
                c = n("945330"),
                E = n("775032"),
                f = n("25132"),
                _ = n("768815"),
                I = n("176661"),
                h = n("922832"),
                C = n("782340"),
                T = n("850832");

            function m(e) {
                let {
                    user: t
                } = e, l = (0, E.default)(), m = (0, f.useHasMaxConnections)(), S = (0, r.default)([u.default], () => u.default.getCurrentUser()), N = s.useCallback(() => {
                    i(void 0 !== S, "User must be logged in to accept a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("815201").then(n.bind(n, "815201"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: S,
                            otherUser: t
                        })
                    })
                }, [S, t]), A = s.useCallback(() => {
                    i(void 0 !== S, "User must be logged in to decline a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("217014").then(n.bind(n, "217014"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: S,
                            otherUser: t
                        })
                    })
                }, [S, t]), p = s.useCallback(() => {
                    i(void 0 !== S, "User must be logged in to decline a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("809175").then(n.bind(n, "809175"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: S,
                            otherUser: t
                        })
                    })
                }, [S, t]);
                return (0, a.jsxs)("div", {
                    className: T.container,
                    children: [(0, a.jsx)("div", {
                        className: T.details,
                        children: (0, a.jsx)(I.default, {
                            otherUser: t,
                            status: h.UserLinkStatus.PENDING
                        })
                    }), (0, a.jsx)("div", {
                        className: T.actions,
                        children: l ? (0, a.jsx)(_.default, {
                            icon: c.default,
                            className: T.actionDeny,
                            tooltip: C.default.Messages.FAMILY_CENTER_LINK_ACTION_CANCEL,
                            onClick: p
                        }) : (0, a.jsxs)(a.Fragment, {
                            children: [m ? null : (0, a.jsx)(_.default, {
                                icon: d.default,
                                className: T.actionAccept,
                                tooltip: C.default.Messages.FAMILY_CENTER_LINK_ACTION_ACCEPT,
                                onClick: N
                            }), (0, a.jsx)(_.default, {
                                icon: c.default,
                                className: T.actionDeny,
                                tooltip: C.default.Messages.FAMILY_CENTER_LINK_ACTION_DECLINE,
                                onClick: A
                            })]
                        })
                    })]
                })
            }
        },
        176661: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("106435"),
                i = n("50885"),
                r = n("25132"),
                o = n("884706"),
                u = n("420386");
            let d = i.default.getEnableHardwareAcceleration() ? s.AnimatedAvatar : s.Avatar;

            function c(e) {
                let {
                    otherUser: t,
                    status: n
                } = e, i = (0, r.useLinkTimestampText)(t.id, n), {
                    avatarSrc: c,
                    avatarDecorationSrc: E,
                    eventHandlers: f
                } = (0, l.default)({
                    user: t,
                    size: s.AvatarSizes.SIZE_40,
                    animateOnHover: !0
                });
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        ...f,
                        children: (0, a.jsx)(d, {
                            className: u.avatar,
                            src: c,
                            avatarDecoration: E,
                            size: s.AvatarSizes.SIZE_40,
                            "aria-label": t.username
                        })
                    }), (0, a.jsxs)("div", {
                        className: u.userPreview,
                        children: [(0, a.jsx)("div", {
                            className: u.userContainerWithTimestamp,
                            children: (0, a.jsx)(o.default, {
                                user: t
                            })
                        }), (0, a.jsx)(s.Text, {
                            className: u.timestamp,
                            color: "text-muted",
                            variant: "text-xs/normal",
                            children: i
                        })]
                    })]
                })
            }
        },
        154640: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("15542"),
                o = n("458960"),
                u = n("355262"),
                d = n("401642"),
                c = n("49111"),
                E = n("721578"),
                f = e => {
                    let {
                        userId: t,
                        children: n,
                        isLast: l,
                        className: f
                    } = e, [_, I] = s.useState(!1), h = s.useCallback(() => {
                        (0, d.openUserProfileModal)({
                            userId: t,
                            analyticsLocation: {
                                section: c.AnalyticsSections.FAMILY_CENTER
                            }
                        })
                    }, [t]), C = () => {
                        I(!0)
                    }, T = () => {
                        I(!1)
                    };
                    return (0, a.jsx)(u.ListNavigatorItem, {
                        id: t,
                        children: e => (0, a.jsx)(r.FocusRing, {
                            offset: {
                                left: -8,
                                right: -8
                            },
                            children: (0, a.jsx)(o.default.div, {
                                style: {
                                    opacity: 1
                                },
                                className: i(E.rowItem, f, {
                                    [E.last]: l,
                                    [E.active]: _
                                }),
                                onMouseEnter: C,
                                onMouseLeave: T,
                                onClick: h,
                                ...e,
                                children: n(_)
                            })
                        })
                    })
                }
        },
        791878: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsClearIncomingFriendRequestsEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-05_clear_pending_incoming_friend_requests",
                label: "Enable ability to clear incoming friend requests",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "ca2288_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        59678: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RELATIONSHIP_COUNT_ANIMATION_THRESHOLD: function() {
                    return a
                },
                PEOPLE_LIST_ITEM_HEIGHT: function() {
                    return s
                },
                STATUS_HEADER_HEIGHT: function() {
                    return l
                },
                MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL: function() {
                    return i
                }
            });
            let a = 64,
                s = 62,
                l = 24,
                i = 5
        },
        371449: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a, s, l = n("37983");
            n("884691");
            var i = n("414456"),
                r = n.n(i),
                o = n("394846"),
                u = n("77078"),
                d = n("383485");

            function c(e) {
                let {
                    icon: t,
                    tooltip: n,
                    onClick: a,
                    actionType: i = s.DEFAULT,
                    shouldHighlight: c
                } = e;
                return (0, l.jsx)(u.Tooltip, {
                    text: n,
                    children: e => (0, l.jsx)(u.Clickable, {
                        ...e,
                        "aria-label": n,
                        onClick: a,
                        className: r(d.actionButton, {
                            [d.actionAccept]: i === s.ACCEPT,
                            [d.actionDeny]: i === s.DENY,
                            [d.highlight]: c,
                            [d.actionButtonMobile]: o.isMobile
                        }),
                        children: (0, l.jsx)(t, {
                            className: d.icon
                        })
                    })
                })
            }(a = s || (s = {}))[a.ACCEPT = 0] = "ACCEPT", a[a.DENY = 1] = "DENY", a[a.DEFAULT = 2] = "DEFAULT", c.ActionTypes = s;
            var E = c
        },
        161011: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("245489"),
                r = n("229929"),
                o = n("62899"),
                u = n("709410"),
                d = n("49111"),
                c = n("782340"),
                E = n("271755");

            function f() {
                return (0, a.jsxs)("header", {
                    className: E.header,
                    children: [(0, a.jsx)(l.FormTitle, {
                        tag: "h2",
                        className: E.title,
                        children: c.default.Messages.ADD_FRIEND
                    }), (0, a.jsx)(i.default, {})]
                })
            }
            var _ = function() {
                return (0, a.jsxs)(s.Fragment, {
                    children: [(0, a.jsx)(f, {}), (0, r.backToSchoolEnabled)() && (0, a.jsx)(o.default, {}), (0, a.jsx)("div", {
                        className: E.emptyState,
                        children: (0, a.jsx)(u.default, {
                            type: d.FriendsSections.ADD_FRIEND
                        })
                    })]
                })
            }
        },
        62899: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("340626"),
                r = n("393414"),
                o = n("239380"),
                u = n("305961"),
                d = n("599110"),
                c = n("315102"),
                E = n("853004"),
                f = n("49111"),
                _ = n("782340"),
                I = n("443"),
                h = n("156465");

            function C(e, t, n) {
                return (0, a.jsxs)("button", {
                    className: I.container,
                    onClick: n,
                    children: [(0, a.jsx)("img", {
                        className: I.icon,
                        alt: "",
                        src: e
                    }), (0, a.jsx)(l.Text, {
                        className: I.text,
                        variant: "text-md/medium",
                        children: t
                    }), (0, a.jsx)(E.default, {
                        className: I.arrow
                    })]
                }, t)
            }

            function T() {
                let e = Object.values(u.default.getGuilds()),
                    t = e.filter(e => e.hasFeature(f.GuildFeatures.HUB)),
                    n = e => {
                        d.default.track(f.AnalyticEvents.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED, {
                            guild_id: e
                        }), (0, o.transitionToGuild)(e)
                    };
                return (0, a.jsxs)(s.Fragment, {
                    children: [(0, a.jsx)("header", {
                        className: I.header,
                        children: (0, a.jsx)(l.FormTitle, {
                            tag: "h2",
                            className: I.title,
                            children: _.default.Messages.ADD_FRIEND_MAKE_FRIENDS
                        })
                    }), (0, a.jsxs)("div", {
                        className: I.grid,
                        children: [t.map(e => C(c.default.getGuildIconURL({
                            id: e.id,
                            icon: e.icon,
                            size: 240
                        }), e.name, () => {
                            n(e.id)
                        })), C(h, _.default.Messages.ADD_FRIEND_EXPLORE_PUBLIC_SERVERS, () => {
                            (0, i.clearSearch)(), d.default.track(f.AnalyticEvents.ADD_FRIEND_OTHER_PLACES_DISCOVERY_CLICKED), (0, r.transitionTo)(f.Routes.GUILD_DISCOVERY)
                        })]
                    })]
                })
            }
        },
        853004: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("37983");

            function s(e) {
                let {
                    color: t = "currentColor",
                    ...n
                } = e;
                return (0, a.jsx)("svg", {
                    ...n,
                    fill: "none",
                    height: "20",
                    viewBox: "0 0 20 20",
                    width: "20",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: (0, a.jsx)("path", {
                        clipRule: "evenodd",
                        d: "m5.41667 4.2625 5.66573 5.7375-5.66573 5.7375 1.74426 1.7625 7.42237-7.5-7.42237-7.5z",
                        fill: t,
                        fillRule: "evenodd"
                    })
                })
            }
            n("884691")
        },
        637824: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("736964"),
                i = n("401642"),
                r = n("152224"),
                o = n("599110"),
                u = n("371449"),
                d = n("224978"),
                c = n("559541"),
                E = n("49111"),
                f = n("782340"),
                _ = n("728221");

            function I(e) {
                let {
                    user: t,
                    key: n,
                    isFocused: I
                } = e, h = s.useContext(o.AnalyticsContext), C = e => {
                    e.stopPropagation(), l.default.unblockUser(t.id, {
                        location: "Friends"
                    })
                };
                return (0, a.jsx)(d.default, {
                    isFocused: I,
                    onClick: () => (0, i.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: h.location
                    }),
                    user: t,
                    children: e => (0, a.jsxs)("div", {
                        className: _.listItemContents,
                        children: [(0, a.jsx)(c.default, {
                            user: t,
                            hovered: e,
                            status: E.StatusTypes.UNKNOWN,
                            subText: f.default.Messages.BLOCKED
                        }), (0, a.jsx)(u.default, {
                            icon: r.default,
                            actionType: u.default.ActionTypes.DENY,
                            tooltip: f.default.Messages.UNBLOCK,
                            onClick: C,
                            shouldHighlight: e
                        })]
                    })
                }, n)
            }
        },
        911574: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("629803"),
                o = n("79112"),
                u = n("163466"),
                d = n("49111"),
                c = n("994428"),
                E = n("782340"),
                f = n("72725");

            function _(e) {
                let {
                    className: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsxs)(u.default, {
                    className: l(f.card, t),
                    children: [(0, a.jsx)(i.Heading, {
                        variant: "heading-md/semibold",
                        className: f.header,
                        children: E.default.Messages.NOW_PLAYING_GDPR_HEADER
                    }), (0, a.jsx)(i.Text, {
                        variant: "text-sm/normal",
                        children: E.default.Messages.NOW_PLAYING_GDPR_BODY.format({
                            onPrivacyClick: () => o.default.open(d.UserSettingsSections.PRIVACY_AND_SAFETY)
                        })
                    }), (0, a.jsxs)("div", {
                        className: f.buttonContainer,
                        children: [(0, a.jsx)(i.Button, {
                            size: i.Button.Sizes.SMALL,
                            onClick: () => (0, r.setConsents)([d.Consents.PERSONALIZATION], []),
                            children: E.default.Messages.ACTIVITY_FEED_CARD_GDPR_BUTTON_YES
                        }), (0, a.jsx)(i.Button, {
                            color: i.Button.Colors.PRIMARY,
                            size: i.Button.Sizes.SMALL,
                            onClick: () => n(c.ContentDismissActionType.DISMISS),
                            look: i.Button.Looks.LINK,
                            children: E.default.Messages.NO_THANKS
                        })]
                    })]
                })
            }
        },
        146378: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("450911"),
                d = n("272030"),
                c = n("736964"),
                E = n("393414"),
                f = n("42203"),
                _ = n("42887"),
                I = n("109264"),
                h = n("663745"),
                C = n("158998"),
                T = n("371449"),
                m = n("224978"),
                S = n("83916"),
                N = n("559541"),
                A = n("49111"),
                p = n("353927"),
                g = n("782340"),
                R = n("889195");

            function O(e) {
                let {
                    user: t,
                    onSelect: n
                } = e, s = () => {
                    c.default.removeFriend(t.id, {
                        location: "Friends"
                    })
                }, l = (0, r.useStateFromStores)([_.default], () => _.default.supports(p.Features.VIDEO));
                return (0, a.jsxs)(o.Menu, {
                    navId: "friend-row",
                    "aria-label": g.default.Messages.USER_ACTIONS_MENU_LABEL,
                    onClose: d.closeContextMenu,
                    onSelect: n,
                    children: [l ? (0, a.jsx)(o.MenuItem, {
                        id: "start-video-call",
                        label: g.default.Messages.START_VIDEO_CALL,
                        action: function() {
                            u.default.openPrivateChannel(t.id, !0, !0)
                        }
                    }) : null, (0, a.jsx)(o.MenuItem, {
                        id: "start-voice-call",
                        label: g.default.Messages.START_VOICE_CALL,
                        action: () => {
                            u.default.openPrivateChannel(t.id, !0)
                        }
                    }), (0, a.jsx)(o.MenuItem, {
                        id: "remove-friend",
                        label: g.default.Messages.REMOVE_FRIEND,
                        action: () => {
                            (0, o.openModal)(e => (0, a.jsx)(o.ConfirmModal, {
                                header: g.default.Messages.REMOVE_FRIEND_TITLE.format({
                                    name: C.default.getName(t)
                                }),
                                confirmText: g.default.Messages.REMOVE_FRIEND,
                                cancelText: g.default.Messages.CANCEL,
                                onConfirm: s,
                                ...e,
                                children: (0, a.jsx)(o.Text, {
                                    variant: "text-md/normal",
                                    children: g.default.Messages.REMOVE_FRIEND_BODY.format({
                                        name: C.default.getName(t)
                                    })
                                })
                            }))
                        },
                        color: "danger"
                    })]
                })
            }
            class L extends s.PureComponent {
                componentWillLeave(e) {
                    null != this.peopleListItemRef.current && this.peopleListItemRef.current.componentWillLeave(e)
                }
                componentWillEnter(e) {
                    null != this.peopleListItemRef.current && this.peopleListItemRef.current.componentWillEnter(e)
                }
                render() {
                    let {
                        user: e,
                        isFocused: t,
                        activities: n,
                        applicationStream: s,
                        status: l,
                        isMobile: i
                    } = this.props, {
                        isActiveRow: r
                    } = this.state;
                    return (0, a.jsx)(m.default, {
                        ref: this.peopleListItemRef,
                        isFocused: t,
                        isActive: r,
                        user: e,
                        onOtherHover: () => r ? null : (0, d.closeContextMenu)(),
                        onClick: this.handleOpenPrivateChannel,
                        children: t => (0, a.jsxs)("div", {
                            className: R.listItemContents,
                            children: [(0, a.jsx)(N.default, {
                                user: e,
                                status: l,
                                isMobile: i,
                                subText: (0, a.jsx)(S.default, {
                                    hovered: t,
                                    activities: n,
                                    applicationStream: s,
                                    status: l
                                }),
                                hovered: t,
                                showAccountIdentifier: !0
                            }), (0, a.jsxs)("div", {
                                className: R.actions,
                                children: [(0, a.jsx)(T.default, {
                                    icon: I.default,
                                    tooltip: g.default.Messages.SEND_DM,
                                    onClick: this.handleOpenPrivateChannel,
                                    shouldHighlight: t
                                }), (0, a.jsx)(T.default, {
                                    icon: h.default,
                                    tooltip: g.default.Messages.MORE,
                                    onClick: this.handleOpenActionsMenu,
                                    shouldHighlight: t
                                })]
                            })]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.peopleListItemRef = s.createRef(), this.state = {
                        isActiveRow: !1
                    }, this.handleOpenPrivateChannel = e => {
                        let {
                            user: t
                        } = this.props;
                        e.stopPropagation();
                        let n = i.find(f.default.getMutablePrivateChannels(), e => e.type === A.ChannelTypes.DM && e.getRecipientId() === t.id);
                        null != n ? (0, E.transitionTo)(A.Routes.CHANNEL(A.ME, n.id)) : u.default.openPrivateChannel(t.id)
                    }, this.handleOpenActionsMenu = e => {
                        let {
                            user: t
                        } = this.props;
                        (0, d.openContextMenu)(e, e => (0, a.jsx)(O, {
                            ...e,
                            user: t
                        }), {
                            onClose: () => {
                                this.setState({
                                    isActiveRow: !1
                                })
                            }
                        }), this.setState({
                            isActiveRow: !0
                        })
                    }
                }
            }
            var M = L
        },
        709410: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FriendsSearchStatus: function() {
                    return a
                },
                default: function() {
                    return C
                }
            });
            var a, s = n("37983"),
                l = n("884691"),
                i = n("458960"),
                r = n("446674"),
                o = n("77078"),
                u = n("161778"),
                d = n("941886"),
                c = n("49111"),
                E = n("782340"),
                f = n("401060");
            (a || (a = {})).SECTION_NO_RESULTS = "SECTION_NO_RESULTS";
            let _ = Object.freeze({
                    SECTION_ALL: {
                        lightSrc: n("1547"),
                        darkSrc: n("197040"),
                        width: 376,
                        height: 162,
                        renderContent: e => (0, s.jsxs)(l.Fragment, {
                            children: [(0, s.jsx)(d.default.Text, {
                                note: E.default.Messages.FRIENDS_EMPTY_STATE_ALL
                            }), (0, s.jsx)(o.Button, {
                                className: f.button,
                                onClick: e,
                                children: E.default.Messages.ADD_FRIEND
                            })]
                        })
                    },
                    SECTION_ONLINE: {
                        lightSrc: n("681224"),
                        darkSrc: n("819444"),
                        width: 421,
                        height: 218,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_ONLINE
                        })
                    },
                    SECTION_BLOCKED: {
                        lightSrc: n("289309"),
                        darkSrc: n("829361"),
                        width: 433,
                        height: 232,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_BLOCKED
                        })
                    },
                    SECTION_PENDING: {
                        lightSrc: n("934516"),
                        darkSrc: n("855143"),
                        width: 415,
                        height: 200,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_PENDING
                        })
                    },
                    SECTION_SUGGESTIONS: {
                        lightSrc: n("934516"),
                        darkSrc: n("855143"),
                        width: 415,
                        height: 200,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_SUGGESTIONS
                        })
                    },
                    SECTION_NO_RESULTS: {
                        lightSrc: n("681224"),
                        darkSrc: n("819444"),
                        width: 421,
                        height: 218,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIEND_REQUEST_NO_RESULTS_FOUND
                        })
                    }
                }),
                I = e => {
                    let {
                        theme: t
                    } = e, n = E.default.Messages.FRIENDS_EMPTY_STATE_ALL, a = _.SECTION_ALL;
                    return (0, s.jsx)(l.Fragment, {
                        children: (0, s.jsxs)(d.default, {
                            theme: t,
                            children: [(0, s.jsx)(d.default.Image, {
                                width: a.width,
                                height: a.height,
                                lightSrc: a.lightSrc,
                                darkSrc: a.darkSrc
                            }), (0, s.jsx)(d.default.Text, {
                                note: n
                            })]
                        })
                    })
                };
            class h extends l.PureComponent {
                render() {
                    let {
                        type: e,
                        onClick: t,
                        theme: n
                    } = this.props, l = {
                        opacity: this.state.opacity
                    }, r = function(e) {
                        switch (e) {
                            case c.FriendsSections.ADD_FRIEND:
                            case c.FriendsSections.ALL:
                                return _.SECTION_ALL;
                            case c.FriendsSections.ONLINE:
                                return _.SECTION_ONLINE;
                            case c.FriendsSections.PENDING:
                                return _.SECTION_PENDING;
                            case c.FriendsSections.SUGGESTIONS:
                                return _.SECTION_SUGGESTIONS;
                            case c.FriendsSections.BLOCKED:
                                return _.SECTION_BLOCKED;
                            case a.SECTION_NO_RESULTS:
                                return _.SECTION_NO_RESULTS;
                            default:
                                throw Error("FriendsEmptyState: Invalid empty state")
                        }
                    }(e);
                    return e === c.FriendsSections.ADD_FRIEND ? (0, s.jsx)(i.default.div, {
                        className: f.friendsEmpty,
                        style: l,
                        children: (0, s.jsx)(I, {
                            theme: n
                        })
                    }) : (0, s.jsx)(i.default.div, {
                        className: f.friendsEmpty,
                        style: l,
                        children: (0, s.jsxs)(d.default, {
                            theme: n,
                            children: [(0, s.jsx)(d.default.Image, {
                                width: r.width,
                                height: r.height,
                                lightSrc: r.lightSrc,
                                darkSrc: r.darkSrc
                            }), r.renderContent(t)]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        opacity: new i.default.Value(1)
                    }, this.componentWillEnter = e => {
                        this.state.opacity.setValue(0), i.default.timing(this.state.opacity, {
                            toValue: 1,
                            duration: 250
                        }).start(e)
                    }, this.componentWillLeave = e => {
                        i.default.timing(this.state.opacity, {
                            toValue: 0,
                            duration: 250
                        }).start(e)
                    }
                }
            }
            var C = r.default.connectStores([u.default], () => ({
                theme: u.default.theme
            }), {
                forwardRef: !0
            })(h)
        },
        411676: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("669491"),
                i = n("736964"),
                r = n("401642"),
                o = n("697218"),
                u = n("36694"),
                d = n("945330"),
                c = n("956089"),
                E = n("599110"),
                f = n("371449"),
                _ = n("224978"),
                I = n("559541"),
                h = n("49111"),
                C = n("782340"),
                T = n("819745");

            function m(e) {
                let {
                    user: t,
                    type: n,
                    status: m,
                    isFocused: S
                } = e, N = s.useContext(E.AnalyticsContext), A = e => {
                    e.stopPropagation(), i.default.cancelFriendRequest(t.id, {
                        location: "Friends"
                    })
                }, p = e => {
                    e.stopPropagation(), i.default.addRelationship({
                        userId: t.id,
                        context: {
                            location: "Friends"
                        }
                    })
                }, g = m === h.StatusTypes.OFFLINE ? h.StatusTypes.UNKNOWN : m, R = n === h.RelationshipTypes.PENDING_INCOMING ? C.default.Messages.INCOMING_FRIEND_REQUEST : C.default.Messages.OUTGOING_FRIEND_REQUEST;
                return (0, a.jsx)(_.default, {
                    isFocused: S,
                    user: t,
                    onClick: () => (0, r.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: N.location
                    }),
                    children: e => {
                        var s;
                        let i = n === h.RelationshipTypes.PENDING_INCOMING ? (0, a.jsxs)(a.Fragment, {
                            children: [(null === (s = o.default.getCurrentUser()) || void 0 === s ? void 0 : s.isStaff()) && (null == t ? void 0 : t.isStaff()) && (0, a.jsx)("div", {
                                className: T.staffIndicator,
                                children: (0, a.jsx)(c.TextBadge, {
                                    color: l.default.unsafe_rawColors.BRAND_500.css,
                                    text: C.default.Messages.STAFF_BADGE_TOOLTIP
                                })
                            }), (0, a.jsx)(f.default, {
                                icon: u.default,
                                actionType: f.default.ActionTypes.ACCEPT,
                                tooltip: C.default.Messages.FRIEND_REQUEST_ACCEPT,
                                onClick: p,
                                shouldHighlight: e
                            }), (0, a.jsx)(f.default, {
                                icon: d.default,
                                actionType: f.default.ActionTypes.DENY,
                                tooltip: C.default.Messages.FRIEND_REQUEST_IGNORE,
                                onClick: A,
                                shouldHighlight: e
                            })]
                        }) : (0, a.jsx)(f.default, {
                            icon: d.default,
                            actionType: f.default.ActionTypes.DENY,
                            tooltip: C.default.Messages.FRIEND_REQUEST_CANCEL,
                            onClick: A,
                            shouldHighlight: e
                        });
                        return (0, a.jsxs)("div", {
                            className: T.listItemContents,
                            children: [(0, a.jsx)(I.default, {
                                user: t,
                                hovered: e,
                                showAccountIdentifier: !0,
                                status: g,
                                subText: R,
                                className: T.userInfo
                            }), (0, a.jsx)("div", {
                                className: T.actions,
                                children: i
                            })]
                        })
                    }
                })
            }
        },
        756183: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("630086"),
                d = n("736964"),
                c = n("901582"),
                E = n("206230"),
                f = n("347272"),
                _ = n("27618"),
                I = n("545429"),
                h = n("471671"),
                C = n("810567"),
                T = n("791878"),
                m = n("637824"),
                S = n("146378"),
                N = n("709410"),
                A = n("411676"),
                p = n("86959"),
                g = n("748753"),
                R = n("144521"),
                O = n("59678"),
                L = n("49111"),
                M = n("782340"),
                v = n("112082"),
                D = function(e) {
                    let {
                        sectionFilter: t,
                        titleId: n
                    } = e, {
                        rows: l,
                        section: D
                    } = (0, r.useStateFromStoresObject)([I.default], () => I.default.getState()), x = (0, r.useStateFromStores)([h.default], () => h.default.isFocused()), P = (0, r.useStateFromStores)([_.default], () => _.default.getRelationshipCount()), y = (0, T.useIsClearIncomingFriendRequestsEnabled)(), [b, U] = s.useState(() => {
                        let e = {};
                        for (let t of Object.values(L.FriendsSections)) e[t] = "";
                        return e
                    }), G = s.useCallback(e => {
                        U({
                            ...b,
                            [t]: e
                        })
                    }, [b, t]), j = s.useCallback(() => {
                        U({
                            ...b,
                            [t]: ""
                        })
                    }, [b, t]), F = l.filter(t, b[t]);
                    if (0 === F.length && "" === b[t]) return (0, a.jsxs)("div", {
                        className: v.emptyStateContainer,
                        children: [t === L.FriendsSections.ONLINE && (0, a.jsx)(f.default, {}), (0, a.jsx)(N.default, {
                            type: t,
                            onClick: () => {
                                u.default.setSection(L.FriendsSections.ADD_FRIEND)
                            }
                        }, D)]
                    });
                    let k = 0 === F.length && "" !== b[t],
                        B = F.filter(e => e.type === L.RelationshipTypes.PENDING_INCOMING).length,
                        w = t === L.FriendsSections.PENDING && B > 0,
                        H = w && y && B >= O.MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL;
                    return (0, a.jsxs)(c.default, {
                        section: L.AnalyticsSections.FRIENDS_LIST,
                        children: [(0, a.jsx)(C.default, {
                            className: i(v.searchBar, k ? v.searchEmptyState : null),
                            query: b[t],
                            onChange: G,
                            onClear: j,
                            size: C.default.Sizes.MEDIUM
                        }), t === L.FriendsSections.ONLINE && "" === b[t] && (0, a.jsx)(f.default, {}), (0, a.jsxs)("div", {
                            className: v.sectionTitle,
                            children: [(0, a.jsx)(g.default, {
                                id: n,
                                title: function(e, t) {
                                    switch (e) {
                                        case L.FriendsSections.ONLINE:
                                            return M.default.Messages.FRIENDS_ONLINE_HEADER.format({
                                                online: t.toString()
                                            });
                                        case L.FriendsSections.PENDING:
                                            return M.default.Messages.FRIENDS_PENDING_HEADER.format({
                                                count: t.toString()
                                            });
                                        case L.FriendsSections.SUGGESTIONS:
                                            return M.default.Messages.FRIENDS_FRIEND_SUGGESTIONS_HEADER.format({
                                                count: t.toString()
                                            });
                                        case L.FriendsSections.BLOCKED:
                                            return M.default.Messages.FRIENDS_BLOCKED_HEADER.format({
                                                count: t.toString()
                                            });
                                        default:
                                            return M.default.Messages.FRIENDS_ALL_HEADER.format({
                                                count: t.toString()
                                            })
                                    }
                                }(t, F.length)
                            }), H && (0, a.jsx)(o.Button, {
                                look: o.ButtonLooks.LINK,
                                color: o.ButtonColors.LINK,
                                className: v.clearButton,
                                size: o.Button.Sizes.TINY,
                                onClick: e => {
                                    e.stopPropagation(), d.default.confirmClearPendingRelationships(B)
                                },
                                "aria-label": M.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON,
                                children: M.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON
                            })]
                        }), k ? (0, a.jsx)("div", {
                            className: v.emptyStateContainer,
                            children: (0, a.jsx)(N.default, {
                                type: N.FriendsSearchStatus.SECTION_NO_RESULTS
                            }, D)
                        }) : (0, a.jsx)(p.default, {
                            relationshipCount: P,
                            statusSections: [F],
                            renderRow: function(e) {
                                switch (t) {
                                    case L.FriendsSections.BLOCKED:
                                        return (0, a.jsx)(m.default, {
                                            ...e,
                                            isFocused: x
                                        });
                                    case L.FriendsSections.PENDING:
                                        return (0, a.jsx)(A.default, {
                                            ...e,
                                            isFocused: x
                                        });
                                    case L.FriendsSections.SUGGESTIONS:
                                        return (0, a.jsx)(R.default, {
                                            ...e,
                                            isFocused: x
                                        });
                                    case L.FriendsSections.ONLINE:
                                    case L.FriendsSections.ALL:
                                    default:
                                        return (0, a.jsx)(S.default, {
                                            ...e,
                                            isFocused: x
                                        })
                                }
                            },
                            sectionFilter: t,
                            searchQuery: b[t],
                            useReducedMotion: E.default.useReducedMotion
                        })]
                    })
                }
        },
        224978: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("458960"),
                o = n("974667"),
                u = n("77078"),
                d = n("272030"),
                c = n("59678"),
                E = n("890474");
            class f extends s.PureComponent {
                componentWillLeave(e) {
                    r.default.parallel([r.default.timing(this.state.opacity, {
                        toValue: 0,
                        duration: 200
                    }), r.default.timing(this.state.height, {
                        toValue: 0,
                        duration: 200
                    })]).start(e)
                }
                componentWillEnter(e) {
                    this.state.opacity.setValue(0), this.state.height.setValue(0), r.default.parallel([r.default.timing(this.state.opacity, {
                        toValue: 1,
                        duration: 200
                    }), r.default.timing(this.state.height, {
                        toValue: c.PEOPLE_LIST_ITEM_HEIGHT,
                        duration: 200
                    })]).start(e)
                }
                render() {
                    let {
                        height: e,
                        opacity: t,
                        hovered: n,
                        isContextMenuActive: s
                    } = this.state, {
                        children: l,
                        user: d,
                        onClick: c,
                        isActive: f
                    } = this.props;
                    return (0, a.jsx)(o.ListNavigatorItem, {
                        id: d.id,
                        children: o => (0, a.jsx)(u.FocusRing, {
                            offset: {
                                left: -8,
                                right: -8
                            },
                            children: (0, a.jsx)(r.default.div, {
                                className: i(E.peopleListItem, {
                                    [E.active]: f || s
                                }),
                                onContextMenu: e => this.handleContextMenu(e, d),
                                onMouseEnter: this.handleMouseEnter,
                                onMouseLeave: this.handleMouseLeave,
                                onClick: null != c ? c : void 0,
                                style: {
                                    height: e,
                                    opacity: t
                                },
                                ...o,
                                children: l(n || f || s)
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        height: new r.default.Value(c.PEOPLE_LIST_ITEM_HEIGHT),
                        opacity: new r.default.Value(1),
                        hovered: !1,
                        isContextMenuActive: !1
                    }, this.handleMouseEnter = () => {
                        let {
                            isFocused: e,
                            isActive: t,
                            onOtherHover: n
                        } = this.props, {
                            isContextMenuActive: a
                        } = this.state;
                        if (this.setState({
                                hovered: e
                            }), e && !t && !a) null == n || n()
                    }, this.handleMouseLeave = () => {
                        this.setState({
                            hovered: !1
                        })
                    }, this.handleContextMenu = (e, t) => {
                        this.setState({
                            isContextMenuActive: !0
                        }), (0, d.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: () => {
                                this.setState({
                                    isContextMenuActive: !1
                                })
                            }
                        })
                    }
                }
            }
            var _ = f
        },
        86959: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("204597"),
                l = n("904945"),
                i = n("59678");

            function r(e) {
                let {
                    relationshipCount: t,
                    statusSections: n,
                    renderRow: r,
                    searchQuery: o,
                    sectionFilter: u,
                    useReducedMotion: d
                } = e;
                return t >= i.RELATIONSHIP_COUNT_ANIMATION_THRESHOLD ? (0, a.jsx)(s.default, {
                    statusSections: n,
                    renderRow: r,
                    searchQuery: o
                }) : (0, a.jsx)(l.default, {
                    statusSections: n,
                    renderRow: r,
                    sectionFilter: u,
                    searchQuery: o,
                    useReducedMotion: d
                })
            }
        },
        204597: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("974667"),
                i = n("446674"),
                r = n("77078"),
                o = n("206230"),
                u = n("59678"),
                d = n("112082"),
                c = function(e) {
                    let {
                        statusSections: t,
                        renderRow: n,
                        searchQuery: c
                    } = e, E = e => {
                        let n = t[e];
                        return 0 === n.length ? 0 : u.STATUS_HEADER_HEIGHT + 16
                    }, f = e => {
                        let {
                            section: a,
                            row: s
                        } = e, l = t[a];
                        if (null == l || null == s) return null;
                        let i = l[s];
                        return null == i ? null : n(i)
                    }, _ = (0, i.useStateFromStores)([o.default], () => o.default.keyboardModeEnabled), I = s.useRef(null), h = s.useCallback(() => new Promise(e => {
                        let t = I.current;
                        if (null == t) return e();
                        t.scrollToTop({
                            callback: () => requestAnimationFrame(() => e())
                        })
                    }), []), C = s.useCallback(() => new Promise(e => {
                        let t = I.current;
                        if (null == t) return e();
                        t.scrollToBottom({
                            callback: () => requestAnimationFrame(() => e())
                        })
                    }), []), T = s.useCallback(e => {
                        let t = document.querySelector(e),
                            n = I.current;
                        null != t && null != n && n.scrollIntoViewNode({
                            node: t,
                            padding: 8,
                            callback: () => null == t ? void 0 : t.focus()
                        })
                    }, []), m = (0, l.default)({
                        id: "people-list",
                        isEnabled: _,
                        scrollToStart: h,
                        scrollToEnd: C,
                        setFocus: T
                    });
                    return (0, a.jsx)(l.ListNavigatorProvider, {
                        navigator: m,
                        children: (0, a.jsx)(l.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: n,
                                    ...s
                                } = e;
                                return (0, a.jsx)(r.ListAuto, {
                                    ref: e => {
                                        var t;
                                        I.current = e, n.current = null !== (t = null == e ? void 0 : e.getScrollerNode()) && void 0 !== t ? t : null
                                    },
                                    sectionHeight: E,
                                    renderRow: f,
                                    rowHeight: u.PEOPLE_LIST_ITEM_HEIGHT,
                                    sections: t.map(e => "" !== c && 0 === e.length ? e.length + 1 : e.length),
                                    className: d.peopleList,
                                    ...s
                                })
                            }
                        })
                    })
                }
        },
        904945: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("974667"),
                l = n("446674"),
                i = n("266491"),
                r = n("77078"),
                o = n("206230"),
                u = n("49111"),
                d = n("112082"),
                c = function(e) {
                    let {
                        statusSections: t,
                        renderRow: n,
                        searchQuery: c,
                        sectionFilter: E,
                        useReducedMotion: f
                    } = e, _ = (0, l.useStateFromStores)([o.default], () => o.default.keyboardModeEnabled), I = (0, s.default)({
                        id: "people",
                        isEnabled: _,
                        async scrollToStart() {},
                        async scrollToEnd() {}
                    }), h = E !== u.FriendsSections.ONLINE && E !== u.FriendsSections.ALL, C = f || "" !== c || h, T = t.map((e, t) => C ? (0, a.jsx)("div", {
                        children: e.map(n)
                    }, t) : (0, a.jsx)(i.default, {
                        transitionAppear: !1,
                        component: "div",
                        children: e.map(n)
                    }, t));
                    return (0, a.jsx)(s.ListNavigatorProvider, {
                        navigator: I,
                        children: (0, a.jsx)(s.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: t,
                                    ...n
                                } = e;
                                return (0, a.jsx)(r.ScrollerAuto, {
                                    ref: t,
                                    className: d.peopleList,
                                    ...n,
                                    children: T
                                })
                            }
                        })
                    })
                }
        },
        747223: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("90915"),
                o = n("394846"),
                u = n("446674"),
                d = n("77078"),
                c = n("913144"),
                E = n("939488"),
                f = n("630086"),
                _ = n("69927"),
                I = n("449004"),
                h = n("539938"),
                C = n("718091"),
                T = n("265412"),
                m = n("970366"),
                S = n("161778"),
                N = n("545429"),
                A = n("476765"),
                p = n("564875"),
                g = n("956089"),
                R = n("439932"),
                O = n("161011"),
                L = n("756183"),
                M = n("49111"),
                v = n("586391"),
                D = n("782340"),
                x = n("905360");

            function P() {
                return (0, a.jsxs)("div", {
                    className: x.inviteToolbar,
                    children: [(0, a.jsx)(C.default, {
                        tooltip: D.default.Messages.NEW_GROUP_DM
                    }), (0, a.jsx)(h.default.Divider, {})]
                })
            }
            var y = function(e) {
                let {
                    initialSection: t
                } = e, n = (0, r.useLocation)(), l = (0, r.useHistory)();
                s.useEffect(() => {
                    let e = "true" === new URLSearchParams(n.search).get("confirm-age");
                    e && c.default.dispatch({
                        type: "AGE_GATE_MODAL_OPEN",
                        source: v.AgeGateSource.DEEP_LINK_PROMPT
                    }).then(() => {
                        l.replace(M.Routes.ME)
                    })
                }, [l, n]), s.useEffect(() => {
                    E.setHomeLink(M.Routes.FRIENDS), (0, m.trackAppUIViewed)("friends")
                }), s.useEffect(() => {
                    null != t && f.default.setInitialSection(t)
                }, [t]);
                let C = (0, u.useStateFromStores)([S.default], () => S.default.theme),
                    {
                        section: y,
                        pendingCount: b
                    } = (0, u.useStateFromStoresObject)([N.default], () => N.default.getState()),
                    U = (0, u.useStateFromStoresObject)([I.default], () => I.default.getSuggestionCount()),
                    G = (0, A.useUID)(),
                    j = (0, A.useUID)();
                return (0, a.jsxs)("main", {
                    className: x.container,
                    "aria-label": D.default.Messages.FRIENDS,
                    children: [(0, a.jsx)(_.AppPageTitle, {
                        location: D.default.Messages.FRIENDS
                    }), (0, a.jsxs)(h.default, {
                        className: (0, R.getThemeClass)(C),
                        toolbar: (0, a.jsx)(P, {}),
                        scrollable: o.isMobile,
                        role: "navigation",
                        "aria-labelledby": G,
                        children: [(0, a.jsx)(h.default.Icon, {
                            icon: p.default,
                            "aria-hidden": !0
                        }), (0, a.jsx)(h.default.Title, {
                            id: G,
                            children: D.default.Messages.FRIENDS
                        }), (0, a.jsx)(h.default.Divider, {}), (0, a.jsxs)(d.TabBar, {
                            "aria-label": D.default.Messages.FRIENDS,
                            selectedItem: y,
                            type: "top-pill",
                            onItemSelect: e => {
                                f.default.setSection(e)
                            },
                            className: x.tabBar,
                            children: [(0, a.jsx)(d.TabBar.Item, {
                                id: M.FriendsSections.ONLINE,
                                className: x.item,
                                children: D.default.Messages.FRIENDS_SECTION_ONLINE
                            }), (0, a.jsx)(d.TabBar.Item, {
                                id: M.FriendsSections.ALL,
                                className: x.item,
                                children: D.default.Messages.FRIENDS_SECTION_ALL
                            }), (0, a.jsxs)(d.TabBar.Item, {
                                id: M.FriendsSections.PENDING,
                                className: x.item,
                                "aria-label": D.default.Messages.FRIENDS_SECTION_PENDING,
                                children: [D.default.Messages.FRIENDS_SECTION_PENDING, b > 0 ? (0, a.jsx)(g.NumberBadge, {
                                    count: b,
                                    className: x.badge,
                                    style: {
                                        paddingRight: 0
                                    }
                                }) : null]
                            }), U > 0 ? (0, a.jsxs)(d.TabBar.Item, {
                                id: M.FriendsSections.SUGGESTIONS,
                                className: x.item,
                                "aria-label": D.default.Messages.FRIENDS_SECTION_SUGGESTIONS,
                                children: [D.default.Messages.FRIENDS_SECTION_SUGGESTIONS, (0, a.jsx)(g.NumberBadge, {
                                    count: U,
                                    className: x.badge,
                                    style: {
                                        paddingRight: 0
                                    }
                                })]
                            }) : null, (0, a.jsx)(d.TabBar.Item, {
                                id: M.FriendsSections.BLOCKED,
                                className: x.item,
                                children: D.default.Messages.BLOCKED
                            }), (0, a.jsx)(d.TabBar.Item, {
                                "aria-label": D.default.Messages.FRIENDS_SECTION_ADD_FRIEND,
                                className: i(x.item, x.addFriend),
                                id: M.FriendsSections.ADD_FRIEND,
                                children: (0, a.jsx)("span", {
                                    children: D.default.Messages.FRIENDS_SECTION_ADD_FRIEND
                                })
                            })]
                        })]
                    }), (0, a.jsxs)("div", {
                        className: x.tabBody,
                        children: [(0, a.jsx)(d.TabBar.Panel, {
                            id: y,
                            className: x.peopleColumn,
                            "aria-labelledby": j,
                            children: y === M.FriendsSections.ADD_FRIEND ? (0, a.jsx)(O.default, {}) : (0, a.jsx)(L.default, {
                                titleId: j,
                                sectionFilter: y
                            })
                        }), (0, a.jsx)("div", {
                            className: x.nowPlayingColumn,
                            children: (0, a.jsx)(T.default, {})
                        })]
                    })]
                })
            }
        },
        748753: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("826684"),
                l = n("463431");

            function i(e) {
                let {
                    title: t,
                    id: n
                } = e;
                return (0, a.jsx)(s.default, {
                    className: l.title,
                    id: n,
                    children: t
                })
            }
        },
        83916: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("943722"),
                l = n("158998"),
                i = n("848179"),
                r = function(e) {
                    let {
                        hovered: t,
                        activities: n,
                        applicationStream: r,
                        status: o
                    } = e;
                    return n.length > 0 ? (0, a.jsx)(s.default, {
                        className: i.activity,
                        textClassName: i.text,
                        emojiClassName: i.customStatusEmoji,
                        activities: n,
                        applicationStream: r,
                        animate: t
                    }) : (0, a.jsx)("div", {
                        className: i.text,
                        children: (0, l.humanizeStatus)(o)
                    })
                }
        },
        144521: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("736964"),
                i = n("390790"),
                r = n("401642"),
                o = n("36694"),
                u = n("945330"),
                d = n("599110"),
                c = n("371449"),
                E = n("224978"),
                f = n("559541"),
                _ = n("49111"),
                I = n("782340"),
                h = n("858401");

            function C(e) {
                let {
                    user: t,
                    nickname: n,
                    status: C,
                    isFocused: T
                } = e, m = s.useContext(d.AnalyticsContext), S = e => {
                    null == e || e.stopPropagation(), l.default.addRelationship({
                        userId: t.id,
                        context: {
                            location: "Friends"
                        },
                        type: void 0,
                        friendToken: void 0,
                        fromFriendSuggestion: !0
                    })
                }, N = e => {
                    null == e || e.stopPropagation(), i.default.ignore(t.id)
                }, A = C === _.StatusTypes.OFFLINE ? _.StatusTypes.UNKNOWN : C;
                return (0, a.jsx)(E.default, {
                    isFocused: T,
                    user: t,
                    onClick: () => (0, r.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: m.location
                    }),
                    children: e => {
                        let s = (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(c.default, {
                                icon: o.default,
                                actionType: c.default.ActionTypes.ACCEPT,
                                tooltip: I.default.Messages.FRIEND_REQUEST_ACCEPT,
                                onClick: S,
                                shouldHighlight: e
                            }), (0, a.jsx)(c.default, {
                                icon: u.default,
                                actionType: c.default.ActionTypes.DENY,
                                tooltip: I.default.Messages.FRIEND_REQUEST_IGNORE,
                                onClick: N,
                                shouldHighlight: e
                            })]
                        });
                        return (0, a.jsxs)("div", {
                            className: h.listItemContents,
                            children: [(0, a.jsx)(f.default, {
                                user: t,
                                hovered: e,
                                status: A,
                                subText: n,
                                className: h.userInfo
                            }), (0, a.jsx)("div", {
                                className: h.actions,
                                children: s
                            })]
                        })
                    }
                })
            }
        },
        559541: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("446674"),
                r = n("145079"),
                o = n("87657"),
                u = n("27618"),
                d = n("515026"),
                c = function(e) {
                    let {
                        user: t,
                        hovered: n,
                        subText: s,
                        showAccountIdentifier: c,
                        status: E,
                        isMobile: f,
                        className: _
                    } = e, I = (0, i.useStateFromStores)([u.default], () => u.default.getNickname(t.id));
                    return (0, a.jsxs)("div", {
                        className: l(d.userInfo, _, {
                            [d.hovered]: n
                        }),
                        children: [(0, a.jsx)(o.default, {
                            user: t,
                            className: d.avatar,
                            animate: n,
                            status: E,
                            isMobile: f
                        }), (0, a.jsxs)("div", {
                            className: d.text,
                            children: [(0, a.jsx)(r.default, {
                                user: t,
                                nick: I,
                                botClass: d.botTag,
                                className: l(d.discordTag, {
                                    [d.alignPomelo]: t.isPomelo()
                                }),
                                usernameClass: d.username,
                                discriminatorClass: d.discriminator,
                                showAccountIdentifier: c
                            }), (0, a.jsx)("div", {
                                className: d.subtext,
                                children: s
                            })]
                        })]
                    })
                }
        },
        356702: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                unlockAchievement: function() {
                    return u
                },
                showAchievementToast: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("106413"),
                r = n("745690"),
                o = n("782340");

            function u(e) {
                l.default.dispatch({
                    type: "POGGERMODE_ACHIEVEMENT_UNLOCK",
                    achievementId: e
                })
            }

            function d(e, t) {
                let n = (0, i.getPoggermodeAchievementData)(e);
                null != n && (0, s.showToast)((0, s.createToast)(o.default.Messages.POGGERMODE_ACHIEVEMENTS, s.ToastType.CUSTOM, {
                    position: s.ToastPosition.BOTTOM,
                    component: (0, a.jsx)(r.default, {
                        achievement: n,
                        unlocked: t
                    }),
                    duration: 6e3
                }))
            }
        },
        429464: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("271938"),
                i = n("356702"),
                r = n("880731"),
                o = n("943551");
            let u = {
                    unlockedAchievements: {}
                },
                d = {
                    ...u
                };
            class c extends a.default.PersistedStore {
                initialize(e) {
                    this.waitFor(l.default, o.default);
                    let t = null != e ? e : {
                        ...u
                    };
                    for (let e in t) d[e] = t[e]
                }
                getState() {
                    return d
                }
                getAllUnlockedAchievements() {
                    return d.unlockedAchievements
                }
                getUnlocked(e) {
                    var t;
                    return null !== (t = d.unlockedAchievements[e]) && void 0 !== t ? t : null
                }
            }
            c.displayName = "PoggermodeAchievementStore", c.persistKey = "PoggermodeAchievementStore";
            var E = new c(s.default, {
                POGGERMODE_ACHIEVEMENT_UNLOCK: function(e) {
                    var t;
                    let {
                        achievementId: n
                    } = e;
                    if (!r.default.isEnabled()) return !1;
                    t = n, null != d.unlockedAchievements[t] || (d.unlockedAchievements = {
                        ...d.unlockedAchievements,
                        [t]: {
                            achievementId: t,
                            dateUnlocked: Date.now()
                        }
                    }, setTimeout(() => {
                        (0, i.showAchievementToast)(t, !0)
                    }, 2e3))
                }
            })
        },
        106413: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PoggermodeAchievementId: function() {
                    return l
                },
                PoggermodeAchievementRarity: function() {
                    return i
                },
                ACHIEVEMENT_LIST: function() {
                    return u
                },
                getPoggermodeAchievementData: function() {
                    return d
                },
                getAchievementStyles: function() {
                    return c
                }
            });
            var a, s, l, i, r = n("119035"),
                o = n("782340");
            (a = l || (l = {}))[a.ENABLE_POGGERMODE = 0] = "ENABLE_POGGERMODE", a[a.DISABLE_POGGERMODE = 1] = "DISABLE_POGGERMODE", a[a.PING_SOMEONE = 2] = "PING_SOMEONE", a[a.PING_ME = 3] = "PING_ME", a[a.COMBO_MULTI_LEVEL_1 = 4] = "COMBO_MULTI_LEVEL_1", a[a.COMBO_MULTI_LEVEL_2 = 5] = "COMBO_MULTI_LEVEL_2", a[a.COMBO_MULTI_LEVEL_3 = 6] = "COMBO_MULTI_LEVEL_3", a[a.COMBO_MULTI_LEVEL_4 = 7] = "COMBO_MULTI_LEVEL_4", a[a.TOTAL_SCORE_LEVEL_1 = 8] = "TOTAL_SCORE_LEVEL_1", a[a.TOTAL_SCORE_LEVEL_2 = 9] = "TOTAL_SCORE_LEVEL_2", a[a.TOTAL_SCORE_LEVEL_3 = 10] = "TOTAL_SCORE_LEVEL_3", a[a.TOTAL_SCORE_LEVEL_4 = 11] = "TOTAL_SCORE_LEVEL_4", a[a.TOTAL_SCORE_LEVEL_5 = 12] = "TOTAL_SCORE_LEVEL_5", a[a.VISITOR_100 = 13] = "VISITOR_100", a[a.CUSTOMIZE_CONFETTI = 14] = "CUSTOMIZE_CONFETTI", a[a.MORE = 15] = "MORE", a[a.COMBO_VALUE_LEVEL_1 = 16] = "COMBO_VALUE_LEVEL_1", a[a.COMBO_VALUE_LEVEL_2 = 17] = "COMBO_VALUE_LEVEL_2", a[a.COMBO_VALUE_LEVEL_3 = 18] = "COMBO_VALUE_LEVEL_3", a[a.COMBO_VALUE_LEVEL_4 = 19] = "COMBO_VALUE_LEVEL_4", (s = i || (i = {}))[s.COMMON = 0] = "COMMON", s[s.UNCOMMON = 1] = "UNCOMMON", s[s.RARE = 2] = "RARE", s[s.EPIC = 3] = "EPIC", s[s.LEGENDARY = 4] = "LEGENDARY";
            let u = {
                [l.ENABLE_POGGERMODE]: {
                    id: l.ENABLE_POGGERMODE,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_ENABLE_POGGERMODE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_ENABLE_POGGERMODE_DESCRIPTION,
                    rarity: i.COMMON,
                    hideDescriptionUntilUnlock: !1
                },
                [l.DISABLE_POGGERMODE]: {
                    id: l.DISABLE_POGGERMODE,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_DISABLE_POGGERMODE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_DISABLE_POGGERMODE_DESCRIPTION,
                    rarity: i.UNCOMMON,
                    hideDescriptionUntilUnlock: !1
                },
                [l.VISITOR_100]: {
                    id: l.VISITOR_100,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_VISITOR_100_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_VISITOR_100_DESCRIPTION,
                    rarity: i.LEGENDARY,
                    hideDescriptionUntilUnlock: !0,
                    onAction: () => {
                        window.open("https://www.youtube.com/watch?v=dQw4w9WgXcQ", "_blank")
                    }
                },
                [l.CUSTOMIZE_CONFETTI]: {
                    id: l.CUSTOMIZE_CONFETTI,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_CUSTOMIZE_CONFETTI_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_CUSTOMIZE_CONFETTI_DESCRIPTION,
                    rarity: i.COMMON,
                    hideDescriptionUntilUnlock: !1
                },
                [l.MORE]: {
                    id: l.MORE,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_MORE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_MORE_DESCRIPTION,
                    rarity: i.UNCOMMON,
                    hideDescriptionUntilUnlock: !1
                },
                [l.PING_SOMEONE]: {
                    id: l.PING_SOMEONE,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_SOMEONE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_SOMEONE_DESCRIPTION,
                    rarity: i.COMMON,
                    hideDescriptionUntilUnlock: !1
                },
                [l.PING_ME]: {
                    id: l.PING_ME,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_ME_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_ME_DESCRIPTION,
                    rarity: i.UNCOMMON,
                    hideDescriptionUntilUnlock: !1
                },
                [l.COMBO_MULTI_LEVEL_1]: {
                    id: l.COMBO_MULTI_LEVEL_1,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_1_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_1_DESCRIPTION,
                    rarity: i.COMMON,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 2
                },
                [l.COMBO_MULTI_LEVEL_2]: {
                    id: l.COMBO_MULTI_LEVEL_2,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_2_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_2_DESCRIPTION,
                    rarity: i.UNCOMMON,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 4
                },
                [l.COMBO_MULTI_LEVEL_3]: {
                    id: l.COMBO_MULTI_LEVEL_3,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_3_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_3_DESCRIPTION,
                    rarity: i.RARE,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 5
                },
                [l.COMBO_MULTI_LEVEL_4]: {
                    id: l.COMBO_MULTI_LEVEL_4,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_4_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_4_DESCRIPTION,
                    rarity: i.RARE,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 7
                },
                [l.TOTAL_SCORE_LEVEL_1]: {
                    id: l.TOTAL_SCORE_LEVEL_1,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_1_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_1_DESCRIPTION,
                    rarity: i.EPIC,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 430 === (0, r.getComboScore)(e)
                },
                [l.TOTAL_SCORE_LEVEL_2]: {
                    id: l.TOTAL_SCORE_LEVEL_2,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_2_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_2_DESCRIPTION,
                    rarity: i.EPIC,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 555 === (0, r.getComboScore)(e)
                },
                [l.TOTAL_SCORE_LEVEL_3]: {
                    id: l.TOTAL_SCORE_LEVEL_3,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_3_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_3_DESCRIPTION,
                    rarity: i.EPIC,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 898 === (0, r.getComboScore)(e)
                },
                [l.TOTAL_SCORE_LEVEL_4]: {
                    id: l.TOTAL_SCORE_LEVEL_4,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_4_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_4_DESCRIPTION,
                    rarity: i.LEGENDARY,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 1337 === (0, r.getComboScore)(e)
                },
                [l.TOTAL_SCORE_LEVEL_5]: {
                    id: l.TOTAL_SCORE_LEVEL_5,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_5_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_5_DESCRIPTION,
                    rarity: i.LEGENDARY,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 2048 === (0, r.getComboScore)(e)
                },
                [l.COMBO_VALUE_LEVEL_1]: {
                    id: l.COMBO_VALUE_LEVEL_1,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_1_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_1_DESCRIPTION,
                    rarity: i.RARE,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 64 === e.value
                },
                [l.COMBO_VALUE_LEVEL_2]: {
                    id: l.COMBO_VALUE_LEVEL_2,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_2_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_2_DESCRIPTION,
                    rarity: i.EPIC,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 88 === e.value
                },
                [l.COMBO_VALUE_LEVEL_3]: {
                    id: l.COMBO_VALUE_LEVEL_3,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_3_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_3_DESCRIPTION,
                    rarity: i.EPIC,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 99 === e.value
                },
                [l.COMBO_VALUE_LEVEL_4]: {
                    id: l.COMBO_VALUE_LEVEL_4,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_4_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_4_DESCRIPTION,
                    rarity: i.LEGENDARY,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 113 === e.value
                }
            };

            function d(e) {
                return u[e]
            }
            let c = e => {
                switch (e) {
                    case i.COMMON:
                        return {
                            color: "#1ABC9C"
                        };
                    case i.UNCOMMON:
                        return {
                            color: "#3498DB"
                        };
                    case i.RARE:
                        return {
                            color: "#9B59B6"
                        };
                    case i.EPIC:
                        return {
                            color: "#E91E63"
                        };
                    case i.LEGENDARY:
                        return {
                            color: "#E67E22"
                        }
                }
            }
        },
        880185: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("913144"),
                s = n("316272"),
                l = n("271938"),
                i = n("356702"),
                r = n("429464"),
                o = n("106413"),
                u = n("880731"),
                d = n("943551");
            let c = new Set;
            class E extends s.default {
                _initialize() {
                    a.default.subscribe("MESSAGE_CREATE", this.handleMessageCreate), a.default.subscribe("POGGERMODE_SETTINGS_UPDATE", this.handleSettingsUpdate)
                }
                _terminate() {
                    a.default.unsubscribe("MESSAGE_CREATE", this.handleMessageCreate), a.default.unsubscribe("POGGERMODE_SETTINGS_UPDATE", this.handleSettingsUpdate)
                }
                constructor(...e) {
                    super(...e), this.handleSettingsUpdate = e => {
                        let {
                            settings: t
                        } = e;
                        t.enabled ? (0, i.unlockAchievement)(o.PoggermodeAchievementId.ENABLE_POGGERMODE) : !1 === t.enabled && (0, i.unlockAchievement)(o.PoggermodeAchievementId.DISABLE_POGGERMODE);
                        let n = Object.keys(t).some(e => e.startsWith("confetti"));
                        n && (0, i.unlockAchievement)(o.PoggermodeAchievementId.CUSTOMIZE_CONFETTI)
                    }, this.handleMessageCreate = e => {
                        var t;
                        let {
                            channelId: n,
                            message: {
                                author: a,
                                nonce: s,
                                mentions: E
                            }
                        } = e;
                        if (!u.default.isEnabled()) return !1;
                        let f = l.default.getId();
                        if ((null == E ? void 0 : E.find(e => e.id === f)) != null ? (0, i.unlockAchievement)(o.PoggermodeAchievementId.PING_ME) : (null !== (t = null == E ? void 0 : E.length) && void 0 !== t ? t : 0) > 0 && (null == a ? void 0 : a.id) === f && (0, i.unlockAchievement)(o.PoggermodeAchievementId.PING_SOMEONE), !(0, d.shouldTrackMessage)(null == a ? void 0 : a.id, f, s, c)) return !1;
                        let _ = d.default.getMostRecentMessageCombo(n),
                            {
                                combo: I
                            } = null != _ ? _ : {};
                        if (null == I) return !1;
                        Object.values(o.PoggermodeAchievementId).forEach(e => {
                            if (null != r.default.getUnlocked(e)) return;
                            let t = (0, o.getPoggermodeAchievementData)(e),
                                n = null == t ? void 0 : t.checkUnlock;
                            if (null != n) !1 !== n(I) && (0, i.unlockAchievement)(e)
                        })
                    }
                }
            }
            var f = new E
        },
        624043: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            });
            var a = n("913144"),
                s = n("316272"),
                l = n("870696"),
                i = n("271938"),
                r = n("945956"),
                o = n("18494"),
                u = n("191542"),
                d = n("709681"),
                c = n("880731"),
                E = n("943551"),
                f = n("49111");
            let _ = (0, d.createSoundForPack)("poggermode_applause", l.default.getSoundpack()),
                I = !1,
                h = !1,
                C = [],
                T = null,
                m = () => {
                    !I && (_.loop(), I = !0)
                },
                S = () => {
                    _.stop(), I = !1
                },
                N = () => {
                    let e = c.default.isEnabled(),
                        t = c.default.comboSoundsEnabled;
                    if (!e || !t) return !1;
                    let n = o.default.getChannelId();
                    return null != n && !0
                },
                A = () => {
                    if (0 === C.length || !N() || h) return;
                    h = !0;
                    let [e, t] = C[C.length - 1];
                    (0, d.playSound)(e, t), T = setTimeout(p, 1e3)
                },
                p = () => {
                    C.pop(), h = !1, A()
                },
                g = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        n = r.default.isConnected();
                    C.push([e, t * (n ? .1 : 1)]), A()
                };
            class R extends s.default {
                _initialize() {
                    E.default.addChangeListener(this.startAudio), a.default.subscribe("RTC_CONNECTION_STATE", this.setVolume), a.default.subscribe("TYPING_STOP", this.stopAudio), a.default.subscribe("TYPING_STOP_LOCAL", this.stopAudio), a.default.subscribe("CHANNEL_SELECT", this.stopAudio), a.default.subscribe("POGGERMODE_SETTINGS_UPDATE", this.stopAudio)
                }
                _terminate() {
                    E.default.removeChangeListener(this.startAudio), a.default.unsubscribe("RTC_CONNECTION_STATE", this.setVolume), a.default.unsubscribe("TYPING_STOP", this.stopAudio), a.default.unsubscribe("TYPING_STOP_LOCAL", this.stopAudio), a.default.unsubscribe("CHANNEL_SELECT", this.stopAudio), a.default.unsubscribe("POGGERMODE_SETTINGS_UPDATE", this.stopAudio), clearTimeout(T)
                }
                setVolume(e) {
                    let {
                        state: t
                    } = e;
                    t === f.RTCConnectionStates.RTC_CONNECTED ? _.volume = .1 : _.volume = 1
                }
                handleTypingStop(e) {
                    let {
                        userId: t
                    } = e, n = i.default.getId();
                    n === t && S()
                }
                stopAudio() {
                    S()
                }
                startAudio() {
                    var e;
                    if (!N()) return;
                    let t = o.default.getChannelId();
                    if (null == t) return;
                    let n = i.default.getId(),
                        a = u.default.isTyping(t, n),
                        s = E.default.getUserCombo(n, t),
                        l = null !== (e = null == s ? void 0 : s.multiplier) && void 0 !== e ? e : 1;
                    a && l >= 7 ? m() : S()
                }
                playAchievementUnlockSound() {
                    N() && g("poggermode_achievement_unlock")
                }
            }
            var O = new R
        },
        745690: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("106413"),
                u = n("624043"),
                d = n("408792"),
                c = n("492532");
            let E = e => {
                let {
                    color: t
                } = e;
                return (0, a.jsxs)("svg", {
                    width: "48",
                    height: "28",
                    viewBox: "0 0 55 34",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: [(0, a.jsx)("rect", {
                        x: "10.1968",
                        y: "7",
                        width: "14.4203",
                        height: "14.4203",
                        transform: "rotate(45 10.1968 7)",
                        className: c.toastBG
                    }), (0, a.jsx)("rect", {
                        x: "27.3936",
                        y: "0.59021",
                        width: "23.4851",
                        height: "23.4851",
                        transform: "rotate(45 27.3936 0.59021)",
                        className: c.toastBG
                    }), (0, a.jsx)("rect", {
                        x: "44.5903",
                        y: "7",
                        width: "14.4203",
                        height: "14.4203",
                        transform: "rotate(45 44.5903 7)",
                        className: c.toastBG
                    }), (0, a.jsx)("rect", {
                        x: "10.1968",
                        y: "13",
                        width: "6",
                        height: "6",
                        transform: "rotate(45 10.1968 13)",
                        fill: t
                    }), (0, a.jsx)("path", {
                        d: "M27.3936 4.39355L34.1233 16.2873L27.3936 28.1811L20.6638 16.2873L27.3936 4.39355Z",
                        fill: t
                    }), (0, a.jsx)("rect", {
                        x: "44.5903",
                        y: "13",
                        width: "6",
                        height: "6",
                        transform: "rotate(45 44.5903 13)",
                        fill: t
                    })]
                })
            };

            function f(e) {
                let {
                    achievement: t,
                    unlocked: n
                } = e, {
                    name: l,
                    description: f,
                    rarity: _,
                    hideDescriptionUntilUnlock: I,
                    onAction: h
                } = t, {
                    color: C
                } = (0, o.getAchievementStyles)(_);
                s.useEffect(() => {
                    let e = setTimeout(() => {
                        u.default.playAchievementUnlockSound()
                    }, 50);
                    return () => {
                        clearTimeout(e)
                    }
                }, []);
                let T = null != h && n,
                    m = T ? r.Clickable : "div";
                return (0, a.jsxs)(m, {
                    className: i(c.container, T && c.actionable),
                    onClick: () => {
                        T && h()
                    },
                    children: [(0, a.jsx)("div", {
                        className: c.iconContainer,
                        children: (0, a.jsx)(d.default, {
                            achievementId: t.id,
                            size: d.default.Sizes.SIZE_40,
                            unlocked: n
                        })
                    }), (0, a.jsxs)("div", {
                        className: c.nameContainer,
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-md/semibold",
                            color: "header-primary",
                            children: l()
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-xs/medium",
                            color: "header-secondary",
                            children: I && !n ? "?????" : f()
                        })]
                    }), (0, a.jsx)("div", {
                        className: c.flair,
                        children: (0, a.jsx)(E, {
                            color: C
                        })
                    })]
                })
            }
        },
        408792: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("819855"),
                l = n("77078"),
                i = n("841098"),
                r = n("449918"),
                o = n("451166"),
                u = n("45029"),
                d = n("300113"),
                c = n("106413"),
                E = n("843455"),
                f = n("406307");
            let _ = {
                    trophy: E.Color.PRIMARY_400,
                    locked: E.Color.PRIMARY_400,
                    unlocked: E.Color.GREEN_330
                },
                I = {
                    trophy: E.Color.PRIMARY_400,
                    locked: E.Color.PRIMARY_400,
                    unlocked: E.Color.GREEN_330
                };

            function h(e) {
                var t;
                let {
                    achievementId: n,
                    unlocked: E,
                    size: h = l.AvatarSizes.SIZE_40
                } = e, C = (0, i.default)(), T = (0, c.getPoggermodeAchievementData)(n);
                if (null == T) return null;
                let m = (0, l.getAvatarSpecs)(h),
                    {
                        name: S,
                        rarity: N
                    } = T,
                    {
                        color: A
                    } = (0, c.getAchievementStyles)(N),
                    p = (0, s.isThemeDark)(C) ? _ : I,
                    g = (m.size - m.offset - 2 * m.stroke) * .8,
                    R = m.size - m.stroke,
                    O = {
                        width: .4 * g,
                        height: .4 * g
                    },
                    L = {
                        width: O.width + 1,
                        height: O.height + 1,
                        right: m.stroke + 1,
                        bottom: m.stroke + 1,
                        padding: 0
                    };
                return (0, a.jsxs)("div", {
                    className: f.container,
                    style: {
                        width: R,
                        height: R,
                        padding: m.stroke
                    },
                    "aria-label": "".concat(null !== (t = S()) && void 0 !== t ? t : ""),
                    children: [(0, a.jsx)("div", {
                        className: f.trophyIconContainer,
                        children: (0, a.jsx)(d.default, {
                            color: E ? A : (0, r.getColor)(p.trophy),
                            width: g,
                            height: g
                        })
                    }), !E && (0, a.jsx)("div", {
                        className: f.lockContainer,
                        style: L,
                        children: (0, a.jsx)(u.default, {
                            color: (0, r.getColor)(p.locked),
                            ...O
                        })
                    }), E && N === c.PoggermodeAchievementRarity.LEGENDARY && (0, a.jsx)("div", {
                        className: f.lockContainer,
                        style: L,
                        children: (0, a.jsx)(o.default, {
                            className: f.confettiIcon,
                            ...O
                        })
                    })]
                })
            }
            h.Sizes = l.AvatarSizes
        },
        263065: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("782340");
            class o extends i.default {
                _initialize() {
                    l.default.subscribe("POGGERMODE_TEMPORARILY_DISABLED", this.handlePoggermodeTemporarilyDisabled)
                }
                _terminate() {
                    l.default.unsubscribe("POGGERMODE_TEMPORARILY_DISABLED", this.handlePoggermodeTemporarilyDisabled)
                }
                handlePoggermodeTemporarilyDisabled() {
                    (0, s.openModal)(e => (0, a.jsx)(s.ConfirmModal, {
                        ...e,
                        header: r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_TITLE,
                        confirmText: r.default.Messages.CONFIRM,
                        confirmButtonColor: s.Button.Colors.GREEN,
                        children: (0, a.jsx)(s.Text, {
                            variant: "text-md/normal",
                            children: r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_BODY
                        })
                    }))
                }
            }
            var u = new o
        },
        204025: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("913144"),
                l = n("316272"),
                i = n("269936"),
                r = n("383294"),
                o = n("49111");
            n("361430");
            let u = (0, i.makeLazy)({
                    createPromise: () => n.el("93116").then(n.bind(n, "93116")),
                    webpackId: "93116",
                    name: "PopoutWindowChannelCall"
                }),
                d = (0, i.makeLazy)({
                    createPromise: () => n.el("846679").then(n.bind(n, "846679")),
                    webpackId: "846679",
                    name: "PopoutWindowStageChannelCall"
                }),
                c = (0, i.makeLazy)({
                    createPromise: () => n.el("620635").then(n.bind(n, "620635")),
                    webpackId: "620635",
                    name: "PopoutWindowRTCDebug"
                });
            class E extends l.default {
                _initialize() {
                    s.default.subscribe("CHANNEL_CALL_POPOUT_WINDOW_OPEN", this.handleOpenChannelCallPopout), s.default.subscribe("RTC_DEBUG_POPOUT_WINDOW_OPEN", this.handleOpenRTCDebugPopout)
                }
                _terminate() {
                    s.default.unsubscribe("CHANNEL_CALL_POPOUT_WINDOW_OPEN", this.handleOpenChannelCallPopout), s.default.unsubscribe("RTC_DEBUG_POPOUT_WINDOW_OPEN", this.handleOpenRTCDebugPopout)
                }
                handleOpenChannelCallPopout(e) {
                    let {
                        channel: t
                    } = e;
                    r.open(o.PopoutWindowKeys.CHANNEL_CALL_POPOUT, e => t.isGuildStageVoice() ? (0, a.jsx)(d, {
                        windowKey: e,
                        channelId: t.id
                    }) : (0, a.jsx)(u, {
                        windowKey: e,
                        channelId: t.id
                    }), {
                        defaultWidth: 854,
                        defaultHeight: 480
                    })
                }
                handleOpenRTCDebugPopout() {
                    r.open(o.PopoutWindowKeys.RTC_DEBUG_POPOUT, e => (0, a.jsx)(c, {
                        windowKey: e
                    }), {
                        defaultWidth: 854,
                        defaultHeight: 480
                    })
                }
            }
            var f = new E
        },
        684641: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("458960"),
                s = n("913144"),
                l = n("316272"),
                i = n("619106"),
                r = n("292687");
            class o extends l.default {
                _initialize() {
                    r.default.addChangeListener(this.handlePopoutWindowChange), s.default.subscribe("WINDOW_FOCUS", this.handleMainWindowFocus)
                }
                _terminate() {
                    r.default.removeChangeListener(this.handlePopoutWindowChange), s.default.unsubscribe("WINDOW_FOCUS", this.handleMainWindowFocus), this.injectWindowAnimationFrame(window)
                }
                injectWindowAnimationFrame(e) {
                    let t = t => e.requestAnimationFrame(t),
                        n = t => e.cancelAnimationFrame(t);
                    a.default.inject.RequestAnimationFrame(t), a.default.inject.CancelAnimationFrame(n), i.frameLoop.setRAF(t, n)
                }
                constructor(...e) {
                    super(...e), this.handleMainWindowFocus = e => {
                        let {
                            focused: t
                        } = e;
                        t && this.injectWindowAnimationFrame(window)
                    }, this.handlePopoutWindowChange = () => {
                        let e = r.default.getWindowKeys().find(e => r.default.getWindowFocused(e));
                        if (null == e) return this.injectWindowAnimationFrame(window);
                        let t = r.default.getWindow(e);
                        if (null == t || t.closed) return this.injectWindowAnimationFrame(window);
                        this.injectWindowAnimationFrame(t)
                    }
                }
            }
            var u = new o
        },
        691818: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = {
                    profileThemesRelevanceExceeded: null,
                    savedAt: null
                },
                i = {
                    hasFetchedRelevance: !1
                },
                r = l,
                o = i;
            class u extends a.default.PersistedStore {
                initialize(e) {
                    o = i, r = l;
                    let t = new Date;
                    null != e && null != e.savedAt && t.getTime() - e.savedAt < 432e5 && (r = e)
                }
                get hasFetchedRelevance() {
                    return o.hasFetchedRelevance
                }
                get profileThemesRelevanceExceeded() {
                    return r.profileThemesRelevanceExceeded
                }
                getState() {
                    return r
                }
            }
            u.displayName = "PerksRelevanceStore", u.persistKey = "PerksRelevanceStore";
            var d = new u(s.default, {
                BILLING_PERKS_RELEVANCE_FETCH_START: function() {
                    o.hasFetchedRelevance = !0
                },
                BILLING_PERKS_RELEVANCE_FETCH_SUCCESS: function(e) {
                    let {
                        res: t
                    } = e;
                    null != t && (r.profileThemesRelevanceExceeded = t.eligible, r.savedAt = new Date().getTime())
                },
                BILLING_PERKS_RELEVANCE_FETCH_FAIL: function() {},
                LOGOUT: function() {
                    o = i, r = l
                }
            })
        },
        176372: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("252931"),
                o = n("557562"),
                u = n("697218"),
                d = n("340412"),
                c = n("719923"),
                E = n("197881"),
                f = n("982457"),
                _ = n("641078"),
                I = n("953314"),
                h = n("986675");
            class C extends i.default {
                _initialize() {
                    l.default.subscribe("POST_CONNECTION_OPEN", this.mayShowAnnouncementModal)
                }
                _terminate() {
                    l.default.unsubscribe("POST_CONNECTION_OPEN", this.mayShowAnnouncementModal)
                }
                constructor(...e) {
                    super(...e), this.mayShowAnnouncementModal = async () => {
                        if (await (0, _.maybeFetchActiveBogoPromotion)(), await (0, o.maybeGetPacksForUser)("try packs modal"), E.ProcessArgs.isDisallowPopupsSet()) return;
                        !(0, s.hasAnyModalOpen)() && (0, h.isEligibleForQ4DropAnnouncementModal)() && (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("986675").then(n.bind(n, "986675"));
                            return t => (0, a.jsx)(e, {
                                renderModalProps: t
                            })
                        }), !(0, s.hasAnyModalOpen)() && await (0, _.isEligibleForBOGOAnnouncementModal)() && (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("981125").then(n.bind(n, "981125"));
                            return t => (0, a.jsx)(e, {
                                renderModalProps: t
                            })
                        });
                        let e = u.default.getCurrentUser(),
                            t = (0, r.getInventoryGuildPacksUserExperimentConfig)({
                                user: e
                            });
                        !(0, s.hasAnyModalOpen)() && t.showTryPacksModalAndV2Copy && (0, I.isEligibleForTryPacksModal)((0, c.isPremium)(e)) && (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("953314").then(n.bind(n, "953314"));
                            return t => (0, a.jsx)(e, {
                                renderModalProps: t
                            })
                        })
                    }, this._hasTrialOffer = async () => {
                        try {
                            if (d.default.shouldFetchOffer() && await f.default.fetchUserTrialOffer(), d.default.hasFetchedOffer() && d.default.hasAnyUnexpiredOffer()) return !0;
                            return !1
                        } catch (e) {
                            return !1
                        }
                    }
                }
            }
            var T = new C
        },
        78291: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                InventoryTryPacksFeaturedPack: function() {
                    return p
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("65597"),
                r = n("77078"),
                o = n("430568"),
                u = n("13162"),
                d = n("529932"),
                c = n("166465"),
                E = n("557562"),
                f = n("412745"),
                _ = n("697218"),
                I = n("580357"),
                h = n("109024"),
                C = n("587974"),
                T = n("599110"),
                m = n("719923"),
                S = n("49111"),
                N = n("782340"),
                A = n("367969");

            function p(e) {
                let {
                    featuredPack: t,
                    alreadyAddedPackIds: n,
                    headerId: s,
                    autoFocused: p
                } = e, g = (0, d.useEmojiAndSourceGuild)({
                    emojiId: t.featuredEmojiIds[0]
                }), R = (0, i.default)([_.default], () => (0, m.isPremium)(_.default.getCurrentUser())), O = (0, i.default)([c.default], () => c.default.getSortedPackIds().length >= (0, E.getMaxPacksForUserType)(R)), L = e => new Set(n).has(e), M = (e, t, n) => {
                    T.default.track(S.AnalyticEvents.INVENTORY_PACK_ACTION_COMPLETED, {
                        type: e,
                        inventory_pack_id: t,
                        nonce: n
                    })
                };
                if (g.isFetching || null == g.expressionSourceGuild || null == g.expressionSourceGuild.emojis || g.hasJoinedEmojiSourceGuild) return null;
                let v = new Set(t.featuredEmojiIds),
                    D = g.expressionSourceGuild.emojis.filter(e => v.has(e.id)),
                    {
                        expressionSourceGuild: x
                    } = g;
                return (0, a.jsxs)("div", {
                    className: l(A.featuredPack, {
                        [A.dimmed]: O && !L(x.id)
                    }),
                    children: [(0, a.jsx)("div", {
                        className: A.featuredPackGuildIcon,
                        children: (0, a.jsx)(C.default, {
                            mask: C.default.Masks.SQUIRCLE,
                            width: 62,
                            height: 62,
                            className: A.guildIconContainer,
                            children: (0, a.jsx)(h.default, {
                                className: A.featuredPackGuildIconImage,
                                size: h.default.Sizes.LARGER,
                                guild: x
                            })
                        })
                    }), (0, a.jsxs)(r.Text, {
                        className: A.featuredPackTitle,
                        variant: "text-sm/semibold",
                        children: [(0, a.jsx)(I.default, {
                            guild: x,
                            className: A.featuredPackGuildBadge
                        }), x.name]
                    }), (0, a.jsx)("div", {
                        className: A.featuredPackEmojiGrid,
                        children: D.map(e => (0, a.jsx)("div", {
                            className: A.featuredPackEmojiWrapper,
                            children: (0, a.jsx)(o.default, {
                                emojiId: e.id,
                                emojiName: e.name,
                                size: "jumbo"
                            })
                        }, e.id))
                    }), (0, a.jsx)(r.Text, {
                        variant: "text-sm/normal",
                        children: N.default.Messages.INVENTORY_TRY_PACKS_MORE_EMOJI.format({
                            numberOfEmoji: g.expressionSourceGuild.emojis.length - D.length
                        })
                    }), (0, a.jsx)("div", {
                        className: A.featuredPackFooter,
                        children: L(x.id) ? (0, a.jsx)(r.Button, {
                            autoFocus: p,
                            color: r.ButtonColors.PRIMARY,
                            className: A.featuredPackFooterButton,
                            onClick: () => {
                                (0, u.uncollectPack)({
                                    packId: x.id
                                }), M(f.EmojiPopoutType.REMOVE_PACK, x.id, s)
                            },
                            children: (0, a.jsx)(r.Text, {
                                color: "always-white",
                                variant: "text-sm/normal",
                                children: N.default.Messages.INVENTORY_REMOVE_PACK
                            })
                        }) : (0, a.jsx)(r.Button, {
                            autoFocus: p,
                            className: A.featuredPackFooterButton,
                            disabled: O && !L(x.id),
                            onClick: () => {
                                (0, u.collectPack)({
                                    packId: x.id
                                }), M(f.EmojiPopoutType.ADD_PACK, x.id, s)
                            },
                            children: (0, a.jsx)(r.Text, {
                                color: "always-white",
                                variant: "text-sm/normal",
                                children: N.default.Messages.INVENTORY_ADD_PACK
                            })
                        })
                    })]
                }, x.id)
            }
        },
        953314: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isEligibleForTryPacksModal: function() {
                    return U
                },
                default: function() {
                    return G
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("151426"),
                r = n("77078"),
                o = n("997289"),
                u = n("812204"),
                d = n("685665"),
                c = n("10641"),
                E = n("385976"),
                f = n("298878"),
                _ = n("529932"),
                I = n("166465"),
                h = n("557562"),
                C = n("649844"),
                T = n("305961"),
                m = n("697218"),
                S = n("181114"),
                N = n("476765"),
                A = n("216422"),
                p = n("642032"),
                g = n("599110"),
                R = n("719923"),
                O = n("78291"),
                L = n("646718"),
                M = n("49111"),
                v = n("994428"),
                D = n("365058"),
                x = n("782340"),
                P = n("466701");
            let y = "2023_fall_try_packs_modal",
                b = [{
                    humanReadableName: "ooblets",
                    guildId: "255509377614610433",
                    featuredEmojiIds: ["893216643759620178", "431916066835529728", "431888257849098240", "431887978084696074", "481491021570637825", "893216644376191006"]
                }, {
                    humanReadableName: "haikyuu",
                    guildId: "424012709219008522",
                    featuredEmojiIds: ["758052547733749889", "758052547746463885", "758052547771760752", "758052548023287918", "1154091599148634172", "1154091595143053423"]
                }, {
                    humanReadableName: "lofiGirl",
                    guildId: "707230275175841915",
                    featuredEmojiIds: ["859801993303949343", "859802018197143622", "867335504928309288", "859801993806479401", "1096430408914190408", "859801993262006322"]
                }, {
                    humanReadableName: "townhall",
                    guildId: "169256939211980800",
                    featuredEmojiIds: ["1143953689409769562", "1143284729790070875", "1143273217457410141", "1143956675766796360", "1143957933122662441", "1143287122862809118"]
                }];

            function U(e) {
                if (I.default.getIsFetching() || null == I.default.getPackEmojisTTL() || (0, c.isDismissibleContentDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL)) return !1;
                let t = 0,
                    n = 0,
                    a = new Set(I.default.getSortedPackIds());
                for (let e of b) {
                    let s = e.featuredEmojiIds[0],
                        l = (0, _.getJoinedEmojiSourceGuildData)(E.default, T.default, s);
                    null != l.joinedEmojiSourceGuildRecord ? t++ : a.has(e.guildId) && n++
                }
                return !!(t < b.length / 2 && n + t < b.length && a.size < (0, h.getMaxPacksForUserType)(e)) || (!(0, c.isDismissibleContentDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL) && (g.default.track(M.AnalyticEvents.CHANGE_LOG_CLOSED, {
                    change_log_id: y,
                    seconds_open: 0
                }), (0, c.markDismissibleContentAsDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL, {
                    dismissAction: v.ContentDismissActionType.DISMISS
                })), !1)
            }

            function G(e) {
                let {
                    renderModalProps: t
                } = e, {
                    onClose: n,
                    transitionState: E
                } = t, _ = (0, N.useUID)(), {
                    location: h
                } = (0, o.useAnalyticsContext)(), {
                    analyticsLocations: T
                } = (0, d.default)(u.default.PREMIUM_MARKETING_ANNOUNCEMENT_MODAL), U = (0, l.default)([m.default], () => (0, R.isPremium)(m.default.getCurrentUser())), G = (0, l.useStateFromStoresArray)([I.default], () => {
                    let e = [];
                    return b.map(e => e.guildId).map(e => I.default.getPackByPackId({
                        packId: e
                    })).forEach(t => {
                        (null == t ? void 0 : t.id) != null && e.push(t.id)
                    }), e
                });
                return s.useEffect(() => {
                    (0, c.requestMarkDismissibleContentAsShown)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL);
                    let e = Date.now();
                    return g.default.track(M.AnalyticEvents.CHANGE_LOG_OPENED, {
                        change_log_id: y
                    }), () => {
                        g.default.track(M.AnalyticEvents.CHANGE_LOG_CLOSED, {
                            change_log_id: y,
                            seconds_open: Math.round((Date.now() - e) / 1e3)
                        }), (0, c.markDismissibleContentAsDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL, {
                            dismissAction: v.ContentDismissActionType.DISMISS
                        })
                    }
                }, []), (0, a.jsxs)(r.ModalRoot, {
                    className: P.root,
                    transitionState: E,
                    "aria-labelledby": _,
                    children: [(0, a.jsx)(r.ModalCloseButton, {
                        className: P.closeButton,
                        onClick: n
                    }), (0, a.jsxs)("span", {
                        children: [(0, a.jsx)(p.default, {
                            foreground: P.star1
                        }), (0, a.jsx)(p.default, {
                            foreground: P.star2
                        }), (0, a.jsx)(p.default, {
                            foreground: P.star3
                        }), (0, a.jsx)(f.default, {
                            className: P.betaTag,
                            color: "white"
                        }), (0, a.jsx)(p.default, {
                            foreground: P.star4
                        }), (0, a.jsx)(p.default, {
                            foreground: P.star5
                        })]
                    }), (0, a.jsxs)(r.ModalContent, {
                        className: P.content,
                        scrollbarType: "none",
                        children: [(0, a.jsxs)(r.Heading, {
                            color: "always-white",
                            variant: "heading-xl/extrabold",
                            className: P.headerText,
                            children: [(0, a.jsx)(A.default, {
                                className: P.nitroWheelHeader
                            }), x.default.Messages.INVENTORY_TRY_PACKS_TITLE]
                        }), (0, a.jsx)(r.Text, {
                            color: "always-white",
                            variant: "text-md/normal",
                            className: P.subHeaderText,
                            children: U ? x.default.Messages.INVENTORY_TRY_PACKS_DESCRIPTION.format({
                                maxPacks: D.INVENTORY_MAX_PACKS
                            }) : x.default.Messages.INVENTORY_TRY_PACKS_DESCRIPTION_FREEMIUM.format({
                                maxFreePacks: D.INVENTORY_MAX_FREE_PACKS
                            })
                        }), (0, a.jsx)(r.Text, {
                            color: "always-white",
                            variant: "text-md/normal",
                            className: P.subHeaderText,
                            children: U ? x.default.Messages.INVENTORY_TRY_PACKS_DESCRIPTION_2 : x.default.Messages.INVENTORY_TRY_PACKS_DESCRIPTION_FREEMIUM_2
                        }), (0, a.jsx)("div", {
                            className: P.featuredPacks,
                            children: b.map((e, t) => (0, a.jsx)(O.InventoryTryPacksFeaturedPack, {
                                autoFocused: 0 === t,
                                featuredPack: e,
                                alreadyAddedPackIds: G,
                                headerId: _
                            }, e.guildId))
                        }), !U && (() => {
                            let e = Date.now();
                            return (0, a.jsxs)("div", {
                                className: P.footerUpsell,
                                children: [(0, a.jsx)(r.Text, {
                                    className: P.upsellText,
                                    variant: "text-sm/normal",
                                    children: x.default.Messages.INVENTORY_TRY_PACKS_UPSELL.format({
                                        maxPacks: D.INVENTORY_MAX_PACKS
                                    })
                                }), (0, a.jsx)(S.default, {
                                    onlyShineOnHover: !0,
                                    className: P.getNitroButton,
                                    color: r.Button.Colors.GREEN,
                                    size: r.Button.Sizes.SMALL,
                                    onClick: () => {
                                        g.default.track(M.AnalyticEvents.CHANGE_LOG_CTA_CLICKED, {
                                            change_log_id: y,
                                            cta_type: "get_nitro_button",
                                            seconds_open: Math.round((Date.now() - e) / 1e3),
                                            target: "inventory_try_packs_payment_modal"
                                        }), (0, C.default)({
                                            subscriptionTier: L.PremiumSubscriptionSKUs.TIER_2,
                                            analyticsLocations: T,
                                            analyticsObject: {
                                                ...h,
                                                object: M.AnalyticsObjects.BUTTON_CTA,
                                                objectType: M.AnalyticsObjectTypes.TIER_2
                                            },
                                            onClose: e => {
                                                e && n()
                                            }
                                        })
                                    },
                                    children: (0, a.jsxs)(r.Text, {
                                        color: "always-white",
                                        variant: "text-sm/semibold",
                                        className: P.getNitroButtonContents,
                                        children: [(0, a.jsx)(A.default, {
                                            className: P.nitroWheelButton
                                        }), x.default.Messages.PREMIUM_UPSELL_GET_NITRO]
                                    })
                                })]
                            })
                        })()]
                    })]
                })
            }
        },
        215429: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("819855"),
                i = n("77078"),
                r = n("841098"),
                o = e => {
                    let {
                        className: t
                    } = e, n = (0, r.default)(), o = (0, i.useToken)(s.default.colors.BACKGROUND_ACCENT).hex();
                    return (0, a.jsx)("svg", {
                        width: "700",
                        height: "120",
                        viewBox: "0 0 700 120",
                        className: t,
                        xmlns: "http://www.w3.org/2000/svg",
                        children: (0, a.jsx)("path", {
                            fill: (0, l.isThemeDark)(n) ? o : "white",
                            opacity: "1",
                            d: "M351 39.047C185.4 -31.2102 48 9.77319 0 39.047V583.068C0 587.486 3.58174 591.068 8.00002 591.068H692C696.418 591.068 700 587.486 700 583.068V39.047C653.333 68.3208 516.6 109.304 351 39.047Z"
                        })
                    })
                }
        },
        986675: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isEligibleForQ4DropAnnouncementModal: function() {
                    return b
                },
                default: function() {
                    return U
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("819855"),
                i = n("77078"),
                r = n("997289"),
                o = n("841098"),
                u = n("812204"),
                d = n("685665"),
                c = n("10641"),
                E = n("649844"),
                f = n("697218"),
                _ = n("181114"),
                I = n("599110"),
                h = n("701909"),
                C = n("719923"),
                T = n("896630"),
                m = n("837797"),
                S = n("154889"),
                N = n("917247"),
                A = n("400307"),
                p = n("702542"),
                g = n("646718"),
                R = n("49111"),
                O = n("782340"),
                L = n("454275"),
                M = n("83064"),
                v = n("438313"),
                D = n("227809"),
                x = n("352074"),
                P = n("121432");
            let y = "2023_q4_nitro_drop",
                b = () => {
                    let e = f.default.getCurrentUser();
                    if ((0, C.isPremiumExactly)(e, g.PremiumTypes.TIER_2) || (0, c.isDismissibleContentDismissed)(s.DismissibleContent.Q4_2023_NITRO_DROP_ANNOUNCEMENT_MODAL)) return !1;
                    let {
                        enabled: t
                    } = T.Q4DropExperiment.getCurrentConfig({
                        location: "isEligibleForQ4DropAnnouncementModal"
                    });
                    return t
                };

            function U(e) {
                let {
                    renderModalProps: t
                } = e, {
                    onClose: n
                } = t, {
                    location: c
                } = (0, r.useAnalyticsContext)(), {
                    analyticsLocations: f
                } = (0, d.default)(u.default.PREMIUM_MARKETING_ANNOUNCEMENT_MODAL), T = (0, o.default)(), b = (0, N.usePremiumTrialOffer)(), U = null == b ? void 0 : b.subscription_trial, G = (0, S.usePremiumDiscountOffer)(), j = (0, C.formatTrialCtaIntervalDuration)({
                    intervalType: null == U ? void 0 : U.interval,
                    intervalCount: null == U ? void 0 : U.interval_count
                }), F = (0, m.useResponseOnUserState)({
                    onCustomCriteria: () => {
                        if ((null == U ? void 0 : U.id) === g.PREMIUM_TIER_2_TRIAL_FOR_EVERYONE_TRIAL_ID) return O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_SUBHEADER_TRIAL_ELIGIBLE
                    },
                    defaultResponse: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_SUBHEADER_NON_TRIAL_ELIGIBLE,
                    onTier0TrialOffer: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_SUBHEADER_NON_TRIAL_ELIGIBLE,
                    onTier2TrialOffer: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_SUBHEADER_NON_TRIAL_ELIGIBLE,
                    onNonTier2Subscriber: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_SUBHEADER_UPGRADE_ELIGIBLE
                }), k = (0, m.useResponseOnUserState)({
                    defaultResponse: () => null,
                    onCustomCriteria: () => {
                        if ((null == U ? void 0 : U.id) === g.PREMIUM_TIER_2_TRIAL_FOR_EVERYONE_TRIAL_ID) return () => (0, a.jsx)(i.Anchor, {
                            className: L.termsApplyAnchor,
                            href: h.default.getArticleURL(R.HelpdeskArticles.Q4_DROP),
                            children: (0, a.jsx)(i.Heading, {
                                variant: "heading-md/normal",
                                className: L.termsApplyBodyText,
                                children: O.default.Messages.BOGO_TERMS_APPLY
                            })
                        })
                    }
                }), B = (0, m.useResponseOnUserState)({
                    defaultResponse: O.default.Messages.BILLING_SUBSCRIBE_TO_PLAN,
                    onDiscountOffer: O.default.Messages.PREMIUM_DISCOUNT_CTA.format({
                        percent: null == G ? void 0 : G.discount.amount
                    }),
                    onTier0TrialOffer: j,
                    onTier2TrialOffer: j,
                    onNonTier2Subscriber: O.default.Messages.INTERACTION_PREMIUM_UPSELL_CTA
                }), w = (0, m.useResponseOnUserState)({
                    defaultResponse: "get_nitro_button",
                    onNonTier2Subscriber: "upgrade_plan_button",
                    onDiscountOffer: "discount_offer_button",
                    onTier0TrialOffer: "trial_offer_button",
                    onTier2TrialOffer: "trial_offer_button"
                }), H = (0, m.useResponseOnUserState)({
                    defaultResponse: () => (0, E.default)({
                        subscriptionTier: g.PremiumSubscriptionSKUs.TIER_2,
                        analyticsLocations: f,
                        analyticsObject: {
                            ...c,
                            object: R.AnalyticsObjects.BUTTON_CTA,
                            objectType: R.AnalyticsObjectTypes.TIER_2
                        },
                        onClose: e => {
                            e && n()
                        }
                    })
                }), V = (0, l.isThemeDark)(T) ? A.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_WHITE_FILL : A.PremiumPillAndSparklesColorOptions.PREMIUM_TIER_2_NEW_GRADIENT_FILL;
                return (0, a.jsx)(p.default, {
                    renderModalProps: t,
                    video: {
                        type: "video",
                        src: "https://cdn.discordapp.com/attachments/986110506119069696/1168984935332319262/04_DIS_Nitro_Drop_In_Product_2X_With_Audio.webm"
                    },
                    videoClassName: L.video,
                    modalDismissibleContent: s.DismissibleContent.Q4_2023_NITRO_DROP_ANNOUNCEMENT_MODAL,
                    modalTopExtra: () => null != U ? (0, a.jsx)(A.PremiumPillWithSparkles, {
                        text: O.default.Messages.BILLING_TRIAL_FREE_TRIAL_TEXT,
                        className: L.trialPill,
                        colorOptions: V
                    }) : null,
                    header: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_HEADER,
                    headerClassName: L.header,
                    subHeader: F,
                    subHeaderExtra: k,
                    featureCards: [{
                        header: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_EARLY_ACCESS_HEADER,
                        subHeader: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_EARLY_ACCESS_DESCRIPTION,
                        imageSrc: v
                    }, {
                        header: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_SPECIAL_PRICING_HEADER,
                        subHeader: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_SPECIAL_PRICING_DESCRIPTION,
                        imageSrc: D
                    }, {
                        header: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_CUSTOM_APP_ICON_HEADER,
                        subHeader: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_CUSTOM_APP_ICON_DESCRIPTION,
                        imageSrc: M
                    }, {
                        header: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_UNLIMITED_SUPER_REACTIONS_HEADER,
                        subHeader: O.default.Messages.Q4_DROP_ANNOUNCEMENT_MODAL_UNLIMITED_SUPER_REACTIONS_DESCRIPTION,
                        imageSrc: x
                    }],
                    changeLogId: y,
                    button: () => {
                        let e = Date.now();
                        return (0, a.jsxs)(_.default, {
                            className: L.buttonWide,
                            innerClassName: L.innerButton,
                            color: i.Button.Colors.GREEN,
                            size: i.Button.Sizes.SMALL,
                            onClick: () => {
                                I.default.track(R.AnalyticEvents.CHANGE_LOG_CTA_CLICKED, {
                                    change_log_id: y,
                                    cta_type: w,
                                    seconds_open: Math.round((Date.now() - e) / 1e3),
                                    target: "q4_drop_payment_modal"
                                }), H()
                            },
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                className: L.nitroIconSubHeader,
                                src: P
                            }), B]
                        })
                    }
                })
            }
        },
        106457: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-08_dcf_ml_model",
                label: "DCF ML Perks Relevance Model",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 0,
                    label: "threshold 0",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 1,
                    label: "threshold 1",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "threshold 2",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 3,
                    label: "threshold 3",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 4,
                    label: "threshold 4",
                    config: {
                        enabled: !0
                    }
                }]
            });
            var l = s
        },
        695827: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("79112"),
                l = n("216422"),
                i = n("489622"),
                r = n("909469"),
                o = n("959905"),
                u = n("485138"),
                d = n("49111"),
                c = n("782340"),
                E = n("185401"),
                f = e => {
                    let {
                        notice: t,
                        noticeType: n,
                        dismissCurrentNotice: f
                    } = e, _ = (null == t ? void 0 : t.metadata.premiumSubscription) != null, I = (0, o.useLocalizedPromoQuery)();
                    if ((0, u.useTrackLocalizedPricingPromoImpression)(d.AnalyticsSections.NOTIFICATION_BAR, null == I ? void 0 : I.countryCode), null == I) return null;
                    let h = I.countryCode,
                        C = I.currency,
                        T = I.paymentSourceTypes.length > 0;
                    return (0, a.jsxs)(i.default, {
                        color: _ ? i.NoticeColors.BRAND : i.NoticeColors.PREMIUM_TIER_2,
                        children: [(0, a.jsx)(i.NoticeCloseButton, {
                            onClick: f,
                            noticeType: n
                        }), !_ && (0, a.jsx)(l.default, {
                            className: E.premiumIcon
                        }), (0, r.getLocalizedPricingNotice)(h, C, T, _), (0, a.jsx)(i.PrimaryCTANoticeButton, {
                            onClick: () => {
                                f(), s.default.open(d.UserSettingsSections.PREMIUM)
                            },
                            noticeType: n,
                            children: c.default.Messages.LEARN_MORE
                        })]
                    })
                }
        },
        406915: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                prefetch: function() {
                    return M
                },
                PremiumSubscriptionWowMomentForHelper: function() {
                    return v
                },
                default: function() {
                    return D
                }
            });
            var s = n("37983"),
                l = n("884691"),
                i = n("301165"),
                r = n("446674"),
                o = n("913144"),
                u = n("206230"),
                d = n("58608"),
                c = n("599110"),
                E = n("560528"),
                f = n("659500"),
                _ = n("855133"),
                I = n("824986"),
                h = n("921228"),
                C = n("848877"),
                T = n("22230"),
                m = n("604448"),
                S = n("833572"),
                N = n("170486"),
                A = n("49111"),
                p = n("600608"),
                g = n("318342"),
                R = n("788936"),
                O = n("90976"),
                L = n("664182");
            async function M(e) {
                try {
                    o.default.dispatch({
                        type: "PREMIUM_TUTORIAL_IS_FETCHING_WOW_MOMENT_MEDIA",
                        value: !0
                    });
                    let t = e ? m : R;
                    window.matchMedia("(min-width: 1012px) and (max-width: 1980px)").matches || window.matchMedia("(min-height: 720px) and (max-height: 1408px)").matches ? t = e ? S : O : (window.matchMedia("(min-width: 1980px)").matches || window.matchMedia("(min-height: 1408px)").matches) && (t = e ? N : L);
                    let n = fetch(t).then(async e => {
                            let t = await e.blob(),
                                n = window.URL.createObjectURL(t);
                            return n
                        }),
                        a = fetch(e ? T : g).then(async e => {
                            let t = await e.blob(),
                                n = window.URL.createObjectURL(t);
                            return n
                        }),
                        [s, l] = await Promise.all([n, a]);
                    o.default.dispatch({
                        type: "PREMIUM_TUTORIAL_FETCH_WOW_MOMENT_MEDIA_SUCCESS",
                        wumpusMedia: s,
                        helperMedia: l
                    })
                } catch (e) {
                    o.default.dispatch({
                        type: "PREMIUM_TUTORIAL_IS_FETCHING_WOW_MOMENT_MEDIA",
                        value: !1
                    }), (0, _.setIsPersistentHelperHidden)(!1)
                }
            }

            function v() {
                let [e, t] = l.useState(!0), n = (0, r.useStateFromStores)([I.default], () => I.default.wowMomentHelperMedia), a = (0, E.supportsHEVCAlpha)();
                return (0, s.jsx)("div", {
                    children: e && null !== n && (0, s.jsx)(d.default, {
                        className: p.videoWrapperForHelper,
                        autoPlay: !0,
                        onEnded: () => {
                            t(!1), (0, _.setCanPlayWowMoment)(!1)
                        },
                        children: (0, s.jsx)("source", {
                            src: n,
                            type: a ? "video/mp4" : "video/webm"
                        })
                    })
                })
            }
            var D = function() {
                let e = (0, r.useStateFromStores)([u.default], () => u.default.useReducedMotion),
                    t = (0, h.useIsPremiumTutorialEnabled)("PremiumSubscriptionWowMoment"),
                    {
                        wumpusMedia: n,
                        helperMedia: o,
                        isFetchingMedia: T,
                        canPlayWowMoment: m
                    } = (0, r.useStateFromStoresObject)([I.default], () => ({
                        wumpusMedia: I.default.wowMomentWumpusMedia,
                        helperMedia: I.default.wowMomentHelperMedia,
                        isFetchingMedia: I.default.isFetchingWowMomentMedia,
                        canPlayWowMoment: I.default.canPlayWowMoment
                    })),
                    [S, N] = l.useState(!1),
                    g = (0, E.getChromeVersion)(),
                    R = (0, E.supportsHEVCAlpha)(),
                    O = g > 52 || -1 === g || R,
                    L = R ? "video/mp4" : "video/webm",
                    v = O && !e && m && t && null === n && null === o && !1 === T;
                v && M(R), l.useEffect(() => {
                    function t() {
                        let t = (0, h.isPremiumTutorialEnabled)("PremiumSubscriptionWowMoment-maybeActivateWowMoment", !e && O);
                        t && (N(!0), a = setTimeout(() => {
                            N(!1), x(!0), c.default.track(A.AnalyticEvents.PREMIUM_WOW_MOMENT_VIEWED, {
                                wow_moment_type: C.WowMomentTypes.GRADIENT_HIGHLIGHT
                            })
                        }, 2e3)), e && ((0, _.setCanPlayWowMoment)(!1), (0, _.setIsPersistentHelperHidden)(!1)), !O && (0, _.setIsPersistentHelperHidden)(!1)
                    }
                    return f.ComponentDispatch.subscribe(A.ComponentActions.PREMIUM_SUBSCRIPTION_CREATED, t), () => {
                        f.ComponentDispatch.unsubscribe(A.ComponentActions.PREMIUM_SUBSCRIPTION_CREATED, t)
                    }
                }, [e, O]);
                let [D, x] = l.useState(!1), [P, y] = l.useState(!1), b = (0, i.useSpring)({
                    opacity: D ? .2 : 0,
                    config: {
                        duration: 100
                    },
                    immediate: e
                }), U = (0, i.useSpring)({
                    x: P ? "100%" : "-100%",
                    config: {
                        duration: 500
                    },
                    immediate: e || !P
                });
                return l.useEffect(() => {
                    let e = -1;
                    return D && (e = window.setTimeout(() => {
                        y(!0)
                    }, 1e3)), () => {
                        window.clearTimeout(e)
                    }
                }, [D]), l.useEffect(() => {
                    let e = -1;
                    return P && (e = window.setTimeout(() => {
                        y(!1), x(!1), (0, _.setIsPersistentHelperHidden)(!1)
                    }, 1e3)), () => {
                        window.clearTimeout(e)
                    }
                }, [P]), (0, s.jsxs)("div", {
                    className: p.wrapper,
                    children: [S && null !== n && (0, s.jsx)(d.default, {
                        autoPlay: !0,
                        className: p.videoWrapper,
                        onPlay: () => {
                            clearTimeout(a), c.default.track(A.AnalyticEvents.PREMIUM_WOW_MOMENT_VIEWED, {
                                wow_moment_type: C.WowMomentTypes.WUMPUS_FLIGHT
                            })
                        },
                        onTimeUpdate: e => {
                            e.currentTarget.currentTime > 4 && ((0, _.setCanPlayWowMoment)(!0), (0, _.setIsPersistentHelperHidden)(!1))
                        },
                        onEnded: () => {
                            N(!1)
                        },
                        children: (0, s.jsx)("source", {
                            src: n,
                            type: L
                        })
                    }), (0, s.jsx)(i.animated.div, {
                        className: p.gadientHighlight,
                        style: b
                    }), (0, s.jsx)(i.animated.div, {
                        className: p.swipeWrapper,
                        style: U,
                        children: (0, s.jsxs)("svg", {
                            className: p.swipe,
                            viewBox: "0 0 848 1024",
                            fill: "none",
                            children: [(0, s.jsx)("path", {
                                d: "M257.206 1024L0 0H341.333L598.539 1024H257.206Z",
                                fill: "white"
                            }), (0, s.jsx)("path", {
                                d: "M847.975 1024H690.436L433.231 0H590.769L847.975 1024Z",
                                fill: "white"
                            })]
                        })
                    })]
                })
            }
        },
        425538: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("174727"),
                l = n("812204"),
                i = n("685665"),
                r = n("649844"),
                o = n("216422"),
                u = n("489622"),
                d = n("917247"),
                c = n("646718"),
                E = n("49111"),
                f = n("782340"),
                _ = n("185401"),
                I = function(e) {
                    var t;
                    let {
                        dismissCurrentNotice: n,
                        subscriptionTier: I
                    } = e, {
                        analyticsLocations: h
                    } = (0, i.default)(function(e) {
                        switch (e) {
                            case c.PremiumSubscriptionSKUs.TIER_0:
                                return l.default.PREMIUM_TIER_0_TRIAL_ENDING_NOTICE;
                            case c.PremiumSubscriptionSKUs.TIER_2:
                                return l.default.PREMIUM_TIER_2_TRIAL_ENDING_NOTICE;
                            default:
                                throw Error("Unsupported subscription tier: ".concat(e))
                        }
                    }(I)), C = (0, d.usePremiumTrialOffer)(), T = (0, s.default)(null != C && null != C.expires_at ? Date.parse(C.expires_at) : 0);
                    return null == C || (null === (t = C.subscription_trial) || void 0 === t ? void 0 : t.sku_id) !== I || null == C.expires_at || Object.values(T).every(e => 0 === e) ? null : (0, a.jsxs)(u.default, {
                        color: function(e) {
                            switch (e) {
                                case c.PremiumSubscriptionSKUs.TIER_0:
                                    return u.NoticeColors.PREMIUM_TIER_0;
                                case c.PremiumSubscriptionSKUs.TIER_2:
                                    return u.NoticeColors.PREMIUM_TIER_2;
                                default:
                                    throw Error("Unsupported subscription tier: ".concat(e))
                            }
                        }(I),
                        children: [(0, a.jsx)(u.NoticeCloseButton, {
                            onClick: n
                        }), (0, a.jsx)(o.default, {
                            className: _.premiumIcon
                        }), function(e, t) {
                            switch (e) {
                                case c.PremiumSubscriptionSKUs.TIER_0:
                                    return t.days > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_DAYS_VARIANT.format({
                                        days: t.days
                                    }) : t.hours > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_HOURS_VARIANT.format({
                                        hours: t.hours
                                    }) : f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_MINUTES_VARIANT.format({
                                        minutes: Math.max(t.minutes, 1)
                                    });
                                case c.PremiumSubscriptionSKUs.TIER_2:
                                    return t.days > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_DAYS_VARIANT.format({
                                        days: t.days
                                    }) : t.hours > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_HOURS_VARIANT.format({
                                        hours: t.hours
                                    }) : f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_MINUTES_VARIANT.format({
                                        minutes: Math.max(t.minutes, 1)
                                    });
                                default:
                                    throw Error("Unsupported subscription tier: ".concat(e))
                            }
                        }(I, T), (0, a.jsx)(u.NoticeButton, {
                            onClick: () => {
                                (0, r.default)({
                                    trialId: C.trial_id,
                                    subscriptionTier: I,
                                    analyticsLocations: h,
                                    analyticsObject: {
                                        page: E.AnalyticsPages.IN_APP,
                                        section: E.AnalyticsSections.NOTIFICATION_BAR,
                                        object: E.AnalyticsObjects.BUTTON_CTA
                                    }
                                })
                            },
                            children: function(e) {
                                switch (e) {
                                    case c.PremiumSubscriptionSKUs.TIER_0:
                                        return f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_CTA_VARIANT;
                                    case c.PremiumSubscriptionSKUs.TIER_2:
                                        return f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_CTA_VARIANT;
                                    default:
                                        throw Error("Unsupported subscription tier: ".concat(e))
                                }
                            }(I)
                        })]
                    })
                }
        },
        516245: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eD
                }
            });
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("414456"),
                o = n.n(r),
                u = n("298386"),
                d = n("446674"),
                c = n("151426"),
                E = n("669491"),
                f = n("819855"),
                _ = n("77078"),
                I = n("255397"),
                h = n("366634"),
                C = n("841098"),
                T = n("206230"),
                m = n("812204"),
                S = n("685665"),
                N = n("850391"),
                A = n("10641"),
                p = n("385976"),
                g = n("986632"),
                R = n("538282"),
                O = n("145067"),
                L = n("288518"),
                M = n("415435"),
                v = n("486503"),
                D = n("38766"),
                x = n("393414"),
                P = n("239380"),
                y = n("872173"),
                b = n("42203"),
                U = n("305961"),
                G = n("957255"),
                j = n("660478"),
                F = n("18494"),
                k = n("162771"),
                B = n("677099"),
                w = n("287850"),
                H = n("425190"),
                V = n("36694"),
                Y = n("943519"),
                W = n("772280"),
                K = n("599110"),
                z = n("286235"),
                q = n("855133"),
                Q = n("70723"),
                X = n("824986"),
                J = n("921228"),
                Z = n("406915"),
                $ = n("35099"),
                ee = n("105185"),
                et = n("848877"),
                en = n("646718"),
                ea = n("49111"),
                es = n("13030"),
                el = n("782340"),
                ei = n("693447"),
                er = n("31396"),
                eo = n("357413"),
                eu = n("991015"),
                ed = n("678262"),
                ec = n("436412"),
                eE = n("729386"),
                ef = n("235800");
            let e_ = e => {
                    let {
                        stepDescription: t,
                        hasCompletedStep: n,
                        image: a,
                        onClick: s,
                        tooltipText: i,
                        isEnabled: r = !0,
                        shouldPreventDefaultEmojiPickerToggle: u = !1
                    } = e;
                    return (0, l.jsx)(_.Tooltip, {
                        shouldShow: !r,
                        text: i,
                        position: "right",
                        tooltipContentClassName: ei.tooltipText,
                        spacing: 20,
                        children: e => {
                            let {
                                onMouseEnter: i,
                                onMouseLeave: d
                            } = e;
                            return (0, l.jsx)(_.Clickable, {
                                onMouseEnter: i,
                                onMouseLeave: d,
                                onClick: () => {
                                    r && s()
                                },
                                className: o({
                                    [ei.tutorialLinkcontainer]: !0,
                                    [ei.tutorialLinkcontainerEnabled]: r
                                }),
                                "data-premium-tutorial-persistent-coachmark-emoji-step": u,
                                children: (0, l.jsxs)("div", {
                                    className: o({
                                        [ei.tutorialLinkBackground]: !0
                                    }),
                                    children: [(0, l.jsx)("div", {
                                        className: o({
                                            [ei.tutorialLinkImageContainer]: !0,
                                            [ei.tutorialLinkImageContainerDisabled]: !r
                                        }),
                                        children: a
                                    }), (0, l.jsx)(_.Text, {
                                        variant: "text-sm/medium",
                                        className: o({
                                            [ei.tutorialLink]: !0,
                                            [ei.tutorialLinkEnabled]: r,
                                            [ei.tutorialLinkDisabled]: !r
                                        }),
                                        children: t
                                    }), n ? (0, l.jsx)(V.default, {
                                        className: o({
                                            [ei.tutorialCheckmark]: !0,
                                            [ei.tutorialCheckmarkEnabled]: r,
                                            [ei.tutorialCheckmarkDisabled]: !r
                                        })
                                    }) : (0, l.jsx)("div", {
                                        className: ei.rightCaretContainer,
                                        children: (0, l.jsx)(W.default, {
                                            width: 16,
                                            className: o({
                                                [ei.tutorialRightCaret]: !0,
                                                [ei.tutorialRightCaretEnabled]: r,
                                                [ei.tutorialRightCaretDisabled]: !r
                                            })
                                        })
                                    })]
                                })
                            })
                        }
                    })
                },
                eI = (e, t) => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.UNLOCK_EMOJI_CLICKED
                    });
                    let n = t ? N.ChatInputTypes.SIDEBAR : N.ChatInputTypes.NORMAL;
                    (0, R.toggleExpressionPicker)(es.ExpressionPickerViewType.EMOJI, n), (0, et.dismissPremiumTutorialTooltip)(c.DismissibleContent.PREMIUM_TUTORIAL_EMOJI_PICKER_COMPOSER_TOOLTIP);
                    let a = (0, ee.getSubsteps)(en.PremiumTutorialSteps.CUSTOM_EMOJI);
                    a.length < 1 ? z.default.captureMessage("[Premium Tutorial] No available substeps from PremiumTutorialSteps.CUSTOM_EMOJI") : (0, $.setActiveSubstep)(a[0]), (0, q.setNavigatedFromHelper)(!0)
                },
                eh = (e, t) => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: t,
                        helper_action: en.PremiumFeatureHelperActions.CUSTOM_PROFILES_CLICKED
                    });
                    let n = (0, ee.getSubsteps)(en.PremiumTutorialSteps.PROFILE_CUSTOMIZATION);
                    n.length < 1 ? z.default.captureMessage("[Premium Tutorial] No available substeps from PremiumTutorialSteps.PROFILE_CUSTOMIZATION") : (0, $.setActiveSubstep)(n[0]), e(), (0, q.setNavigatedFromHelper)(!0)
                },
                eC = e => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.SERVER_BOOSTS_CLICKED
                    }), (0, O.showGuildHeaderPopout)(!0), (0, et.dismissPremiumTutorialTooltip)(c.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP);
                    let t = (0, ee.getSubsteps)(en.PremiumTutorialSteps.BOOSTING);
                    t.length < 1 ? z.default.captureMessage("[Premium Tutorial] No available substeps from PremiumTutorialSteps.BOOSTING") : (0, $.setActiveSubstep)(t[0]), (0, q.setNavigatedFromHelper)(!0)
                };
            (a = s || (s = {}))[a.JUMP_TO_DM = 0] = "JUMP_TO_DM", a[a.JUMP_TO_SERVER = 1] = "JUMP_TO_SERVER", a[a.OPEN_CHAT = 2] = "OPEN_CHAT";
            let eT = (e, t, n, a) => {
                    let {
                        canUserSendEmoji: l,
                        userCantSendEmojiReason: i,
                        actionType: r,
                        firstChannelWithNoNewMessages: o,
                        guildId: c
                    } = (0, d.useStateFromStoresObject)([p.default, G.default, j.default], () => {
                        let l = p.default.hasUsableEmojiInAnyGuild();
                        if (!l) return {
                            canUserSendEmoji: !1,
                            userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_EMOJI_FLOW_DISABLED_TOOLTIP
                        };
                        if (null == a) {
                            let n = e.find(e => !j.default.hasUnread(e));
                            return null != n ? {
                                canUserSendEmoji: !0,
                                userCantSendEmojiReason: void 0,
                                actionType: s.JUMP_TO_DM,
                                firstChannelWithNoNewMessages: n
                            } : t.length > 0 ? {
                                canUserSendEmoji: !0,
                                userCantSendEmojiReason: void 0,
                                actionType: s.JUMP_TO_SERVER,
                                guildId: t[0]
                            } : {
                                canUserSendEmoji: !1,
                                userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_OPEN_CHANNEL_TOOLTIP
                            }
                        }
                        if (a.type !== u.ChannelTypes.DM && a.type !== u.ChannelTypes.GUILD_TEXT && a.type !== u.ChannelTypes.GROUP_DM && a.type !== u.ChannelTypes.PUBLIC_THREAD && a.type !== u.ChannelTypes.PRIVATE_THREAD && a.type !== u.ChannelTypes.GUILD_VOICE) return {
                            canUserSendEmoji: !1,
                            userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_CHANNEL_DOESNT_ALLOW_EMOJI_TOOLTIP
                        };
                        if (null != n) {
                            if (!G.default.can(ea.Permissions.SEND_MESSAGES, a)) return {
                                canUserSendEmoji: !1,
                                userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_OPEN_CHANNEL_TOOLTIP
                            };
                            if (!G.default.can(ea.Permissions.USE_EXTERNAL_EMOJIS, a)) return {
                                canUserSendEmoji: !1,
                                userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_CHANNEL_DOESNT_ALLOW_EMOJI_TOOLTIP
                            }
                        }
                        return {
                            canUserSendEmoji: !0,
                            userCantSendEmojiReason: void 0,
                            actionType: s.OPEN_CHAT
                        }
                    });
                    return {
                        canUserSendEmoji: l,
                        userCantSendEmojiReason: i,
                        onClickEmojiTutorial: () => {
                            l && (r === s.JUMP_TO_DM && void 0 !== o ? (0, x.transitionTo)(ea.Routes.CHANNEL(ea.ME, o)) : r === s.JUMP_TO_SERVER && void 0 !== c ? (0, P.transitionToGuild)(c) : r === s.OPEN_CHAT && void 0 !== a && a.type === u.ChannelTypes.GUILD_VOICE && I.default.updateChatOpen(a.id, !0))
                        }
                    }
                },
                em = e => {
                    let {
                        isBoostStepEnabled: t,
                        currentGuild: n
                    } = (0, d.useStateFromStoresObject)([k.default, U.default], () => {
                        if (0 === e.length) return {
                            isBoostStepEnabled: !1
                        };
                        let t = k.default.getGuildId(),
                            n = U.default.getGuild(t);
                        return {
                            isBoostStepEnabled: !0,
                            currentGuild: n
                        }
                    });
                    return {
                        isBoostStepEnabled: t,
                        onClickBoostingTutorial: () => {
                            t && null == n && e.length > 0 && (0, P.transitionToGuild)(e[0])
                        }
                    }
                },
                eS = e => {
                    let {
                        hasCompletedProfileTutorial: t,
                        hasCompletedBoostTutorial: n,
                        hasCompletedEmojiTutorial: a,
                        analyticsLocations: s
                    } = e, r = (0, D.default)({
                        analyticsLocation: {
                            page: ea.AnalyticsPages.PREMIUM_TRIAL_TUTORIAL_COACHMARK
                        }
                    }), o = (0, d.useStateFromStores)([k.default], () => k.default.getGuildId()), c = (0, d.useStateFromStores)([F.default], () => F.default.getChannelId(o)), E = (0, d.useStateFromStores)([b.default], () => b.default.getChannel(c)), _ = null != E && E.type === u.ChannelTypes.GUILD_VOICE, I = (0, d.useStateFromStoresArray)([B.default], () => B.default.getFlattenedGuildIds()), h = (0, d.useStateFromStoresArray)([w.default, L.default, v.default], () => {
                        let e = w.default.getPrivateChannelIds();
                        return (0, M.filterOutMessageRequestsAndSpamById)(e, [L.default, v.default])
                    }), {
                        canUserSendEmoji: T,
                        userCantSendEmojiReason: m,
                        onClickEmojiTutorial: S
                    } = eT(h, I, o, E), {
                        isBoostStepEnabled: N,
                        onClickBoostingTutorial: A
                    } = em(I), R = (0, C.default)();
                    return i.useEffect(() => {
                        !T && K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_TUTORIAL_FLOW_DISABLED, {
                            flow: "emoji"
                        }), !N && K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_TUTORIAL_FLOW_DISABLED, {
                            flow: "boost"
                        })
                    }, [T, N]), (0, l.jsxs)("div", {
                        className: ei.tutorialStepsContainer,
                        children: [(0, l.jsx)(e_, {
                            stepDescription: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CUSTOM_PROFILES,
                            hasCompletedStep: t,
                            image: (0, l.jsx)("img", {
                                alt: "",
                                src: ed
                            }),
                            onClick: () => {
                                (0, y.removeDismissedContent)(en.PremiumTutorialSteps.PROFILE_CUSTOMIZATION), eh(r, s)
                            }
                        }), (0, l.jsx)("hr", {
                            className: ei.tutorialLinkSeparator
                        }), (0, l.jsx)(e_, {
                            stepDescription: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_EMOJI,
                            hasCompletedStep: a,
                            image: (0, l.jsx)("img", {
                                alt: "",
                                src: eu,
                                className: ei.emojiTutorialImg
                            }),
                            onClick: () => {
                                null == S || S(), (0, y.removeDismissedContent)(en.PremiumTutorialSteps.CUSTOM_EMOJI), eI(s, _), ! function() {
                                    let e = k.default.getGuildId(),
                                        t = 0;
                                    p.default.getTopEmoji(e).length > 0 && t++, p.default.getDisambiguatedEmojiContext(e).favoriteEmojisWithoutFetchingLatest.length > 0 && t++, p.default.getDisambiguatedEmojiContext(e).getFrequentlyUsedEmojisWithoutFetchingLatest().length > 0 && t++, g.EmojiPickerStore.setActiveCategoryIndex(t)
                                }()
                            },
                            tooltipText: m,
                            isEnabled: T,
                            shouldPreventDefaultEmojiPickerToggle: !0
                        }), (0, l.jsx)("hr", {
                            className: ei.tutorialLinkSeparator
                        }), (0, l.jsx)(e_, {
                            stepDescription: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_BOOSTS,
                            hasCompletedStep: n,
                            image: (0, l.jsx)("img", {
                                alt: "",
                                src: (0, f.isThemeDark)(R) ? er : eo,
                                className: ei.boostTutorialImg
                            }),
                            onClick: () => {
                                null == A || A(), (0, y.removeDismissedContent)(en.PremiumTutorialSteps.BOOSTING), eC(s)
                            },
                            tooltipText: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_BOOST_FLOW_DISABLED_TOOLTIP,
                            isEnabled: N
                        })]
                    })
                },
                eN = (e, t) => {
                    if (!t && e >= 1 && e < 3) return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_WELCOME_BACK;
                    switch (e) {
                        case 1:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER_COMPLETED_ONE;
                        case 2:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER_LAST_ONE;
                        case 3:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER_COMPLETED;
                        default:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER
                    }
                },
                eA = e => {
                    switch (e) {
                        case 1:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER_CHOOSE_ANOTHER_PERK;
                        case 2:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER_LAST_ONE;
                        case 3:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER_COMPLETED;
                        default:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER
                    }
                },
                ep = e => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.EXPLORE_ALL_PERKS_CLICKED
                    }), (0, x.transitionTo)(ea.Routes.APPLICATION_STORE)
                },
                eg = e => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.HELPER_DISMISSED
                    }), (0, A.markDismissibleContentAsDismissed)(c.DismissibleContent.PREMIUM_TUTORIAL_EXPERIENCE)
                },
                eR = e => {
                    let t = X.default.isPersistentCoachmarkCollapsed,
                        n = t ? en.PremiumFeatureHelperActions.HELPER_UNCOLLAPSED : en.PremiumFeatureHelperActions.HELPER_COLLAPSED;
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: n
                    }), (0, q.togglePersistentHelper)()
                },
                eO = e => {
                    let {
                        analyticsLocations: t,
                        setDisplayDismissConfirmation: n,
                        dismissedTutorialStepsLength: a,
                        hasCompletedStepDuringSession: s,
                        hasCompletedProfileTutorial: i,
                        hasCompletedBoostTutorial: r,
                        hasCompletedEmojiTutorial: o,
                        hasCompletedAllSteps: u
                    } = e;
                    return (0, l.jsxs)("div", {
                        className: ei.expandedCoachmarkContent,
                        children: [(0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkHeader,
                            variant: "text-md/semibold",
                            children: eN(a, s)
                        }), (0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkSubheader,
                            variant: "text-sm/normal",
                            children: eA(a)
                        }), (0, l.jsx)(eS, {
                            hasCompletedProfileTutorial: i,
                            hasCompletedBoostTutorial: r,
                            hasCompletedEmojiTutorial: o,
                            analyticsLocations: t
                        }), u && (0, l.jsxs)(l.Fragment, {
                            children: [(0, l.jsx)("hr", {
                                className: ei.tutorialLinkSeparator
                            }), (0, l.jsxs)("div", {
                                className: ei.expandedCoachmarkFooterContent,
                                children: [(0, l.jsx)(_.Clickable, {
                                    onClick: () => n(!0),
                                    children: (0, l.jsx)(_.Text, {
                                        variant: "text-sm/normal",
                                        className: ei.closeHelperLink,
                                        children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_MARKETING_CLOSE
                                    })
                                }), (0, l.jsx)(_.Clickable, {
                                    onClick: () => ep(t),
                                    children: (0, l.jsx)(_.Text, {
                                        variant: "text-sm/normal",
                                        className: ei.seeAllPerksLink,
                                        children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_MARKETING_REDIRECT
                                    })
                                })]
                            })]
                        })]
                    })
                },
                eL = e => {
                    let {
                        analyticsLocations: t,
                        setDisplayDismissConfirmation: n
                    } = e;
                    return (0, l.jsxs)("div", {
                        className: ei.expandedCoachmarkContent,
                        children: [(0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkHeader,
                            variant: "text-md/semibold",
                            children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_CONFIRMATION_HEADER
                        }), (0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkSubheader,
                            variant: "text-sm/normal",
                            children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_CONFIRMATION_SUBHEADER
                        }), (0, l.jsx)("hr", {
                            className: ei.tutorialDismissConfirmationSeparator
                        }), (0, l.jsxs)("div", {
                            className: ei.expandedCoachmarkFooterContent,
                            children: [(0, l.jsx)(_.Button, {
                                onClick: () => n(!1),
                                look: _.ButtonLooks.BLANK,
                                color: ei.cancelButtonColor,
                                children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_CANCEL
                            }), (0, l.jsx)(_.Button, {
                                onClick: () => eg(t),
                                children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_YES
                            })]
                        })]
                    })
                },
                eM = e => {
                    let {
                        analyticsLocations: t
                    } = e, n = (0, J.useAllDismissedPremiumTutorialSteps)(), a = n.includes(en.PremiumTutorialSteps.PROFILE_CUSTOMIZATION), s = n.includes(en.PremiumTutorialSteps.BOOSTING), r = n.includes(en.PremiumTutorialSteps.CUSTOM_EMOJI), [u, c] = i.useState(!1);
                    i.useEffect(() => {
                        a && s && r && c(!0)
                    }, [a, s, r]);
                    let f = (0, d.useStateFromStores)([Q.default], () => Q.default.hasCompletedStepDuringSession),
                        [I, C] = i.useState(!1),
                        m = (0, d.useStateFromStores)([T.default], () => T.default.useReducedMotion),
                        S = (0, d.useStateFromStores)([X.default], () => X.default.canPlayWowMoment);
                    i.useEffect(() => () => {
                        S && (0, q.setCanPlayWowMoment)(!1)
                    }, [S]);
                    let N = S && !m;
                    return (0, l.jsxs)("div", {
                        className: o(ei.expandedCoachmarkContentContainer, N && ei.slideInFromBottomAnimation),
                        children: [N && (0, l.jsx)(Z.PremiumSubscriptionWowMomentForHelper, {}), (0, l.jsxs)("div", {
                            className: ei.expandedCoachmarkBannerContainer,
                            children: [(0, l.jsx)("div", {
                                className: ei.expandedCoachmarkBannerBranding,
                                children: (0, l.jsx)(Y.default, {
                                    color: E.default.unsafe_rawColors.WHITE_500.css,
                                    height: "26px"
                                })
                            }), (0, l.jsx)("div", {
                                className: ei.expandedCoachmarkBannerImageContainer,
                                children: f || u ? (0, l.jsx)("img", {
                                    alt: "",
                                    src: ec,
                                    className: ei.expandedCoachmarkCelebrationBannerImage
                                }) : (0, l.jsx)("img", {
                                    alt: "",
                                    src: ef,
                                    className: ei.expandedCoachmarkBannerImage
                                })
                            }), (0, l.jsx)(_.Clickable, {
                                onClick: () => eR(t),
                                className: ei.expandedCoachmarkCollapseButtonContainer,
                                children: (0, l.jsx)(h.default, {
                                    open: !1,
                                    className: ei.expandedCoachmarkCollapseButton
                                })
                            })]
                        }), I ? (0, l.jsx)(eL, {
                            analyticsLocations: t,
                            setDisplayDismissConfirmation: C
                        }) : (0, l.jsx)(eO, {
                            analyticsLocations: t,
                            setDisplayDismissConfirmation: C,
                            dismissedTutorialStepsLength: n.length,
                            hasCompletedStepDuringSession: f,
                            hasCompletedProfileTutorial: a,
                            hasCompletedBoostTutorial: s,
                            hasCompletedEmojiTutorial: r,
                            hasCompletedAllSteps: u
                        })]
                    })
                },
                ev = e => {
                    let {
                        analyticsLocations: t
                    } = e;
                    return (0, l.jsxs)(_.Clickable, {
                        onClick: () => eR(t),
                        className: ei.collapsedCoachmarkContainer,
                        children: [(0, l.jsx)("img", {
                            alt: "",
                            src: eE,
                            className: ei.collapsedCoachmarkImage
                        }), (0, l.jsx)(_.Text, {
                            variant: "text-sm/medium",
                            className: ei.collapsedCoachmarkHeading,
                            children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COLLAPSED_COACHMARK_HEADING
                        }), (0, l.jsx)(H.default, {
                            className: ei.collapsedCoachmarkExpandButton
                        })]
                    })
                };
            var eD = () => {
                let e = (0, d.useStateFromStores)([X.default], () => X.default.isPersistentCoachmarkCollapsed),
                    {
                        analyticsLocations: t
                    } = (0, S.default)(m.default.PREMIUM_TRIAL_TUTORIAL_COACHMARK),
                    n = (0, d.useStateFromStores)([X.default], () => X.default.isPersistentHelperHidden);
                return n ? (0, l.jsx)(l.Fragment, {}) : (K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                    location_stack: t,
                    helper_action: en.PremiumFeatureHelperActions.HELPER_RENDERED
                }), e ? (0, l.jsx)(ev, {
                    analyticsLocations: t
                }) : (0, l.jsx)(eM, {
                    analyticsLocations: t
                }))
            }
        },
        266782: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("78938"),
                l = n("782340"),
                i = () => (0, a.jsx)(s.default, {
                    copy: l.default.Messages.NEW
                })
        },
        702542: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("206230"),
                d = n("10641"),
                c = n("933629"),
                E = n("560176"),
                f = n("633667"),
                _ = n("476765"),
                I = n("956089"),
                h = n("58608"),
                C = n("599110"),
                T = n("215429"),
                m = n("49111"),
                S = n("994428"),
                N = n("236998");
            let A = e => {
                    let {
                        tagText: t,
                        className: n
                    } = e;
                    return (0, a.jsx)(I.TextBadge, {
                        className: i(N.tag, n),
                        text: t
                    })
                },
                p = e => {
                    let {
                        header: t,
                        subHeader: n,
                        imageSrc: s,
                        tagText: l,
                        wideStyle: r
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i(N.featureCard, {
                            [N.wideStyle]: r
                        }),
                        children: [null != l ? (0, a.jsx)(A, {
                            tagText: l,
                            className: N.featureCardTag
                        }) : null, (0, a.jsx)("img", {
                            alt: "",
                            className: i(N.featureCardImg, {
                                [N.wideStyle]: r
                            }),
                            src: s
                        }), (0, a.jsxs)("div", {
                            className: N.featureCardTextGroup,
                            children: [(0, a.jsx)(o.Heading, {
                                variant: "heading-lg/extrabold",
                                className: N.featureCardTextHeader,
                                children: t
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-sm/normal",
                                children: n
                            })]
                        })]
                    })
                };

            function g(e) {
                let {
                    className: t,
                    renderModalProps: n,
                    video: l,
                    videoClassName: I,
                    modalDismissibleContent: A,
                    modalTopExtra: g,
                    header: R,
                    headerClassName: O,
                    subHeader: L,
                    subHeaderExtra: M,
                    featureCards: v,
                    changeLogId: D,
                    button: x
                } = e, {
                    onClose: P,
                    transitionState: y
                } = n, b = (0, _.useUID)(), U = v.length % 2 == 0, G = (0, r.useStateFromStores)([u.default], () => u.default.useReducedMotion);
                return s.useEffect(() => {
                    (0, d.requestMarkDismissibleContentAsShown)(A);
                    let e = Date.now();
                    return C.default.track(m.AnalyticEvents.CHANGE_LOG_OPENED, {
                        change_log_id: D
                    }), () => {
                        C.default.track(m.AnalyticEvents.CHANGE_LOG_CLOSED, {
                            change_log_id: D,
                            seconds_open: Math.round((Date.now() - e) / 1e3)
                        }), (0, d.markDismissibleContentAsDismissed)(A, {
                            dismissAction: S.ContentDismissActionType.DISMISS
                        })
                    }
                }, [A, D]), (0, a.jsxs)(o.ModalRoot, {
                    className: i(N.root, t),
                    transitionState: y,
                    "aria-labelledby": b,
                    children: [(0, a.jsx)(o.ModalCloseButton, {
                        className: N.closeButton,
                        onClick: P
                    }), (0, a.jsx)(T.default, {
                        className: N.splash
                    }), null == g ? void 0 : g(), (0, a.jsxs)(o.ModalContent, {
                        className: N.content,
                        children: [(0, a.jsx)(o.Heading, {
                            variant: "display-md",
                            className: i(N.headerText, O),
                            children: R
                        }), "video" === l.type ? (0, a.jsx)(h.default, {
                            className: i(N.video, I),
                            autoPlay: !G,
                            loop: !0,
                            muted: !0,
                            controls: !0,
                            src: l.src,
                            onPlay: () => {
                                C.default.track(m.AnalyticEvents.CHANGE_LOG_VIDEO_INTERACTED, {
                                    change_log_id: D
                                })
                            }
                        }) : (0, a.jsx)(E.EmbedVideo, {
                            className: i(N.video, I),
                            allowFullScreen: !1,
                            href: l.href,
                            thumbnail: l.thumbnail,
                            video: l.embed,
                            provider: f.SupportedEmbedIFrame.YOUTUBE,
                            maxWidth: l.embed.width,
                            maxHeight: l.embed.height,
                            renderVideoComponent: c.renderVideoComponent,
                            renderImageComponent: c.renderImageComponent,
                            renderLinkComponent: c.renderMaskedLinkComponent,
                            onPlay: () => {
                                C.default.track(m.AnalyticEvents.CHANGE_LOG_VIDEO_INTERACTED, {
                                    change_log_id: D
                                })
                            }
                        }), (0, a.jsx)(o.Heading, {
                            variant: "heading-lg/extrabold",
                            className: N.bodyText,
                            children: L
                        }), null == M ? void 0 : M(), (0, a.jsx)("div", {
                            className: i(N.featureCardGroup, {
                                [N.wideStyle]: U
                            }),
                            children: v.map((e, t) => (0, a.jsx)(p, {
                                ...e,
                                wideStyle: U
                            }, "".concat(e.header, "_").concat(t)))
                        }), x()]
                    })]
                })
            }
        },
        630140: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("152584"),
                r = n("316272"),
                o = n("335189"),
                u = n("473591"),
                d = n("929423"),
                c = n("783142"),
                E = n("697218"),
                f = n("719923"),
                _ = n("75015");
            class I extends r.default {
                _initialize() {
                    l.default.subscribe("PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL", this.maybeOpenProfilePreviewModal)
                }
                _terminate() {
                    l.default.unsubscribe("PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL", this.maybeOpenProfilePreviewModal)
                }
                maybeOpenProfilePreviewModal(e) {
                    let {
                        imageSrc: t,
                        file: l,
                        uploadType: r,
                        guildId: I,
                        isTryItOutFlow: h
                    } = e, C = u.default.isEditingClydeProfile(), T = C ? o.setPendingAvatar : null != I ? d.setPendingAvatar : i.setPendingAvatar, m = C ? o.setPendingBanner : null != I ? d.setPendingBanner : c.setPendingBanner, S = E.default.getCurrentUser();
                    if (r === _.UploadTypes.AVATAR) {
                        if (h) {
                            (0, c.setTryItOutAvatar)(t);
                            return
                        }
                        let e = f.default.canUseAnimatedAvatar(S);
                        if (e || "image/gif" !== l.type || C) {
                            T(t);
                            return
                        }(0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("745544").then(n.bind(n, "745544"));
                            return n => (0, a.jsx)(e, {
                                avatarSrc: t,
                                onSubscribe: () => T(t),
                                ...n
                            })
                        })
                    } else if (r === _.UploadTypes.BANNER) {
                        if (h) {
                            (0, c.setTryItOutBanner)(t);
                            return
                        }
                        let e = f.default.canUsePremiumProfileCustomization(S);
                        if (e || C) {
                            m(t);
                            return
                        }(0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("745544").then(n.bind(n, "745544"));
                            return n => (0, a.jsx)(e, {
                                bannerSrc: t,
                                onSubscribe: () => m(t),
                                ...n
                            })
                        })
                    }
                }
            }
            var h = new I
        },
        507917: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("369964"),
                i = n("38766"),
                r = n("397336"),
                o = n("782340"),
                u = n("102743");

            function d() {
                let e = (0, i.default)({
                    scrollPosition: r.ProfileCustomizationScrollPositions.TRY_IT_OUT
                });
                return (0, a.jsx)(l.default, {
                    isPremiumFeature: !0,
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0,
                    artClassName: u.profileThemesArt,
                    onTryFeature: e,
                    header: o.default.Messages.PROFILE_THEMES_TOOLTIP_TITLE,
                    body: o.default.Messages.PROFILE_THEMES_TOOLTIP_DESCRIPTION_PREMIUM,
                    dismissibleContent: s.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2
                })
            }
        },
        189293: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchUserProfileEffects: function() {
                    return o
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("448993");
            n("845962");
            var i = n("49111");
            let r = e => ({
                    id: e.id,
                    config: e
                }),
                o = async () => {
                    s.default.dispatch({
                        type: "USER_PROFILE_EFFECTS_FETCH"
                    });
                    try {
                        let {
                            body: e
                        } = await a.default.get(i.Endpoints.USER_PROFILE_EFFECTS), t = null == e ? void 0 : e.profile_effect_configs, n = t.map(r);
                        s.default.dispatch({
                            type: "USER_PROFILE_EFFECTS_FETCH_SUCCESS",
                            profileEffects: n
                        })
                    } catch (e) {
                        throw s.default.dispatch({
                            type: "USER_PROFILE_EFFECTS_FETCH_FAILURE",
                            error: e
                        }), new l.APIError(e)
                    }
                }
        },
        91990: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("913144"),
                s = n("316272"),
                l = n("189293"),
                i = n("662286");
            class r extends s.default {
                _initialize() {
                    a.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen)
                }
                _terminate() {
                    a.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen)
                }
                constructor(...e) {
                    super(...e), this.handleConnectionOpen = () => {
                        (0, i.canUseProfileEffects)({
                            location: "ProfileEffectManager",
                            autoTrackExposure: !1
                        }) && (0, l.fetchUserProfileEffects)()
                    }
                }
            }
            var o = new r
        },
        642839: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("65597"),
                o = n("151426"),
                u = n("77078"),
                d = n("206230"),
                c = n("812204"),
                E = n("685665"),
                f = n("21526"),
                _ = n("369964"),
                I = n("697218"),
                h = n("719923"),
                C = n("782340"),
                T = n("661597"),
                m = n("834958"),
                S = n("929359"),
                N = n("471539");
            (a = s || (s = {}))[a.LOADING = 0] = "LOADING", a[a.INTRO = 1] = "INTRO", a[a.IDLE = 2] = "IDLE";
            let A = (e, t) => {
                if (t) return N;
                switch (e) {
                    case s.INTRO:
                        return S;
                    case s.IDLE:
                        return m;
                    default:
                        return N
                }
            };
            var p = () => {
                let e = (0, r.default)([I.default], () => I.default.getCurrentUser()),
                    t = h.default.canUseCollectibles(e),
                    n = (0, r.default)([d.default], () => d.default.useReducedMotion),
                    {
                        analyticsLocations: a
                    } = (0, E.default)(c.default.PROFILE_EFFECT_SHOP_COACHMARK),
                    [N, p] = i.useState(!1),
                    [g, R] = i.useState(!1),
                    O = i.useRef(s.LOADING),
                    [L, M] = i.useState(s.LOADING);
                i.useEffect(() => {
                    let e = null;
                    return N && g && O.current === s.LOADING && (O.current = s.INTRO, M(s.INTRO), e = setTimeout(() => {
                        M(s.IDLE), O.current = s.IDLE
                    }, 2880)), () => {
                        null != e && clearTimeout(e)
                    }
                }, [N, g, O]), i.useEffect(() => {
                    let e = setTimeout(() => {
                        O.current === s.LOADING && (O.current = s.IDLE, M(s.IDLE))
                    }, 3e3);
                    return () => clearTimeout(e)
                }, []);
                let v = i.useCallback(() => {
                    (0, f.openCollectiblesShop)({
                        analyticsLocations: a,
                        analyticsSource: c.default.PROFILE_EFFECT_SHOP_COACHMARK
                    })
                }, [a]);
                return (0, l.jsx)(_.default, {
                    dismissibleContent: o.DismissibleContent.COLLECTIBLES_PROFILE_EFFECT_SHOP_COACHMARK,
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0,
                    isPremiumFeature: !0,
                    className: L === s.LOADING ? T.loading : void 0,
                    artClassName: T.shopArt,
                    position: "top",
                    tryItText: C.default.Messages.PROFILE_EFFECTS_MAIN_COACHMARK_CTA,
                    onTryFeature: v,
                    header: C.default.Messages.PROFILE_EFFECTS_MAIN_COACHMARK_TITLE,
                    body: (0, l.jsxs)(l.Fragment, {
                        children: [(0, l.jsx)(u.Text, {
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: t ? C.default.Messages.PROFILE_EFFECTS_MAIN_COACHMARK_NON_NITRO_DESCRIPTION : C.default.Messages.PROFILE_EFFECTS_MAIN_COACHMARK_NITRO_DESCRIPTION
                        }), (0, l.jsxs)("div", {
                            className: T.imageLoader,
                            "aria-hidden": !0,
                            role: "presentation",
                            children: [(0, l.jsx)("img", {
                                src: S,
                                alt: " ",
                                onLoad: () => p(!0)
                            }), (0, l.jsx)("img", {
                                src: m,
                                alt: " ",
                                onLoad: () => R(!0)
                            })]
                        })]
                    }),
                    art: (0, l.jsx)("img", {
                        alt: " ",
                        src: A(L, n)
                    })
                })
            }
        },
        226511: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("446674"),
                s = n("95410"),
                l = n("913144"),
                i = n("525065"),
                r = n("305961"),
                o = n("957255"),
                u = n("69741"),
                d = n("49111");
            let c = "publicUpsellChannelNoticeGuilds",
                E = new Set;
            class f extends a.default.Store {
                initialize() {
                    var e;
                    this.waitFor(o.default, r.default, i.default), this.syncWith([o.default, r.default, i.default], d.NOOP), E = (e = new Set(s.default.get(c)), e)
                }
                isVisible(e) {
                    if (null == e) return;
                    let t = i.default.getMemberCount(e.id);
                    return !E.has(e.id) && null != t && t >= u.COMMUNITY_UPSELL_MINIMUM_GUILD_SIZE && o.default.can(d.Permissions.ADMINISTRATOR, e) && !e.hasFeature(d.GuildFeatures.COMMUNITY)
                }
            }
            f.displayName = "EnablePublicGuildUpsellNoticeStore";
            var _ = new f(l.default, {
                PUBLIC_UPSELL_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    if (!E.has(t)) return E.add(t), s.default.set(c, E), !0
                }
            })
        },
        947337: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("363025"),
                i = n("963662"),
                r = n("592407"),
                o = n("49111"),
                u = n("782340"),
                d = n("175717"),
                c = e => {
                    let {
                        guild: t
                    } = e, n = s.useCallback(() => {
                        (0, l.hideEnablePublicGuildUpsellNotice)(t.id)
                    }, [t.id]);
                    return (0, a.jsx)(i.default, {
                        guild: t,
                        onDismissed: n,
                        onClick: () => r.default.open(t.id, o.GuildSettingsSections.COMMUNITY),
                        message: u.default.Messages.NOTICE_ENABLE_PUBLIC_GUILD_UPSELL_MESSAGE,
                        trackingSource: o.ChannelNoticeCtaSources.ENABLE_PUBLIC_GUILD_UPSELL_NOTICE,
                        type: o.ChannelNoticeTypes.PUBLIC_UPSELL,
                        image: d,
                        cta: u.default.Messages.LEARN_MORE
                    })
                }
        },
        578287: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getRemoteIconURL: function() {
                    return P
                },
                transformChannel: function() {
                    return b
                },
                transformInternalTextMessage: function() {
                    return U
                },
                transformVoiceState: function() {
                    return G
                },
                transformRelationship: function() {
                    return j
                },
                isMatchingOrigin: function() {
                    return F
                },
                hasMessageReadPermission: function() {
                    return k
                },
                getVoiceConnectionState: function() {
                    return B
                },
                computeActivityFlags: function() {
                    return w
                },
                validateActivityInvite: function() {
                    return H
                },
                fetchApplicationsRPC: function() {
                    return V
                },
                processSocketThrottlers: function() {
                    return Y
                },
                validateOriginAndUpdateSocket: function() {
                    return W
                },
                getDeprecatedVoiceSettingsWithShortcut: function() {
                    return K
                },
                getVoiceSettingsWithShortcut: function() {
                    return z
                },
                validatePostMessageTransport: function() {
                    return q
                },
                validateApplication: function() {
                    return Q
                }
            }), n("917351");
            var a, s = n("746379"),
                l = n("872717"),
                i = n("497"),
                r = n("95410"),
                o = n("819689"),
                u = n("711562"),
                d = n("367376"),
                c = n("574073"),
                E = n("845579"),
                f = n("233069"),
                _ = n("766274"),
                I = n("42203"),
                h = n("305961"),
                C = n("42887"),
                T = n("377253"),
                m = n("824563"),
                S = n("697218"),
                N = n("800762"),
                A = n("387111"),
                p = n("655518"),
                g = n("861309"),
                R = n("694352"),
                O = n("49111");
            let L = null !== (a = s.parse(window.GLOBAL_ENV.API_ENDPOINT, !1, !0).host) && void 0 !== a ? a : "localhost",
                M = function() {
                    let e = L.split(":")[0];
                    if (!e.includes(".")) return e;
                    let t = e.split("."),
                        n = t[t.length - 1];
                    return /^\d+$/.test(n) ? e : t.slice(-2).join(".")
                }(),
                v = new RegExp("^".concat(p.default.escape("https://"), "(?:[a-z]+\\.)?(").concat(p.default.escape(M), "|discordapp.com|discord.com)$")),
                D = {};

            function x(e) {
                return "customEmoji" === e.type && (e.type = "emoji"), "emoji" === e.type && e.src && (e.src = P(e.src)), Array.isArray(e.content) && (e.content = e.content.map(x)), e
            }

            function P(e) {
                return /^http/.test(e) ? e : "".concat(location.protocol, "//").concat(location.host).concat("/" === e.charAt(0) ? "" : "/").concat(e)
            }

            function y(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                return t.indexOf(e) > -1
            }

            function b(e, t) {
                let n = [],
                    a = e.getGuildId();
                return ![O.ChannelTypes.GUILD_CATEGORY, ...(0, f.GUILD_VOCAL_CHANNEL_TYPES)].includes(e.type) && n.push(new Promise(t => {
                    T.default.whenReady(e.id, () => t()), o.default.fetchMessages({
                        channelId: e.id,
                        limit: O.MAX_MESSAGES_PER_CHANNEL
                    })
                })), Promise.all(n).then(() => {
                    var n;
                    let s = !e.isNSFW() || (null === (n = S.default.getCurrentUser()) || void 0 === n ? void 0 : n.nsfwAllowed) === !0,
                        l = s && t ? T.default.getMessages(e.id).toArray().map(U) : [],
                        i = Object.values(N.default.getVoiceStatesForChannel(e.id)).map(t => G(a, e.id, t));
                    return {
                        id: e.id,
                        name: e.name,
                        type: e.type,
                        topic: e.topic,
                        bitrate: e.bitrate,
                        user_limit: e.userLimit,
                        guild_id: a,
                        position: e.position,
                        messages: l,
                        voice_states: i
                    }
                })
            }

            function U(e) {
                let t = d.default.parseToAST(e.content, !0, {
                        channelId: e.channel_id
                    }).map(x),
                    n = I.default.getChannel(e.channel_id),
                    a = null != e.author ? (0, c.getUserAuthor)(new _.default(e.author), n) : void 0;
                return {
                    id: e.id,
                    blocked: e.blocked,
                    bot: e.bot,
                    content: e.content,
                    content_parsed: t.length ? t : void 0,
                    nick: null == a ? void 0 : a.nick,
                    author_color: null == a ? void 0 : a.colorString,
                    edited_timestamp: e.edited_timestamp || e.editedTimestamp,
                    timestamp: e.timestamp,
                    tts: e.tts,
                    mentions: e.mentions,
                    mention_everyone: e.mention_everyone || e.mentionEveryone,
                    mention_roles: e.mention_roles || e.mentionRoles,
                    embeds: e.embeds,
                    attachments: e.attachments,
                    author: e.author,
                    pinned: e.pinned,
                    type: e.type
                }
            }

            function G(e, t, n) {
                let {
                    mute: a,
                    deaf: s,
                    selfMute: l,
                    selfDeaf: i,
                    suppress: r,
                    userId: o
                } = n, u = S.default.getUser(o);
                if (null == u) throw Error("Invalid user id: ".concat(o));
                return {
                    nick: A.default.getName(e, t, u),
                    mute: C.default.isLocalMute(u.id),
                    volume: C.default.getLocalVolume(u.id),
                    pan: C.default.getLocalPan(u.id),
                    voice_state: {
                        mute: a,
                        deaf: s,
                        self_mute: l,
                        self_deaf: i,
                        suppress: r
                    },
                    user: (0, R.default)(u)
                }
            }

            function j(e, t, n) {
                let a = S.default.getUser(t);
                return {
                    type: e,
                    user: null != a ? (0, R.default)(a) : null,
                    presence: {
                        status: m.default.getStatus(t),
                        activity: null != n ? m.default.getApplicationActivity(t, n) : m.default.getPrimaryActivity(t)
                    }
                }
            }

            function F(e) {
                let t;
                if (null == e) return !1;
                let n = window.location.origin;
                if (e === n) return !0;
                try {
                    t = s.parse(e).hostname
                } catch (e) {
                    return !1
                }
                return window.location.hostname === t && "localhost" === t || null == e.match("staging") && (!!(v.test(e) && v.test(n)) || !1)
            }

            function k(e, t, n) {
                let a = h.default.getGuild(e.getGuildId()),
                    s = null != a ? a.getApplicationId() : e.getApplicationId();
                return s === t || n.indexOf(O.OAuth2Scopes.MESSAGES_READ) > -1
            }

            function B(e) {
                switch (e) {
                    case O.RTCConnectionStates.RTC_CONNECTED:
                    case O.RTCConnectionStates.RTC_CONNECTING:
                    case O.RTCConnectionStates.RTC_DISCONNECTED:
                        return e.replace(/^RTC_/, "VOICE_");
                    default:
                        return e
                }
            }

            function w(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    {
                        instance: n,
                        secrets: a,
                        party: s
                    } = e,
                    l = 0;
                return (n && (l |= O.ActivityFlags.INSTANCE), (null == a ? void 0 : a.join) != null && (l |= O.ActivityFlags.JOIN), t) ? (l |= O.ActivityFlags.EMBEDDED, l |= O.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL) : (((null == s ? void 0 : s.privacy) === O.ActivityPartyPrivacy.PUBLIC || r.default.get("ACTIVITIES_FORCE_PUBLIC")) && (E.AllowActivityPartyPrivacyFriends.getSetting() && (l |= O.ActivityFlags.PARTY_PRIVACY_FRIENDS), E.AllowActivityPartyPrivacyVoiceChannel.getSetting() && (l |= O.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL)), l)
            }

            function H(e, t, n) {
                if (e === O.ActivityActionTypes.JOIN) return null != t && null != t.id && null != n.join;
                return !1
            }

            function V(e, t, n) {
                return l.default.get({
                    url: O.Endpoints.APPLICATION_RPC(t),
                    oldFormErrors: !0,
                    retries: 3
                }).then(a => {
                    let {
                        body: {
                            rpc_origins: s,
                            id: l,
                            name: i,
                            icon: r,
                            cover_image: o,
                            flags: d
                        }
                    } = a;
                    if ("string" == typeof n) {
                        if (e.transport === O.TransportTypes.POST_MESSAGE) {
                            let e = (0, u.default)(t);
                            if (null == e || !y(n, [e])) throw new g.default(O.RPCCloseCodes.INVALID_ORIGIN, "Invalid Origin")
                        } else if (!y(n, s)) throw new g.default(O.RPCCloseCodes.INVALID_ORIGIN, "Invalid Origin")
                    }
                    e.application = {
                        id: l,
                        name: i,
                        icon: r,
                        coverImage: o,
                        flags: d
                    }
                }, () => {
                    throw new g.default(O.RPCCloseCodes.INVALID_CLIENTID, "Invalid Client ID")
                })
            }
            async function Y(e, t) {
                let n = D[e];
                null == n && (n = new i.default(t ? 2 : 60, 6e4), D[e] = n), await n.process()
            }

            function W(e, t) {
                null == t && (e.authorization.scopes = [O.RPC_LOCAL_SCOPE])
            }

            function K(e) {
                let t = C.default.getSettings(),
                    n = e => Object.values(e).sort((e, t) => e.index - t.index).map(e => ({
                        id: e.id,
                        name: e.name
                    })),
                    a = e(t);
                return {
                    input: {
                        available_devices: n(C.default.getInputDevices()),
                        device_id: t.inputDeviceId,
                        volume: t.inputVolume
                    },
                    output: {
                        available_devices: n(C.default.getOutputDevices()),
                        device_id: t.outputDeviceId,
                        volume: t.outputVolume
                    },
                    mode: {
                        type: t.mode,
                        auto_threshold: t.modeOptions.autoThreshold,
                        threshold: t.modeOptions.threshold,
                        shortcut: a,
                        delay: t.modeOptions.delay
                    },
                    automatic_gain_control: t.automaticGainControl,
                    echo_cancellation: t.echoCancellation,
                    noise_suppression: t.noiseSuppression,
                    qos: t.qos,
                    silence_warning: t.silenceWarning,
                    deaf: t.deaf,
                    mute: t.mute
                }
            }

            function z(e, t) {
                let n = C.default.getSettings(e),
                    a = t(n);
                return {
                    input_mode: {
                        type: n.mode,
                        shortcut: a
                    },
                    local_mutes: Object.keys(n.localMutes),
                    local_volumes: n.localVolumes,
                    self_mute: n.mute,
                    self_deaf: n.deaf
                }
            }

            function q(e) {
                if (e !== O.TransportTypes.POST_MESSAGE) throw new g.default(O.RPCErrors.INVALID_COMMAND, 'command not available from "'.concat(e, " transport"))
            }

            function Q(e) {
                if (null == e.id) throw new g.default(O.RPCErrors.INVALID_COMMAND, "Invalid application")
            }
        },
        65810: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                activityInstanceConnectedParticipants: function() {
                    return E
                },
                activityInstanceConnectedParticipantsScope: function() {
                    return f
                },
                activityInstanceConnectedParticipantsUpdateEvent: function() {
                    return _
                },
                subscribeToActivityInstanceConnectedParticipants: function() {
                    return I
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("913144"),
                i = n("191225"),
                r = n("697218"),
                o = n("449008"),
                u = n("387111"),
                d = n("694352"),
                c = n("49111");

            function E() {
                let e = i.default.getCurrentEmbeddedActivity();
                if (null == e) return {
                    participants: []
                };
                let {
                    guildId: t,
                    channelId: n
                } = e, a = Array.from(e.connections.values(), e => {
                    let {
                        user_id: a
                    } = e, s = r.default.getUser(a);
                    if (null == s) return;
                    let l = (0, u.getNickname)(t, n, s);
                    return {
                        ...(0, d.default)(s),
                        nickname: null != l ? l : void 0
                    }
                }).filter(o.isNotNullish);
                return {
                    participants: a
                }
            }
            let f = {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE]
                },
                _ = {
                    scope: f,
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = E();
                        return !s.isEqual(a, t) && n(a), a
                    }
                };

            function I(e) {
                let t = "EMBEDDED_ACTIVITY_INBOUND_UPDATE",
                    n = () => {
                        e(E())
                    };
                return l.default.subscribe(t, n), () => l.default.unsubscribe(t, n)
            }
        },
        716724: function(e, t, n) {
            "use strict";

            function a(e) {
                return e.object().unknown(!0)
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        613652: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("191225"),
                s = n("42203");

            function l() {
                let e = a.default.getConnectedActivityChannelId();
                return s.default.getChannel(e)
            }
        },
        856116: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("49111");
            let s = "<removed>";

            function l(e) {
                var t, n;
                let l = {
                    ...e
                };
                if ("object" == typeof(t = l).args && "string" == typeof t.cmd) l = function(e) {
                    if (e.cmd === a.RPCCommands.AUTHENTICATE) return {
                        ...e,
                        args: {
                            ...e.args,
                            access_token: s
                        }
                    };
                    return {
                        ...e
                    }
                }(l);
                if ("object" == typeof(n = l).data && "string" == typeof n.cmd) l = function(e) {
                    if (e.cmd === a.RPCCommands.AUTHENTICATE) return {
                        ...e,
                        data: {
                            ...e.data,
                            access_token: s
                        }
                    };
                    return {
                        ...e
                    }
                }(l);
                return l
            }
        },
        961400: function(e, t, n) {
            "use strict";

            function a(e) {
                return {
                    name: e.name,
                    id: e.id,
                    icon: e.icon,
                    cover_image: e.coverImage,
                    type: e.type
                }
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        207873: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                validateOpenInviteDialog: function() {
                    return u
                }
            });
            var a = n("242757"),
                s = n("305961"),
                l = n("957255"),
                i = n("861309"),
                r = n("613652"),
                o = n("49111");

            function u() {
                let e = (0, r.default)();
                if (null == e) throw new i.default(o.RPCErrors.INVALID_CHANNEL, "Invalid channel");
                let t = s.default.getGuild(e.getGuildId());
                if (null == t) throw new i.default(o.RPCErrors.INVALID_CHANNEL, "Invalid guild ".concat(e.getGuildId()));
                if (!(0, a.canViewInviteModal)(l.default, t, e)) throw new i.default(o.RPCErrors.INVALID_PERMISSIONS, "No invite permissions for ".concat(e.id));
                return {
                    channel: e,
                    guild: t
                }
            }
        },
        383928: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                validateTransportType: function() {
                    return l
                }
            });
            var a = n("861309"),
                s = n("49111");

            function l(e) {
                if (s.TransportTypes.IPC !== e && s.TransportTypes.POST_MESSAGE !== e) throw new a.default(s.RPCErrors.INVALID_COMMAND, "Invalid transport.")
            }
        },
        748900: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("499031"),
                o = n("42203"),
                u = n("26989"),
                d = n("305961"),
                c = n("260320"),
                E = n("169602"),
                f = n("42887"),
                _ = n("824563"),
                I = n("945956"),
                h = n("27618"),
                C = n("18494"),
                T = n("843823"),
                m = n("697218"),
                S = n("800762"),
                N = n("599110"),
                A = n("449008"),
                p = n("773336"),
                g = n("578287"),
                R = n("65810"),
                O = n("694352"),
                L = n("49111"),
                M = n("954016"),
                v = n("353927");
            class D {
                loadServer() {
                    for (let e of (p.isPlatformEmbedded && this.registerTransportsForEmbeddedPlatform(), this.transports)) this.rpcServer.registerTransport(e);
                    let e = this.rpcCommandHandlers;
                    for (let [t, n] of Object.entries(e)) this.rpcServer.setCommandHandler(t, n);
                    let t = this.rpcEventHandlers;
                    for (let [e, n] of Object.entries(t)) this.rpcServer.setEventHandler(e, n)
                }
                init() {
                    this.rpcServer.getCurrentUser = () => m.default.getCurrentUser(), this.rpcServer.onConnect = e => {
                        i.default.dispatch({
                            type: "RPC_APP_CONNECTED",
                            socketId: e.id,
                            application: e.application
                        }), N.default.track(L.AnalyticEvents.AUTHORIZED_APP_CONNECTED, {
                            app_id: e.application.id,
                            transport: e.transport
                        })
                    }, this.rpcServer.onDisconnect = (e, t) => {
                        i.default.dispatch({
                            type: "RPC_APP_DISCONNECTED",
                            socketId: e.id,
                            application: e.application,
                            reason: t
                        })
                    };
                    let e = [o.default, u.default, _.default, S.default, f.default, I.default],
                        t = new l.BatchedStoreListener(e.concat(this.stores), () => this.rpcServer.updateSubscriptions());
                    t.attach("RPCServerManager"), i.default.subscribe("MESSAGE_CREATE", e => this.handleMessage(e)), i.default.subscribe("MESSAGE_UPDATE", e => this.handleMessage(e)), i.default.subscribe("MESSAGE_DELETE", e => this.handleMessage(e)), i.default.subscribe("SPEAKING", e => this.handleSpeaking(e)), i.default.subscribe("OAUTH2_TOKEN_REVOKE", e => this.handleOAuth2TokenRevoke(e)), i.default.subscribe("GUILD_CREATE", e => this.handleGuildCreate(e)), i.default.subscribe("CHANNEL_CREATE", e => this.handleChannelCreate(e)), i.default.subscribe("LOGOUT", () => this.handleLogout()), i.default.subscribe("VOICE_CHANNEL_SELECT", e => this.handleVoiceChannelSelect(e)), i.default.subscribe("RPC_NOTIFICATION_CREATE", e => this.handleNotificationCreate(e)), i.default.subscribe("ACTIVITY_JOIN", e => this.handleActivityJoin(e)), i.default.subscribe("ACTIVITY_LAYOUT_MODE_UPDATE", e => this.handleActivityLayoutModeUpdate(e)), i.default.subscribe("THERMAL_STATE_CHANGE", e => this.handleThermalStateChange(e)), i.default.subscribe("ACTIVITY_SCREEN_ORIENTATION_UPDATE", e => this.handleScreenOrientationUpdate(e)), (0, R.subscribeToActivityInstanceConnectedParticipants)(e => this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE, {}, e)), i.default.subscribe("RELATIONSHIP_ADD", e => this.handleRelationshipAdd(e)), i.default.subscribe("RELATIONSHIP_REMOVE", e => this.handleRelationshipRemove(e)), i.default.subscribe("PRESENCE_UPDATES", e => this.handlePresenceUpdate(e)), i.default.subscribe("PRESENCES_REPLACE", () => this.handlePresencesReplace()), i.default.subscribe("LOBBY_UPDATE", e => this.handleLobbyUpdate(e)), i.default.subscribe("LOBBY_DELETE", e => this.handleLobbyDelete(e)), i.default.subscribe("LOBBY_MEMBER_CONNECT", e => this.handleLobbyMemberConnect(e)), i.default.subscribe("LOBBY_MEMBER_UPDATE", e => this.handleLobbyMemberUpdate(e)), i.default.subscribe("LOBBY_MEMBER_DISCONNECT", e => this.handleLobbyMemberDisconnect(e)), i.default.subscribe("LOBBY_MESSAGE", e => this.handleLobbyMessage(e)), i.default.subscribe("ENTITLEMENT_CREATE", e => this.handleEntitlementCreate(e)), i.default.subscribe("ENTITLEMENT_DELETE", e => this.handleEntitlementDelete(e)), i.default.subscribe("USER_ACHIEVEMENT_UPDATE", e => this.handleUserAchievementUpdate(e))
                }
                handleMessage(e) {
                    let t, n, a;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    "MESSAGE_CREATE" === e.type && this.handleActivityMessage(e);
                    let s = null;
                    switch (e.type) {
                        case "MESSAGE_CREATE":
                            if ("SENDING" === e.message.state) return;
                            t = L.RPCEvents.MESSAGE_CREATE, n = e.channelId, a = e.message, s = "".concat(t).concat(e.message.id);
                            break;
                        case "MESSAGE_UPDATE":
                            t = L.RPCEvents.MESSAGE_UPDATE, n = e.message.channel_id, a = e.message;
                            break;
                        case "MESSAGE_DELETE":
                            t = L.RPCEvents.MESSAGE_DELETE, n = e.channelId, a = {
                                id: e.id
                            }, s = "".concat(t).concat(e.id);
                            break;
                        default:
                            return (0, A.assertNever)(e)
                    }
                    null != n && this.rpcServer.dispatchToSubscriptions(t, {
                        channel_id: n
                    }, {
                        channel_id: n,
                        message: (0, g.transformInternalTextMessage)(a)
                    }, s)
                }
                handleSpeaking(e) {
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let t = 0 !== e.speakingFlags ? L.RPCEvents.SPEAKING_START : L.RPCEvents.SPEAKING_STOP;
                    if (e.context === v.MediaEngineContextTypes.DEFAULT) {
                        let n = C.default.getVoiceChannelId();
                        if (null != n) {
                            let a = o.default.getChannel(n);
                            if (null == a) return;
                            let s = S.default.getVoiceState(a.getGuildId(), e.userId);
                            if (null == s) return;
                            this.rpcServer.dispatchToSubscriptions(t, {
                                channel_id: s.channelId
                            }, {
                                channel_id: s.channelId,
                                user_id: e.userId
                            })
                        }
                    } else E.default.getLobbyIdsForUser(e.userId).forEach(n => {
                        let a = c.default.getLobby(n);
                        null != a && a.application_id === e.context && this.rpcServer.dispatchToSubscriptions(t, {}, {
                            lobby_id: n,
                            user_id: e.userId
                        })
                    })
                }
                handleVoiceChannelSelect(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.VOICE_CHANNEL_SELECT, {}, {
                        channel_id: n,
                        guild_id: t
                    })
                }
                handleNotificationCreate(e) {
                    let {
                        channelId: t,
                        message: n,
                        icon: a,
                        title: s,
                        body: l
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.NOTIFICATION_CREATE, {}, {
                        channel_id: t,
                        message: (0, g.transformInternalTextMessage)(n),
                        icon_url: null != a ? (0, g.getRemoteIconURL)(a) : null,
                        title: s,
                        body: l
                    })
                }
                handleActivityJoin(e) {
                    let {
                        applicationId: t,
                        secret: n,
                        intent: a,
                        embedded: s
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let l = {
                        secret: n
                    };
                    s && (l.intent = a), this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ACTIVITY_JOIN, e => e.socket.application.id === t, l), this.rpcServer.dispatchToSubscriptions(L.RPCEvents.GAME_JOIN, e => e.socket.application.id === t, l)
                }
                handleActivityLayoutModeUpdate(e) {
                    let {
                        applicationId: t,
                        layoutMode: n
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let a = n !== M.ActivityLayoutMode.FOCUSED;
                    this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ACTIVITY_PIP_MODE_UPDATE, e => e.socket.application.id === t, {
                        is_pip_mode: a
                    });
                    this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE, e => e.socket.application.id === t, {
                        layout_mode: n
                    })
                }
                handleThermalStateChange(e) {
                    let {
                        applicationId: t,
                        rawThermalState: n
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length || null == t) return;
                    let a = {
                        thermal_state: (0, r.default)(n)
                    };
                    this.rpcServer.dispatchToSubscriptions(L.RPCEvents.THERMAL_STATE_UPDATE, e => e.socket.application.id === t, a)
                }
                handleScreenOrientationUpdate(e) {
                    let {
                        screenOrientation: t
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let n = t === M.ActivityScreenOrientation.PORTRAIT ? "portrait" : "landscape";
                    this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ORIENTATION_UPDATE, {}, {
                        screen_orientation: t,
                        orientation: n
                    })
                }
                handleActivityMessage(e) {
                    var t;
                    let {
                        channelId: n,
                        message: a
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let {
                        application: s,
                        activity: l
                    } = a;
                    if (null == s || null == l || null == l.party_id) return;
                    let i = m.default.getUser(null === (t = a.author) || void 0 === t ? void 0 : t.id);
                    if (null == i) return;
                    let r = m.default.getCurrentUser();
                    if (null == r || i.id === r.id) return;
                    let o = l.type === L.ActivityActionTypes.JOIN_REQUEST ? _.default.getApplicationActivity(r.id, s.id) : _.default.getApplicationActivity(i.id, s.id);
                    if (null == o || null == o.party || o.party.id !== l.party_id) return;
                    let u = o.application_id;
                    switch (l.type) {
                        case L.ActivityActionTypes.JOIN:
                            this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ACTIVITY_INVITE, e => e.socket.application.id === u, {
                                user: (0, O.default)(i),
                                activity: o,
                                type: l.type,
                                channel_id: n,
                                message_id: a.id
                            });
                            break;
                        case L.ActivityActionTypes.JOIN_REQUEST:
                            this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ACTIVITY_JOIN_REQUEST, e => e.socket.application.id === u, {
                                user: (0, O.default)(i)
                            })
                    }
                }
                handleOAuth2TokenRevoke(e) {
                    let {
                        accessToken: t
                    } = e;
                    this.rpcServer.sockets.forEach(e => {
                        e.authorization.accessToken === t && e.close(L.RPCCloseCodes.TOKEN_REVOKED, "Token revoked")
                    })
                }
                handleGuildCreate(e) {
                    let {
                        guild: {
                            id: t
                        }
                    } = e, n = d.default.getGuild(t);
                    0 !== this.rpcServer.subscriptions.length && null != n && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.GUILD_CREATE, {}, {
                        id: t,
                        name: n.name
                    })
                }
                handleChannelCreate(e) {
                    let {
                        channel: {
                            id: t,
                            name: n,
                            type: a
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.CHANNEL_CREATE, {}, {
                        id: t,
                        name: n,
                        type: a
                    })
                }
                handleLogout() {
                    this.rpcServer.sockets.forEach(e => e.close(L.RPCCloseCodes.CLOSE_NORMAL, "User logout"))
                }
                handleRelationshipAdd(e) {
                    let {
                        relationship: {
                            id: t,
                            type: n
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, g.transformRelationship)(n, t))
                }
                handleRelationshipRemove(e) {
                    let {
                        relationship: {
                            id: t
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, g.transformRelationship)(L.RelationshipTypes.NONE, t))
                }
                handlePresenceUpdate(e) {
                    let {
                        updates: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && t.forEach(e => {
                        let {
                            guildId: t,
                            user: {
                                id: n
                            }
                        } = e;
                        if (null != t) return;
                        let a = h.default.getRelationshipType(n);
                        a === L.RelationshipTypes.NONE && T.default.getUserAffinitiesUserIds().has(n) && (a = L.RelationshipTypes.IMPLICIT), a !== L.RelationshipTypes.NONE && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, g.transformRelationship)(a, n))
                    })
                }
                handlePresencesReplace() {
                    0 !== this.rpcServer.subscriptions.length && s.forEach(h.default.getRelationships(), (e, t) => {
                        this.rpcServer.dispatchToSubscriptions(L.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, g.transformRelationship)(e, t))
                    })
                }
                handleLobbyUpdate(e) {
                    let {
                        lobby: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.LOBBY_UPDATE, {}, t)
                }
                handleLobbyDelete(e) {
                    let {
                        lobbyId: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.LOBBY_DELETE, {}, {
                        id: t
                    })
                }
                handleLobbyMemberConnect(e) {
                    let {
                        lobbyId: t,
                        member: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.LOBBY_MEMBER_CONNECT, {}, {
                        lobby_id: t,
                        member: n
                    })
                }
                handleLobbyMemberUpdate(e) {
                    let {
                        lobbyId: t,
                        member: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.LOBBY_MEMBER_UPDATE, {}, {
                        lobby_id: t,
                        member: n
                    })
                }
                handleLobbyMemberDisconnect(e) {
                    let {
                        lobbyId: t,
                        member: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.LOBBY_MEMBER_DISCONNECT, {}, {
                        lobby_id: t,
                        member: n
                    })
                }
                handleLobbyMessage(e) {
                    let {
                        lobbyId: t,
                        senderId: n,
                        data: a
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.LOBBY_MESSAGE, {}, {
                        lobby_id: t,
                        sender_id: n,
                        data: a
                    })
                }
                handleEntitlementCreate(e) {
                    let {
                        entitlement: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ENTITLEMENT_CREATE, e => e.socket.application.id === t.application_id, {
                        entitlement: t
                    })
                }
                handleEntitlementDelete(e) {
                    let {
                        entitlement: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(L.RPCEvents.ENTITLEMENT_DELETE, e => e.socket.application.id === t.application_id, {
                        entitlement: t
                    })
                }
                handleUserAchievementUpdate(e) {
                    let {
                        userAchievement: t
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let {
                        application_id: n
                    } = t;
                    this.rpcServer.dispatchToSubscriptions(L.RPCEvents.USER_ACHIEVEMENT_UPDATE, e => e.socket.application.id === n, {
                        user_achievement: t
                    })
                }
                constructor(e) {
                    this.rpcServer = e.server, this.transports = e.transports, this.rpcCommandHandlers = e.commands, this.rpcEventHandlers = e.events, this.stores = e.stores, this.registerTransportsForEmbeddedPlatform = e.registerTransportsForEmbeddedPlatform
                }
            }
        },
        18520: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("522632"),
                s = n("316693"),
                l = n("872717"),
                i = n("524297"),
                r = n("95410"),
                o = n("913144"),
                u = n("8222"),
                d = n("357974"),
                c = n("697218"),
                E = n("991170"),
                f = n("861309"),
                _ = n("49111");
            let I = "CachedTokens";
            async function h(e, t, n) {
                let a, {
                    client_id: l,
                    response_type: i = "code",
                    redirect_uri: r,
                    code_challenge: o,
                    code_challenge_method: I,
                    state: h,
                    scope: C,
                    permissions: T,
                    guild_id: m,
                    channel_id: S,
                    prompt: N,
                    disable_guild_select: A
                } = e;
                if (null == l) throw new f.default(_.RPCErrors.OAUTH2_ERROR, "No Client ID provided");
                if (null != r) throw new f.default(_.RPCErrors.OAUTH2_ERROR, "Redirect URI cannot be used in the RPC OAuth2 Authorization flow");
                let p = [];
                "string" == typeof C ? p = C.split(" ").filter(e => e.length > 0) : Array.isArray(C) && (p = C);
                let g = c.default.getCurrentUser();
                if (null == g) throw new f.default(_.RPCErrors.OAUTH2_ERROR, "Client is not logged in");
                try {
                    a = await (0, u.fetchAuthorization)({
                        clientId: l,
                        scopes: p,
                        responseType: i,
                        redirectUri: r,
                        codeChallenge: o,
                        codeChallengeMethod: I,
                        state: h
                    })
                } catch (t) {
                    let {
                        body: e
                    } = t;
                    throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Authorization Error: ".concat(e.message || "Unknown Error"))
                }
                if (N === d.OAuth2Prompts.NONE && null != a && a.authorized) try {
                    let e = await (0, u.authorize)({
                        authorize: !0,
                        clientId: l,
                        scopes: p,
                        responseType: i,
                        redirectUri: r,
                        codeChallenge: o,
                        codeChallengeMethod: I,
                        state: h
                    });
                    return e.location
                } catch (t) {
                    let {
                        body: e
                    } = t;
                    throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Authorize Error: ".concat(e.message || "Unknown Error"))
                }
                null == n || n(a.application);
                let R = E.default.NONE;
                try {
                    R = s.default.deserialize(null != T ? T : 0)
                } catch (e) {}
                return t(l, a, p, R, i, r, o, I, h, m, S, N, A)
            }

            function C(e, t) {
                if (e.authorization.accessToken) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authenticated");
                if (e.authorization.authing) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authenticating");
                return e.authorization.authing = !0, l.default.get({
                    url: _.Endpoints.OAUTH2_CURRENT_AUTH,
                    headers: {
                        Authorization: "Bearer ".concat(t)
                    },
                    oldFormErrors: !0
                }).then(n => {
                    e.authorization.authing = !1;
                    let {
                        application: a,
                        user: s,
                        scopes: l,
                        expires: i
                    } = n.body;
                    if (e.application.id !== a.id) throw new f.default(_.RPCErrors.INVALID_CLIENTID, "Application does not match the connection's");
                    let r = c.default.getCurrentUser();
                    if (null == r || !s || r.id !== s.id) throw new f.default(_.RPCErrors.INVALID_TOKEN, "Token does not match current user");
                    return e.authorization.scopes = [...e.authorization.scopes, ...l, _.RPC_AUTHENTICATED_SCOPE], e.authorization.accessToken = t, e.authorization.expires = new Date(i), o.default.dispatch({
                        type: "RPC_APP_AUTHENTICATED",
                        socketId: e.id,
                        application: e.application
                    }), {
                        ...n.body,
                        access_token: t
                    }
                }, () => {
                    throw new f.default(_.RPCErrors.INVALID_TOKEN, "Invalid access token: ".concat(t))
                }).catch(t => {
                    throw e.authorization.authing = !1, t
                })
            }

            function T(e, t) {
                return {
                    [_.RPCCommands.AUTHENTICATE]: (0, i.createRPCCommand)(_.RPCCommands.AUTHENTICATE, {
                        handler(n) {
                            let {
                                socket: s,
                                args: {
                                    access_token: l
                                }
                            } = n;
                            if (null == l && s.transport === _.TransportTypes.IPC) {
                                let n = s.application.id;
                                if (null == n) throw new f.default(_.RPCErrors.INVALID_COMMAND, "No application.");
                                let i = _.OAuth2Scopes.IDENTIFY,
                                    o = () => h({
                                        client_id: n,
                                        scope: i,
                                        response_type: "token"
                                    }, e, t).then(e => {
                                        if (null == e) throw new f.default(_.RPCErrors.UNKNOWN_ERROR, "Unknown error occurred");
                                        let t = e.split(/#|\?/),
                                            l = a.parse(t[t.length - 1]);
                                        if (null != l.error) {
                                            var i;
                                            throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Error: ".concat(l.error, ": ").concat(null !== (i = l.error_description) && void 0 !== i ? i : "unknown error"))
                                        }
                                        return ! function(e, t, n, a) {
                                            var s;
                                            let l = null !== (s = r.default.get(I)) && void 0 !== s ? s : {};
                                            l[e] = {
                                                accessToken: t,
                                                scope: n,
                                                expires: Date.now() + a
                                            }, r.default.set(I, l)
                                        }(n, l.access_token, l.scope, l.expires_in), C(s, l.access_token)
                                    });
                                return null != (l = function(e, t) {
                                    let n = r.default.get(I);
                                    if (null != n && null != n[e]) {
                                        let a = n[e];
                                        if (!(a.scope !== t || a.expires <= Date.now())) return a.accessToken;
                                        delete n[e], r.default.set(I, n)
                                    }
                                }(n, i)) ? C(s, l).catch(() => (! function(e) {
                                    var t;
                                    let n = null !== (t = r.default.get(I)) && void 0 !== t ? t : {};
                                    delete n[e], r.default.set(I, n)
                                }(n), o())) : o()
                            }
                            if (null == l) throw new f.default(_.RPCErrors.INVALID_TOKEN, "No access token provided");
                            return C(s, l)
                        }
                    }),
                    [_.RPCCommands.AUTHORIZE]: {
                        handler(n) {
                            let {
                                socket: s,
                                args: i
                            } = n, r = i.client_id;
                            if (!r) throw new f.default(_.RPCErrors.INVALID_CLIENTID, "No client id provided");
                            if (null != s.authorization.accessToken) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authenticated");
                            if (s.authorization.authing) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authing");
                            return s.authorization.authing = !0, l.default.get({
                                url: _.Endpoints.APPLICATION_RPC(r),
                                oldFormErrors: !0
                            }).then(n => {
                                let a = n.body;
                                if (s.application.id !== a.id) throw new f.default(_.RPCErrors.INVALID_CLIENTID, "Application does not match the connection's");
                                let l = i.scopes || i.scope;
                                return delete i.scopes, h({
                                    ...i,
                                    scope: l
                                }, e, t)
                            }, () => {
                                throw new f.default(_.RPCErrors.INVALID_CLIENTID, "Invalid client id: ".concat(r))
                            }).then(e => {
                                if (s.authorization.authing = !1, null == e) throw new f.default(_.RPCErrors.UNKNOWN_ERROR, "Unknown error occurred");
                                let t = a.parse(e.split("?")[1].split("#")[0]);
                                if (null != t.error) {
                                    var n;
                                    throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Error: ".concat(t.error, ": ").concat(null !== (n = t.error_description) && void 0 !== n ? n : "unknown error"))
                                }
                                return {
                                    code: t.code
                                }
                            }).catch(e => {
                                throw s.authorization.authing = !1, e
                            })
                        }
                    }
                }
            }
        },
        381759: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("831314"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = {
                    [i.RPCCommands.SET_USER_ACHIEVEMENT]: {
                        scope: {
                            [i.RPC_SCOPE_CONFIG.ANY]: [i.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE]
                        },
                        validation: e => (0, l.default)(e).required().keys({
                            achievement_id: e.string().min(2).max(128),
                            percent_complete: e.number().min(0).max(100).required()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    achievement_id: n,
                                    percent_complete: l
                                }
                            } = e, r = t.application.id;
                            if (null == r) throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.");
                            return a.default.setUserAchievement(r, n, l).catch(e => {
                                let {
                                    status: t,
                                    body: n
                                } = e;
                                switch (t) {
                                    case 429:
                                        throw new s.default(i.RPCErrors.RATE_LIMITED, "You are being rate limited.");
                                    case 403:
                                        if (null != n && n.code === i.AbortCodes.USER_NOT_AUTHORIZED_FOR_APPLICATION) throw new s.default(i.RPCErrors.UNAUTHORIZED_FOR_ACHIEVEMENT, "Not authorized to update this achievement.");
                                        throw new s.default(i.RPCErrors.UNKNOWN_ERROR, "Unknown error from API. status=".concat(t, "."));
                                    default:
                                        throw new s.default(i.RPCErrors.UNKNOWN_ERROR, "Unknown error from API. status=".concat(t, "."))
                                }
                            }).then(() => null)
                        }
                    },
                    [i.RPCCommands.GET_USER_ACHIEVEMENTS]: {
                        scope: {
                            [i.RPC_SCOPE_CONFIG.ANY]: [i.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE]
                        },
                        handler(e) {
                            let {
                                socket: t
                            } = e, n = t.application.id;
                            if (null == n) throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.");
                            return a.default.fetchForApplication(n).then(e => e || [])
                        }
                    }
                }
        },
        878705: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("872717"),
                s = n("84460"),
                l = n("546463"),
                i = n("167726"),
                r = n("599110"),
                o = n("568734"),
                u = n("861309"),
                d = n("578287"),
                c = n("716724"),
                E = n("613652"),
                f = n("49111"),
                _ = {
                    [f.RPCCommands.SEND_ANALYTICS_EVENT]: {
                        validation: e => (0, c.default)(e).required().keys({
                            event_name: e.string().required(),
                            event_properties: e.object().required()
                        }),
                        handler(e) {
                            var t;
                            let {
                                socket: n,
                                args: {
                                    event_name: a,
                                    event_properties: s
                                }
                            } = e;
                            (0, d.validatePostMessageTransport)(n.transport), (0, d.validateApplication)(n.application);
                            let i = n.application.id,
                                c = (0, E.default)(),
                                _ = null == c ? void 0 : c.getGuildId();
                            if (null == c) throw new u.default(f.RPCErrors.INVALID_COMMAND, "Invalid channel");
                            let I = l.default.getGame(i),
                                h = (0, o.hasFlag)(null !== (t = null == I ? void 0 : I.flags) && void 0 !== t ? t : 0, f.ApplicationFlags.EMBEDDED_FIRST_PARTY);
                            if (!h) throw new u.default(f.RPCErrors.INVALID_COMMAND, "This application cannot access this API");
                            r.default.track(a, {
                                ...s,
                                activity_application_id: i,
                                activity_guild_id: _
                            })
                        }
                    },
                    [f.RPCCommands.GET_APPLICATION_TICKET]: {
                        scope: f.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t
                            } = e, n = t.application.id;
                            if (null == n) throw new u.default(f.RPCErrors.INVALID_COMMAND, "No application.");
                            return a.default.post({
                                url: f.Endpoints.APPLICATION_TICKET(n),
                                body: {
                                    test_mode: i.default.inTestModeForApplication(n) || s.default.inDevModeForApplication(n)
                                },
                                retries: 3,
                                oldFormErrors: !0
                            }).then(e => {
                                let {
                                    body: t
                                } = e;
                                return t
                            })
                        }
                    }
                }
        },
        268801: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("17434"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = n("353927"),
                o = {
                    [i.RPCCommands.SET_CERTIFIED_DEVICES]: {
                        scope: {
                            [i.RPC_SCOPE_CONFIG.ANY]: [i.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE]
                        },
                        validation: e => (0, l.default)(e).required().keys({
                            devices: e.array().items((0, l.default)(e).keys({
                                type: e.string().required().valid([r.DeviceTypes.AUDIO_INPUT, r.DeviceTypes.AUDIO_OUTPUT, r.DeviceTypes.VIDEO_INPUT]),
                                id: e.string().required().min(1),
                                vendor: e.object().required().keys({
                                    name: e.string().min(1),
                                    url: e.string().min(1)
                                }),
                                model: e.object().required().keys({
                                    name: e.string().min(1),
                                    url: e.string().min(1)
                                }),
                                related: e.array().items(e.string().min(1)),
                                echo_cancellation: e.boolean(),
                                noise_suppression: e.boolean(),
                                automatic_gain_control: e.boolean(),
                                hardware_mute: e.boolean()
                            }))
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    devices: n
                                }
                            } = e;
                            if (null == t.application.id) throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.");
                            (0, a.setCertifiedDevices)(t.application.id, n.map(e => ({
                                type: e.type,
                                id: e.id,
                                vendor: e.vendor,
                                model: e.model,
                                related: e.related.filter(e => n.some(t => t.id === e)),
                                echoCancellation: e.echo_cancellation,
                                noiseSuppression: e.noise_suppression,
                                automaticGainControl: e.automatic_gain_control,
                                hardwareMute: e.hardware_mute
                            })))
                        }
                    }
                }
        },
        523834: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("970728"),
                i = n("987317"),
                r = n("393414"),
                o = n("233069"),
                u = n("42203"),
                d = n("305961"),
                c = n("957255"),
                E = n("18494"),
                f = n("800762"),
                _ = n("404008"),
                I = n("861309"),
                h = n("578287"),
                C = n("716724"),
                T = n("613652"),
                m = n("49111"),
                S = {
                    [m.RPCCommands.GET_CHANNEL]: {
                        scope: {
                            [m.RPC_SCOPE_CONFIG.ANY]: [m.OAuth2Scopes.RPC, m.OAuth2Scopes.GUILDS]
                        },
                        handler(e) {
                            let {
                                args: {
                                    channel_id: t
                                },
                                socket: n
                            } = e, a = u.default.getChannel(t);
                            if (null == a) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                            if (a.isPrivate()) {
                                let e = n.authorization.scopes;
                                if (!e.includes(m.OAuth2Scopes.RPC) && !e.includes(m.OAuth2Scopes.DM_CHANNELS_READ)) throw new I.default(m.RPCErrors.INVALID_PERMISSIONS, "Invalid scope")
                            }
                            return (0, h.transformChannel)(a, (0, h.hasMessageReadPermission)(a, n.application.id, n.authorization.scopes))
                        }
                    },
                    [m.RPCCommands.GET_CHANNELS]: {
                        scope: m.OAuth2Scopes.RPC,
                        handler(e) {
                            let {
                                args: {
                                    guild_id: t
                                }
                            } = e, n = s.values(u.default.loadAllGuildAndPrivateChannelsFromDisk());
                            if (t) {
                                let e = d.default.getGuild(t);
                                if (null == e) throw new I.default(m.RPCErrors.INVALID_GUILD, "Invalid guild id: ".concat(t));
                                n = n.filter(t => {
                                    let {
                                        guild_id: n
                                    } = t;
                                    return n === e.id
                                })
                            }
                            return {
                                channels: n.filter(e => c.default.can(m.Permissions.VIEW_CHANNEL, e)).map(e => {
                                    let {
                                        id: t,
                                        name: n,
                                        type: a
                                    } = e;
                                    return {
                                        id: t,
                                        name: n,
                                        type: a
                                    }
                                })
                            }
                        }
                    },
                    [m.RPCCommands.GET_CHANNEL_PERMISSIONS]: {
                        scope: m.OAuth2Scopes.GUILDS_MEMBERS_READ,
                        handler(e) {
                            let t = (0, T.default)();
                            if (null == t) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "Invalid channel");
                            return {
                                permissions: c.default.computePermissions(t)
                            }
                        }
                    },
                    [m.RPCCommands.SELECT_VOICE_CHANNEL]: {
                        scope: m.OAuth2Scopes.RPC,
                        validation: e => (0, C.default)(e).required().keys({
                            channel_id: e.string().allow(null),
                            timeout: e.number().min(0).max(60),
                            force: e.boolean(),
                            navigate: e.boolean()
                        }),
                        handler(e) {
                            let {
                                server: t,
                                socket: n,
                                args: {
                                    channel_id: a,
                                    timeout: s = 0,
                                    force: l = !1,
                                    navigate: C = !1
                                }
                            } = e;
                            if (!a) return i.default.selectVoiceChannel(null), null;
                            let T = E.default.getVoiceChannelId();
                            if (null != T && T !== a && !1 === l) throw new I.default(m.RPCErrors.SELECT_VOICE_FORCE_REQUIRED, "User is already joined to a voice channel.");
                            return t.storeWait(n, () => u.default.getChannel(a), s).catch(() => {
                                throw new I.default(m.RPCErrors.SELECT_CHANNEL_TIMED_OUT, "Request to select voice channel timed out.")
                            }).then(e => {
                                if (null == e) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(a));
                                if (!(0, o.isVoiceChannel)(e.type)) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "Channel is not a voice channel");
                                return Promise.all([Promise.resolve(e), (0, h.transformChannel)(e, (0, h.hasMessageReadPermission)(e, n.application.id, n.authorization.scopes))])
                            }).then(e => {
                                let [t, n] = e;
                                if (n.guild_id) {
                                    if ((0, _.isChannelFull)(t, f.default, d.default)) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "Channel is full");
                                    if (!c.default.can(m.Permissions.CONNECT, t)) throw new I.default(m.RPCErrors.INVALID_PERMISSIONS, "Connect permission required to join channel")
                                }
                                return i.default.selectVoiceChannel(t.id), C && (0, r.replaceWith)(m.Routes.CHANNEL(t.guild_id, t.id)), n
                            })
                        }
                    },
                    [m.RPCCommands.GET_SELECTED_VOICE_CHANNEL]: {
                        scope: {
                            [m.RPC_SCOPE_CONFIG.ANY]: [m.OAuth2Scopes.RPC, m.OAuth2Scopes.RPC_VOICE_READ]
                        },
                        handler(e) {
                            let {
                                socket: t
                            } = e, n = E.default.getVoiceChannelId(), a = null != n ? u.default.getChannel(n) : null;
                            return null != a ? (0, h.transformChannel)(a, (0, h.hasMessageReadPermission)(a, t.application.id, t.authorization.scopes)) : null
                        }
                    },
                    [m.RPCCommands.SELECT_TEXT_CHANNEL]: {
                        scope: m.OAuth2Scopes.RPC,
                        validation: e => (0, C.default)(e).required().keys({
                            channel_id: e.string().allow(null),
                            timeout: e.number().min(0).max(60)
                        }),
                        handler(e) {
                            let {
                                server: t,
                                socket: n,
                                args: {
                                    channel_id: a,
                                    timeout: s = 0
                                }
                            } = e;
                            return a ? t.storeWait(n, () => u.default.getChannel(a), s).catch(() => {
                                throw new I.default(m.RPCErrors.SELECT_CHANNEL_TIMED_OUT, "Request to select text channel timed out.")
                            }).then(e => {
                                if (null == e) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(a));
                                if (!(0, o.isTextChannel)(e.type)) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "Channel is not a text channel");
                                return Promise.all([Promise.resolve(e), (0, h.transformChannel)(e, (0, h.hasMessageReadPermission)(e, n.application.id, n.authorization.scopes))])
                            }).then(e => {
                                let [t, n] = e;
                                if (n.guild_id && !c.default.can(m.Permissions.VIEW_CHANNEL, t)) throw new I.default(m.RPCErrors.INVALID_CHANNEL, "No permission to see channel");
                                return n.guild_id ? (0, r.replaceWith)(m.Routes.CHANNEL(n.guild_id, t.id)) : i.default.selectPrivateChannel(t.id), n
                            }) : ((0, r.transitionTo)(m.Routes.ME), null)
                        }
                    },
                    [m.RPCCommands.CREATE_CHANNEL_INVITE]: {
                        scope: m.OAuth2Scopes.RPC,
                        handler(e) {
                            let {
                                args: {
                                    channel_id: t,
                                    ...n
                                }
                            } = e;
                            return l.default.createInvite(t, n, "RPC").catch(() => {
                                throw new I.default(m.RPCErrors.INVALID_PERMISSIONS, "Unable to generate an invite for ".concat(t, ". Does this user have permissions?"))
                            })
                        }
                    }
                }
        },
        418194: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("913144"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = {
                    [i.RPCCommands.SET_CONFIG]: {
                        scope: i.RPC_AUTHENTICATED_SCOPE,
                        validation: e => (0, l.default)(e).required().keys({
                            use_interactive_pip: e.boolean()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    use_interactive_pip: n
                                }
                            } = e;
                            if (t.transport !== i.TransportTypes.POST_MESSAGE) throw new s.default(i.RPCErrors.INVALID_COMMAND, 'command not available from "'.concat(t.transport, " transport"));
                            if (null == t.application.id) throw new s.default(i.RPCErrors.INVALID_COMMAND, "invalid application");
                            return a.default.dispatch({
                                type: "EMBEDDED_ACTIVITY_SET_CONFIG",
                                applicationId: t.application.id,
                                config: {
                                    useInteractivePIP: n
                                }
                            }), Promise.resolve({
                                use_interactive_pip: n
                            })
                        }
                    }
                }
        },
        84090: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                crossPlatformCommands: function() {
                    return p
                }
            });
            var a = n("381759"),
                s = n("878705"),
                l = n("268801"),
                i = n("523834"),
                r = n("418194"),
                o = n("156965"),
                u = n("234933"),
                d = n("568887"),
                c = n("336566"),
                E = n("899114"),
                f = n("709963"),
                _ = n("258316"),
                I = n("881963"),
                h = n("88321"),
                C = n("473902"),
                T = n("673090"),
                m = n("108087"),
                S = n("657322"),
                N = n("220795"),
                A = n("272279");
            let p = {
                ...a.default,
                ...s.default,
                ...l.default,
                ...i.default,
                ...r.default,
                ...o.default,
                ...u.default,
                ...d.default,
                ...c.default,
                ...E.default,
                ...f.default,
                ...I.default,
                ...h.default,
                ...C.default,
                ...m.default,
                ...S.default,
                ...A.default,
                ...N.default,
                ..._.default,
                ...T.default
            }
        },
        156965: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("305961"),
                i = n("861309"),
                r = n("716724"),
                o = n("49111"),
                u = {
                    [o.RPCCommands.GET_GUILD]: {
                        scope: o.OAuth2Scopes.RPC,
                        validation: e => (0, r.default)(e).required().keys({
                            guild_id: e.string(),
                            timeout: e.number().min(0).max(60)
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                server: n,
                                args: {
                                    guild_id: a,
                                    timeout: s = 0
                                }
                            } = e;
                            return n.storeWait(t, () => l.default.getGuild(a), s).catch(() => {
                                throw new i.default(o.RPCErrors.GET_GUILD_TIMED_OUT, "Request to get guild timed out.")
                            }).then(e => {
                                var t;
                                if (null == e) throw new i.default(o.RPCErrors.INVALID_GUILD, "Invalid guild id: ".concat(a));
                                return {
                                    id: e.id,
                                    name: e.name,
                                    icon_url: null !== (t = e.getIconURL(128)) && void 0 !== t ? t : null,
                                    members: [],
                                    vanity_url_code: e.vanityURLCode
                                }
                            })
                        }
                    },
                    [o.RPCCommands.GET_GUILDS]: {
                        scope: o.OAuth2Scopes.RPC,
                        handler() {
                            let e = l.default.getGuilds();
                            return {
                                guilds: s.map(e, e => ({
                                    id: e.id,
                                    name: e.name,
                                    icon_url: e.getIconURL(128)
                                }))
                            }
                        }
                    }
                }
        },
        234933: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("697218"),
                s = n("315102"),
                l = n("103603"),
                i = n("861309"),
                r = n("716724"),
                o = n("49111"),
                u = {
                    [o.RPCCommands.GET_IMAGE]: {
                        scope: o.RPC_LOCAL_SCOPE,
                        validation: e => (0, r.default)(e).required().keys({
                            type: e.string().required().valid(["user"]),
                            id: e.string().required(),
                            format: e.string().required().valid(["png", "webp", "jpg"]),
                            size: e.number().required().valid([16, 32, 64, 128, 256, 512, 1024])
                        }),
                        handler(e) {
                            let t, {
                                args: {
                                    type: n,
                                    id: r,
                                    format: u = "png",
                                    size: d = 128
                                }
                            } = e;
                            if ("user" === n) {
                                let e = a.default.getUser(r);
                                if (null != e) {
                                    t = s.default.getUserAvatarURL(e, !1, d, u);
                                    let n = window.GLOBAL_ENV.CDN_HOST;
                                    null != n && -1 !== t.indexOf(n) && (t += "&_=")
                                } else throw new i.default(o.RPCErrors.INVALID_USER, "Invalid user id: ".concat(r))
                            }
                            if (null == t) throw new i.default(o.RPCErrors.INVALID_COMMAND, "No valid type.");
                            return fetch(t).then(e => e.blob()).then(e => (0, l.readFileAsBase64)(e)).then(e => ({
                                data_url: e
                            }))
                        }
                    }
                }
        },
        568887: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("922932"),
                s = n("128259"),
                l = n("773336"),
                i = n("861309"),
                r = n("578287"),
                o = n("716724"),
                u = n("49111"),
                d = {
                    [u.RPCCommands.OPEN_EXTERNAL_LINK]: {
                        validation: e => (0, o.default)(e).required().keys({
                            url: e.string().required()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    url: n
                                }
                            } = e;
                            (0, r.validatePostMessageTransport)(t.transport);
                            try {
                                let e = new URL(n);
                                l.isPlatformEmbedded && a.default.focus(null, !0), (0, s.handleClick)({
                                    href: e.toString()
                                })
                            } catch (e) {
                                throw new i.default(u.RPCErrors.INVALID_COMMAND, "Invalid URL: ".concat(n))
                            }
                        }
                    }
                }
        },
        336566: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("297726");
            n("216391");
            var s = n("260320"),
                l = n("861309"),
                i = n("716724"),
                r = n("49111");

            function o(e) {
                if (e instanceof s.LobbyError) switch (e.code) {
                    case r.LobbyErrors.FULL:
                        throw new l.default(r.RPCErrors.LOBBY_FULL, "Lobby is full.");
                    case r.LobbyErrors.INVALID_SECRET:
                        throw new l.default(r.RPCErrors.INVALID_LOBBY_SECRET, "Lobby secret is invalid.");
                    case r.LobbyErrors.NOT_FOUND:
                        throw new l.default(r.RPCErrors.INVALID_LOBBY, "Lobby does not exist.");
                    case r.LobbyErrors.SERVICE_UNAVAILABLE:
                        throw new l.default(r.RPCErrors.SERVICE_UNAVAILABLE, "Lobby service is unavailable.");
                    case r.LobbyErrors.ALREADY_CONNECTING:
                        throw new l.default(r.RPCErrors.INVALID_COMMAND, "Already connecting to lobby.");
                    default:
                        throw new l.default(r.RPCErrors.UNKNOWN_ERROR, "Unknown error has occured.")
                }
                throw e
            }
            var u = {
                [r.RPCCommands.CREATE_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        type: e.number().valid(Object.values(r.LobbyTypes)),
                        capacity: e.number(),
                        locked: e.boolean(),
                        metadata: e.object()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                capacity: s,
                                locked: i,
                                metadata: u
                            }
                        } = e;
                        if (null == t.application.id) throw new l.default(r.RPCErrors.INVALID_COMMAND, "No application.");
                        return (0, a.createLobby)(t.id, t.application.id, {
                            type: n,
                            capacity: s,
                            locked: i,
                            metadata: u
                        }).catch(o)
                    }
                },
                [r.RPCCommands.UPDATE_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required(),
                        type: e.number().valid(Object.values(r.LobbyTypes)),
                        owner_id: e.string(),
                        capacity: e.number(),
                        locked: e.boolean(),
                        metadata: (0, i.default)(e)
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t,
                                type: n,
                                owner_id: s,
                                capacity: l,
                                locked: i,
                                metadata: r
                            }
                        } = e;
                        return (0, a.updateLobby)(t, {
                            type: n,
                            owner_id: s,
                            capacity: l,
                            locked: i,
                            metadata: r
                        }).catch(o)
                    }
                },
                [r.RPCCommands.DELETE_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        return (0, a.deleteLobby)(t).catch(o)
                    }
                },
                [r.RPCCommands.UPDATE_LOBBY_MEMBER]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        lobby_id: e.string().required(),
                        user_id: e.string().required(),
                        metadata: (0, i.default)(e)
                    }),
                    handler(e) {
                        let {
                            args: {
                                lobby_id: t,
                                user_id: n,
                                metadata: s
                            }
                        } = e;
                        return (0, a.updateLobbyMember)(t, n, {
                            metadata: s
                        }).catch(o)
                    }
                },
                [r.RPCCommands.CONNECT_TO_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required(),
                        secret: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                id: n,
                                secret: s
                            }
                        } = e;
                        return (0, a.connect)(t.id, n, s).catch(o)
                    }
                },
                [r.RPCCommands.DISCONNECT_FROM_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        (0, a.disconnect)(t)
                    }
                },
                [r.RPCCommands.SEND_TO_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        lobby_id: e.string().required(),
                        data: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                lobby_id: t,
                                data: n
                            }
                        } = e;
                        return (0, a.send)(t, n).catch(o)
                    }
                },
                [r.RPCCommands.SEARCH_LOBBIES]: {
                    scope: r.RPC_LOCAL_SCOPE,
                    validation: e => (0, i.default)(e).required().keys({
                        filter: e.array().items((0, i.default)(e).keys({
                            key: e.string().required(),
                            comparison: e.number().required(),
                            cast: e.number().required(),
                            value: e.string().required()
                        })),
                        sort: e.array().items((0, i.default)(e).keys({
                            key: e.string().required(),
                            cast: e.number().required(),
                            near_value: e.string()
                        })),
                        limit: e.number(),
                        distance: e.number()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                filter: n,
                                sort: s,
                                limit: l,
                                distance: i
                            }
                        } = e;
                        return (0, a.search)({
                            application_id: t.application.id,
                            filter: n,
                            sort: s,
                            limit: l,
                            distance: i
                        }).catch(o)
                    }
                },
                [r.RPCCommands.CONNECT_TO_LOBBY_VOICE]: {
                    scope: r.RPC_LOCAL_SCOPE,
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        (0, a.voiceConnect)(t)
                    }
                },
                [r.RPCCommands.DISCONNECT_FROM_LOBBY_VOICE]: {
                    scope: r.RPC_LOCAL_SCOPE,
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        (0, a.voiceDisconnect)(t)
                    }
                }
            }
        },
        899114: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("605250"),
                s = n("578287"),
                l = n("716724"),
                i = n("49111");
            let r = new a.default(i.RPC_APPLICATION_LOGGING_CATEGORY);
            var o = {
                [i.RPCCommands.CAPTURE_LOG]: {
                    validation: e => (0, l.default)(e).required().keys({
                        level: e.string().required(),
                        message: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                level: n,
                                message: a
                            }
                        } = e;
                        (0, s.validatePostMessageTransport)(t.transport);
                        let l = t.application.id,
                            i = "".concat(l, " - ").concat(a);
                        switch (n) {
                            case "log":
                                r.log(i);
                                break;
                            case "warn":
                                r.warn(i);
                                break;
                            case "debug":
                                r.verbose(i);
                                break;
                            case "info":
                                r.info(i);
                                break;
                            case "error":
                                r.error(i)
                        }
                    }
                }
            }
        },
        709963: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("872717"),
                s = n("599110"),
                l = n("49111"),
                i = {
                    [l.RPCCommands.GET_NETWORKING_CONFIG]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler: () => Promise.all([a.default.get({
                            url: location.protocol + window.GLOBAL_ENV.NETWORKING_ENDPOINT,
                            retries: 3
                        }).then(e => {
                            let {
                                body: {
                                    address: t
                                }
                            } = e;
                            return t
                        }), a.default.post({
                            url: l.Endpoints.NETWORKING_TOKEN,
                            retries: 3,
                            oldFormErrors: !0
                        }).then(e => {
                            let {
                                body: {
                                    token: t
                                }
                            } = e;
                            return t
                        })]).then(e => {
                            let [t, n] = e;
                            return {
                                address: t,
                                token: n
                            }
                        })
                    },
                    [l.RPCCommands.NETWORKING_SYSTEM_METRICS]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t,
                                args: n
                            } = e;
                            n.application_id = t.application.id, s.default.track(l.AnalyticEvents.NETWORKING_SYSTEM_METRICS, n)
                        }
                    },
                    [l.RPCCommands.NETWORKING_PEER_METRICS]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t,
                                args: n
                            } = e;
                            n.application_id = t.application.id, s.default.track(l.AnalyticEvents.NETWORKING_PEER_METRICS, n)
                        }
                    },
                    [l.RPCCommands.NETWORKING_CREATE_TOKEN]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler: () => a.default.post({
                            url: l.Endpoints.NETWORKING_TOKEN,
                            retries: 1,
                            oldFormErrors: !0
                        }).then(e => e.body)
                    }
                }
        },
        258316: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = {
                [n("843455").RPCCommands.GET_PLATFORM_BEHAVIORS]: {
                    handler: () => ({
                        iosKeyboardResizesView: !0
                    })
                }
            }
        },
        881963: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("27618"),
                i = n("843823"),
                r = n("697218"),
                o = n("578287"),
                u = n("49111"),
                d = {
                    [u.RPCCommands.GET_RELATIONSHIPS]: {
                        scope: u.OAuth2Scopes.RELATIONSHIPS_READ,
                        handler() {
                            let e = {
                                ...l.default.getRelationships()
                            };
                            return i.default.getUserAffinitiesUserIds().forEach(t => {
                                null == e[t] && null != r.default.getUser(t) && (e[t] = u.RelationshipTypes.IMPLICIT)
                            }), {
                                relationships: s.map(e, (e, t) => (0, o.transformRelationship)(e, t))
                            }
                        }
                    }
                }
        },
        88321: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("913144"),
                i = n("599110"),
                r = n("550368"),
                o = n("861309"),
                u = n("578287"),
                d = n("716724"),
                c = n("49111");
            let E = ["349134787773988865"];
            var f = {
                [c.RPCCommands.SET_ACTIVITY]: {
                    scope: {
                        [c.RPC_SCOPE_CONFIG.ANY]: [c.OAuth2Scopes.RPC, c.OAuth2Scopes.RPC_ACTIVITIES_WRITE, c.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, d.default)(e).required().keys({
                        pid: e.number().min(0),
                        activity: e.object().keys({
                            state: e.string().min(2).max(128),
                            details: e.string().min(2).max(128),
                            timestamps: (0, d.default)(e).keys({
                                start: e.number().min(1),
                                end: e.number().min(1)
                            }),
                            assets: (0, d.default)(e).keys({
                                large_image: e.string().min(1).max(256),
                                large_text: e.string().min(2).max(128),
                                small_image: e.string().min(1).max(256),
                                small_text: e.string().min(2).max(128)
                            }),
                            party: (0, d.default)(e).keys({
                                id: e.string().min(2).max(128),
                                size: e.array().items(e.number().min(1)).length(2),
                                privacy: e.number().default(c.ActivityPartyPrivacy.PRIVATE).valid([c.ActivityPartyPrivacy.PRIVATE, c.ActivityPartyPrivacy.PUBLIC])
                            }),
                            secrets: (0, d.default)(e).keys({
                                match: e.string().min(2).max(128),
                                join: e.string().min(2).max(128),
                                spectate: e.string().min(2).max(128)
                            }),
                            buttons: e.array().items((0, d.default)(e).keys({
                                label: e.string().min(1).max(32).required(),
                                url: e.string().uri().min(1).max(512).required()
                            })).min(1).max(2),
                            instance: e.boolean(),
                            supported_platforms: e.array().items(e.string().min(1).max(32)).min(1).max(3),
                            type: e.number().default(c.ActivityTypes.PLAYING).valid(c.ActivityTypes.PLAYING, c.ActivityTypes.LISTENING, c.ActivityTypes.WATCHING)
                        }).allow(null)
                    }),
                    handler(e) {
                        var t;
                        let n, {
                            socket: a,
                            args: {
                                pid: d,
                                activity: f
                            },
                            isSocketConnected: _
                        } = e;
                        if (![c.TransportTypes.IPC, c.TransportTypes.WEBSOCKET, c.TransportTypes.POST_MESSAGE].includes(a.transport)) throw new o.default(c.RPCErrors.INVALID_COMMAND, 'command not available from "'.concat(a.transport, '" transport'));
                        if (null == d && c.TransportTypes.IPC === a.transport) throw new o.default(c.RPCErrors.INVALID_COMMAND, "nonzero pid required");
                        if (null == f) return l.default.dispatch({
                            type: "LOCAL_ACTIVITY_UPDATE",
                            socketId: a.id,
                            pid: d,
                            activity: f
                        }), Promise.resolve(f);
                        f.name = a.application.name, f.application_id = a.application.id;
                        let I = a.transport === c.TransportTypes.POST_MESSAGE,
                            h = (0, u.computeActivityFlags)(f, I);
                        h > 0 && (f.flags = h), delete f.instance, null === (t = f.party) || void 0 === t || delete t.privacy;
                        let {
                            assets: C,
                            party: T,
                            secrets: m,
                            timestamps: S,
                            buttons: N,
                            type: A
                        } = f;
                        if ((null == A || A !== c.ActivityTypes.PLAYING && !I) && (f.type = c.ActivityTypes.PLAYING), null != m) {
                            let e = s.values(m).filter(e => !!e);
                            if (null != T && s.intersection(e, [T.id]).length > 0 && !E.includes(a.application.id)) throw new o.default(c.RPCErrors.INVALID_ACTIVITY_SECRET, "secrets cannot match the party id");
                            if (s.uniq(e).length < e.length) throw new o.default(c.RPCErrors.INVALID_ACTIVITY_SECRET, "secrets must be unique");
                            if (null != N) throw new o.default(c.RPCErrors.INVALID_ACTIVITY_SECRET, "secrets cannot currently be sent with buttons")
                        }
                        if (null != N && (f.metadata = {
                                button_urls: N.map(e => e.url)
                            }, f.buttons = N.map(e => e.label)), null != S)
                            for (let e of Object.keys(S)) Date.now().toString().length - S[e].toString().length > 2 && (S[e] = Math.floor(1e3 * S[e]));
                        if (null == C) n = Promise.resolve([]);
                        else {
                            if (null == a.application || null == a.application.id) throw Error();
                            n = (0, r.fetchAssetIds)(a.application.id, [C.large_image, C.small_image])
                        }
                        return n.then(e => {
                            let [t, n] = e;
                            if (null != C && (null != t ? C.large_image = t : delete C.large_image, null != n ? C.small_image = n : delete C.small_image), !_()) return;
                            l.default.dispatch({
                                type: "LOCAL_ACTIVITY_UPDATE",
                                socketId: a.id,
                                pid: d,
                                activity: f
                            });
                            let {
                                secrets: s,
                                party: r
                            } = f, o = {
                                application_id: a.application.id,
                                type: f.type
                            };
                            return null != s && (o.has_match_secret = !!s.match, o.has_join_secret = !!s.join), null != C && (o.has_images = !!(C.large_image || C.small_image)), null != r && (o.party_max = null != r.size ? r.size[1] : void 0, o.party_id = r.id), i.default.track(c.AnalyticEvents.ACTIVITY_UPDATED, o), f
                        })
                    }
                }
            }
        },
        473902: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("913144"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = n("954016"),
                o = {
                    [n("843455").RPCCommands.SET_ORIENTATION_LOCK_STATE]: {
                        validation: e => (0, l.default)(e).required().keys({
                            lock_state: e.number().valid(r.OrientationLockState.UNLOCKED, r.OrientationLockState.PORTRAIT, r.OrientationLockState.LANDSCAPE).required(),
                            picture_in_picture_lock_state: e.number().valid(r.OrientationLockState.UNLOCKED, r.OrientationLockState.PORTRAIT, r.OrientationLockState.LANDSCAPE).allow(null).optional(),
                            grid_lock_state: e.number().valid(r.OrientationLockState.UNLOCKED, r.OrientationLockState.PORTRAIT, r.OrientationLockState.LANDSCAPE).allow(null).optional()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    lock_state: n,
                                    picture_in_picture_lock_state: l,
                                    grid_lock_state: r
                                }
                            } = e, o = t.application.id;
                            if (null != o) a.default.dispatch({
                                type: "EMBEDDED_ACTIVITY_SET_ORIENTATION_LOCK_STATE",
                                applicationId: o,
                                lockState: n,
                                pictureInPictureLockState: l,
                                gridLockState: r
                            });
                            else throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.")
                        }
                    }
                }
        },
        673090: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("812204"),
                s = n("305122"),
                l = n("235004"),
                i = n("389480"),
                r = n("78581"),
                o = n("245463"),
                u = n("697218"),
                d = n("861309"),
                c = n("716724"),
                E = n("880553"),
                f = n("49111"),
                _ = n("843455"),
                I = {
                    [_.RPCCommands.GET_SOUNDBOARD_SOUNDS]: {
                        scope: {
                            [f.RPC_SCOPE_CONFIG.ANY]: [_.OAuth2Scopes.RPC, f.RPC_LOCAL_SCOPE]
                        },
                        async handler() {
                            await (0, s.maybeFetchSoundboardSounds)();
                            let e = l.default.getSounds(),
                                t = [];
                            return e.forEach(e => e.forEach(e => t.push((0, i.soundboardSoundToAPI)(e)))), t
                        }
                    },
                    [_.RPCCommands.PLAY_SOUNDBOARD_SOUND]: {
                        scope: {
                            [f.RPC_SCOPE_CONFIG.ALL]: [_.OAuth2Scopes.RPC, _.OAuth2Scopes.RPC_VOICE_WRITE]
                        },
                        validation: e => (0, c.default)(e).required().keys({
                            guild_id: e.string(),
                            sound_id: e.string()
                        }),
                        async handler(e) {
                            let {
                                args: {
                                    guild_id: t,
                                    sound_id: n
                                }
                            } = e;
                            await (0, s.maybeFetchSoundboardSounds)();
                            let i = u.default.getCurrentUser(),
                                c = l.default.getSound(t, n),
                                _ = (0, E.default)(),
                                I = null != c && null != i && (0, r.canUseSoundboardSound)(i, c, _);
                            if (null == _) throw new d.default(f.RPCErrors.INVALID_CHANNEL, "Invalid Channel.");
                            if (I) {
                                if ((0, o.default)(_)) null != c && (0, r.playSound)(c, _.id, [a.default.RPC]);
                                else throw new d.default(f.RPCErrors.INVALID_PERMISSIONS, "Invalid Permissions.")
                            } else throw new d.default(f.RPCErrors.INVALID_SOUND, "Invalid Sound.")
                        }
                    }
                }
        },
        108087: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("251472"),
                s = n("465527"),
                l = n("55620"),
                i = n("84460"),
                r = n("524503"),
                o = n("167726"),
                u = n("861309"),
                d = n("383928"),
                c = n("49111");
            async function E(e, t) {
                let n = t.filter(e => e.type === c.SKUTypes.SUBSCRIPTION_GROUP),
                    a = await Promise.all(n.map(async t => await (0, r.fetchAllSubscriptionListingsDataForApplication)(e, t.id))),
                    s = [];
                return a.forEach(e => {
                    if (null == e) return null;
                    let n = e.subscription_listings;
                    if (null == n) return null;
                    let a = [];
                    n.forEach(e => {
                        e.subscription_plans.forEach(n => {
                            var s;
                            let l = null == n ? void 0 : n.price,
                                i = t.find(e => e.id === n.sku_id);
                            if (null == i) return;
                            let r = {
                                id: n.sku_id,
                                name: i.name,
                                type: i.type,
                                price: {
                                    amount: l,
                                    currency: c.CurrencyCodes.USD
                                },
                                application_id: e.application_id,
                                flags: e.sku_flags,
                                release_date: null !== (s = i.release_date) && void 0 !== s ? s : null
                            };
                            a.push(r)
                        })
                    }), a.filter(e => (null == e ? void 0 : e.price) != null).forEach(e => s.push(e))
                }), s
            }
            async function f(e) {
                let {
                    socket: t
                } = e;
                (0, d.validateTransportType)(t.transport);
                let n = t.application.id;
                if (null == n) throw new u.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                if (o.default.inTestModeForApplication(n) || i.default.inDevModeForApplication(n)) {
                    let e = await s.fetchSKUsForApplication(n, !1),
                        t = await E(n, e);
                    return [...e.filter(e => null != e.price), ...t]
                }
                let a = await l.fetchAllStoreListingsForApplication(n),
                    r = a.filter(e => e.sku.type !== c.SKUTypes.SUBSCRIPTION_GROUP).map(e => e.sku).filter(e => null != e.price),
                    f = await E(n, a.map(e => e.sku));
                return [...r, ...f]
            }

            function _(e) {
                let {
                    socket: t
                } = e;
                (0, d.validateTransportType)(t.transport);
                let n = t.application.id;
                if (null == n) throw new u.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                return a.fetchUserEntitlementsForApplication(n)
            }
            var I = {
                [c.RPCCommands.GET_SKUS]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: f
                },
                [c.RPCCommands.GET_ENTITLEMENTS]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: _
                },
                [c.RPCCommands.GET_SKUS_EMBEDDED]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: async e => ({
                        skus: await f(e)
                    })
                },
                [c.RPCCommands.GET_ENTITLEMENTS_EMBEDDED]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: async e => ({
                        entitlements: await _(e)
                    })
                }
            }
        },
        657322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("861309"),
                s = n("846678"),
                l = n("842897"),
                i = n("49111"),
                r = {
                    [i.RPCCommands.SUBSCRIBE]: {
                        async handler(e) {
                            let {
                                server: t,
                                socket: n,
                                evt: r,
                                args: o
                            } = e, u = t.events[r];
                            if (null == u) throw new a.default(i.RPCErrors.INVALID_EVENT, "Invalid event: ".concat(r));
                            if (!(0, s.default)(n.authorization.scopes, u.scope)) throw new a.default(i.RPCErrors.INVALID_PERMISSIONS, "Not authenticated or invalid scope");
                            let d = u.handler({
                                    args: o,
                                    socket: n
                                }),
                                c = await (0, l.getInitialSubscriptionPayload)(n, r, o);
                            return new Promise(e => {
                                setImmediate(() => {
                                    t.addSubscription(n, r, o, d), null != c && t.dispatchToSubscriptions(r, e => e.socket.id === n.id, c)
                                }), e({
                                    evt: r
                                })
                            })
                        }
                    },
                    [i.RPCCommands.UNSUBSCRIBE]: {
                        handler(e) {
                            let {
                                server: t,
                                socket: n,
                                evt: s,
                                args: l
                            } = e;
                            if (null == t.events[s]) throw new a.default(i.RPCErrors.INVALID_EVENT, "Invalid event: ".concat(s));
                            return t.removeSubscription(n, s, l), {
                                evt: s
                            }
                        }
                    }
                }
        },
        220795: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("915639"),
                s = n("49111"),
                l = {
                    [s.RPCCommands.USER_SETTINGS_GET_LOCALE]: {
                        scope: s.OAuth2Scopes.IDENTIFY,
                        handler: () => ({
                            locale: a.default.locale
                        })
                    }
                }
        },
        272279: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("327037"),
                s = n("861309"),
                l = n("716724"),
                i = n("694352"),
                r = n("49111"),
                o = {
                    [r.RPCCommands.GET_USER]: {
                        scope: r.RPC_LOCAL_SCOPE,
                        validation: e => (0, l.default)(e).required().keys({
                            id: e.string().required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    id: t
                                }
                            } = e;
                            return (0, a.getUser)(t).then(i.default).catch(() => {
                                throw new s.default(r.RPCErrors.INVALID_USER, "Invalid user id: ".concat(t))
                            })
                        }
                    }
                }
        },
        730112: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("49111");

            function i(e, t) {
                return {
                    [l.RPCEvents.VOICE_SETTINGS_UPDATE]: {
                        scope: {
                            [l.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                        },
                        handler: () => t => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = t, l = e();
                            return !s.isEqual(l, n) && a(l), l
                        }
                    },
                    [l.RPCEvents.VOICE_SETTINGS_UPDATE_2]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: n
                            } = e;
                            return e => {
                                let {
                                    prevState: a,
                                    dispatch: l
                                } = e;
                                if (null == n.application.id) return a;
                                let i = t(n.application.id);
                                return !s.isEqual(i, a) && l(i), i
                            }
                        }
                    }
                }
            }
        },
        251744: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return R
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("233736"),
                i = n("373469"),
                r = n("42203"),
                o = n("546463"),
                u = n("305961"),
                d = n("260320"),
                c = n("42887"),
                E = n("945956"),
                f = n("568307"),
                _ = n("697218"),
                I = n("800762"),
                h = n("861309"),
                C = n("578287"),
                T = n("65810"),
                m = n("961400"),
                S = n("694352"),
                N = n("49111");

            function A(e) {
                var t;
                let {
                    args: {
                        channel_id: n
                    },
                    socket: a
                } = e, s = r.default.getChannel(n);
                if (null == s || !(0, C.hasMessageReadPermission)(s, a.application.id, a.authorization.scopes)) throw new h.default(N.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(n));
                if (s.isNSFW() && (null === (t = _.default.getCurrentUser()) || void 0 === t ? void 0 : t.nsfwAllowed) !== !0) throw new h.default(N.RPCErrors.INVALID_CHANNEL, "Invalid nsfw channel id: ".concat(s.id))
            }

            function p(e) {
                let {
                    args: {
                        lobby_id: t,
                        channel_id: n
                    }
                } = e;
                if (null != n) {
                    let e = r.default.getChannel(n);
                    if (null == e) throw new h.default(N.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(n))
                }
                if (null != t) {
                    let e = d.default.getLobby(t);
                    if (null == e) throw new h.default(N.RPCErrors.INVALID_LOBBY, "Invalid lobby id: ".concat(t))
                }
            }
            let g = {
                [N.RPCEvents.GUILD_STATUS]: {
                    scope: N.OAuth2Scopes.RPC,
                    handler(e) {
                        let {
                            args: {
                                guild_id: t
                            }
                        } = e;
                        if (null == u.default.getGuild(t)) throw new h.default(N.RPCErrors.INVALID_GUILD, "Invalid guild id: ".concat(t));
                        return e => {
                            var n;
                            let {
                                prevState: a,
                                dispatch: l
                            } = e, i = u.default.getGuild(t);
                            if (null == i) return;
                            let r = {
                                guild: {
                                    id: i.id,
                                    name: i.name,
                                    icon_url: null !== (n = i.getIconURL(128)) && void 0 !== n ? n : null
                                },
                                online: 0
                            };
                            return !s.isEqual(a, r) && l(r), r
                        }
                    }
                },
                [N.RPCEvents.VOICE_STATE_CREATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == r.default.getChannel(t)) throw new h.default(N.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = r.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                o = Object.values(I.default.getVoiceStatesForChannel(l.id));
                            if (n) {
                                let e = s.differenceBy(o, n, e => {
                                    let {
                                        userId: t
                                    } = e;
                                    return t
                                });
                                e.forEach(e => a((0, C.transformVoiceState)(i, l.id, e)))
                            }
                            return o
                        }
                    }
                },
                [N.RPCEvents.VOICE_STATE_DELETE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == r.default.getChannel(t)) throw new h.default(N.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = r.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                o = Object.values(I.default.getVoiceStatesForChannel(l.id)),
                                u = s.differenceBy(n, o, e => {
                                    let {
                                        userId: t
                                    } = e;
                                    return t
                                });
                            return u.forEach(e => a((0, C.transformVoiceState)(i, l.id, e))), o
                        }
                    }
                },
                [N.RPCEvents.VOICE_STATE_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == r.default.getChannel(t)) throw new h.default(N.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = r.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                o = Object.values(I.default.getVoiceStatesForChannel(l.id)).map(e => (0, C.transformVoiceState)(i, l.id, e)),
                                u = s.differenceWith(o, n, s.isEqual);
                            return u.forEach(e => a(e)), o
                        }
                    }
                },
                [N.RPCEvents.VOICE_CONNECTION_STATUS]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            state: (0, C.getVoiceConnectionState)(E.default.getState()),
                            hostname: E.default.getHostname(),
                            pings: E.default.getPings(),
                            average_ping: E.default.getAveragePing(),
                            last_ping: E.default.getLastPing()
                        };
                        return !s.isEqual(a, t) && n(a), a
                    }
                },
                [N.RPCEvents.MESSAGE_CREATE]: {
                    scope: N.OAuth2Scopes.RPC,
                    handler: A
                },
                [N.RPCEvents.MESSAGE_UPDATE]: {
                    scope: N.OAuth2Scopes.RPC,
                    handler: A
                },
                [N.RPCEvents.MESSAGE_DELETE]: {
                    scope: N.OAuth2Scopes.RPC,
                    handler: A
                },
                [N.RPCEvents.SPEAKING_START]: {
                    [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.OAuth2Scopes.RPC_VOICE_READ, N.RPC_LOCAL_SCOPE],
                    handler: p
                },
                [N.RPCEvents.SPEAKING_STOP]: {
                    [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.OAuth2Scopes.RPC_VOICE_READ, N.RPC_LOCAL_SCOPE],
                    handler: p
                },
                [N.RPCEvents.GUILD_CREATE]: {
                    scope: N.OAuth2Scopes.RPC,
                    handler() {}
                },
                [N.RPCEvents.CHANNEL_CREATE]: {
                    scope: N.OAuth2Scopes.RPC,
                    handler() {}
                },
                [N.RPCEvents.GAME_JOIN]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.GAME_SPECTATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ACTIVITY_JOIN]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ACTIVITY_JOIN_REQUEST]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ACTIVITY_SPECTATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ACTIVITY_INVITE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ACTIVITY_PIP_MODE_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.OAuth2Scopes.RPC, N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE]: T.activityInstanceConnectedParticipantsUpdateEvent,
                [N.RPCEvents.THERMAL_STATE_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ORIENTATION_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.VOICE_CHANNEL_SELECT]: {
                    scope: N.OAuth2Scopes.RPC,
                    handler() {}
                },
                [N.RPCEvents.NOTIFICATION_CREATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ALL]: [N.OAuth2Scopes.RPC, N.OAuth2Scopes.RPC_NOTIFICATIONS_READ]
                    },
                    handler() {}
                },
                [N.RPCEvents.RELATIONSHIP_UPDATE]: {
                    scope: N.RPC_LOCAL_SCOPE,
                    handler() {}
                },
                [N.RPCEvents.CURRENT_USER_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_LOCAL_SCOPE, N.OAuth2Scopes.IDENTIFY]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            currentUser: _.default.getCurrentUser()
                        };
                        return null != a.currentUser && (null == t || !(0, l.default)(a, t)) && n((0, S.default)(a.currentUser)), a
                    }
                },
                [N.RPCEvents.LOBBY_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.LOBBY_DELETE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.LOBBY_MEMBER_CONNECT]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.LOBBY_MEMBER_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.LOBBY_MEMBER_DISCONNECT]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.LOBBY_MESSAGE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_AUTHENTICATED_SCOPE, N.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ENTITLEMENT_CREATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_LOCAL_SCOPE, N.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.ENTITLEMENT_DELETE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ANY]: [N.RPC_LOCAL_SCOPE, N.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [N.RPCEvents.USER_ACHIEVEMENT_UPDATE]: {
                    scope: N.RPC_LOCAL_SCOPE,
                    handler() {}
                },
                [N.RPCEvents.SCREENSHARE_STATE_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ALL]: [N.RPC_LOCAL_SCOPE, N.OAuth2Scopes.RPC_SCREENSHARE_READ]
                    },
                    handler: () => e => {
                        var t, n;
                        let {
                            prevState: a,
                            dispatch: l
                        } = e, r = i.default.getStreamerActiveStreamMetadata(), u = (null == r ? void 0 : r.pid) != null ? f.default.getGameForPID(r.pid) : null, d = (null == u ? void 0 : u.id) != null ? o.default.getGame(u.id) : null, c = null != d ? (0, m.default)(d) : null, E = null == r ? void 0 : r.sourceName, _ = {
                            active: null != r,
                            pid: null !== (t = null == r ? void 0 : r.pid) && void 0 !== t ? t : null,
                            application: (n = null != c, n) ? {
                                name: E
                            } : null
                        };
                        return !s.isEqual(_, a) && l(_), _
                    }
                },
                [N.RPCEvents.VIDEO_STATE_UPDATE]: {
                    scope: {
                        [N.RPC_SCOPE_CONFIG.ALL]: [N.RPC_LOCAL_SCOPE, N.OAuth2Scopes.RPC_VIDEO_READ]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            active: c.default.isVideoEnabled()
                        };
                        return !s.isEqual(a, t) && n(a), a
                    }
                }
            };
            var R = g
        },
        842897: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getInitialSubscriptionPayload: function() {
                    return d
                }
            });
            var a = n("191225"),
                s = n("499031"),
                l = n("601222"),
                i = n("710768"),
                r = n("65810"),
                o = n("49111"),
                u = n("954016");
            async function d(e, t, n) {
                var d, c;
                switch (t) {
                    case o.RPCEvents.ACTIVITY_PIP_MODE_UPDATE: {
                        let t = null === (d = e.application) || void 0 === d ? void 0 : d.id,
                            n = null != t ? a.default.getLayoutModeForApp(t) : null;
                        return null != n ? {
                            is_pip_mode: n !== u.ActivityLayoutMode.FOCUSED
                        } : null
                    }
                    case o.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE: {
                        let t = null === (c = e.application) || void 0 === c ? void 0 : c.id,
                            n = null != t ? a.default.getLayoutModeForApp(t) : null;
                        return null != n ? {
                            layout_mode: n
                        } : null
                    }
                    case o.RPCEvents.THERMAL_STATE_UPDATE: {
                        let e = await (0, l.default)();
                        if (null == e) return null;
                        let t = (0, s.default)(e);
                        return {
                            thermal_state: t
                        }
                    }
                    case o.RPCEvents.ORIENTATION_UPDATE: {
                        let e = i.default.isScreenLandscape();
                        if (null == e) return null;
                        {
                            let t = e ? u.ActivityScreenOrientation.LANDSCAPE : u.ActivityScreenOrientation.PORTRAIT,
                                n = t === u.ActivityScreenOrientation.PORTRAIT ? "portrait" : "landscape";
                            return {
                                screen_orientation: t,
                                orientation: n
                            }
                        }
                    }
                    case o.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE:
                        return (0, r.activityInstanceConnectedParticipants)();
                    default:
                        return null
                }
            }
        },
        470313: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("861309"),
                i = n("49111");
            class r {
                constructor(e, t, n) {
                    if (this.transport = e, this.version = t, this.encoding = n, this.id = s.uniqueId(), this.authorization = {
                            authing: !1,
                            scopes: [],
                            accessToken: null,
                            expires: new Date(0)
                        }, this.application = {
                            id: null,
                            name: null,
                            icon: null
                        }, null == t || t > i.RPC_VERSION || t < 1) throw new l.default(i.RPCCloseCodes.INVALID_VERSION, "Invalid Version: ".concat(t))
                }
            }
        },
        132181: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("861309"),
                s = n("614818"),
                l = n("470313"),
                i = n("49111");
            class r extends l.default {
                send(e) {
                    var t;
                    null === (t = this.onSendingToRPCClient) || void 0 === t || t.call(this, e, this.id), this.postMessageToRPCClient([s.default.FRAME, e], this.origin)
                }
                close(e, t) {
                    !this.closed && this.postClose(this.origin, {
                        code: e,
                        message: t
                    }, this.postMessageToRPCClient), this.closed = !0
                }
                constructor({
                    origin: e,
                    postMessageToRPCClient: t,
                    frameId: n,
                    version: s,
                    encoding: l,
                    logger: r,
                    postClose: o,
                    onSendingToRPCClient: u
                }) {
                    if (super(i.TransportTypes.POST_MESSAGE, s, l), -1 === ["etf", "json"].indexOf(l)) throw new a.default(i.RPCCloseCodes.INVALID_ENCODING, "Invalid Encoding: ".concat(l));
                    if ("etf" === l) throw new a.default(i.RPCCloseCodes.INVALID_ENCODING, "Erlpack cannot be used on this client");
                    this.origin = e, this.postMessageToRPCClient = t, this.frameId = n, this.logger = r, this.postClose = o, this.onSendingToRPCClient = u, this.closed = !1
                }
            }
        },
        17891: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("44170"),
                s = n("191225"),
                l = n("599110"),
                i = n("659500"),
                r = n("861309"),
                o = n("614818"),
                u = n("49111");
            let d = new Map,
                c = new Set,
                E = (e, t, n) => {
                    n([o.default.CLOSE, t], e)
                };
            class f extends a.EventEmitter {
                routeEvent(e, t, n, a) {
                    if (!Array.isArray(n)) throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Protocol error");
                    let [s, l] = n;
                    switch (s) {
                        case o.default.HANDSHAKE:
                            if (null != e) throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Already connected");
                            return this.handleHandshake(t, l, a);
                        case o.default.FRAME:
                            if (null == e) throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Not connected");
                            return this.handleFrame(t, e, l);
                        case o.default.CLOSE:
                            if (null == e) throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Not connected");
                            return this.handleClose(e, l);
                        default:
                            throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Invalid opcode")
                    }
                }
                constructor(e, t, a, o) {
                    var f;
                    super(), f = this, this.disconnectSocket = function(e, t) {
                        var n, a;
                        let s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        f.emit("disconnect", e, s ? void 0 : t), e.close(t.code, null !== (n = t.message) && void 0 !== n ? n : "Unknown");
                        let [l] = null !== (a = Array.from(d.entries()).find(t => {
                            let [n, a] = t;
                            return a === e
                        })) && void 0 !== a ? a : [null, null];
                        null != l && d.delete(l)
                    }, this.handleIFrameMount = e => {
                        let {
                            id: t
                        } = e;
                        c.add(t), this.handshakeFailureTimeoutId = setTimeout(() => {
                            Array.from(s.default.getSelfEmbeddedActivities().entries()).forEach(e => {
                                let [t, n] = e;
                                l.default.track(u.AnalyticEvents.ACTIVITY_HANDSHAKE_TIMED_OUT, {
                                    application_id: t,
                                    channel_id: n.channelId,
                                    guild_id: n.guildId,
                                    timeout_ms: 1e4
                                })
                            })
                        }, 1e4)
                    }, this.handleIFrameUnmount = e => {
                        var t;
                        let {
                            id: n
                        } = e;
                        c.delete(n);
                        let [a, s] = null !== (t = Array.from(d.entries()).find(e => {
                            let [t, a] = e;
                            return a.frameId === n
                        })) && void 0 !== t ? t : [null, null];
                        null != s && null != a && (this.disconnectSocket(s, {
                            code: u.RPCCloseCodes.CLOSE_NORMAL,
                            message: "iFrame gone"
                        }, !0), d.delete(a))
                    }, this.handleMessage = (e, t, n) => {
                        let a = d.get(t);
                        try {
                            this.routeEvent(a, t, e, n)
                        } catch (e) {
                            null != a ? this.disconnectSocket(a, {
                                code: e.code,
                                message: e.message
                            }, !0) : E(t, {
                                code: e.code,
                                message: e.message
                            }, n)
                        }
                    }, this.handleFrame = (e, t, n) => {
                        var a;
                        let s;
                        if (e !== t.origin) throw new r.default(u.RPCCloseCodes.INVALID_ORIGIN, "Origin has changed");
                        try {
                            s = "string" == typeof n ? JSON.parse(n) : n
                        } catch (e) {
                            throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Payload not recognized encoding")
                        }
                        null === (a = this.onFrameHandled) || void 0 === a || a.call(this, s, this.logger, t), this.emit("request", t, s)
                    }, this.handleHandshake = async (e, t, a) => {
                        let s;
                        null != this.handshakeFailureTimeoutId && clearTimeout(this.handshakeFailureTimeoutId);
                        let l = (await n.el("990599").then(n.t.bind(n, "990599", 21))).default;
                        try {
                            l.assert(t, l.object().required().keys({
                                v: l.number().min(1).max(1).required(),
                                encoding: l.string().equal("json").optional(),
                                client_id: l.string().required(),
                                frame_id: l.string().required()
                            }))
                        } catch (e) {
                            throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, e.message)
                        }
                        let i = t.frame_id,
                            o = !c.has(i);
                        if (o) throw this.logger.error("Unrecognized frame ID ".concat(i)), new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Unrecognized frame ID ".concat(i));
                        try {
                            var f;
                            s = this.createPostMessageProxySocket({
                                origin: e,
                                postMessageToRPCClient: a,
                                frameId: i,
                                version: Number(t.v),
                                logger: this.logger,
                                postClose: E,
                                encoding: null !== (f = t.encoding) && void 0 !== f ? f : "json"
                            })
                        } catch (e) {
                            throw this.logger.error("Error opening window socket ".concat(e)), e
                        }
                        this.logger.info("Socket Opened: ".concat(s.id));
                        try {
                            if (await this.validateSocketClient(s, e, t.client_id), !c.has(i)) throw this.logger.error("Frame ID ".concat(i, " no longer exists")), new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, "Unrecognized frame ID ".concat(i));
                            d.set(e, s), c.delete(i), this.emit("connect", s), this.logger.info("Socket Validated: ".concat(s.id))
                        } catch (e) {
                            throw this.logger.info("Socket Closed: ".concat(s.id, ", ").concat(e.message)), e
                        }
                    }, this.handleClose = async (e, t) => {
                        let a = (await n.el("990599").then(n.t.bind(n, "990599", 21))).default;
                        try {
                            a.assert(t, a.object().required().unknown(!0).keys({
                                code: a.number().valid(Object.values(u.RPCCloseCodes)).required(),
                                message: a.string().optional()
                            }))
                        } catch (e) {
                            throw new r.default(u.RPCCloseCodes.CLOSE_UNSUPPORTED, e.message)
                        }
                        this.disconnectSocket(e, t)
                    }, i.ComponentDispatch.subscribe(u.ComponentActions.IFRAME_MOUNT, this.handleIFrameMount), i.ComponentDispatch.subscribe(u.ComponentActions.IFRAME_UNMOUNT, this.handleIFrameUnmount), this.validateSocketClient = e, this.logger = t, this.createPostMessageProxySocket = a, this.onFrameHandled = o
                }
            }
        },
        219380: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("901165"),
                s = n("50885"),
                l = n("84090"),
                i = n("251744"),
                r = n("520295"),
                o = n("261131"),
                u = n("370453"),
                d = n("221850"),
                c = n("700721"),
                E = n("805875"),
                f = n("376897"),
                _ = n("683805"),
                I = n("825734"),
                h = n("696287"),
                C = n("750390"),
                T = n("195180");
            let m = {
                    ...l.crossPlatformCommands,
                    ...d.default,
                    ...c.default,
                    ...E.default,
                    ...f.default,
                    ..._.default,
                    ...I.default,
                    ...h.default,
                    ...T.default,
                    ...C.default,
                    ...r.default.authCommands
                },
                S = {
                    ...i.default,
                    ...u.overlayEventHandlers,
                    ...r.default.voiceSettingsEvents
                };
            var N = {
                server: o.default,
                commands: m,
                events: S,
                stores: [a.default],
                transports: [r.default.postMessageTransport],
                registerTransportsForEmbeddedPlatform: function() {
                    s.default.ensureModule("discord_rpc").then(() => {
                        let e = [n("255516").default, n("90906").default];
                        for (let t of e) o.default.registerTransport(t)
                    })
                }
            }
        },
        520295: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("878099"),
                s = n("871832"),
                l = n("357147"),
                i = {
                    authCommands: s.default,
                    voiceSettingsEvents: a.voiceSettingsEventHandlers,
                    postMessageTransport: l.default
                }
        },
        370453: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                overlayEventHandlers: function() {
                    return u
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("686470"),
                i = n("860957"),
                r = n("861309"),
                o = n("49111");
            let u = {
                [o.RPCEvents.OVERLAY_UPDATE]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                pid: t
                            },
                            socket: n
                        } = e;
                        if ("number" != typeof t || t < 10) throw new r.default(o.RPCErrors.INVALID_EVENT, "Invalid pid");
                        return e => {
                            let {
                                prevState: a,
                                dispatch: r
                            } = e, o = i.default.enabled, u = !0, d = n.application.id;
                            if (null != d) {
                                let e = l.default.getActiveLibraryApplication(d);
                                null != e && (o = o && e.isOverlayEnabled()), u = i.default.isInputLocked(t)
                            }
                            let c = {
                                enabled: o,
                                locked: u
                            };
                            return !s.isEqual(c, a) && r(c), c
                        }
                    }
                }
            }
        },
        878099: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                voiceSettingsEventHandlers: function() {
                    return l
                }
            });
            var a = n("730112"),
                s = n("56245");
            let l = (0, a.default)(s.getDeprecatedVoiceSettings, s.getVoiceSettings)
        },
        56245: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                unlockOverlay: function() {
                    return c
                },
                validateSocketClient: function() {
                    return E
                },
                getDeprecatedVoiceSettings: function() {
                    return f
                },
                getVoiceSettings: function() {
                    return _
                }
            });
            var a = n("539405"),
                s = n("860957"),
                l = n("50885"),
                i = n("13798"),
                r = n("861309"),
                o = n("578287"),
                u = n("49111");
            let d = ["207646673902501888"];

            function c(e) {
                let t = s.default.isReady(e);
                return t ? (a.default.setLocked(!1, e), {
                    lock() {
                        a.default.setLocked(!0, e)
                    },
                    context: u.AppContext.OVERLAY
                }) : (l.default.focus(null, !0), {
                    lock() {
                        l.default.setForegroundProcess(e)
                    },
                    context: u.AppContext.APP
                })
            }
            let E = async (e, t, n) => {
                if ((0, o.validateOriginAndUpdateSocket)(e, t), (null == n || "" === n) && (0, o.isMatchingOrigin)(t)) return e.authorization.scopes = [u.RPC_PRIVATE_SCOPE, u.RPC_PRIVATE_LIMITED_SCOPE], Promise.resolve();
                if (null == n || "" === n) return Promise.reject(new r.default(u.RPCCloseCodes.INVALID_CLIENTID, "No Client ID Specified"));
                let a = l.default.releaseChannel !== u.PublicReleaseChannels.CANARY && !d.includes(n) && e.transport !== u.TransportTypes.POST_MESSAGE;
                return await (0, o.processSocketThrottlers)(n, a), (0, o.fetchApplicationsRPC)(e, n, t)
            }, f = () => (0, o.getDeprecatedVoiceSettingsWithShortcut)(e => {
                let t = [];
                if (null != e.modeOptions.shortcut && Array.isArray(e.modeOptions.shortcut)) t = e.modeOptions.shortcut.map(e => {
                    var t;
                    return {
                        type: e[0],
                        code: e[1],
                        name: null !== (t = (0, i.codeToKey)(e)) && void 0 !== t ? t : "unknown"
                    }
                });
                return t
            }), _ = e => (0, o.getVoiceSettingsWithShortcut)(e, e => {
                let t = "";
                return null != e.modeOptions.shortcut && Array.isArray(e.modeOptions.shortcut) && (t = (0, i.toString)(e.modeOptions.shortcut)), t
            })
        },
        828309: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("748900"),
                s = n("219380"),
                l = new a.default(s.default)
        },
        221850: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("524297"),
                l = n("77078"),
                i = n("260365"),
                r = n("636974"),
                o = n("823411"),
                u = n("267363"),
                d = n("599417"),
                c = n("244201"),
                E = n("550766"),
                f = n("299803"),
                _ = n("587984"),
                I = n("292687"),
                h = n("42203"),
                C = n("52028"),
                T = n("101125"),
                m = n("471671"),
                S = n("568734"),
                N = n("449008"),
                A = n("253981"),
                p = n("563680"),
                g = n("861309"),
                R = n("578287"),
                O = n("65810"),
                L = n("716724"),
                M = n("613652"),
                v = n("207873"),
                D = n("56245"),
                x = n("49111");
            async function P(e, t, n, a) {
                let s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "",
                    l = C.default.getApplicationActivity(t);
                if (null == l || null == l.secrets || !(0, R.validateActivityInvite)(a, l.party, l.secrets)) throw new g.default(x.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure an activity includes a party and appropriate secret.");
                let o = (0, f.default)(l, T.default);
                if (o) {
                    let {
                        lock: t
                    } = (0, D.unlockOverlay)(e);
                    return (0, r.openModal)(l, o).then(() => {
                        throw t(), new g.default(x.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure user does have have privacy enabled.")
                    })
                }
                await i.default.sendActivityInviteUser({
                    userId: n,
                    type: a,
                    activity: l,
                    content: s,
                    location: "In-Game Invite"
                })
            }
            var y = {
                [x.RPCCommands.SEND_ACTIVITY_JOIN_INVITE]: {
                    scope: {
                        [x.RPC_SCOPE_CONFIG.ANY]: [x.OAuth2Scopes.RPC, x.RPC_LOCAL_SCOPE]
                    },
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                user_id: n,
                                pid: a
                            }
                        } = e, s = t.application.id;
                        if (null == s) throw new g.default(x.RPCErrors.INVALID_COMMAND, "No application.");
                        return P(a, s, n, x.ActivityActionTypes.JOIN)
                    }
                },
                [x.RPCCommands.CLOSE_ACTIVITY_JOIN_REQUEST]: {
                    scope: {
                        [x.RPC_SCOPE_CONFIG.ANY]: [x.OAuth2Scopes.RPC, x.RPC_LOCAL_SCOPE]
                    },
                    handler(e) {
                        let {
                            args: {
                                user_id: t
                            }
                        } = e, n = h.default.getDMFromUserId(t);
                        null != n && (0, u.ack)(n, !0, !0)
                    }
                },
                [x.RPCCommands.ACTIVITY_INVITE_USER]: {
                    scope: {
                        [x.RPC_SCOPE_CONFIG.ANY]: [x.OAuth2Scopes.RPC, x.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, L.default)(e).required().keys({
                        user_id: e.string().required(),
                        type: e.number().required().valid([x.ActivityActionTypes.JOIN]),
                        content: e.string().min(0).max(1024),
                        pid: e.number().min(0).required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                user_id: a,
                                content: s,
                                pid: l
                            }
                        } = e, i = t.application.id;
                        if (null == i) throw new g.default(x.RPCErrors.INVALID_COMMAND, "No application.");
                        return P(l, i, a, n, s)
                    }
                },
                [x.RPCCommands.ACCEPT_ACTIVITY_INVITE]: {
                    scope: {
                        [x.RPC_SCOPE_CONFIG.ANY]: [x.OAuth2Scopes.RPC, x.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, L.default)(e).required().keys({
                        type: e.number().required().valid([x.ActivityActionTypes.JOIN]),
                        user_id: e.string().required(),
                        session_id: e.string().required(),
                        channel_id: e.string().required(),
                        message_id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                user_id: a,
                                session_id: s,
                                channel_id: l,
                                message_id: i
                            }
                        } = e, r = t.application.id;
                        if (null == r) throw new g.default(x.RPCErrors.INVALID_COMMAND, "No application.");
                        let u = Promise.resolve(!1);
                        if (n === x.ActivityActionTypes.JOIN) u = o.default.join({
                            userId: a,
                            sessionId: s,
                            applicationId: r,
                            channelId: l,
                            messageId: i
                        });
                        return u.then(e => {
                            if (!e) throw new g.default(x.RPCErrors.INVALID_INVITE, "Invite is expired or invalid.")
                        })
                    }
                },
                [x.RPCCommands.OPEN_INVITE_DIALOG]: {
                    scope: {
                        [x.RPC_SCOPE_CONFIG.ANY]: [x.OAuth2Scopes.RPC, x.RPC_LOCAL_SCOPE, x.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        var t, s;
                        let {
                            socket: i
                        } = e, {
                            channel: r,
                            guild: o
                        } = (0, v.validateOpenInviteDialog)(), u = I.default.getWindow(x.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                        (null === (t = u) || void 0 === t ? void 0 : t.closed) && (u = null);
                        let d = null != u ? x.AppContext.POPOUT : x.AppContext.APP;
                        (0, p.exitFullScreen)({}, null === (s = u) || void 0 === s ? void 0 : s.document), (0, l.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("310688").then(n.bind(n, "310688"));
                            return t => (0, a.jsx)(e, {
                                ...t,
                                guild: o,
                                channel: r,
                                applicationId: i.application.id,
                                analyticsLocation: x.AnalyticsLocations.ACTIVITY_RPC,
                                source: x.InstantInviteSources.ACTIVITY_INVITE
                            })
                        }, {
                            contextKey: d === x.AppContext.POPOUT ? l.POPOUT_MODAL_CONTEXT : l.DEFAULT_MODAL_CONTEXT
                        })
                    }
                },
                [x.RPCCommands.INITIATE_IMAGE_UPLOAD]: (0, s.createRPCCommand)(x.RPCCommands.INITIATE_IMAGE_UPLOAD, {
                    scope: {
                        [x.RPC_SCOPE_CONFIG.ANY]: [x.OAuth2Scopes.RPC, x.RPC_LOCAL_SCOPE, x.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        var t;
                        let {
                            socket: n
                        } = e, a = n.application.id;
                        if (null == a) throw new g.default(x.RPCErrors.INVALID_COMMAND, "No application.");
                        let s = null === (t = (0, M.default)()) || void 0 === t ? void 0 : t.id;
                        if (null == s) throw new g.default(x.RPCErrors.UNKNOWN_ERROR, "Unable to find selected channel");
                        return new Promise((e, t) => {
                            ! function(e, t) {
                                var n;
                                let a = m.default.getFocusedWindowId(),
                                    s = null == a ? null : null === (n = (0, c.getAppWindowContextValue)(a)) || void 0 === n ? void 0 : n.renderWindow;
                                if (null == s) throw new g.default(x.RPCErrors.UNKNOWN_ERROR, "No valid window found");
                                let l = s.document.createElement("input");
                                l.style.display = "none", l.type = "file", l.accept = "image/jpeg, image/jpg, image/png, image/gif";
                                let i = () => {
                                    (null == l.files || 0 === l.files.length) && t(), s.document.body.removeEventListener("focus", i, !0), setTimeout(() => {
                                        s.document.body.removeChild(l)
                                    }, 1e3)
                                };
                                l.addEventListener("change", () => {
                                    (0, N.isNotNullish)(l.files) && e(l.files[0]), i()
                                }), l.addEventListener("cancel", () => {
                                    i()
                                }), s.document.body.addEventListener("focus", i, !0), s.document.body.appendChild(l), l.click()
                            }(async n => {
                                let l = await (0, E.uploadImageAttachment)(a, s, n);
                                (0, N.isNotNullish)(l) && (0, N.isNotNullish)(l.url) && !(l instanceof d.default) ? e({
                                    image_url: l.url
                                }): t(l)
                            }, () => t())
                        }).catch(e => {
                            throw new g.default(x.RPCErrors.UNKNOWN_ERROR, "Failed to upload image")
                        })
                    }
                }),
                [x.RPCCommands.OPEN_SHARE_MOMENT_DIALOG]: (0, s.createRPCCommand)(x.RPCCommands.OPEN_SHARE_MOMENT_DIALOG, {
                    scope: {
                        [x.RPC_SCOPE_CONFIG.ANY]: [x.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        var t;
                        let {
                            socket: n,
                            args: {
                                mediaUrl: a
                            }
                        } = e;
                        (0, R.validatePostMessageTransport)(n.transport);
                        let s = n.application.id;
                        if (null == s) throw new g.default(x.RPCErrors.INVALID_COMMAND, "No application.");
                        let l = (0, S.hasFlag)(null !== (t = n.application.flags) && void 0 !== t ? t : 0, x.ApplicationFlags.EMBEDDED);
                        if (!l) throw new g.default(x.RPCErrors.INVALID_COMMAND, "This application cannot access this API");
                        let i = (0, M.default)();
                        if (null == i) throw new g.default(x.RPCErrors.INVALID_COMMAND, "No channel found");
                        if (!A.default.isDiscordCdnUrl(a)) throw new g.default(x.RPCErrors.INVALID_PAYLOAD, "mediaUrl must be a Discord CDN url");
                        (0, _.openActivityShareMomentModal)({
                            applicationId: s,
                            channelId: i.id,
                            mediaUrl: a
                        })
                    }
                }),
                [x.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: (0, s.createRPCCommand)(x.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS, {
                    scope: O.activityInstanceConnectedParticipantsScope,
                    handler(e) {
                        let {
                            socket: t
                        } = e;
                        return (0, R.validatePostMessageTransport)(t.transport), (0, O.activityInstanceConnectedParticipants)()
                    }
                })
            }
        },
        700721: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("872717"),
                l = n("862337"),
                i = n("77078"),
                r = n("251472"),
                o = n("84460"),
                u = n("546463"),
                d = n("697218"),
                c = n("437712"),
                E = n("167726"),
                f = n("50885"),
                _ = n("861309"),
                I = n("49111"),
                h = {
                    [I.RPCCommands.VALIDATE_APPLICATION]: {
                        scope: I.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t
                            } = e, s = t.application.id;
                            try {
                                if (null == s) throw new _.default(I.RPCErrors.INVALID_COMMAND, "No application.");
                                let e = u.default.getGame(s);
                                if (null == e) throw new _.default(I.RPCErrors.INVALID_ENTITLEMENT, "SKU does not exist.");
                                let t = e.primarySkuId;
                                if (null == t) throw new _.default(I.RPCErrors.INVALID_ENTITLEMENT, "SKU does not exist.");
                                return Promise.race([(function(e, t) {
                                    let n = c.default.isEntitledToSku(d.default.getCurrentUser(), e, t);
                                    return null != n ? Promise.resolve(n) : (0, r.fetchUserEntitlementsForApplication)(t).then(() => !0 === c.default.isEntitledToSku(d.default.getCurrentUser(), e, t))
                                })(t, e.id).then(e => {
                                    if (!e) throw new _.default(I.RPCErrors.INVALID_ENTITLEMENT, "User does not have entitlement.")
                                }), (0, l.timeoutPromise)(1e4).then(() => {
                                    throw new _.default(I.RPCErrors.INVALID_ENTITLEMENT, "Timed out fetching entitlement.")
                                })])
                            } catch (e) {
                                throw e.code === I.RPCErrors.INVALID_ENTITLEMENT && (f.default.focus(null, !0), (0, i.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("43264").then(n.bind(n, "43264"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        applicationId: s
                                    })
                                })), e
                            }
                        }
                    },
                    [I.RPCCommands.GET_ENTITLEMENT_TICKET]: {
                        scope: I.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t
                            } = e, l = t.application.id;
                            if (null == l) throw new _.default(I.RPCErrors.INVALID_COMMAND, "No application.");
                            return s.default.post({
                                url: I.Endpoints.ENTITLEMENT_TICKET(l),
                                body: {
                                    test_mode: E.default.inTestModeForApplication(l) || o.default.inDevModeForApplication(l)
                                },
                                retries: 3,
                                oldFormErrors: !0
                            }).then(e => {
                                let {
                                    body: t
                                } = e;
                                return t
                            }).catch(e => {
                                throw f.default.focus(null, !0), (0, i.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("43264").then(n.bind(n, "43264"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        applicationId: l
                                    })
                                }), e
                            })
                        }
                    }
                }
        },
        871832: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("159997"),
                i = n("33942"),
                r = n("773336"),
                o = n("50885"),
                u = n("18520"),
                d = n("49111"),
                c = (0, u.default)((e, t, n, r, o, u, d, c, E, f, _, I, h) => {
                    let C = "OAuth2Authorize_".concat(e, "_").concat(f, "_").concat(_);
                    return new Promise(T => {
                        let m = e => {
                            let {
                                location: t
                            } = e;
                            T(t)
                        };
                        (0, s.openModal)(s => (0, a.jsx)(i.OAuth2AuthorizeModal, {
                            ...s,
                            authorization: t,
                            clientId: e,
                            scopes: null != n ? n : [],
                            callback: m,
                            responseType: o,
                            redirectUri: u,
                            codeChallenge: d,
                            codeChallengeMethod: c,
                            state: E,
                            permissions: r,
                            guildId: f,
                            channelId: _,
                            prompt: I,
                            disableGuildSelect: "boolean" == typeof h ? h : "true" === h
                        }), {
                            modalKey: C,
                            onCloseRequest: () => {
                                (0, s.closeModal)(C), T(void 0)
                            }
                        }, (0, l.default)(t.application) ? s.POPOUT_MODAL_CONTEXT : s.DEFAULT_MODAL_CONTEXT)
                    })
                }, function(e) {
                    if (r.isPlatformEmbedded) {
                        let t = (0, l.default)(e) ? d.PopoutWindowKeys.CHANNEL_CALL_POPOUT : null;
                        (0, r.isWindows)() ? o.default.minimize(t): o.default.restore(t), o.default.focus(t)
                    }
                })
        },
        805875: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("321836"),
                s = n("50885"),
                l = n("578287"),
                i = n("716724"),
                r = {
                    [n("49111").RPCCommands.ENCOURAGE_HW_ACCELERATION]: {
                        validation: e => (0, i.default)(e),
                        handler(e) {
                            let {
                                socket: t
                            } = e;
                            (0, l.validatePostMessageTransport)(t.transport);
                            let n = t.application.id;
                            if (null != n) return (0, a.default)(n), {
                                enabled: s.default.getEnableHardwareAcceleration()
                            }
                        }
                    }
                }
        },
        376897: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("636974"),
                r = n("970728"),
                o = n("539405"),
                u = n("299803"),
                d = n("52028"),
                c = n("101125"),
                E = n("861309"),
                f = n("578287"),
                _ = n("716724"),
                I = n("56245"),
                h = n("49111"),
                C = {
                    [h.RPCCommands.SET_OVERLAY_LOCKED]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            locked: e.boolean().required(),
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    locked: t,
                                    pid: n
                                },
                                socket: {
                                    application: a
                                }
                            } = e, s = a.id;
                            if (null == s) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            o.default.setLocked(t, n)
                        }
                    },
                    [h.RPCCommands.OPEN_OVERLAY_ACTIVITY_INVITE]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            type: e.number().required().valid([h.ActivityActionTypes.JOIN]),
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    type: n,
                                    pid: a
                                }
                            } = e, s = t.application.id;
                            if (null == s) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            let l = d.default.getApplicationActivity(s);
                            if (null == l || null == l.secrets || !(0, f.validateActivityInvite)(n, l.party, l.secrets)) throw new E.default(h.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure an activity includes a party and appropriate secret.");
                            let {
                                lock: r
                            } = (0, I.unlockOverlay)(a), o = (0, u.default)(l, c.default);
                            return (0, i.openModal)(l, o).then(() => {
                                if (r(), o) throw new E.default(h.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure user does have have privacy enabled.")
                            })
                        }
                    },
                    [h.RPCCommands.OPEN_OVERLAY_GUILD_INVITE]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            code: e.string().required(),
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    code: t,
                                    pid: n
                                },
                                socket: a
                            } = e, s = a.application.id;
                            if (null == s) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            return r.default.resolveInvite(t, "Game SDK").then(e => {
                                let {
                                    invite: t,
                                    code: a
                                } = e;
                                if (null == t) throw new E.default(h.RPCErrors.INVALID_INVITE, "Invalid invite id: ".concat(a));
                                let {
                                    context: s,
                                    lock: i
                                } = (0, I.unlockOverlay)(n);
                                return new Promise(e => {
                                    l.default.dispatch({
                                        type: "INVITE_MODAL_OPEN",
                                        invite: t,
                                        code: a,
                                        context: s,
                                        resolve: e
                                    })
                                }).then(i)
                            })
                        }
                    },
                    [h.RPCCommands.OPEN_OVERLAY_VOICE_SETTINGS]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    pid: t
                                },
                                socket: l
                            } = e, i = l.application.id;
                            if (null == i) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            let {
                                lock: r
                            } = (0, I.unlockOverlay)(t);
                            return new Promise(e => {
                                (0, s.openModalLazy)(async () => {
                                    let {
                                        default: t
                                    } = await n.el("301450").then(n.bind(n, "301450"));
                                    return n => (0, a.jsx)(t, {
                                        ...n,
                                        mediaEngineContext: i,
                                        title: l.application.name,
                                        onClose: () => {
                                            n.onClose(), r(), e()
                                        }
                                    })
                                })
                            })
                        }
                    }
                }
        },
        683805: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a, s, l = n("37983");
            n("884691");
            var i = n("391679"),
                r = n("77078"),
                o = n("913144"),
                u = n("850068"),
                d = n("697796"),
                c = n("619340"),
                E = n("569272"),
                f = n("970728"),
                _ = n("913645"),
                I = n("393414"),
                h = n("271938"),
                C = n("697218"),
                T = n("599110"),
                m = n("253981"),
                S = n("50885"),
                N = n("861309"),
                A = n("49111");

            function p(e, t) {
                null != e && T.default.track(A.AnalyticEvents.EXTERNAL_DYNAMIC_LINK_RECEIVED, {
                    invite_code: null,
                    has_auth_token: null,
                    is_backgrounded: null,
                    fingerprint: (0, i.extractId)(e),
                    link_type: t
                })
            }(a = s || (s = {})).SETTINGS = "settings", a.CHANGELOG = "changelog", a.LIBRARY = "library", a.STORE = "store", a.INVITE = "invite", a.CHANNEL = "channel", a.GUILD_SETTINGS = "guild_settings";
            var g = {
                [A.RPCCommands.INVITE_BROWSER]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    async handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e, {
                            invite: n
                        } = await f.default.resolveInvite(t, "Desktop Modal");
                        if (null == n) throw new N.default(A.RPCErrors.INVALID_INVITE, "Invalid invite id: ".concat(t));
                        return h.default.isAuthenticated() ? o.default.dispatch({
                            type: "INVITE_MODAL_OPEN",
                            invite: n,
                            code: t,
                            context: A.AppContext.APP
                        }) : (0, I.replaceWith)(A.Routes.INVITE(t)), {
                            invite: n,
                            code: t
                        }
                    }
                },
                [A.RPCCommands.GUILD_TEMPLATE_BROWSER]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    async handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e;
                        if (null == C.default.getCurrentUser()) return;
                        let {
                            guildTemplate: a
                        } = await _.default.resolveGuildTemplate(t);
                        if (null == a) throw new N.default(A.RPCErrors.INVALID_GUILD_TEMPLATE, "Invalid guild template id: ".concat(t));
                        return S.default.focus(), (0, r.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("843456").then(n.bind(n, "843456"));
                            return t => (0, l.jsx)(e, {
                                ...t,
                                guildTemplate: a
                            })
                        }), {
                            guildTemplate: a,
                            code: t
                        }
                    }
                },
                [A.RPCCommands.GIFT_CODE_BROWSER]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e;
                        return new Promise((e, a) => {
                            o.default.wait(() => {
                                E.default.resolveGiftCode(t, !0, !0).then(a => {
                                    let {
                                        giftCode: s
                                    } = a;
                                    S.default.focus(), T.default.track(A.AnalyticEvents.OPEN_MODAL, {
                                        type: "gift_accept",
                                        location: A.DIRECT_ANALYTICS_LOCATION
                                    }), (0, r.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("669146").then(n.bind(n, "669146"));
                                        return n => (0, l.jsx)(e, {
                                            code: t,
                                            ...n
                                        })
                                    }), e({
                                        giftCode: s
                                    })
                                }).catch(() => a(new N.default(A.RPCErrors.INVALID_GIFT_CODE, "Invalid gift code: ".concat(t))))
                            })
                        })
                    }
                },
                [A.RPCCommands.DEEP_LINK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                type: t,
                                params: n
                            }
                        } = e;
                        switch (S.default.focus(), t) {
                            case A.RPCDeepLinks.USER_SETTINGS:
                                null != n && ((0, I.replaceWith)(A.Routes.SETTINGS(n.section, n.subsection)), p(n.fingerprint, s.SETTINGS));
                                break;
                            case A.RPCDeepLinks.CHANGELOG:
                                null != n && ((0, I.replaceWith)(m.default.formatPathWithQuery(A.Routes.CHANGELOGS(n.date), n.query)), p(n.fingerprint, s.CHANGELOG));
                                break;
                            case A.RPCDeepLinks.LIBRARY:
                                (0, I.replaceWith)(A.Routes.APPLICATION_LIBRARY), null != n && p(n.fingerprint, s.LIBRARY);
                                break;
                            case A.RPCDeepLinks.STORE_HOME:
                                (0, I.replaceWith)(A.Routes.APPLICATION_STORE), null != n && p(n.fingerprint, s.STORE);
                                break;
                            case A.RPCDeepLinks.STORE_LISTING:
                                null != n && ((0, I.replaceWith)(A.Routes.APPLICATION_STORE_LISTING_SKU(n.skuId, n.slug)), p(n.fingerprint, s.STORE));
                                break;
                            case A.RPCDeepLinks.PICK_GUILD_SETTINGS:
                                null != n && ((0, I.replaceWith)({
                                    pathname: A.Routes.PICK_GUILD_SETTINGS(n.section, n.subsection),
                                    search: n.search
                                }), p(n.fingerprint, s.GUILD_SETTINGS));
                                break;
                            case A.RPCDeepLinks.CHANNEL:
                                null != n && ((0, I.replaceWith)({
                                    pathname: A.Routes.CHANNEL(n.guildId, n.channelId, n.messageId),
                                    search: n.search
                                }), p(n.fingerprint, s.CHANNEL))
                        }
                    }
                },
                [A.RPCCommands.BROWSER_HANDOFF]: {
                    scope: A.RPC_PRIVATE_LIMITED_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                handoffToken: t,
                                fingerprint: n
                            }
                        } = e;
                        S.default.focus(null, !0), (0, d.handoffEnd)(t, n)
                    }
                },
                [A.RPCCommands.CONNECTIONS_CALLBACK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                providerType: t,
                                code: n,
                                openid_params: a,
                                state: s
                            }
                        } = e;
                        return c.default.callback(t, {
                            code: n,
                            openid_params: a,
                            state: s
                        })
                    }
                },
                [A.RPCCommands.BRAINTREE_POPUP_BRIDGE_CALLBACK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                state: t,
                                path: n,
                                query: a
                            }
                        } = e;
                        return (0, u.popupBridgeCallback)({
                            paymentSourceType: A.PaymentSourceTypes.PAYPAL,
                            state: t,
                            path: n,
                            query: a
                        })
                    }
                },
                [A.RPCCommands.BILLING_POPUP_BRIDGE_CALLBACK]: {
                    scope: A.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                state: t,
                                path: n,
                                query: a,
                                payment_source_type: s
                            }
                        } = e;
                        return (0, u.popupBridgeCallback)({
                            paymentSourceType: s,
                            state: t,
                            path: n,
                            query: a
                        })
                    }
                }
            }
        },
        825734: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("308757"),
                s = n("812204"),
                l = n("929479"),
                i = n("861309"),
                r = n("716724"),
                o = n("613652"),
                u = n("383928"),
                d = n("56245"),
                c = n("49111"),
                E = n("646718");
            let f = [s.default.RPC];

            function _(e) {
                if (null == e) return {
                    lock: c.NOOP_NULL,
                    context: c.AppContext.APP
                };
                let t = (0, d.unlockOverlay)(e);
                return {
                    lock: t.lock,
                    context: t.context
                }
            }

            function I(e, t) {
                let n = {
                    subscriptionTier: E.PremiumSubscriptionSKUs.TIER_2,
                    analyticsLocations: f,
                    analyticsObject: t
                };
                switch (e) {
                    case c.AppContext.APP:
                        return l.default.openPremiumPaymentModalInApp(n);
                    case c.AppContext.OVERLAY:
                        return l.default.openPremiumPaymentModalInOverlay(n);
                    default:
                        throw Error("Unexpected app context: ".concat(e))
                }
            }
            var h = {
                [c.RPCCommands.START_PURCHASE]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    validation: e => (0, r.default)(e).required().keys({
                        sku_id: e.string().required(),
                        pid: e.number().min(0)
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                sku_id: n,
                                pid: s
                            }
                        } = e;
                        (0, u.validateTransportType)(t.transport);
                        let l = t.application.id;
                        if (null == l) throw new i.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                        let {
                            lock: r,
                            context: d
                        } = _(t.transport !== c.TransportTypes.POST_MESSAGE ? s : null), E = (0, o.default)();
                        if (null == E) throw new i.default(c.RPCErrors.INVALID_CHANNEL, "Invalid channel");
                        let h = {
                                page: c.AnalyticsPages.IN_APP
                            },
                            C = async () => {
                                try {
                                    let e = await (0, a.openIAPPurchaseModal)({
                                        applicationId: l,
                                        skuId: n,
                                        openPremiumPaymentModal: () => I(d, h),
                                        analyticsLocations: f,
                                        analyticsLocation: h,
                                        context: d
                                    });
                                    return r(), e
                                } catch (e) {
                                    if (r(), null != e) {
                                        let t = "";
                                        throw t = "object" == typeof e && "message" in e && "string" == typeof e.message ? e.message : "string" == typeof e ? e : JSON.stringify(e), new i.default(c.RPCErrors.PURCHASE_ERROR, t)
                                    }
                                    throw new i.default(c.RPCErrors.PURCHASE_CANCELED, "Purchase was canceled by the user.")
                                }
                            };
                        return C()
                    }
                },
                [c.RPCCommands.START_PREMIUM_PURCHASE]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    validation: e => (0, r.default)(e).keys({
                        pid: e.number().min(0)
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                pid: n
                            }
                        } = e;
                        (0, u.validateTransportType)(t.transport);
                        let a = t.application.id;
                        if (null == a) throw new i.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                        let {
                            lock: s,
                            context: l
                        } = _(t.transport !== c.TransportTypes.POST_MESSAGE ? n : null), r = {
                            page: c.AnalyticsPages.IN_APP
                        };
                        return I(l, r).then(() => {
                            s()
                        }, e => {
                            if (s(), null != e) throw new i.default(c.RPCErrors.PURCHASE_ERROR, e);
                            throw new i.default(c.RPCErrors.PURCHASE_CANCELED, "Purchase was canceled by the user.")
                        })
                    }
                }
            }
        },
        696287: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("629109"),
                i = n("990766"),
                r = n("375202"),
                o = n("727284"),
                u = n("373469"),
                d = n("42887"),
                c = n("568307"),
                E = n("703370"),
                f = n("773336"),
                _ = n("716724"),
                I = n("880553"),
                h = n("49111"),
                C = n("843455"),
                T = {
                    [C.RPCCommands.TOGGLE_VIDEO]: {
                        scope: {
                            [h.RPC_SCOPE_CONFIG.ALL]: [C.OAuth2Scopes.RPC, C.OAuth2Scopes.RPC_VIDEO_WRITE]
                        },
                        handler() {
                            let e = d.default.isVideoEnabled(),
                                t = (0, I.default)();
                            null != t && (e ? l.default.setVideoEnabled(!1) : (0, o.default)(() => l.default.setVideoEnabled(!0), h.AppContext.APP))
                        }
                    },
                    [C.RPCCommands.TOGGLE_SCREENSHARE]: {
                        scope: {
                            [h.RPC_SCOPE_CONFIG.ALL]: [C.OAuth2Scopes.RPC, C.OAuth2Scopes.RPC_SCREENSHARE_WRITE]
                        },
                        validation: e => (0, _.default)(e).optional().keys({
                            pid: e.number().optional().min(0)
                        }),
                        handler(e) {
                            let {
                                args: {
                                    pid: t
                                }
                            } = e, l = u.default.getCurrentUserActiveStream(), o = u.default.getStreamerActiveStreamMetadata(), d = (0, r.default)(c.default, E.default), _ = (0, I.default)();
                            null != _ && (null != t && null != o && o.pid !== t && (0, f.isWindows)() ? (0, i.startStream)(_.guild_id, _.id, {
                                pid: t
                            }) : null != l ? (0, i.stopOwnStream)(!1) : null != t && (0, f.isWindows)() ? (0, i.startStream)(_.guild_id, _.id, {
                                pid: t
                            }) : null != d ? (0, i.startStream)(_.guild_id, _.id, {
                                pid: d.pid
                            }) : (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("451863").then(n.bind(n, "451863"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    guildId: _.guild_id,
                                    analyticsLocation: h.AnalyticsLocations.ACTIVITY_RPC
                                })
                            }))
                        }
                    }
                }
        },
        750390: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("629109"),
                s = n("42887"),
                l = n("13798"),
                i = n("861309"),
                r = n("716724"),
                o = n("49111"),
                u = n("353927");

            function d(e) {
                let t = e.application.id;
                if (null == t) throw new i.default(o.RPCErrors.INVALID_COMMAND, "No application.");
                return t
            }
            var c = {
                [o.RPCCommands.SET_VOICE_SETTINGS_2]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    validation: e => (0, r.default)(e).required().keys({
                        input_mode: (0, r.default)(e).keys({
                            type: e.string().valid(Object.keys(o.InputModes)),
                            shortcut: e.string().required()
                        }),
                        self_mute: e.boolean(),
                        self_deaf: e.boolean()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                input_mode: n,
                                self_mute: i,
                                self_deaf: r
                            }
                        } = e, o = d(t);
                        null != n && a.default.setMode(n.type, {
                            shortcut: (0, l.toCombo)(n.shortcut)
                        }, o), null != i && i !== s.default.isSelfMute(o) && a.default.toggleSelfMute({
                            context: o
                        }), null != r && r !== s.default.isSelfDeaf(o) && a.default.toggleSelfDeaf({
                            context: o
                        })
                    }
                },
                [o.RPCCommands.SET_USER_VOICE_SETTINGS_2]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    validation: e => (0, r.default)(e).required().keys({
                        user_id: e.string().required(),
                        volume: e.number().min(0).max(200),
                        mute: e.boolean()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                user_id: n,
                                mute: l,
                                volume: i
                            }
                        } = e, r = d(t);
                        null != l && l !== s.default.isLocalMute(n, r) && a.default.toggleLocalMute(n, r), null != i && a.default.setLocalVolume(n, i, r)
                    }
                },
                [o.RPCCommands.PUSH_TO_TALK]: {
                    scope: {
                        [o.RPC_SCOPE_CONFIG.ALL]: [o.OAuth2Scopes.RPC, o.OAuth2Scopes.RPC_VOICE_WRITE]
                    },
                    validation: e => (0, r.default)(e).required().keys({
                        active: e.boolean()
                    }),
                    handler(e) {
                        let {
                            args: {
                                active: t
                            }
                        } = e;
                        s.default.getMode(u.MediaEngineContextTypes.DEFAULT) === o.InputModes.PUSH_TO_TALK && s.default.getMediaEngine().eachConnection(e => e.setForceAudioInput(t), u.MediaEngineContextTypes.DEFAULT)
                    }
                }
            }
        },
        195180: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("629109"),
                s = n("42887"),
                l = n("697218"),
                i = n("861309"),
                r = n("716724"),
                o = n("56245"),
                u = n("49111"),
                d = {
                    [u.RPCCommands.SET_USER_VOICE_SETTINGS]: {
                        scope: {
                            [u.RPC_SCOPE_CONFIG.ANY]: [u.OAuth2Scopes.RPC, u.OAuth2Scopes.RPC_VOICE_WRITE]
                        },
                        validation: e => (0, r.default)(e).required().keys({
                            user_id: e.string().required(),
                            pan: (0, r.default)(e).keys({
                                left: e.number().min(0).max(1).required(),
                                right: e.number().min(0).max(1).required()
                            }),
                            volume: e.number().min(0).max(200),
                            mute: e.boolean()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    user_id: t,
                                    pan: n,
                                    volume: r,
                                    mute: o
                                }
                            } = e, d = l.default.getCurrentUser();
                            if (null == l.default.getUser(t) || (null == d ? void 0 : d.id) === t) throw new i.default(u.RPCErrors.INVALID_USER, "Invalid user id: ".concat(t));
                            if (null != n && a.default.setLocalPan(t, n.left, n.right), null != r && a.default.setLocalVolume(t, r), null != o) {
                                let e = s.default.isLocalMute(t);
                                (e && !o || !e && o) && a.default.toggleLocalMute(t)
                            }
                            return {
                                user_id: t,
                                pan: s.default.getLocalPan(t),
                                volume: s.default.getLocalVolume(t),
                                mute: s.default.isLocalMute(t)
                            }
                        }
                    },
                    [u.RPCCommands.GET_VOICE_SETTINGS]: {
                        scope: {
                            [u.RPC_SCOPE_CONFIG.ANY]: [u.OAuth2Scopes.RPC, u.OAuth2Scopes.RPC_VOICE_READ]
                        },
                        handler: () => (0, o.getDeprecatedVoiceSettings)()
                    },
                    [u.RPCCommands.SET_VOICE_SETTINGS]: {
                        scope: {
                            [u.RPC_SCOPE_CONFIG.ANY]: [u.OAuth2Scopes.RPC, u.OAuth2Scopes.RPC_VOICE_WRITE]
                        },
                        validation: e => (0, r.default)(e).required().keys({
                            input: (0, r.default)(e).keys({
                                device_id: e.string().valid(Object.keys(s.default.getInputDevices())),
                                volume: e.number().min(0).max(100)
                            }),
                            output: (0, r.default)(e).keys({
                                device_id: e.string().valid(Object.keys(s.default.getOutputDevices())),
                                volume: e.number().min(0).max(200)
                            }),
                            mode: (0, r.default)(e).keys({
                                type: e.string().valid(Object.keys(u.InputModes)),
                                auto_threshold: e.boolean(),
                                threshold: e.number().min(-100).max(0),
                                shortcut: e.array().items((0, r.default)(e).keys({
                                    type: e.number().min(0).max(3).required(),
                                    code: e.number().required(),
                                    name: e.string()
                                })),
                                delay: e.number().min(0).max(2e3)
                            }),
                            automatic_gain_control: e.boolean(),
                            echo_cancellation: e.boolean(),
                            noise_suppression: e.boolean(),
                            qos: e.boolean(),
                            silence_warning: e.boolean(),
                            deaf: e.boolean(),
                            mute: e.boolean()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    input: t,
                                    output: n,
                                    mode: l,
                                    automatic_gain_control: i,
                                    echo_cancellation: r,
                                    noise_suppression: u,
                                    qos: d,
                                    silence_warning: c,
                                    deaf: E,
                                    mute: f
                                }
                            } = e;
                            if (t && (null != t.device_id && a.default.setInputDevice(t.device_id), null != t.volume && a.default.setInputVolume(t.volume)), n && (null != n.device_id && a.default.setOutputDevice(n.device_id), null != n.volume && a.default.setOutputVolume(n.volume)), l) {
                                let e = s.default.getMode(),
                                    t = s.default.getModeOptions();
                                null != l.type && (e = l.type), null != l.auto_threshold && (t.autoThreshold = l.auto_threshold), null != l.threshold && (t.threshold = l.threshold), null != l.shortcut && (t.shortcut = l.shortcut.map(e => [e.type, e.code])), null != l.delay && (t.delay = l.delay), a.default.setMode(e, t)
                            }
                            if (null != i && a.default.setAutomaticGainControl(i), null != r && a.default.setEchoCancellation(r), null != u && a.default.setNoiseSuppression(u), null != d && a.default.setQoS(d), null != c && a.default.setSilenceWarning(c), null != E) {
                                let e = s.default.isSelfDeaf();
                                (e && !E || !e && E) && a.default.toggleSelfDeaf()
                            }
                            if (null != f) {
                                let e = s.default.isSelfMute();
                                (e && !f || !e && f) && a.default.toggleSelfMute()
                            }
                            return (0, o.getDeprecatedVoiceSettings)()
                        }
                    }
                }
        },
        90906: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("446825"),
                s = n("44170"),
                l = n("917351"),
                i = n.n(l),
                r = n("605250"),
                o = n("50885"),
                u = n("856116"),
                d = n("470313"),
                c = n("56245"),
                E = n("49111");
            let f = o.default.requireModule("discord_rpc").RPCIPC,
                _ = new r.default("RPCServer:IPC"),
                I = {
                    HANDSHAKE: 0,
                    FRAME: 1,
                    CLOSE: 2,
                    PING: 3,
                    PONG: 4
                };

            function h(e, t) {
                null != e.setHandshakeComplete ? e.setHandshakeComplete(t) : e._didHandshake = t
            }

            function C(e) {
                return null != e.getHandshakeComplete ? e.getHandshakeComplete() : e._didHandshake
            }

            function T(e) {
                return new Promise((t, n) => {
                    "string" == typeof e && (e = f.net.createConnection(e)), e.pause(), e.on("readable", () => {
                        try {
                            S(e)
                        } catch (t) {
                            e.end(m(I.CLOSE, {
                                code: 1003,
                                message: t.message
                            })), e.destroy()
                        }
                    });
                    let a = () => {
                            try {
                                e.end(), e.destroy()
                            } catch (e) {}
                        },
                        s = Promise.race([new Promise(t => e.on("error", () => t())), new Promise((t, n) => {
                            e.on("pong", () => n(Error("socket responded with pong")))
                        }), new Promise((e, t) => {
                            setTimeout(() => t(Error("socket alive timeout")), 1e3)
                        })]).then(() => {
                            a()
                        }, e => {
                            throw a(), e
                        });
                    return e.write(m(I.PING, i.uniqueId())), s.then(t, n)
                })
            }

            function m(e, t) {
                var n;
                t = JSON.stringify(t);
                let s = a.Buffer.byteLength(t),
                    l = a.Buffer.alloc(8 + s);
                return l.writeInt32LE(e, 0), l.writeInt32LE(s, 4), l.write(t, 8, s), (n = l).buffer.slice(n.byteOffset, n.byteOffset + n.byteLength)
            }

            function S(e) {
                let t = e.read(8);
                if (null == t) return;
                let n = a.Buffer.from(t),
                    s = n.readInt32LE(0),
                    l = n.readInt32LE(4);
                if (!Object.values(I).includes(s) || l < 0) throw Error("protocol error");
                if (null == (t = e.read(l))) throw Error("data size does not match what was received");
                n = a.Buffer.from(t);
                let i = JSON.parse(n.toString());
                switch (s) {
                    case I.PING:
                        e.emit("ping", i), e.write(m(I.PONG, i));
                        break;
                    case I.PONG:
                        e.emit("pong", i);
                        break;
                    case I.HANDSHAKE:
                        if (C(e)) throw Error("already did handshake");
                        h(e, !0), e.emit("handshake", i);
                        break;
                    case I.FRAME:
                        if (!C(e)) throw Error("did not handshake");
                        e.emit("request", i);
                        break;
                    case I.CLOSE:
                        e.end(), e.destroy()
                }
                S(e)
            }
            class N extends d.default {
                send(e) {
                    _.info("Socket Emit: ".concat(this.id), (0, u.default)(e)), this.socket.write(m(I.FRAME, e))
                }
                close(e, t) {
                    this.socket.end(m(I.CLOSE, {
                        code: e,
                        message: t
                    })), this.socket.destroy()
                }
                constructor(e, t, n) {
                    super("ipc", t, n), this.socket = e
                }
            }
            class A extends s.EventEmitter {
                handleConnection(e) {
                    h(e, !1), e.pause(), e.on("readable", () => {
                        try {
                            S(e)
                        } catch (t) {
                            e.end(m(I.CLOSE, {
                                code: E.RPCCloseCodes.CLOSE_UNSUPPORTED,
                                message: t.message
                            })), e.destroy()
                        }
                    }), e.once("handshake", t => {
                        let n;
                        let a = t.client_id,
                            s = +t.v;
                        try {
                            n = new N(e, s, "json")
                        } catch (t) {
                            e.end(m(I.CLOSE, {
                                code: t.code,
                                message: t.message
                            })), e.destroy();
                            return
                        }
                        _.info("Socket Opened: ".concat(n.id)), e.on("error", e => _.error("Socket Error: ".concat(e.message))), e.on("close", () => {
                            _.info("Socket Close: ".concat(n.id)), this.emit("disconnect", n)
                        }), (0, c.validateSocketClient)(n, null, a).then(() => {
                            e.on("request", e => {
                                _.info("Socket Message: ".concat(n.id), (0, u.default)(e)), this.emit("request", n, e)
                            }), this.emit("connect", n)
                        }).catch(e => {
                            let {
                                code: t,
                                message: a
                            } = e;
                            return n.close(t, a)
                        })
                    })
                }
                constructor() {
                    super();
                    let e = f.net.createServer(e => this.handleConnection(e));
                    e.on("error", e => _.error("Error: ".concat(e.message))), f.getAvailableSocket(T).then(t => {
                        e.listen(t, () => {
                            let t = "function" == typeof e.listening ? e.listening() : e.listening;
                            t && _.info("Starting on ".concat(e.address()))
                        })
                    })
                }
            }
            var p = new A
        },
        255516: function(e, t, n) {
            "use strict";
            let a, s;
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            });
            var l = n("44170"),
                i = n("917351"),
                r = n.n(i),
                o = n("746379"),
                u = n("913144"),
                d = n("605250"),
                c = n("313915"),
                E = n("50885"),
                f = n("861309"),
                _ = n("856116"),
                I = n("470313"),
                h = n("56245"),
                C = n("49111"),
                T = n("446825").Buffer;
            try {
                a = E.default.requireModule("discord_erlpack")
            } catch (e) {
                try {
                    a = E.default.requireModule("erlpack")
                } catch (e) {}
            }
            let m = E.default.requireModule("discord_rpc").RPCWebSocket,
                S = window.GLOBAL_ENV.MARKETING_ENDPOINT,
                N = new d.default("RPCServer:WSS"),
                A = [];

            function p(e) {
                return "function" == typeof e ? e() : e
            }

            function g() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    t = e > 0 ? void 0 : () => {
                        if (!p(s.listening)) return;
                        let e = s.address().port;
                        N.info("Starting on ".concat(e)), u.default.dispatch({
                            type: "RPC_SERVER_READY",
                            port: e
                        })
                    };
                s.listen(C.RPC_STARTING_PORT + e % C.RPC_PORT_RANGE, "127.0.0.1", t)
            }

            function R(e, t, n) {
                let a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 200,
                    s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
                    l = null != p(e.headers).origin ? {
                        "Access-Control-Allow-Origin": p(e.headers).origin,
                        "Access-Control-Allow-Credentials": "true",
                        "Access-Control-Allow-Methods": "POST, GET, PUT, PATCH, DELETE",
                        "Access-Control-Allow-Headers": "Content-Type, Authorization"
                    } : {};
                n = n ? JSON.stringify(n) : "", a = 200 === a && 0 === n.length ? 204 : a, t.setHeader("Content-Length", T.byteLength(n).toString()), t.setHeader("Content-Type", "application/json"), t.writeHead(a, {
                    ...s,
                    ...l
                }), t.end(n)
            }

            function O(e, t, n, a) {
                let s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                R(e, t, {
                    code: s,
                    message: a
                }, n)
            }
            class L extends I.default {
                send(e) {
                    (c.default.isLoggingOverlayEvents || e.cmd !== C.RPCCommands.OVERLAY && e.evt !== C.RPCEvents.OVERLAY) && N.info("Socket Emit: ".concat(this.id), (0, _.default)(e)), null != a && "etf" === this.encoding ? this._socket.send(a.pack(e), {
                        binary: !0
                    }) : this._socket.send(JSON.stringify(e))
                }
                close(e, t) {
                    this._socket.close(e, t)
                }
                constructor(e, t, n) {
                    if (super("ws", t, n), -1 === ["etf", "json"].indexOf(n)) throw new f.default(C.RPCCloseCodes.INVALID_ENCODING, "Invalid Encoding: ".concat(n));
                    if ("etf" === n && null == a) throw new f.default(C.RPCCloseCodes.INVALID_ENCODING, "Erlpack cannot be used on this client");
                    this._socket = e
                }
            }
            class M extends I.default {
                send(e) {
                    (c.default.isLoggingOverlayEvents || e.cmd !== C.RPCCommands.OVERLAY) && N.info("Socket Emit: ".concat(this.id), e), this._sendCallback(e)
                }
                close(e, t) {
                    this._closeCallback(t, e)
                }
                constructor(e, t, n, a) {
                    if (super("http", n, a), "json" !== a) throw new f.default(C.RPCCloseCodes.INVALID_ENCODING, "Invalid Encoding: ".concat(a));
                    this._sendCallback = e, this._closeCallback = t
                }
            }
            class v extends l.EventEmitter {
                handleRequest(e, t) {
                    let [n, a] = p(e.url).split("?"), s = p(e.method);
                    if ("/rpc" === n && "OPTIONS" === s) {
                        R(e, t, {
                            body: ""
                        });
                        return
                    }
                    let l = "POST" === s;
                    if ("/rpc" === n && ("GET" === s || l)) {
                        let n = new URLSearchParams(a),
                            s = l ? p(e.headers)["content-type"].split("/")[1] : "json",
                            r = function() {
                                var e;
                                let {
                                    protocol: a,
                                    host: s
                                } = o.parse(null !== (e = n.get("callback")) && void 0 !== e ? e : "");
                                a === location.protocol && s === location.host ? t.setHeader("Location", n.get("callback")) : t.setHeader("Location", S), t.writeHead(301), t.end()
                            },
                            u = new M(l ? R.bind(null, e, t) : r, l ? O.bind(null, e, t, 400) : r, Number(n.get("v")), s);
                        if (l)(0, h.validateSocketClient)(u, p(e.headers).origin, n.get("client_id")).then(() => {
                            let n = "";
                            e.on("data", e => n += e), e.on("error", () => O(e, t, 500, "Internal Server Error")), e.on("end", () => this.handleMessage(u, n))
                        }).catch(e => {
                            let {
                                code: t,
                                message: n
                            } = e;
                            return u.close(t, n)
                        });
                        else {
                            var i;
                            u.authorization.scopes = [C.RPC_PRIVATE_LIMITED_SCOPE], this.handleMessage(u, decodeURIComponent(null !== (i = n.get("payload")) && void 0 !== i ? i : ""))
                        }
                        return
                    }
                    O(e, t, 404, "Not Found")
                }
                handleConnection(e) {
                    var t, n;
                    let a;
                    let s = new URLSearchParams(p(e.upgradeReq).url.split("?")[1]),
                        l = null !== (t = p(e.upgradeReq).headers.origin) && void 0 !== t ? t : "";
                    try {
                        a = new L(e, Number(s.get("v")), null !== (n = s.get("encoding")) && void 0 !== n ? n : "json")
                    } catch (t) {
                        e.close(t.code, t.message);
                        return
                    }
                    N.info("Socket Opened: ".concat(a.id)), e.on("error", e => N.error("WS Error: ".concat(e.message))), e.on("close", (e, t) => {
                        N.info("Socket Closed: ".concat(a.id, ", code ").concat(e, ", message ").concat(t)), r.remove(A, e => e === a), this.emit("disconnect", a)
                    }), (0, h.validateSocketClient)(a, l, s.get("client_id")).then(() => {
                        A.push(a), e.on("message", e => this.handleMessage(a, e)), this.emit("connect", a)
                    }).catch(e => {
                        let {
                            code: t,
                            message: n
                        } = e;
                        return a.close(t, n)
                    })
                }
                handleMessage(e, t) {
                    let n;
                    try {
                        if (null != a && "etf" === e.encoding) n = a.unpack(t);
                        else if ("string" == typeof t) n = JSON.parse(t);
                        else throw Error()
                    } catch (t) {
                        e.close(C.RPCCloseCodes.CLOSE_UNSUPPORTED, "Payload not ".concat(e.encoding));
                        return
                    }(c.default.isLoggingOverlayEvents || n.cmd !== C.RPCCommands.OVERLAY) && N.info("Socket Message: ".concat(e.id), (0, _.default)(n)), this.emit("request", e, n)
                }
                constructor() {
                    var e;
                    super();
                    let t = 0;
                    (s = m.http.createServer()).on("error", e => {
                        N.error("Error: ".concat(e.message)), ("EADDRINUSE" === e.code || e.message.includes("EADDRINUSE")) && setTimeout(() => g(++t), 1e3)
                    }), s.on("request", this.handleRequest.bind(this)), g(t);
                    let n = {
                        instanceId: null !== (e = s.instanceId) && void 0 !== e ? e : 0,
                        server: s
                    };
                    new m.ws.Server(n).on("connection", e => this.handleConnection(e))
                }
            }
            var D = new v
        },
        357147: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("605250"),
                s = n("313915"),
                l = n("856116"),
                i = n("17891"),
                r = n("56245"),
                o = n("958530"),
                u = n("49111");
            let d = new a.default("RPCServer:PostMessage"),
                c = (e, t, n) => {
                    (s.default.isLoggingOverlayEvents || e.cmd !== u.RPCCommands.OVERLAY) && t.info("Socket Message: ".concat(n.id), (0, l.default)(e))
                };
            var E = function() {
                let e = new i.default(r.validateSocketClient, d, o.default, c);
                return window.addEventListener("message", t => {
                    if (window === t.source) return;
                    if (null == t.source || null == t.source.postMessage) {
                        d.error("Unknown event source");
                        return
                    }
                    let n = t.source,
                        a = t.data,
                        s = t.origin;
                    e.handleMessage(a, s, (e, t) => {
                        n.postMessage(e, t)
                    })
                }), e
            }()
        },
        958530: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("313915"),
                s = n("856116"),
                l = n("132181"),
                i = n("49111"),
                r = e => {
                    let {
                        origin: t,
                        postMessageToRPCClient: n,
                        frameId: r,
                        version: o,
                        encoding: u,
                        logger: d,
                        postClose: c
                    } = e;
                    return new l.default({
                        origin: t,
                        postMessageToRPCClient: n,
                        frameId: r,
                        version: o,
                        encoding: u,
                        logger: d,
                        postClose: c,
                        onSendingToRPCClient: (e, t) => {
                            (a.default.isLoggingOverlayEvents || e.cmd !== i.RPCCommands.OVERLAY && e.evt !== i.RPCEvents.OVERLAY) && d.info("Socket Emit: ".concat(t), (0, s.default)(e))
                        }
                    })
                }
        },
        837944: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanSeeSafetyEducationBlockMuteCoachmark: function() {
                    return u
                },
                useSafetyEducationAATriggerPoint: function() {
                    return d
                }
            });
            var a = n("65597"),
                s = n("607742"),
                l = n("415929"),
                i = n("697218"),
                r = n("158998"),
                o = n("332164");
            let u = () => {
                    let e = (0, l.useIsSafetyConsumerEducationBlockMuteEnabled)(),
                        t = (0, a.default)([i.default], () => i.default.getCurrentUser()),
                        n = (0, o.useUserIsInLargeGuilds)();
                    return e && !(0, r.isNewUser)(t) && n
                },
                d = () => (0, s.useIsSafetyConsumerEducationAAEnabled)()
        },
        374089: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanSeeSafetyEducationReportingCoachmark: function() {
                    return o
                }
            });
            var a = n("65597"),
                s = n("127205"),
                l = n("697218"),
                i = n("158998"),
                r = n("332164");
            let o = () => {
                let e = (0, s.useIsSafetyConsumerEducationReportingEnabled)(),
                    t = (0, a.default)([l.default], () => l.default.getCurrentUser()),
                    n = (0, r.useUserIsInLargeGuilds)();
                return e && !(0, i.isNewUser)(t) && n
            }
        },
        332164: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useUserIsInLargeGuilds: function() {
                    return l
                }
            });
            var a = n("65597"),
                s = n("525065");

            function l() {
                let e = (0, a.default)([s.default], () => {
                    let e = Object.values(s.default.getMemberCounts());
                    return e.some(e => e >= 200)
                });
                return e
            }
        },
        189726: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("206230"),
                i = n("5667"),
                r = n("58608"),
                o = n("837944"),
                u = n("782340"),
                d = n("421294"),
                c = e => {
                    let {
                        markAsDismissed: t
                    } = e, n = (0, s.default)([l.default], () => l.default.useReducedMotion), c = (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)();
                    return c ? (0, a.jsx)(i.default, {
                        asset: (0, a.jsx)(r.default, {
                            className: d.video,
                            src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195117439557712/Safety_BLOCK_Coachmark.mp4",
                            loop: !0,
                            autoPlay: !n,
                            width: "100%"
                        }),
                        header: u.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_HEADER,
                        content: u.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_CONTENT,
                        buttonCTA: u.default.Messages.GOT_IT,
                        className: d.coachmark,
                        onClick: e => {
                            e.stopPropagation(), t()
                        },
                        markAsDismissed: t,
                        caretPosition: i.CaretPosition.BOTTOM_CENTER,
                        headerClassName: d.header
                    }) : null
                }
        },
        666647: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("206230"),
                i = n("5667"),
                r = n("58608"),
                o = n("837944"),
                u = n("782340"),
                d = n("816442"),
                c = e => {
                    let {
                        markAsDismissed: t
                    } = e, n = (0, s.default)([l.default], () => l.default.useReducedMotion), c = (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)();
                    return c ? (0, a.jsx)(i.default, {
                        asset: (0, a.jsx)(r.default, {
                            className: d.video,
                            src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195118026772480/Safety_MUTE_Coachmark.mp4",
                            loop: !0,
                            autoPlay: !n,
                            width: "100%"
                        }),
                        header: u.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_HEADER,
                        content: u.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_CONTENT,
                        buttonCTA: u.default.Messages.GOT_IT,
                        className: d.coachmark,
                        onClick: e => {
                            e.stopPropagation(), t()
                        },
                        markAsDismissed: t,
                        caretPosition: i.CaretPosition.BOTTOM_CENTER,
                        headerClassName: d.header
                    }) : null
                }
        },
        286914: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserSafetyEducationReportingCoachmark: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("206230"),
                i = n("5667"),
                r = n("58608"),
                o = n("374089"),
                u = n("782340"),
                d = n("564998");
            let c = e => {
                let {
                    markAsDismissed: t
                } = e, n = (0, s.default)([l.default], () => l.default.useReducedMotion), c = (0, o.useCanSeeSafetyEducationReportingCoachmark)();
                return c ? (0, a.jsx)(i.default, {
                    asset: (0, a.jsx)(r.default, {
                        src: "https://cdn.discordapp.com/attachments/1063579271815245944/1095089224421740695/CEC_Reporting_Animation_v03_EN_1x1_Music_1.mp4",
                        loop: !0,
                        autoPlay: !n,
                        className: d.video,
                        width: "100%"
                    }),
                    header: u.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_HEADER,
                    content: u.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_CONTENT,
                    buttonCTA: u.default.Messages.GOT_IT,
                    onClick: e => {
                        e.stopPropagation(), t()
                    },
                    markAsDismissed: t,
                    caretPosition: i.CaretPosition.BOTTOM_CENTER,
                    headerClassName: d.header
                }) : null
            }
        },
        29322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("862337"),
                s = n("913144"),
                l = n("316272"),
                i = n("462274"),
                r = n("697218"),
                o = n("760679"),
                u = n("827520");
            class d extends l.default {
                _initialize() {
                    !__OVERLAY__ && (s.default.subscribe("SHARED_CANVAS_DRAW_LINE_POINT", this._handleDrawLinePoint), s.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleVoiceChannelEffectReceived))
                }
                _terminate() {
                    !__OVERLAY__ && (s.default.unsubscribe("SHARED_CANVAS_DRAW_LINE_POINT", this._handleDrawLinePoint), s.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleVoiceChannelEffectReceived), this.lineBatchTimer.stop())
                }
                _handleVoiceChannelEffectReceived(e) {
                    var t;
                    let {
                        lineId: n,
                        points: a,
                        userId: s,
                        streamerId: l,
                        emojiHose: d
                    } = e;
                    if (null != l && s !== (null === (t = r.default.getCurrentUser()) || void 0 === t ? void 0 : t.id)) {
                        if (null != a && null != n) {
                            let e = r.default.getUser(s);
                            null != e && (0, i.maybeFetchColors)(e.getAvatarURL(null, u.AVATAR_COLOR_AVATAR_SIZE)), (0, o.updateLinePoints)(n, s, l, a)
                        } else null != d && (d.lastUpdatedAt = Date.now(), (0, o.updateEmojiHose)(d, s, l))
                    }
                }
                constructor(...e) {
                    super(...e), this.linesToUpdate = {}, this.lineBatchTimer = new a.Interval, this._handleDrawLinePoint = e => {
                        let {
                            channelId: t,
                            lineId: n,
                            streamerId: a,
                            point: s
                        } = e;
                        null == this.linesToUpdate[n] ? this.linesToUpdate[n] = {
                            channelId: t,
                            streamerId: a,
                            points: [s]
                        } : this.linesToUpdate[n].points.push(s), null == this.lineBatchTimer._ref && this.lineBatchTimer.start(u.EVENT_TICK_RATE, this.sendLineBatch)
                    }, this.sendLineBatch = () => {
                        for (let e in this.linesToUpdate) {
                            let {
                                channelId: t,
                                points: n,
                                streamerId: a
                            } = this.linesToUpdate[e];
                            (0, o.addLinePoints)(t, e, a, n)
                        }
                        this.linesToUpdate = {}, this.lineBatchTimer.stop()
                    }
                }
            }
            var c = new d
        },
        447973: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("913144"),
                s = n("316272"),
                l = n("271938"),
                i = n("42887");
            class r extends s.default {
                _initialize() {
                    !__OVERLAY__ && (a.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleSoundboardSoundReceived), a.default.subscribe("GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY", this._handleSoundboardSoundPlayLocally), a.default.subscribe("VOICE_CHANNEL_SELECT", this._handleVoiceChannelSelect), a.default.subscribe("AUDIO_TOGGLE_SELF_DEAF", this._handleToggleSelfDeafened))
                }
                _terminate() {
                    !__OVERLAY__ && (a.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleSoundboardSoundReceived), a.default.unsubscribe("GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY", this._handleSoundboardSoundPlayLocally), a.default.unsubscribe("VOICE_CHANNEL_SELECT", this._handleVoiceChannelSelect), a.default.unsubscribe("AUDIO_TOGGLE_SELF_DEAF", this._handleToggleSelfDeafened))
                }
                constructor(...e) {
                    super(...e), this._playSound = function(e) {
                        arguments.length > 1 && void 0 !== arguments[1] && arguments[1], arguments.length > 2 && arguments[2], arguments.length > 3 && arguments[3]
                    }, this._stopAndClearSounds = () => {}, this._handleToggleSelfDeafened = () => {
                        i.default.isDeaf() && this._stopAndClearSounds()
                    }, this._handleSoundboardSoundReceived = e => {
                        let {
                            soundId: t,
                            soundVolume: n,
                            userId: a,
                            channelId: s
                        } = e;
                        if (null != t && a !== l.default.getId()) return this._playSound(t, n, a, s)
                    }, this._handleSoundboardSoundPlayLocally = e => {
                        let {
                            sound: t,
                            channelId: n
                        } = e, a = l.default.getId();
                        return this._playSound(t.soundId, t.volume, a, n)
                    }, this._handleVoiceChannelSelect = () => {
                        this._stopAndClearSounds()
                    }
                }
            }
        },
        949e3: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("139321"),
                r = n("269596"),
                o = n("42203"),
                u = n("42887"),
                d = n("18494"),
                c = n("227602"),
                E = n("447973"),
                f = n("305122"),
                _ = n("235004"),
                I = n("245463"),
                h = n("520497"),
                C = n("812809"),
                T = n("435895"),
                m = n("49111"),
                S = n("353927");
            class N extends E.default {
                _initialize() {
                    super._initialize(), !__OVERLAY__ && l.default.subscribe("OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST", this._handleOverlaySoundboardSoundsFetchRequest)
                }
                _terminate() {
                    super._terminate(), !__OVERLAY__ && l.default.unsubscribe("OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST", this._handleOverlaySoundboardSoundsFetchRequest)
                }
                constructor(...e) {
                    var t;
                    super(...e), t = this, this.playingSoundsWeb = new Map, this._stopAndClearSounds = () => {
                        u.default.supports(S.Features.SAMPLE_PLAYBACK) && u.default.getMediaEngine().eachConnection(e => {
                            e.stopAllSamplesLocalPlayback()
                        }), this.playingSoundsWeb.forEach(e => {
                            e.pause(), e.src = ""
                        }), this.playingSoundsWeb = new Map
                    }, this._playSound = async function(e) {
                        let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 ? arguments[2] : void 0,
                            s = arguments.length > 3 ? arguments[3] : void 0,
                            l = null != s && d.default.getVoiceChannelId() === s;
                        if ((null == s || l) && !u.default.isDeaf() && !_.default.isLocalSoundboardMuted(a)) try {
                            let s = {
                                soundKey: "".concat(a, "-").concat(e),
                                soundURL: (0, h.default)(e),
                                soundVolume: (0, C.default)(n),
                                reportSoundStartedPlaying: () => (0, f.reportSoundStartedPlaying)(e, a)
                            };
                            u.default.supports(S.Features.SAMPLE_PLAYBACK) ? await (0, T.playDesktopSound)(s) : await (0, T.playWebSound)(s, t.playingSoundsWeb)
                        } finally {
                            (0, f.reportSoundFinishedPlaying)(e, a)
                        }
                    }, this._handleOverlaySoundboardSoundsFetchRequest = () => {
                        (0, f.maybeFetchSoundboardSounds)()
                    }, this._handleOpenEducationModal = (e, t) => {
                        if (null == e) return;
                        let l = o.default.getChannel(t),
                            u = c.default.getKeybindForAction(m.GlobalKeybindActions.SOUNDBOARD_HOLD);
                        null != l && (0, I.default)(l) && null != u && r.default.hasHotspot(i.HotspotLocations.SOUNDBOARD_WHEEL_EDUCATION_MODAL) && (0, s.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await n.el("170441").then(n.bind(n, "170441"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guildId: e,
                                keybind: u,
                                channel: l
                            })
                        })
                    }
                }
            }
            var A = new N
        },
        486185: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("748820"),
                i = n("65597"),
                r = n("151426"),
                o = n("77078"),
                u = n("272030"),
                d = n("812204"),
                c = n("685665"),
                E = n("235145"),
                f = n("369964"),
                _ = n("649844"),
                I = n("244390"),
                h = n("42887"),
                C = n("471671"),
                T = n("148349"),
                m = n("754576"),
                S = n("78581"),
                N = n("429829"),
                A = n("191191"),
                p = n("646718"),
                g = n("782340"),
                R = n("566398");
            let O = "custom-call-sounds-education";

            function L(e) {
                let {
                    channel: t,
                    iconClassName: L,
                    className: M,
                    ...v
                } = e, {
                    mute: D,
                    suppress: x
                } = (0, I.default)(t), P = (0, i.default)([h.default], () => h.default.isDeaf()), y = D || x || P, [b, U] = s.useState(!1), G = t.getGuildId(), j = (0, S.useSoundBoardDismissContentTypes)({
                    isSoundboardButtonDisabled: y
                }), [F, k] = (0, E.useGetDismissibleContent)(j), {
                    AnalyticsLocationProvider: B
                } = (0, c.default)(d.default.SOUNDBOARD_BUTTON), w = (0, i.default)([C.default], () => C.default.isFocused()), H = (0, l.v4)();

                function V(e) {
                    null == e || e(), null != F && F !== r.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL && k()
                }

                function Y(e) {
                    null != G && (0, u.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("136137").then(n.bind(n, "136137"));
                        return t => (0, a.jsx)(e, {
                            guildId: G,
                            ...t
                        })
                    })
                }
                let W = e => (0, a.jsx)(o.Popout, {
                    shouldShow: b,
                    position: "top",
                    onRequestClose: () => U(!1),
                    renderPopout: e => {
                        let {
                            closePopout: n
                        } = e;
                        return (0, a.jsx)(A.default, {
                            guildId: G,
                            channel: t,
                            onClose: n,
                            gridNotice: F === r.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL && (0, a.jsx)(N.CustomCallSoundUpsell, {
                                onClose: n,
                                markAsDismissed: k
                            }),
                            analyticsSource: "rtc panel"
                        })
                    },
                    children: t => (0, a.jsx)("div", {
                        children: (0, a.jsxs)(o.Button, {
                            ...e,
                            ...t,
                            className: M,
                            wrapperClassName: M,
                            disabled: y,
                            onClick: () => {
                                var t;
                                V(), null == e || null === (t = e.onClick) || void 0 === t || t.call(e), U(!b)
                            },
                            onContextMenu: Y,
                            fullWidth: !0,
                            size: o.Button.Sizes.SMALL,
                            ...v,
                            children: [(0, a.jsx)(m.default, {
                                className: L
                            }), F === r.DismissibleContent.CUSTOM_CALL_SOUNDS_SPARKLES && (0, a.jsx)(T.default, {
                                paused: !w
                            })]
                        })
                    })
                });
                return F === r.DismissibleContent.CUSTOM_CALL_SOUNDS_VOICE_COACHMARK ? (0, a.jsx)(o.Popout, {
                    positionKey: H,
                    position: "top",
                    align: "center",
                    shouldShow: !0,
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(o.Dialog, {
                            "aria-labelledby": O,
                            children: (0, a.jsx)(f.default, {
                                isPremiumFeature: !0,
                                header: g.default.Messages.CALL_SOUNDS_UPSELL_TITLE_NON_SUB,
                                headerClassName: R.customCallSoundsFeatureHeader,
                                body: (0, a.jsx)(o.Text, {
                                    id: O,
                                    variant: "text-sm/normal",
                                    color: "always-white",
                                    children: g.default.Messages.CALL_SOUNDS_UPSELL_DESCRIPTION_NON_SUB
                                }),
                                tryItText: g.default.Messages.PREMIUM_UPSELL_GET_NITRO,
                                dismissibleContent: r.DismissibleContent.CUSTOM_CALL_SOUNDS_VOICE_COACHMARK,
                                artClassName: R.customCallSoundsFeatureArt,
                                onTryFeature: () => {
                                    (0, _.default)({
                                        subscriptionTier: p.PremiumSubscriptionSKUs.TIER_2,
                                        analyticsLocations: []
                                    }), V(t)
                                },
                                onClose: () => V(t),
                                shouldUseHorizontalButtons: !0,
                                inlineArt: !0
                            })
                        })
                    },
                    children: () => W()
                }) : (0, a.jsx)(B, {
                    children: (0, a.jsx)(o.Tooltip, {
                        text: function() {
                            if (D) return g.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_GUILD_MUTE;
                            if (x) return g.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_SUPPRESSED;
                            if (P) return g.default.Messages.SOUNDBOARD_OPEN_SOUNBOARRD_ERROR_DEAFENED;
                            return g.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD
                        }(),
                        children: e => W(e)
                    })
                })
            }
        },
        696770: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("79112"),
                i = n("369964"),
                r = n("49111"),
                o = n("782340"),
                u = n("828081");

            function d(e) {
                let {
                    markAsDismissed: t
                } = e;
                return (0, a.jsx)(i.default, {
                    header: o.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_HEADER,
                    body: o.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_BODY,
                    tryItText: o.default.Messages.TAKE_ME_THERE,
                    dismissibleContent: s.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION,
                    artClassName: u.art,
                    onTryFeature: () => {
                        l.default.open(r.UserSettingsSections.VOICE), t()
                    },
                    onClose: t,
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0
                })
            }
        },
        435895: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                playDesktopSound: function() {
                    return c
                },
                playWebSound: function() {
                    return E
                }
            });
            var a = n("627445"),
                s = n.n(a),
                l = n("773364"),
                i = n("42887"),
                r = n("812809");
            let o = null;
            try {
                o = new AudioContext
            } catch {}
            let u = new Map;
            async function d(e) {
                var t;
                let n = u.get(e);
                if (null != n) return n;
                let a = await (await fetch(e)).arrayBuffer(),
                    s = await (null === (t = o) || void 0 === t ? void 0 : t.decodeAudioData(a));
                return null != s && u.set(e, s), s
            }

            function c(e) {
                let {
                    soundKey: t,
                    soundURL: n,
                    soundVolume: a,
                    reportSoundStartedPlaying: r
                } = e;
                return new Promise(async e => {
                    let o = await d(n);
                    null == o && e(), i.default.getMediaEngine().eachConnection(n => {
                        n.context === l.MediaEngineContextTypes.DEFAULT && (r(), s(null != o, "audioBuffer cannot be null here"), n.startSamplesLocalPlayback(t, o, a, () => {
                            e()
                        }))
                    })
                })
            }

            function E(e, t) {
                let {
                    soundKey: n,
                    soundURL: a,
                    soundVolume: s,
                    reportSoundStartedPlaying: l
                } = e, i = t.get(n);
                if (null != i) {
                    i.currentTime = 0;
                    return
                }
                return new Promise(e => {
                    let i = new Audio(a);
                    i.volume = (0, r.default)(s), i.addEventListener("canplaythrough", () => {
                        l(), t.set(n, i), i.play()
                    }), i.addEventListener("ended", () => {
                        t.delete(n), i.src = "", e()
                    })
                })
            }
        },
        2129: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("271938"),
                r = n("662285"),
                o = n("629414"),
                u = n("53887"),
                d = n("486150"),
                c = n("555759"),
                E = n("450484"),
                f = n("782340");

            function _(e, t, n) {
                let _ = (0, s.useStateFromStores)([r.default, i.default], () => null != t ? (0, u.default)(r.default, i.default, t, e) : void 0, [e, t]);
                if (null == _ || null == e || null == t) return null;
                let I = _.isCurrentUser || _.notPlayable || _.playingSameTrack,
                    h = _.isCurrentUser || _.syncingWithUser || _.syncingWithParty;
                return [(0, a.jsx)(l.MenuItem, {
                    id: "spotify-play-".concat(e.session_id),
                    action: () => (0, c.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_PLAY, n),
                    label: f.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_PLAY_ON_SPOTIFY,
                    subtext: I ? (0, o.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_PLAY) : void 0,
                    disabled: I
                }, "spotify-play-".concat(e.session_id)), _.canPlaySpotify ? (0, a.jsx)(l.MenuItem, {
                    id: "spotify-sync-".concat(e.session_id),
                    action: () => (0, d.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_SYNC, n),
                    label: f.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_LISTEN_ALONG,
                    subtext: h ? (0, o.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_SYNC) : void 0,
                    disabled: h
                }, "spotify-sync-".concat(e.session_id)) : null]
            }
        },
        987285: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("913144"),
                s = n("629109"),
                l = n("990766"),
                i = n("316272"),
                r = n("374014"),
                o = n("373469"),
                u = n("271938"),
                d = n("42203"),
                c = n("42887"),
                E = n("808422");
            class f extends i.default {
                _initialize() {
                    a.default.subscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                _terminate() {
                    a.default.unsubscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                constructor(...e) {
                    super(...e), this.handleVoiceStateUpdates = e => {
                        let {
                            voiceStates: t
                        } = e, n = u.default.getId();
                        t.forEach(e => {
                            var t;
                            if (e.userId !== n) return;
                            let a = null === (t = d.default.getChannel(e.channelId)) || void 0 === t ? void 0 : t.isGuildStageVoice();
                            if (!a) return;
                            let s = (0, E.getAudienceRequestToSpeakState)(e) === E.RequestToSpeakStates.ON_STAGE;
                            !s && (this.handleStopStream(e), this.handleStopUserVideo())
                        })
                    }, this.handleStopStream = e => {
                        let t = o.default.getActiveStreamForUser(e.userId, e.guildId);
                        null != t && (0, l.stopStream)((0, r.encodeStreamKey)(t), !1)
                    }, this.handleStopUserVideo = () => {
                        c.default.isVideoEnabled() && s.default.setVideoEnabled(!1)
                    }
                }
            }
            var _ = new f
        },
        160870: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("271938"),
                l = n("18494"),
                i = n("325861");

            function r(e) {
                return (0, a.useStateFromStores)([s.default, l.default, i.default], () => {
                    let t = s.default.getId();
                    return l.default.getVoiceChannelId() === e ? i.default.getPermissionsForUser(t, e) : null
                }, [e])
            }
        },
        55282: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("42203"),
                o = n("18494"),
                u = n("328275"),
                d = n("489622"),
                c = n("244480"),
                E = n("130563"),
                f = n("151642"),
                _ = n("782340"),
                I = n("779007");

            function h(e) {
                let t = o.default.getVoiceChannelId();
                if (null == t) return;
                let n = r.default.getChannel(t);
                null != n && (0, c.audienceAckRequestToSpeak)(n, e)
            }

            function C() {
                var e;
                let t = (0, E.default)(),
                    n = null !== (e = (0, f.useStageBlockedUsersCount)(null == t ? void 0 : t.id)) && void 0 !== e ? e : 0;
                return null == t ? null : (0, a.jsxs)(d.default, {
                    className: I.container,
                    color: d.NoticeColors.DEFAULT,
                    children: [(0, a.jsx)("div", {
                        children: _.default.Messages.STAGE_SPEAK_INVITE_HEADER
                    }), n > 0 ? (0, a.jsxs)("div", {
                        className: I.blocked,
                        children: [(0, a.jsx)(u.default, {
                            width: 12,
                            height: 12,
                            className: I.blockedIcon
                        }), (0, a.jsx)("div", {
                            className: I.blockedText,
                            children: _.default.Messages.STAGE_SPEAK_INVITE_HEADER_BLOCKED_USERS.format({
                                number: n
                            })
                        })]
                    }) : null, (0, a.jsx)(i.Button, {
                        className: l(I.button, I.acceptButton),
                        size: i.Button.Sizes.MIN,
                        color: i.Button.Colors.WHITE,
                        onClick: () => h(!1),
                        children: (0, a.jsx)(i.Text, {
                            className: I.acceptText,
                            variant: "text-xs/normal",
                            color: "none",
                            children: _.default.Messages.STAGE_SPEAK_INVITE_ACCEPT
                        })
                    }), (0, a.jsx)(i.Button, {
                        className: l(I.button, I.declineButton),
                        look: i.Button.Looks.OUTLINED,
                        size: i.Button.Sizes.MIN,
                        color: i.Button.Colors.WHITE,
                        onClick: () => h(!0),
                        children: (0, a.jsx)(i.Text, {
                            className: I.declineText,
                            variant: "text-xs/normal",
                            color: "none",
                            children: _.default.Messages.STAGE_SPEAK_INVITE_DECLINE
                        })
                    })]
                })
            }
        },
        686551: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("271938"),
                o = n("42203"),
                u = n("235660"),
                d = n("808422"),
                c = n("49111");
            let E = "STAGE_INVITED_TO_SPEAK_MODAL";
            class f extends i.default {
                _initialize() {
                    l.default.subscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                _terminate() {
                    l.default.unsubscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                constructor(...e) {
                    super(...e), this.handleVoiceStateUpdates = e => {
                        var t;
                        let {
                            voiceStates: l
                        } = e, i = r.default.getId(), f = null === (t = u.default.getSession()) || void 0 === t ? void 0 : t.sessionId, _ = l.find(e => e.userId === i && e.sessionId === f);
                        if (null == _) return;
                        let I = _.channelId;
                        if (null == I) {
                            (0, s.hasModalOpen)(E) && (0, s.closeModal)(E);
                            return
                        }
                        let h = o.default.getChannel(I),
                            C = null == h ? void 0 : h.isGuildStageVoice();
                        if (!C) return;
                        let T = (0, d.getAudienceRequestToSpeakState)(_) === d.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK;
                        if (null != h && T) {
                            if ((0, s.hasModalOpen)(E)) return;
                            (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("730705").then(n.bind(n, "730705"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    channel: h
                                })
                            }, {
                                modalKey: E,
                                onCloseRequest: c.NOOP_NULL
                            })
                        }
                    }
                }
            }
            var _ = new f
        },
        885590: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                StageChannelNowPlayingDelegate: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("77078"),
                r = n("42203"),
                o = n("716214"),
                u = n("118033"),
                d = n("834052"),
                c = n("782340");

            function E(e) {
                var t, n;
                let {
                    activity: E
                } = e, {
                    channelId: f
                } = null !== (t = (0, u.unpackStageChannelParty)(E)) && void 0 !== t ? t : {}, _ = (0, l.default)([d.default], () => d.default.getStageInstanceByChannel(f), [f]), I = s.useRef(null), h = s.useCallback(() => {
                    let e = r.default.getChannel(f);
                    null != e && o.connectAndOpen(e)
                }, [f]), C = null !== (n = null == _ ? void 0 : _.topic) && void 0 !== n ? n : E.name, T = c.default.Messages.STAGE_CHANNEL_ACTIVITY_FEED_JOIN.format({
                    channel: C
                });
                return (0, a.jsx)("div", {
                    ref: I,
                    children: (0, a.jsx)(i.Clickable, {
                        onClick: h,
                        focusProps: {
                            ringTarget: I
                        },
                        children: (0, a.jsx)(i.Heading, {
                            variant: "heading-sm/semibold",
                            children: T
                        })
                    })
                })
            }
            class f {
                shouldShow(e) {
                    return (0, u.shouldShowActivity)(e)
                }
                createHeader(e) {
                    return {
                        subtitle: c.default.Messages.STAGE_CHANNEL_ACTIVITY_FEED_DEFAULT,
                        icon: null
                    }
                }
                constructor() {
                    this.body = E
                }
            }
        },
        819565: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("734575"),
                l = n("305961"),
                i = n("957255"),
                r = n("49111");

            function o(e) {
                let t = (0, a.useStateFromStores)([l.default], () => l.default.getGuild(e)),
                    n = i.default.can(r.Permissions.MANAGE_GUILD, t),
                    o = (0, s.useGuildEligibleForSummaries)(t);
                return o && n
            }
        },
        247030: function(e, t, n) {
            "use strict";

            function a(e) {
                return !1
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        762887: function(e, t, n) {
            "use strict";

            function a(e) {
                return !1
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        269162: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("77078"),
                i = n("164586"),
                r = n("298878"),
                o = n("592407"),
                u = n("599110"),
                d = n("701909"),
                c = n("49111"),
                E = n("782340"),
                f = n("323464"),
                _ = n("933751");

            function I(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e, I = () => {
                    open(d.default.getArticleURL(c.HelpdeskArticles.CONVERSATION_SUMMARIES)), n()
                };
                return (0, a.jsx)(i.default, {
                    image: _,
                    imageMarginX: 64,
                    guild: t,
                    onDismissed: n,
                    centerText: !0,
                    onClick: I,
                    title: () => (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("div", {
                            className: f.centerContainer,
                            children: (0, a.jsx)(r.default, {
                                color: s.default.unsafe_rawColors.BRAND_500.css,
                                className: f.betaTag
                            })
                        }), (0, a.jsx)("div", {
                            className: f.centerContainer,
                            children: (0, a.jsx)(l.Text, {
                                variant: "text-md/medium",
                                color: "header-primary",
                                className: f.title,
                                children: E.default.Messages.SUMMARIES_CHANNEL_NOTICE_TITLE
                            })
                        })]
                    }),
                    message: E.default.Messages.SUMMARIES_CHANNEL_NOTICE_SUBTITLE,
                    cta: () => (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(l.Button, {
                            className: f.button,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => {
                                o.default.open(t.id, c.GuildSettingsSections.OVERVIEW), u.default.track(c.AnalyticEvents.SUMMARIES_NOTICE_MANAGE_SETTINGS_CTA_CLICKED, {
                                    guild_id: t.id
                                }), n()
                            },
                            fullWidth: !0,
                            children: E.default.Messages.SUMMARIES_CHANNEL_NOTICE_MANAGE_SETTINGS
                        }), (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.PRIMARY,
                            className: f.button,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => {
                                u.default.track(c.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                                    source: c.ChannelNoticeCtaSources.SUMMARIES_NOTICE,
                                    guild_id: t.id,
                                    notice_type: c.ChannelNoticeTypes.SUMMARIES
                                }), I()
                            },
                            fullWidth: !0,
                            children: E.default.Messages.SUMMARIES_CHANNEL_NOTICE_LEARN_MORE
                        })]
                    }),
                    trackingSource: c.ChannelNoticeCtaSources.SUMMARIES_NOTICE,
                    type: c.ChannelNoticeTypes.SUMMARIES
                })
            }
        },
        125826: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("77078"),
                i = n("592407"),
                r = n("5667"),
                o = n("543289"),
                u = n("909004"),
                d = n("956089"),
                c = n("701909"),
                E = n("49111"),
                f = n("782340"),
                _ = n("2404");

            function I(e) {
                let {
                    guild: t,
                    markAsDismissed: I
                } = e;
                return (0, a.jsx)("div", {
                    className: _.container,
                    children: (0, a.jsx)(r.default, {
                        asset: (0, a.jsxs)("div", {
                            className: _.asset,
                            children: [(0, a.jsx)(u.default, {
                                height: 24,
                                width: 24,
                                className: _.summaryIcon
                            }), (0, a.jsx)(o.default, {
                                className: _.stars
                            })]
                        }),
                        header: (0, a.jsxs)("div", {
                            className: _.header,
                            children: [f.default.Messages.SUMMARIES_UPSELL_TITLE, (0, a.jsx)(d.TextBadge, {
                                text: f.default.Messages.BETA,
                                color: s.default.unsafe_rawColors.BRAND_500.css,
                                className: _.betaTag
                            })]
                        }),
                        content: (0, a.jsxs)("div", {
                            className: _.content,
                            children: [f.default.Messages.SUMMARIES_UPSELL_SUBTITLE, (0, a.jsx)(l.Text, {
                                className: _.learnMore,
                                variant: "text-sm/medium",
                                children: f.default.Messages.SUMMARIES_UPSELL_LEARN_MORE_LINK.format({
                                    helpdeskArticle: c.default.getArticleURL(E.HelpdeskArticles.CONVERSATION_SUMMARIES)
                                })
                            })]
                        }),
                        buttonCTA: f.default.Messages.ENABLE,
                        onClick: () => {
                            (0, l.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("390251").then(n.bind(n, "390251")), s = new Set(t.features);
                                return s.add(E.GuildFeatures.SUMMARIES_ENABLED_BY_USER), i.default.updateGuild({
                                    features: s
                                }), i.default.saveGuild(t.id, {
                                    features: s
                                }), t => (0, a.jsx)(e, {
                                    ...t
                                })
                            })
                        },
                        secondaryButtonCTA: f.default.Messages.DISMISS,
                        markAsDismissed: I
                    })
                })
            }
        },
        357046: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MAX_TTS_LENGTH: function() {
                    return a
                },
                SPEECH_RATE_INCREMENTS: function() {
                    return s
                }
            });
            let a = 200,
                s = [0, .25, .5, .75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.25, 3.5, 3.75, 4, 4.25, 4.5, 4.75, 5, 5.25, 5.5, 5.75, 6, 6.25, 6.5, 6.75, 7, 7.25, 7.5, 7.75, 8, 8.25, 8.5, 8.75, 9, 9.25, 9.5, 9.75, 10]
        },
        481395: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return w
                }
            });
            var a = n("913144"),
                s = n("533280"),
                l = n("679653"),
                i = n("256572"),
                r = n("915639"),
                o = n("845579"),
                u = n("271938"),
                d = n("982108"),
                c = n("42203"),
                E = n("26989"),
                f = n("305961"),
                _ = n("42887"),
                I = n("385649"),
                h = n("27618"),
                C = n("18494"),
                T = n("282109"),
                m = n("697218"),
                S = n("158998"),
                N = n("76629"),
                A = n("981957"),
                p = n("357046"),
                g = n("49111"),
                R = n("782340");
            let O = [],
                L = null,
                M = null,
                v = null,
                D = /\|\|([\s\S]+?)\|\|/g;

            function x(e, t, n, a) {
                let s = f.default.getGuild(n),
                    i = e.replace(D, R.default.Messages.SPOILER).replace(/<@!?(\d+)>/g, (e, t) => {
                        var a;
                        let s = m.default.getUser(t);
                        if (null == s) return e;
                        return null !== (a = E.default.getNick(n, s.id)) && void 0 !== a ? a : S.default.getName(s)
                    }).replace(/<@&?(\d+)>/g, (e, t) => {
                        let n = null != s ? s.roles[t] : null;
                        return null != n && null != n.name ? n.name : R.default.Messages.MESSAGE_TTS_DELETED_ROLE
                    }).replace(/<#(\d+)>/g, (e, t) => {
                        let n = c.default.getChannel(t);
                        return null == n ? e : (0, l.computeChannelName)(n, m.default, h.default)
                    }).replace(/<a?:(\w+):(\d+)>/g, (e, t) => "".concat(R.default.Messages.EMOJI, " ").concat(t)).replace(/<\/([^\s]+?):(\d+)>/g, (e, t) => "/".concat(t));
                return null == a ? R.default.Messages.MESSAGE_TTS.format({
                    username: t,
                    body: i
                }) : R.default.Messages.MESSAGE_TTS_REPLY.format({
                    username: t,
                    body: i,
                    replyUsername: a
                })
            }

            function P() {
                if (!s.supported) return !1;
                let e = r.default.locale;
                if (null == v) {
                    var t;
                    v = null === (t = window.speechSynthesis) || void 0 === t ? void 0 : t.getVoices()
                }
                let n = v.filter(t => t.lang === e || t.lang.slice(0, e.length) === e || !1);
                M = n.length > 0 ? n[0] : null
            }
            async function y(e, t, n, a, l) {
                let i = s.createUtterance(e, n);
                if (null !== i) {
                    if (null == M && P(), t) await (0, N.stopSpeaking)();
                    else {
                        var r;
                        null === (r = L) || void 0 === r || r.removeEventListener("end", N.stopSpeaking)
                    }
                    i.addEventListener("end", N.stopSpeaking), null != a && i.addEventListener("start", a), null != l && i.addEventListener("end", l), L = i, s.speakUtterance(i, M)
                }
            }

            function b(e, t, n, a, s) {
                y(e, t, s, () => {
                    (0, N.speakingMessage)(n, a)
                })
            }

            function U(e) {
                let {
                    text: t,
                    interrupt: n,
                    maxLength: a,
                    onStart: s,
                    onEnd: l
                } = e;
                y(t, n, a, s, l)
            }

            function G() {
                return null !== L && L.removeEventListener("end", N.stopSpeaking), s.cancelAll(), L = null, !0
            }

            function j(e) {
                var t, n, a;
                let {
                    message: s,
                    channel: l
                } = e, r = s.type === g.MessageTypes.REPLY ? i.default.getMessageByReference(s.messageReference) : null, o = (null == r ? void 0 : r.state) === i.ReferencedMessageState.LOADED ? null == r ? void 0 : null === (t = r.message) || void 0 === t ? void 0 : t.author : null, u = null != o ? null !== (n = E.default.getNick(l.guild_id, null == o ? void 0 : o.id)) && void 0 !== n ? n : S.default.getName(o) : null, d = l.getGuildId(), c = null !== (a = E.default.getNick(d, s.author.id)) && void 0 !== a ? a : S.default.getName(s.author), f = x(s.content, c, d, u);
                return b(f, !0, l.id, s.id), !0
            }

            function F(e) {
                var t, n, a, s, l, i, r;
                let {
                    channelId: f,
                    message: m,
                    optimistic: N
                } = e;
                if (N || _.default.isSelfDeaf()) return !1;
                let A = c.default.getChannel(f);
                if (null == A) return !1;
                let R = C.default.getChannelId(),
                    L = d.default.getCurrentSidebarChannelId(R),
                    M = f === R || f === L,
                    v = o.EnableTTSCommand.getSetting() && m.tts && M,
                    D = I.default.getTTSType(),
                    P = (null === (t = m.author) || void 0 === t ? void 0 : t.id) !== u.default.getId() && (D === g.TTSNotificationTypes.ALL_CHANNELS || D === g.TTSNotificationTypes.SELECTED_CHANNEL && M);
                if ((v || P) && ((null === (n = m.author) || void 0 === n ? void 0 : n.id) == null || !h.default.isBlocked(m.author.id))) {
                    if (O.indexOf(m.id) >= 0) return !1;
                    O.unshift(m.id) > 10 && O.pop();
                    let e = A.getGuildId();
                    if (null != e && T.default.getMutedChannels(e).has(f)) return !1;
                    let t = null !== (i = null !== (l = E.default.getNick(e, null === (a = m.author) || void 0 === a ? void 0 : a.id)) && void 0 !== l ? l : S.default.getName(m.author)) && void 0 !== i ? i : "",
                        n = m.type === g.MessageTypes.REPLY ? null === (s = m.referenced_message) || void 0 === s ? void 0 : s.author : null,
                        o = null != n ? null !== (r = E.default.getNick(e, null == n ? void 0 : n.id)) && void 0 !== r ? r : S.default.getName(n) : null,
                        u = x(m.content, t, e, o);
                    b(u, !1, A.id, m.id, p.MAX_TTS_LENGTH)
                }
                return !1
            }

            function k(e) {
                let {
                    id: t,
                    channelId: n
                } = e, a = A.default.currentMessage;
                return null != a && t === a.messageId && n === a.channelId && ((0, N.stopSpeaking)(), !0)
            }

            function B() {
                _.default.isSelfDeaf() && s.cancelAll()
            }
            var w = {
                init() {
                    a.default.subscribe("SPEAK_TEXT", U), a.default.subscribe("SPEAK_MESSAGE", j), a.default.subscribe("STOP_SPEAKING", G), a.default.subscribe("MESSAGE_CREATE", F), a.default.subscribe("MESSAGE_DELETE", k), a.default.subscribe("AUDIO_TOGGLE_SELF_DEAF", B), a.default.subscribe("USER_SETTINGS_PROTO_UPDATE", P), a.default.subscribe("I18N_LOAD_SUCCESS", P)
                }
            }
        },
        542789: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("575365"),
                o = n("546463"),
                u = n("824563"),
                d = n("27618"),
                c = n("697218"),
                E = n("599110"),
                f = n("713135"),
                _ = n("49111"),
                I = n("450484");
            let h = null;
            async function C(e) {
                var t, l, i, C, T, m, S, N, A, p;
                let g, R, O, {
                        userId: L,
                        section: M,
                        guildId: v = _.ME,
                        channelId: D,
                        friendToken: x,
                        autoFocusNote: P,
                        analyticsLocation: y
                    } = e,
                    b = c.default.getUser(L),
                    U = f.default.getUserProfile(L);
                if (null == b) return;
                let G = u.default.getPrimaryActivity(L);
                null != G && (g = G.party, R = G.assets, O = null != G.application_id ? o.default.getGame(G.application_id) : null);
                let j = u.default.getStatus(L),
                    F = u.default.isMobileOnline(L),
                    k = j;
                j === _.StatusTypes.ONLINE && (k = F ? _.AnalyticsUserStatusTypes.ONLINE_MOBILE : _.AnalyticsUserStatusTypes.ONLINE_DESKTOP), h = await (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await n.el("279286").then(n.bind(n, "279286"));
                    return t => (0, a.jsx)(e, {
                        ...t,
                        user: b,
                        autoFocusNote: P,
                        guildId: v,
                        friendToken: x,
                        initialSection: M,
                        channelId: D
                    })
                }), E.default.track(_.AnalyticEvents.OPEN_MODAL, {
                    type: "Profile Modal",
                    guild_id: v !== _.ME ? v : null,
                    channel_id: D,
                    other_user_id: L,
                    application_id: null !== (N = null == G ? void 0 : G.application_id) && void 0 !== N ? N : null,
                    application_name: null == G ? void 0 : G.name,
                    sku_id: null !== (A = null === (t = O) || void 0 === t ? void 0 : t.primarySkuId) && void 0 !== A ? A : null,
                    is_friend: d.default.isFriend(L),
                    has_images: !!(null !== (p = null === (l = R) || void 0 === l ? void 0 : l.large_image) && void 0 !== p ? p : null === (i = R) || void 0 === i ? void 0 : i.small_image),
                    party_max: null === (T = g) || void 0 === T ? void 0 : null === (C = T.size) || void 0 === C ? void 0 : C[1],
                    party_id: null === (m = g) || void 0 === m ? void 0 : m.id,
                    party_platform: (0, I.isSpotifyParty)(null === (S = g) || void 0 === S ? void 0 : S.id) ? _.PlatformTypes.SPOTIFY : null,
                    game_platform: (0, r.default)(G),
                    profile_user_status: k,
                    profile_has_nitro_customization: (null == U ? void 0 : U.banner) != null,
                    profile_has_profile_effect: (null == U ? void 0 : U.profileEffectID) != null,
                    ...null == y ? null : (0, E.expandLocation)(y)
                })
            }

            function T() {
                null != h && (0, s.closeModal)(h), h = null
            }
            class m extends i.default {
                _initialize() {
                    l.default.subscribe("USER_PROFILE_MODAL_OPEN", C), l.default.subscribe("USER_PROFILE_MODAL_CLOSE", T)
                }
                _terminate() {
                    l.default.unsubscribe("USER_PROFILE_MODAL_OPEN", C), l.default.unsubscribe("USER_PROFILE_MODAL_CLOSE", T)
                }
            }
            var S = new m
        },
        177632: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("77078"),
                r = n("327037"),
                o = n("330387"),
                u = n("476765"),
                d = n("49111"),
                c = n("782340"),
                E = n("305502");

            function f(e) {
                let {
                    transitionState: t
                } = e, f = (0, l.default)([o.default], () => o.default.getAction()), [_, I] = s.useState(!1), h = (0, u.useUID)();
                async function C() {
                    if (I(!0), f === d.UserRequiredActions.AGREEMENTS) {
                        let e = await (0, r.acceptAgreements)();
                        I(e)
                    }
                    return null
                }
                return (0, a.jsxs)(i.ModalRoot, {
                    "aria-labelledby": h,
                    transitionState: t,
                    children: [(0, a.jsx)("div", {
                        id: h
                    }), (0, a.jsx)(i.ModalHeader, {
                        separator: !1,
                        children: (0, a.jsx)(i.Heading, {
                            variant: "heading-lg/semibold",
                            children: c.default.Messages.NEW_TERMS_TITLE
                        })
                    }), (0, a.jsxs)(i.ModalContent, {
                        children: [(0, a.jsx)(i.Text, {
                            variant: "text-md/normal",
                            children: f === d.UserRequiredActions.AGREEMENTS ? c.default.Messages.TERMS_OF_SERVICE_UPDATE_03_27_2023_DESCRIPTION.format() : null
                        }), (0, a.jsxs)("div", {
                            className: E.container,
                            children: [(0, a.jsxs)("ul", {
                                className: E.links,
                                children: [(0, a.jsx)("li", {
                                    children: c.default.Messages.TERMS_OF_SERVICE.format({
                                        url: d.MarketingURLs.TERMS
                                    })
                                }), (0, a.jsx)("li", {
                                    children: c.default.Messages.PAID_SERVICES_TERMS.format({
                                        url: d.MarketingURLs.PAID_TERMS
                                    })
                                }), (0, a.jsx)("li", {
                                    children: c.default.Messages.PRIVACY_POLICY.format({
                                        url: d.MarketingURLs.PRIVACY
                                    })
                                }), (0, a.jsx)("li", {
                                    children: c.default.Messages.COMMUNITY_GUIDELINES.format({
                                        url: d.MarketingURLs.GUIDELINES
                                    })
                                })]
                            }), (0, a.jsx)("img", {
                                className: E.image,
                                alt: "",
                                src: n("275974")
                            })]
                        })]
                    }), (0, a.jsx)(i.ModalFooter, {
                        children: (0, a.jsx)(i.Button, {
                            submitting: _,
                            onClick: C,
                            color: i.Button.Colors.GREEN,
                            children: c.default.Messages.AGREE
                        })
                    })]
                })
            }
        },
        84124: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("892313"),
                r = n("61928"),
                o = n("697218"),
                u = n("708169"),
                d = n("668596"),
                c = n("197881"),
                E = n("177632"),
                f = n("49111"),
                _ = n("843455");
            let I = "AGREEMENTS_MODAL_KEY";
            var h = {
                init() {
                    l.default.subscribe("CONNECTION_OPEN", this.handleRequiredAction), l.default.subscribe("USER_REQUIRED_ACTION_UPDATE", this.handleRequiredAction), l.default.subscribe("CURRENT_USER_UPDATE", this.handleCurrentUserUpdate), l.default.subscribe("LOGOUT", this.handleLogout)
                },
                handleRequiredAction(e) {
                    let t = e.requiredAction;
                    !c.ProcessArgs.isDisallowPopupsSet() && (null == o.default.getCurrentUser() ? ((0, u.closeFullScreenLayer)("verification"), (0, s.hasModalOpen)(I) && (0, s.closeModal)(I)) : t === f.UserRequiredActions.REQUIRE_CAPTCHA || t === f.UserRequiredActions.REQUIRE_VERIFIED_EMAIL || t === f.UserRequiredActions.REQUIRE_VERIFIED_PHONE || t === f.UserRequiredActions.REQUIRE_REVERIFIED_PHONE || t === f.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE || t === f.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE || i.default.isEmailReverification(t) ? (0, u.openFullScreenLayer)(() => (0, a.jsx)(r.default, {}), {
                        layerKey: "verification",
                        Layer: d.default
                    }) : t === f.UserRequiredActions.AGREEMENTS ? (0, s.openModal)(e => (0, a.jsx)(E.default, {
                        ...e
                    }), {
                        modalKey: I,
                        onCloseRequest: _.NOOP_NULL
                    }) : null == t && ((0, u.closeFullScreenLayer)("verification"), (0, s.hasModalOpen)(I) && (0, s.closeModal)(I)))
                },
                handleLogout() {
                    (0, u.closeFullScreenLayer)("verification")
                },
                handleCurrentUserUpdate(e) {
                    let {
                        user: t
                    } = e;
                    t.verified && (0, s.closeModal)(r.EMAIL_VERIFICATION_MODAL_KEY)
                }
            }
        },
        389434: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchEmailSettings: function() {
                    return u
                },
                updateEmailSetting: function() {
                    return d
                },
                updateMarketingEmailSettings: function() {
                    return c
                }
            });
            var a = n("759843"),
                s = n("627929"),
                l = n("913144"),
                i = n("840707"),
                r = n("853994"),
                o = n("49111");
            async function u() {
                try {
                    let e = await i.default.get({
                        url: o.Endpoints.EMAIL_SETTINGS,
                        trackedActionData: {
                            event: a.NetworkActionNames.EMAIL_SETTINGS_FETCH,
                            properties: e => {
                                var t;
                                let n = null == e ? void 0 : null === (t = e.body) || void 0 === t ? void 0 : t.initialized;
                                return (0, s.exact)({
                                    initialized: n
                                })
                            }
                        }
                    });
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_FETCH_SUCCESS",
                        settings: e.body
                    })
                } catch {
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_FETCH_FAILURE"
                    })
                }
            }
            async function d(e, t) {
                l.default.dispatch({
                    type: "EMAIL_SETTINGS_UPDATE",
                    updates: {
                        [e]: t
                    }
                });
                try {
                    let n = await i.default.patch({
                        url: o.Endpoints.EMAIL_SETTINGS,
                        body: {
                            settings: {
                                categories: {
                                    [e]: t
                                }
                            }
                        },
                        trackedActionData: {
                            event: a.NetworkActionNames.EMAIL_SETTINGS_UPDATE,
                            properties: {
                                category: e,
                                value: t
                            }
                        }
                    });
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_SUCCESS",
                        settings: n.body
                    })
                } catch (e) {
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_FAILURE"
                    })
                }
            }
            async function c() {
                let e = r.MarketingEmailCategories.reduce((e, t) => ({
                    ...e,
                    [t]: !1
                }), {});
                l.default.dispatch({
                    type: "EMAIL_SETTINGS_UPDATE",
                    updates: e
                });
                try {
                    let t = await i.default.patch({
                        url: o.Endpoints.EMAIL_SETTINGS,
                        body: {
                            settings: {
                                categories: e
                            }
                        },
                        trackedActionData: {
                            event: a.NetworkActionNames.EMAIL_SETTINGS_UPDATE,
                            properties: {
                                category: "marketing",
                                value: !1
                            }
                        }
                    });
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_SUCCESS",
                        settings: t.body
                    })
                } catch (e) {
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_FAILURE"
                    })
                }
            }
        },
        853994: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EMAILS_SUBSECTION: function() {
                    return i
                },
                EmailCategories: function() {
                    return s
                },
                MarketingEmailCategories: function() {
                    return r
                },
                EmailCategoriesList: function() {
                    return o
                }
            });
            var a, s, l = n("782340");
            let i = "emails";
            (a = s || (s = {})).COMMUNICATION = "communication", a.SOCIAL = "social", a.TIPS = "tips", a.RECOMMENDATIONS_AND_EVENTS = "recommendations_and_events", a.UPDATES_AND_ANNOUNCEMENTS = "updates_and_announcements", a.FAMILY_CENTER_DIGEST = "family_center_digest";
            let r = [s.TIPS, s.RECOMMENDATIONS_AND_EVENTS, s.UPDATES_AND_ANNOUNCEMENTS],
                o = [{
                    category: s.COMMUNICATION,
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_COMMUNICATION,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_COMMUNICATION_SUBLABEL
                }, {
                    category: s.SOCIAL,
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_SOCIAL,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_SOCIAL_SUBLABEL
                }, {
                    category: s.UPDATES_AND_ANNOUNCEMENTS,
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_UPDATES_AND_ANNOUNCEMENTS,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_UPDATES_AND_ANNOUNCEMENTS_SUBLABEL
                }, {
                    category: s.TIPS,
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_TIPS,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_TIPS_SUBLABEL
                }, {
                    category: s.RECOMMENDATIONS_AND_EVENTS,
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_RECOMMENDATIONS_AND_EVENTS,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_RECOMMENDATIONS_AND_EVENTS_SUBLABEL
                }]
        },
        521128: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = {},
                i = null;

            function r() {
                l = {}, i = null
            }
            class o extends a.default.Store {
                getEmailSettings() {
                    return {
                        categories: l,
                        initialized: i
                    }
                }
            }
            o.displayName = "EmailSettingsStore";
            var u = new o(s.default, {
                CONNECTION_OPEN: r,
                LOGOUT: r,
                EMAIL_SETTINGS_FETCH_SUCCESS: function(e) {
                    let {
                        settings: t
                    } = e;
                    l = t.categories, i = t.initialized
                },
                EMAIL_SETTINGS_UPDATE_SUCCESS: function(e) {
                    let {
                        settings: t
                    } = e;
                    l = t.categories
                },
                EMAIL_SETTINGS_UPDATE: function(e) {
                    let {
                        updates: t
                    } = e;
                    l = {
                        ...l,
                        ...t
                    }
                }
            })
        },
        647627: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("713349"),
                r = n("95410"),
                o = n("116949"),
                u = n("397336");

            function d(e) {
                var t;
                let n;
                (t = n || (n = {})).IMAGE = "IMAGE", t.VIDEO = "VIDEO";
                let {
                    state: a
                } = l.default.PersistedStore.migrateAndReadStoreState("GIFFavoritesStore", [e => null == e ? {
                    favorites: [],
                    timesFavorited: 0
                } : Array.isArray(e) ? {
                    favorites: e,
                    timesFavorited: 0
                } : e, e => Array.isArray(e.favorites) ? e : {
                    favorites: [],
                    timesFavorited: 0
                }]);
                return null == a || 0 === a.favorites.length ? [] : a.favorites.map((t, s) => {
                    let l = i.FavoriteGIF.create();
                    return l.format = t.format === n.IMAGE ? i.GIFType.IMAGE : t.format === n.VIDEO ? i.GIFType.VIDEO : i.GIFType.NONE, l.src = t.src, l.width = t.width, l.height = t.height, l.order = a.favorites.length - s + e, {
                        url: t.url,
                        favorite: l
                    }
                })
            }
            let c = [{
                version: 2,
                run(e) {
                    let t = d(1);
                    if (0 === t.length) return !1;
                    for (let {
                            url: n,
                            favorite: a
                        }
                        of(null == e.favoriteGifs && (e.favoriteGifs = i.FavoriteGIFs.create()), e.favoriteGifs.gifs = {}, t)) e.favoriteGifs.gifs[n] = a;
                    return e.favoriteGifs.hideTooltip = t.length > 2, !0
                },
                cleanup() {}
            }, {
                version: 3,
                run(e) {
                    function t() {
                        return {
                            usageHistory: {},
                            favorites: []
                        }
                    }
                    let {
                        state: n
                    } = l.default.PersistedStore.migrateAndReadStoreState("StickersPersistedStore", [e => null == e || 0 === Object.keys(e).length ? t() : e, e => null == e || 0 === Object.keys(e).length ? t() : (null == e.favorites && (e.favorites = []), e)]);
                    if (null == n) return !1;
                    let a = !1;
                    return n.favorites.length > 0 && (e.favoriteStickers = i.FavoriteStickers.create(), e.favoriteStickers.stickerIds = s.uniq(n.favorites).slice(0, u.MAX_FAVORITES), a = !0), s.size(n.usageHistory) > 0 && (e.stickerFrecency = i.StickerFrecency.create(), e.stickerFrecency.stickers = (0, o.serializeUsageHistory)(n.usageHistory, 100), a = !0), a
                },
                cleanup() {
                    r.default.remove("StickersPersistedStore")
                }
            }, {
                version: 4,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [() => ({
                        usageHistory: r.default.get("EmojiUsageHistory") || {}
                    })]);
                    if (null == t) return !1;
                    let n = !1;
                    return null != t.favorites && t.favorites.length > 0 && (e.favoriteEmojis = i.FavoriteEmojis.create(), e.favoriteEmojis.emojis = s.uniq(t.favorites).slice(0, u.MAX_FAVORITES), n = !0), s.size(t.usageHistory) > 0 && (e.emojiFrecency = i.EmojiFrecency.create(), e.emojiFrecency.emojis = (0, o.serializeUsageHistory)(t.usageHistory, 100), n = !0), n
                },
                cleanup() {
                    r.default.remove("EmojiStore"), r.default.remove("EmojiUsageHistory"), r.default.remove("EmojiDiversitySurrogate")
                }
            }, {
                version: 6,
                run(e) {
                    null == e.favoriteGifs && (e.favoriteGifs = i.FavoriteGIFs.create()), null == e.favoriteGifs.gifs && (e.favoriteGifs.gifs = {});
                    let t = d(1);
                    if (0 === t.length) return !1;
                    s(e.favoriteGifs.gifs).values().sortBy("order").forEach((e, n) => e.order = t.length + 1 + n);
                    let n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length,
                        a = 0;
                    for (let {
                            url: s,
                            favorite: l
                        }
                        of t) {
                        if (l.order = t.length - a, a++, s in e.favoriteGifs.gifs) {
                            e.favoriteGifs.gifs[s].order = l.order;
                            continue
                        }
                        let r = i.FavoriteGIF.toBinary(l).length + s.length + 7;
                        !(n + r > u.MAX_FAVORITE_GIFS_SIZE) && (n += r, e.favoriteGifs.gifs[s] = l)
                    }
                    for (n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length; n > u.MAX_FAVORITE_GIFS_SIZE;) {
                        let t = 0;
                        for (let n in e.favoriteGifs.gifs)
                            if (delete e.favoriteGifs.gifs[n], ++t >= 10) break;
                        n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length
                    }
                    return !0
                },
                cleanup() {}
            }, {
                version: 7,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("ApplicationCommandFrecency", []);
                    if (null == t) return !1;
                    let n = !1;
                    return s.size(t.usageHistory) > 0 && (e.applicationCommandFrecency = i.ApplicationCommandFrecency.create(), e.applicationCommandFrecency.applicationCommands = (0, o.serializeUsageHistory)(t.usageHistory, 500), n = !0), n
                },
                cleanup() {
                    r.default.remove("ApplicationCommandFrecency")
                }
            }, {
                version: 8,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("SoundboardFavoriteStore", []);
                    if (null == t) return !1;
                    let n = !1;
                    return s.size(t.favoriteSounds) > 0 && (e.favoriteSoundboardSounds = i.FavoriteSoundboardSounds.create(), Object.keys(t.favoriteSounds).forEach(n => {
                        let a = new Set(t.favoriteSounds[n]);
                        a.forEach(t => {
                            var n;
                            null === (n = e.favoriteSoundboardSounds) || void 0 === n || n.soundIds.push(t)
                        })
                    }), n = !0), n
                },
                cleanup() {
                    r.default.remove("SoundboardFavoriteStore")
                }
            }];
            var E = c
        },
        243315: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("446674"),
                s = n("151426"),
                l = n("750028"),
                i = n("95410"),
                r = n("139321"),
                o = n("42203"),
                u = n("674268"),
                d = n("116949"),
                c = n("49111"),
                E = n("583374");

            function f(e, t) {
                let n = !1;
                return null == e.userContent && (e.userContent = {
                    dismissedContents: new Uint8Array
                }), null == e.userContent.dismissedContents && (e.userContent.dismissedContents = new Uint8Array), !(0, u.hasBit)(e.userContent.dismissedContents, t) && (e.userContent.dismissedContents = (0, u.addBit)(e.userContent.dismissedContents, t), n = !0), n
            }

            function _(e, t, n) {
                let a = r.HotspotStore.hasHiddenHotspot(t);
                return !!a && f(e, n)
            }
            let I = [{
                version: 2,
                run(e) {
                    var t, n, a;
                    let l;
                    if ((a = l || (l = {})).Mentions = "Recent Mentions", a.Unreads = "Inbox", null != e.inbox) return !1;
                    let r = !1,
                        u = s.InboxSettings.create();
                    e.inbox = u, i.default.get("seenInboxTutorial", !1) && (u.viewedTutorial = !0, r = !0);
                    let c = i.default.get("recentsButtonTab2");
                    null != c && (u.currentTab = c === l.Mentions ? s.InboxTab.MENTIONS : s.InboxTab.UNREADS, r = !0);
                    let E = null !== (t = i.default.get("unread-messages-collapsed-channels")) && void 0 !== t ? t : {};
                    for (let t in E) {
                        if (!E[t]) continue;
                        let a = o.default.getChannel(t);
                        null != a && (r = !0, (0, d.mutateUserChannelSettings)(e, null !== (n = a.guild_id) && void 0 !== n ? n : "0", a.id, e => {
                            e.collapsedInInbox = !0
                        }))
                    }
                    return r
                },
                cleanup() {
                    i.default.remove("seenInboxTutorial"), i.default.remove("recentsButtonTab2"), i.default.remove("unread-messages-collapsed-channels")
                }
            }, {
                version: 3,
                run(e) {
                    let {
                        state: t
                    } = a.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [() => ({
                        diversitySurrogate: i.default.get("EmojiDiversitySurrogate") || ""
                    })]);
                    if (null == t) return !1;
                    let n = !1;
                    return null != t.diversitySurrogate && "" !== t.diversitySurrogate && (null == e.textAndImages && (e.textAndImages = s.TextAndImagesSettings.create()), null == e.textAndImages.diversitySurrogate && (e.textAndImages.diversitySurrogate = l.StringValue.create()), e.textAndImages.diversitySurrogate.value = t.diversitySurrogate, n = !0), n
                },
                cleanup() {}
            }, {
                version: 4,
                run(e) {
                    let t = !1,
                        n = !0 === i.default.get("HAS_SEEN_HUB_UPSELL") || r.HotspotStore.hasHiddenHotspot(r.HotspotLocations.HUB_SECOND_EMAIL_CONNECTION_UPSELL);
                    return n && (t = f(e, s.DismissibleContent.HUB_WAITLIST_UPSELL)), t
                },
                cleanup() {
                    i.default.remove("HAS_SEEN_HUB_UPSELL")
                }
            }, {
                version: 5,
                run(e) {
                    var t, n, a, r, o, u, d;
                    let c = !1;
                    e.textAndImages = null !== (t = e.textAndImages) && void 0 !== t ? t : s.TextAndImagesSettings.create(), e.notifications = null !== (n = e.notifications) && void 0 !== n ? n : s.NotificationSettings.create(), e.privacy = null !== (a = e.privacy) && void 0 !== a ? a : s.PrivacySettings.create(), e.voiceAndVideo = null !== (r = e.voiceAndVideo) && void 0 !== r ? r : s.VoiceAndVideoSettings.create(), e.gameLibrary = null !== (o = e.gameLibrary) && void 0 !== o ? o : s.GameLibrarySettings.create(), e.debug = null !== (u = e.debug) && void 0 !== u ? u : s.DebugSettings.create();
                    let E = null !== (d = i.default.get("UserSettingsStore")) && void 0 !== d ? d : {};
                    return "boolean" == typeof E.useRichChatTextBox && (e.textAndImages.useRichChatInput = l.BoolValue.create({
                        value: E.useRichChatTextBox
                    }), c = !0), "string" == typeof E.renderSpoilers && (e.textAndImages.renderSpoilers = l.StringValue.create({
                        value: E.renderSpoilers
                    }), c = !0), "boolean" == typeof E.useThreadSidebar && (e.textAndImages.useThreadSidebar = l.BoolValue.create({
                        value: E.useThreadSidebar
                    }), c = !0), "boolean" == typeof E.showInAppNotifications && (e.notifications.showInAppNotifications = l.BoolValue.create({
                        value: E.showInAppNotifications
                    }), c = !0), E.emojiPickerCollapsedSections instanceof Array && (e.textAndImages.emojiPickerCollapsedSections = E.emojiPickerCollapsedSections, c = !0), E.stickerPickerCollapsedSections instanceof Array && (e.textAndImages.stickerPickerCollapsedSections = E.stickerPickerCollapsedSections, c = !0), "boolean" == typeof E.viewImageDescriptions && (e.textAndImages.viewImageDescriptions = l.BoolValue.create({
                        value: E.viewImageDescriptions
                    }), c = !0), "boolean" == typeof E.showCommandSuggestions && (e.textAndImages.showCommandSuggestions = l.BoolValue.create({
                        value: E.showCommandSuggestions
                    }), c = !0), "boolean" == typeof E.alwaysPreviewVideo && (e.voiceAndVideo.alwaysPreviewVideo = l.BoolValue.create({
                        value: E.alwaysPreviewVideo
                    }), c = !0), "boolean" == typeof E.notifyFriendsOnGoLive && (e.notifications.notifyFriendsOnGoLive = l.BoolValue.create({
                        value: E.notifyFriendsOnGoLive
                    }), c = !0), "boolean" == typeof E.installShortcutDesktop && (e.gameLibrary.installShortcutDesktop = l.BoolValue.create({
                        value: E.installShortcutDesktop
                    }), c = !0), "boolean" == typeof E.installShortcutStartMenu && (e.gameLibrary.installShortcutStartMenu = l.BoolValue.create({
                        value: E.installShortcutStartMenu
                    }), c = !0), "boolean" == typeof E.allowActivityPartyPrivacyFriends && (e.privacy.allowActivityPartyPrivacyFriends = l.BoolValue.create({
                        value: E.allowActivityPartyPrivacyFriends
                    }), c = !0), "boolean" == typeof E.allowActivityPartyPrivacyVoiceChannel && (e.privacy.allowActivityPartyPrivacyVoiceChannel = l.BoolValue.create({
                        value: E.allowActivityPartyPrivacyVoiceChannel
                    }), c = !0), "boolean" == typeof E.rtcPanelShowVoiceStates && (e.debug.rtcPanelShowVoiceStates = l.BoolValue.create({
                        value: E.rtcPanelShowVoiceStates
                    }), c = !0), c
                },
                cleanup() {}
            }, {
                version: 7,
                run: e => _(e, r.HotspotLocations.APPLICATION_COMMAND_TOOLTIP, s.DismissibleContent.APPLICATION_COMMAND_TOOLTIP),
                cleanup() {}
            }, {
                version: 8,
                run: e => _(e, r.HotspotLocations.CHANNEL_BANNER_MEMBER_LIST_NOTICE, s.DismissibleContent.CHANNELINFO_CHANNELBANNER_NOTICE),
                cleanup() {}
            }, {
                version: 9,
                run: e => (r.HotspotStore.hasHiddenHotspot(r.HotspotLocations.MULTI_ACCOUNT_TOOLTIP) && i.default.set(E.MULTIACCOUNT_TOOLTIP_SEEN_KEY, "true"), _(e, r.HotspotLocations.MULTI_ACCOUNT_TOOLTIP, s.DismissibleContent.ACCOUNT_MULTIACCOUNT_TOOLTIP)),
                cleanup() {}
            }, {
                version: 10,
                run(e) {
                    var t;
                    let n = _(e, r.HotspotLocations.HUB_LINK_CHANNEL_NOTICE, s.DismissibleContent.CHANNEL_NOTICE_HUBLINK),
                        a = null !== (t = i.default.get("channelNotices")) && void 0 !== t ? t : {};
                    return !1 === a[c.ChannelNoticeTypes.INVITE] && f(e, s.DismissibleContent.CHANNEL_NOTICE_INVITE) && (n = !0), !1 === a[c.ChannelNoticeTypes.QUICKSWITCHER] && f(e, s.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER) && (n = !0), !1 === a[c.ChannelNoticeTypes.GUILD_BOOSTING] && f(e, s.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION) && (n = !0), n
                },
                cleanup() {
                    i.default.remove("channelNotices")
                }
            }, {
                version: 11,
                run(e) {
                    let t = !1;
                    return _(e, r.HotspotLocations.GUILD_EVENT_UPSELL, s.DismissibleContent.GUILD_HEADER_EVENT_UPSELL) && (t = !0), _(e, r.HotspotLocations.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS) && (t = !0), _(e, r.HotspotLocations.ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_ANIMATED_GUILD_BANNER) && (t = !0), t
                },
                cleanup() {}
            }, {
                version: 12,
                run(e) {
                    let t = !1;
                    return i.default.get("hideNag") && f(e, s.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD) && (t = !0), i.default.get("hideConnectSpotify") && f(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY) && (t = !0), i.default.get("hideConnectPlayStation") && f(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION) && (t = !0), i.default.get("hideMFASMSNotice") && f(e, s.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP) && (t = !0), t
                },
                cleanup() {
                    i.default.remove("hideNag"), i.default.remove("hideConnectSpotify"), i.default.remove("hideConnectPlayStation"), i.default.remove("hideMFASMSNotice")
                }
            }, {
                version: 13,
                run(e) {
                    let t = !1;
                    return i.default.get("hidePremiumPromo") && f(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_PROMO) && (t = !0), i.default.get("hidePremiumTier2TrialEnding") && f(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING) && (t = !0), i.default.get("hidePremiumReactivateNotice") && f(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE) && (t = !0), _(e, r.HotspotLocations.INVITE_SPLASH_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_INVITE_SPLASH) && (t = !0), t
                },
                cleanup() {
                    i.default.remove("hidePremiumPromo"), i.default.remove("hidePremiumTier2TrialEnding"), i.default.remove("hidePremiumReactivateNotice")
                }
            }, {
                version: 14,
                run: e => _(e, r.HotspotLocations.ACTIVITY_BEB_TUTORIAL, s.DismissibleContent.ACTIVITIES_TUTORIAL_COACH_MARK),
                cleanup() {}
            }, {
                version: 15,
                run: e => _(e, r.HotspotLocations.NOW_PLAYING_CONSENT_CARD, s.DismissibleContent.NOW_PLAYING_CONSENT_CARD),
                cleanup() {}
            }, {
                version: 16,
                run(e) {
                    let t = i.default.get("PromotionsPersistedStore");
                    if (null == t) return !1;
                    let n = t._state.lastDismissedOutboundPromotionStartDate;
                    return null != n && (null == e.userContent && (e.userContent = s.UserContentSettings.create()), null == e.userContent.lastDismissedOutboundPromotionStartDate) && (e.userContent.lastDismissedOutboundPromotionStartDate = l.StringValue.create({
                        value: n
                    }), !0)
                },
                cleanup() {}
            }, {
                version: 17,
                run(e) {
                    let {
                        state: t
                    } = a.default.PersistedStore.migrateAndReadStoreState("ExpressionSuggestionsPersistedStore", null);
                    if (null == t) return !1;
                    let n = t.expressionSuggestionsEnabled;
                    return null != n && (null == e.textAndImages && (e.textAndImages = s.TextAndImagesSettings.create()), null == e.textAndImages.expressionSuggestionsEnabled) && (e.textAndImages.expressionSuggestionsEnabled = l.BoolValue.create({
                        value: n
                    }), !0)
                },
                cleanup() {
                    i.default.remove("ExpressionSuggestionsPersistedStore")
                }
            }, {
                version: 18,
                run(e) {
                    let t = !1;
                    return _(e, r.HotspotLocations.GUILD_DELETE_FEEDBACK, s.DismissibleContent.GUILD_DELETE_FEEDBACK) && (t = !0), _(e, r.HotspotLocations.GUILD_LEAVE_FEEDBACK, s.DismissibleContent.GUILD_LEAVE_FEEDBACK) && (t = !0), t
                },
                cleanup() {}
            }, {
                version: 19,
                run(e) {
                    var t;
                    let n = !1,
                        a = null !== (t = i.default.get("forumHelperCardStorageKey")) && void 0 !== t && t;
                    return a && (n = f(e, s.DismissibleContent.FORUM_CHANNEL_HELPER_CARD)), n
                },
                cleanup() {
                    i.default.remove("forumHelperCardStorageKey")
                }
            }];
            var h = I
        },
        392011: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("913144"),
                i = n("647627"),
                r = n("243315"),
                o = n("275877"),
                u = n("872173"),
                d = n("374363"),
                c = n("397336"),
                E = {
                    init() {
                        o.default[c.UserSettingsTypes.PRELOADED_USER_SETTINGS] = r.default, o.default[c.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS] = i.default, l.default.subscribe("CONNECTION_OPEN", f), l.default.subscribe("USER_SETTINGS_PROTO_ENQUEUE_UPDATE", _), l.default.subscribe("USER_SETTINGS_PROTO_LOAD_IF_NECESSARY", I), l.default.subscribe("APP_STATE_UPDATE", h)
                    }
                };

            function f() {
                let e = d.default.getFullState(),
                    t = e[c.UserSettingsTypes.PRELOADED_USER_SETTINGS];
                t.editInfo.triggeredMigrations && u.PreloadedUserSettingsActionCreators.markDirtyFromMigration(t.proto, t.editInfo.cleanupFuncs), s.forEach(u.UserSettingsActionCreatorsByType, (t, n) => {
                    let a = e[Number(n)];
                    null != a.editInfo.offlineEditDataVersion && t.scheduleSaveFromOfflineEdit()
                })
            }

            function _(e) {
                let {
                    settings: {
                        proto: t,
                        type: n
                    },
                    delaySeconds: a,
                    jitter: s
                } = e;
                (0, u.UserSettingsActionCreatorsByType)[n].markDirty(t, {
                    delaySeconds: a,
                    jitter: s
                })
            }

            function I(e) {
                let {
                    settingsType: t
                } = e;
                (0, u.UserSettingsActionCreatorsByType)[t].loadIfNecessary()
            }

            function h(e) {
                let {
                    state: t
                } = e;
                ("inactive" === t || "background" === t) && s.forEach(u.UserSettingsActionCreatorsByType, (e, t) => {
                    let n = d.default.getFullState()[Number(t)];
                    null != n.editInfo.timeout && (e.logger.log("Triggering persistChanges due to AppStateUpdate"), e.persistChanges())
                })
            }
        },
        933422: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("393414"),
                i = n("5667"),
                r = n("599110"),
                o = n("701909"),
                u = n("568456"),
                d = n("49111"),
                c = n("782340"),
                E = n("393254"),
                f = e => {
                    let {
                        markAsDismissed: t
                    } = e;
                    return s.useEffect(() => {
                        r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                            action: u.DMSafetyCoachmarkActions.VIEW
                        })
                    }, []), (0, a.jsx)(i.default, {
                        header: c.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_HEADER_V2,
                        content: c.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_CONTENT_V2.format({
                            helpdeskArticle: o.default.getArticleURL(d.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                        }),
                        buttonCTA: c.default.Messages.GOT_IT,
                        secondaryButtonCTA: c.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_REDIRECT,
                        className: E.coachmark,
                        onClick: e => {
                            e.stopPropagation(), t(), r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                                action: u.DMSafetyCoachmarkActions.DISMISS
                            })
                        },
                        onSecondaryClick: () => {
                            (0, l.transitionTo)(d.Routes.SETTINGS("privacy-and-safety")), r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                                action: u.DMSafetyCoachmarkActions.CHANGE_SETTING
                            })
                        },
                        markAsDismissed: t,
                        caretPosition: i.CaretPosition.BOTTOM_CENTER,
                        headerClassName: E.header
                    })
                }
        },
        648661: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                showInvalidUsernameToast: function() {
                    return l
                }
            });
            var a = n("77078"),
                s = n("782340");

            function l() {
                (0, a.showToast)((0, a.createToast)(s.default.Messages.USER_SETTINGS_UPDATE_FAILURE, a.ToastType.FAILURE))
            }
        },
        892313: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("49111"),
                i = n("782340");
            let {
                CAPTCHA: r,
                EMAIL: o,
                PHONE: u,
                REVERIFY_EMAIL: d,
                REVERIFY_PHONE: c
            } = l.VerificationTypes, E = {
                [l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL]: [o],
                [l.UserRequiredActions.REQUIRE_VERIFIED_PHONE]: [u],
                [l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL]: [d],
                [l.UserRequiredActions.REQUIRE_REVERIFIED_PHONE]: [c],
                [l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_VERIFIED_PHONE]: [o, u],
                [l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_VERIFIED_PHONE]: [u, d],
                [l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE]: [o, c],
                [l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE]: [d, c],
                [l.UserRequiredActions.REQUIRE_CAPTCHA]: [r],
                [l.UserRequiredActions.AGREEMENTS]: []
            };
            var f = {
                isPhoneReverification: (e, t) => void 0 !== e && e.isPhoneVerified() && (t === l.UserRequiredActions.REQUIRE_REVERIFIED_PHONE || t === l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE || t === l.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE),
                isEmailReverification: e => e === l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL || e === l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE || e === l.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_VERIFIED_PHONE,
                getVerificationTypes: e => null == e || "symbol" == typeof e ? [] : E[e],
                getButtonTitle(e) {
                    switch (e) {
                        case l.VerificationTypes.EMAIL:
                            return i.default.Messages.VERIFY_BY_EMAIL;
                        case l.VerificationTypes.PHONE:
                            return i.default.Messages.START_PHONE_VERIFICATION_BUTTON;
                        case l.VerificationTypes.REVERIFY_EMAIL:
                            return i.default.Messages.START_EMAIL_REVERIFICATION_BUTTON;
                        case l.VerificationTypes.REVERIFY_PHONE:
                            return i.default.Messages.START_PHONE_REVERIFICATION_BUTTON;
                        default:
                            return i.default.Messages.START_VERIFICATION_BUTTON
                    }
                },
                areVerificationTypesEqual: (e, t) => s.isEqual(e, t)
            }
        },
        126667: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("446674"),
                o = n("437822"),
                u = n("152584"),
                d = n("648661"),
                c = n("330387"),
                E = n("790618"),
                f = n("697218"),
                _ = n("67211"),
                I = n("892313"),
                h = n("49111"),
                C = e => {
                    let {
                        transitionState: t,
                        onClose: n
                    } = e, l = (0, r.useStateFromStores)([E.default], () => E.default.getErrors()), C = (0, r.useStateFromStores)([E.default], () => E.default.getFormState()), T = (0, r.useStateFromStores)([f.default], () => {
                        let e = f.default.getCurrentUser();
                        return i(null != e, "EmailVerificationModal: user cannot be undefined"), e
                    }), m = (0, r.useStateFromStores)([c.default], () => c.default.getAction()), S = !I.default.isEmailReverification(m), N = null != T.email, [A, p] = s.useState(!0), g = C === h.FormStates.SUBMITTING;

                    function R(e) {
                        var t, n;
                        return null !== (n = null == l ? void 0 : null === (t = l[e]) || void 0 === t ? void 0 : t[0]) && void 0 !== n ? n : ""
                    }
                    let O = R("email"),
                        L = R("password");
                    return (0, a.jsx)(_.default, {
                        transitionState: t,
                        email: T.email,
                        emailError: O,
                        passwordError: L,
                        submitting: g,
                        canResend: A && !g && N && 0 === O.length && 0 === L.length,
                        canChange: S,
                        onChangeEmailClick: function() {
                            p(!1)
                        },
                        onVerify: function(e, t) {
                            (0, u.saveAccountChanges)({
                                email: e,
                                password: t
                            }).then(e => {
                                var t;
                                !(null == e ? void 0 : e.ok) && (null == e ? void 0 : null === (t = e.body) || void 0 === t ? void 0 : t.username) != null && (0, d.showInvalidUsernameToast)()
                            }), p(!0)
                        },
                        onResend: function() {
                            o.default.verifyResend()
                        },
                        onClose: n
                    })
                }
        },
        601745: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("583227"),
                r = n("599417"),
                o = n("878720"),
                u = n("330387"),
                d = n("697218"),
                c = n("419522"),
                E = n("892313"),
                f = n("782340"),
                _ = s.forwardRef(function(e, t) {
                    let {
                        onAddedPhone: n,
                        onClose: _,
                        transitionState: I,
                        reason: h
                    } = e, C = (0, l.useStateFromStores)([d.default], () => d.default.getCurrentUser()), T = (0, l.useStateFromStores)([u.default], () => u.default.getAction()), [m, S] = s.useState(null), [N, A] = s.useState(null), [p, g] = s.useState(null), [R, O] = s.useState(!1), L = s.useCallback(async e => {
                        O(!0);
                        try {
                            E.default.isPhoneReverification(C, T) ? await o.default.beginReverifyPhone(e, h) : await o.default.beginAddPhone(e, h), g(null), S(e)
                        } catch (e) {
                            g(new r.default(e))
                        }
                        O(!1)
                    }, [C, h, T]), M = s.useCallback(async e => {
                        if (null != m && null != C) {
                            O(!0);
                            try {
                                let {
                                    token: t
                                } = await o.default.verifyPhone(m, e);
                                g(null), A(t)
                            } catch (e) {
                                g(new r.default(e))
                            }
                            O(!1)
                        }
                    }, [C, m]), v = s.useCallback(async e => {
                        null != N && (E.default.isPhoneReverification(C, T) ? await o.default.reverifyPhone(N, e, h) : await o.default.addPhone(N, e, h), null == n || n(), _())
                    }, [n, _, N, h, C, T]);
                    return null != N ? (0, a.jsx)(i.default, {
                        onClose: _,
                        transitionState: I,
                        title: f.default.Messages.USER_SETTINGS_EDIT_ACCOUNT_PASSWORD_LABEL,
                        handleSubmit: v
                    }) : (0, a.jsx)(c.default, {
                        onClose: _,
                        transitionState: I,
                        error: null == p ? void 0 : p.getAnyErrorMessage(),
                        working: R,
                        validPhone: null != m,
                        onAddPhone: L,
                        onVerifyPhone: M
                    })
                })
        },
        61928: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EMAIL_VERIFICATION_MODAL_KEY: function() {
                    return L
                },
                default: function() {
                    return M
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("759843"),
                i = n("446674"),
                r = n("872717"),
                o = n("77078"),
                u = n("437822"),
                d = n("54239"),
                c = n("152584"),
                E = n("135230"),
                f = n("84339"),
                _ = n("485328"),
                I = n("428958"),
                h = n("878720"),
                C = n("161778"),
                T = n("330387"),
                m = n("642400"),
                S = n("668596"),
                N = n("892313"),
                A = n("126667"),
                p = n("601745"),
                g = n("49111"),
                R = n("482931"),
                O = n("782340");
            let L = "Email Verification";

            function M() {
                let {
                    action: e,
                    theme: t
                } = (0, i.useStateFromStoresObject)([T.default, C.default], () => ({
                    action: T.default.getAction(),
                    theme: C.default.theme
                })), n = N.default.getVerificationTypes(e), [M, v] = s.useState(0), D = (0, f.default)(n);
                (0, I.default)({
                    type: l.ImpressionTypes.MODAL,
                    name: l.ImpressionNames.USER_ACTION_REQUIRED,
                    properties: {
                        verification_type: n[0],
                        verification_types: n
                    }
                }, {}, [n.toString()]);
                let x = () => {
                    (0, c.accountDetailsInit)(), (0, o.openModal)(e => (0, a.jsx)(A.default, {
                        ...e
                    }), {
                        modalKey: L,
                        Layer: S.default
                    })
                };
                return s.useEffect(() => (_.default.disable(), () => {
                    _.default.enable()
                }), []), s.useEffect(() => {
                    (null == D ? void 0 : D[0]) === g.VerificationTypes.PHONE && (null == n ? void 0 : n[0]) === g.VerificationTypes.EMAIL && (0, o.openModal)(e => (0, a.jsx)(E.default, {
                        ...e,
                        title: O.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_TITLE,
                        body: O.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_BODY,
                        confirmText: O.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_CONFIRM
                    }), {
                        modalKey: "PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY",
                        Layer: S.default,
                        onCloseCallback: x
                    })
                }, [n, D]), (0, a.jsx)(m.default, {
                    types: n,
                    captchaKey: M,
                    onCaptchaVerify: e => {
                        r.default.post({
                            url: g.Endpoints.CAPTCHA,
                            body: {
                                captcha_key: e
                            },
                            oldFormErrors: !0
                        }).then(d.popLayer, () => {
                            v(e => e + 1)
                        })
                    },
                    theme: t,
                    onClick: e => {
                        e === g.VerificationTypes.EMAIL_OR_PHONE || e === g.VerificationTypes.EMAIL || e === g.VerificationTypes.REVERIFY_EMAIL ? x() : (0, o.openModal)(e => (0, a.jsx)(p.default, {
                            reason: h.ChangePhoneReason.USER_ACTION_REQUIRED,
                            ...e
                        }), {
                            modalKey: R.PHONE_VERIFICATION_MODAL_KEY,
                            Layer: S.default
                        })
                    },
                    onLogout: () => (0, o.openModal)(e => (0, a.jsx)(o.ConfirmModal, {
                        header: O.default.Messages.LOGOUT,
                        confirmText: O.default.Messages.LOGOUT,
                        cancelText: O.default.Messages.CANCEL,
                        onConfirm: () => u.default.logout(),
                        ...e,
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            children: O.default.Messages.USER_SETTINGS_CONFIRM_LOGOUT
                        })
                    }), {
                        Layer: S.default
                    })
                })
            }
        },
        924658: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("271938"),
                l = n("42887"),
                i = n("800762"),
                r = e => (0, a.useStateFromStoresObject)([i.default, l.default, s.default], () => (function(e) {
                    var t;
                    let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i.default,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : l.default,
                        r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : s.default,
                        o = null != e ? n.getVoiceState(e.getGuildId(), r.getId()) : null,
                        u = a.isSelfDeaf();
                    return {
                        selfDeaf: u,
                        deaf: null !== (t = null == o ? void 0 : o.deaf) && void 0 !== t && t
                    }
                })(e, i.default, l.default, s.default))
        },
        470885: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var s = n("913144"),
                l = n("600965"),
                i = n("316272"),
                r = n("191225"),
                o = n("292687"),
                u = n("373469"),
                d = n("42203"),
                c = n("778588"),
                E = n("42887"),
                f = n("449501"),
                _ = n("945956"),
                I = n("18494"),
                h = n("162771"),
                C = n("800762"),
                T = n("49111"),
                m = n("353927");

            function S() {
                var e;
                let t = a;
                if (null == t || !f.default.isOpen(t)) return !1;
                s.default.wait(() => l.close(t)), null === (e = _.default.getRTCConnection()) || void 0 === e || e.setPipOpen(!1), a = null
            }

            function N() {
                let e = _.default.getChannelId(),
                    t = a === e;
                return function() {
                    let e = _.default.getChannelId(),
                        t = I.default.getChannelId(),
                        n = E.default.supports(m.Features.VIDEO);
                    if (!n) return !0;
                    let a = o.default.getWindowOpen(T.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                    if (a) return !0;
                    let s = u.default.getAllActiveStreams().length > 0,
                        l = null != e && Object.values(C.default.getVideoVoiceStatesForChannel(e)).some(e => {
                            let {
                                userId: t
                            } = e;
                            return !E.default.isLocalVideoDisabled(t)
                        });
                    if (!(l || s)) return !0;
                    let i = c.default.hasLayers(),
                        r = i && c.default.getLayers().includes(T.Layers.RTC_DEBUG);
                    if (r) return !1;
                    if (i) return !0;
                    let d = e === t;
                    return !!d || !1
                }() ? S() : (!t && S(), null != e && function(e) {
                    var t;
                    let n = d.default.getChannel(e);
                    if (null == n || f.default.isOpen(e)) return !1;
                    s.default.wait(() => l.open(n.id, T.PictureInPictureComponents.VIDEO, {
                        channel: n
                    })), null === (t = _.default.getRTCConnection()) || void 0 === t || t.setPipOpen(!0), a = e
                }(e))
            }
            class A extends i.default {
                _initialize() {
                    I.default.addChangeListener(N), h.default.addChangeListener(N), _.default.addChangeListener(N), C.default.addChangeListener(N), c.default.addChangeListener(N), u.default.addChangeListener(N), o.default.addChangeListener(N), E.default.addChangeListener(N), r.default.addChangeListener(N)
                }
                _terminate() {
                    I.default.removeChangeListener(N), h.default.removeChangeListener(N), _.default.removeChangeListener(N), C.default.removeChangeListener(N), c.default.removeChangeListener(N), u.default.removeChangeListener(N), o.default.removeChangeListener(N), E.default.removeChangeListener(N), r.default.removeChangeListener(N)
                }
            }
            var p = new A
        },
        868558: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("862337"),
                s = n("913144"),
                l = n("987317"),
                i = n("316272"),
                r = n("373469"),
                o = n("42203"),
                u = n("305961"),
                d = n("603699"),
                c = n("945956"),
                E = n("773336"),
                f = n("49111");
            let _ = new a.Timeout,
                I = new a.Timeout;
            class h extends i.default {
                _initialize() {
                    s.default.subscribe("IDLE", this.handleIdleUpdate)
                }
                _terminate() {
                    _.stop(), I.stop(), s.default.unsubscribe("IDLE", this.handleIdleUpdate)
                }
                handleIdleUpdate() {
                    let e = d.default.getIdleSince();
                    if (!E.isPlatformEmbedded) return;
                    _.stop(), I.stop();
                    let t = r.default.getAllActiveStreams();
                    for (let e of t)
                        if (e.state !== f.ApplicationStreamStates.ENDED) return;
                    if (null == e) return;
                    let n = c.default.getChannelId();
                    if (null == n) return;
                    I.start(18e6, () => {
                        l.default.selectVoiceChannel(null)
                    });
                    let a = u.default.getGuild(c.default.getGuildId());
                    if (null == a || null == a.afkChannelId || a.afkChannelId === n || null == a.afkTimeout) return;
                    let s = o.default.getChannel(n);
                    if (null != s) !s.isGuildStageVoice() && _.start(e + 1e3 * a.afkTimeout - Date.now(), () => {
                        null != (a = u.default.getGuild(c.default.getGuildId())) && null != a.afkChannelId && l.default.selectVoiceChannel(a.afkChannelId)
                    })
                }
            }
            var C = new h
        },
        453515: function(e, t, n) {
            "use strict";
            n.r(t);
            var a, s = n("446674"),
                l = n("95410"),
                i = n("862337"),
                r = n("913144"),
                o = n("260365"),
                u = n("374363"),
                d = n("964889"),
                c = n("546463"),
                E = n("686470"),
                f = n("568307"),
                _ = n("49111");
            let I = "ActivityTrackingStore",
                h = null !== (a = l.default.get(I)) && void 0 !== a ? a : {},
                C = {},
                T = !1;

            function m(e) {
                let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
                t && S(e, !0);
                let n = C[e.applicationId];
                null != n && (n.stop(), delete C[e.applicationId]), delete h[e.applicationId], l.default.set(I, h)
            }

            function S(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    n = Date.now(),
                    a = null != e.updatedAt ? n - e.updatedAt : 0;
                a > 21e5 && (a = 0), o.default.updateActivity({
                    applicationId: e.applicationId,
                    distributor: e.isDiscordApplication ? _.Distributors.DISCORD : e.distributor,
                    shareActivity: (0, d.shouldShareApplicationActivity)(e.applicationId, E.default),
                    token: e.token,
                    duration: Math.floor(a / 1e3),
                    closed: t
                }), e.updatedAt = n;
                let s = C[e.applicationId];
                null == s && (s = C[e.applicationId] = new i.Interval).start(18e5, () => S(e)), !t && (h[e.applicationId] = e, l.default.set(I, h))
            }

            function N() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
                    t = f.default.getRunningGames(),
                    n = new Set;
                for (let {
                        name: e,
                        distributor: a
                    }
                    of t) {
                    let t = c.default.getGameByName(e);
                    if (null != t) n.add(t.id), !(t.id in h) && S({
                        applicationId: t.id,
                        updatedAt: Date.now(),
                        distributor: a
                    })
                }
                for (let t of Object.keys(h)) !n.has(t) && m(h[t], e)
            }

            function A() {
                for (let e of Object.keys(h)) m(h[e]);
                T = !1
            }
            class p extends s.default.Store {
                initialize() {
                    this.waitFor(f.default, u.default, E.default), this.syncWith([u.default], N)
                }
                getActivities() {
                    return h
                }
            }
            p.displayName = "ActivityTrackingStore", new p(r.default, {
                RUNNING_GAMES_CHANGE: () => N(),
                CONNECTION_OPEN: function() {
                    if (T) return !1;
                    for (let e of Object.keys(h)) S(h[e]);
                    N(!1), T = !0
                },
                CONNECTION_CLOSED: function(e) {
                    let {
                        code: t
                    } = e;
                    4004 === t && A()
                },
                LOGOUT: A,
                ACTIVITY_UPDATE_SUCCESS: function(e) {
                    let {
                        applicationId: t,
                        token: n
                    } = e, a = h[t];
                    if (null == a) return !1;
                    a.token = n, l.default.set(I, h)
                },
                ACTIVITY_UPDATE_FAIL: function(e) {
                    let {
                        applicationId: t
                    } = e, n = h[t];
                    if (null == n) return !1;
                    n.token = null, n.updatedAt = null, l.default.set(I, h)
                }
            })
        },
        2105: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = {};
            class i extends a.default.Store {
                getSkuIdForChannel(e) {
                    return l[e]
                }
            }
            i.displayName = "ChannelSKUStore";
            var r = new i(s.default, {
                CONNECTION_OPEN: function() {
                    l = {}
                },
                STORE_LISTING_FETCH_SUCCESS: function(e) {
                    let {
                        channelId: t,
                        storeListing: n
                    } = e;
                    null != t && (l[t] = n.sku.id)
                }
            })
        },
        161810: function(e, t, n) {
            "use strict";
            let a, s, l;
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var i = n("917351"),
                r = n.n(i),
                o = n("446674"),
                u = n("913144"),
                d = n("611183"),
                c = n("492114"),
                E = n("305961"),
                f = n("957255"),
                _ = n("45894"),
                I = n("49111");
            let h = [],
                C = null,
                T = !1,
                m = I.FormStates.CLOSED,
                S = {},
                N = !1,
                A = null;

            function p() {
                if (a = null != (s = c.default.getChannel()) ? E.default.getGuild(s.guild_id) : null, h = null != s && null != a && f.default.can(I.Permissions.MANAGE_WEBHOOKS, s) ? _.default.getWebhooksForChannel(a.id, s.id) : [], null != C) {
                    let e = R(C.id);
                    null != e && (C = e)
                }
                m = I.FormStates.OPEN, S = {}, N = !1
            }
            let g = r.debounce(() => {
                N && ((null == C || r.isEqual(C, R(C.id))) && (N = !1), !N && L.emitChange())
            }, 500);

            function R(e) {
                return h.find(t => {
                    let {
                        id: n
                    } = t;
                    return n === e
                })
            }
            class O extends o.default.Store {
                initialize() {
                    this.waitFor(c.default, E.default, _.default, f.default)
                }
                hasChanges() {
                    return N
                }
                get webhooks() {
                    return h
                }
                get editedWebhook() {
                    return C
                }
                get formState() {
                    return m
                }
                getWebhook(e) {
                    return R(e)
                }
                showNotice() {
                    return this.hasChanges()
                }
                getProps() {
                    return {
                        submitting: m === I.FormStates.SUBMITTING,
                        webhooks: h,
                        editedWebhook: C,
                        section: l,
                        sectionId: A,
                        hasChanges: this.hasChanges(),
                        isFetching: T,
                        errors: S
                    }
                }
            }
            O.displayName = "ChannelSettingsIntegrationsStore";
            let L = new O(u.default, __OVERLAY__ ? {} : {
                INTEGRATION_SETTINGS_INIT: p,
                INTEGRATION_SETTINGS_SAVE_SUCCESS: p,
                CHANNEL_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    if (t !== I.ChannelSettingsSections.INTEGRATIONS) return !1;
                    if (l = I.IntegrationSettingsSections.OVERVIEW, null == a) {
                        let e = c.default.getChannel(),
                            t = null == e ? void 0 : e.getGuildId();
                        null != e && null != t && (d.default.fetchForChannel(t, e.id), T = !0), p()
                    }
                },
                INTEGRATION_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t,
                        sectionId: n
                    } = e;
                    l = t, A = n
                },
                INTEGRATION_SETTINGS_START_EDITING_WEBHOOK: function(e) {
                    let {
                        webhookId: t
                    } = e, n = R(t);
                    if (null == n) return !1;
                    C = n, S = {}, N = !1
                },
                INTEGRATION_SETTINGS_STOP_EDITING_WEBHOOK: function() {
                    C = null, S = {}, N = !1
                },
                INTEGRATION_SETTINGS_UPDATE_WEBHOOK: function(e) {
                    let {
                        settings: t
                    } = e;
                    if (null == C) return !1;
                    C = {
                        ...C
                    }, null != t.name && C.name !== t.name && (C.name = t.name, N = !0), void 0 !== t.avatar && C.avatar !== t.avatar && (C.avatar = t.avatar, N = !0), null != t.channelId && C.channel_id !== t.channelId && (C.channel_id = t.channelId, N = !0), N && g()
                },
                CHANNEL_SETTINGS_CLOSE: function() {
                    s = null, a = null, h = [], C = null, m = I.FormStates.CLOSED
                },
                WEBHOOKS_UPDATE: function(e) {
                    let {
                        guildId: t,
                        channelId: n,
                        webhooks: l
                    } = e;
                    if (null == a || t !== a.id || null == s || n !== s.id || null == l || m === I.FormStates.SUBMITTING) return !1;
                    T = !1;
                    for (let e = h.length - 1; e >= 0; e--) {
                        var i, r;
                        let t = h[e];
                        if (null != n && (null == t ? void 0 : t.channel_id) !== n) continue;
                        let a = l.find(e => {
                            let {
                                id: n
                            } = e;
                            if (n === t.id) return !0
                        });
                        if (null != a) {
                            let n = {
                                ...t,
                                ...a
                            };
                            h[e] = n, !N && (null === (i = C) || void 0 === i ? void 0 : i.id) === n.id && (C = n)
                        } else(null === (r = C) || void 0 === r ? void 0 : r.id) === t.id && (C = null), h.splice(e, 1)
                    }
                    for (let e of l) {
                        let t = h.find(t => {
                            let {
                                id: n
                            } = t;
                            if (n === e.id) return !0
                        });
                        null == t && h.push(e)
                    }
                    h = [...h], g()
                },
                INTEGRATION_SETTINGS_SUBMITTING: function() {
                    m = I.FormStates.SUBMITTING, S = {}
                },
                INTEGRATION_SETTINGS_SAVE_FAILURE: function(e) {
                    var t;
                    if (m !== I.FormStates.SUBMITTING) return !1;
                    m = I.FormStates.OPEN, S = null !== (t = e.errors) && void 0 !== t ? t : {}
                }
            });
            var M = L
        },
        901998: function(e, t, n) {
            "use strict";
            let a, s;
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("95410"),
                u = n("913144"),
                d = n("991170"),
                c = n("492114"),
                E = n("42203"),
                f = n("49111"),
                _ = n("606762");
            let I = new Set,
                h = f.FormStates.CLOSED,
                C = !1,
                T = null,
                m = null,
                S = null,
                N = null,
                A = null,
                p = null,
                g = o.default.get(_.ADVANCED_MODE_ON_KEY) || !1;

            function R(e) {
                let t = e.getGuildId(),
                    n = {
                        ...e.permissionOverwrites
                    };
                return null != t && null == n[t] && (n[t] = d.default.makeEveryoneOverwrite(t)), n
            }

            function O() {
                if (S = c.default.getChannel(), N = c.default.getCategory(), null == S) return !1;
                let e = S.getGuildId();
                m = T = R(S), null == T[A] && (A = e), s = null != N, a = d.default.areChannelsLocked(S, N), p = null, C = !1, h = f.FormStates.CLOSED, I.clear()
            }
            class L extends r.default.Store {
                initialize() {
                    this.waitFor(c.default, E.default)
                }
                hasChanges() {
                    return C
                }
                showNotice() {
                    return this.hasChanges()
                }
                getPermissionOverwrite(e) {
                    var t;
                    return null === (t = T) || void 0 === t ? void 0 : t[e]
                }
                get editedPermissionIds() {
                    return Array.from(I)
                }
                get permissionOverwrites() {
                    return T
                }
                get selectedOverwriteId() {
                    return A
                }
                get formState() {
                    return h
                }
                get isLockable() {
                    return s
                }
                get locked() {
                    return a
                }
                get channel() {
                    return S
                }
                get category() {
                    return N
                }
                get advancedMode() {
                    return g
                }
            }
            L.displayName = "ChannelSettingsPermissionsStore";
            var M = new L(u.default, {
                CHANNEL_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    if (null != S || t !== f.ChannelSettingsSections.PERMISSIONS) return !1;
                    O()
                },
                CHANNEL_SETTINGS_PERMISSIONS_INIT: O,
                CHANNEL_SETTINGS_PERMISSIONS_UPDATE_PERMISSION: function(e) {
                    var t;
                    let {
                        id: n,
                        allow: s,
                        deny: l
                    } = e, r = null === (t = T) || void 0 === t ? void 0 : t[n];
                    if (null == r || null == S) return !1;
                    r = {
                        ...r,
                        allow: s,
                        deny: l
                    }, T = {
                        ...T,
                        [n]: r
                    }, I.add(n), h = f.FormStates.OPEN, C = !i.isEqual(T, m), a = d.default.areChannelsLocked(S, N)
                },
                CHANNEL_SETTINGS_PERMISSIONS_SELECT_PERMISSION: function(e) {
                    let {
                        id: t
                    } = e;
                    if (null != T && null != T[t]) A = t;
                    else {
                        if (null == S) return !1;
                        p = t
                    }
                },
                CHANNEL_SETTINGS_CLOSE: function() {
                    h = f.FormStates.CLOSED, T = null, m = null, S = null, N = null, C = !1, I.clear(), A = null, p = null
                },
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e;
                    if (null == S) return !1;
                    let n = !1;
                    for (let e of t) !1 !== function(e) {
                        if (null == S || S.id !== e || null == (S = E.default.getChannel(e))) return !1;
                        N = c.default.getCategory();
                        let t = S.getGuildId();
                        if (null == t) return !1;
                        m = R(S);
                        let n = {};
                        return I.forEach(e => {
                            null != T && (n[e] = T[e])
                        }), null == n[t] && null == S.permissionOverwrites[t] && (n[t] = d.default.makeEveryoneOverwrite(t)), null == (T = {
                            ...S.permissionOverwrites,
                            ...n
                        })[A] ? A = t : null != p && null != T[p] && (A = p, p = null), a = d.default.areChannelsLocked(S, N), !0
                    }(e.id) && (n = !0);
                    return n
                },
                CHANNEL_SETTINGS_PERMISSIONS_SUBMITTING: function() {
                    h = f.FormStates.SUBMITTING
                },
                CHANNEL_SETTINGS_PERMISSIONS_SAVE_SUCCESS: function(e) {
                    let {
                        silent: t
                    } = e;
                    t ? h = f.FormStates.OPEN : (h = f.FormStates.CLOSED, O())
                },
                CHANNEL_SETTINGS_PERMISSIONS_SET_ADVANCED_MODE: function(e) {
                    let {
                        advancedMode: t
                    } = e;
                    g = t, o.default.set(_.ADVANCED_MODE_ON_KEY, t)
                }
            })
        },
        113605: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                extractDisplayName: function() {
                    return A
                },
                default: function() {
                    return R
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("629109"),
                o = n("374363"),
                u = n("773336"),
                d = n("42887"),
                c = n("49111"),
                E = n("353927");
            let f = {},
                _ = f,
                I = !1,
                h = {},
                C = {},
                T = {},
                m = {
                    id: null,
                    justChanged: !1
                },
                S = {
                    id: null,
                    justChanged: !1
                },
                N = /\(([^)]+)\)/;

            function A(e) {
                if ((0, u.getPlatform)() === u.PlatformTypes.WINDOWS) {
                    let t = e.name.match(N);
                    if (null != t) return t[1]
                }
                return e.name
            }

            function p(e, t, n) {
                return null == e || e.displayName !== t ? {
                    displayName: t,
                    type: n
                } : e.type === c.ConnectedDeviceType.INPUT && n === c.ConnectedDeviceType.OUTPUT || e.type === c.ConnectedDeviceType.OUTPUT && n === c.ConnectedDeviceType.INPUT ? {
                    displayName: t,
                    type: c.ConnectedDeviceType.INPUT_AND_OUTPUT
                } : e
            }
            class g extends l.default.DeviceSettingsStore {
                initialize(e) {
                    this.waitFor(d.default, o.default), _ = null != e ? e : f
                }
                getUserAgnosticState() {
                    return _
                }
                get initialized() {
                    return I
                }
                get lastDeviceConnected() {
                    return T
                }
                get inputDevices() {
                    return h
                }
                get lastInputSystemDevice() {
                    return m
                }
                get outputDevices() {
                    return C
                }
                get lastOutputSystemDevice() {
                    return S
                }
            }
            g.displayName = "ConnectedDeviceStore", g.persistKey = "ConnectedDeviceStore";
            var R = new g(i.default, {
                MEDIA_ENGINE_DEVICES: function(e) {
                    let {
                        inputDevices: t,
                        outputDevices: n
                    } = e, a = {};
                    m.justChanged = !1, t.forEach(e => {
                        if (a[A(e)] = e.id, e.id === E.DEFAULT_DEVICE_ID) {
                            var t;
                            let n = null !== (t = e.originalId) && void 0 !== t ? t : e.originalName;
                            n !== m.id && (m.justChanged = !0), m.id = n
                        }
                    });
                    let l = {};
                    if (S.justChanged = !1, n.forEach(e => {
                            if (l[A(e)] = e.id, e.id === E.DEFAULT_DEVICE_ID) {
                                var t;
                                let n = null !== (t = e.originalId) && void 0 !== t ? t : e.originalName;
                                n !== S.id && (S.justChanged = !0), S.id = n
                            }
                        }), !I) {
                        h = a, C = l, I = !0;
                        return
                    }
                    let i = Object.keys(h),
                        r = Object.keys(a),
                        o = Object.keys(C),
                        u = Object.keys(l),
                        d = s.difference(i, r),
                        f = s.difference(o, u);
                    if (d.length > 0 || f.length > 0) T = {};
                    else {
                        let e = s.difference(r, i);
                        e.forEach(e => {
                            T[e] = p(T[e], e, c.ConnectedDeviceType.INPUT)
                        });
                        let t = s.difference(u, o);
                        t.forEach(e => {
                            T[e] = p(T[e], e, c.ConnectedDeviceType.OUTPUT)
                        })
                    }
                    return !(s.isEqual(i, r) && s.isEqual(o, u)) && (h = a, C = l, !0)
                },
                CONNECTED_DEVICE_SET: function(e) {
                    let {
                        displayName: t,
                        connectedDevicePreference: n,
                        location: a
                    } = e;
                    ! function(e, t, n) {
                        if (t === c.ConnectedDevicePreference.INPUT || t === c.ConnectedDevicePreference.INPUT_AND_OUTPUT) {
                            let t = h[e];
                            null != t && i.default.wait(() => r.default.setInputDevice(t, n))
                        }
                        if (t === c.ConnectedDevicePreference.OUTPUT || t === c.ConnectedDevicePreference.INPUT_AND_OUTPUT) {
                            let t = C[e];
                            i.default.wait(() => r.default.setOutputDevice(t, n))
                        }
                    }(t, n, a), delete T[t]
                },
                CONNECTED_DEVICE_IGNORE: function(e) {
                    let {
                        displayName: t
                    } = e;
                    delete T[t]
                },
                CONNECTED_DEVICE_NEVER_SHOW_MODAL: function() {
                    T = {}, _ = {
                        neverShowModal: !0
                    }
                }
            })
        },
        555826: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("680762"),
                i = n("305961");
            let r = {},
                o = () => {
                    r = {
                        guildAffinitiesByGuildId: {},
                        guildAffinities: [],
                        lastFetched: 0
                    }
                };
            o();
            class u extends a.default.PersistedStore {
                initialize(e) {
                    null != e && (r = e), this.waitFor(i.default)
                }
                getState() {
                    return r
                }
                getGuildAffinity(e) {
                    return r.guildAffinitiesByGuildId[e]
                }
                get affinities() {
                    return r.guildAffinities
                }
                get hasRequestResolved() {
                    return 0 !== r.lastFetched
                }
            }
            u.displayName = "GuildAffinitiesStore", u.persistKey = "GuildAffinitiesStore";
            var d = new u(s.default, {
                CONNECTION_OPEN: function() {
                    return Date.now() - r.lastFetched > 864e5 && (0, l.fetchGuildAffinities)(), !1
                },
                LOAD_GUILD_AFFINITIES_SUCCESS: function(e) {
                    let {
                        guildAffinities: t
                    } = e;
                    r.guildAffinities = [], r.guildAffinitiesByGuildId = {}, r.lastFetched = Date.now(), t.forEach((e, t) => {
                        let {
                            affinity: n,
                            guild_id: a
                        } = e, s = {
                            score: n,
                            guildId: a,
                            index: t
                        };
                        r.guildAffinitiesByGuildId[a] = s, r.guildAffinities.push(s)
                    })
                },
                LOGOUT: function() {
                    o()
                }
            })
        },
        353802: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("697218"),
                i = n("49111");
            let r = null;
            class o extends a.default.Store {
                getHouseMembership() {
                    return r
                }
            }
            o.displayName = "HypeSquadStore";
            var u = new o(s.default, {
                CONNECTION_OPEN: function() {
                    let e = l.default.getCurrentUser();
                    null != e && (e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_1) ? r = i.HypeSquadHouses.HOUSE_1 : e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_2) ? r = i.HypeSquadHouses.HOUSE_2 : e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_3) && (r = i.HypeSquadHouses.HOUSE_3))
                },
                HYPESQUAD_ONLINE_MEMBERSHIP_LEAVE_SUCCESS: function() {
                    r = null
                },
                HYPESQUAD_ONLINE_MEMBERSHIP_JOIN_SUCCESS: function(e) {
                    r = e.houseID
                }
            })
        },
        216391: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var s = n("917351"),
                l = n.n(s),
                i = n("446674"),
                r = n("913144"),
                o = n("997722"),
                u = n("422791"),
                d = n("271938"),
                c = n("260320"),
                E = n("42887"),
                f = n("49111");
            let _ = {};

            function I() {
                l.forEach(_, (e, t) => {
                    e.destroy(), delete _[t]
                })
            }

            function h(e, t, n) {
                let a = _[e];
                return null != a ? t(a) : n
            }

            function C(e) {
                let {
                    lobbyId: t
                } = e, n = _[t];
                if (null == n) return !1;
                n.destroy(), delete _[t]
            }

            function T() {
                return !0
            }
            class m extends i.default.Store {
                forEach(e) {
                    l.each(_, e)
                }
                getState(e) {
                    return h(e, e => e.state, f.RTCConnectionStates.DISCONNECTED)
                }
                isConnected(e) {
                    return this.getState(e) === f.RTCConnectionStates.RTC_CONNECTED
                }
                isDisconnected(e) {
                    return this.getState(e) === f.RTCConnectionStates.DISCONNECTED
                }
                getHostname(e) {
                    return h(e, e => e.hostname, null)
                }
                getQuality(e) {
                    return h(e, e => e.quality, f.RTCConnectionQuality.UNKNOWN)
                }
                getPings(e) {
                    return h(e, e => e.getPings(), [])
                }
                getAveragePing(e) {
                    return h(e, e => e.getAveragePing(), 0)
                }
                getLastPing(e) {
                    return h(e, e => e.getLastPing(), 0)
                }
                getOutboundLossRate(e) {
                    return h(e, e => e.getOutboundLossRate(), 0)
                }
                getMediaSessionId(e) {
                    return h(e, e => e.getMediaSessionId(), null)
                }
                getRTCConnectionId(e) {
                    return h(e, e => e.getRTCConnectionId(), null)
                }
                getDuration(e) {
                    return h(e, e => e.getDuration(), 0)
                }
            }
            m.displayName = "RTCConnectionStore";
            var S = new m(r.default, E.default.isSupported() ? {
                CONNECTION_OPEN: function(e) {
                    a = e.sessionId, I()
                },
                CONNECTION_CLOSED: function() {
                    a = null, I()
                },
                RTC_CONNECTION_STATE: T,
                RTC_CONNECTION_PING: T,
                RTC_CONNECTION_LOSS_RATE: T,
                RTC_CONNECTION_UPDATE_ID: function(e) {
                    return l.some(_, t => t === e.connection)
                },
                LOBBY_VOICE_STATE_UPDATE: function(e) {
                    if (d.default.getId() !== e.userId || e.sessionId !== a) return !1;
                    let t = _[e.lobbyId];
                    null != t && null == e.channelId ? (t.destroy(), delete _[e.lobbyId]) : null != t ? t.channelId = e.channelId : null != e.channelId && (t = function(e, t) {
                        if (null == a) throw Error("Creating RTCConnection without session.");
                        let n = c.default.getLobby(e);
                        if (null == n) throw Error("Creating RTCConnection without lobby.");
                        let s = n.application_id,
                            l = new o.default({
                                userId: d.default.getId(),
                                sessionId: a,
                                guildId: e,
                                channelId: t,
                                context: s
                            });
                        return l.on(u.RTCConnectionEvent.State, (t, n, a) => {
                            r.default.dispatch({
                                type: "RTC_CONNECTION_STATE",
                                state: t,
                                ...n,
                                ...a,
                                lobbyId: e
                            })
                        }), l.on(u.RTCConnectionEvent.Ping, (t, n) => {
                            r.default.dispatch({
                                type: "RTC_CONNECTION_PING",
                                pings: t,
                                quality: n,
                                lobbyId: e
                            })
                        }), l.on(u.RTCConnectionEvent.OutboundLossRate, t => {
                            r.default.dispatch({
                                type: "RTC_CONNECTION_LOSS_RATE",
                                lossRate: t,
                                lobbyId: e
                            })
                        }), l
                    }(e.lobbyId, e.channelId), _[e.lobbyId] = t)
                },
                LOBBY_VOICE_SERVER_UPDATE: function(e) {
                    let t = _[e.lobbyId];
                    if (null == t) return !1;
                    t.connect(e.endpoint, e.token)
                },
                LOBBY_DELETE: C,
                LOBBY_DISCONNECT: C
            } : {})
        },
        367530: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("446674"),
                s = n("913144"),
                l = n("193990"),
                i = n("546463");
            class r extends a.default.Store {}
            r.displayName = "UserAchievementStore";
            new r(s.default, {
                USER_ACHIEVEMENT_UPDATE: function(e) {
                    let {
                        userAchievement: t
                    } = e, {
                        application_id: n,
                        achievement: a,
                        percent_complete: s
                    } = t;
                    if (100 === s && null != a) {
                        let e = i.default.getGame(n),
                            t = null != e ? e.getIconURL(64) : null;
                        l.default.showNotification(t, a.name, a.description, {
                            notif_type: "USER_ACHIEVEMENT_UPDATE"
                        }, {
                            omitViewTracking: !0
                        })
                    }
                }
            })
        },
        779671: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("305961"),
                i = n("49111");
            class r extends a.default.Store {
                initialize() {
                    this.waitFor(l.default), this.syncWith([l.default], i.NOOP)
                }
                channelNoticePredicate(e, t) {
                    return !e.hasFeature(i.GuildFeatures.BANNER) && Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY
                }
            }
            r.displayName = "GuildBoostingNoticeStore";
            var o = new r(s.default)
        },
        833781: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("427459"),
                i = n("49111");
            let r = {};
            r = {
                lastDismissedGracePeriods: {},
                isVisible: {}
            };
            class o extends a.default.PersistedStore {
                initialize(e) {
                    null != e && (r = e)
                }
                getLastDismissedGracePeriodForGuild(e) {
                    return null != r.lastDismissedGracePeriods[e] ? r.lastDismissedGracePeriods[e] : null
                }
                isVisible(e) {
                    return null != e && null != r.isVisible[e] && r.isVisible[e]
                }
                getState() {
                    return r
                }
            }
            o.displayName = "GuildBoostingGracePeriodNoticeStore", o.persistKey = "PremiumGuildGracePeriodNoticeStore", o.migrations = [e => ({
                ...e,
                lastDismissedGracePeriods: null != e ? {
                    ...e.lastDismissedGracePeriods
                } : {},
                isVisible: {}
            })];
            var u = new o(s.default, {
                GUILD_APPLIED_BOOSTS_FETCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        appliedBoosts: n
                    } = e, a = null != r.lastDismissedGracePeriods[t] ? r.lastDismissedGracePeriods[t] : null, s = null != a && Date.now() - a <= i.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY, o = null != n && !s && (0, l.isInGracePeriod)(n, t);
                    r = {
                        ...r,
                        isVisible: {
                            ...r.isVisible,
                            [t]: o
                        }
                    }
                },
                BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    r = {
                        ...r,
                        lastDismissedGracePeriods: {
                            ...r.lastDismissedGracePeriods,
                            [t]: Date.now()
                        },
                        isVisible: {
                            ...r.isVisible,
                            [t]: !1
                        }
                    }
                }
            })
        },
        8452: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("957255"),
                i = n("49111");
            class r extends a.default.Store {
                initialize() {
                    this.waitFor(l.default), this.syncWith([l.default], i.NOOP)
                }
                channelNoticePredicate(e, t) {
                    return Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY && l.default.can(i.Permissions.MANAGE_GUILD, e)
                }
            }
            r.displayName = "GuildBoostingNoticeStore";
            var o = new r(s.default)
        },
        572182: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("923959"),
                i = n("697218"),
                r = n("49111");
            let o = null;

            function u() {
                let e = i.default.getCurrentUser();
                if (null == e || e.mfaEnabled === o) return !1;
                o = e.mfaEnabled
            }
            class d extends a.default.Store {
                initialize() {
                    this.waitFor(i.default, l.default), this.syncWith([i.default, l.default], u)
                }
                isVisible(e) {
                    return null != e && e.mfaLevel === r.MFALevels.ELEVATED && !1 === o && l.default.hasElevatedPermissions(e.id)
                }
            }
            d.displayName = "GuildMFAWarningStore";
            var c = new d(s.default, {
                CONNECTION_OPEN: u,
                GUILD_UPDATE: function() {
                    return !0
                }
            })
        },
        433973: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("446674"),
                s = n("151426"),
                l = n("913144"),
                i = n("179803"),
                r = n("957255");

            function o() {
                return !0
            }
            class u extends a.default.Store {
                initialize() {
                    this.waitFor(r.default), this.syncWith([r.default], o)
                }
                channelNoticePredicate(e) {
                    return (0, i.shouldShowGuildOnboardingUpsell)(e.id, s.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                }
            }
            u.displayName = "GuildOnboardingUpsellNoticeStore";
            var d = new u(l.default)
        },
        150057: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("269596"),
                i = n("305961"),
                r = n("49111");
            let o = !1;

            function u(e) {
                let t = i.default.getGuild(e);
                return !!(null != t && t.hasFeature(r.GuildFeatures.HUB)) && (o = !0, !0)
            }

            function d() {
                return !0
            }
            class c extends a.default.Store {
                initialize() {
                    this.waitFor(i.default, l.default), this.syncWith([l.default], d)
                }
                channelNoticePredicate(e) {
                    return !!e.hasFeature(r.GuildFeatures.LINKED_TO_HUB) && !o && !0
                }
            }
            c.displayName = "HubLinkNoticeStore";
            var E = new c(s.default, {
                CONNECTION_OPEN: function(e) {
                    for (let t of e.guilds)
                        if (u(t.id)) return !0;
                    return !1
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    return u(t.id)
                }
            })
        },
        141162: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("957255"),
                i = n("49111");

            function r() {
                return !0
            }
            class o extends a.default.Store {
                initialize() {
                    this.waitFor(l.default), this.syncWith([l.default], r)
                }
                channelNoticePredicate(e, t) {
                    let n = Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY;
                    return n && l.default.can(i.Permissions.ADMINISTRATOR, e)
                }
            }
            o.displayName = "InviteNoticeStore";
            var u = new o(s.default)
        },
        201952: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("95410"),
                l = n("913144"),
                i = n("525065"),
                r = n("305961"),
                o = n("957255"),
                u = n("49111");
            let d = {
                MAX_MEMBER_COUNT: new Set
            };
            class c extends a.default.Store {
                initialize() {
                    var e;
                    this.waitFor(o.default, r.default, i.default), this.syncWith([o.default, r.default, i.default], u.NOOP), s.default.remove(u.ChannelNoticeTypes.MAX_MEMBER_COUNT_100), s.default.remove(u.ChannelNoticeTypes.MAX_MEMBER_COUNT_250), e = new Set(s.default.get(u.ChannelNoticeTypes.MAX_MEMBER_COUNT)), d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT] = void 0 !== e ? e : new Set
                }
                isVisible(e) {
                    var t;
                    if (null == e) return !1;
                    let n = null !== (t = i.default.getMemberCount(e.id)) && void 0 !== t ? t : 0,
                        a = o.default.can(u.Permissions.ADMINISTRATOR, e);
                    return !d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(e.id) && a && e.maxMembers > 0 && e.maxMembers - n <= 1e4
                }
            }
            c.displayName = "MaxMemberCountChannelNoticeStore";
            var E = new c(l.default, {
                MAX_MEMBER_COUNT_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    if (!d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(t)) return d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].add(t), s.default.set(u.ChannelNoticeTypes.MAX_MEMBER_COUNT, d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT]), !0
                }
            })
        },
        545429: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("736964"),
                o = n("666038"),
                u = n("449004"),
                d = n("373469"),
                c = n("26989"),
                E = n("305961"),
                f = n("824563"),
                _ = n("27618"),
                I = n("697218"),
                h = n("49111");

            function C(e) {
                let t = I.default.getUser(e);
                return {
                    user: t,
                    usernameLower: null != t ? t.username.toLowerCase() : null
                }
            }

            function T(e) {
                return {
                    status: f.default.getStatus(e),
                    isMobile: f.default.isMobileOnline(e),
                    activities: f.default.getActivities(e),
                    applicationStream: d.default.getAnyStreamForUser(e)
                }
            }

            function m(e) {
                let t = [];
                return s(c.default.memberOf(e)).map(E.default.getGuild).sortBy(e => null != e ? e.name.toLowerCase() : null).forEach(e => {
                    null != e && t.push(e)
                }), {
                    mutualGuildsLength: t.length,
                    mutualGuilds: t.slice(0, 5)
                }
            }
            class S extends o.default {
                get comparator() {
                    var e, t, n, a, s;
                    return [this.type, null !== (s = null !== (a = null === (e = this.nickname) || void 0 === e ? void 0 : e.toLowerCase()) && void 0 !== a ? a : null === (n = this.user) || void 0 === n ? void 0 : null === (t = n.globalName) || void 0 === t ? void 0 : t.toLowerCase()) && void 0 !== s ? s : this.usernameLower]
                }
                constructor(e) {
                    super(), this.key = e.key, this.type = e.type, this.status = e.status, this.activities = e.activities, this.applicationStream = e.applicationStream, this.user = e.user, this.isMobile = e.isMobile, this.usernameLower = e.usernameLower, this.mutualGuildsLength = e.mutualGuildsLength, this.mutualGuilds = e.mutualGuilds, this.nickname = e.nickname
                }
            }
            class N {
                reset() {
                    let e = s.map(_.default.getRelationships(), (e, t) => new S({
                            key: t,
                            type: e,
                            nickname: _.default.getNickname(t),
                            ...C(t),
                            ...T(t),
                            ...m(t)
                        })),
                        t = s.map(u.default.getSuggestions(), e => new S({
                            key: e.key,
                            type: 99,
                            nickname: e.name,
                            ...C(e.key),
                            ...T(e.key),
                            ...m(e.key)
                        }));
                    return new N(s.concat(e, t))
                }
                clone() {
                    return new N(this._rows)
                }
                update(e) {
                    let t = !1;
                    for (let n = 0; n < this._rows.length; n++) {
                        let a = this._rows[n],
                            s = a.merge(e(a.key));
                        t = t || s !== a, this._rows[n] = s
                    }
                    return t
                }
                filter(e, t) {
                    let n = s(this._rows).filter(e => {
                        if (null == e.user) return !1;
                        if (null != t && "" !== t) {
                            let n = t.toLowerCase(),
                                a = [e.usernameLower, e.nickname, e.user.globalName].map(e => null == e ? void 0 : e.toLowerCase());
                            return a.some(e => null == e ? void 0 : e.includes(n))
                        }
                        return !0
                    }).filter(t => {
                        switch (e) {
                            case h.FriendsSections.ONLINE:
                                return t.type === h.RelationshipTypes.FRIEND && t.status !== h.StatusTypes.OFFLINE;
                            case h.FriendsSections.PENDING:
                                return t.type === h.RelationshipTypes.PENDING_INCOMING || t.type === h.RelationshipTypes.PENDING_OUTGOING;
                            case h.FriendsSections.SUGGESTIONS:
                                return 99 === t.type;
                            case h.FriendsSections.BLOCKED:
                                return t.type === h.RelationshipTypes.BLOCKED;
                            case h.FriendsSections.ALL:
                            default:
                                return t.type === h.RelationshipTypes.FRIEND
                        }
                    }).sortBy(e => e.comparator).value();
                    return n
                }
                getRelationshipCounts() {
                    let e = {
                        [h.RelationshipTypes.FRIEND]: 0,
                        [h.RelationshipTypes.PENDING_INCOMING]: 0,
                        [h.RelationshipTypes.PENDING_OUTGOING]: 0,
                        99: 0,
                        [h.RelationshipTypes.BLOCKED]: 0
                    };
                    return this._rows.forEach(t => {
                        null != t.user && null != e[t.type] && e[t.type]++
                    }), e
                }
                constructor(e = []) {
                    this._rows = e
                }
            }
            let A = !0,
                p = !1,
                g = h.FriendsSections.ONLINE,
                R = new N,
                O = !0,
                L = !1;

            function M() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                A && (e || g !== h.FriendsSections.ONLINE && g !== h.FriendsSections.ADD_FRIEND) && !p && (A = !1, p = !0, r.default.fetchRelationships())
            }

            function v() {
                if (A = !0, O ? p = !1 : M(), R = R.reset(), L) return;
                let e = R.getRelationshipCounts();
                g = 0 === e[h.RelationshipTypes.FRIEND] ? 0 !== e[h.RelationshipTypes.PENDING_INCOMING] ? h.FriendsSections.PENDING : h.FriendsSections.ADD_FRIEND : h.FriendsSections.ONLINE
            }

            function D() {
                R = O ? new N : R.reset()
            }

            function x(e) {
                return function() {
                    return !O && !!R.update(e) && (R = R.clone(), !0)
                }
            }
            class P extends l.default.Store {
                initialize() {
                    this.waitFor(_.default, f.default, I.default, E.default, c.default, d.default, u.default), this.syncWith([_.default], D), this.syncWith([u.default], D), this.syncWith([I.default], x(C)), this.syncWith([f.default, d.default], x(T)), v()
                }
                getState() {
                    return {
                        fetching: p,
                        section: g,
                        pendingCount: _.default.getPendingCount(),
                        rows: R
                    }
                }
            }
            P.displayName = "FriendsStore";
            var y = new P(i.default, {
                CONNECTION_OPEN: function() {
                    v()
                },
                FRIENDS_SET_SECTION: function(e) {
                    g = e.section, M()
                },
                CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return O = null != t, D(), !O
                },
                LOAD_RELATIONSHIPS_SUCCESS: function() {
                    p = !1
                },
                LOAD_RELATIONSHIPS_FAILURE: function() {
                    A = !0, p = !0
                },
                DRAWER_SELECT_TAB: function(e) {
                    let {
                        tab: t
                    } = e;
                    return O = t !== h.DrawerTabTypes.FRIENDS, D(), !O
                },
                FRIENDS_SET_INITIAL_SECTION: function(e) {
                    g = e.section, L = !0
                }
            })
        },
        392453: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ea
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("823411"),
                o = n("126939"),
                u = n("501260"),
                d = n("152311"),
                c = n("429928"),
                E = n("36539"),
                f = n("502651"),
                _ = n("619443"),
                I = n("177589"),
                h = n("67139"),
                C = n("671071"),
                T = n("322631"),
                m = n("947297"),
                S = n("373469"),
                N = n("42203"),
                A = n("350522"),
                p = n("925758"),
                g = n("546463"),
                R = n("305961"),
                O = n("957255"),
                L = n("824563"),
                M = n("27618"),
                v = n("843823"),
                D = n("697218"),
                x = n("800762"),
                P = n("449008"),
                y = n("286235"),
                b = n("49111");
            let U = !1,
                G = !1,
                j = [],
                F = [],
                k = {},
                B = {},
                w = new Set,
                H = new Set;

            function V() {
                let e = M.default.getFriendIDs();
                return A.default.hasConsented(b.Consents.PERSONALIZATION) ? new Set([...v.default.getUserAffinitiesUserIds(), ...e]) : new Set(e)
            }

            function Y(e) {
                return L.default.findActivity(e, e => e.type !== b.ActivityTypes.CUSTOM_STATUS)
            }

            function W(e) {
                let t = k[e];
                return null == t && (k = {
                    ...k,
                    [e]: new m.default({
                        name: e
                    })
                }), k[e]
            }

            function K(e) {
                let t = B[e];
                return null == t && (B = {
                    ...B,
                    [e]: new T.default({
                        url: e
                    })
                }), B[e]
            }

            function z(e) {
                !H.has(e) && w.add(e)
            }

            function q(e) {
                if ((0, c.default)(e)) return C.SpotifyApplication;
                let t = null != e.application_id ? g.default.getGame(e.application_id) : null;
                return null != t ? t : (0, E.default)(e) ? W(e.name) : (0, f.default)(e) && null != e.url ? K(e.url) : (null != e.application_id && z(e.application_id), t)
            }

            function Q(e) {
                let t = x.default.getVoiceStateForUser(e);
                return (null == t ? void 0 : t.channelId) != null && O.default.canWithPartialContext(b.Permissions.VIEW_CHANNEL, {
                    channelId: t.channelId
                }) ? t.channelId : null
            }

            function X(e) {
                return M.default.isFriend(e.id)
            }

            function J(e, t, n) {
                var a, l, i, r, c, E;
                let f;
                let _ = D.default.getCurrentUser(),
                    A = t.map(e => e.id),
                    M = t.filter(t => e.has(t.id)),
                    v = !1,
                    b = [],
                    U = new Set,
                    G = !1,
                    j = [];
                for (let e of t) {
                    let n = S.default.getAnyStreamForUser(e.id),
                        r = Y(e.id);
                    if (null != n && j.push({
                            stream: n,
                            streamUser: e,
                            activity: r
                        }), null == r) continue;
                    let c = (0, I.default)(r);
                    if (null == c) continue;
                    G = c === C.SPOTIFY_APPLICATION_ID;
                    let E = function(e) {
                            let t = g.default.getGame(e);
                            return null != t ? t : "string" != typeof e ? (y.default.captureMessage("Unknown type for applicationId: ".concat(typeof e, ", value: ").concat(e), {
                                tags: {
                                    source: "ACTIVITIES"
                                }
                            }), null) : e === C.SPOTIFY_APPLICATION_ID ? C.SpotifyApplication : e.startsWith(m.XBOX_APPLICATION_ID_PREFIX) ? W(e.slice(m.XBOX_APPLICATION_ID_PREFIX.length)) : e.startsWith(T.TWITCH_APPLICATION_ID_PREFIX) ? K(e.slice(T.TWITCH_APPLICATION_ID_PREFIX.length)) : (z(e), null)
                        }(c),
                        f = null === (a = r.timestamps) || void 0 === a ? void 0 : a.start;
                    if ((0, d.default)(r)) {
                        let t = (0, o.getIsActivitiesEnabledForCurrentPlatform)(),
                            n = (0, u.default)({
                                userId: e.id,
                                activity: r,
                                application: E,
                                channelId: null === (l = x.default.getVoiceStateForUser(e.id)) || void 0 === l ? void 0 : l.channelId,
                                currentUser: _,
                                isActivitiesEnabledForCurrentPlatform: t,
                                ChannelStore: N.default,
                                VoiceStateStore: x.default,
                                PermissionStore: O.default,
                                GuildStore: R.default
                            }) !== u.EmbeddedActivityJoinability.CAN_JOIN;
                        if (n) continue
                    } else if (null == f) continue;
                    if (!h.shouldShowActivity(r) || null == E || U.has(E.id)) continue;
                    let A = null != r ? q(r) : null;
                    (null == A || A.id !== E.id) && (r = null);
                    let L = [];
                    if (null != r && null != r.party && null != r.party.id) {
                        let e = null !== (i = p.default.getParty(r.party.id)) && void 0 !== i ? i : [];
                        L = Array.from(e).reduce((e, t) => {
                            let n = D.default.getUser(t);
                            return null != n && e.push(n), e
                        }, [])
                    } else L = t.filter(e => {
                        let t = Y(e.id),
                            n = null != t ? q(t) : null;
                        return null != n && n.id === E.id
                    });
                    (L = s.orderBy(L, [X], ["desc"])).length !== t.length && (v = !0), U.add(E.id), b.push({
                        game: E,
                        activity: r,
                        activityUser: e,
                        startedPlayingTime: f,
                        playingMembers: L
                    })
                }
                let F = 1 === M.length,
                    k = [],
                    B = new Set,
                    w = new Set;
                for (let e of t) {
                    let n = Q(e.id),
                        a = N.default.getChannel(n),
                        l = null != a ? a.getGuildId() : null,
                        i = R.default.getGuild(l);
                    if (w.has(l) && B.has(n) || null == a || null == i || a.id === i.afkChannelId) null == a && (f = null, F = !0);
                    else {
                        let e = s(x.default.getVoiceStatesForChannel(a.id)).map(e => {
                            let {
                                userId: t
                            } = e;
                            return D.default.getUser(t)
                        }).filter(P.isNotNullish).orderBy([X], ["desc"]).value();
                        e.filter(e => !A.includes(e.id)).forEach(e => t.push(e)), F ? !w.has(l) && (f = null) : (f = i, F = !0), w.add(l), B.add(n), k.push({
                            channel: a,
                            guild: i,
                            members: e
                        })
                    }
                }
                return {
                    id: n,
                    voiceChannels: k,
                    isSpotifyActivity: G,
                    priorityMembers: M.map(e => ({
                        user: e,
                        status: L.default.getStatus(e.id)
                    })),
                    partiedMembers: t,
                    showPlayingMembers: v,
                    guildContext: f,
                    currentActivities: (c = b, E = e => null !== (r = e.startedPlayingTime) && void 0 !== r ? r : 0, s(c).orderBy([E, e => e.game.name], ["desc", "asc"])).value(),
                    applicationStreams: j
                }
            }

            function Z() {
                return U && _.default.isConnected()
            }
            let $ = s.throttle(() => {
                ! function() {
                    if (!Z()) return;
                    w.clear();
                    let e = Array.from(V()).reduce((e, t) => {
                            let n = D.default.getUser(t);
                            return null != n && !n.bot && e.push(n), e
                        }, []),
                        t = s(e).groupBy(e => {
                            var t;
                            let n = Q(e.id),
                                a = Y(e.id);
                            return null != n ? "".concat("channel-", "-").concat(n) : (null == a ? void 0 : null === (t = a.party) || void 0 === t ? void 0 : t.id) != null ? "".concat("party-", "-").concat(a.party.id) : "".concat("user-", "-").concat(e.id)
                        }),
                        n = function(e) {
                            let t = V(),
                                n = J.bind(null, t);
                            return s(e).mapValues(n)
                        }(t),
                        a = n.values().orderBy([e => e.partiedMembers.length > 1, e => e.applicationStreams.length > 0, e => e.voiceChannels.length > 0, e => e.currentActivities.length > 0, e => e.isSpotifyActivity, e => e.priorityMembers.map(e => e.user.username.toLowerCase()).join(" ")], ["desc", "desc", "desc", "desc", "asc", "asc"]).value();
                    F = (j = a.filter(e => e.voiceChannels.length >= 1 || e.currentActivities.length > 0 || e.applicationStreams.length > 0)).map(e => ({
                        type: b.ActivityCardTypes.USER,
                        party: e
                    })), ! function() {
                        if (w.size > 0) {
                            let e = Array.from(w);
                            r.default.fetchApplications(e), e.forEach(e => H.add(e)), w.clear()
                        }
                    }(), G = !0
                }(), en.emitChange()
            }, 1e3);

            function ee() {
                return !!Z() && ($(), !1)
            }
            class et extends l.default.Store {
                initialize() {
                    this.syncWith([D.default, g.default, L.default, p.default, x.default, S.default, M.default, A.default, v.default], ee), this.waitFor(_.default, R.default, g.default, D.default, v.default)
                }
                get currentActivityParties() {
                    return j
                }
                get nowPlayingCards() {
                    return F
                }
                get isMounted() {
                    return U
                }
                get loaded() {
                    return G
                }
            }
            et.displayName = "NowPlayingViewStore";
            let en = new et(i.default, {
                LOGOUT: function() {
                    U = !1, j = [], F = [], w.clear()
                },
                NOW_PLAYING_MOUNTED: function() {
                    U = !0, $()
                },
                NOW_PLAYING_UNMOUNTED: function() {
                    U = !1
                }
            });
            var ea = en
        },
        428773: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("917351"),
                l = n.n(s),
                i = n("77078"),
                r = n("533222"),
                o = n("113605"),
                u = n("42887"),
                d = n("353927");
            let c = new Set(["DisplayPort"]),
                E = !1;

            function f() {
                let e;
                if (E) return;
                let t = u.default.getInputDeviceId(),
                    s = u.default.getOutputDeviceId();
                if (o.default.getState().neverShowModal || l.isEmpty(o.default.lastDeviceConnected)) return;
                let f = (0, o.extractDisplayName)(u.default.getInputDevices()[t]),
                    _ = (0, o.extractDisplayName)(u.default.getOutputDevices()[s]),
                    I = l.some(o.default.lastDeviceConnected, e => c.has(e.displayName) || e.displayName === f || e.displayName === _);
                if (I) return;
                let h = l.some(o.default.lastDeviceConnected, e => r.default.isCertified(o.default.inputDevices[e.displayName]) || r.default.isCertified(o.default.outputDevices[e.displayName])),
                    C = t === d.DEFAULT_DEVICE_ID && o.default.lastInputSystemDevice.justChanged || s === d.DEFAULT_DEVICE_ID && o.default.lastOutputSystemDevice.justChanged;
                if (C && !h) return;
                let T = l.first(Object.keys(o.default.lastDeviceConnected)),
                    m = null != T && "" !== T ? o.default.lastDeviceConnected[T] : null;
                null != m && (o.default.initialized && null != T && (r.default.isCertified(o.default.inputDevices[T]) ? e = r.default.getCertifiedDevice(o.default.inputDevices[T]) : r.default.isCertified(o.default.outputDevices[T]) && (e = r.default.getCertifiedDevice(o.default.outputDevices[T]))), E = !0, (0, i.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await n.el("134064").then(n.bind(n, "134064"));
                    return n => {
                        let {
                            transitionState: s,
                            onClose: l
                        } = n;
                        return (0, a.jsx)(t, {
                            device: m,
                            certifiedDeviceMetadata: e,
                            transitionState: s,
                            onClose: () => (E = !1, l())
                        })
                    }
                }))
            }
            var _ = {
                init() {
                    o.default.addChangeListener(f)
                }
            }
        },
        31957: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("446674"),
                s = n("95410"),
                l = n("913144"),
                i = n("271938"),
                r = n("42203"),
                o = n("101125"),
                u = n("49111");
            let d = "IncomingCallStore",
                c = {
                    width: 232,
                    height: 315
                },
                E = new Set,
                f = [],
                _ = new Map,
                I = new Set,
                h = 0,
                C = 0,
                T = !1;

            function m(e) {
                if (null == e || null == _.get(e)) return !1;
                _.delete(e), (I = new Set(I)).delete(e)
            }

            function S(e) {
                let {
                    channelId: t,
                    ringing: n
                } = e, a = n.includes(i.default.getId());
                if (!I.has(t) && a) {
                    let e = r.default.getChannel(t);
                    if (null == e) return !1;
                    let n = 10 * I.size;
                    _.set(t, {
                        channel: e,
                        x: h + n,
                        y: C + n
                    }), (I = new Set(I)).add(t)
                } else {
                    if (!I.has(t) || a) return !1;
                    m(t)
                }
            }! function() {
                let e = s.default.get(d);
                if (null != e) h = +e.x, C = +e.y;
                else {
                    let e = n("471671").default.windowSize();
                    h = e.width / 2 - c.width / 2, C = e.height / 2 - c.height / 2
                }
            }();

            function N() {
                T = o.default.getStatus() === u.StatusTypes.DND
            }
            class A extends a.default.Store {
                initialize() {
                    this.waitFor(r.default, o.default), this.syncWith([o.default], N)
                }
                getIncomingCalls() {
                    return T ? f : Array.from(_.values())
                }
                getIncomingCallChannelIds() {
                    return T ? E : I
                }
                getFirstIncomingCallId() {
                    return T ? null : I.values().next().value
                }
                hasIncomingCalls() {
                    return !T && I.size > 0
                }
            }
            A.displayName = "IncomingCallStore";
            var p = new A(l.default, {
                CALL_CREATE: S,
                CALL_UPDATE: S,
                CALL_DELETE: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return m(t)
                },
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return m(t)
                },
                INCOMING_CALL_MOVE: function(e) {
                    let {
                        x: t,
                        y: n
                    } = e;
                    return h = t, C = n, s.default.set(d, {
                        x: h,
                        y: C
                    }), !1
                },
                CHANNEL_DELETE: function(e) {
                    let {
                        channel: t
                    } = e;
                    return m(t.id)
                }
            })
        },
        43093: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144");
            let i = !1,
                r = null;
            var o = {
                init() {
                    l.default.subscribe("CONNECTION_OPEN", e => {
                        let {
                            pendingPayments: t
                        } = e;
                        if (null != t && t.length > 0) {
                            var l;
                            if (r === t[0] || null == (r = t[0])) return;
                            l = r, i || (i = !0, (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("905692").then(n.bind(n, "905692"));
                                return t => {
                                    let {
                                        transitionState: n,
                                        onClose: s
                                    } = t;
                                    return (0, a.jsx)(e, {
                                        pendingPayment: l,
                                        transitionState: n,
                                        onClose: () => (i = !1, s())
                                    })
                                }
                            }))
                        }
                    })
                }
            }
        },
        456353: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getPartyMetadata: function() {
                    return l
                }
            });
            var a = n("575365"),
                s = n("309570");

            function l(e) {
                return {
                    af_voice_chat: e.voiceChannels.length > 0,
                    af_people_count: e.partiedMembers.length,
                    af_rich_presence: e.currentActivities.some(e => {
                        let {
                            activity: t
                        } = e;
                        return (0, s.default)(t)
                    }),
                    game_platform: e.currentActivities.length > 0 ? (0, a.default)(e.currentActivities[0].activity) : null
                }
            }
        },
        969388: function(e, t, n) {
            "use strict";

            function a(e) {
                let t;
                let n = !1;
                return function() {
                    for (var a = arguments.length, s = Array(a), l = 0; l < a; l++) s[l] = arguments[l];
                    return !n && (n = !0, t = e(...s)), t
                }
            }
            n.r(t), n.d(t, {
                callOnce: function() {
                    return a
                }
            })
        },
        497: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            class a {
                _processQueue() {
                    setTimeout(() => {
                        if (this._queue.length > 0 && this._tokenCount > 0) {
                            this._tokenCount--, null == this._intervalID && (this._intervalID = setInterval(() => this._iterate(), this._intervalPeriod));
                            let e = this._queue.shift();
                            null == e || e(), this._processQueue()
                        }
                    }, 0)
                }
                _iterate() {
                    this._tokenCount = Math.min(this._capacity, this._tokenCount + 1), this._tokenCount >= this._capacity && null != this._intervalID && (clearInterval(this._intervalID), this._intervalID = null), this._processQueue()
                }
                process() {
                    return new Promise(e => {
                        this._queue.push(e), this._processQueue()
                    })
                }
                constructor(e, t) {
                    this._capacity = e, this._tokenCount = e, this._queue = [], this._intervalPeriod = t / e, this._intervalID = null
                }
            }
        },
        61141: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RPCCommandSchemas: function() {
                    return l
                }
            });
            var a = n("792353"),
                s = n("843455");
            let l = {
                    [a.RPCCommand.INITIATE_IMAGE_UPLOAD]: {
                        request: void 0,
                        response: e => e.object({
                            image_url: e.string().required()
                        })
                    },
                    [a.RPCCommand.OPEN_SHARE_MOMENT_DIALOG]: {
                        response: void 0,
                        request: e => (0, a.joiReqObj)(e.object({
                            mediaUrl: e.string().required().max(1024)
                        }))
                    },
                    [a.RPCCommand.AUTHENTICATE]: {
                        request: e => (0, a.joiReqObj)(e.object({
                            access_token: e.string().allow(null).optional()
                        })),
                        response: e => e.object({
                            access_token: e.string().required(),
                            user: e.object({
                                username: e.string().required(),
                                discriminator: e.string().required(),
                                id: e.string().required(),
                                avatar: e.string().allow(null),
                                public_flags: e.number().required()
                            }).required(),
                            scopes: e.array().items(e.string().valid(...(0, a.joiEnum)(s.OAuth2Scopes))).required(),
                            expires: e.string().required(),
                            application: e.object({
                                description: e.string().required(),
                                icon: e.string().allow(null),
                                id: e.string().required(),
                                rpc_origins: e.array().items(e.string()).optional(),
                                name: e.string().required()
                            }).required()
                        })
                    },
                    [a.RPCCommand.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: {
                        request: void 0,
                        response: e => e.object({
                            participants: e.array().items(i(e).keys({
                                nickname: e.string().description("Server nickname. Not unique.")
                            }).required()).required()
                        }).required()
                    }
                },
                i = e => e.object({
                    id: e.string().required().description("User ID"),
                    username: e.string().required(),
                    global_name: e.string().allow(null).description("Global Discord name. Not unique."),
                    discriminator: e.string().required().description("Global name discriminator. Will be 0 if a unique username"),
                    avatar: e.string().allow(null).description("User Avatar ID"),
                    flags: e.number().required().description("Public user flags"),
                    bot: e.bool().required().description("If a bot user."),
                    avatar_decoration_data: e.object({
                        asset: e.string().required(),
                        skuId: e.string()
                    }).allow(null).description("Details about avatar decoration"),
                    premium_type: e.number().allow(null).description("Nitro premium type")
                }).description("Discord User")
        },
        792353: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RPCCommand: function() {
                    return a.RPCCommands
                },
                joiReqObj: function() {
                    return s
                },
                joiEnum: function() {
                    return l
                }
            });
            var a = n("843455");

            function s(e) {
                return e.required().unknown(!0)
            }

            function l(e) {
                return Object.values(e)
            }
        },
        524297: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createRPCCommand: function() {
                    return s
                }
            });
            var a = n("61141");

            function s(e, t) {
                var n;
                let {
                    scope: s,
                    handler: l
                } = t, i = {
                    scope: s,
                    handler: l
                }, r = null === (n = a.RPCCommandSchemas[e]) || void 0 === n ? void 0 : n.request, o = null;
                return null != r && (i.validation = function(e) {
                    return null == o && (o = r(e)), o
                }), i
            }
        }
    }
]);