(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
    ["66742"], {
        950899: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9da7ae63b88717a5d4be.png"
        },
        318548: function(e, t, n) {
            "use strict";
            e.exports = n.p + "3b7d1f84725ab9a0d71c.svg"
        },
        672523: function(e, t, n) {
            "use strict";
            e.exports = n.p + "953458e872948604afbf.svg"
        },
        519352: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6c79e7f4a3f75383bf9a.svg"
        },
        630159: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d2664a9b4f46d06c7ca4.svg"
        },
        608128: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4c091df98c5a5cbfd323.svg"
        },
        914143: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b3dd9b1e282fff30af5b.svg"
        },
        933150: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c91026f0b84bc1380e52.svg"
        },
        829361: function(e, t, n) {
            "use strict";
            e.exports = n.p + "532f1d4582d881960783.svg"
        },
        289309: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ee4637f8627629dd0da5.svg"
        },
        197040: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bca918618b884a382ab5.svg"
        },
        1547: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5741692705ba077f4190.svg"
        },
        819444: function(e, t, n) {
            "use strict";
            e.exports = n.p + "24aa06be5457e66bdd64.svg"
        },
        681224: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0629e34902ae58f8e4ca.svg"
        },
        855143: function(e, t, n) {
            "use strict";
            e.exports = n.p + "01864c39871ce619d855.svg"
        },
        934516: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a72746e7108167af95c8.svg"
        },
        855237: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a0f644c8dab01cdcb21e.svg"
        },
        292379: function(e, t, n) {
            "use strict";
            e.exports = n.p + "bc17dea6307567a5a828.svg"
        },
        649592: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b59cc79bee3b08e25893.svg"
        },
        37476: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7e133d43fb9e0c982693.svg"
        },
        696414: function(e, t, n) {
            "use strict";
            e.exports = n.p + "2c37d410c7431344d45a.png"
        },
        992739: function(e, t, n) {
            "use strict";
            e.exports = n.p + "32fda287bbd217f60166.svg"
        },
        306910: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9401bdbd066bbc6bb35e.svg"
        },
        396609: function(e, t, n) {
            "use strict";
            e.exports = n.p + "ca840e392fe5c8c84693.svg"
        },
        617059: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8ec619e29a44a057e4b5.svg"
        },
        853477: function(e, t, n) {
            "use strict";
            e.exports = n.p + "89f38a8716e7d56c17dc.svg"
        },
        557659: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7e0036fd6cea3d4fa30e.svg"
        },
        31396: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c0904e185ab8b4e7b2c8.svg"
        },
        357413: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9d860163581f23579619.svg"
        },
        991015: function(e, t, n) {
            "use strict";
            e.exports = n.p + "128943d22370771f543f.svg"
        },
        678262: function(e, t, n) {
            "use strict";
            e.exports = n.p + "32f240ec7045a00a221c.svg"
        },
        436412: function(e, t, n) {
            "use strict";
            e.exports = n.p + "954feed894e2ad0262b2.svg"
        },
        729386: function(e, t, n) {
            "use strict";
            e.exports = n.p + "909d9565a682e0cb3b7c.svg"
        },
        235800: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c99b3867ae4d22964664.svg"
        },
        367574: function(e, t, n) {
            "use strict";
            e.exports = n.p + "148fd8378ac32a66783c.svg"
        },
        398586: function(e, t, n) {
            "use strict";
            e.exports = n.p + "7e724c5bbf29dd3598ea.svg"
        },
        667818: function(e, t, n) {
            "use strict";
            e.exports = n.p + "13d4a20830c1f447ad85.svg"
        },
        516395: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0ea8260dd049f3be6f41.svg"
        },
        723030: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8f8162ee689b2d85996c.svg"
        },
        754771: function(e, t, n) {
            "use strict";
            e.exports = n.p + "cc543f407b1696f1e82f.svg"
        },
        321221: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9e9722bd5c8ec20fd746.svg"
        },
        744725: function(e, t, n) {
            "use strict";
            e.exports = n.p + "4ee80a24b008ebfdc4a0.svg"
        },
        229483: function(e, t, n) {
            "use strict";
            e.exports = n.p + "e9802d8cbd4efea22c7f.svg"
        },
        505766: function(e, t, n) {
            "use strict";
            e.exports = n.p + "cf0a3491ccd8d75e5468.svg"
        },
        99739: function(e, t, n) {
            "use strict";
            e.exports = n.p + "27eb704c7cc53936e0fa.svg"
        },
        458284: function(e, t, n) {
            "use strict";
            e.exports = n.p + "106e430cc187836ddbbd.svg"
        },
        311492: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1a7be5edb7c525306752.gif"
        },
        200546: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b2ff1648395d7d98477e.png"
        },
        571104: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c59ef4f6c7e2543b69fa.png"
        },
        431616: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b873355451ce01e40054.png"
        },
        476742: function(e, t, n) {
            "use strict";
            e.exports = n.p + "82012659f3d934de21a4.png"
        },
        156465: function(e, t, n) {
            "use strict";
            e.exports = n.p + "42b086ee3d9863ea45bc.svg"
        },
        906897: function(e, t, n) {
            "use strict";
            e.exports = n.p + "896c671f42f403930aa1.svg"
        },
        479999: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f5fcce7c509fcb9e2e7f.svg"
        },
        183127: function(e, t, n) {
            "use strict";
            e.exports = n.p + "fcf4c0943984017de6b7.svg"
        },
        892839: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d53b136d76b927267b3e.svg"
        },
        65016: function(e, t, n) {
            "use strict";
            e.exports = n.p + "acff4170e5aef6d0b8ab.png"
        },
        270111: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8b02d737af060c3da754.svg"
        },
        158463: function(e, t, n) {
            "use strict";
            e.exports = n.p + "9cae5cbf245ad4d26386.svg"
        },
        12469: function(e, t, n) {
            "use strict";
            e.exports = n.p + "32c31659fb057a7437a7.svg"
        },
        936775: function(e, t, n) {
            "use strict";
            e.exports = n.p + "b7204ec85b295bf8c39f.svg"
        },
        288562: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0a46a4a99b961a8a0006.png"
        },
        553274: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a745c1f1e7f49df66b21.svg"
        },
        824489: function(e, t, n) {
            "use strict";
            e.exports = n.p + "5e7aa4b4bc9cc22cf93e.svg"
        },
        152985: function(e, t, n) {
            "use strict";
            e.exports = n.p + "440d8145b3dff23399e7.svg"
        },
        963301: function(e, t, n) {
            "use strict";
            e.exports = n.p + "056efbeaaaa0b3c20b39.svg"
        },
        358616: function(e, t, n) {
            "use strict";
            e.exports = n.p + "223e044de8442138ab49.svg"
        },
        865932: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f54b8f205be130d3839a.svg"
        },
        392963: function(e, t, n) {
            "use strict";
            e.exports = n.p + "19e7daca48265059a2bd.svg"
        },
        871859: function(e, t, n) {
            "use strict";
            e.exports = n.p + "47f29fcff307e852553b.svg"
        },
        371997: function(e, t, n) {
            "use strict";
            e.exports = n.p + "452cd32e3c30e1c83f90.svg"
        },
        240542: function(e, t, n) {
            "use strict";
            e.exports = n.p + "0e1dac3ff58e6cd29e54.gif"
        },
        22230: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a2a4e4f7ee423cd6bbcd.mov"
        },
        318342: function(e, t, n) {
            "use strict";
            e.exports = n.p + "21a45210eb71c8dd143f.webm"
        },
        604448: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8bc05ae4c6f108b651eb.mov"
        },
        788936: function(e, t, n) {
            "use strict";
            e.exports = n.p + "8088275f2bba6c7b1ae1.webm"
        },
        833572: function(e, t, n) {
            "use strict";
            e.exports = n.p + "baded936da3290c1c243.mov"
        },
        90976: function(e, t, n) {
            "use strict";
            e.exports = n.p + "1f710ae2375e133a76c4.webm"
        },
        170486: function(e, t, n) {
            "use strict";
            e.exports = n.p + "a139e1ef9370869a38c5.mov"
        },
        664182: function(e, t, n) {
            "use strict";
            e.exports = n.p + "d71df05a611472844848.webm"
        },
        513002: function(e, t, n) {
            "use strict";
            e.exports = n.p + "f328a6f8209d4f1f5022.png"
        },
        727992: function(e, t, n) {
            "use strict";
            e.exports = n.p + "6296fbce83bbcc0e73d9.svg"
        },
        776432: function(e, t, n) {
            "use strict";
            e.exports = n.p + "27e9eb71cd459e52fe5e.png"
        },
        546643: function(e, t, n) {
            "use strict";
            e.exports = n.p + "35330ac2e488f0dd7d6f.png"
        },
        275974: function(e, t, n) {
            "use strict";
            e.exports = n.p + "c88c7ab4d8dbc0e7a4dd.svg"
        },
        939488: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setHomeLink: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "APP_VIEW_SET_HOME_LINK",
                    link: e
                })
            }
        },
        17434: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                setCertifiedDevices: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e, t) {
                a.default.dispatch({
                    type: "CERTIFIED_DEVICES_SET",
                    applicationId: e,
                    devices: t
                })
            }
        },
        363025: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                hidePremiumGuildGracePeriodNotice: function() {
                    return s
                },
                hideEnablePublicGuildUpsellNotice: function() {
                    return l
                },
                hideMaxMemberCountChannelNotice: function() {
                    return i
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS",
                    guildId: e
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "PUBLIC_UPSELL_NOTICE_DISMISS",
                    guildId: e
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "MAX_MEMBER_COUNT_NOTICE_DISMISS",
                    guildId: e
                })
            }
        },
        778323: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                dismiss: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "DETECTED_OFF_PLATFORM_PREMIUM_PERKS_DISMISS",
                    skuId: e
                })
            }
        },
        711115: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                uninstallBranchPrompt: function() {
                    return r
                }
            });
            var a = n("77078"),
                s = n("299285"),
                l = n("605250"),
                i = n("190017");

            function r(e, t, r) {
                ! function(e, t) {
                    let i = s.default.getApplication(e);
                    if (null == i) {
                        new(0, l.default)("DispatchUninstallActionCreators").log("Application not found for game ".concat(e));
                        return
                    }(0, a.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("857727").then(n.bind(n, "857727"));
                        return n => e({
                            game: i,
                            onConfirmUninstall: t,
                            ...n
                        })
                    })
                }(e, () => (0, i.uninstallApplication)(e, t, r))
            }
        },
        259083: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                sortList: function() {
                    return s
                },
                updateLibraryFilter: function() {
                    return l
                },
                updateActiveRowKey: function() {
                    return i
                }
            });
            var a = n("913144");

            function s(e, t) {
                a.default.dispatch({
                    type: "LIBRARY_TABLE_SORT_UPDATE",
                    key: e,
                    direction: t
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "LIBRARY_APPLICATION_FILTER_UPDATE",
                    query: e
                })
            }

            function i(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                a.default.dispatch({
                    type: "LIBRARY_TABLE_ACTIVE_ROW_ID_UPDATE",
                    key: e,
                    isKeyboardEvent: t
                })
            }
        },
        680762: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchGuildAffinities: function() {
                    return i
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("49111");
            let i = () => a.default.get({
                url: l.Endpoints.GUILD_AFFINITIES,
                oldFormErrors: !0
            }).then(e => {
                let {
                    body: {
                        guild_affinities: t
                    }
                } = e;
                s.default.dispatch({
                    type: "LOAD_GUILD_AFFINITIES_SUCCESS",
                    guildAffinities: t
                })
            }, () => {
                s.default.dispatch({
                    type: "LOAD_GUILD_AFFINITIES_FAILURE"
                })
            })
        },
        228157: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("913144"),
                s = {
                    move(e, t) {
                        a.default.dispatch({
                            type: "INCOMING_CALL_MOVE",
                            x: e,
                            y: t
                        })
                    }
                }
        },
        641608: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                addInstallLocation: function() {
                    return l
                },
                removeInstallLocation: function() {
                    return i
                },
                updateInstallLocation: function() {
                    return r
                },
                fetchMetadata: function() {
                    return o
                }
            }), n("222007");
            var a = n("913144"),
                s = n("152723");

            function l(e) {
                s.default.queryDirectory(e, (t, n) => {
                    null == t && null != n && a.default.dispatch({
                        type: "INSTALLATION_LOCATION_ADD",
                        path: e,
                        metadata: n
                    })
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "INSTALLATION_LOCATION_REMOVE",
                    path: e
                })
            }

            function r(e, t) {
                let {
                    label: n,
                    isDefault: s
                } = t;
                a.default.dispatch({
                    type: "INSTALLATION_LOCATION_UPDATE",
                    path: e,
                    label: n,
                    isDefault: s
                })
            }

            function o(e) {
                let t = {},
                    n = 0;
                for (let l of e) null != l && "string" == typeof l && s.default.queryDirectory(l, (s, i) => {
                    ++n, null == s && null != i && (t[l] = i), n === e.length && a.default.dispatch({
                        type: "INSTALLATION_LOCATION_FETCH_METADATA",
                        metadataPayload: t
                    })
                })
            }
        },
        444949: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchActivityStatistics: function() {
                    return r
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("251013"),
                i = n("49111");
            async function r() {
                let e = l.default.lastFetched;
                if (!(null != e && Date.now() - e < 216e5)) try {
                    let e = await a.default.get({
                        url: i.Endpoints.USER_ACTIVITY_STATISTICS,
                        oldFormErrors: !0
                    });
                    s.default.dispatch({
                        type: "USER_ACTIVITY_STATISTICS_FETCH_SUCCESS",
                        statistics: e.body
                    })
                } catch (e) {
                    return e
                }
            }
        },
        297726: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                connect: function() {
                    return i
                },
                disconnect: function() {
                    return r
                },
                createLobby: function() {
                    return o
                },
                updateLobby: function() {
                    return u
                },
                updateLobbyMember: function() {
                    return d
                },
                deleteLobby: function() {
                    return c
                },
                send: function() {
                    return E
                },
                search: function() {
                    return f
                },
                voiceConnect: function() {
                    return _
                },
                voiceDisconnect: function() {
                    return C
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("49111");

            function i(e, t, n) {
                return new Promise((a, l) => {
                    s.default.dispatch({
                        type: "LOBBY_CONNECT",
                        socketId: e,
                        lobbyId: t,
                        lobbySecret: n,
                        resolve: a,
                        reject: l
                    })
                })
            }

            function r(e) {
                s.default.dispatch({
                    type: "LOBBY_DISCONNECT",
                    lobbyId: e
                })
            }

            function o(e, t, n) {
                return a.default.post({
                    url: l.Endpoints.LOBBIES,
                    body: {
                        application_id: t,
                        ...n
                    },
                    retries: 1,
                    oldFormErrors: !0
                }).then(t => {
                    let {
                        body: n
                    } = t;
                    return i(e, n.id, n.secret)
                })
            }

            function u(e, t) {
                return a.default.patch({
                    url: l.Endpoints.LOBBY(e),
                    body: {
                        ...t
                    },
                    retries: 1,
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function d(e, t, n) {
                return a.default.patch({
                    url: l.Endpoints.LOBBY_MEMBER(e, t),
                    body: {
                        ...n
                    },
                    retries: 1,
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function c(e) {
                return a.default.delete({
                    url: l.Endpoints.LOBBY(e),
                    body: {},
                    retries: 1,
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function E(e, t) {
                return a.default.post({
                    url: l.Endpoints.LOBBY_SEND(e),
                    body: {
                        data: t
                    },
                    oldFormErrors: !0
                }).then(l.NOOP)
            }

            function f(e) {
                return a.default.post({
                    url: l.Endpoints.LOBBY_SEARCH,
                    body: e,
                    oldFormErrors: !0
                }).then(e => {
                    let {
                        body: t
                    } = e;
                    return t
                })
            }

            function _(e) {
                s.default.dispatch({
                    type: "LOBBY_VOICE_CONNECT",
                    lobbyId: e
                })
            }

            function C(e) {
                s.default.dispatch({
                    type: "LOBBY_VOICE_DISCONNECT",
                    lobbyId: e
                })
            }
        },
        950926: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("913144"),
                s = {
                    clearRemoteDisconnectVoiceChannelId() {
                        a.default.dispatch({
                            type: "CLEAR_REMOTE_DISCONNECT_VOICE_CHANNEL_ID"
                        })
                    },
                    clearLastSessionVoiceChannelId() {
                        a.default.dispatch({
                            type: "CLEAR_LAST_SESSION_VOICE_CHANNEL_ID"
                        })
                    }
                }
        },
        52289: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            }), n("222007");
            var a = n("913144"),
                s = {
                    setEnabled(e) {
                        this.update({
                            enabled: e
                        })
                    },
                    update(e) {
                        for (let t of Object.keys(e)) a.default.dispatch({
                            type: "STREAMER_MODE_UPDATE",
                            key: t,
                            value: e[t]
                        })
                    }
                }
        },
        70614: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                authorizeAndSetTestModeApplication: function() {
                    return E
                },
                reset: function() {
                    return f
                },
                resetError: function() {
                    return _
                }
            }), n("70102"), n("702976");
            var a = n("913144"),
                s = n("550766"),
                l = n("651057"),
                i = n("299285"),
                r = n("653047"),
                o = n("568734"),
                u = n("253981"),
                d = n("568131"),
                c = n("49111");
            async function E(e, t) {
                a.default.dispatch({
                    applicationId: e,
                    type: "DEVELOPER_TEST_MODE_AUTHORIZATION_START"
                });
                try {
                    let n = await (0, s.validateTestMode)(e);
                    if (!n) throw Error("Do not have access!");
                    let E = i.default.getApplication(e);
                    null == E && (E = r.default.createFromServer(await l.default.fetchApplication(e)));
                    let f = (0, o.hasFlag)(E.flags, c.ApplicationFlags.EMBEDDED);
                    if (f && (null == t || !u.default.URL_REGEX.test(t))) throw Error("Invalid Origin URL for embedded application");
                    return !f && d.createTestModeLibraryApplications(E), a.default.dispatch({
                        type: "DEVELOPER_TEST_MODE_AUTHORIZATION_SUCCESS",
                        applicationId: e,
                        originURL: f ? t : null
                    }), E
                } catch (t) {
                    return a.default.dispatch({
                        type: "DEVELOPER_TEST_MODE_AUTHORIZATION_FAIL",
                        applicationId: e,
                        error: t.message
                    }), null
                }
            }

            function f() {
                a.default.dispatch({
                    type: "DEVELOPER_TEST_MODE_RESET"
                })
            }

            function _() {
                a.default.dispatch({
                    type: "DEVELOPER_TEST_MODE_RESET_ERROR"
                })
            }
        },
        831314: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("872717"),
                s = n("271938"),
                l = n("49111"),
                i = {
                    setUserAchievement(e, t, n) {
                        let i = s.default.getId();
                        return a.default.put({
                            url: l.Endpoints.USER_ACHIEVEMENTS_FOR_USER(i, e, t),
                            body: {
                                percent_complete: n
                            },
                            oldFormErrors: !0
                        })
                    },
                    fetchForApplication: e => a.default.get({
                        url: l.Endpoints.USER_ACHIEVEMENTS(e),
                        retries: 1,
                        oldFormErrors: !0
                    }).then(e => {
                        let {
                            body: t
                        } = e;
                        return t
                    })
                }
        },
        777273: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchUserAffinities: function() {
                    return r
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("843823"),
                i = n("49111");

            function r() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                return l.default.needsRefresh() ? (s.default.dispatch({
                    type: "LOAD_USER_AFFINITIES"
                }), a.default.get({
                    url: i.Endpoints.USER_AFFINITIES,
                    retries: e ? 3 : 0,
                    oldFormErrors: !0
                }).then(e => {
                    let {
                        body: t
                    } = e;
                    s.default.dispatch({
                        type: "LOAD_USER_AFFINITIES_SUCCESS",
                        affinities: t
                    })
                }, () => {
                    s.default.dispatch({
                        type: "LOAD_USER_AFFINITIES_FAILURE"
                    })
                })) : Promise.resolve()
            }
        },
        139245: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                markView: function() {
                    return s
                }
            });
            var a = n("913144");

            function s(e) {
                a.default.dispatch({
                    type: "VIEW_HISTORY_MARK_VIEW",
                    key: e
                })
            }
        },
        245489: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("627445"),
                o = n.n(r),
                u = n("77078"),
                d = n("736964"),
                c = n("476765"),
                E = n("284609"),
                f = n("49111"),
                _ = n("894282"),
                C = n("782340"),
                h = n("636478"),
                I = n("926622");
            let T = {
                    canSend: !1,
                    hint: null,
                    success: null,
                    error: null
                },
                S = (0, c.uid)(),
                N = "".concat(S, "-decription"),
                A = "".concat(S, "-error");

            function m(e, t) {
                switch (t.type) {
                    case "RESET":
                        return T;
                    case "SUCCESS":
                        return {
                            ...T, success: t.text
                        };
                    case "HINT":
                        return {
                            ...T, canSend: !0, hint: t.text
                        };
                    case "ERROR":
                        return {
                            ...e, canSend: !0, error: t.text
                        }
                }
            }

            function p() {
                let e = s.createRef(),
                    t = s.createRef(),
                    [n, l] = s.useReducer(m, T),
                    {
                        canSend: r,
                        hint: c,
                        success: p,
                        error: g
                    } = n;
                return s.useEffect(() => {
                    null != p && (o(null != e.current, "Input is submitting when not mounted"), e.current.value = "", e.current.focus())
                }, [p, e]), (0, a.jsxs)("form", {
                    onSubmit: t => {
                        t.preventDefault(), o(null != e.current, "Input is submitted when not mounted");
                        let n = e.current.value.trim();
                        !n.includes("#") && n.startsWith("@") && (n = n.substring(1));
                        let a = (0, E.validateDiscordTag)(n);
                        if (null != a) {
                            l({
                                type: "ERROR",
                                text: a
                            });
                            return
                        }
                        d.default.sendRequest({
                            discordTag: n,
                            context: {
                                location: "Add Friend"
                            }
                        }).then(() => l({
                            type: "SUCCESS",
                            text: C.default.Messages.ADD_FRIEND_SUCCESS.format({
                                discordTag: n
                            })
                        }), e => {
                            var t;
                            return l({
                                type: "ERROR",
                                text: (0, E.humanizeAbortCode)(null === (t = e.body) || void 0 === t ? void 0 : t.code, n)
                            })
                        })
                    },
                    autoComplete: "off",
                    children: [(0, a.jsx)(u.FormText, {
                        id: N,
                        type: u.FormText.Types.DESCRIPTION,
                        children: C.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION
                    }), (0, a.jsx)(u.FocusRing, {
                        focusTarget: e,
                        ringTarget: t,
                        ringClassName: h.ring,
                        children: (0, a.jsxs)("div", {
                            ref: t,
                            className: i(h.addFriendInputWrapper, {
                                [h.success]: p,
                                [h.error]: g
                            }),
                            children: [(0, a.jsx)(u.TextInput, {
                                id: S,
                                inputRef: e,
                                className: h.addFriendInput,
                                inputClassName: h.input,
                                onKeyPress: t => {
                                    let n = t.currentTarget.value;
                                    if (t.key !== _.KeyboardEventKey.Enter && n.includes("#")) {
                                        o(null != e.current, "Input is handling keypress when not mounted");
                                        let a = n.indexOf("#"),
                                            s = e.current.selectionStart,
                                            l = t.key === _.KeyboardEventKey.Backspace || t.key === _.KeyboardEventKey.ArrowRight || t.key === _.KeyboardEventKey.ArrowLeft,
                                            i = t.which >= 48 && t.which <= 57;
                                        null != s && s > a && /^(.+?#\d{4})$/.test(n) && !l ? t.preventDefault() : null != s && s > a && !i && !l && t.preventDefault()
                                    }
                                },
                                onChange: e => {
                                    if (e.length <= 0) {
                                        l({
                                            type: "RESET"
                                        });
                                        return
                                    }
                                    let t = "",
                                        [, n] = e.split("#");
                                    null != n && (t = e + f.PLACEHOLDER_TAG.slice(null != n ? n.length + 1 : 0)), l({
                                        type: "HINT",
                                        text: t
                                    })
                                },
                                maxLength: 37,
                                autoFocus: !0,
                                autoComplete: "off",
                                name: "add-friend",
                                "data-lpignore": !0,
                                placeholder: C.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                                "aria-label": C.default.Messages.POMELO_ADD_FRIEND_DESCRIPTION,
                                "aria-invalid": null != g || void 0,
                                "aria-describedby": null != g ? A : N
                            }), null != c && (0, a.jsx)("div", {
                                className: h.addFriendHint,
                                "aria-hidden": !0,
                                children: c
                            }), (0, a.jsx)(u.Button, {
                                size: u.Button.Sizes.SMALL,
                                disabled: !r,
                                type: "submit",
                                children: C.default.Messages.ADD_FRIEND_BUTTON
                            })]
                        })
                    }), null != g && (0, a.jsx)(u.FormText, {
                        role: "alert",
                        id: A,
                        type: u.FormText.Types.ERROR,
                        className: I.marginTop8,
                        children: g
                    }), null != p && (0, a.jsx)(u.FormText, {
                        role: "status",
                        type: u.FormText.Types.SUCCESS,
                        className: I.marginTop8,
                        children: p
                    })]
                })
            }
        },
        252917: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ek
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("803182"),
                o = n("90915"),
                u = n("759843"),
                d = n("868233"),
                c = n("394846"),
                E = n("446674"),
                f = n("77078"),
                _ = n("241845"),
                C = n("939443"),
                h = n("597590"),
                I = n("987697"),
                T = n("464682"),
                S = n("73749"),
                N = n("191145"),
                A = n("533466"),
                m = n("837844"),
                p = n("171984"),
                g = n("551254"),
                R = n("893399"),
                O = n("353681"),
                L = n("256430"),
                v = n("390236"),
                M = n("546102"),
                P = n("380710"),
                D = n("889145"),
                y = n("993057"),
                x = n("118971"),
                U = n("696336"),
                b = n("273457"),
                G = n("598156"),
                j = n("397039"),
                w = n("628805"),
                k = n("755729"),
                F = n("934743"),
                B = n("566396"),
                H = n("618489"),
                V = n("209688"),
                Y = n("747223"),
                W = n("921228"),
                K = n("516245"),
                z = n("393027"),
                q = n("1501"),
                Q = n("161778"),
                Z = n("42203"),
                X = n("26989"),
                J = n("305961"),
                $ = n("18494"),
                ee = n("600133"),
                et = n("449008"),
                en = n("439932"),
                ea = n("315977"),
                es = n("911120"),
                el = n("455555"),
                ei = n("229644"),
                er = n("901582"),
                eo = n("758997"),
                eu = n("474557"),
                ed = n("49111"),
                ec = n("724210"),
                eE = n("653138"),
                ef = n("782340"),
                e_ = n("783686");
            let eC = () => (0, a.jsx)("div", {
                    className: e_.loader,
                    children: (0, a.jsx)(f.Spinner, {})
                }),
                eh = (0, d.makeLazy)({
                    createPromise: () => n.el("144588").then(n.bind(n, "144588")),
                    webpackId: "144588",
                    name: "GuildShopPage",
                    renderLoader: eC
                }),
                eI = (0, d.makeLazy)({
                    createPromise: () => n.el("597235").then(n.bind(n, "597235")),
                    webpackId: "597235",
                    name: "GuildMemberApplicationReview",
                    renderLoader: eC
                }),
                eT = (0, d.makeLazy)({
                    createPromise: () => n.el("144295").then(n.bind(n, "144295")),
                    webpackId: "144295",
                    name: "GuildHomePage",
                    renderLoader: eC
                }),
                eS = (0, d.makeLazy)({
                    createPromise: () => n.el("112265").then(n.bind(n, "112265")),
                    webpackId: "112265",
                    name: "MemberSafetyPage",
                    renderLoader: eC
                }),
                eN = (0, d.makeLazy)({
                    createPromise: () => n.el("534702").then(n.bind(n, "534702")),
                    webpackId: "534702",
                    name: "ChannelsAndRolesPage",
                    renderLoader: eC
                }),
                eA = (0, d.makeLazy)({
                    createPromise: () => n.el("413896").then(n.bind(n, "413896")),
                    webpackId: "413896",
                    name: "GuildOnboardingPage",
                    renderLoader: eC
                }),
                em = e => {
                    let {
                        match: t
                    } = e, n = (0, E.useStateFromStores)([Z.default, $.default], () => {
                        let e = $.default.getChannelId();
                        return Z.default.getChannel(e)
                    }), {
                        guildId: s,
                        channelId: l,
                        messageId: i
                    } = t.params, r = (0, E.useStateFromStores)([J.default], () => J.default.getGuild(s)), o = (0, E.useStateFromStores)([X.default], () => null == s ? null : X.default.getSelfMember(s)), u = (0, g.isEligibleForSubscriptionsInGuildShop)(s, "channel_renderer");
                    if (null != s && null != l && (0, ec.isStaticChannelRoute)(l)) switch (l) {
                        case ec.StaticChannelRoute.ROLE_SUBSCRIPTIONS:
                            return u ? (0, a.jsx)(eh, {
                                guildId: s,
                                initialTab: R.GuildShopTab.GUILD_ROLE_SUBSCRIPTIONS
                            }) : (0, a.jsx)(y.default, {
                                guildId: s
                            });
                        case ec.StaticChannelRoute.GUILD_SHOP:
                            return (0, a.jsx)(eh, {
                                guildId: s,
                                productId: i
                            });
                        case ec.StaticChannelRoute.MEMBER_APPLICATIONS:
                            return (0, a.jsx)(eI, {
                                guildId: s
                            });
                        case ec.StaticChannelRoute.GUILD_HOME:
                            return (0, a.jsx)(eT, {
                                guildId: s
                            });
                        case ec.StaticChannelRoute.CHANNEL_BROWSER:
                            return (0, a.jsx)(eN, {
                                guildId: s,
                                selectedSection: eE.GuildOnboardingTab.BROWSE
                            });
                        case ec.StaticChannelRoute.GUILD_ONBOARDING:
                            return (0, a.jsx)(eA, {
                                guildId: s
                            });
                        case ec.StaticChannelRoute.CUSTOMIZE_COMMUNITY:
                            return (0, a.jsx)(eN, {
                                guildId: s,
                                selectedSection: eE.GuildOnboardingTab.CUSTOMIZE
                            });
                        case ec.StaticChannelRoute.MEMBER_SAFETY:
                            return (0, a.jsx)(eS, {
                                guildId: s
                            });
                        default:
                            (0, et.assertNever)(l)
                    }
                    if ((0, P.isBlockedByOnboarding)(r, o)) return (0, a.jsx)(D.default, {
                        guildId: s,
                        channelId: l
                    });
                    if ((null == n ? void 0 : n.type) === ed.ChannelTypes.GUILD_STORE) {
                        let e = t.params.messageId;
                        return (0, a.jsx)(ea.default, {
                            channel: n,
                            inputSkuId: e
                        }, n.id)
                    }
                    return (0, a.jsx)(A.default, {})
                },
                ep = s.memo(function() {
                    let {
                        guildId: e,
                        channelId: t
                    } = (0, z.default)(), n = (0, E.useStateFromStores)([$.default], () => null != t ? t : $.default.getChannelId(e));
                    return function() {
                        return window.location.pathname.startsWith(ed.Routes.GUILD_DISCOVERY)
                    }() ? (0, a.jsx)(L.default, {}) : null != e ? (0, a.jsx)(x.default, {
                        selectedChannelId: n,
                        guildId: e
                    }, e) : (0, a.jsx)(ei.default, {})
                });

            function eg(e) {
                let t = (0, z.default)(e => {
                    let {
                        guildId: t
                    } = e;
                    return t
                });
                return (0, a.jsx)(F.default, {
                    ...e,
                    guildId: t
                })
            }
            let eR = e => (0, a.jsx)(em, {
                    ...e
                }),
                eO = e => {
                    let t = null != e && e.length > 0 && e.startsWith("?"),
                        n = t ? e.split("?")[1] : null;
                    return (0, a.jsx)(O.default, {
                        searchRoute: n
                    })
                },
                eL = e => {
                    let {
                        match: t
                    } = e;
                    return null != t.params.guildId ? (0, a.jsx)(M.default, {
                        guildId: t.params.guildId,
                        inviteCode: t.params.inviteCode
                    }) : null
                },
                ev = e => {
                    let {
                        match: t
                    } = e;
                    return null != t.params.guildId ? (0, a.jsx)(b.default, {
                        guildId: t.params.guildId,
                        inviteCode: t.params.inviteCode
                    }) : null
                },
                eM = () => (0, a.jsx)(eo.default, {}),
                eP = () => (0, a.jsx)(eu.default, {}),
                eD = function() {
                    let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    return function(t) {
                        return (0, a.jsx)(p.default, {
                            isFullScreen: e,
                            ...t
                        })
                    }
                },
                ey = e => (0, a.jsx)(T.default, {
                    ...e
                }),
                ex = () => (0, a.jsx)(I.default, {}),
                eU = () => (0, a.jsx)(Y.default, {}),
                eb = () => (0, a.jsx)(G.default, {}),
                eG = () => (0, a.jsx)(V.default, {}),
                ej = e => {
                    let {
                        match: t
                    } = e, n = t.params.feature;
                    switch (n) {
                        case "addFriends":
                            return (0, a.jsx)(Y.default, {
                                initialSection: ed.FriendsSections.ADD_FRIEND
                            });
                        case "pendingFriends":
                            return (0, a.jsx)(Y.default, {
                                initialSection: ed.FriendsSections.PENDING
                            });
                        case "sessionManagement":
                            return (0, a.jsx)(o.Redirect, {
                                to: ed.Routes.SETTINGS("sessions")
                            });
                        case "connections":
                            return (0, a.jsx)(o.Redirect, {
                                to: {
                                    pathname: ed.Routes.SETTINGS("connections"),
                                    search: e.location.search
                                }
                            });
                        case "family-center":
                            return (0, a.jsx)(o.Redirect, {
                                to: ed.Routes.FAMILY_CENTER
                            });
                        case "account-standing":
                            return (0, a.jsx)(o.Redirect, {
                                to: ed.Routes.SETTINGS("privacy-and-safety", "account-standing")
                            });
                        default:
                            return (0, a.jsx)(o.Redirect, {
                                to: ed.Routes.ME
                            })
                    }
                };

            function ew(e) {
                let {
                    hasNotice: t,
                    sidebarTheme: n,
                    hideSidebar: s
                } = e;
                (0, C.useNullExperiment)(!0);
                let l = "app view user trigger debugging";
                _.UserTriggerAAExperiment.useExperiment({
                    location: l
                }, {
                    autoTrackExposure: !1
                }), _.UserTriggerAAExperiment.trackExposure({
                    location: l
                });
                let r = (0, E.useStateFromStores)([N.default], () => N.default.isFullscreenInContext()),
                    o = (0, W.useIsPremiumTutorialEnabled)("ChannelSidebar");
                return s ? null : (0, a.jsxs)("div", {
                    className: i(e_.sidebar, (0, en.getThemeClass)(n), {
                        [e_.hasNotice]: t,
                        [e_.fullWidth]: c.isMobile,
                        [e_.hidden]: r
                    }),
                    children: [(0, a.jsx)(ep, {}), o && (0, a.jsx)(K.default, {}), (0, a.jsxs)("section", {
                        className: e_.panels,
                        "aria-label": ef.default.Messages.ACCOUNT_A11Y_LABEL,
                        children: [(0, a.jsx)(B.default, {}), (0, a.jsx)(er.default, {
                            section: ed.AnalyticsSections.ACTIVITY_PANEL,
                            children: (0, a.jsx)(eg, {
                                className: e_.activityPanel
                            })
                        }), (0, a.jsx)(er.default, {
                            section: ed.AnalyticsSections.RTC_CONNECTION_PANEL,
                            children: (0, a.jsx)(H.default, {})
                        }), (0, a.jsx)(er.default, {
                            section: ed.AnalyticsSections.ACCOUNT_PANEL,
                            children: (0, a.jsx)(k.default, {})
                        })]
                    }), (0, a.jsx)(es.default, {})]
                })
            }

            function ek() {
                var e;
                let t = (0, E.useStateFromStores)([ee.default], () => ee.default.hasNotice()),
                    n = (0, E.useStateFromStores)([Q.default], () => Q.default.darkSidebar ? ed.ThemeTypes.DARK : void 0),
                    l = function() {
                        let [e, t] = s.useState(() => window.location.pathname.startsWith(ed.Routes.GUILD_MEMBER_VERIFICATION("")));
                        return s.useEffect(() => q.default.addRouteChangeListener(e => {
                            t(e.pathname.startsWith(ed.Routes.GUILD_MEMBER_VERIFICATION("")))
                        }), []), e
                    }(),
                    i = function() {
                        let [e, t] = s.useState(() => window.location.pathname.startsWith(ed.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")));
                        return s.useEffect(() => q.default.addRouteChangeListener(e => {
                            t(e.pathname.startsWith(ed.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB("")))
                        }), []), e
                    }(),
                    d = function() {
                        var e;
                        let t = (0, o.useLocation)();
                        return (null === (e = (0, r.matchPath)(t.pathname, ed.Routes.GUILD_BOOSTING_MARKETING(":guildId"))) || void 0 === e ? void 0 : e.isExact) === !0
                    }(),
                    f = function() {
                        var e;
                        let t = (0, o.useLocation)();
                        return (null === (e = (0, r.matchPath)(t.pathname, ed.Routes.COLLECTIBLES_SHOP_FULLSCREEN)) || void 0 === e ? void 0 : e.isExact) === !0
                    }(),
                    _ = (0, E.useStateFromStores)([w.default], () => w.default.getIsOpen()),
                    C = (0, o.useRouteMatch)([ed.Routes.CHANNEL(ed.ME, ":channelId"), ed.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?")]),
                    I = (null == C ? void 0 : null === (e = C.params) || void 0 === e ? void 0 : e.channelId) === ec.StaticChannelRoute.GUILD_ONBOARDING,
                    T = s.useCallback(() => j.default.openSidebar(), []);
                return (0, a.jsx)(a.Fragment, {
                    children: (0, a.jsxs)("div", {
                        className: e_.container,
                        children: [_ && !f && (0, a.jsx)(U.default, {
                            className: e_.guilds,
                            themeOverride: n
                        }), (0, a.jsx)(v.default.Provider, {
                            value: (null == C ? void 0 : C.params.guildId) === ed.ME ? void 0 : null == C ? void 0 : C.params.guildId,
                            children: (0, a.jsxs)("div", {
                                className: e_.base,
                                children: [c.isMobile ? null : (0, a.jsx)(el.default, {}), (0, a.jsxs)("div", {
                                    className: e_.content,
                                    children: [(0, a.jsx)(m.default, {}), (0, a.jsx)(ew, {
                                        hasNotice: t,
                                        sidebarTheme: n,
                                        hideSidebar: l || i || d || f || I || !_
                                    }), (0, a.jsx)(h.default.Provider, {
                                        value: T,
                                        children: (0, a.jsxs)(o.Switch, {
                                            children: [(0, a.jsx)(S.default, {
                                                path: ed.Routes.ACTIVITY,
                                                disableTrack: !0,
                                                children: (0, a.jsx)(o.Redirect, {
                                                    to: ed.Routes.ME
                                                })
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.ACTIVITIES_HAPPENING_NOW,
                                                render: ex,
                                                impressionName: u.ImpressionNames.ACTIVITIES
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.ACTIVITY_DETAILS(":applicationId"),
                                                render: ey,
                                                impressionName: u.ImpressionNames.ACTIVITY_DETAILS,
                                                impressionProperties: e => {
                                                    let {
                                                        computedMatch: t
                                                    } = e;
                                                    return {
                                                        application_id: t.params.applicationId
                                                    }
                                                }
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.ACTIVITIES,
                                                render: ex,
                                                impressionName: u.ImpressionNames.ACTIVITIES
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.APPLICATION_LIBRARY,
                                                render: eM,
                                                impressionName: u.ImpressionNames.APPLICATION_LIBRARY,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.APPLICATION_STORE,
                                                render: eP,
                                                impressionName: u.ImpressionNames.APPLICATION_STORE,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.COLLECTIBLES_SHOP_FULLSCREEN,
                                                render: eD(!0),
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.COLLECTIBLES_SHOP,
                                                render: eD(!1),
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(":skuId"),
                                                render: eD(!1),
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.MESSAGE_REQUESTS,
                                                render: eb,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.FAMILY_CENTER,
                                                render: eG,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.ME,
                                                exact: !0,
                                                render: eU,
                                                impressionName: u.ImpressionNames.FRIENDS,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: [ed.Routes.CHANNEL_THREAD_VIEW(":guildId", ":channelId", ":threadId", ":messageId?"), ed.Routes.CHANNEL(ed.ME, ":channelId"), ed.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?")],
                                                render: eR,
                                                impressionName: u.ImpressionNames.GUILD_CHANNEL,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.GUILD_DISCOVERY,
                                                render: e => {
                                                    let {
                                                        location: t
                                                    } = e;
                                                    return eO(t.search)
                                                },
                                                impressionName: u.ImpressionNames.GUILD_DISCOVERY,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.GUILD_MEMBER_VERIFICATION(":guildId", ":inviteCode?"),
                                                render: eL,
                                                impressionName: u.ImpressionNames.GUILD_MEMBER_VERIFICATION,
                                                disableTrack: !0
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(":guildId", ":inviteCode?"),
                                                render: ev,
                                                impressionName: u.ImpressionNames.HUB_EMAIL_SIGNUP,
                                                impressionProperties: e => {
                                                    let {
                                                        computedMatch: t
                                                    } = e;
                                                    return {
                                                        has_invite: void 0 !== t.params.inviteCode
                                                    }
                                                }
                                            }), (0, a.jsx)(S.default, {
                                                path: ed.Routes.FEATURE(":feature"),
                                                exact: !0,
                                                render: ej,
                                                disableTrack: !0
                                            })]
                                        })
                                    })]
                                })]
                            })
                        })]
                    })
                })
            }
        },
        315977: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("90915"),
                i = n("446674"),
                r = n("450911"),
                o = n("737960"),
                u = n("970366"),
                d = n("2105"),
                c = n("901582"),
                E = n("294135"),
                f = n("404247"),
                _ = n("49111"),
                C = n("128403");
            class h extends s.Component {
                componentDidMount() {
                    this.fetchStoreListing(), (0, u.trackAppUIViewed)("channel_store_listing")
                }
                render() {
                    return null != this.props.skuId ? (0, a.jsx)(c.default, {
                        page: _.AnalyticsPages.CHANNEL_STORE_LISTING,
                        root: !0,
                        children: (0, a.jsx)("div", {
                            className: C.applicationStore,
                            children: (0, a.jsx)(l.Route, {
                                path: "*",
                                render: this.renderApplicationListing
                            })
                        })
                    }) : null
                }
                constructor(...e) {
                    super(...e), this.fetchStoreListing = e => {
                        let {
                            channel: t,
                            inputSkuId: n
                        } = this.props;
                        return null != e ? r.default.fetchChannelStoreListing(t.id, e) : null != n ? r.default.fetchChannelStoreListing(t.id, n) : r.default.fetchChannelStoreListing(t.id)
                    }, this.renderApplicationListing = e => {
                        let {
                            location: t
                        } = e, {
                            channel: n,
                            skuId: s,
                            width: l
                        } = this.props;
                        return (0, a.jsx)(E.default, {
                            channel: n,
                            inputSkuId: s,
                            fetchStoreListing: this.fetchStoreListing,
                            location: t,
                            pageSize: (0, f.getPageSize)(l)
                        })
                    }
                }
            }
            var I = (0, o.default)(i.default.connectStores([d.default], e => {
                let {
                    channel: t,
                    inputSkuId: n
                } = e;
                return {
                    skuId: null != n ? n : d.default.getSkuIdForChannel(t.id)
                }
            })(h))
        },
        911120: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("95410"),
                u = n("77078"),
                d = n("489740"),
                c = n("355025"),
                E = n("945330"),
                f = n("50647"),
                _ = n("782340"),
                C = n("805244");
            let h = "isHideDevBanner";
            var I = () => {
                var e;
                let [t, n] = (0, s.useState)((null === (e = o.default.get(h, "false")) || void 0 === e ? void 0 : e.toString()) === "true"), l = (0, r.useStateFromStores)([d.default], () => {
                    var e;
                    return (0, c.probablyHasBuildOverride)() ? null === (e = d.default.getCurrentBuildOverride().overrides) || void 0 === e ? void 0 : e.discord_web : null
                });
                if (t) return null;
                let I = () => {
                        o.default.set(h, !0), n(!0)
                    },
                    T = () => (0, a.jsx)(u.Clickable, {
                        onClick: I,
                        className: C.closeButton,
                        "aria-label": _.default.Messages.DISMISS,
                        children: (0, a.jsx)(E.default, {
                            className: C.closeIcon
                        })
                    });
                if (null != l) return (0, a.jsxs)("div", {
                    className: i(C.devBanner, C.buildOverride),
                    children: [(0, a.jsx)(f.default, {
                        className: C.icon
                    }), _.default.Messages.BUILD_OVERRIDE, (0, a.jsx)(T, {})]
                });
                let S = window.GLOBAL_ENV.RELEASE_CHANNEL;
                return "staging" === S ? (0, a.jsxs)("div", {
                    className: i(C.devBanner, C.staging),
                    children: [(0, a.jsx)(f.default, {
                        className: C.icon
                    }), _.default.Messages.DEV_NOTICE_STAGING.format({
                        buildNumber: "249561"
                    }), (0, a.jsx)(T, {})]
                }) : null
            }
        },
        32296: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NotchBackground: function() {
                    return _.NotchBackground
                },
                default: function() {
                    return N
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("773364"),
                u = n("862337"),
                d = n("77078"),
                c = n("629109"),
                E = n("42887"),
                f = n("945956"),
                _ = n("230962"),
                C = n("599110"),
                h = n("49111"),
                I = n("782340"),
                T = n("626009");
            class S extends s.PureComponent {
                componentDidMount() {
                    this._initTimeout.start(1e3, this.setupVoiceActivity)
                }
                componentWillUnmount() {
                    this._initTimeout.stop(), this._silenceTimeout.stop(), this._micTestStop(), E.default.getMediaEngine().removeListener(o.MediaEngineEvent.VoiceActivity, this.handleVoiceActivity)
                }
                _micTestStart() {
                    let {
                        isVoiceConnected: e,
                        inputDeviceName: t,
                        inputVolume: n,
                        outputDeviceName: a,
                        outputVolume: s,
                        inputMode: l,
                        vadAutoThreshold: i,
                        vadThreshold: r,
                        location: o,
                        isDeafened: u
                    } = this.props, d = !1;
                    e && !u && (c.default.toggleSelfDeaf(), d = !0), c.default.setLoopback(!0), this._micTestStartTime = Date.now(), this.setState({
                        isMicTesting: !0,
                        isDetectingInput: !0,
                        didDeafenUser: d
                    }), C.default.track(h.AnalyticEvents.MIC_TESTING_STARTED, {
                        input_device_name: t,
                        input_device_volume: n,
                        output_device_name: a,
                        output_device_volume: s,
                        input_mode: l,
                        input_sensitivity_is_automatic: i,
                        input_sensitivity_threshold: Math.round(r),
                        location: o
                    })
                }
                _micTestStop() {
                    let {
                        didDeafenUser: e,
                        isMicTesting: t
                    } = this.state, {
                        isVoiceConnected: n,
                        isDeafened: a
                    } = this.props;
                    if (!!t) n && a && e && c.default.toggleSelfDeaf(), c.default.setLoopback(!1), this.setState({
                        isMicTesting: !1,
                        didDeafenUser: !1
                    }), null != this._micTestStartTime && C.default.track(h.AnalyticEvents.MIC_TESTING_STOPPED, {
                        testing_duration: Math.round((Date.now() - this._micTestStartTime) / 1e3)
                    })
                }
                renderCaption() {
                    let {
                        captionVoice: e,
                        captionNoVoice: t
                    } = this.props, {
                        isMicTesting: n,
                        isDetectingInput: s
                    } = this.state;
                    return (0, a.jsx)(d.FormText, {
                        className: T.micTestCaption,
                        type: d.FormText.Types.DESCRIPTION,
                        children: n ? s ? e : t : null
                    })
                }
                render() {
                    let {
                        isVoiceConnected: e,
                        title: t,
                        description: n,
                        notchBackground: s,
                        buttonTest: l,
                        buttonStop: i,
                        buttonClassName: r,
                        buttonColor: o,
                        isDeafened: u
                    } = this.props, {
                        isMicTesting: c,
                        volume: E
                    } = this.state, f = e && !c ? I.default.Messages.MIC_TEST_VOICE_CHANNEL_WARNING : null;
                    return c && e && !u && this._micTestStop(), (0, a.jsxs)("div", {
                        className: T.container,
                        children: [(0, a.jsx)(d.FormTitle, {
                            tag: d.FormTitleTags.H5,
                            className: T.title,
                            children: t
                        }), null != n && (0, a.jsx)(d.FormText, {
                            type: d.FormText.Types.DESCRIPTION,
                            className: T.description,
                            children: n
                        }), (0, a.jsxs)("div", {
                            className: T.micTest,
                            children: [(0, a.jsx)(d.Tooltip, {
                                text: f,
                                children: e => {
                                    let {
                                        onMouseEnter: t,
                                        onMouseLeave: n
                                    } = e;
                                    return (0, a.jsx)(d.Button, {
                                        grow: !1,
                                        onClick: this.handleToggleMicTest,
                                        onMouseEnter: t,
                                        onMouseLeave: n,
                                        size: d.Button.Sizes.SMALL,
                                        className: r,
                                        color: o,
                                        children: c ? i : l
                                    })
                                }
                            }), (0, a.jsx)(_.default, {
                                progress: c ? E + 100 : 0,
                                notchBackground: s
                            }), this.renderCaption()]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this._initTimeout = new u.Timeout, this._silenceTimeout = new u.Timeout, this._messageTimeout = new u.Timeout, this.state = {
                        volume: -100,
                        isMicTesting: !1,
                        isDetectingInput: !0,
                        didDeafenUser: !1
                    }, this.setupVoiceActivity = () => {
                        E.default.getMediaEngine().on(o.MediaEngineEvent.VoiceActivity, this.handleVoiceActivity)
                    }, this.handleVoiceActivity = e => {
                        let {
                            isMicTesting: t
                        } = this.state;
                        if (t && e <= -100) {
                            !this._silenceTimeout.isStarted() && this._silenceTimeout.start(2e3, () => {
                                this.setState({
                                    isDetectingInput: !1
                                })
                            }), this.setState({
                                volume: -100
                            });
                            return
                        }
                        this._silenceTimeout.stop(), this.setState({
                            volume: e,
                            isDetectingInput: !0
                        })
                    }, this.handleToggleMicTest = () => {
                        this.state.isMicTesting ? this._micTestStop() : this._micTestStart()
                    }
                }
            }
            var N = r.default.connectStores([f.default, E.default], () => {
                let e = E.default.getInputDeviceId(),
                    t = E.default.getInputDevices(),
                    n = i.find(t, t => {
                        let {
                            id: n
                        } = t;
                        return n === e
                    }),
                    a = E.default.getOutputDeviceId(),
                    s = E.default.getOutputDevices(),
                    l = i.find(s, e => {
                        let {
                            id: t
                        } = e;
                        return t === a
                    }),
                    r = E.default.getModeOptions();
                return {
                    isVoiceConnected: f.default.isConnected(),
                    inputVolume: E.default.getInputVolume(),
                    outputVolume: E.default.getOutputVolume(),
                    inputMode: E.default.getMode(),
                    vadThreshold: r.threshold,
                    isDeafened: E.default.isSelfDeaf(),
                    vadAutoThreshold: r.autoThreshold,
                    inputDeviceName: null != n ? n.name : "",
                    outputDeviceName: null != l ? l.name : ""
                }
            })(S)
        },
        455555: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eA
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("866227"),
                i = n.n(l),
                r = n("90915"),
                o = n("446674"),
                u = n("77078"),
                d = n("404118"),
                c = n("437822"),
                E = n("778323"),
                f = n("54239"),
                _ = n("215082"),
                C = n("950926"),
                h = n("987317"),
                I = n("167359"),
                T = n("55620"),
                S = n("52289"),
                N = n("518888"),
                A = n("70614"),
                m = n("79112"),
                p = n("376556"),
                g = n("812204"),
                R = n("685665"),
                O = n("299285"),
                L = n("774146"),
                v = n("10641"),
                M = n("935246"),
                P = n("211470"),
                D = n("789563"),
                y = n("381065"),
                x = n("702873"),
                U = n("840968"),
                b = n("233322"),
                G = n("157186"),
                j = n("747554"),
                w = n("740316"),
                k = n("592407"),
                F = n("977169"),
                B = n("363691"),
                H = n("649844"),
                V = n("983424"),
                Y = n("538620"),
                W = n("425538"),
                K = n("703537"),
                z = n("55282"),
                q = n("42203"),
                Q = n("305961"),
                Z = n("42887"),
                X = n("945956"),
                J = n("162771"),
                $ = n("697218"),
                ee = n("552712"),
                et = n("167726"),
                en = n("600133"),
                ea = n("145131"),
                es = n("216422"),
                el = n("489622"),
                ei = n("599110"),
                er = n("701909"),
                eo = n("308757"),
                eu = n("389696"),
                ed = n("650044"),
                ec = n("49111"),
                eE = n("646718"),
                ef = n("586269"),
                e_ = n("353927"),
                eC = n("782340"),
                eh = n("185401");
            let eI = () => (0, a.jsxs)(el.default, {
                    color: el.NoticeColors.DANGER,
                    children: [(0, a.jsx)(el.NoticeCloseButton, {
                        onClick: () => {
                            eS(), (0, ed.open)()
                        }
                    }), eC.default.Messages.NOTICE_NO_INPUT_DETECTED, (0, a.jsx)(el.NoticeButtonAnchor, {
                        href: er.default.getArticleURL(ec.HelpdeskArticles.NO_INPUT_DETECTED),
                        children: eC.default.Messages.NOTICE_NO_INPUT_DETECTED_HELP_LINK_TEXT
                    })]
                }),
                eT = () => (0, a.jsxs)(el.default, {
                    color: el.NoticeColors.DANGER,
                    children: [(0, a.jsx)(el.NoticeCloseButton, {
                        onClick: () => {
                            eS(), (0, ed.open)()
                        }
                    }), eC.default.Messages.NOTICE_NO_INPUT_DETECTED_SETTINGS, (0, a.jsx)(el.NoticeButton, {
                        onClick: () => {
                            (0, f.pushLayer)(ec.Layers.USER_SETTINGS), m.default.setSection(ec.UserSettingsSections.VOICE)
                        },
                        children: eC.default.Messages.NOTICE_NO_INPUT_DETECTED_SETTINGS_LINK_TEXT
                    })]
                });

            function eS(e) {
                _.default.dismiss(null != e ? {
                    untilAtLeast: i(e)
                } : void 0)
            }
            let eN = s.memo(function() {
                var e, t, l;
                let _ = (0, o.useStateFromStores)([$.default], () => $.default.getCurrentUser()),
                    g = (0, o.useStateFromStores)([J.default], () => J.default.getGuildId()),
                    ed = (0, o.useStateFromStores)([en.default], () => en.default.getNotice()),
                    eN = (0, o.useStateFromStores)([Q.default], () => Q.default.getGuild(g)),
                    {
                        analyticsLocations: eA
                    } = (0, R.default)(),
                    em = null == ed ? void 0 : ed.type,
                    ep = (0, G.useShowMemberVerificationGate)(g);
                s.useEffect(() => {
                    null != em && ! function(e, t) {
                        let n = {
                            notice_type: e
                        };
                        null != t && (n.guild_id = t), ei.default.track(ec.AnalyticEvents.APP_NOTICE_VIEWED, n)
                    }(em, g)
                }, [em, g]), s.useEffect(() => {
                    if (null != ed && ed.type === ec.NoticeTypes.SURVEY && null != ed.metadata) {
                        let {
                            metadata: e
                        } = ed, t = D.default.getUserExperimentDescriptor(e.id);
                        null != t && (0, P.trackExposureToExperiment)(e.id, t)
                    }
                }, [ed]);
                let eg = function(e) {
                    let {
                        enabled: t
                    } = (0, V.default)(!0, e !== ec.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING);
                    return t || null == e ? null : en.typeToDismissibleContent[e]
                }(em);
                if (null == ed) return null;
                if (null != eg) return (0, a.jsx)(M.DismissibleContentNotices, {
                    dismissibleContent: eg,
                    noticeType: ed.type
                });
                let eR = null === (e = ed.metadata) || void 0 === e ? void 0 : e.premiumType;
                switch (ed.type) {
                    case ec.NoticeTypes.LURKING_GUILD:
                        return (0, a.jsx)(B.default, {});
                    case ec.NoticeTypes.PENDING_MEMBER:
                        return (0, a.jsx)(j.default, {});
                    case ec.NoticeTypes.INVITED_TO_SPEAK:
                        return (0, a.jsx)(z.default, {});
                    case ec.NoticeTypes.GUILD_RAID_NOTIFICATION:
                        let {
                            dismissUntil: eO
                        } = ed.metadata;
                        return (0, a.jsx)(y.default, {
                            onDismiss: () => eS(eO)
                        });
                    case ec.NoticeTypes.WIN32_DEPRECATED_MESSAGE:
                        let {
                            dismissUntil: eL
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(eL),
                                noticeType: ec.NoticeTypes.WIN32_DEPRECATED_MESSAGE
                            }), eC.default.Messages.WINDOWS_32_BIT_DEPRECATED_WARNING.format({
                                helpCenterLink: er.default.getArticleURL(ec.HelpdeskArticles.WIN32_DEPRECATE)
                            })]
                        });
                    case ec.NoticeTypes.GENERIC:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.GENERIC
                            }), ed.message, null != ed.buttonText ? (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: ed.callback,
                                noticeType: ec.NoticeTypes.GENERIC,
                                children: ed.buttonText
                            }) : null]
                        });
                    case ec.NoticeTypes.LAUNCH_GAME_FAILURE:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.LAUNCH_GAME_FAILURE
                            }), ed.message, null != ed.buttonText ? (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: ed.callback,
                                noticeType: ec.NoticeTypes.LAUNCH_GAME_FAILURE,
                                children: ed.buttonText
                            }) : null]
                        });
                    case ec.NoticeTypes.VOICE_DISABLED:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => {
                                    C.default.clearRemoteDisconnectVoiceChannelId(), eS()
                                },
                                noticeType: ec.NoticeTypes.VOICE_DISABLED
                            }), eC.default.Messages.NOTICE_CONNECTION_CONFLICT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: () => {
                                    let e = X.default.getRemoteDisconnectVoiceChannelId();
                                    if (null != e) {
                                        let t = q.default.getChannel(e);
                                        null != t && h.default.selectVoiceChannel(e)
                                    }
                                },
                                noticeType: ec.NoticeTypes.VOICE_DISABLED,
                                children: eC.default.Messages.RECONNECT
                            })]
                        });
                    case ec.NoticeTypes.VOICE_CONNECTED_LAST_SESSION:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => {
                                    C.default.clearLastSessionVoiceChannelId(), eS()
                                },
                                noticeType: ec.NoticeTypes.VOICE_CONNECTED_LAST_SESSION
                            }), eC.default.Messages.NOTICE_VOICE_CONNECTED_LAST_SESSION, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: () => {
                                    let e = X.default.getLastSessionVoiceChannelId();
                                    if (null != e) {
                                        let t = q.default.getChannel(e);
                                        null != t && h.default.selectVoiceChannel(e)
                                    }
                                },
                                noticeType: ec.NoticeTypes.VOICE_CONNECTED_LAST_SESSION,
                                children: eC.default.Messages.RECONNECT
                            })]
                        });
                    case ec.NoticeTypes.SPOTIFY_AUTO_PAUSED:
                        let ev = p.default.get(ec.PlatformTypes.SPOTIFY);
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.SPOTIFY_AUTO_PAUSED
                            }), (0, a.jsx)("img", {
                                alt: "",
                                className: eh.platformIcon,
                                src: ev.icon.whiteSVG
                            }), eC.default.Messages.NOTICE_SPOTIFY_AUTO_PAUSED, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: () => m.default.open(ec.UserSettingsSections.VOICE),
                                noticeType: ec.NoticeTypes.SPOTIFY_AUTO_PAUSED,
                                children: eC.default.Messages.VOICE_SETTINGS
                            }), (0, a.jsx)(u.Anchor, {
                                className: eh.textLinkSmall,
                                href: er.default.getArticleURL(ec.HelpdeskArticles.SPOTIFY_AUTO_PAUSED),
                                target: "_blank",
                                children: eC.default.Messages.NOTICE_WHATS_THIS
                            })]
                        });
                    case ec.NoticeTypes.UNCLAIMED_ACCOUNT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [eC.default.Messages.NOTICE_UNCLAIMED_ACCOUNT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.UNCLAIMED_ACCOUNT,
                                onClick: () => ep && null != g ? (0, b.openMemberVerificationModal)(g) : L.openClaimAccountModal(),
                                children: eC.default.Messages.CLAIM_ACCOUNT
                            })]
                        });
                    case ec.NoticeTypes.UNVERIFIED_ACCOUNT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [eC.default.Messages.NOTICE_UNVERIFIED_ACCOUNT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.UNVERIFIED_ACCOUNT,
                                onClick: () => {
                                    c.default.verifyResend(), d.default.show({
                                        title: eC.default.Messages.VERIFICATION_EMAIL_TITLE,
                                        body: eC.default.Messages.VERIFICATION_EMAIL_BODY.format({
                                            email: null == _ ? void 0 : _.email
                                        }),
                                        secondaryConfirmText: eC.default.Messages.CHANGE_EMAIL,
                                        onConfirmSecondary: L.openClaimAccountModal
                                    })
                                },
                                children: eC.default.Messages.RESEND
                            })]
                        });
                    case ec.NoticeTypes.SCHEDULED_MAINTENANCE:
                        if (null == ed.metadata) return null;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => I.default.ackScheduledMaintenance(),
                                noticeType: ec.NoticeTypes.SCHEDULED_MAINTENANCE
                            }), eC.default.Messages.NOTICE_SCHEDULED_MAINTENANCE.format(ed.metadata), (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: "".concat(ec.Links.STATUS, "/incidents/").concat(ed.metadata.id),
                                children: eC.default.Messages.LEARN_MORE
                            })]
                        });
                    case ec.NoticeTypes.NO_INPUT_DETECTED:
                        if (!Z.default.supports(e_.Features.LOOPBACK)) return (0, a.jsx)(eI, {});
                        return (0, a.jsx)(eT, {});
                    case ec.NoticeTypes.HARDWARE_MUTE:
                        if (null == ed.metadata) return null;
                        let {
                            vendor: eM, model: eP
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [eC.default.Messages.NOTICE_HARDWARE_MUTE.format({
                                vendorName: eM.name,
                                modelName: eP.name
                            }), (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: eP.url,
                                target: "_blank",
                                rel: "noreferrer noopener",
                                children: eC.default.Messages.SUPPORT
                            })]
                        });
                    case ec.NoticeTypes.STREAMER_MODE:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.STREAMER_MODE,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.STREAMER_MODE
                            }), eC.default.Messages.NOTICE_STREAMER_MODE_TEXT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                onClick: () => S.default.setEnabled(!1),
                                noticeType: ec.NoticeTypes.STREAMER_MODE,
                                children: eC.default.Messages.DISABLE
                            })]
                        });
                    case ec.NoticeTypes.H264_DISABLED:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => {
                                    eS()
                                }
                            }), eC.default.Messages.NOTICE_H264_DISABLED_SETTINGS, (0, a.jsx)(el.NoticeButton, {
                                onClick: () => {
                                    (0, f.pushLayer)(ec.Layers.USER_SETTINGS), m.default.setSection(ec.UserSettingsSections.VOICE)
                                },
                                children: eC.default.Messages.NOTICE_H264_DISABLED_SETTINGS_LINK_TEXT
                            })]
                        });
                    case ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK:
                        if (null == ed.metadata) return null;
                        let {
                            skuId: eD, applicationId: ey
                        } = ed.metadata, ex = ee.default.get(eD), eU = O.default.getApplication(ey);
                        if (null == ex || null == eU) return null;
                        let eb = {
                            page: ec.AnalyticsPages.IN_APP
                        };
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.PREMIUM_TIER_1,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => E.dismiss(ex.id),
                                noticeType: ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eC.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_PREMIUM_PERK_MESSAGE.format({
                                applicationName: eU.name,
                                skuName: ex.name
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK,
                                onClick: () => (0, eo.openIAPPurchaseModal)({
                                    applicationId: eU.id,
                                    skuId: ex.id,
                                    openPremiumPaymentModal: () => {
                                        (0, H.default)({
                                            initialPlanId: null,
                                            subscriptionTier: eE.PremiumSubscriptionSKUs.TIER_2,
                                            analyticsLocations: eA,
                                            analyticsObject: eb
                                        })
                                    },
                                    analyticsLocations: eA,
                                    analyticsLocation: eb,
                                    context: __OVERLAY__ ? ec.AppContext.OVERLAY : ec.AppContext.APP
                                }).then(() => E.dismiss(ex.id)),
                                children: eC.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_PREMIUM_PERK_BUTTON
                            })]
                        });
                    case ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL: {
                        if (null == ed.metadata) return null;
                        let {
                            skuId: e,
                            applicationId: t
                        } = ed.metadata, n = ee.default.get(e), s = O.default.getApplication(t);
                        if (null == n || null == s) return null;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.PREMIUM_TIER_1,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.DETECTED_OFF_PLATFORM_PREMIUM_PERK_UPSELL
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eC.default.Messages.NOTICE_DETECTED_OFF_PLATFORM_NO_PREMIUM_PERK_MESSAGE.format({
                                applicationName: s.name,
                                skuName: n.name
                            }), (0, a.jsx)(el.NoticeButton, {
                                children: (0, a.jsx)(r.Link, {
                                    onClick: () => eS(),
                                    to: {
                                        pathname: ec.Routes.APPLICATION_STORE_LISTING_SKU(n.id),
                                        state: {
                                            scrollRestoration: !1
                                        }
                                    },
                                    children: eC.default.Messages.LEARN_MORE
                                })
                            })]
                        })
                    }
                    case ec.NoticeTypes.SURVEY: {
                        let e = ed.metadata;
                        if (null == e) return null;
                        let {
                            key: t,
                            prompt: n,
                            cta: s,
                            url: l
                        } = e;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.CUSTOM,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.SURVEY,
                                onClick: () => {
                                    (0, N.surveyHide)(t, !0)
                                }
                            }), n, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.SURVEY,
                                onClick: () => {
                                    window.open(l, "_blank"), (0, N.surveyHide)(t, !1)
                                },
                                children: s
                            })]
                        })
                    }
                    case ec.NoticeTypes.SERVER_USAGE_SURVEY:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.CUSTOM,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.SERVER_USAGE_SURVEY,
                                onClick: () => {
                                    eS()
                                }
                            }), eC.default.Messages.SERVER_USAGE_SURVEY_BODY.format({
                                guildName: null !== (t = null == eN ? void 0 : eN.name) && void 0 !== t ? t : "this server"
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.SERVER_USAGE_SURVEY,
                                onClick: () => {
                                    window.open("https://discord.sjc1.qualtrics.com/jfe/form/SV_9AHPmGasQ0EvpdQ?user_id=".concat(null == _ ? void 0 : _.id, "&guild_id=").concat(null == eN ? void 0 : eN.id), "_blank"), eS()
                                },
                                additionalTrackingProps: {
                                    guild_id: null == eN ? void 0 : eN.id
                                },
                                children: eC.default.Messages.SERVER_USAGE_SURVEY_CTA
                            })]
                        });
                    case ec.NoticeTypes.CORRUPT_INSTALLATION:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [eC.default.Messages.NOTICE_CORRUPT_INSTALLATION, (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: er.default.getArticleURL(ec.HelpdeskArticles.CORRUPT_INSTALLATION),
                                target: "_blank",
                                children: eC.default.Messages.NOTICE_CORRUPT_INSTALLATION_HELP_LINK_TEXT
                            })]
                        });
                    case ec.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER
                            }), eC.default.Messages.VIDEO_UNSUPPORTED_BROWSER_BODY, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.VIDEO_UNSUPPORTED_BROWSER,
                                onClick: () => {
                                    (0, u.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("649486").then(n.bind(n, "649486"));
                                        return t => (0, a.jsx)(e, {
                                            source: "Video unsupported browser",
                                            ...t
                                        })
                                    })
                                },
                                children: eC.default.Messages.DOWNLOAD
                            })]
                        });
                    case ec.NoticeTypes.DISPATCH_ERROR:
                        if (null == ed.metadata) return null;
                        let {
                            error: eG
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.DISPATCH_ERROR
                            }), null == eG ? void 0 : eG.displayMessage, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.DISPATCH_ERROR,
                                onClick: () => (0, u.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("563912").then(n.bind(n, "563912"));
                                    return t => (0, a.jsx)(e, {
                                        ...t
                                    })
                                }),
                                children: eC.default.Messages.LEARN_MORE
                            })]
                        });
                    case ec.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS:
                        if (null == ed.metadata) return null;
                        let {
                            progress: ej, total: ew, name: ek
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DEFAULT,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.DISPATCH_INSTALL_SCRIPT_PROGRESS
                            }), (0, a.jsxs)(ea.default, {
                                justify: ea.default.Justify.CENTER,
                                children: [null != ek ? eC.default.Messages.NOTICE_DISPATCH_INSTALL_SCRIPT_PROGRESS_WITH_NAME.format({
                                    name: "".concat(ek),
                                    progress: "".concat(ej),
                                    total: "".concat(ew)
                                }) : eC.default.Messages.NOTICE_DISPATCH_INSTALL_SCRIPT_PROGRESS.format({
                                    progress: "".concat(ej),
                                    total: "".concat(ew)
                                }), (0, a.jsx)(u.Spinner, {
                                    type: u.Spinner.Type.PULSING_ELLIPSIS,
                                    className: eh.ellipsis
                                })]
                            })]
                        });
                    case ec.NoticeTypes.APPLICATION_TEST_MODE:
                        if (null == ed.metadata) return null;
                        if (null != et.default.testModeEmbeddedApplicationId) return (0, a.jsx)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: (0, a.jsxs)(ea.default, {
                                justify: ea.default.Justify.CENTER,
                                align: ea.default.Align.CENTER,
                                children: [(0, a.jsx)("div", {
                                    children: eC.default.Messages.NOTICE_EMBEDDED_APPLICATION_TEST_MODE.format({
                                        applicationName: ed.metadata.applicationName
                                    })
                                }), (0, a.jsx)(el.NoticeCloseButton, {
                                    onClick: A.reset,
                                    noticeType: ec.NoticeTypes.APPLICATION_TEST_MODE
                                })]
                            })
                        });
                        return (0, a.jsx)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: (0, a.jsxs)(ea.default, {
                                justify: ea.default.Justify.CENTER,
                                align: ea.default.Align.CENTER,
                                children: [(0, a.jsx)("div", {
                                    children: eC.default.Messages.NOTICE_APPLICATION_TEST_MODE.format({
                                        applicationName: ed.metadata.applicationName
                                    })
                                }), (0, a.jsx)(eu.default, {
                                    dropdownSize: eu.TestModeSKUButtonEnums.DropdownSizes.SMALL,
                                    className: eh.testModeSKUSelector,
                                    color: eu.TestModeSKUButtonEnums.Colors.WHITE,
                                    look: eu.TestModeSKUButtonEnums.Looks.OUTLINED,
                                    size: eu.TestModeSKUButtonEnums.Sizes.MIN,
                                    onSKUSelect: e => T.goToSKUStoreListing(e.id, {
                                        analyticsSource: {
                                            page: null,
                                            section: ec.AnalyticsSections.NOTIFICATION_BAR,
                                            object: ec.AnalyticsObjects.NAVIGATION_LINK
                                        }
                                    }),
                                    applicationId: ed.metadata.applicationId,
                                    children: eC.default.Messages.NOTICE_APPLICATION_TEST_MODE_GO_TO_LISTING
                                }), (0, a.jsx)(el.NoticeCloseButton, {
                                    onClick: A.reset,
                                    noticeType: ec.NoticeTypes.APPLICATION_TEST_MODE
                                })]
                            })
                        });
                    case ec.NoticeTypes.OUTBOUND_PROMOTION:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.PREMIUM_TIER_2,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.OUTBOUND_PROMOTION,
                                onClick: () => {
                                    Y.default.dismissOutboundPromotionNotice()
                                }
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eC.default.Messages.OUTBOUND_PROMOTION_NOTICE, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.OUTBOUND_PROMOTION,
                                onClick: () => {
                                    ei.default.track(ec.AnalyticEvents.OUTBOUND_PROMOTION_NOTICE_CLICKED), m.default.open(ec.UserSettingsSections.INVENTORY), Y.default.dismissOutboundPromotionNotice()
                                },
                                children: eC.default.Messages.TAKE_ME_THERE
                            })]
                        });
                    case ec.NoticeTypes.VIEWING_ROLES:
                        return (0, a.jsx)(F.default, {});
                    case ec.NoticeTypes.PREMIUM_UNCANCEL:
                        return (0, a.jsxs)(el.default, {
                            color: eR === eE.PremiumTypes.TIER_1 ? el.NoticeColors.PREMIUM_TIER_1 : eR === eE.PremiumTypes.TIER_0 ? el.NoticeColors.PREMIUM_TIER_0 : el.NoticeColors.PREMIUM_TIER_2,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_UNCANCEL,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), (0, a.jsx)(es.default, {
                                className: eh.premiumIcon
                            }), eR === eE.PremiumTypes.TIER_1 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_1_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eR === eE.PremiumTypes.TIER_0 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_0_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_UNCANCEL,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), (0, u.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("67323").then(n.bind(n, "67323"));
                                        return t => (0, a.jsx)(e, {
                                            ...t,
                                            daysLeft: ed.metadata.daysLeft,
                                            premiumType: eR,
                                            analyticsSource: "Nag Bar",
                                            premiumSubscription: ed.metadata.premiumSubscription
                                        })
                                    })
                                },
                                children: eR === eE.PremiumTypes.TIER_1 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_1_NOTICE_BUTTON_TEXT : eR === eE.PremiumTypes.TIER_0 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_TIER_0_NOTICE_BUTTON_TEXT : eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT:
                        let {
                            daysPastDue: eF, dismissUntil: eB
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: em,
                                onClick: () => {
                                    eS(eB)
                                }
                            }), eC.default.Messages.PREMIUM_SUBSCRIPTION_ONE_TIME_PAYMENT_PAST_DUE_SUBSCRIPTION_TEXT_NO_ACTION.format({
                                daysPastDue: eF
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_ONE_TIME_PAYMENT,
                                onClick: () => {
                                    eS(eB), m.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eC.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_RENEW_NOW_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), eC.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_INVALID_PAYMENT_NOTICE_TEXT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_INVALID_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), m.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eC.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_INVALID_PAYMENT_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), eC.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_MISSING_PAYMENT_NOTICE_TEXT, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_PAST_DUE_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), m.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eC.default.Messages.PREMIUM_SUBSCRIPTION_PAST_DUE_MISSING_PAYMENT_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_MISSING_PAYMENT:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd)
                                }
                            }), eR === eE.PremiumTypes.TIER_1 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_1_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eR === eE.PremiumTypes.TIER_0 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_0_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }) : eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_NOTICE_TEXT.format({
                                daysLeft: ed.metadata.daysLeft
                            }), (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.PREMIUM_MISSING_PAYMENT,
                                onClick: () => {
                                    var e, t;
                                    eS(null === (t = ed.metadata) || void 0 === t ? void 0 : null === (e = t.premiumSubscription) || void 0 === e ? void 0 : e.currentPeriodEnd), m.default.open(ec.UserSettingsSections.SUBSCRIPTIONS)
                                },
                                children: eR === eE.PremiumTypes.TIER_1 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_1_NOTICE_BUTTON_TEXT : eR === eE.PremiumTypes.TIER_0 ? eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_TIER_0_NOTICE_BUTTON_TEXT : eC.default.Messages.PREMIUM_SUBSCRIPTION_ENDING_MISSING_PAYMENT_NOTICE_BUTTON_TEXT
                            })]
                        });
                    case ec.NoticeTypes.BACK_TO_PREVIOUS_SCREEN:
                        return (0, a.jsx)(w.BackToPreviousScreenNotice, {
                            buttonText: null !== (l = ed.buttonText) && void 0 !== l ? l : eC.default.Messages.GO_BACK,
                            onGoBack: ed.callback,
                            onDismiss: () => eS(),
                            showCloseButton: !0
                        });
                    case ec.NoticeTypes.AUTOMOD_QUARANTINED_USER_PROFILE: {
                        let e = {
                            page: ec.AnalyticsPages.IN_APP
                        };
                        return (0, a.jsx)(U.default, {
                            guildId: g,
                            analyticsLocations: eA,
                            analyticsLocation: e
                        })
                    }
                    case ec.NoticeTypes.QUARANTINED:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.CUSTOM,
                            className: eh.quarantineNotice,
                            children: [eC.default.Messages.LIMITED_ACCESS_NAG_BAR_NOTICE, (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: ef.QUARANTINE_APPEAL_LINK,
                                target: "_blank",
                                children: eC.default.Messages.LIMITED_ACCESS_NAG_BAR_APPEAL
                            }), (0, a.jsx)(u.Anchor, {
                                href: er.default.getArticleURL(ec.HelpdeskArticles.QUARANTINE),
                                target: "_blank",
                                className: eh.quarantineLearnMoreLink,
                                children: eC.default.Messages.LEARN_MORE
                            })]
                        });
                    case ec.NoticeTypes.BLOCKED_BY_PROXY:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [eC.default.Messages.BLOCKED_BY_PROXY_NOTICE, (0, a.jsx)(el.NoticeButtonAnchor, {
                                href: "".concat(ec.Links.STATUS),
                                children: eC.default.Messages.LEARN_MORE
                            }), (0, a.jsx)(el.NoticeCloseButton, {
                                onClick: () => eS(),
                                noticeType: ec.NoticeTypes.BLOCKED_BY_PROXY
                            })]
                        });
                    case ec.NoticeTypes.DROPS_PROGRESS_INTERRUPTION:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.DANGER,
                            children: [eC.default.Messages.DROPS_PROGRESS_INTERRUPTION_WARNING.format({
                                gameTitle: ed.metadata.gameTitle
                            }), (0, a.jsx)(el.NoticeButton, {
                                onClick: ed.metadata.reloadCallback,
                                children: eC.default.Messages.ERRORS_RESTART_APP
                            })]
                        });
                    case ec.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION:
                        let {
                            dismissUntil: eH, decisionId: eV
                        } = ed.metadata;
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.WARNING,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.AUTO_MODERATION_MENTION_RAID_DETECTION,
                                onClick: () => {
                                    null != g && (0, x.clearMentionRaidDetected)(g), eS(eH)
                                }
                            }), eC.default.Messages.GUILD_AUTOMOD_MENTION_SPAM_NOTICE_MESSAGE, (0, a.jsx)(el.NoticeButton, {
                                onClick: () => {
                                    null != g && (0, x.removeMentionRaidRestrictionWithFeedback)(g, eV, () => {
                                        eS(eH), (0, x.clearMentionRaidDetected)(g)
                                    })
                                },
                                children: eC.default.Messages.GUILD_AUTOMOD_MENTION_SPAM_NOTICE_REMOVE_RESTRICTION
                            }), null != g ? (0, a.jsx)(el.NoticeButton, {
                                onClick: () => k.default.open(g, ec.GuildSettingsSections.GUILD_AUTOMOD, void 0, ec.GuildSettingsSubsections.AUTOMOD_MENTION_SPAM),
                                children: eC.default.Messages.GUILD_AUTOMOD_MENTION_SPAM_NOTICE_CONFIGURE_SETTINGS
                            }) : null]
                        });
                    case ec.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR:
                        return (0, a.jsxs)(el.default, {
                            color: el.NoticeColors.BRAND,
                            children: [(0, a.jsx)(el.NoticeCloseButton, {
                                noticeType: ec.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR,
                                onClick: () => {
                                    K.markNoticeDismissed(), eS()
                                }
                            }), eC.default.Messages.SAFETY_USER_SENTIMENT_NOTICE, (0, a.jsx)(el.PrimaryCTANoticeButton, {
                                noticeType: ec.NoticeTypes.SAFETY_USER_SENTIMENT_NAGBAR,
                                onClick: () => {
                                    (0, u.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("123592").then(n.bind(n, "123592"));
                                        return t => (0, a.jsx)(e, {
                                            ...t
                                        })
                                    }), K.markNoticeDismissed(), eS()
                                },
                                children: eC.default.Messages.SAFETY_USER_SENTIMENT_NOTICE_CTA
                            })]
                        });
                    case ec.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING:
                        let eY = i().add(5, "days").toDate();
                        return (0, a.jsx)(W.default, {
                            dismissCurrentNotice: () => {
                                (0, v.markDismissibleContentAsDismissed)(en.typeToDismissibleContent[ec.NoticeTypes.PREMIUM_TIER_2_TRIAL_ENDING]), eS(eY)
                            },
                            subscriptionTier: eE.PremiumSubscriptionSKUs.TIER_2
                        });
                    default:
                        return null
                }
            });

            function eA() {
                let {
                    AnalyticsLocationProvider: e
                } = (0, R.default)(g.default.NOTICE);
                return (0, a.jsx)(e, {
                    children: (0, a.jsx)(eN, {})
                })
            }
        },
        229644: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ex
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("16470"),
                o = n("974667"),
                u = n("394846"),
                d = n("446674"),
                c = n("151426"),
                E = n("551042"),
                f = n("77078"),
                _ = n("450911"),
                C = n("955153"),
                h = n("503525"),
                I = n("812204"),
                T = n("716241"),
                S = n("685665"),
                N = n("9759"),
                A = n("754493"),
                m = n("813531"),
                p = n("21526"),
                g = n("45062"),
                R = n("252551"),
                O = n("710342"),
                L = n("232374"),
                v = n("833514"),
                M = n("20606"),
                P = n("509802"),
                D = n("785770"),
                y = n("260488"),
                x = n("639547"),
                U = n("775032"),
                b = n("25132"),
                G = n("300962"),
                j = n("154889"),
                w = n("917247"),
                k = n("801388"),
                F = n("770469"),
                B = n("641078"),
                H = n("773367"),
                V = n("266782"),
                Y = n("367226"),
                W = n("104589"),
                K = n("393027"),
                z = n("12896"),
                q = n("161778"),
                Q = n("845579"),
                Z = n("686470"),
                X = n("27618"),
                J = n("697218"),
                $ = n("160299"),
                ee = n("521012"),
                et = n("791823"),
                en = n("552712"),
                ea = n("330338"),
                es = n("311450"),
                el = n("743826"),
                ei = n("774223"),
                er = n("880013"),
                eo = n("556081"),
                eu = n("216422"),
                ed = n("155207"),
                ec = n("564875"),
                eE = n("956089"),
                ef = n("719923"),
                e_ = n("882941"),
                eC = n("570687"),
                eh = n("631316"),
                eI = n("524110"),
                eT = n("49111"),
                eS = n("782340"),
                eN = n("592265");
            let eA = e => {
                    let {
                        selected: t,
                        ...n
                    } = e, s = (0, o.useListItem)("friends"), l = (0, d.useStateFromStores)([X.default], () => X.default.getPendingCount()), i = (0, m.default)(), {
                        canViewBroadcasts: r
                    } = N.default.useExperiment({
                        location: "friends_tab_no_track"
                    }), u = (0, A.default)();
                    return (0, a.jsxs)(eC.LinkButton, {
                        selected: t,
                        route: eT.Routes.FRIENDS,
                        icon: ec.default,
                        text: eS.default.Messages.FRIENDS,
                        onClick: () => {
                            T.default.trackWithMetadata(eT.AnalyticEvents.BROADCAST_LIST_VISITED, {
                                num_active_broadcasts: i.length,
                                friends_tab_clicked: !0,
                                is_broadcasting: u
                            })
                        },
                        ...n,
                        ...s,
                        children: [i.length > 0 && r && (0, a.jsx)(eE.TextBadge, {
                            color: M.default.REDESIGN_BUTTON_PRIMARY_BACKGROUND,
                            text: (0, a.jsxs)("div", {
                                className: eN.broadcastingBadge,
                                children: [(0, a.jsx)(ei.default, {
                                    className: eN.broadcastingIcon
                                }), (0, a.jsx)(f.Text, {
                                    variant: "text-xs/semibold",
                                    color: "always-white",
                                    children: i.length.toLocaleString()
                                })]
                            })
                        }), l > 0 ? (0, a.jsx)(eE.NumberBadge, {
                            count: l
                        }) : null]
                    })
                },
                em = e => {
                    let {
                        selected: t,
                        hideGameUpdateProgressIndicator: n,
                        ...s
                    } = e, l = (0, o.useListItem)("library");
                    return (0, a.jsx)(eC.LinkButton, {
                        selected: t,
                        route: eT.Routes.APPLICATION_LIBRARY,
                        icon: er.default,
                        text: eS.default.Messages.LIBRARY,
                        ...s,
                        ...l,
                        children: (0, a.jsx)(eI.default, {
                            className: i(eN.downloadProgressCircle, {
                                [eN.hideGameUpdateProgressIndicator]: n
                            })
                        })
                    })
                },
                ep = e => {
                    let t, n, {
                            selected: s,
                            route: l,
                            locationState: i,
                            ...r
                        } = e,
                        u = (0, d.useStateFromStores)([J.default], () => J.default.getCurrentUser()),
                        c = (0, d.useStateFromStores)([ee.default], () => ee.default.getPremiumTypeSubscription()),
                        E = (0, o.useListItem)("nitro"),
                        f = (0, w.usePremiumTrialOffer)(),
                        _ = (0, j.usePremiumDiscountOffer)(),
                        C = (0, d.useStateFromStores)([$.default], () => $.default.isLocalizedPromoEnabled),
                        h = C && null == f,
                        I = (0, B.useIsEligibleForBogoPromotion)(),
                        T = (0, Y.default)(),
                        {
                            enabled: S
                        } = (0, G.default)(),
                        N = s || null != f || null != _ || I || T || null != u && Date.now() - u.createdAt.getTime() > 2592e6 || (0, ef.hasPremiumSubscriptionToDisplay)(u, c);
                    return N && (!S || s) ? (I ? n = (0, a.jsx)(k.default, {
                        isNitroTab: !0
                    }) : T ? n = (0, a.jsx)(V.default, {}) : null != _ ? n = (0, a.jsx)(H.PremiumDiscountOfferTabBadge, {
                        userDiscount: _,
                        isTabSelected: s,
                        includesAmountOff: !1
                    }) : null != f ? n = (0, a.jsx)(H.PremiumTrialOfferTabBadge, {
                        trialOffer: f,
                        isTabSelected: s
                    }) : h && (n = (0, a.jsx)(F.LocalizedPricingBadgeIcon, {
                        entryPoint: F.BadgeEntryPoint.PrivateMessages
                    }), !s && (t = eN.localizedPricingBadge)), (0, a.jsx)(eC.LinkButton, {
                        selected: s,
                        route: l,
                        icon: eu.default,
                        text: eS.default.Messages.PREMIUM,
                        locationState: i,
                        ...r,
                        ...E,
                        className: t,
                        children: n
                    })) : null
                },
                eg = e => {
                    let {
                        selected: t,
                        route: n,
                        locationState: s,
                        ...l
                    } = e, r = (0, o.useListItem)("activities"), u = (0, d.useStateFromStores)([q.default], () => q.default.getState().theme), c = (0, h.useActivitiesWhatsNewCount)();
                    return (0, a.jsx)(eC.LinkButton, {
                        selected: t,
                        route: n,
                        icon: es.default,
                        iconClassName: i(eN.activitiesBirthdayIcon, {
                            [eN.activitiesBirthdayIconLight]: "light" === u
                        }),
                        text: eS.default.Messages.EMBEDDED_ACTIVITIES_ACTIVITY_TAB_TITLE,
                        locationState: s,
                        ...l,
                        ...r,
                        children: c > 0 ? (0, a.jsx)(eE.NumberBadge, {
                            count: c
                        }) : null
                    })
                },
                eR = e => {
                    let {
                        selected: t
                    } = e, n = (0, y.useMessageRequestsCount)(), s = (0, o.useListItem)("messageRequests"), {
                        channelId: l
                    } = (0, D.useMessageRequestSidebarState)(), i = (0, x.useShouldShowMessageRequestsRow)();
                    if (!i) return null;
                    let r = null == l ? void 0 : () => _.default.preload(eT.ME, l);
                    return (0, a.jsx)(eC.LinkButton, {
                        selected: t,
                        route: eT.Routes.MESSAGE_REQUESTS,
                        icon: eo.default,
                        text: eS.default.Messages.MESSAGE_REQUESTS,
                        onClick: r,
                        ...s,
                        children: n > 0 ? (0, a.jsx)(eE.NumberBadge, {
                            count: n
                        }) : null
                    })
                },
                eO = () => ((0, Y.useClearNewBadge)(), (0, a.jsx)(eE.PremiumBadge, {
                    text: eS.default.Messages.NEW
                })),
                eL = e => {
                    let {
                        selected: t,
                        locationState: n
                    } = e, s = (0, o.useListItem)("shop"), l = I.default.HOME_PAGE_SHOP_TAB, {
                        analyticsLocations: i
                    } = (0, S.default)(l), {
                        collectiblesShopTabNewBadge: r,
                        dismissCollectiblesShopTabNewBadge: u
                    } = (0, v.default)(), d = (0, L.default)(), E = (0, a.jsx)(eC.LinkButton, {
                        selected: t,
                        route: eT.Routes.COLLECTIBLES_SHOP,
                        icon: el.default,
                        text: eS.default.Messages.COLLECTIBLES_SHOP,
                        onClick: () => {
                            (0, p.openCollectiblesShop)({
                                openInLayer: !1,
                                analyticsSource: l,
                                analyticsLocations: i
                            }), u()
                        },
                        locationState: n,
                        ...s,
                        children: null != r && (0, a.jsx)(eO, {})
                    });
                    return d !== c.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_NITRO_ONLY_COACHMARK && d !== c.DismissibleContent.COLLECTIBLES_GIFTING_COACHMARK ? E : (0, a.jsx)(f.Popout, {
                        renderPopout: () => d === c.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_NITRO_ONLY_COACHMARK ? (0, a.jsx)(O.default, {}) : (0, a.jsx)(R.default, {}),
                        animation: f.Popout.Animation.TRANSLATE,
                        align: "top",
                        shouldShow: !0,
                        children: () => E
                    })
                },
                ev = e => {
                    let {
                        selected: t
                    } = e, n = eS.default.Messages.FAMILY_CENTER_SIDEBAR_TITLE, l = (0, o.useListItem)("family-center"), i = Q.FamilyCenterEnabled.useSetting(), r = (0, U.default)(), [u, d] = s.useState(!0);
                    return i && r ? (0, a.jsx)(eC.LinkButton, {
                        selected: t,
                        route: eT.Routes.FAMILY_CENTER,
                        icon: ed.default,
                        text: n,
                        onMouseEnter: () => {
                            d(!0)
                        },
                        onMouseLeave: () => {
                            d(!1)
                        },
                        interactiveClassName: eN.familyCenterLinkButton,
                        ...l,
                        children: (0, a.jsx)(eM, {
                            isParentHovered: u
                        })
                    }) : null
                },
                eM = e => {
                    let {
                        isParentHovered: t
                    } = e, s = (0, b.usePendingRequestCount)();
                    return t ? (0, a.jsx)(eC.CloseButton, {
                        onClick: () => {
                            (0, E.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("6674").then(n.bind(n, "6674"));
                                return t => (0, a.jsx)(e, {
                                    ...t
                                })
                            })
                        },
                        "aria-label": eS.default.Messages.CLOSE
                    }) : s > 0 ? (0, a.jsx)("div", {
                        className: eN.familyCenterPendingBadge,
                        children: (0, a.jsx)(eE.NumberBadge, {
                            count: s
                        })
                    }) : (0, a.jsx)(P.default, {
                        contentTypes: [c.DismissibleContent.FAMILY_CENTER_NEW_BADGE],
                        children: e => {
                            let {
                                visibleContent: t
                            } = e;
                            return t === c.DismissibleContent.FAMILY_CENTER_NEW_BADGE ? (0, a.jsx)(eE.TextBadge, {
                                text: eS.default.Messages.NEW,
                                color: M.default.REDESIGN_BUTTON_PRIMARY_BACKGROUND
                            }) : null
                        }
                    })
                },
                eP = () => (0, W.show)("DM_SEARCH");

            function eD(e) {
                switch (e) {
                    case eT.Routes.APPLICATION_LIBRARY:
                        return eT.AnalyticsPages.LIBRARY;
                    case eT.Routes.FRIENDS:
                        return eT.AnalyticsPages.FRIENDS_LIST;
                    case eT.Routes.COLLECTIBLES_SHOP:
                        return eT.AnalyticsPages.COLLECTIBLES_SHOP
                }
                if (e.startsWith(eT.Routes.APPLICATION_STORE)) return e === eT.Routes.APPLICATION_STORE ? eT.AnalyticsPages.STORE_DIRECTORY_HOME : e.startsWith(eT.Routes.APPLICATION_STORE) ? eT.AnalyticsPages.STORE_DIRECTORY_BROWSE : eT.AnalyticsPages.STORE_LISTING;
                return eT.AnalyticsPages.DM_CHANNEL
            }
            let ey = e => {
                let {
                    showLibrary: t,
                    hasLibraryApplication: n,
                    homeLink: s,
                    storeLink: l,
                    premiumTabSelected: o
                } = e, [d, c] = (0, K.default)(e => {
                    let {
                        channelId: t,
                        path: n
                    } = e;
                    return [t, n]
                }, r.default), {
                    canViewShopButton: E
                } = (0, g.default)({
                    location: "home"
                }), {
                    enabled: f
                } = C.BirthdayActivitiesExperiment.useExperiment({
                    location: "a718d6_2"
                }, {
                    autoTrackExposure: !0
                });
                return (0, a.jsxs)("nav", {
                    className: eN.privateChannels,
                    "aria-label": eS.default.Messages.PRIVATE_CHANNELS_A11Y_LABEL,
                    children: [(0, a.jsx)(z.default, {
                        tutorialId: "direct-messages",
                        position: "right",
                        offsetX: -52,
                        children: (0, a.jsx)("div", {
                            className: i(eN.searchBar, {
                                [eN.themedHeaderMobile]: u.isMobile
                            }),
                            children: (0, a.jsx)("button", {
                                type: "button",
                                className: i(eN.searchBarComponent, {
                                    [eN.themedSearchBarMobile]: u.isMobile
                                }),
                                onClick: eP,
                                children: eS.default.Messages.DM_SEARCH_PLACEHOLDER
                            })
                        })
                    }), (0, a.jsxs)(eh.default, {
                        ...e,
                        version: c,
                        selectedChannelId: d,
                        showDMHeader: !0,
                        children: [(0, a.jsx)(eA, {
                            selected: null != c ? c === eT.Routes.FRIENDS : s === eT.Routes.FRIENDS
                        }, "friends"), n && t ? (0, a.jsx)(em, {
                            selected: null == c ? null != s && s.startsWith(eT.Routes.APPLICATION_LIBRARY) : c.startsWith(eT.Routes.APPLICATION_LIBRARY),
                            hideGameUpdateProgressIndicator: s === eT.Routes.APPLICATION_LIBRARY
                        }, "library") : null, (0, a.jsx)(ep, {
                            selected: null == c ? o : c.startsWith(eT.Routes.APPLICATION_STORE),
                            route: null == l || location.pathname.startsWith(eT.Routes.ACTIVITIES) || location.pathname.startsWith(eT.Routes.APPLICATION_STORE) ? eT.Routes.APPLICATION_STORE : l,
                            locationState: {
                                analyticsSource: {
                                    page: eD(s),
                                    section: eT.AnalyticsSections.NAVIGATION,
                                    object: eT.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "premium"), f ? (0, a.jsx)(eg, {
                            selected: null != c && c.startsWith(eT.Routes.ACTIVITIES) || null != s && s.startsWith(eT.Routes.ACTIVITIES),
                            route: eT.Routes.ACTIVITIES,
                            locationState: {
                                analyticsSource: {
                                    page: eD(s),
                                    section: eT.AnalyticsSections.NAVIGATION,
                                    object: eT.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "activities") : null, (0, a.jsx)(eR, {
                            selected: null == c ? null != s && s.startsWith(eT.Routes.MESSAGE_REQUESTS) : c === eT.Routes.MESSAGE_REQUESTS
                        }, "message-requests"), E ? (0, a.jsx)(eL, {
                            selected: c === eT.Routes.COLLECTIBLES_SHOP || (null == s ? void 0 : s.startsWith(eT.Routes.COLLECTIBLES_SHOP)),
                            locationState: {
                                analyticsSource: {
                                    page: eD(s),
                                    section: eT.AnalyticsSections.NAVIGATION,
                                    object: eT.AnalyticsObjects.NAVIGATION_LINK
                                }
                            }
                        }, "discord-shop") : null, (0, a.jsx)(ev, {
                            selected: null != s && s.startsWith(eT.Routes.FAMILY_CENTER) || null != c && c.startsWith(eT.Routes.FAMILY_CENTER)
                        }, "family-center")]
                    })]
                })
            };

            function ex() {
                let e = (0, d.useStateFromStores)([ea.default], () => ea.default.getHomeLink()),
                    t = (0, d.useStateFromStores)([en.default], () => {
                        if (e === eT.Routes.APPLICATION_STORE) return !0;
                        let t = (0, e_.getSKUIdFromURL)(e);
                        if (null != t) {
                            var n, a;
                            return null !== (a = null === (n = en.default.get(t)) || void 0 === n ? void 0 : n.premium) && void 0 !== a && a
                        }
                        return !1
                    }, [e]),
                    n = !Q.DisableGamesTab.useSetting(),
                    {
                        theme: s
                    } = (0, d.useStateFromStoresObject)([q.default], () => ({
                        theme: q.default.theme
                    })),
                    l = (0, d.useStateFromStores)([Z.default], () => Z.default.hasLibraryApplication()),
                    i = (0, d.useStateFromStores)([et.default], () => et.default.getCurrentPath());
                return (0, a.jsx)(ey, {
                    theme: s,
                    showLibrary: n,
                    hasLibraryApplication: l,
                    storeLink: i,
                    homeLink: e,
                    premiumTabSelected: t
                })
            }
        },
        146350: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("669491"),
                u = n("77078"),
                d = n("86621"),
                c = n("775377"),
                E = n("81516"),
                f = n("891964"),
                _ = n("644091"),
                C = n("845579"),
                h = n("52028"),
                I = n("381546"),
                T = n("304121"),
                S = n("599110"),
                N = n("158998"),
                A = n("49111"),
                m = n("782340"),
                p = n("304169");

            function g(e) {
                let {
                    status: t,
                    description: n,
                    focused: s
                } = e;
                return (0, a.jsxs)("div", {
                    className: p.statusItem,
                    children: [(0, a.jsx)(u.Status, {
                        status: t,
                        className: p.icon,
                        size: 10,
                        color: s ? "currentColor" : void 0
                    }), (0, a.jsx)("div", {
                        className: p.status,
                        children: (0, N.humanizeStatus)(t)
                    }), null != n && (0, a.jsx)("div", {
                        className: p.description,
                        children: n
                    })]
                })
            }

            function R(e) {
                let {
                    customStatus: t
                } = e, n = e => {
                    e.stopPropagation(), C.CustomStatusSetting.updateSetting(void 0)
                };
                return null != t ? (0, a.jsx)("div", {
                    "aria-label": m.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                    children: (0, a.jsx)(c.default, {
                        className: null != t.emoji ? p.customStatusWithEmoji : p.customStatusItem,
                        activity: t,
                        emojiClassName: p.customEmoji,
                        textClassName: p.customText,
                        placeholderText: m.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                        children: (0, a.jsx)(u.Tooltip, {
                            text: m.default.Messages.CUSTOM_STATUS_CLEAR_CUSTOM_STATUS,
                            children: e => (0, a.jsx)(u.Button, {
                                ...e,
                                className: p.clearStatusButton,
                                onClick: n,
                                look: u.Button.Looks.BLANK,
                                size: u.Button.Sizes.NONE,
                                tabIndex: -1,
                                "aria-hidden": !0,
                                children: (0, a.jsx)(I.default, {
                                    className: p.clearStatusIcon
                                })
                            })
                        })
                    })
                }) : (0, a.jsxs)("div", {
                    className: i(p.statusItem, p.customStatusContentIcon),
                    "aria-label": m.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS,
                    children: [(0, a.jsx)("div", {
                        className: p.customEmojiPlaceholder
                    }), (0, a.jsx)("div", {
                        className: p.status,
                        children: m.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS
                    })]
                })
            }

            function O(e) {
                let {
                    focused: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: i(p.statusItem, p.statusItemNoPadding, p.customStatusContentIcon, p.switchAccountsItem),
                    "aria-label": m.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                    children: [(0, a.jsx)(T.default, {
                        width: 18,
                        height: 18,
                        className: p.switchAccountsIcon,
                        color: t ? o.default.unsafe_rawColors.WHITE_500.css : "currentColor"
                    }), (0, a.jsx)("div", {
                        className: p.status,
                        children: m.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE
                    })]
                })
            }
            let L = e => {
                let {
                    customStatus: t,
                    onClose: l,
                    analyticsContext: i,
                    onSelect: r
                } = e, o = (0, _.useMultiAccountMenuItems)();
                s.useEffect(() => {
                    S.default.track(A.AnalyticEvents.OPEN_POPOUT, {
                        type: "User Status Menu",
                        has_custom_status: null != t,
                        location: i.location
                    })
                }, []);
                let d = e => {
                    (0, E.default)(e, void 0, {
                        location: i.location
                    })
                };
                return (0, a.jsxs)(u.Menu, {
                    navId: "status-picker",
                    variant: "fixed",
                    "aria-label": m.default.Messages.SET_STATUS,
                    onClose: l,
                    onSelect: r,
                    children: [(0, a.jsx)(u.MenuItem, {
                        id: "online",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.ONLINE,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.ONLINE)
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "idle",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.IDLE,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.IDLE)
                    }), (0, a.jsx)(u.MenuItem, {
                        id: "dnd",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.DND,
                                description: m.default.Messages.STATUS_DND_HELP,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.DND)
                    }), (0, a.jsx)(u.MenuItem, {
                        id: "invisible",
                        keepItemStyles: !0,
                        render: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(g, {
                                status: u.StatusTypes.INVISIBLE,
                                description: m.default.Messages.STATUS_INVISIBLE_HELPER,
                                focused: t
                            })
                        },
                        action: () => d(u.StatusTypes.INVISIBLE)
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "custom-status",
                        keepItemStyles: !0,
                        render: () => (0, a.jsx)(R, {
                            customStatus: t
                        }),
                        action: () => {
                            (0, u.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("711438").then(n.bind(n, "711438"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    sourceAnalyticsContext: i
                                })
                            })
                        }
                    }), (0, a.jsx)(u.MenuSeparator, {}), (0, a.jsx)(u.MenuItem, {
                        id: "switch-account",
                        action: f.default,
                        label: e => {
                            let {
                                isFocused: t
                            } = e;
                            return (0, a.jsx)(O, {
                                focused: t
                            })
                        },
                        children: o
                    }, "switch-account")]
                })
            };
            var v = (0, d.default)(e => {
                let t = (0, r.useStateFromStores)([h.default], () => h.default.getCustomStatusActivity()),
                    n = C.StatusSetting.useSetting();
                return (0, a.jsx)(L, {
                    ...e,
                    customStatus: t,
                    status: n
                })
            })
        },
        779020: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return tl
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("730290"),
                i = n("803182"),
                r = n("90915"),
                o = n("446674"),
                u = n("77078"),
                d = n("437822"),
                c = n("711115"),
                E = n("851387"),
                f = n("987317"),
                _ = n("70614"),
                C = n("79112"),
                h = n("206230"),
                I = n("951212"),
                T = n("827792"),
                S = n("670984"),
                N = n("141962"),
                A = n("581516"),
                m = n("182537"),
                p = n("943183"),
                g = n("271081"),
                R = n("298557"),
                O = n("176162"),
                L = n("590157"),
                v = n("734592"),
                M = n("156565"),
                P = n("366410"),
                D = n("927175"),
                y = n("957328"),
                x = n("616265"),
                U = n("72860"),
                b = n("697316"),
                G = n("587233"),
                j = n("683716"),
                w = n("132943"),
                k = n("319769"),
                F = n("506377"),
                B = n("318915"),
                H = n("619443"),
                V = n("263901"),
                Y = n("643130"),
                W = n("802896"),
                K = n("374021"),
                z = n("592407"),
                q = n("468560"),
                Q = n("73968"),
                Z = n("236199"),
                X = n("353983"),
                J = n("940035"),
                $ = n("831773"),
                ee = n("397039"),
                et = n("628805"),
                en = n("165926"),
                ea = n("946522"),
                es = n("880185"),
                el = n("624043"),
                ei = n("263065"),
                er = n("204025"),
                eo = n("684641"),
                eu = n("176372"),
                ed = n("929479"),
                ec = n("630140"),
                eE = n("91990"),
                ef = n("359477"),
                e_ = n("1501"),
                eC = n("838857"),
                eh = n("393414"),
                eI = n("828309"),
                eT = n("29322"),
                eS = n("208021"),
                eN = n("582713"),
                eA = n("949000"),
                em = n("987285"),
                ep = n("686551"),
                eg = n("793237"),
                eR = n("120252"),
                eO = n("481395"),
                eL = n("401642"),
                ev = n("542789"),
                eM = n("84124"),
                eP = n("392011"),
                eD = n("777523"),
                ey = n("470885"),
                ex = n("868558"),
                eU = n("271938"),
                eb = n("982108"),
                eG = n("42203"),
                ej = n("476108"),
                ew = n("305961"),
                ek = n("778588"),
                eF = n("686470"),
                eB = n("18494"),
                eH = n("162771"),
                eV = n("167726"),
                eY = n("552067"),
                eW = n("866681"),
                eK = n("428773"),
                ez = n("535974"),
                eq = n("43093"),
                eQ = n("773336"),
                eZ = n("50885"),
                eX = n("780009"),
                eJ = n("49111"),
                e$ = n("750947"),
                e0 = n("724210"),
                e1 = n("56235");
            n("72177"), n("392453"), n("366679"), n("848872"), n("189857"), n("144747"), n("698041"), n("552712"), n("367530"), n("429464"), n("205817"), n("767960"), n("26092"), n("790618"), n("424562"), n("900938"), n("492114"), n("161810"), n("901998"), n("684442"), n("799286"), n("470055"), n("140596");
            let e2 = !1;
            (0, p.initSessionHeartbeatScheduler)(), o.default.initialize(), eI.default.loadServer(), eQ.isPlatformEmbedded && (eZ.default.on("USER_SETTINGS_OPEN", () => {
                !ek.default.getLayers().includes(eJ.Layers.USER_SETTINGS) && C.default.open(eJ.UserSettingsSections.ACCOUNT)
            }), eZ.default.on("LAUNCH_APPLICATION", (e, t) => {
                let n = eF.default.getActiveLibraryApplication(t);
                eX.playApplication(t, n, {
                    analyticsParams: {
                        location: {
                            page: eJ.AnalyticsPages.DIRECT,
                            object: eJ.AnalyticsObjects.WEB_URL
                        }
                    }
                })
            }));
            let e4 = o.default.connectStores([H.default, ej.default, eU.default], () => ({
                    isConnected: H.default.isConnected(),
                    defaultRoute: ej.default.defaultRoute,
                    defaultRouteFallback: ej.default.fallbackRoute,
                    token: eU.default.getToken()
                }))(class extends s.Component {
                    componentDidMount() {
                        let {
                            match: e
                        } = this.props;
                        null != e && null != e.params.inviteCode && (0, W.doGuildOnboardingForPostAuthInvite)({
                            code: e.params.inviteCode
                        })
                    }
                    render() {
                        let {
                            isConnected: e,
                            defaultRoute: t,
                            token: n,
                            defaultRouteFallback: s
                        } = this.props;
                        if (null == n) return (0, a.jsx)(r.Redirect, {
                            to: eJ.Routes.DEFAULT_LOGGED_OUT
                        });
                        if (e) {
                            let e = tn(t);
                            return null == e || (e.params.guildId === eJ.ME || null != ew.default.getGuild(e.params.guildId)) && null != eG.default.getChannel(e.params.channelId) ? (0, a.jsx)(r.Redirect, {
                                to: t
                            }) : (0, a.jsx)(r.Redirect, {
                                to: s
                            })
                        }
                        return null
                    }
                }),
                e9 = (0, L.makeAuthenticated)(M.default, null, {
                    passProps: !1
                }),
                e7 = (0, L.makeAuthenticated)(function() {
                    return (0, a.jsx)(g.default, {})
                }),
                e8 = (0, L.makeAuthenticated)(function(e) {
                    let {
                        match: t
                    } = e, {
                        applicationId: n,
                        section: s
                    } = t.params, l = (0, q.default)(e$.ApplicationDirectoryProfileSections, s);
                    return (0, a.jsx)(R.default, {
                        applicationId: n,
                        initialSection: l
                    })
                }),
                e3 = (0, L.makeAuthenticated)(function() {
                    return (0, a.jsx)(O.default, {})
                }),
                e6 = [eJ.Routes.GUILD_BOOSTING_MARKETING(":guildId"), ...Array.from(e0.StaticChannelRoutes).map(e => eJ.Routes.CHANNEL(":guildId", e))];

            function e5(e) {
                let {
                    guildId: t,
                    channelId: n = null,
                    messageId: a = null,
                    threadId: s = null
                } = e.params;
                return {
                    guildId: null != t ? t : eJ.ME,
                    channelId: n,
                    messageId: a,
                    threadId: s
                }
            }
            let te = [{
                    path: [eJ.Routes.APPLICATION_DIRECTORY_SEARCH],
                    render: e3,
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.APPLICATION_DIRECTORY_PROFILE(":applicationId", ":section?")],
                    render: e8,
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.APPLICATION_DIRECTORY],
                    render: e7,
                    isSessionRequired: !0
                }],
                tt = [{
                    path: [eJ.Routes.APP_WITH_INVITE_AND_GUILD_ONBOARDING(":inviteCode")],
                    render(e) {
                        let {
                            match: t
                        } = e;
                        return (0, a.jsx)(e4, {
                            match: t
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.APP],
                    render: () => (0, a.jsx)(e4, {}),
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.USERS(":id")],
                    render: function(e) {
                        let {
                            match: t,
                            location: n
                        } = e, {
                            friend_token: s
                        } = (0, l.parse)(n.search), {
                            id: i
                        } = t.params;
                        return (0, V.addPostConnectionCallback)(() => (0, eL.openUserProfileModal)({
                            userId: i,
                            guildId: eJ.ME,
                            friendToken: s,
                            analyticsLocation: {
                                section: eJ.AnalyticsSections.DIRECT_ROUTE_ACCESS
                            }
                        })), (0, a.jsx)(r.Redirect, {
                            to: ej.default.defaultRoute
                        })
                    }
                }, {
                    path: [eJ.Routes.APPLICATION_LIBRARY_ACTION(":gameId", ":action")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            gameId: n,
                            action: s
                        } = t.params;
                        return ez.default.whenInitialized(() => {
                            eF.default.whenInitialized(() => {
                                switch (s) {
                                    case "launch": {
                                        let e = eF.default.getActiveLibraryApplication(n);
                                        if (null == e) return;
                                        eX.playApplication(e.id, e, {
                                            analyticsParams: {
                                                location: {
                                                    page: eJ.AnalyticsPages.DIRECT,
                                                    object: eJ.AnalyticsObjects.WEB_URL
                                                }
                                            }
                                        });
                                        break
                                    }
                                    case "test-mode":
                                        eV.default.whenInitialized(() => _.authorizeAndSetTestModeApplication(n));
                                        break;
                                    case "uninstall": {
                                        let e = eF.default.getActiveLibraryApplication(n);
                                        if (null == e) return;
                                        (0, c.uninstallBranchPrompt)(e.id, e.branchId, eJ.AnalyticsLocations.URI_SCHEME)
                                    }
                                }
                            })
                        }), (0, a.jsx)(r.Redirect, {
                            to: eJ.Routes.APPLICATION_LIBRARY
                        })
                    }
                }, {
                    path: [eJ.Routes.GUILD_CREATE],
                    render: function() {
                        return (0, V.addPostConnectionCallback)(() => x.default.openCreateGuildModal({
                            location: "External link"
                        })), (0, a.jsx)(r.Redirect, {
                            to: ej.default.defaultRoute
                        })
                    }
                }, {
                    path: [eJ.Routes.PICK_GUILD_SETTINGS(":section?", ":subsection?")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            section: n,
                            subsection: s
                        } = t.params, i = (0, l.parse)(location.search), o = i.feature;
                        return (0, V.addPostConnectionCallback)(() => Q.openGuildSettingsPickerModal({
                            section: (0, q.default)(eJ.GuildSettingsSections, n),
                            subsection: (0, q.default)(eJ.GuildSettingsSubsections, s),
                            feature: o
                        })), (0, a.jsx)(r.Redirect, {
                            to: ej.default.defaultRoute
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.SETTINGS(":section", ":subsection?")],
                    render: function(e) {
                        let {
                            location: t
                        } = e, n = (0, eD.default)(t.pathname);
                        return null != n && (0, V.addPostConnectionCallback)(() => C.default.open(n.section, n.subsection, {
                            openWithoutBackstack: !1,
                            impressionSource: n.source
                        })), (0, a.jsx)(r.Redirect, {
                            to: ej.default.defaultRoute
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.USER_GUILD_NOTIFICATION_SETTINGS(":guildId")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: s
                        } = t.params;
                        return (0, V.addPostConnectionCallback)(() => {
                            (0, u.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("747593").then(n.bind(n, "747593"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    guildId: s
                                })
                            })
                        }), (0, a.jsx)(r.Redirect, {
                            to: eJ.Routes.CHANNEL(s)
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.APPLICATION_LIBRARY_INVENTORY],
                    render: function() {
                        return (0, V.addPostConnectionCallback)(() => C.default.open(eJ.UserSettingsSections.INVENTORY)), (0, a.jsx)(r.Redirect, {
                            to: ej.default.defaultRoute
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.WELCOME(":guildId?", ":channelId?")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: n,
                            channelId: s
                        } = t.params;
                        (0, en.setNewUser)(e1.NewUserTypes.MARKETING_UNCLAIMED);
                        let l = eJ.Routes.CHANNEL(n, s);
                        return (0, a.jsx)(r.Redirect, {
                            to: l
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.GUILD_EVENT_DETAILS(":guildId?", ":guildEventId")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: n,
                            guildEventId: s
                        } = t.params;
                        return (0, V.addPostConnectionCallback)(() => {
                            (0, K.openGuildEventDetails)({
                                eventId: s
                            })
                        }), (0, a.jsx)(r.Redirect, {
                            to: eJ.Routes.CHANNEL(n)
                        })
                    },
                    isSessionRequired: !0
                }, {
                    path: [eJ.Routes.GUILD_SETTINGS(":guildId", ":section?", ":subsection?")],
                    render: function(e) {
                        let {
                            match: t
                        } = e, {
                            guildId: n,
                            section: s,
                            subsection: l
                        } = t.params;
                        return (0, V.addPostConnectionCallback)(() => {
                            z.default.open(n, (0, q.default)(eJ.GuildSettingsSections, s), void 0, (0, q.default)(eJ.GuildSettingsSubsections, l))
                        }), (0, a.jsx)(r.Redirect, {
                            to: eJ.Routes.CHANNEL(n)
                        })
                    },
                    isSessionRequired: !0,
                    isChatRoute: !0
                }, {
                    path: [eJ.Routes.CHANNEL_THREAD_VIEW(":guildId", ":channelId", ":threadId", ":messageId?"), eJ.Routes.CHANNEL(":guildId", ":channelId?", ":messageId?"), eJ.Routes.ACTIVITY, eJ.Routes.ACTIVITIES, eJ.Routes.ACTIVITIES_HAPPENING_NOW, eJ.Routes.ACTIVITY_DETAILS(":applicationId"), eJ.Routes.APPLICATION_LIBRARY, eJ.Routes.APPLICATION_STORE, eJ.Routes.MESSAGE_REQUESTS, eJ.Routes.COLLECTIBLES_SHOP, eJ.Routes.COLLECTIBLES_SHOP_FULLSCREEN, eJ.Routes.COLLECTIBLES_SHOP_PRODUCT_DETAIL(":skuId"), eJ.Routes.GUILD_DISCOVERY, eJ.Routes.GUILD_MEMBER_VERIFICATION(":guildId", ":inviteCode?"), eJ.Routes.GUILD_MEMBER_VERIFICATION_FOR_HUB(":guildId", ":inviteCode?"), eJ.Routes.GUILD_BOOSTING_MARKETING(":guildId"), eJ.Routes.FEATURE(":feature"), eJ.Routes.FAMILY_CENTER],
                    render: e9,
                    isSessionRequired: !0,
                    isChatRoute: !0
                }, ...te];

            function tn(e) {
                for (let {
                        path: t,
                        isChatRoute: n
                    }
                    of tt) {
                    if (!n) continue;
                    let a = (0, i.matchPath)(e, {
                        path: t
                    });
                    if (null != a) return a
                }
                return null
            }

            function ta(e) {
                let {
                    channelId: t,
                    guildId: n,
                    pathname: a
                } = e;
                if (!H.default.isConnected()) return;
                let {
                    location: s
                } = (0, eh.getHistory)();
                s.pathname === a && (null == eG.default.getChannel(t) ? (0, eh.replaceWith)(eJ.Routes.CHANNEL(n)) : (0, eh.replaceWith)(a))
            }
            class ts extends s.PureComponent {
                componentDidMount() {
                    P.default.initialize(), eZ.default.setZoomFactor(h.default.zoom), eI.default.init(), v.default.initialize(), eo.default.initialize(), w.default.initialize(), ex.default.initialize(), k.default.initialize(), ed.default.initialize(), J.default.initialize(), I.default.init(), B.default.init(), F.default.init(), ea.default.initialize(), m.default.initialize(), j.default.initialize(), ec.default.initialize(), A.default.initialize(), ey.default.initialize(), er.default.initialize(), N.default.initialize(), Y.default.init(), Z.default.init(), eK.default.init(), eq.default.init(), S.default.initialize(), eO.default.init(), eW.default.init(), eY.default.init(), eM.default.init(), em.default.initialize(), ep.default.initialize(), ev.default.initialize(), eP.default.init(), G.default.initialize(), T.default.initialize(), eT.default.initialize(), eA.default.initialize(), el.default.initialize(), es.default.initialize(), ei.default.initialize(), D.default.initialize(), eE.default.initialize(), X.default.init({
                        hasModalOpen: u.hasAnyModalOpen,
                        openModal: () => (0, u.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("927475").then(n.bind(n, "927475"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    }), b.default.init(), $.default.initialize(), ef.default.initialize(), eu.default.initialize(), U.default.initialize(), this.rewriterUnlisten = e_.default.addRouteRewriter(this.ensureChannelMatchesGuild), this.historyUnlisten = e_.default.addRouteChangeListener(this.handleHistoryChange)
                }
                componentWillUnmount() {
                    P.default.terminate(), ex.default.terminate(), ed.default.terminate(), eo.default.terminate(), v.default.terminate(), A.default.terminate(), ey.default.terminate(), N.default.terminate(), ec.default.terminate(), er.default.terminate(), ev.default.terminate(), S.default.terminate(), G.default.terminate(), $.default.terminate(), T.default.terminate(), ef.default.terminate(), eT.default.terminate(), eA.default.terminate(), el.default.terminate(), es.default.terminate(), ei.default.terminate(), D.default.terminate(), eu.default.terminate(), U.default.terminate(), this.historyUnlisten(), this.rewriterUnlisten()
                }
                handleHistoryChange(e) {
                    let {
                        pathname: t,
                        search: n
                    } = e;
                    ! function(e) {
                        if (H.default.isConnected() || H.default.isTryingToConnect()) return;
                        let t = eU.default.getToken();
                        if (null == t) return;
                        let n = function(e) {
                            for (let {
                                    path: t,
                                    isSessionRequired: n
                                }
                                of tt) {
                                if (!n) continue;
                                let a = (0, i.matchPath)(e, {
                                    path: t
                                });
                                if (null != a) return a
                            }
                            return null
                        }(e);
                        null != n && d.default.startSession(t)
                    }(t), ! function(e, t) {
                        let n = tn(e);
                        if (null == n) return;
                        let {
                            guildId: a,
                            channelId: s,
                            messageId: r,
                            threadId: o
                        } = e5(n), u = (0, eC.isValidGuildId)(a), d = (0, eC.isValidChannelId)(s), c = (0, eC.isValidChannelId)(o), _ = eH.default.getGuildId(), C = _ !== a;
                        if (u && C && E.default.selectGuild(a), u && d) {
                            let n = eB.default.getChannelId(_),
                                i = n !== s;
                            if (!e2 || C || i || null != r) {
                                e2 = !0, f.default.selectChannel({
                                    guildId: a,
                                    channelId: s,
                                    messageId: r
                                });
                                let {
                                    summaryId: e
                                } = (0, l.parse)(t);
                                null != e && eg.default.setSelectedSummary(s, e)
                            }
                            if (null != o && c) {
                                let e = eb.default.getCurrentSidebarChannelId(n),
                                    t = e !== o,
                                    l = null != eb.default.getGuildSidebarState(a);
                                if (null != s && null != o && t) {
                                    if (l)(0, eh.replaceWith)(eJ.Routes.CHANNEL(a, o, r));
                                    else {
                                        let e = {
                                            type: eN.SidebarOpenDetailsType.THREAD
                                        };
                                        null != r && (e.initialMessageId = r), eS.default.openThreadAsSidebar({
                                            guildId: a,
                                            baseChannelId: s,
                                            channelId: o,
                                            details: e
                                        })
                                    }
                                }
                            } else null != s && !i && eS.default.closeChannelSidebar(s);
                            let u = et.default.getIsOpen();
                            if (s === e0.StaticChannelRoute.ROLE_SUBSCRIPTIONS) ee.default.closeSidebar();
                            else if (C && u) {
                                let t = null == _ && a === eJ.ME,
                                    n = e === eJ.Routes.GUILD_DISCOVERY;
                                t || n ? ee.default.closeSidebar() : ee.default.openSidebar()
                            } else(i && u || !C && !i) && ee.default.closeSidebar()
                        } else {
                            var h;
                            if (h = e, !e6.some(e => {
                                    var t;
                                    return (null === (t = (0, i.matchPath)(h, e)) || void 0 === t ? void 0 : t.isExact) === !0
                                }))(0, eh.replaceWith)(ej.default.fallbackRoute)
                        }
                    }(t, n)
                }
                ensureChannelMatchesGuild(e) {
                    if (!H.default.isConnected()) return null;
                    let {
                        pathname: t
                    } = e, n = tn(t);
                    if (null == n) return null;
                    let {
                        guildId: a,
                        channelId: s,
                        threadId: l
                    } = e5(n), i = (0, eC.isValidGuildId)(a) && a !== eJ.ME && a !== eJ.FAVORITES, r = null != s && (0, eC.isValidChannelId)(s) && !(0, e0.isStaticChannelRoute)(s);
                    if (r && i) {
                        let n = eG.default.getChannel(s);
                        if (null == n) eR.default.loadThread(s).then(() => ta({
                            channelId: s,
                            guildId: a,
                            pathname: t
                        }));
                        else if (n.guild_id !== a) return {
                            path: eJ.Routes.CHANNEL(a),
                            state: e.state
                        };
                        if (null != l) {
                            let n = (0, eC.isValidChannelId)(l) && !(0, e0.isStaticChannelRoute)(s);
                            if (!n) return null;
                            let i = eG.default.getChannel(l);
                            if (null == i) eR.default.loadThread(l).then(() => ta({
                                channelId: l,
                                guildId: a,
                                pathname: t
                            }));
                            else if ((null == i ? void 0 : i.parent_id) !== s) return eS.default.closeChannelSidebar(s), {
                                path: eJ.Routes.CHANNEL(a, s),
                                state: e.state
                            }
                        }
                    }
                    return null
                }
                render() {
                    return (0, a.jsxs)(s.Fragment, {
                        children: [(0, a.jsxs)(r.Switch, {
                            children: [(0, a.jsx)(r.Redirect, {
                                exact: !0,
                                from: "/channels",
                                to: "/"
                            }), tt.map(e => {
                                let {
                                    path: t,
                                    render: n
                                } = e;
                                return (0, a.jsx)(r.Route, {
                                    path: t,
                                    render: n
                                }, t[0])
                            }), (0, a.jsx)(r.Redirect, {
                                to: "/"
                            })]
                        }), (0, a.jsx)(y.default, {})]
                    })
                }
                constructor(...e) {
                    super(...e), this.historyUnlisten = () => {}, this.rewriterUnlisten = () => {}
                }
            }
            var tl = ts
        },
        543155: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            }), n("70102"), n("222007");
            var a, s, l, i, r, o, u = n("37983"),
                d = n("884691"),
                c = n("49111");
            let E = (e, t) => {
                let {
                    x: n,
                    y: a
                } = e, {
                    x: s,
                    y: l
                } = t;
                return Math.pow(n - s, 2) + Math.pow(a - l, 2)
            };

            function f(e, t, n, a, s) {
                let {
                    top: l,
                    bottom: i,
                    left: r,
                    right: o
                } = e;
                if (null == l && null == i ? (l = 0, i = n - s) : null == l && null != i ? l = n - (i + s) : null != l && (i = n - (l + s)), null == r && null == o ? (r = 0, o = t - a) : null == r && null != o ? r = t - (o + a) : null == o && null != r && (o = t - (r + a)), null == l || null == i || null == r || null == o) throw Error("Logically this can never happen based on our if/else statements");
                return {
                    top: l,
                    left: r,
                    bottom: i,
                    right: o
                }
            }(r = s || (s = {}))[r.DISABLED = 0] = "DISABLED", r[r.DEFAULT = 1] = "DEFAULT", r[r.OFFSET = 2] = "OFFSET", (o = l || (l = {})).TOP = "TOP", o.BOTTOM = "BOTTOM", o.RIGHT = "RIGHT", o.LEFT = "LEFT";

            function _(e) {
                return [null == e.bottom ? "TOP" : "BOTTOM", null == e.right ? "LEFT" : "RIGHT"]
            }

            function C(e) {
                let {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                } = e;
                return 0 === t || t <= a ? a = null : t = null, 0 === n || n <= s ? s = null : n = null, {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                }
            }

            function h(e) {
                let {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                } = e;
                return a < 0 && (t += a, a = 0), t < 0 && (a += t, t = 0), s < 0 && (n += s, s = 0), n < 0 && (s += n, n = 0), {
                    top: t,
                    left: n,
                    bottom: a,
                    right: s
                }
            }

            function I(e) {
                return null != e ? "".concat(e, "px") : "auto"
            }(a = class extends d.PureComponent {
                componentDidMount() {
                    this.checkBounds(), this.setDOMPositions(this.position)
                }
                componentDidUpdate(e, t) {
                    let {
                        state: {
                            verticalOrientation: n,
                            horizontalOrientation: a,
                            atTopEdge: s
                        },
                        props: {
                            maxX: l,
                            maxY: i,
                            onRelocated: r,
                            snapOrientation: o
                        }
                    } = this, u = e.maxX !== l || e.maxY !== i || e.onRelocated !== r || e.snapOrientation !== o || t.verticalOrientation !== n || t.horizontalOrientation !== a || t.atTopEdge !== s;
                    u && this.checkBounds()
                }
                componentWillUnmount() {
                    window.removeEventListener("mousemove", this.handleMouseMove), window.removeEventListener("mouseup", this.handleMouseUp)
                }
                setDOMPositions(e) {
                    let {
                        top: t,
                        left: n,
                        bottom: a,
                        right: s
                    } = e, {
                        draggableRef: {
                            current: l
                        }
                    } = this;
                    this.position = {
                        top: t,
                        left: n,
                        bottom: a,
                        right: s
                    }, null != l && (l.style.top = I(t), l.style.bottom = I(a), l.style.left = I(n), l.style.right = I(s))
                }
                render() {
                    let {
                        children: e,
                        className: t
                    } = this.props, {
                        dragging: n,
                        verticalOrientation: a,
                        horizontalOrientation: s,
                        atTopEdge: l
                    } = this.state, {
                        top: i,
                        left: r,
                        right: o,
                        bottom: c
                    } = this.position;
                    return (0, u.jsx)("div", {
                        ref: this.draggableRef,
                        className: t,
                        onMouseDown: this.handleMouseDown,
                        style: {
                            pointerEvents: n ? "none" : "auto",
                            position: "absolute",
                            top: i,
                            left: r,
                            bottom: c,
                            right: o
                        },
                        children: d.cloneElement(d.Children.only(e), {
                            flipped: "RIGHT" === s,
                            verticalFlipped: "BOTTOM" === a,
                            checkBounds: this.checkBounds,
                            atTopEdge: l
                        })
                    })
                }
                constructor(e) {
                    super(e), this.draggableRef = d.createRef(), this._dragStart = {
                        x: 0,
                        y: 0
                    }, this.handleMouseDown = e => {
                        let {
                            top: t,
                            left: n,
                            bottom: a,
                            right: s
                        } = this.position, {
                            dragAnywhere: l,
                            selector: i,
                            maxX: r,
                            maxY: o
                        } = this.props, {
                            target: u
                        } = e, {
                            current: d
                        } = this.draggableRef;
                        if (null != d && e.button === c.MouseButtons.PRIMARY && (l || null != u && null != i && "" !== i && null != u.closest(i))) {
                            let l = f({
                                    top: t,
                                    left: n,
                                    bottom: a,
                                    right: s
                                }, r, o, d.clientWidth, d.clientHeight),
                                {
                                    x: i,
                                    y: u
                                } = function(e) {
                                    let {
                                        top: t,
                                        left: n
                                    } = e;
                                    return {
                                        x: n,
                                        y: t
                                    }
                                }(l);
                            this._dragStart = {
                                x: e.clientX,
                                y: e.clientY
                            }, this._offsetX = e.clientX - i, this._offsetY = e.clientY - u, window.addEventListener("mousemove", this.handleMouseMove), window.addEventListener("mouseup", this.handleMouseUp)
                        }
                    }, this.handleMouseMove = e => {
                        e.preventDefault();
                        let {
                            clientX: t,
                            clientY: n
                        } = e, {
                            current: a
                        } = this.draggableRef, {
                            maxX: s,
                            maxY: l,
                            flipVertical: i,
                            flipHorizontal: r,
                            onDragStart: o,
                            onDrag: u,
                            onFlip: d,
                            snapOrientation: c
                        } = this.props, {
                            dragging: I,
                            dragging: T,
                            verticalOrientation: S,
                            horizontalOrientation: N
                        } = this.state, A = !1;
                        if (null == a || !I && 9 > E(this._dragStart, {
                                x: t,
                                y: n
                            })) return;
                        I = !0;
                        let {
                            clientWidth: m,
                            clientHeight: p
                        } = a, g = n - this._offsetY, R = t - this._offsetX, O = h(f({
                            top: g,
                            left: R
                        }, s, l, m, p));
                        if (c) {
                            O = C(O);
                            let e = _(O);
                            S = e[0], N = e[1]
                        } else O = {
                            top: O.top,
                            left: O.left
                        };
                        2 === r && N !== this.state.horizontalOrientation && (this._offsetX = m - this._offsetX, A = !0), 2 === i && S !== this.state.verticalOrientation && (this._offsetY = p - this._offsetY, A = !0), this.setDOMPositions(O), !T && (null == o || o(O, a)), null == u || u(O, a), A && (null == d || d([S, N])), this.setState({
                            dragging: I,
                            verticalOrientation: S,
                            horizontalOrientation: N,
                            atTopEdge: 0 === O.top
                        })
                    }, this.handleMouseUp = () => {
                        window.removeEventListener("mousemove", this.handleMouseMove), window.removeEventListener("mouseup", this.handleMouseUp), this.state.dragging && this.setState({
                            dragging: !1
                        }, () => {
                            let {
                                onDragEnd: e
                            } = this.props, {
                                current: t
                            } = this.draggableRef;
                            null != t && null != e && e(this.position, t)
                        })
                    }, this._checkBoundsRAF = null, this.checkBounds = () => {
                        null != this._checkBoundsRAF && cancelAnimationFrame(this._checkBoundsRAF), this._checkBoundsRAF = requestAnimationFrame(this._performCheckBounds)
                    }, this._performCheckBounds = () => {
                        let e;
                        let {
                            position: t,
                            state: n,
                            draggableRef: {
                                current: a
                            },
                            props: {
                                maxX: s,
                                maxY: l,
                                onRelocated: i,
                                snapOrientation: r
                            }
                        } = this, {
                            verticalOrientation: o,
                            horizontalOrientation: u
                        } = this.state;
                        if (null == a) return;
                        let {
                            clientHeight: d,
                            clientWidth: c
                        } = a, E = f(t, s, l, c, d);
                        if (E = h(E), r) {
                            e = C(E);
                            let t = _(e);
                            o = t[0], u = t[1]
                        } else e = {
                            top: E.top,
                            left: E.left,
                            right: null,
                            bottom: null
                        };
                        if (t.left === e.left && t.right === e.right && t.top === e.top && t.bottom === e.bottom) return;
                        null == i || i(e, a), this.setDOMPositions(e);
                        let I = 0 === e.top;
                        (o !== n.verticalOrientation || u !== n.horizontalOrientation || I !== n.atTopEdge) && this.setState({
                            verticalOrientation: o,
                            horizontalOrientation: u,
                            atTopEdge: I
                        })
                    };
                    let [t, n] = _(e.initialPosition);
                    this.position = function(e) {
                        let {
                            top: t,
                            left: n,
                            bottom: a,
                            right: s
                        } = e;
                        return null == n && null == s && (n = 0), null != n && null != s && (s = null), null == t && null == a && (t = 0), null != t && null != a && (a = null), {
                            top: t,
                            left: n,
                            bottom: a,
                            right: s
                        }
                    }(e.initialPosition), this.state = {
                        dragging: !1,
                        verticalOrientation: t,
                        horizontalOrientation: n,
                        atTopEdge: 0 === this.position.top
                    }
                }
            }).FlipTypes = s, a.defaultProps = {
                snapOrientation: !1,
                maxX: 0,
                maxY: 0,
                flipVertical: 0,
                flipHorizontal: 0,
                dragAnywhere: !1
            }, i = a
        },
        875358: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("913144"),
                d = n("259083"),
                c = n("778588"),
                E = n("577427"),
                f = n("946749"),
                _ = n("810567"),
                C = n("791776"),
                h = n("780009"),
                I = n("49111"),
                T = n("782340"),
                S = n("948063");
            class N extends s.Component {
                componentDidMount() {
                    document.addEventListener("keydown", this.handleKeyDown)
                }
                componentWillUnmount() {
                    u.default.wait(() => d.updateActiveRowKey(null)), document.removeEventListener("keydown", this.handleKeyDown)
                }
                reset() {
                    d.updateActiveRowKey(null), d.updateLibraryFilter("")
                }
                focusInput() {
                    let {
                        searchBarRef: e
                    } = this;
                    null != e && e.focus()
                }
                updateActiveRow(e) {
                    let {
                        applicationViewItems: t,
                        activeRowKey: n
                    } = this.props, a = t.findIndex(e => e.key === n), s = 0;
                    a >= 0 && (s = (a + e) % t.length) < 0 && (s = t.length - 1);
                    let l = t[s];
                    d.updateActiveRowKey(null != l ? l.key : null, !0)
                }
                render() {
                    let {
                        filterQuery: e
                    } = this.props, {
                        focused: t
                    } = this.state;
                    return (0, a.jsx)("div", {
                        className: i({
                            [S.libraryFilter]: !0,
                            [S.focused]: t
                        }),
                        children: (0, a.jsx)(_.default, {
                            className: S.searchBar,
                            ref: this.setRef,
                            onChange: d.updateLibraryFilter,
                            onFocus: () => this.setState({
                                focused: !0
                            }),
                            onBlur: () => this.setState({
                                focused: !1
                            }),
                            name: "filter",
                            onClear: () => {
                                this.reset(), this.focusInput()
                            },
                            maxLength: 100,
                            query: e,
                            placeholder: T.default.Messages.APPLICATION_LIBRARY_FILTER_PLACEHOLDER
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.searchBarRef = null, this.state = {
                        focused: !1
                    }, this.setRef = e => {
                        this.searchBarRef = e
                    }, this.handleKeyDown = e => {
                        var t;
                        let {
                            activeRowKey: n,
                            hasModalOpen: a,
                            applicationViewItems: s
                        } = this.props, {
                            searchBarRef: l
                        } = this;
                        if (a || e.ctrlKey || e.altKey || e.metaKey || null == l) return;
                        let i = null === (t = (0, C.eventOwnerDocument)(e)) || void 0 === t ? void 0 : t.activeElement;
                        if (!(i !== l.inputRef.current && (0, C.isInputLikeElement)(i))) switch (e.which) {
                            case I.KeyboardKeys.ESCAPE:
                                e.target !== l.inputRef.current ? this.reset() : null != l.inputRef.current && l.blur();
                                break;
                            case I.KeyboardKeys.ENTER:
                                if (null != n) {
                                    e.preventDefault();
                                    let t = s.find(e => e.key === n);
                                    if (null == t) return;
                                    let a = t.libraryApplication;
                                    h.performDefaultLibraryApplicationAction(a, {
                                        analyticsParams: {
                                            source: I.AnalyticsLocations.APPLICATION_LIBRARY,
                                            location: {
                                                page: I.AnalyticsPages.LIBRARY,
                                                section: I.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                                                object: I.AnalyticsObjects.BUTTON_CTA
                                            }
                                        }
                                    })
                                }
                                break;
                            case I.KeyboardKeys.ARROW_DOWN:
                            case I.KeyboardKeys.ARROW_UP:
                                e.preventDefault(), e.stopPropagation(), this.updateActiveRow(e.which === I.KeyboardKeys.ARROW_DOWN ? 1 : -1);
                                break;
                            default:
                                null != l.inputRef.current && e.target !== l.inputRef.current && l.focus()
                        }
                    }
                }
            }

            function A() {
                let e = (0, r.useStateFromStores)([c.default], () => c.default.hasLayers()),
                    t = (0, o.useModalsStore)(o.hasAnyModalOpenSelector);
                return (0, a.jsx)(N, {
                    activeRowKey: (0, r.useStateFromStores)([f.default], () => f.default.activeRowKey),
                    hasModalOpen: t || e,
                    filterQuery: (0, r.useStateFromStores)([E.default], () => E.default.applicationFilterQuery),
                    applicationViewItems: (0, r.useStateFromStores)([E.default], () => E.default.sortedFilteredLibraryApplicationViewItems)
                })
            }
        },
        737295: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("539938"),
                r = n("393414"),
                o = n("880013"),
                u = n("599110"),
                d = n("602043"),
                c = n("49111"),
                E = n("782340"),
                f = n("616567");
            let _ = (0, d.isSupportedPlatform)() || !1;
            var C = s.memo(function(e) {
                let {
                    currentRoute: t,
                    renderToolbar: n
                } = e, d = s.useContext(u.AnalyticsContext), C = _ || t === c.Routes.APPLICATION_LIBRARY_SETTINGS;
                return (0, a.jsxs)(i.default, {
                    className: f.libraryHeader,
                    toolbar: null == n ? void 0 : n(),
                    children: [(0, a.jsx)(i.default.Icon, {
                        icon: o.default,
                        "aria-hidden": !0
                    }), (0, a.jsx)(i.default.Title, {
                        children: E.default.Messages.LIBRARY
                    }), (0, a.jsx)(i.default.Divider, {}), (0, a.jsxs)(l.TabBar, {
                        type: "top-pill",
                        selectedItem: t,
                        onItemSelect: function(e) {
                            e !== t && (0, r.transitionTo)(e, {
                                state: {
                                    analyticsSource: {
                                        ...d.location,
                                        section: c.AnalyticsSections.TABS,
                                        object: c.AnalyticsObjects.NAVIGATION_LINK
                                    }
                                }
                            })
                        },
                        children: [(0, a.jsx)(l.TabBar.Item, {
                            id: c.Routes.APPLICATION_LIBRARY,
                            children: E.default.Messages.APPLICATION_LIBRARY_MY_GAMES
                        }), C ? (0, a.jsx)(l.TabBar.Item, {
                            id: c.Routes.APPLICATION_LIBRARY_SETTINGS,
                            children: E.default.Messages.SETTINGS
                        }) : null]
                    })]
                })
            })
        },
        758997: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("90915"),
                i = n("901582"),
                r = n("73749"),
                o = n("69927"),
                u = n("970366"),
                d = n("661804"),
                c = n("928056"),
                E = n("49111"),
                f = n("782340"),
                _ = n("312079");

            function C() {
                return (0, a.jsxs)(l.Switch, {
                    children: [(0, a.jsx)(r.default, {
                        path: E.Routes.APPLICATION_LIBRARY_SETTINGS,
                        exact: !0,
                        children: (0, a.jsxs)(i.default, {
                            page: E.AnalyticsPages.LIBRARY_SETTINGS,
                            root: !0,
                            children: [(0, a.jsx)(o.AppPageTitle, {
                                subsection: f.default.Messages.SETTINGS
                            }), (0, a.jsx)(c.default, {})]
                        })
                    }), (0, a.jsx)(r.default, {
                        path: E.Routes.APPLICATION_LIBRARY,
                        children: (0, a.jsxs)(i.default, {
                            page: E.AnalyticsPages.LIBRARY,
                            root: !0,
                            children: [(0, a.jsx)(o.AppPageTitle, {
                                subsection: f.default.Messages.APPLICATION_LIBRARY_MY_GAMES
                            }), (0, a.jsx)(d.default, {})]
                        })
                    })]
                })
            }
            var h = s.memo(function() {
                return s.useEffect(() => {
                    (0, u.trackAppUIViewed)("application_library")
                }, []), (0, a.jsxs)("div", {
                    className: _.container,
                    children: [(0, a.jsx)(o.AppPageTitle, {
                        location: f.default.Messages.LIBRARY
                    }), (0, a.jsx)(C, {})]
                })
            })
        },
        950395: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("862337"),
                r = n("77078"),
                o = n("148813"),
                u = n("530311"),
                d = n("858722"),
                c = n("220978"),
                E = n("581454"),
                f = n("49111"),
                _ = n("782340");
            let C = new Set([f.CloudSyncStateTypes.PUSHING, f.CloudSyncStateTypes.PULLING]),
                h = Object.freeze({
                    [f.CloudSyncStateTypes.DONE]: u.default,
                    [f.CloudSyncStateTypes.PLANNING]: u.default,
                    [f.CloudSyncStateTypes.PREPARING]: u.default,
                    [f.CloudSyncStateTypes.PUSHING]: E.default,
                    [f.CloudSyncStateTypes.PULLING]: c.default,
                    [f.CloudSyncStateTypes.CONFLICT]: u.default,
                    [f.CloudSyncStateTypes.ERROR]: u.default
                });
            class I extends s.PureComponent {
                componentDidMount() {
                    this.getIsRecentlySynced() && this.setRecentlySyncedTimeout()
                }
                componentDidUpdate(e) {
                    null != this.props.cloudSyncState && this.props.cloudSyncState.type === f.CloudSyncStateTypes.DONE && null != this.props.cloudSyncState.timestamp && (null == e.cloudSyncState || null == e.cloudSyncState.timestamp) && this.setRecentlySyncedTimeout()
                }
                componentWillUnmount() {
                    this._doneTimer.stop()
                }
                setRecentlySyncedTimeout() {
                    this._doneTimer.start(2e3, () => this.forceUpdate())
                }
                getIsRecentlySynced() {
                    let {
                        cloudSyncState: e
                    } = this.props;
                    if (null != e && e.type === f.CloudSyncStateTypes.DONE) {
                        let t = e.timestamp;
                        return null != t && Date.now() - t <= 2e3
                    }
                    return !1
                }
                getStop(e, t) {
                    if (t) return 1;
                    if (e.type === f.CloudSyncStateTypes.PUSHING || e.type === f.CloudSyncStateTypes.PULLING) {
                        let {
                            progress: t,
                            total: n
                        } = e;
                        return t / n
                    }
                    return 0
                }
                getTooltip(e, t) {
                    switch (e.type) {
                        case f.CloudSyncStateTypes.DONE:
                            if (t) return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_DONE;
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
                        case f.CloudSyncStateTypes.CONFLICT:
                        case f.CloudSyncStateTypes.ERROR:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_SUPPORTED;
                        case f.CloudSyncStateTypes.PLANNING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PLANNING;
                        case f.CloudSyncStateTypes.PREPARING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PREPARING;
                        case f.CloudSyncStateTypes.PUSHING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PUSHING;
                        case f.CloudSyncStateTypes.PULLING:
                            return _.default.Messages.CLOUD_SYNC_ICON_TOOLTIP_PULLING;
                        default:
                            return null
                    }
                }
                render() {
                    let {
                        cloudSyncState: e,
                        libraryApplication: t,
                        className: n
                    } = this.props, s = null == e ? {
                        type: f.CloudSyncStateTypes.DONE
                    } : e, l = this.getIsRecentlySynced(), i = {};
                    (C.has(s.type) || l) && (i.gradientConfig = {
                        id: t.id,
                        startColor: "rgba(199, 208, 240, 1)",
                        stopColor: "rgba(114, 137, 218, 1)",
                        stop: this.getStop(s, l)
                    });
                    let o = l ? d.default : h[s.type];
                    return (0, a.jsx)(r.Tooltip, {
                        text: this.getTooltip(s, l),
                        children: e => (0, a.jsx)(o, {
                            className: n,
                            ...i,
                            ...e
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this._doneTimer = new i.Timeout
                }
            }
            var T = l.default.connectStores([o.default], e => {
                let {
                    libraryApplication: t
                } = e;
                return {
                    cloudSyncState: o.default.getState(t.id, t.branchId)
                }
            })(I)
        },
        762448: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("641608"),
                o = n("98328"),
                u = n("149851"),
                d = n("145131"),
                c = n("398288"),
                E = n("993105"),
                f = n("773336"),
                _ = n("50885"),
                C = n("782340"),
                h = n("148738"),
                I = n("926622");
            class T extends s.PureComponent {
                renderDiskUsageCircle() {
                    let {
                        metadata: e
                    } = this.props;
                    return null != e && null != e.availableKB && null != e.totalKB ? (0, a.jsx)(u.default, {
                        total: e.totalKB,
                        used: e.totalKB - e.availableKB
                    }) : null
                }
                renderViewing() {
                    let e, t;
                    let {
                        path: n,
                        label: s,
                        editingPath: l,
                        isDefault: r,
                        metadata: u
                    } = this.props;
                    return null != u && (e = null != u.availableKB ? (0, E.formatSize)(u.availableKB, {
                        useKibibytes: !0
                    }) : null, t = null != u.totalKB ? (0, E.formatSize)(u.totalKB, {
                        useKibibytes: !0
                    }) : null), (0, a.jsxs)(d.default, {
                        className: h.installationPath,
                        align: d.default.Align.CENTER,
                        children: [this.renderDiskUsageCircle(), (0, a.jsxs)(d.default, {
                            direction: d.default.Direction.VERTICAL,
                            className: h.descriptionWrapper,
                            children: [(0, a.jsxs)(d.default, {
                                align: d.default.Align.CENTER,
                                children: [(0, a.jsx)(i.Heading, {
                                    className: h.rowTitle,
                                    variant: "heading-md/semibold",
                                    children: null != s ? s : o.default.getLabelFromPath(n)
                                }), r ? (0, a.jsx)("span", {
                                    className: h.defaultIndicator,
                                    children: C.default.Messages.DEFAULT
                                }) : null]
                            }), null != u && null != e && null != t ? (0, a.jsx)(c.default, {
                                className: h.rowBody,
                                hoverText: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_SPACE.format({
                                    available: e,
                                    total: t
                                }),
                                children: n
                            }) : (0, a.jsx)(i.Text, {
                                className: h.rowBody,
                                variant: "text-xs/normal",
                                children: n
                            })]
                        }), (0, a.jsx)(i.Button, {
                            size: i.Button.Sizes.SMALL,
                            disabled: null != l,
                            color: i.Button.Colors.PRIMARY,
                            onClick: this.handleStartEditing,
                            children: C.default.Messages.EDIT
                        })]
                    })
                }
                renderEditing() {
                    let {
                        path: e,
                        hasGamesInstalledInPath: t
                    } = this.props, {
                        label: n,
                        isDefault: s
                    } = this.state;
                    return (0, a.jsx)(i.Card, {
                        editable: !0,
                        className: h.installationPathEditing,
                        children: (0, a.jsxs)(d.default, {
                            children: [this.renderDiskUsageCircle(), (0, a.jsxs)(d.default.Child, {
                                children: [(0, a.jsx)(i.FormItem, {
                                    title: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_NAME,
                                    children: (0, a.jsx)(i.TextInput, {
                                        value: n,
                                        placeholder: o.default.getLabelFromPath(e),
                                        onChange: this.handleLabelChange
                                    })
                                }), (0, a.jsx)(i.FormItem, {
                                    title: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION,
                                    className: I.marginTop20,
                                    children: (0, a.jsx)(i.TextInput, {
                                        disabled: !0,
                                        value: e
                                    })
                                }), (0, a.jsx)(i.Checkbox, {
                                    type: i.Checkbox.Types.INVERTED,
                                    value: null != s ? s : this.props.isDefault,
                                    disabled: this.props.isDefault,
                                    className: h.defaultLocationCheckbox,
                                    onChange: this.handleToggleDefault,
                                    children: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_MAKE_DEFAULT
                                }), (0, a.jsx)(i.FormDivider, {
                                    className: h.separator
                                }), (0, a.jsxs)(d.default, {
                                    children: [(0, a.jsx)(i.Button, {
                                        disabled: t || this.props.isDefault,
                                        size: i.Button.Sizes.SMALL,
                                        color: i.Button.Colors.RED,
                                        look: i.Button.Looks.OUTLINED,
                                        onClick: this.handleRemoveLocation,
                                        children: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE
                                    }), (0, a.jsxs)(d.default, {
                                        justify: d.default.Justify.END,
                                        children: [(0, a.jsx)(i.Button, {
                                            size: i.Button.Sizes.SMALL,
                                            color: i.Button.Colors.PRIMARY,
                                            look: i.Button.Looks.LINK,
                                            onClick: this.handleStopEditing,
                                            children: C.default.Messages.CANCEL
                                        }), (0, a.jsx)(i.Button, {
                                            disabled: e === this.props.path && n === this.props.label && s === this.props.isDefault,
                                            size: i.Button.Sizes.SMALL,
                                            color: i.Button.Colors.GREEN,
                                            onClick: this.handleSaveChanges,
                                            children: C.default.Messages.SAVE
                                        })]
                                    })]
                                })]
                            })]
                        })
                    })
                }
                render() {
                    return this.props.editingPath === this.props.path ? this.renderEditing() : this.renderViewing()
                }
                constructor(...e) {
                    super(...e), this.state = {
                        label: void 0,
                        isDefault: null
                    }, this.handleStartEditing = () => {
                        let {
                            path: e,
                            label: t,
                            isDefault: n,
                            onToggleEditing: a
                        } = this.props;
                        a(e), this.setState({
                            label: t,
                            isDefault: n
                        })
                    }, this.handleStopEditing = () => {
                        let {
                            onToggleEditing: e
                        } = this.props;
                        e(null), this.setState({
                            label: void 0,
                            isDefault: null
                        })
                    }, this.handleRemoveLocation = () => {
                        (0, i.openModal)(e => (0, a.jsx)(i.ConfirmModal, {
                            ...e,
                            header: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                            confirmText: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_REMOVE,
                            cancelText: C.default.Messages.CANCEL,
                            onConfirm: () => {
                                this.handleStopEditing(), (0, r.removeInstallLocation)(this.props.path)
                            },
                            children: (0, a.jsx)(i.Text, {
                                variant: "text-md/normal",
                                children: C.default.Messages.USER_SETTINGS_GAMES_REMOVE_LOCATION_BODY
                            })
                        }))
                    }, this.handleSaveChanges = () => {
                        (0, r.updateInstallLocation)(this.props.path, {
                            label: null != this.state.label ? this.state.label : this.props.label,
                            isDefault: null != this.state.isDefault ? this.state.isDefault : this.props.isDefault
                        }), this.handleStopEditing()
                    }, this.handleLabelChange = e => {
                        this.setState({
                            label: e
                        })
                    }, this.handleToggleDefault = () => {
                        this.setState({
                            isDefault: !this.state.isDefault
                        })
                    }
                }
            }
            class S extends s.PureComponent {
                componentDidMount() {
                    (0, r.fetchMetadata)(this.props.installationPaths.map(e => {
                        let {
                            path: t
                        } = e;
                        return t
                    }))
                }
                render() {
                    let {
                        installationPaths: e,
                        installationPathsMetadata: t,
                        defaultInstallationPath: n
                    } = this.props, {
                        editingPath: s
                    } = this.state;
                    return (0, a.jsxs)(i.FormSection, {
                        className: h.wrapper,
                        title: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATIONS,
                        children: [e.map(e => {
                            let {
                                path: l,
                                label: i
                            } = e;
                            return (0, a.jsx)(T, {
                                path: l,
                                label: i,
                                metadata: t[l],
                                isDefault: n === l,
                                editingPath: s,
                                hasGamesInstalledInPath: o.default.hasGamesInstalledInPath(l),
                                onToggleEditing: this.handleToggleEditing
                            }, l)
                        }), (0, a.jsx)("div", {
                            className: h.buttonRowWrapper,
                            children: (0, a.jsx)(i.Button, {
                                disabled: !f.isPlatformEmbedded,
                                onClick: this.handleAddInstallationLocation,
                                size: i.Button.Sizes.SMALL,
                                children: C.default.Messages.USER_SETTINGS_GAMES_INSTALL_LOCATION_ADD
                            })
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        editingPath: null
                    }, this.handleAddInstallationLocation = () => {
                        _.default.showOpenDialog(["openDirectory"]).then(e => {
                            null != e && 0 !== e.length && null != e[0] && "undefined" !== e[0] && (0, r.addInstallLocation)(e[0])
                        })
                    }, this.handleToggleEditing = e => {
                        this.setState({
                            editingPath: e
                        })
                    }
                }
            }
            var N = l.default.connectStores([o.default], () => ({
                installationPaths: o.default.installationPaths,
                installationPathsMetadata: o.default.installationPathsMetadata,
                defaultInstallationPath: o.default.defaultInstallationPath
            }))(S)
        },
        661804: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            }), n("222007");
            var a, s = n("37983"),
                l = n("884691"),
                i = n("414456"),
                r = n.n(i),
                o = n("77078"),
                u = n("913144"),
                d = n("939488"),
                c = n("157552"),
                E = n("444949"),
                f = n("901582"),
                _ = n("778043"),
                C = n("875358"),
                h = n("737295"),
                I = n("153034"),
                T = n("129215"),
                S = n("49111"),
                N = n("677654");
            a = class extends l.PureComponent {
                componentDidMount() {
                    d.setHomeLink(S.Routes.APPLICATION_LIBRARY), (0, _.deepLinkRouteIfLanded)(S.RPCDeepLinks.LIBRARY), u.default.wait(() => (0, c.fetchBranches)()), (0, E.fetchActivityStatistics)(), null != this._scrollToOnMount && null != this._scrollerRef.current && this.scrollToRow(this._scrollToOnMount, this._scrollToPadding)
                }
                renderToolbar() {
                    return (0, s.jsx)(C.default, {})
                }
                render() {
                    let {
                        includeUpdatesInScroller: e
                    } = this.state, t = (0, s.jsx)("div", {
                        children: (0, s.jsx)(f.default, {
                            section: S.AnalyticsSections.LIBRARY_INSTALL_MODULE,
                            children: (0, s.jsx)(T.default, {
                                onHeightTallerThanHalfViewportChange: this.handleHeightTallerThanHalfViewportChange
                            })
                        })
                    });
                    return (0, s.jsxs)(l.Fragment, {
                        children: [(0, s.jsx)(h.default, {
                            currentRoute: S.Routes.APPLICATION_LIBRARY,
                            renderToolbar: this.renderToolbar
                        }), e ? null : t, (0, s.jsxs)(o.AdvancedScrollerAuto, {
                            className: r(N.container, N.scroller),
                            ref: this._scrollerRef,
                            children: [e ? t : null, (0, s.jsx)(f.default, {
                                section: S.AnalyticsSections.LIBRARY_APPLICATION_LIST,
                                children: (0, s.jsx)(I.default, {
                                    stickyHeader: !e,
                                    scrollToRow: this.scrollToRow
                                })
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this._scrollerRef = l.createRef(), this._scrollToPadding = 0, this.state = {
                        includeUpdatesInScroller: !1
                    }, this.handleHeightTallerThanHalfViewportChange = e => {
                        this.setState({
                            includeUpdatesInScroller: e
                        })
                    }, this.scrollToRow = (e, t) => {
                        let n = this._scrollerRef.current;
                        null != n ? (e.focus(), n.scrollIntoViewRect({
                            start: t,
                            end: t
                        }), this._scrollToOnMount = null) : (this._scrollToOnMount = e, this._scrollToPadding = t)
                    }
                }
            }
        },
        928056: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("438931"),
                o = n("845579"),
                u = n("577427"),
                d = n("145131"),
                c = n("945330"),
                E = n("599110"),
                f = n("568734"),
                _ = n("602043"),
                C = n("737295"),
                h = n("762448"),
                I = n("49111"),
                T = n("782340"),
                S = n("352561");

            function N(e) {
                let {
                    applicationViewItems: t,
                    restoreApplication: n
                } = e;
                if (0 === t.length) return null;
                let s = t.map(e => {
                    let t = e.libraryApplication.getDistributor();
                    return (0, a.jsxs)("div", {
                        className: S.hiddenLibraryApplication,
                        children: [(0, a.jsxs)(d.default, {
                            direction: d.default.Direction.VERTICAL,
                            className: S.hiddenLibraryApplicationContent,
                            children: [(0, a.jsx)("div", {
                                className: S.applicationName,
                                children: e.libraryApplication.getBranchedName(e.application)
                            }), null != t ? (0, a.jsx)("div", {
                                className: S.applicationSubText,
                                children: I.DistributorNames[t]
                            }) : null]
                        }), (0, a.jsx)(i.Clickable, {
                            className: S.restoreButton,
                            onClick: () => n(e.libraryApplication),
                            children: (0, a.jsx)(c.default, {
                                className: S.restoreIcon
                            })
                        })]
                    }, e.key)
                });
                return (0, a.jsxs)(i.FormSection, {
                    className: S.hiddenLibraryApplications,
                    children: [(0, a.jsx)(i.FormTitle, {
                        className: S.hiddenLibraryApplicationsTitle,
                        children: T.default.Messages.SETTINGS_GAMES_HIDDEN_LIBRARY_APPLICATIONS_LABEL
                    }), s]
                })
            }
            class A extends s.PureComponent {
                handleToggleShortcutDesktop(e) {
                    o.InstallShortcutDesktop.updateSetting(e)
                }
                handleToggleShortcutStartMenu(e) {
                    o.InstallShortcutStartMenu.updateSetting(e)
                }
                trackRestoreApplication(e, t) {
                    E.default.track(I.AnalyticEvents.APPLICATION_SETTINGS_UPDATED, {
                        hidden_enabled: t,
                        ...e.getAnalyticsData()
                    })
                }
                renderBody() {
                    let {
                        hiddenLibraryApplicationViewItems: e,
                        installShortcutDesktop: t,
                        installShortcutStartMenu: n
                    } = this.props;
                    return (0, a.jsxs)("div", {
                        className: S.body,
                        children: [(0, _.isSupportedPlatform)() ? (0, a.jsxs)(s.Fragment, {
                            children: [(0, a.jsx)(i.FormSwitch, {
                                value: t,
                                onChange: this.handleToggleShortcutDesktop,
                                note: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP_NOTE,
                                children: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_DESKTOP
                            }), (0, a.jsx)(i.FormSwitch, {
                                value: n,
                                onChange: this.handleToggleShortcutStartMenu,
                                note: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_START_MENU_NOTE,
                                children: T.default.Messages.USER_SETTINGS_GAMES_SHORTCUTS_START_MENU
                            }), (0, a.jsx)(h.default, {})]
                        }) : null, (0, a.jsx)(N, {
                            restoreApplication: this.handleRestoreHiddenLibraryApplication,
                            applicationViewItems: e
                        })]
                    })
                }
                render() {
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(C.default, {
                            currentRoute: I.Routes.APPLICATION_LIBRARY_SETTINGS
                        }), (0, a.jsx)(i.ScrollerAuto, {
                            className: S.scroller,
                            children: this.renderBody()
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleRestoreHiddenLibraryApplication = e => {
                        let t = f.toggleFlag(e.getFlags(), I.LibraryApplicationFlags.HIDDEN);
                        r.updateFlags(e.id, e.branchId, t), this.trackRestoreApplication(e, f.hasFlag(t, I.LibraryApplicationFlags.HIDDEN))
                    }
                }
            }

            function m() {
                let e = {
                    installShortcutDesktop: o.InstallShortcutDesktop.useSetting(),
                    installShortcutStartMenu: o.InstallShortcutStartMenu.useSetting(),
                    hiddenLibraryApplicationViewItems: (0, l.useStateFromStores)([u.default], () => u.default.hiddenLibraryApplicationViewItems)
                };
                return (0, a.jsx)(A, {
                    ...e
                })
            }
        },
        153034: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return F
                }
            }), n("70102"), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("90915"),
                o = n("446674"),
                u = n("862337"),
                d = n("769846"),
                c = n("77078"),
                E = n("913144"),
                f = n("272030"),
                _ = n("259083"),
                C = n("790219"),
                h = n("827825"),
                I = n("577427"),
                T = n("946749"),
                S = n("145131"),
                N = n("953109"),
                A = n("280174"),
                m = n("158352"),
                p = n("867544"),
                g = n("216422"),
                R = n("688342"),
                O = n("599110"),
                L = n("964889"),
                v = n("159885"),
                M = n("950395"),
                P = n("49111"),
                D = n("782340"),
                y = n("304686");
            let x = (0, v.cssValueToNumber)(d.default.GAME_LIST_ROW_MIN_HEIGHT),
                U = (0, v.cssValueToNumber)(d.default.GAME_LIST_LINKED_TO_GLOW_DURATION),
                b = Object.freeze({
                    [P.GameTableListKeys.PLATFORM]: "Platform",
                    [P.GameTableListKeys.LAST_PLAYED]: "Last Played",
                    [P.GameTableListKeys.NAME]: "Name"
                }),
                G = e => {
                    let {
                        flag: t,
                        icon: n,
                        item: s,
                        tooltip: l
                    } = e, r = s.libraryApplication.hasFlag(t);
                    return (0, a.jsx)(c.Tooltip, {
                        text: l,
                        children: e => (0, a.jsx)(n, {
                            className: i(y.settingIcon, {
                                [y.hidden]: !r
                            }),
                            ...e
                        })
                    })
                },
                j = [{
                    key: P.GameTableListKeys.NAME,
                    renderHeader: () => D.default.Messages.GAME_LIBRARY_LIST_HEADER_NAME,
                    sort: !0,
                    cellClassName: y.nameCell,
                    bodyCellClassName: y.nameBodyCell,
                    render: e => (0, a.jsxs)(S.default, {
                        align: S.default.Align.CENTER,
                        children: [(0, a.jsx)(N.default, {
                            game: e.application,
                            size: N.default.Sizes.SMALL,
                            className: y.gameIcon
                        }), (0, a.jsxs)("div", {
                            className: y.nameCellInfo,
                            children: [(0, a.jsx)("div", {
                                className: y.nameCellText,
                                children: e.libraryApplication.getBranchedName(e.application)
                            }), e.libraryApplication.hasFlag(P.LibraryApplicationFlags.PREMIUM) ? (0, a.jsx)(c.Tooltip, {
                                text: D.default.Messages.PREMIUM_GAME,
                                children: e => (0, a.jsx)(g.default, {
                                    className: y.nitroIcon,
                                    ...e
                                })
                            }) : null]
                        })]
                    })
                }, {
                    key: P.GameTableListKeys.PLATFORM,
                    renderHeader: () => D.default.Messages.GAME_LIBRARY_LIST_HEADER_PLATFORM,
                    sort: !0,
                    cellClassName: y.platformCell,
                    bodyCellClassName: y.textCell,
                    render(e) {
                        let t = e.libraryApplication.getDistributor();
                        return (0, a.jsx)(S.default, {
                            align: S.default.Align.CENTER,
                            children: null != t ? P.DistributorNames[t] : D.default.Messages.GAME_LIBRARY_NOT_APPLICABLE
                        })
                    }
                }, {
                    key: P.GameTableListKeys.LAST_PLAYED,
                    renderHeader: () => D.default.Messages.GAME_LIBRARY_LIST_HEADER_LAST_PLAYED,
                    sort: !0,
                    cellClassName: y.lastPlayedCell,
                    bodyCellClassName: y.textCell,
                    render(e) {
                        let t;
                        return t = e.isRunning ? D.default.Messages.GAME_LIBRARY_LAST_PLAYED_PLAYING_NOW : e.isNew ? D.default.Messages.GAME_LIBRARY_NEW : 0 !== e.lastPlayed ? (0, a.jsx)(A.default, {
                            end: e.lastPlayed,
                            location: A.default.Locations.GAME_LIBRARY_LAST_PLAYED
                        }) : D.default.Messages.GAME_LIBRARY_LAST_PLAYED_NONE, (0, a.jsx)(S.default, {
                            align: S.default.Align.CENTER,
                            className: i({
                                [y.lastPlayedCellNew]: e.isNew
                            }),
                            children: t
                        })
                    }
                }, {
                    key: P.GameTableListKeys.ACTIONS,
                    renderHeader: () => null,
                    cellClassName: y.actionsCell,
                    render(e, t, n) {
                        var l, r;
                        if (null == t) throw Error("No cell props defined.");
                        let o = e.key === t.activeRowKey;
                        return (0, a.jsxs)(s.Fragment, {
                            children: [(0, a.jsxs)("div", {
                                className: y.settingIcons,
                                children: [(0, a.jsx)(G, {
                                    flag: P.LibraryApplicationFlags.PRIVATE,
                                    item: e,
                                    icon: p.default,
                                    tooltip: D.default.Messages.GAME_LIBRARY_PRIVATE_TOOLTIP
                                }), (0, a.jsx)(G, {
                                    flag: P.LibraryApplicationFlags.OVERLAY_DISABLED,
                                    item: e,
                                    icon: R.default,
                                    tooltip: D.default.Messages.GAME_LIBRARY_OVERLAY_DISABLED_TOOLTIP
                                }), (0, a.jsx)(M.default, {
                                    className: i(y.settingIcon, {
                                        [y.hidden]: !e.supportsCloudSync
                                    }),
                                    libraryApplication: e.libraryApplication
                                })]
                            }), (0, L.isUserEntitledToLibraryApplication)(e.libraryApplication) ? (0, a.jsx)(h.default, {
                                analyticsListSort: (l = t.sortKey, r = t.sortDirection, "".concat(b[l], " ").concat(r === P.TableSortDirections.ASCENDING ? "ASC" : "DESC")),
                                analyticsListIndex: n,
                                source: P.AnalyticsLocations.APPLICATION_LIBRARY,
                                libraryApplication: e.libraryApplication,
                                color: o ? c.Button.Colors.GREEN : c.Button.Colors.PRIMARY,
                                isPlayShiny: o && e.defaultAction === P.LibraryApplicationActions.PLAY,
                                size: y.actionButtonSize,
                                hideProgress: null != e.defaultAction,
                                onDropdownOpen: () => null != t && t.setActiveRowKey(e),
                                onDropdownClose: () => null != t && t.clearActiveRowKey()
                            }) : (0, a.jsx)(C.default, {
                                skuId: e.libraryApplication.sku.id,
                                applicationId: e.application.id,
                                color: o ? c.Button.Colors.GREEN : c.Button.Colors.PRIMARY,
                                customDisabledColor: c.Button.Colors.PRIMARY,
                                size: y.actionButtonSize
                            })]
                        })
                    }
                }],
                w = e => {
                    let {
                        item: t,
                        activeRowKey: n,
                        highlightedApplicationKey: s,
                        onMouseEnter: l,
                        onMouseLeave: r,
                        onContextMenu: o,
                        setRef: u,
                        ...d
                    } = e, c = t.key === n, E = t.key === s;
                    return (0, a.jsx)("div", {
                        className: i({
                            [y.rowWrapperActive]: c && !E,
                            [y.rowWrapperGlow]: E,
                            [y.rowWrapper]: !c && !E,
                            [y.rowWrapperDim]: !c && !t.isLaunchable
                        }),
                        ref: e => u(e, t.key),
                        onMouseEnter: () => l(t),
                        onMouseLeave: r,
                        onContextMenu: e => o(e, t),
                        children: (0, a.jsx)("div", {
                            ...d
                        })
                    })
                };
            class k extends s.PureComponent {
                componentDidMount() {
                    let {
                        fetched: e
                    } = this.props;
                    e && (this.handleHighlightedApplicationKey(), this.trackViewed())
                }
                componentWillUnmount() {
                    this._didUnmount = !0
                }
                componentDidUpdate(e) {
                    !e.fetched && this.props.fetched && (this.handleHighlightedApplicationKey(), this.trackViewed());
                    let t = this.props.activeRowKey;
                    if (null != t && e.activeRowKey !== t && this.props.isNavigatingByKeyboard) {
                        let e = this._rowRefs[t];
                        null != e && (E.default.wait(f.closeContextMenu), this.props.scrollToRow(e, x))
                    }
                }
                handleHighlightedApplicationKey() {
                    let {
                        highlightedApplicationKey: e
                    } = this.state;
                    if (null != e && null != this._rowRefs[e]) {
                        this.props.scrollToRow(this._rowRefs[e], x);
                        let t = new u.Timeout;
                        t.start(U, () => {
                            !this._didUnmount && this.setState({
                                highlightedApplicationKey: null
                            })
                        })
                    }
                }
                trackViewed() {
                    let e = {
                            num_applications_total: 0,
                            num_applications_discord: 0,
                            num_applications_steam: 0,
                            num_applications_battlenet: 0,
                            num_applications_twitch: 0,
                            num_applications_uplay: 0,
                            num_applications_origin: 0,
                            num_applications_gog: 0,
                            num_applications_epic: 0
                        },
                        {
                            analyticsContext: t,
                            applicationViewItems: n
                        } = this.props;
                    for (let t of n) {
                        switch (t.libraryApplication.getDistributor()) {
                            case P.Distributors.DISCORD:
                                e.num_applications_discord++;
                                break;
                            case P.Distributors.STEAM:
                                e.num_applications_steam++;
                                break;
                            case P.Distributors.BATTLENET:
                                e.num_applications_battlenet++;
                                break;
                            case P.Distributors.TWITCH:
                                e.num_applications_twitch++;
                                break;
                            case P.Distributors.UPLAY:
                                e.num_applications_uplay++;
                                break;
                            case P.Distributors.ORIGIN:
                                e.num_applications_origin++;
                                break;
                            case P.Distributors.GOG:
                                e.num_applications_gog++;
                                break;
                            case P.Distributors.EPIC:
                                e.num_applications_epic++
                        }
                        e.num_applications_total++
                    }
                    O.default.track(P.AnalyticEvents.LIBRARY_VIEWED, {
                        ...e,
                        load_id: t.loadId
                    })
                }
                handleSort(e, t) {
                    _.sortList(e, t)
                }
                renderImportHelp() {
                    let e;
                    let {
                        applicationViewItems: t,
                        filterQuery: n
                    } = this.props, s = t.length > 0;
                    return s ? null : (e = "" !== n ? D.default.Messages.APPLICATION_LIBRARY_EMPTY_SEARCH_DESCRIPTION.format({
                        query: n
                    }) : D.default.Messages.APPLICATION_LIBRARY_EMPTY_STATE_DESCRIPTION_NO_IMPORT, (0, a.jsxs)("div", {
                        className: s ? y.emptyStateSmall : y.emptyStateLarge,
                        children: [(0, a.jsx)("div", {
                            className: y.emptyWumpus
                        }), (0, a.jsx)(S.default, {
                            grow: 0,
                            shrink: s ? 1 : 0,
                            direction: S.default.Direction.VERTICAL,
                            children: (0, a.jsxs)("div", {
                                className: y.emptyStateText,
                                children: [(0, a.jsx)("div", {
                                    className: y.emptyStateHeader,
                                    children: D.default.Messages.APPLICATION_LIBRARY_EMPTY_STATE_HEADER
                                }), (0, a.jsx)("div", {
                                    className: y.emptyStateDescription,
                                    children: e
                                })]
                            })
                        })]
                    }))
                }
                render() {
                    let {
                        sortKey: e,
                        sortDirection: t,
                        applicationViewItems: n,
                        activeRowKey: l,
                        stickyHeader: i
                    } = this.props, {
                        overflowMenuRowKey: r,
                        highlightedApplicationKey: o
                    } = this.state;
                    return (0, a.jsxs)(s.Fragment, {
                        children: [n.length > 0 ? (0, a.jsx)(m.default, {
                            columns: j,
                            data: n,
                            sortData: !1,
                            rowComponent: w,
                            className: y.table,
                            headerClassName: i ? y.stickyHeader : y.header,
                            headerCellClassName: y.headerCell,
                            sortedHeaderCellClassName: y.headerCellSorted,
                            bodyCellClassName: y.bodyCell,
                            rowClassName: y.row,
                            sortKey: e,
                            sortDirection: t,
                            stickyHeader: i,
                            rowProps: {
                                activeRowKey: null != r ? r : l,
                                highlightedApplicationKey: o,
                                onMouseEnter: this.handleRowMouseEnter,
                                onMouseLeave: this.handleRowMouseLeave,
                                onContextMenu: this.handleApplicationContextMenu,
                                setRef: this.setRowRef
                            },
                            cellProps: {
                                activeRowKey: null != r ? r : l,
                                onContextMenu: this.handleApplicationContextMenu,
                                setActiveRowKey: this.setActiveRowKey,
                                clearActiveRowKey: this.clearActiveRowKey,
                                sortKey: e,
                                sortDirection: t
                            },
                            onSort: this.handleSort
                        }) : null, this.renderImportHelp()]
                    })
                }
                constructor(...e) {
                    super(...e), this._didUnmount = !1, this._rowRefs = {}, this.state = {
                        overflowMenuRowKey: null,
                        highlightedApplicationKey: null != this.props.location.state ? this.props.location.state.applicationId : null
                    }, this.setActiveRowKey = e => {
                        this.setState({
                            overflowMenuRowKey: e.key
                        })
                    }, this.clearActiveRowKey = () => {
                        !this._didUnmount && this.setState({
                            overflowMenuRowKey: null
                        })
                    }, this.handleRowMouseEnter = e => {
                        !this.props.isNavigatingByKeyboard && _.updateActiveRowKey(e.key)
                    }, this.handleRowMouseLeave = () => {
                        !this.props.isNavigatingByKeyboard && _.updateActiveRowKey(null)
                    }, this.setRowRef = (e, t) => {
                        this._rowRefs[t] = e
                    }, this.handleApplicationContextMenu = (e, t) => {
                        this.setActiveRowKey(t);
                        let {
                            analyticsContext: s
                        } = this.props;
                        (0, f.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("975419").then(n.bind(n, "975419"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                applicationId: t.libraryApplication.id,
                                branchId: t.libraryApplication.branchId,
                                analyticsContext: s
                            })
                        }, {
                            onClose: this.clearActiveRowKey
                        })
                    }
                }
            }

            function F(e) {
                let t = s.useContext(O.AnalyticsContext),
                    n = (0, r.useLocation)(),
                    {
                        applicationViewItems: l,
                        filterQuery: i,
                        fetched: u
                    } = (0, o.useStateFromStoresObject)([I.default], () => ({
                        applicationViewItems: I.default.sortedFilteredLibraryApplicationViewItems,
                        filterQuery: I.default.applicationFilterQuery,
                        fetched: I.default.hasFetchedApplications
                    })),
                    {
                        sortKey: d,
                        sortDirection: c,
                        activeRowKey: E,
                        isNavigatingByKeyboard: f
                    } = (0, o.useStateFromStoresObject)([T.default], () => ({
                        sortKey: T.default.sortKey,
                        sortDirection: T.default.sortDirection,
                        activeRowKey: T.default.activeRowKey,
                        isNavigatingByKeyboard: T.default.isNavigatingByKeyboard
                    }));
                return (0, a.jsx)(k, {
                    ...e,
                    analyticsContext: t,
                    location: n,
                    applicationViewItems: l,
                    filterQuery: i,
                    fetched: u,
                    sortKey: d,
                    sortDirection: c,
                    activeRowKey: E,
                    isNavigatingByKeyboard: f
                })
            }
            k.defaultProps = {
                stickyHeader: !1
            }
        },
        449427: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("449918"),
                r = n("145131"),
                o = n("833923"),
                u = n("318042"),
                d = n("782340"),
                c = n("391269"),
                E = function(e) {
                    var t;
                    let {
                        title: n,
                        className: s,
                        color: E,
                        animate: f,
                        gradientStopColor: _,
                        getHistoricalTotalBytes: C
                    } = e, h = (0, i.useColorValue)(E).hex, I = null === (t = (0, i.useColorValue)(_)) || void 0 === t ? void 0 : t.hex;
                    return (0, a.jsx)(u.default, {
                        getHistoricalTotalBytes: C,
                        children: (e, t, i) => {
                            var u;
                            return (0, a.jsx)("div", {
                                className: l(c.monitor, s),
                                children: (0, a.jsxs)(r.default, {
                                    align: r.default.Align.CENTER,
                                    children: [(0, a.jsxs)(r.default, {
                                        className: c.text,
                                        direction: r.default.Direction.VERTICAL,
                                        children: [(0, a.jsx)("div", {
                                            className: c.title,
                                            children: n
                                        }), (0, a.jsx)("div", {
                                            className: c.rate,
                                            children: (u = e[e.length - 1] / t * 1e3) > 1e3 ? d.default.Messages.FILE_RATE_MB.format({
                                                size: Math.round(u / 1e3)
                                            }) : d.default.Messages.FILE_RATE_KB.format({
                                                size: Math.round(u)
                                            })
                                        })]
                                    }), (0, a.jsx)("div", {
                                        className: c.overflowContainer,
                                        children: (0, a.jsx)(o.default, {
                                            data: e,
                                            maxValue: Math.max(Math.max.apply(null, e), 1e3),
                                            className: c.sparkChart,
                                            updateInterval: t,
                                            color: h,
                                            gradientStopColor: I,
                                            numUpdatesToShow: i,
                                            animate: f,
                                            pixelWidth: 600,
                                            pixelHeight: 48,
                                            lineWidth: 4
                                        })
                                    })]
                                })
                            })
                        }
                    })
                }
        },
        129215: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ea
                }
            }), n("70102"), n("222007"), n("808653"), n("424973");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("446674"),
                d = n("669491"),
                c = n("819855"),
                E = n("77078"),
                f = n("913144"),
                _ = n("272030"),
                C = n("190017"),
                h = n("827825"),
                I = n("86621"),
                T = n("737960"),
                S = n("299285"),
                N = n("449918"),
                A = n("161778"),
                m = n("686470"),
                p = n("535974"),
                g = n("352326"),
                R = n("471671"),
                O = n("145131"),
                L = n("953109"),
                v = n("280174"),
                M = n("158352"),
                P = n("546671"),
                D = n("945330"),
                y = n("830837"),
                x = n("132755"),
                U = n("993105"),
                b = n("964889"),
                G = n("318042"),
                j = n("449427"),
                w = n("49111"),
                k = n("782340"),
                F = n("918702");
            let B = e => {
                    let {
                        className: t,
                        children: n,
                        onContextMenu: s,
                        item: l
                    } = e;
                    return (0, a.jsx)("div", {
                        className: t,
                        onContextMenu: e => s(e, l),
                        children: n
                    })
                },
                H = [d.default.unsafe_rawColors.BLUE_345.css, d.default.colors.INTERACTIVE_NORMAL.css],
                V = e => {
                    let {
                        tooltip: t,
                        onClick: n,
                        icon: s
                    } = e;
                    return (0, a.jsx)(E.Tooltip, {
                        text: t,
                        children: e => {
                            let {
                                onMouseEnter: l,
                                onMouseLeave: i
                            } = e;
                            return (0, a.jsx)(E.Button, {
                                "aria-label": t,
                                className: F.actionButton,
                                innerClassName: F.actionButtonContents,
                                color: E.Button.Colors.PRIMARY,
                                size: E.Button.Sizes.ICON,
                                onClick: n,
                                onMouseEnter: l,
                                onMouseLeave: i,
                                children: (0, a.jsx)(s, {
                                    className: F.actionIcon
                                })
                            })
                        }
                    })
                };

            function Y(e, t) {
                switch (t) {
                    case w.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
                    case w.DispatchApplicationStages.PLANNING:
                    case w.DispatchApplicationStages.FINALIZING:
                    case w.DispatchApplicationStages.ALLOCATING_DISK:
                        return "".concat(e);
                    default:
                        return (0, U.formatSize)(e, {
                            useKibibytes: !0
                        })
                }
            }
            let W = {
                [w.LocalDispatchApplicationStates.INSTALLING]: {
                    [v.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [v.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [v.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [v.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                },
                [w.LocalDispatchApplicationStates.UPDATING]: {
                    [v.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [v.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [v.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [v.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_UPDATING_UPDATING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                },
                [w.LocalDispatchApplicationStates.REPAIRING]: {
                    [v.TimeUnits.NONE]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING.format({
                        percent: e,
                        progress: t,
                        total: n
                    }),
                    [v.TimeUnits.SECONDS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_SECONDS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [v.TimeUnits.MINUTES]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_MINUTES.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    }),
                    [v.TimeUnits.HOURS]: (e, t, n, a) => k.default.Messages.GAME_LIBRARY_UPDATES_INSTALLING_HOURS.format({
                        percent: e,
                        progress: t,
                        total: n,
                        timeRemaining: a
                    })
                }
            };

            function K(e, t, n, a, s) {
                let l = W[t],
                    i = null != l ? Object.keys(l) : [],
                    {
                        unit: r,
                        time: o
                    } = (0, v.getTimeAndUnit)(null != e ? e / 60 : null, i);
                if (null != l && null != r) {
                    let e = l[r];
                    return null != e ? e(n, a, s, o) : null
                }
                return null
            }

            function z(e) {
                let {
                    type: t,
                    stage: n,
                    percent: a,
                    progress: s,
                    total: l,
                    secondsRemaining: i
                } = e, r = Y(l, n), o = Y(s, n);
                switch (n) {
                    case w.DispatchApplicationStages.QUEUED:
                        if (0 === s) return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER_NO_TRANSITION;
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_WAITING_FOR_ANOTHER.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.PLANNING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PLANNING.format({
                            percent: a
                        });
                    case w.DispatchApplicationStages.ALLOCATING_DISK:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_ALLOCATING_DISK.format({
                            percent: a
                        });
                    case w.DispatchApplicationStages.PATCHING:
                        return K(i, t, a, o, r);
                    case w.DispatchApplicationStages.FINALIZING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINALIZING.format({
                            percent: a
                        });
                    case w.DispatchApplicationStages.PAUSING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.VERIFYING:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_VERIFYING.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.POST_INSTALL_SCRIPTS:
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_POST_INSTALL_SCRIPTS.format({
                            percent: a,
                            progress: o,
                            total: r
                        });
                    case w.DispatchApplicationStages.REPAIRING:
                        if (t === w.LocalDispatchApplicationStates.REPAIRING) return K(i, t, a, o, r);
                        return k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_REPAIRING.format({
                            percent: a,
                            progress: o,
                            total: r
                        })
                }
                throw Error("Invalid Dispatch stage")
            }
            let q = {
                NAME: "name",
                PROGRESS: "progress",
                ACTIONS: "actions"
            };
            class Q extends s.PureComponent {
                get isFocused() {
                    let {
                        cellProps: e
                    } = this.props;
                    return null != e && e.isFocused
                }
                renderBody(e) {
                    let {
                        percent: t,
                        foregroundColor: n,
                        foregroundGradientColor: s,
                        message: l
                    } = e;
                    return (0, a.jsxs)(O.default, {
                        direction: O.default.Direction.VERTICAL,
                        children: [(0, a.jsx)(E.Progress, {
                            percent: t,
                            size: E.Progress.Sizes.SMALL,
                            foregroundColor: (0, N.getColor)(n),
                            foregroundGradientColor: null != s ? [(0, N.getColor)(s[0]), (0, N.getColor)(s[1])] : void 0,
                            animate: this.isFocused
                        }), (0, a.jsx)("div", {
                            className: F.progressCellText,
                            children: null != l ? l : ""
                        })]
                    })
                }
                renderStackedProgress(e) {
                    let {
                        percents: t,
                        message: n
                    } = e;
                    return (0, a.jsxs)(O.default, {
                        direction: O.default.Direction.VERTICAL,
                        children: [(0, a.jsx)(E.StackedProgress, {
                            percents: t,
                            size: E.Progress.Sizes.SMALL,
                            foregroundColors: H,
                            animate: this.isFocused
                        }), (0, a.jsx)("div", {
                            className: F.progressCellText,
                            children: null != n ? n : ""
                        })]
                    })
                }
                renderFinished() {
                    let {
                        item: e
                    } = this.props;
                    return this.renderBody({
                        message: k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_FINISHED.format({
                            remove: () => C.removeFinished(e.applicationId, e.branchId)
                        }),
                        foregroundColor: (0, c.isThemeLight)(e.theme) ? w.Color.PRIMARY_300 : w.Color.PRIMARY_500,
                        percent: 100
                    })
                }
                renderQueued() {
                    let e, t;
                    let {
                        item: {
                            state: n,
                            theme: a
                        }
                    } = this.props;
                    if (null != n) {
                        let {
                            progress: a,
                            total: s,
                            stage: l
                        } = n;
                        if (null != a && null != s) {
                            let n = Y(s, l),
                                i = Y(a, l);
                            t = b.calculateProgressPercentage(a, s);
                            let r = Math.floor(t);
                            e = l === w.DispatchApplicationStages.PAUSING ? k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSING.format({
                                percent: r,
                                progress: i,
                                total: n
                            }) : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_QUEUED.format({
                                percent: r,
                                progress: i,
                                total: n
                            })
                        }
                    }
                    return (null == t || null == e) && (t = 0, e = k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_QUEUED_NO_TRANSITION), this.renderBody({
                        percent: t,
                        foregroundColor: (0, c.isThemeLight)(a) ? w.Color.PRIMARY_300 : w.Color.PRIMARY_500,
                        message: e
                    })
                }
                renderPaused() {
                    let {
                        item: {
                            state: e,
                            theme: t
                        }
                    } = this.props;
                    if (null == e) return null;
                    let {
                        progress: n,
                        total: a
                    } = e;
                    if (null == n || null == a) return null;
                    let s = b.calculateProgressPercentage(n, a),
                        l = 0 === n && 1 === a ? k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSED_NO_TRANSITION : k.default.Messages.GAME_LIBRARY_UPDATES_PROGRESS_PAUSED.format({
                            percent: Math.floor(s),
                            progress: (0, U.formatSize)(n),
                            total: (0, U.formatSize)(a)
                        });
                    return this.renderBody({
                        message: l,
                        foregroundColor: (0, c.isThemeLight)(t) ? w.Color.PRIMARY_300 : w.Color.PRIMARY_500,
                        percent: s
                    })
                }
                renderProgressPatching() {
                    return (0, a.jsx)(G.default, {
                        getHistoricalTotalBytes: p.default.getHistoricalTotalBytesWritten,
                        updateInterval: 5e3,
                        children: this.renderProgressPatchingBody
                    })
                }
                renderProgressDefault() {
                    let {
                        state: e
                    } = this.props.item;
                    if (null == e) return null;
                    let {
                        total: t,
                        progress: n,
                        stage: a,
                        type: s
                    } = e;
                    if (null == t || null == n || null == a) return null;
                    let l = b.calculateProgressPercentage(n, t),
                        i = Math.floor(l);
                    return this.renderBody({
                        percent: l,
                        message: z({
                            type: s,
                            stage: a,
                            percent: i,
                            progress: n,
                            total: t
                        }),
                        foregroundColor: w.Color.BLUE_345
                    })
                }
                renderProgress() {
                    let {
                        state: e
                    } = this.props.item, t = null != e ? e.stage : null;
                    switch (t) {
                        case w.DispatchApplicationStages.PATCHING:
                        case w.DispatchApplicationStages.REPAIRING:
                            return this.renderProgressPatching();
                        default:
                            return this.renderProgressDefault()
                    }
                }
                render() {
                    let {
                        item: e,
                        cellProps: t
                    } = this.props;
                    if (e.finished) return this.renderFinished();
                    if (e.index > 0) return this.renderQueued();
                    if (null != e.state && (e.state.type === w.LocalDispatchApplicationStates.UPDATING || e.state.type === w.LocalDispatchApplicationStates.REPAIRING || e.state.type === w.LocalDispatchApplicationStates.INSTALLING)) return null != t && t.paused ? this.renderPaused() : this.renderProgress();
                    return null
                }
                constructor(...e) {
                    super(...e), this.renderProgressPatchingBody = (e, t) => {
                        let {
                            item: {
                                state: n
                            }
                        } = this.props;
                        if (null == n) return null;
                        let {
                            stage: a,
                            progress: s,
                            total: l,
                            type: i,
                            readerProgress: r
                        } = n;
                        if (null == s || null == l || null == a) return null;
                        let o = b.calculateProgressPercentage(s, l),
                            u = b.calculateProgressPercentage(null != r ? r : 0, l),
                            d = e[e.length - 1] / t * 1e3,
                            c = l - s,
                            E = z({
                                type: i,
                                stage: a,
                                percent: Math.floor(o),
                                progress: s,
                                total: l,
                                secondsRemaining: 0 !== d ? Math.max(1, c / d) : null
                            });
                        return this.renderStackedProgress({
                            percents: [o, u],
                            message: E
                        })
                    }
                }
            }
            let Z = () => (0, a.jsx)(V, {
                    icon: x.default,
                    tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_RESUME,
                    onClick: () => C.resume()
                }),
                X = () => (0, a.jsx)(V, {
                    icon: y.default,
                    tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_PAUSE,
                    onClick: () => C.pause()
                }),
                J = e => {
                    let {
                        item: t
                    } = e;
                    return (0, a.jsx)(V, {
                        icon: P.default,
                        tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_MOVE_UP,
                        onClick: () => C.moveUp(t.applicationId, t.branchId)
                    })
                },
                $ = e => {
                    let {
                        item: t
                    } = e;
                    return (0, a.jsx)(V, {
                        icon: D.default,
                        tooltip: k.default.Messages.GAME_LIBRARY_UPDATES_ACTION_REMOVE,
                        onClick: () => C.cancel(t.applicationId, t.branchId)
                    })
                },
                ee = [{
                    key: q.NAME,
                    cellClassName: F.nameCell,
                    render: e => (0, a.jsxs)(O.default, {
                        align: O.default.Align.CENTER,
                        children: [(0, a.jsx)(L.default, {
                            game: e.application,
                            className: F.gameIcon,
                            size: L.default.Sizes.SMALL
                        }), (0, a.jsx)("div", {
                            className: F.nameCellText,
                            children: e.application.name
                        })]
                    })
                }, {
                    key: q.PROGRESS,
                    cellClassName: F.progressCell,
                    headerCellClassName: F.progressCellHeader,
                    bodyCellClassName: F.progressCellBody,
                    render: (e, t) => (0, a.jsx)(Q, {
                        item: e,
                        cellProps: t
                    })
                }, {
                    key: q.ACTIONS,
                    cellClassName: F.actionsCell,
                    render(e, t) {
                        let n, s;
                        return e.finished ? n = null != e.libraryApplication ? (0, a.jsx)(h.default, {
                            libraryApplication: e.libraryApplication,
                            size: E.Button.Sizes.SMALL,
                            className: F.gameActionButton,
                            source: w.AnalyticsLocations.APPLICATION_LIBRARY_UPDATES
                        }) : null : null != e.state ? e.state.type !== w.LocalDispatchApplicationStates.UP_TO_DATE && (n = e.index > 0 ? (0, a.jsx)(J, {
                            item: e
                        }) : null != t && t.paused ? (0, a.jsx)(Z, {}) : (0, a.jsx)(X, {
                            item: e
                        }), s = (0, a.jsx)($, {
                            item: e
                        })) : s = (0, a.jsx)($, {
                            item: e
                        }), (0, a.jsxs)(O.default, {
                            justify: O.default.Justify.END,
                            children: [n, s]
                        })
                    }
                }];
            class et extends s.PureComponent {
                componentDidMount() {
                    window.addEventListener("resize", this.throttledUpdateHeight)
                }
                componentDidUpdate(e) {
                    this.props.height !== e.height && this.throttledUpdateHeight()
                }
                componentWillUnmount() {
                    let {
                        applications: e
                    } = this.props;
                    e.forEach(e => {
                        e.finished && f.default.wait(() => {
                            C.removeFinished(e.applicationId, e.branchId)
                        })
                    }), window.removeEventListener("resize", this.throttledUpdateHeight), this.isUnmounted = !0
                }
                render() {
                    let {
                        applications: e,
                        paused: t,
                        isFocused: s,
                        theme: l,
                        analyticsContext: r
                    } = this.props;
                    return 0 === e.length ? null : (0, a.jsxs)("div", {
                        className: F.gameUpdates,
                        children: [(0, a.jsxs)("div", {
                            className: F.headerRow,
                            children: [(0, a.jsx)(j.default, {
                                className: i(F.headerCell, F.networkProgress),
                                title: k.default.Messages.GAME_LIBRARY_UPDATES_HEADER_NETWORK,
                                getHistoricalTotalBytes: p.default.getHistoricalTotalBytesDownloaded,
                                color: w.Color.GREEN_360,
                                animate: s
                            }), (0, a.jsx)(j.default, {
                                className: i(F.headerCell, F.diskProgress),
                                title: k.default.Messages.GAME_LIBRARY_UPDATES_HEADER_DISK,
                                getHistoricalTotalBytes: p.default.getHistoricalTotalBytesWritten,
                                color: w.Color.BLUE_345,
                                animate: s
                            })]
                        }), (0, a.jsx)(M.default, {
                            hasHeader: !1,
                            columns: ee,
                            data: e,
                            className: F.table,
                            rowClassName: F.row,
                            rowComponent: B,
                            cellProps: {
                                paused: t,
                                isFocused: s,
                                theme: l
                            },
                            rowProps: {
                                onContextMenu: (e, t) => {
                                    var s, l, i;
                                    return s = e, l = t, i = r, void _.openContextMenuLazy(s, async () => {
                                        let {
                                            default: e
                                        } = await n.el("975419").then(n.bind(n, "975419"));
                                        return t => (0, a.jsx)(e, {
                                            ...t,
                                            applicationId: l.applicationId,
                                            branchId: l.branchId,
                                            analyticsContext: i
                                        })
                                    })
                                }
                            },
                            bodyCellClassName: F.cell
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.isUnmounted = !1, this.isTallerThanHalfViewport = !1, this.throttledUpdateHeight = o.throttle(() => {
                        if (this.isUnmounted) return;
                        let {
                            height: e,
                            onHeightTallerThanHalfViewportChange: t
                        } = this.props, n = e > window.innerHeight / 2;
                        this.isTallerThanHalfViewport !== n && (this.isTallerThanHalfViewport = n, t(n))
                    }, 1e3)
                }
            }

            function en(e, t, n, a) {
                return e.reduce((e, s, l) => {
                    let {
                        applicationId: i,
                        branchId: r
                    } = s, o = n.getApplication(i), u = a.getState(i, r);
                    return null != o && e.push({
                        key: "".concat(i, ":").concat(r),
                        applicationId: i,
                        branchId: r,
                        state: u,
                        application: o,
                        libraryApplication: m.default.getLibraryApplication(i, r),
                        finished: t,
                        index: l
                    }), e
                }, [])
            }
            var ea = (0, T.default)(u.default.connectStores([S.default, p.default, g.default, A.default, R.default], () => {
                let e = en(g.default.activeItems, !1, S.default, p.default),
                    t = en(g.default.finishedItems, !0, S.default, p.default);
                return {
                    applications: [...e, ...t],
                    paused: g.default.paused,
                    isFocused: R.default.isFocused(),
                    theme: A.default.theme
                }
            })((0, I.default)(et)))
        },
        389696: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TestModeSKUButtonEnums: function() {
                    return f
                },
                default: function() {
                    return C
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("272030"),
                o = n("741130"),
                u = n("299285"),
                d = n("552712"),
                c = n("271560"),
                E = n("782340");
            let f = {
                DropdownSizes: o.default.DropdownSizes,
                Sizes: o.default.Sizes,
                Colors: o.default.Colors,
                Looks: o.default.Looks
            };
            class _ extends s.PureComponent {
                render() {
                    let {
                        skus: e,
                        children: t,
                        applicationId: n,
                        primarySKU: s,
                        onSKUSelect: l,
                        ...i
                    } = this.props;
                    return (0, a.jsx)(o.default, {
                        onClick: this.handleClick,
                        onDropdownClick: e.length > 0 ? this.handleContextMenu : null,
                        onContextMenu: e.length > 0 ? this.handleContextMenu : void 0,
                        ...i,
                        children: t
                    })
                }
                constructor(...e) {
                    super(...e), this.renderContextMenu = () => {
                        let {
                            skus: e,
                            onSKUSelect: t,
                            onMenuSelect: n
                        } = this.props;
                        return (0, a.jsx)(i.Menu, {
                            onSelect: n,
                            navId: "test-skus",
                            "aria-label": E.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                            onClose: r.closeContextMenu,
                            children: e.map(e => (0, a.jsx)(i.MenuItem, {
                                id: "".concat(e.id),
                                label: e.name,
                                action: () => {
                                    null == t || t(e)
                                }
                            }, "".concat(e.id)))
                        })
                    }, this.handleContextMenu = e => {
                        e.stopPropagation(), r.openContextMenu(e, this.renderContextMenu)
                    }, this.handleClick = () => {
                        let {
                            onSKUSelect: e,
                            primarySKU: t
                        } = this.props;
                        null != t && (null == e || e(t))
                    }
                }
            }
            var C = l.default.connectStores([d.default, u.default], e => {
                var t;
                let {
                    applicationId: n
                } = e, a = (0, c.getPrimarySKUForApplication)(n, u.default, d.default);
                return {
                    skus: (null !== (t = d.default.getForApplication(n)) && void 0 !== t ? t : []).sort((e, t) => null != a && e.id === a.id ? -1 : null != a && t.id === a.id ? 1 : e.name >= t.name ? -1 : 1),
                    primarySKU: a
                }
            })(_)
        },
        630273: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("272030"),
                r = n("145079"),
                o = n("145131"),
                u = n("338143");
            class d extends s.PureComponent {
                handleContextMenu(e, t) {
                    (0, i.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("406784").then(n.bind(n, "406784"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            user: t
                        })
                    })
                }
                renderUser(e) {
                    return null == e ? null : (0, a.jsxs)(o.default, {
                        className: u.user,
                        align: o.default.Align.CENTER,
                        onContextMenu: t => {
                            null != e && this.handleContextMenu(t, e)
                        },
                        children: [(0, a.jsx)(l.Avatar, {
                            src: e.getAvatarURL(void 0, 24),
                            "aria-label": e.username,
                            size: l.AvatarSizes.SIZE_24,
                            className: u.avatar
                        }), (0, a.jsx)(r.default, {
                            user: e,
                            className: u.tag,
                            usernameClass: u.username,
                            discriminatorClass: u.discriminator
                        })]
                    }, e.id)
                }
                render() {
                    let {
                        party: e,
                        header: t
                    } = this.props, n = e.map(e => this.renderUser(e));
                    return (0, a.jsxs)("div", {
                        className: u.userList,
                        children: [(0, a.jsx)("div", {
                            className: u.header,
                            children: t
                        }), (0, a.jsx)(l.ScrollerThin, {
                            className: u.content,
                            fade: !0,
                            children: n
                        })]
                    })
                }
            }
            var c = d
        },
        650044: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                open: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("629109"),
                i = n("135230"),
                r = n("782340");
            let o = null;

            function u() {
                null !== o && (0, s.closeModal)(o), o = null
            }

            function d() {
                l.default.setSilenceWarning(!1), u()
            }

            function c() {
                o = (0, s.openModal)(e => (0, a.jsx)(i.default, {
                    title: r.default.Messages.CONFIRM_DISABLE_SILENCE_TITLE,
                    body: r.default.Messages.CONFIRM_DISABLE_SILENCE_BODY,
                    secondaryConfirmText: r.default.Messages.CONFIRM_DISABLE_SILENCE_DONT_SHOW,
                    onConfirmSecondary: d,
                    onConfirm: u,
                    confirmText: r.default.Messages.OKAY,
                    ...e
                }))
            }
        },
        945183: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return k
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("408166"),
                u = n("191225"),
                d = n("76393"),
                c = n("374014"),
                E = n("32346"),
                f = n("808422"),
                _ = n("233069"),
                C = n("373469"),
                h = n("271938"),
                I = n("42203"),
                T = n("305961"),
                S = n("42887"),
                N = n("385649"),
                A = n("945956"),
                m = n("18494"),
                p = n("280168"),
                g = n("800762"),
                R = n("316133"),
                O = n("449008"),
                L = n("709681"),
                v = n("49111");

            function M(e, t, n, a) {
                s.useEffect(() => {
                    let s = t(),
                        l = new r.BatchedStoreListener(e, () => {
                            let e = t(),
                                l = n(s, e);
                            null != l && !N.default.isSoundDisabled(l) && (0, L.playSound)(l, null != a ? a : .4), s = e
                        });
                    return l.attach("useSound"), () => l.detach()
                })
            }

            function P() {
                return M([S.default, m.default], () => ({
                    inVoiceChannel: null != m.default.getVoiceChannelId(),
                    selfMute: S.default.isSelfMute(),
                    selfDeaf: S.default.isSelfDeaf(),
                    audioPermissionReady: S.default.isNativeAudioPermissionReady()
                }), (e, t) => {
                    let {
                        inVoiceChannel: n,
                        selfMute: a,
                        selfDeaf: s,
                        audioPermissionReady: l
                    } = t;
                    return e.selfDeaf !== s ? s ? "deafen" : "undeafen" : l ? (n || e.audioPermissionReady) && e.selfMute !== a ? a ? "mute" : "unmute" : void 0 : void 0
                }), null
            }

            function D() {
                return M([I.default, A.default, m.default, d.default], () => {
                    let e = I.default.getChannel(m.default.getVoiceChannelId()),
                        t = null == e ? void 0 : e.type,
                        n = null == e ? void 0 : e.getGuildId(),
                        a = A.default.getWasEverRtcConnected(),
                        s = A.default.getState();
                    return {
                        channelType: t,
                        guildId: n,
                        connected: s === v.RTCConnectionStates.RTC_CONNECTED,
                        connectHasStarted: !a && s !== v.RTCConnectionStates.DISCONNECTED || s === v.RTCConnectionStates.RTC_CONNECTED,
                        awaitingRemote: null != d.default.getAwaitingRemoteSessionInfo(),
                        connectedRemote: null != d.default.getRemoteSessionId()
                    }
                }, (e, t) => {
                    let {
                        channelType: n,
                        connected: a,
                        connectHasStarted: s,
                        awaitingRemote: l,
                        connectedRemote: i
                    } = t, r = e.channelType, o = e.connectedRemote, u = e.connected, d = e.connectHasStarted;
                    if (!d && s || i && !o) {
                        if (null != n && _.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n)) return;
                        return "user_join"
                    }
                    if (u && !a) {
                        if (l || i || null != r && _.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(r)) return;
                        return "disconnect"
                    }
                }), null
            }

            function y() {
                return M([p.default], () => p.default.isCurrentUserSpeaking(), (e, t) => {
                    if (e !== t) {
                        let e = S.default.isSelfMute(),
                            n = S.default.getMode();
                        if (n === v.InputModes.PUSH_TO_TALK && !e) return t ? "ptt_start" : "ptt_stop"
                    }
                }), null
            }

            function x() {
                return M([S.default], () => S.default.isSelfMutedTemporarily(), (e, t) => {
                    if (e !== t) {
                        let e = S.default.isSelfMute(),
                            n = S.default.getMode();
                        if (n === v.InputModes.VOICE_ACTIVITY && !e) return t ? "ptt_stop" : "ptt_start"
                    }
                }), null
            }

            function U() {
                return M([g.default], () => g.default.userHasBeenMovedVersion, (e, t) => {
                    if (e !== t) return "user_moved"
                }), null
            }

            function b() {
                return M([m.default, g.default], () => {
                    let e = m.default.getVoiceChannelId();
                    if (null == e) return f.RequestToSpeakStates.NONE;
                    let t = g.default.getVoiceStateForChannel(e);
                    return (0, f.getAudienceRequestToSpeakState)(t)
                }, (e, t) => {
                    if (e !== t && t === f.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK) return "reconnect"
                }), null
            }

            function G() {
                return M([m.default, C.default, h.default, g.default, I.default], () => {
                    let e, t;
                    let n = m.default.getVoiceChannelId(),
                        a = h.default.getId();
                    let s = [],
                        l = null,
                        i = 0,
                        r = C.default.getAllActiveStreams();
                    if (null != n) {
                        let a = I.default.getChannel(n);
                        null != a && (e = a.type, t = R.default.countVoiceStatesForChannel(a.id) - (g.default.isInChannel(a.id) ? 1 : 0), s = C.default.getAllApplicationStreamsForChannel(a.id).map(e => e.ownerId))
                    }
                    let o = null;
                    return (null == (o = 1 === r.length ? r[0] : C.default.getCurrentUserActiveStream()) ? void 0 : o.state) === v.ApplicationStreamStates.CONNECTING && (o = null), null != o && (l = (0, c.encodeStreamKey)(o), i = C.default.getViewerIds(l).filter(e => e !== a).length), {
                        channelType: e,
                        voiceChannelId: n,
                        voiceChannelUserCount: t,
                        streamingUserIds: s,
                        singleActiveStreamKey: l,
                        singleActiveStreamViewerCount: i,
                        currentUserId: a,
                        allActiveStreams: r
                    }
                }, (e, t) => {
                    let {
                        channelType: n,
                        voiceChannelId: a,
                        voiceChannelUserCount: s,
                        streamingUserIds: l,
                        singleActiveStreamKey: i,
                        singleActiveStreamViewerCount: r,
                        currentUserId: o
                    } = t;
                    if (e.voiceChannelId !== a || null == a || function(e) {
                            let t = I.default.getChannel(e);
                            if (null == t) return !1;
                            let n = t.getGuildId();
                            if (null == n) return !1;
                            let a = T.default.getGuild(n);
                            return null != a && a.afkChannelId === t.id
                        }(a) || null != n && _.SILENT_JOIN_LEAVE_CHANNEL_TYPES.has(n)) return;
                    let u = null != i && e.singleActiveStreamKey === i,
                        d = l.some(t => !e.streamingUserIds.includes(t)),
                        c = e.allActiveStreams.map(e => e.ownerId),
                        E = e.streamingUserIds.some(e => !l.includes(e) && (e === o || c.includes(e)));
                    if (d) return "stream_started";
                    if (E) return "stream_ended";
                    if (e.singleActiveStreamViewerCount <= 25 && u && r > e.singleActiveStreamViewerCount) return "stream_user_joined";
                    else if (null != e.voiceChannelUserCount && null != s && e.voiceChannelUserCount <= 25 && s > e.voiceChannelUserCount) return "user_join";
                    else if (null != e.voiceChannelUserCount && null != s && e.voiceChannelUserCount <= 25 && s < e.voiceChannelUserCount) return "user_leave";
                    else if (e.singleActiveStreamViewerCount <= 25 && u && r < e.singleActiveStreamViewerCount) return "stream_user_left"
                }), null
            }

            function j() {
                return M([m.default, u.default, h.default], () => {
                    let e = m.default.getVoiceChannelId(),
                        t = h.default.getId(),
                        n = (0, O.isNotNullish)(e) ? u.default.getEmbeddedActivitiesForChannel(e) : u.NO_ACTIVITIES;
                    return {
                        voiceChannelId: e,
                        currentUserId: t,
                        channelActivities: n
                    }
                }, (e, t) => {
                    let n, {
                        voiceChannelId: a,
                        currentUserId: s,
                        channelActivities: l
                    } = t;
                    if (null == a) return;
                    let {
                        enabled: i
                    } = o.ActivitiesSoundsExperiment.getCurrentConfig({
                        location: "5ef733_1"
                    }, {
                        autoTrackExposure: !1
                    }), r = !1;
                    e.channelActivities.length < l.length && (n = "activity_launch", r = !0);
                    let u = e.channelActivities.find(e => e.connections.has(s)),
                        d = l.find(e => e.connections.has(s));
                    if (void 0 === d && (0, O.isNotNullish)(u) && (n = "activity_end", r = !0), void 0 === u && (0, O.isNotNullish)(d) && d.connections.size > 1 && (n = "activity_user_join", r = !0), (0, O.isNotNullish)(d) && (0, O.isNotNullish)(u) && (d.connections.size > u.connections.size && (n = "activity_user_join", r = !0), d.connections.size < u.connections.size && (n = "activity_user_left", r = !0)), r && o.ActivitiesSoundsExperiment.trackExposure({
                            location: "5ef733_2"
                        }), i) return n
                }), null
            }

            function w() {
                return M([E.default, m.default], () => ({
                    hangStatus: E.default.getCurrentHangStatus(),
                    customHangStatus: E.default.getCustomHangStatus(),
                    inVoice: null != m.default.getVoiceChannelId()
                }), (e, t) => {
                    var n, a;
                    let {
                        hangStatus: s,
                        customHangStatus: l
                    } = t;
                    if (e.inVoice && (null != s && s !== e.hangStatus || null != l && (l.status !== (null === (n = e.customHangStatus) || void 0 === n ? void 0 : n.status) || !i.isEqual(l.emoji, null === (a = e.customHangStatus) || void 0 === a ? void 0 : a.emoji)))) return "hang_status_select"
                }, .15), null
            }

            function k() {
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(P, {}), (0, a.jsx)(D, {}), (0, a.jsx)(y, {}), (0, a.jsx)(x, {}), (0, a.jsx)(U, {}), (0, a.jsx)(G, {}), (0, a.jsx)(b, {}), (0, a.jsx)(j, {}), (0, a.jsx)(w, {})]
                })
            }
        },
        31: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EducationIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M22.564 9.628 12.802 13.9a2 2 0 0 1-1.604 0L5 11.188V15a1 1 0 1 1-2 0v-4.687l-1.564-.685a.75.75 0 0 1-.046-1.352l9.686-5.045a2 2 0 0 1 1.848 0l9.686 5.045a.75.75 0 0 1-.046 1.352Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M6.976 18.978a.482.482 0 0 1-.277-.383l-.178-1.425a1 1 0 0 0-.098-.323l-.37-.741A.5.5 0 0 1 6 15.882v-1.695a.5.5 0 0 1 .697-.46l4.91 2.104a1 1 0 0 0 .787 0l5.909-2.532a.5.5 0 0 1 .697.46v3.438a.828.828 0 0 1-.183.544C17.652 19.106 14.647 20 12 20c-1.725 0-3.603-.38-5.024-1.022ZM3.383 17a1 1 0 0 0-.993.876l-.25 2A1 1 0 0 0 3.133 21h1.734a1 1 0 0 0 .992-1.124l-.25-2A1 1 0 0 0 4.617 17H3.383Z",
                        className: r
                    })]
                })
            }
        },
        225288: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                QrCodeCameraIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M4 6a2 2 0 0 1 2-2h3a1 1 0 0 0 0-2H6a4 4 0 0 0-4 4v3a1 1 0 0 0 2 0V6ZM4 18a2 2 0 0 0 2 2h3a1 1 0 1 1 0 2H6a4 4 0 0 1-4-4v-3a1 1 0 1 1 2 0v3ZM20 6a2 2 0 0 0-2-2h-3a1 1 0 1 1 0-2h3a4 4 0 0 1 4 4v3a1 1 0 1 1-2 0V6Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        fillRule: "evenodd",
                        d: "M5 7a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7Zm2 0h2v2H7V7ZM5 15a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-2Zm2 0h2v2H7v-2ZM13 7a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2V7Zm2 0h2v2h-2V7ZM17.081 13a1.5 1.5 0 0 0-1.423 1.026c-.084.253-.294.474-.56.474H15a2 2 0 0 0-2 2V20a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-3.5a2 2 0 0 0-2-2h-.097c-.267 0-.477-.221-.561-.474A1.5 1.5 0 0 0 18.919 13H17.08ZM20 18a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z",
                        clipRule: "evenodd",
                        className: r
                    })]
                })
            }
        },
        91297: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ScienceIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        fillRule: "evenodd",
                        d: "M19.505 15.456a13.205 13.205 0 0 0-.729-1.612 25.31 25.31 0 0 1-2.298 2.634c-2.335 2.334-4.918 4.047-7.243 4.903-2.237.825-4.629.979-6.112-.504-1.483-1.484-1.329-3.875-.504-6.112.329-.893.784-1.824 1.352-2.765A16.283 16.283 0 0 1 2.62 9.235c-.825-2.237-.98-4.628.504-6.112C4.606 1.64 6.998 1.794 9.235 2.62A16.28 16.28 0 0 1 12 3.97c1.593-.962 3.184-1.615 4.621-1.862 1.583-.27 3.17-.072 4.256 1.014 1.483 1.483 1.329 3.875.504 6.112-.329.893-.784 1.824-1.352 2.765.568.94 1.023 1.872 1.352 2.765.825 2.237.979 4.628-.504 6.112-1.09 1.09-2.677 1.29-4.295 1.006a1.5 1.5 0 1 1 .826-1.903c1.002.094 1.673-.136 2.054-.518.6-.599.81-1.921.043-4.006ZM8.544 4.496c1.996.735 4.342 2.263 6.52 4.44A22.813 22.813 0 0 1 17.643 12a22.823 22.823 0 0 1-2.58 3.063A22.824 22.824 0 0 1 12 17.643a22.828 22.828 0 0 1-3.064-2.58A22.813 22.813 0 0 1 6.356 12a22.6 22.6 0 0 1 2.278-2.756 1.5 1.5 0 1 0-1.608-1.212 24.995 24.995 0 0 0-1.802 2.124 13.207 13.207 0 0 1-.729-1.612c-.768-2.085-.557-3.407.042-4.007.6-.599 1.922-.81 4.007-.042Zm-4.049 10.96c.19-.517.434-1.057.729-1.612a25.3 25.3 0 0 0 2.298 2.634 25.29 25.29 0 0 0 2.634 2.298 13.21 13.21 0 0 1-1.612.729c-2.085.768-3.407.557-4.007-.043-.599-.599-.81-1.921-.042-4.006ZM16.96 4.081c-.914.156-1.977.539-3.115 1.143.894.675 1.78 1.445 2.634 2.298a25.3 25.3 0 0 1 2.298 2.634c.294-.555.538-1.095.729-1.612.768-2.085.557-3.407-.043-4.007-.432-.432-1.23-.674-2.503-.456Z",
                        clipRule: "evenodd",
                        className: r
                    })]
                })
            }
        },
        696526: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SettingsCircleIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    secondaryColor: i = s.default.colors.STATUS_DANGER,
                    secondaryColorClass: r = "",
                    color: o = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: u = "",
                    ...d
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(d),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("circle", {
                        cx: "19",
                        cy: "19",
                        r: "5",
                        fill: "string" == typeof i ? i : i.css,
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof o ? o : o.css,
                        d: "M9.922 2.077c-.07-.451.183-.924.636-.983a11.104 11.104 0 0 1 2.884 0c.454.06.706.532.636.983-.178 1.167.188 2.202.984 2.532.795.33 1.786-.144 2.485-1.094.27-.368.782-.524 1.145-.246a11.065 11.065 0 0 1 2.04 2.04c.277.362.122.874-.247 1.145-.95.698-1.424 1.689-1.094 2.485.33.796 1.366 1.161 2.532.983.451-.07.924.183.983.636a11.104 11.104 0 0 1 .088 1.822c-.013.377-.439.577-.774.403A6.97 6.97 0 0 0 19 12c-.848 0-1.66.15-2.412.427-.276.1-.588-.133-.588-.427a4 4 0 1 0-4 4c.294 0 .528.312.427.588A6.986 6.986 0 0 0 12 19a6.97 6.97 0 0 0 .783 3.22c.174.335-.026.76-.403.774a11.39 11.39 0 0 1-1.822-.088c-.453-.059-.705-.531-.636-.983.178-1.166-.187-2.202-.983-2.532-.796-.33-1.787.144-2.485 1.094-.27.369-.783.524-1.146.246a11.064 11.064 0 0 1-2.04-2.04c-.277-.362-.121-.874.247-1.144.95-.699 1.424-1.69 1.094-2.486-.33-.796-1.365-1.161-2.532-.983-.451.07-.924-.183-.983-.636a11.1 11.1 0 0 1 0-2.884c.059-.453.532-.705.983-.636 1.167.178 2.202-.187 2.532-.983.33-.796-.144-1.787-1.094-2.485-.368-.271-.524-.783-.246-1.146a11.065 11.065 0 0 1 2.04-2.04c.362-.277.874-.122 1.145.247.698.95 1.689 1.424 2.485 1.094.796-.33 1.161-1.366.983-2.532Z",
                        className: u
                    })]
                })
            }
        },
        582601: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                SettingsInfoIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        d: "M10.558 1.094c-.453.059-.705.532-.636.983.178 1.166-.187 2.202-.983 2.532-.796.33-1.787-.144-2.485-1.094-.27-.369-.783-.524-1.146-.246a11.065 11.065 0 0 0-2.04 2.04c-.277.362-.121.874.247 1.145.95.698 1.424 1.689 1.094 2.485-.33.796-1.365 1.161-2.532.983-.451-.07-.924.183-.983.636a11.102 11.102 0 0 0 0 2.884c.059.453.532.705.983.636 1.167-.178 2.202.188 2.532.983.33.796-.144 1.787-1.094 2.486-.368.27-.524.782-.246 1.145a11.064 11.064 0 0 0 2.04 2.04c.362.277.874.122 1.145-.247.698-.95 1.689-1.424 2.485-1.094.796.33 1.161 1.366.983 2.532-.07.452.183.924.636.983a11.1 11.1 0 0 0 1.822.088c.377-.013.577-.439.403-.774A6.97 6.97 0 0 1 12 19c0-.848.15-1.66.427-2.412.1-.276-.133-.588-.427-.588a4 4 0 1 1 4-4c0 .294.312.528.588.427A6.986 6.986 0 0 1 19 12a6.97 6.97 0 0 1 3.22.783c.335.174.76-.026.774-.403a11.39 11.39 0 0 0-.088-1.822c-.059-.453-.532-.705-.983-.636-1.166.178-2.202-.187-2.532-.983-.33-.796.144-1.787 1.094-2.485.369-.271.524-.783.246-1.146a11.065 11.065 0 0 0-2.039-2.039c-.363-.278-.875-.122-1.145.246-.699.95-1.69 1.424-2.485 1.094-.796-.33-1.162-1.365-.983-2.532.069-.451-.183-.924-.637-.983a11.104 11.104 0 0 0-2.884 0Z",
                        fill: "string" == typeof i ? i : i.css,
                        className: r
                    }), (0, a.jsx)("path", {
                        fillRule: "evenodd",
                        d: "M19 24a5 5 0 1 0 0-10 5 5 0 0 0 0 10Zm1-4a1 1 0 1 0-2 0v1a1 1 0 1 0 2 0v-1Zm0-3a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z",
                        clipRule: "evenodd",
                        fill: "string" == typeof i ? i : i.css,
                        className: r
                    })]
                })
            }
        },
        422244: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ShopIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M2.635 4.188A3 3 0 0 1 5.523 2H7a1 1 0 0 1 1 1v3.983a3.067 3.067 0 0 1 0 .051A2.966 2.966 0 0 1 4.983 10c-2 0-3.446-1.91-2.905-3.834l.557-1.978ZM10 2a1 1 0 0 0-1 1v4a3 3 0 0 0 3 3 3 3 0 0 0 3-2.966V3a1 1 0 0 0-1-1h-4ZM17 2a1 1 0 0 0-1 1v3.983a3.645 3.645 0 0 0 0 .051A2.966 2.966 0 0 0 19.017 10c2 0 3.446-1.91 2.905-3.834l-.557-1.978A3 3 0 0 0 18.477 2H17Z",
                        className: r
                    }), (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M21 11.423V19a3 3 0 0 1-3 3h-2.75a.25.25 0 0 1-.25-.25V16a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2v5.75a.25.25 0 0 1-.25.25H6a3 3 0 0 1-3-3v-7.577c0-.187.199-.31.372-.24a4.46 4.46 0 0 0 1.662.317c1.293 0 2.458-.55 3.273-1.428a.278.278 0 0 1 .405 0A4.488 4.488 0 0 0 12 11.5c1.298 0 2.467-.55 3.289-1.428a.278.278 0 0 1 .404 0 4.454 4.454 0 0 0 3.273 1.428 4.46 4.46 0 0 0 1.662-.317c.173-.07.372.053.372.24Z",
                        className: r
                    })]
                })
            }
        },
        850830: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TwitterIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M20.748 7.512c.013.194.013.388.013.584 0 5.964-4.54 12.842-12.842 12.842v-.003a12.777 12.777 0 0 1-6.92-2.024 9.063 9.063 0 0 0 6.68-1.87 4.52 4.52 0 0 1-4.216-3.135c.677.13 1.374.104 2.038-.078a4.514 4.514 0 0 1-3.62-4.424v-.057c.627.35 1.33.543 2.048.565a4.52 4.52 0 0 1-1.397-6.027 12.81 12.81 0 0 0 9.302 4.716 4.519 4.519 0 0 1 7.692-4.117c1.01-.2 1.98-.57 2.866-1.096a4.53 4.53 0 0 1-1.984 2.497A8.977 8.977 0 0 0 23 5.174a9.17 9.17 0 0 1-2.252 2.338Z",
                        className: r
                    })
                })
            }
        },
        902515: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                WaveformIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M7 2a1 1 0 0 0-1 1v18a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1ZM11 6a1 1 0 1 1 2 0v12a1 1 0 1 1-2 0V6ZM1 8a1 1 0 0 1 2 0v8a1 1 0 1 1-2 0V8ZM16 5a1 1 0 1 1 2 0v14a1 1 0 1 1-2 0V5ZM22 8a1 1 0 0 0-1 1v6a1 1 0 1 0 2 0V9a1 1 0 0 0-1-1Z",
                        className: r
                    })
                })
            }
        },
        215118: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                WaveformSlashIcon: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("75196");
            let i = e => {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: i = s.default.colors.INTERACTIVE_NORMAL,
                    colorClass: r = "",
                    ...o
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, l.default)(o),
                    xmlns: "http://www.w3.org/2000/svg",
                    width: t,
                    height: n,
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: (0, a.jsx)("path", {
                        fill: "string" == typeof i ? i : i.css,
                        d: "M22.707 2.707a1 1 0 0 0-1.414-1.414l-20 20a1 1 0 1 0 1.414 1.414l20-20ZM6.854 13.146A.5.5 0 0 1 6 12.793V3a1 1 0 0 1 2 0v8.793a.5.5 0 0 1-.146.354l-1 1ZM11 17.207V18a1 1 0 1 0 2 0v-1.793a.5.5 0 0 0-.854-.353l-1 1a.5.5 0 0 0-.146.353ZM11 7.793V6a1 1 0 1 1 2 0v.793a.5.5 0 0 1-.146.353l-1 1A.5.5 0 0 1 11 7.793ZM17.146 10.854a.5.5 0 0 1 .854.353V19a1 1 0 1 1-2 0v-6.793a.5.5 0 0 1 .146-.353l1-1ZM2 7a1 1 0 0 0-1 1v8a1 1 0 1 0 2 0V8a1 1 0 0 0-1-1ZM21 9a1 1 0 1 1 2 0v6a1 1 0 1 1-2 0V9Z",
                        className: r
                    })
                })
            }
        },
        402309: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsMassMentionsDefaultDisabledExperiment: function() {
                    return o
                },
                useCanCurrentUserViewDisableUnsafeGuildSettingsNotice: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("862205"),
                l = n("957255"),
                i = n("49111");
            let r = (0, s.createExperiment)({
                kind: "guild",
                id: "2022-11_default_disable_mass_mention",
                label: "Disable mass mentions for communities by default",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function o(e) {
                return r.useExperiment({
                    guildId: e,
                    location: "dd4beb_1"
                }, {
                    autoTrackExposure: !0
                })
            }

            function u(e) {
                var t;
                let n = (0, a.useStateFromStores)([l.default], () => l.default.can(i.Permissions.MANAGE_GUILD, e)),
                    {
                        enabled: s
                    } = r.useExperiment({
                        guildId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "",
                        location: "dd4beb_3"
                    }, {
                        autoTrackExposure: !0
                    });
                if (null == e) return !1;
                let o = e.hasFeature(i.GuildFeatures.COMMUNITY);
                return n && o && s
            }
        },
        241845: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserTriggerAAExperiment: function() {
                    return l
                },
                useGlobalTriggerDebugging: function() {
                    return r
                }
            });
            var a = n("862205"),
                s = n("565034");
            let l = (0, a.createExperiment)({
                    kind: "user",
                    id: s.userTriggerExperimentId,
                    label: "Trigger Debugging User AA Experiment",
                    defaultConfig: {
                        inUse: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "On",
                        config: {
                            inUse: !0
                        }
                    }]
                }),
                i = (0, a.createExperiment)({
                    kind: "guild",
                    id: s.guildTriggerExperimentId,
                    label: "Trigger Debugging Guild AA Experiment",
                    defaultConfig: {
                        inUse: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "On",
                        config: {
                            inUse: !0
                        }
                    }]
                }),
                r = e => {
                    let t = "guild trigger debug",
                        n = "user trigger debug";
                    i.useExperiment({
                        location: t,
                        guildId: e
                    }, {
                        autoTrackExposure: !1
                    }), i.trackExposure({
                        location: t,
                        guildId: e
                    }), l.useExperiment({
                        location: n
                    }, {
                        autoTrackExposure: !1
                    }), l.trackExposure({
                        location: n
                    })
                }
        },
        939443: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useNullExperiment: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_null_experiment",
                label: "Null Experiment",
                defaultConfig: {
                    inUse: !1
                },
                treatments: [{
                    id: 1,
                    label: "On",
                    config: {
                        inUse: !0
                    }
                }]
            });

            function l() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                return s.useExperiment({
                    location: "a9e81b_1"
                }, {
                    autoTrackExposure: e
                })
            }
        },
        607742: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationAAEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-03_mute_block_aa",
                label: "Safety Consumer Education Block/Mute - A/A",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Mute",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "Block",
                    config: {
                        bucket: 2,
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "34e1bc_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        415929: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationBlockMuteEnabled: function() {
                    return l
                },
                useIsSafetyConsumerEducationBlockMuteBucket: function() {
                    return i
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-01_consumer_education_launch",
                label: "Safety Consumer Education Launch - Block/Mute",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Mute",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "Block",
                    config: {
                        bucket: 2,
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "b85a21_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }

            function i() {
                return s.useExperiment({
                    location: "b85a21_2"
                }, {
                    autoTrackExposure: !1
                }).bucket
            }
        },
        127205: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsSafetyConsumerEducationReportingEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_consumer_education_launch__reporting",
                label: "Consumer Education Launch - Reporting",
                defaultConfig: {
                    bucket: 0,
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Reporting",
                    config: {
                        bucket: 1,
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "183c74_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        687531: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsDmSpamFilterCoachmarkEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_dm_spam_filter_coachmark",
                label: "Safety DM Spam Filter Coachmark rollout",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "acbeda_1"
                }, {
                    autoTrackExposure: !1
                }).enabled
            }
        },
        74456: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsRejectAllMessageRequestsEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-01_clear_all_message_requests",
                label: "Safety Experience Reject All Message Requests",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "c10bec_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        533280: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                supported: function() {
                    return s
                },
                createUtterance: function() {
                    return l
                },
                speakUtterance: function() {
                    return i
                },
                cancelAll: function() {
                    return r
                }
            }), n("781738");
            var a = n("981957");
            let s = null != window.speechSynthesis;

            function l(e, t) {
                let n = e.replace(/(https?:\/\/[^\s]+)/g, e => {
                    let t = e.match(/^https?:\/\/(?:www\.)?([^/?#]+)(?:[/?#]|$)/i);
                    return null != t ? t[1] : ""
                });
                null != t && n.length > t && (n = (n = n.substring(0, t)).substring(0, Math.min(n.length, n.lastIndexOf(" "))));
                let s = new SpeechSynthesisUtterance(n);
                return s.rate = a.default.speechRate, s
            }

            function i(e, t) {
                s && (e.voice = t, speechSynthesis.speak(e))
            }

            function r() {
                s && speechSynthesis.cancel()
            }
        },
        140708: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActivitiesRolloutExperiments: function() {
                    return u
                }
            });
            var a, s, l = n("884691"),
                i = n("862205");
            let r = (a = "Watch Together", s = "2021-09_watch_together_rollout", (0, i.createExperiment)({
                    kind: "guild",
                    id: s,
                    label: "Exposure tracking for ".concat(a, " (do not override)"),
                    defaultConfig: {},
                    treatments: []
                })),
                o = [r];

            function u(e) {
                l.useEffect(() => {
                    null != e && o.forEach(t => {
                        t.trackExposure({
                            guildId: e,
                            location: "508ef2_1"
                        })
                    })
                }, [e])
            }
        },
        408166: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ActivitiesSoundsExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-05_activities_joinleave_sounds",
                label: "Activities Sounds Experiment",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Activities Join/Leave Sounds",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        992204: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("222007");
            var a = n("446674"),
                s = n("913144"),
                l = n("954016");
            let i = new Set,
                r = new Set([l.WhatsNewSection.DISCORD_TURNS_8]);
            class o extends a.default.PersistedStore {
                initialize(e) {
                    null != e && (Array.isArray(e.acknowledged) && (i = new Set(e.acknowledged)), Array.isArray(e.opened) && (r = new Set(e.opened)))
                }
                getState() {
                    return {
                        acknowledged: i,
                        opened: r
                    }
                }
                getOpened() {
                    return r
                }
                getAcknowledged() {
                    return i
                }
                isOpened(e) {
                    return r.has(e)
                }
                isAcknowledged(e) {
                    return i.has(e)
                }
            }
            o.displayName = "ActivitiesWhatsNewStore", o.persistKey = "ActivitiesWhatsNewStore";
            var u = new o(s.default, {
                ACTIVITIES_WHATS_NEW_ACKNOWLEDGE_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    i.add(t)
                },
                ACTIVITIES_WHATS_NEW_MARK_OPENED_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    r.add(t)
                }
            })
        },
        180065: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ActivityCoachMarkGarticPhoneExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-03_activity_gartic_phone_coach_mark",
                label: "Activity Coach Mark Gartic Phone",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Activity Coach Mark Gartic Phone",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        768613: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BashOutCoachMarkExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2022-11_activitiesbashoutcoachmark",
                label: "Bash Out Coach Mark",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 0,
                    label: "Control",
                    config: {
                        enabled: !1
                    }
                }, {
                    id: 1,
                    label: "Enable Bash Out Coach Mark",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        334788: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesGdmTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_whats_new_gdm_tile",
                label: "Birthday Activities Whats New GDM Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable GDM tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        891654: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesJamspaceTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_jamspace_tile",
                label: "Birthday Activities Whats New Jamspace Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Jamspace tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        885412: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesPokerTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-05_birthday_activities_poker",
                label: "Birthday Activities Poker Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Poker tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        629388: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ExperimentBirthdayActivitiesPuttPartyTile: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-04_birthday_activities_putt_party_tile",
                label: "Birthday Activities Whats New Putt Party Tile",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Putt Party tile",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        499031: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a, s, l, i, r = n("773336");

            function o(e) {
                if ((0, r.isIOS)()) return e;
                if (!(0, r.isAndroid)()) return -1;
                switch (e) {
                    case 0:
                        return 0;
                    case 1:
                    case 2:
                        return 1;
                    case 3:
                        return 2;
                    case 4:
                    case 5:
                    case 6:
                        return 3;
                    default:
                        return -1
                }
            }(a = l || (l = {}))[a.UNHANDLED = -1] = "UNHANDLED", a[a.NOMINAL = 0] = "NOMINAL", a[a.FAIR = 1] = "FAIR", a[a.SERIOUS = 2] = "SERIOUS", a[a.CRITICAL = 3] = "CRITICAL", (s = i || (i = {}))[s.NONE = 0] = "NONE", s[s.LIGHT = 1] = "LIGHT", s[s.MODERATE = 2] = "MODERATE", s[s.SEVERE = 3] = "SEVERE", s[s.CRITICAL = 4] = "CRITICAL", s[s.EMERGENCY = 5] = "EMERGENCY", s[s.SHUTDOWN = 6] = "SHUTDOWN"
        },
        503525: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActivitiesWhatsNewCount: function() {
                    return c
                },
                getActivitiesWhatsNewCount: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("992204"),
                l = n("334788"),
                i = n("891654"),
                r = n("885412"),
                o = n("629388"),
                u = n("337697"),
                d = n("954016");

            function c() {
                return (0, a.useStateFromStores)([s.default], () => E(s.default))
            }

            function E(e) {
                let t = 0,
                    n = e.getAcknowledged();
                return u.ExperimentBirthdayGoodbye.getCurrentConfig({
                    location: "1d9280_1"
                }).enabled ? (!n.has(d.WhatsNewSection.FREE) && t++, t) : (l.ExperimentBirthdayActivitiesGdmTile.getCurrentConfig({
                    location: "1d9280_2"
                }).enabled && !n.has(d.WhatsNewSection.GDM_ACTIVITIES) && t++, o.ExperimentBirthdayActivitiesPuttPartyTile.getCurrentConfig({
                    location: "1d9280_3"
                }).enabled && !n.has(d.WhatsNewSection.PUTT_PARTY) && t++, i.ExperimentBirthdayActivitiesJamspaceTile.getCurrentConfig({
                    location: "1d9280_4"
                }).enabled && !n.has(d.WhatsNewSection.JAMSPACE) && t++, r.ExperimentBirthdayActivitiesPokerTile.getCurrentConfig({
                    location: "1d9280_5"
                }).enabled && !n.has(d.WhatsNewSection.POKER) && t++, !n.has(d.WhatsNewSection.DISCORD_TURNS_8) && t <= 0 && t++, t)
            }
        },
        299803: function(e, t, n) {
            "use strict";

            function a(e, t) {
                return null != e.application_id && null == t.getApplicationActivity(e.application_id, !1)
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        984497: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ACTIVITY_ENCOURAGES_HW_ACCELERATION: function() {
                    return _
                },
                default: function() {
                    return C
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("452804"),
                r = n("442939"),
                o = n("145131"),
                u = n("599110"),
                d = n("50885"),
                c = n("49111"),
                E = n("782340"),
                f = n("646224");
            let _ = "Activity Encourages Hardware Acceleration";

            function C(e) {
                var t;
                let {
                    applicationId: n,
                    ...C
                } = e, [h, I] = s.useState(!1), [T] = (0, r.default)([n]), S = null !== (t = null == T ? void 0 : T.name) && void 0 !== t ? t : "This Activity";
                s.useEffect(() => {
                    u.default.track(c.AnalyticEvents.OPEN_MODAL, {
                        type: _
                    })
                }, []);
                let N = () => {
                    let e = "temporary";
                    h && (e = "permanent", i.default.updatedUnsyncedSettings({
                        disableActivityHardwareAccelerationPrompt: !0
                    })), u.default.track(c.AnalyticEvents.MODAL_DISMISSED, {
                        type: _,
                        dismiss_type: e
                    }), C.onClose()
                };
                return (0, a.jsxs)(l.ModalRoot, {
                    className: f.root,
                    "aria-label": E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE,
                    ...C,
                    children: [(0, a.jsxs)(l.ModalHeader, {
                        separator: !1,
                        children: [(0, a.jsx)(l.Text, {
                            className: f.header,
                            variant: "text-lg/normal",
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_TITLE
                        }), (0, a.jsx)(l.ModalCloseButton, {
                            onClick: N,
                            className: f.closeButton
                        })]
                    }), (0, a.jsx)(l.ModalContent, {
                        className: f.content,
                        children: (0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            className: f.ratingBody,
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_BETTER_BODY.format({
                                applicationName: S
                            })
                        })
                    }), (0, a.jsxs)(l.ModalFooter, {
                        className: f.footer,
                        direction: o.default.Direction.HORIZONTAL,
                        children: [(0, a.jsx)(l.Checkbox, {
                            type: l.Checkbox.Types.INVERTED,
                            size: 18,
                            value: h,
                            onChange: () => I(!h),
                            children: (0, a.jsx)(l.Text, {
                                variant: "text-sm/normal",
                                children: E.default.Messages.DONT_SHOW_AGAIN
                            })
                        }), (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.PRIMARY,
                            onClick: N,
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_NO_THANKS
                        }), (0, a.jsx)(l.Button, {
                            color: l.Button.Colors.BRAND,
                            onClick: () => {
                                u.default.track(c.AnalyticEvents.ACTIVITY_ENABLE_HARDWARE_ACCELERATION, {
                                    application_id: n
                                }), d.default.setEnableHardwareAcceleration(!0)
                            },
                            children: E.default.Messages.ACTIVITY_HARDWARE_ACCELERATION_TURN_IT_ON
                        })]
                    })]
                })
            }
        },
        987697: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("269936").makeLazy)({
                createPromise: () => n.el("321927").then(n.bind(n, "321927")),
                webpackId: "321927"
            })
        },
        464682: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("269936").makeLazy)({
                createPromise: () => n.el("577766").then(n.bind(n, "577766")),
                webpackId: "577766"
            })
        },
        581516: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var s = n("913144"),
                l = n("600965"),
                i = n("316272"),
                r = n("292687"),
                o = n("42203"),
                u = n("778588"),
                d = n("449501"),
                c = n("945956"),
                E = n("18494"),
                f = n("162771"),
                _ = n("800762"),
                C = n("191225"),
                h = n("420444"),
                I = n("320817"),
                T = n("49111");

            function S() {
                let e = c.default.getChannelId(),
                    t = C.default.getConnectedActivityChannelId(),
                    n = C.default.getSelfEmbeddedActivityForChannel(null != t ? t : ""),
                    i = o.default.getChannel(e),
                    r = o.default.getChannel(t),
                    u = null == t || (null == e || null == i) && (0, h.default)(t);
                if (u || null == t || null == r || null == n) return function() {
                    let e = a;
                    null != e && d.default.isOpen(e) && (s.default.wait(() => l.close(e)), a = null)
                }();
                {
                    let e = (0, I.default)(t, n.application_id);
                    return function(e, t) {
                        if (d.default.isOpen(t)) return !1;
                        s.default.wait(() => l.open(t, T.PictureInPictureComponents.EMBED_IFRAME, {
                            channel: e
                        })), a = t
                    }(r, e)
                }
            }

            function N() {
                let e = u.default.hasLayers(),
                    t = r.default.getWindowOpen(T.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                return e && !t ? function() {
                    let e = a;
                    null != e && d.default.isOpen(e) && s.default.wait(() => l.hide(e))
                }() : function() {
                    let e = a;
                    null != e && d.default.isOpen(e) && s.default.wait(() => l.show(e))
                }()
            }
            class A extends i.default {
                _initialize() {
                    E.default.addChangeListener(S), f.default.addChangeListener(S), c.default.addChangeListener(S), _.default.addChangeListener(S), r.default.addChangeListener(S), C.default.addChangeListener(S), u.default.addChangeListener(N)
                }
                _terminate() {
                    E.default.removeChangeListener(S), f.default.removeChangeListener(S), c.default.removeChangeListener(S), _.default.removeChangeListener(S), r.default.removeChangeListener(S), C.default.removeChangeListener(S), u.default.removeChangeListener(N)
                }
            }
            var m = new A
        },
        159997: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            }), n("702976");
            var a = n("292687"),
                s = n("568734"),
                l = n("49111");

            function i(e) {
                var t;
                let n = (0, s.hasFlag)(null !== (t = e.flags) && void 0 !== t ? t : 0, l.ApplicationFlags.EMBEDDED),
                    i = a.default.getWindowOpen(l.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                return n && i
            }
        },
        321836: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("168973"),
                i = n("599110"),
                r = n("773336"),
                o = n("50885"),
                u = n("984497"),
                d = n("49111");
            let c = "activity-hardware-acceleration-modal";

            function E(e) {
                let t = !l.default.disableActivityHardwareAccelerationPrompt;
                t && r.isPlatformEmbedded && !o.default.getEnableHardwareAcceleration() && (0, s.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await n.el("984497").then(n.bind(n, "984497"));
                    return n => (0, a.jsx)(t, {
                        applicationId: e,
                        ...n
                    })
                }, {
                    modalKey: c,
                    onCloseRequest: () => {
                        i.default.track(d.AnalyticEvents.MODAL_DISMISSED, {
                            type: u.ACTIVITY_ENCOURAGES_HW_ACCELERATION
                        }), (0, s.closeModal)(c)
                    }
                })
            }
        },
        587984: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openActivityShareMomentModal: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("870346"),
                i = n("49111");

            function r(e) {
                let {
                    applicationId: t,
                    channelId: r,
                    mediaUrl: o
                } = e, u = l.default.getWindowOpen(i.PopoutWindowKeys.CHANNEL_CALL_POPOUT), d = u ? s.POPOUT_MODAL_CONTEXT : s.DEFAULT_MODAL_CONTEXT;
                (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await n.el("611598").then(n.bind(n, "611598"));
                    return n => (0, a.jsx)(e, {
                        applicationId: t,
                        channelId: r,
                        mediaUrl: o,
                        ...n
                    })
                }, {
                    modalKey: "activity-share-moment-modal",
                    contextKey: d
                })
            }
        },
        669499: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openAgeGateModal: function() {
                    return r
                },
                closeAgeGateModal: function() {
                    return o
                },
                openSuccessAgeGateModal: function() {
                    return u
                },
                openFailureAgeGateModal: function() {
                    return d
                }
            });
            var a = n("913144");
            n("437822"), n("393414");
            var s = n("599110"),
                l = n("586391"),
                i = n("49111");

            function r(e) {
                s.default.track(i.AnalyticEvents.OPEN_MODAL, {
                    type: "Enter Your Birthday",
                    source: {
                        section: e
                    }
                }), a.default.dispatch({
                    type: "AGE_GATE_MODAL_OPEN",
                    source: e
                })
            }

            function o(e) {
                a.default.wait(() => a.default.dispatch({
                    type: "AGE_GATE_MODAL_CLOSE"
                })), void 0 !== e && s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
                    source: e,
                    action: l.AgeGateAnalyticAction.AGE_GATE_CLOSE
                })
            }

            function u(e) {
                a.default.wait(() => {
                    a.default.dispatch({
                        type: "AGE_GATE_SUCCESS_MODAL_OPEN"
                    })
                }), s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
                    source: e,
                    action: l.AgeGateAnalyticAction.AGE_GATE_SUCCESS
                })
            }

            function d(e, t) {
                a.default.wait(() => {
                    a.default.dispatch({
                        type: "AGE_GATE_FAILURE_MODAL_OPEN",
                        underageMessage: t
                    })
                }), s.default.track(i.AnalyticEvents.AGE_GATE_ACTION, {
                    source: e,
                    action: l.AgeGateAnalyticAction.AGE_GATE_FAILURE
                })
            }
        },
        19009: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                userNeedsAgeGate: function() {
                    return i
                }
            });
            var a = n("697218"),
                s = n("299039");
            let l = new Date("06/16/2020");

            function i() {
                let e = a.default.getCurrentUser();
                return null != e && s.default.extractTimestamp(e.id) > l.getTime() && !e.isClaimed() && null == e.nsfwAllowed
            }
        },
        182537: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("42203"),
                o = n("18494"),
                u = n("162771"),
                d = n("697218"),
                c = n("669499"),
                E = n("37016"),
                f = n("58069"),
                _ = n("586391"),
                C = n("49111");

            function h(e, t) {
                var n;
                if (null == e) return;
                let a = d.default.getCurrentUser(),
                    s = null === (n = r.default.getChannel(t)) || void 0 === n ? void 0 : n.isNSFW();
                s && null != a && null == a.nsfwAllowed && (0, c.openAgeGateModal)(_.AgeGateSource.NSFW_CHANNEL)
            }
            class I extends i.default {
                _initialize() {
                    l.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen), l.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect), l.default.subscribe("AGE_GATE_MODAL_OPEN", this.handleAgeGateModalOpen), l.default.subscribe("AGE_GATE_MODAL_CLOSE", this.handleAgeGateModalClose), l.default.subscribe("AGE_GATE_SUCCESS_MODAL_OPEN", this.handleAgeGateSuccess), l.default.subscribe("AGE_GATE_FAILURE_MODAL_OPEN", this.handleAgeGateFailure)
                }
                _terminate() {
                    l.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen), l.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect), l.default.unsubscribe("AGE_GATE_MODAL_OPEN", this.handleAgeGateModalOpen), l.default.unsubscribe("AGE_GATE_MODAL_CLOSE", this.handleAgeGateModalClose), l.default.unsubscribe("AGE_GATE_SUCCESS_MODAL_OPEN", this.handleAgeGateSuccess), l.default.unsubscribe("AGE_GATE_FAILURE_MODAL_OPEN", this.handleAgeGateFailure)
                }
                handleChannelSelect(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e;
                    h(t, n)
                }
                handleConnectionOpen() {
                    let e = u.default.getGuildId(),
                        t = o.default.getChannelId();
                    h(e, t)
                }
                handleAgeGateModalOpen(e) {
                    let {
                        source: t
                    } = e;
                    (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("673187").then(n.bind(n, "673187"));
                        return n => (0, a.jsx)(e, {
                            source: t,
                            ...n
                        })
                    }, {
                        modalKey: _.EXISTING_USER_AGE_GATE_MODAL_KEY,
                        onCloseRequest: C.NOOP
                    })
                }
                handleAgeGateSuccess() {
                    (0, s.updateModal)(_.EXISTING_USER_AGE_GATE_MODAL_KEY, e => (0, a.jsx)(f.default, {
                        ...e
                    }))
                }
                handleAgeGateFailure(e) {
                    let {
                        underageMessage: t
                    } = e;
                    (0, s.updateModal)(_.EXISTING_USER_AGE_GATE_MODAL_KEY, e => (0, a.jsx)(E.default, {
                        underageMessage: t,
                        ...e
                    }))
                }
                handleAgeGateModalClose() {
                    (0, s.closeModal)(_.EXISTING_USER_AGE_GATE_MODAL_KEY)
                }
            }
            var T = new I
        },
        37016: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("393414"),
                r = n("476765"),
                o = n("701909"),
                u = n("669499"),
                d = n("49111"),
                c = n("782340"),
                E = n("762874");

            function f() {
                (0, u.closeAgeGateModal)(), (0, i.transitionTo)(d.Routes.LOGIN)
            }

            function _(e) {
                let {
                    underageMessage: t,
                    transitionState: i
                } = e, u = (0, r.useUID)();
                return (0, a.jsxs)(l.ModalRoot, {
                    transitionState: i,
                    size: l.ModalSize.SMALL,
                    "aria-labelledby": u,
                    impression: {
                        impressionName: s.ImpressionNames.USER_AGE_GATE_UNDERAGE,
                        impressionProperties: {
                            existing_user: !0
                        }
                    },
                    children: [(0, a.jsx)(l.ModalContent, {
                        children: (0, a.jsxs)("div", {
                            className: E.container,
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                src: n("803452"),
                                className: E.img
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-xl/semibold",
                                className: E.title,
                                id: u,
                                children: c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_HEADER
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: E.subtitle,
                                variant: "text-sm/normal",
                                children: c.default.Messages.AGE_GATE_UNDERAGE_BODY.format({
                                    underageMessage: null != t ? t : c.default.Messages.AGE_GATE_UNDERAGE_BODY_DEFAULT_REG_MESSAGE,
                                    helpURL: o.default.getArticleURL(d.HelpdeskArticles.AGE_GATE)
                                })
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: E.subtitle,
                                variant: "text-sm/normal",
                                children: c.default.Messages.AGE_GATE_UNDERAGE_EXISTING_BODY_DELETION_WITH_DAYS.format({
                                    days: 30
                                })
                            })]
                        })
                    }), (0, a.jsx)(l.ModalFooter, {
                        children: (0, a.jsx)(l.Button, {
                            size: l.ButtonSizes.SMALL,
                            fullWidth: !0,
                            onClick: f,
                            children: c.default.Messages.AGE_GATE_UNDERAGE_BACK_TO_LOGIN
                        })
                    })]
                })
            }
        },
        58069: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("476765"),
                r = n("669499"),
                o = n("782340"),
                u = n("865982");

            function d(e) {
                let {
                    transitionState: t
                } = e, d = (0, i.useUID)();
                return (0, a.jsxs)(l.ModalRoot, {
                    transitionState: t,
                    size: l.ModalSize.SMALL,
                    "aria-labelledby": d,
                    impression: {
                        impressionName: s.ImpressionNames.USER_AGE_GATE,
                        impressionProperties: {
                            existing_user: !0
                        }
                    },
                    children: [(0, a.jsx)(l.ModalContent, {
                        children: (0, a.jsxs)("div", {
                            className: u.container,
                            children: [(0, a.jsx)("img", {
                                alt: "",
                                src: n("318548"),
                                className: u.img
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-xl/semibold",
                                className: u.title,
                                id: d,
                                children: o.default.Messages.AGE_GATE_AGE_VERIFIED
                            }), (0, a.jsx)(l.Text, {
                                color: "header-secondary",
                                className: u.subtitle,
                                variant: "text-sm/normal",
                                children: o.default.Messages.AGE_GATE_AGE_VERIFIED_BODY
                            })]
                        })
                    }), (0, a.jsx)(l.ModalFooter, {
                        children: (0, a.jsx)(l.Button, {
                            size: l.ButtonSizes.SMALL,
                            fullWidth: !0,
                            onClick: function() {
                                (0, r.closeAgeGateModal)()
                            },
                            autoFocus: !0,
                            children: o.default.Messages.CLOSE
                        })
                    })]
                })
            }
        },
        943183: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                initSessionHeartbeatScheduler: function() {
                    return m
                }
            }), n("70102");
            var a = n("976255"),
                s = n("95410"),
                l = n("913144"),
                i = n("945956"),
                r = n("599110"),
                o = n("872507"),
                u = n("286235"),
                d = n("49111");
            let c = "LATEST_HEARTBEAST_EVENT_TIMESTAMP",
                E = null,
                f = null,
                _ = null,
                C = !1;
            async function h() {
                if (C) return;
                C = !0, (0, a.setSessionExtendingEnabled)(!0), u.default.addBreadcrumb({
                    message: "Start Analytics Heartbeat"
                });
                let e = await s.default.getAfterRefresh(c).then(a.timestampOrZero);
                if (!C) return;
                let t = Date.now(),
                    n = 9e5 + e - t;
                n > 36e5 && u.default.addBreadcrumb({
                    message: "Received invalid Date.now() when generating a heartbeat. Date.now() = ".concat(t, ", timeUntilNextHeartbeat = ").concat(n, ", latestHeartbeatEventTimestamp = ").concat(e)
                }), e > t && (n = 0), u.default.addBreadcrumb({
                    message: "Received Last Heartbeat Event Timestamp. Time Until Next Heartbeat: ".concat(n / 1e3, " seconds. Scheduling Heartbeat")
                }), I(!1), f = setTimeout(() => {
                    T(), E = setInterval(() => {
                        T()
                    }, 9e5)
                }, Math.max(n, 0))
            }

            function I() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                null != f && (clearTimeout(f), f = null), null != E && (clearInterval(E), E = null), null != _ && e && (clearTimeout(_), _ = null)
            }
            async function T() {
                let e = Date.now(),
                    t = await (0, a.getSession)(),
                    n = Date.now();
                if (null == t) {
                    u.default.captureException(Error("Null session when tracking session heartbeat. Waited ".concat(n - e, "ms")));
                    return
                }
                if (!C) {
                    u.default.captureException(Error("Heartbeat scheduler not started when tracking session heartbeat.")), I();
                    return
                }
                u.default.addBreadcrumb({
                    message: "Tracking Heartbeat",
                    data: {
                        initialized: t.initialized
                    }
                });
                let l = {
                        client_heartbeat_initialization_timestamp: t.initialized,
                        client_heartbeat_version: 17
                    },
                    i = o.default.getMemoryUsageElectronRenderer();
                null != i && (l.client_heartbeat_renderer_memory = i), r.default.track(d.AnalyticEvents.CLIENT_HEARTBEAT, l), s.default.set(c, Date.now().toString())
            }
            let S = null,
                N = !0;

            function A() {
                if (N || null != S && S !== d.RTCConnectionStates.DISCONNECTED && S !== d.RTCConnectionStates.RTC_DISCONNECTED) try {
                    h()
                } catch (e) {
                    u.default.captureException(e)
                } else !C || (C = !1, u.default.addBreadcrumb({
                    message: "Stopping Analytics Heartbeat"
                }), (0, a.setSessionExtendingEnabled)(!1), I())
            }

            function m() {
                u.default.addBreadcrumb({
                    message: "Initializing SessionHeartbeatScheduler"
                }), i.default.addChangeListener(g), l.default.subscribe("WINDOW_FOCUS", R), l.default.subscribe("APP_STATE_UPDATE", O), l.default.subscribe("LOGIN_SUCCESS", p), A()
            }

            function p() {
                T()
            }

            function g() {
                let e = i.default.getState();
                S !== e && (S = e, A())
            }

            function R(e) {
                let {
                    focused: t
                } = e;
                N = t, A()
            }

            function O(e) {
                let {
                    state: t
                } = e;
                N = t === d.AppStates.ACTIVE, A()
            }
        },
        382483: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = n("920872").default
        },
        920872: function(e, t, n) {
            "use strict";

            function a() {
                return {}
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        759370: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("222007"), n("424973");
            var a = n("70754"),
                s = n("605250"),
                l = n("619443"),
                i = n("233069"),
                r = n("271938"),
                o = n("42203"),
                u = n("305961"),
                d = n("957255"),
                c = n("845078"),
                E = n("802493"),
                f = n("846527");
            let _ = new s.default("GuildBasicChannels");

            function C(e, t) {
                return null == e || e.type !== t.type || e.parent_id !== t.parent_id || d.default.computeBasicPermissions(e) !== d.default.computeBasicPermissions(t)
            }
            var h = new class e {
                async getAsync(e) {
                    let t = performance.now(),
                        [n, a] = await Promise.all([E.default.basicChannels(e).getKvEntries(), E.default.syncedBasicChannels(e).getKvEntries()]),
                        s = performance.now() - t,
                        [l, i] = function(e) {
                            let t = [],
                                n = [];
                            for (let [a, s] of e)(s ? t : n).push(a);
                            return [t, n]
                        }(a),
                        r = new Set(l);
                    return this.synced = r, _.verbose("loaded in ".concat(s, "ms (guilds: ").concat(n.length, ", synced: ").concat(r.size, " unsynced: ").concat(i.length, ")")), {
                        all: n,
                        stale: i,
                        channels: n.filter(e => {
                            let [t, n] = e;
                            return r.has(t)
                        })
                    }
                }
                handleClearGuildCache(e) {
                    E.default.basicChannelsTransaction(e).delete(), E.default.syncedBasicChannelsTransaction(e).delete(), this.handleReset()
                }
                handleChannelCreate(e, t) {
                    null != e.channel.guild_id && this.unsync(e.channel.guild_id, t)
                }
                handleChannelDelete(e, t) {
                    null != e.channel.guild_id && this.unsync(e.channel.guild_id, t)
                }
                handleChannelUpdates(e, t) {
                    for (let n of e.channels.filter(e => null != e.guild_id)) {
                        let e = o.default.getBasicChannel(n.id);
                        C(e, n) && this.unsync(n.guild_id, t)
                    }
                }
                handleBackgroundSync(e, t) {
                    for (let l of e.guilds) switch (l.data_mode) {
                        case "unavailable":
                            break;
                        case "partial":
                            var n, a, s;
                            let e = e => (0, i.createChannelRecordFromServer)(e, l.id);
                            this.onGuildUpdate(l.id, null !== (a = null === (n = l.partial_updates.channels) || void 0 === n ? void 0 : n.map(e)) && void 0 !== a ? a : [], null !== (s = l.partial_updates.deleted_channel_ids) && void 0 !== s ? s : [], t);
                            break;
                        default:
                            this.onGuildSync(l.id, t)
                    }
                }
                handleConnectionOpen(e, t) {
                    for (let n of e.guilds) this.handleOneGuildCreate(n, t)
                }
                async handlePostConnectionOpen() {
                    let e = l.default.lastTimeConnectedChanged(),
                        t = E.default.database();
                    if (null == this.synced || null == t || !(0, a.isCacheEnabled)()) return;
                    let n = u.default.getGuildIds(),
                        s = n.filter(e => !this.synced.has(e));
                    for (let n of (_.verbose("scheduling basic_channel optimstic writes (guilds: ".concat(s.length, ")")), s)) {
                        if (t !== E.default.database() || e !== l.default.lastTimeConnectedChanged()) break;
                        _.verbose("optimstically writing basic_channels (guild: ".concat(n, ")"));
                        try {
                            await t.transaction(e => this.syncOne(n, e))
                        } catch (e) {
                            _.warn("couldn't optimstically write basic_channel:", e);
                            return
                        }
                        await new Promise(e => setTimeout(e, 1e3))
                    }
                }
                handleGuildCreate(e, t) {
                    this.handleOneGuildCreate(e.guild, t)
                }
                handleOneGuildCreate(e, t) {
                    null != e.channelUpdates ? this.onGuildUpdate(e.id, e.channelUpdates.writes, e.channelUpdates.deletes, t) : this.onGuildSync(e.id, t)
                }
                handleGuildUpdate(e, t) {
                    this.unsync(e.guild.id, t)
                }
                handleGuildDelete(e, t) {
                    !0 !== e.guild.unavailable && this.delete(e.guild.id, t)
                }
                handleGuildRoleUpdate(e, t) {
                    var n;
                    let a = e.role,
                        s = null === (n = u.default.getGuild(e.guildId)) || void 0 === n ? void 0 : n.getRole(a.id);
                    (null == s || a.permissions !== s.permissions) && this.unsync(e.guildId, t)
                }
                handleGuildMemberUpdate(e, t) {
                    e.user.id === r.default.getId() && this.unsync(e.guildId, t)
                }
                handleWriteCaches(e, t) {
                    this.sync(t)
                }
                handleReset() {
                    this.synced = null
                }
                onGuildUpdate(e, t, n, a) {
                    (n.length > 0 || t.some(e => C(o.default.getBasicChannel(e.id), e))) && this.unsync(e, a)
                }
                onGuildSync(e, t) {
                    this.unsync(e, t)
                }
                delete(e, t) {
                    this.unsync(e, t), E.default.basicChannelsTransaction(t).delete(e), E.default.syncedBasicChannelsTransaction(t).delete(e)
                }
                unsync(e, t) {
                    var n;
                    null === (n = this.synced) || void 0 === n || n.delete(e), E.default.basicChannelsTransaction(t).delete(e), E.default.syncedBasicChannelsTransaction(t).put(e, !1), f.default.invalidate(e)
                }
                sync(e) {
                    let t = performance.now(),
                        n = {
                            written: 0,
                            skipped: 0
                        };
                    for (let t of u.default.getGuildIds()) this.syncOne(t, e) ? n.written++ : n.skipped++;
                    let a = performance.now() - t;
                    _.verbose("".concat(n.written, " basic_channel guilds submitted (took: ").concat(a, "ms, skipped: ").concat(n.skipped, " guilds)"))
                }
                syncOne(e, t) {
                    var n, a;
                    return !(null == u.default.getGuild(e) || (null === (n = this.synced) || void 0 === n ? void 0 : n.has(e))) && (null === (a = this.synced) || void 0 === a || a.add(e), E.default.basicChannelsTransaction(t).put(e, function(e) {
                        let t = o.default.getMutableGuildChannelsForGuild(e);
                        return Object.values(t).map(e => ({
                            id: e.id,
                            type: e.type,
                            guild_id: e.guild_id,
                            parent_id: e.parent_id,
                            basicPermissions: c.default.asBasicFlag(d.default.computePermissions(e))
                        }))
                    }(e)), E.default.syncedBasicChannelsTransaction(t).put(e, !0), !0)
                }
                constructor() {
                    this.synced = null, this.actions = {
                        BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
                        CHANNEL_CREATE: (e, t) => this.handleChannelCreate(e, t),
                        CHANNEL_DELETE: (e, t) => this.handleChannelDelete(e, t),
                        CHANNEL_UPDATES: (e, t) => this.handleChannelUpdates(e, t),
                        CLEAR_GUILD_CACHE: (e, t) => this.handleClearGuildCache(t),
                        CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
                        GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
                        GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
                        GUILD_MEMBER_UPDATE: (e, t) => this.handleGuildMemberUpdate(e, t),
                        GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleUpdate(e, t),
                        GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t),
                        POST_CONNECTION_OPEN: () => this.handlePostConnectionOpen(),
                        WRITE_CACHES: (e, t) => this.handleWriteCaches(e, t)
                    }
                }
            }
        },
        29328: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("222007");
            var a = n("605250"),
                s = n("271938"),
                l = n("305961"),
                i = n("665618"),
                r = n("605136"),
                o = n("802493");
            let u = new a.default("Guilds");
            var d = new class e {
                async getAsync(e) {
                    let t = performance.now(),
                        n = await o.default.guilds(e).getMany(),
                        a = performance.now();
                    return u.verbose("loaded in ".concat(a - t, "ms (guilds: ").concat(n.length, ")")), n
                }
                async getOneAsync(e, t) {
                    return await o.default.guilds(e).get(t)
                }
                handleBackgroundSync(e, t) {
                    for (let n of e.guilds) {
                        if ("unavailable" === n.data_mode) return;
                        let e = l.default.getGuild(n.id);
                        null != e && this.put(i.fromBackgroundSync(n, e), t)
                    }
                }
                handleConnectionOpen(e, t) {
                    for (let n of (this.clear(t), e.guilds)) this.putOne(n, t)
                }
                handleGuildCreate(e, t) {
                    this.putOne(e.guild, t)
                }
                handleGuildUpdate(e, t) {
                    let n = l.default.getGuild(e.guild.id),
                        a = i.fromServerUpdate(e.guild, n);
                    this.put(a, t)
                }
                handleGuildDelete(e, t) {
                    this.delete(e.guild.id, t)
                }
                handleGuildRoleChange(e, t) {
                    let n = r.fromServerRole(e.role),
                        a = l.default.getGuild(e.guildId);
                    null != a && this.put(a.upsertRole(n), t)
                }
                handleGuildRoleDelete(e, t) {
                    let n = l.default.getGuild(e.guildId);
                    null != n && this.put(n.deleteRole(e.roleId), t)
                }
                handleGuildMemberAdd(e, t) {
                    if (null != e.joinedAt && e.user.id === s.default.getId()) {
                        let n = l.default.getGuild(e.guildId);
                        null != n && this.put(n.updateJoinedAt(e.joinedAt), t)
                    }
                }
                handleReset() {}
                putOne(e, t) {
                    let n = l.default.getGuild(e.id),
                        a = i.fromServer(e, n);
                    this.put(a, t)
                }
                put(e, t) {
                    o.default.guildsTransaction(t).put(e)
                }
                delete(e, t) {
                    o.default.guildsTransaction(t).delete(e)
                }
                clear(e) {
                    o.default.guildsTransaction(e).delete()
                }
                constructor() {
                    this.actions = {
                        BACKGROUND_SYNC: (e, t) => this.handleBackgroundSync(e, t),
                        CLEAR_GUILD_CACHE: (e, t) => this.clear(t),
                        CONNECTION_OPEN: (e, t) => this.handleConnectionOpen(e, t),
                        GUILD_CREATE: (e, t) => this.handleGuildCreate(e, t),
                        GUILD_DELETE: (e, t) => this.handleGuildDelete(e, t),
                        GUILD_MEMBER_ADD: (e, t) => this.handleGuildMemberAdd(e, t),
                        GUILD_ROLE_CREATE: (e, t) => this.handleGuildRoleChange(e, t),
                        GUILD_ROLE_DELETE: (e, t) => this.handleGuildRoleDelete(e, t),
                        GUILD_ROLE_UPDATE: (e, t) => this.handleGuildRoleChange(e, t),
                        GUILD_UPDATE: (e, t) => this.handleGuildUpdate(e, t)
                    }
                }
            }
        },
        799286: function(e, t, n) {
            "use strict";
            n.r(t), n("794897"), n("203288"), n("789563"), n("178406"), n("123561"), n("288518"), n("486503"), n("822825"), n("256572"), n("713135"), n("42203"), n("760190"), n("245997"), n("923959"), n("26989"), n("778689"), n("952451"), n("305961"), n("377253"), n("957255"), n("660478"), n("677099"), n("697218"), n("607620"), n("287850")
        },
        684442: function(e, t, n) {
            "use strict";
            n.r(t), n("218484"), n("191225"), n("794897"), n("846527"), n("8001"), n("246598"), n("988721"), n("166004"), n("383018"), n("299285"), n("56676"), n("194051"), n("809310"), n("288206"), n("191145"), n("207273"), n("203288"), n("670535"), n("385976"), n("802461"), n("789563"), n("574933"), n("670902"), n("430475"), n("324261"), n("419501"), n("994810"), n("449004"), n("954732"), n("263901"), n("54346"), n("619259"), n("558130"), n("887446"), n("720102"), n("982527"), n("178406"), n("863636"), n("471706"), n("565559"), n("665274"), n("648825"), n("256941"), n("398604"), n("123561"), n("166465"), n("267567"), n("921387"), n("275318"), n("94372"), n("83722"), n("288518"), n("486503"), n("692171"), n("770032"), n("136511"), n("25033"), n("400205"), n("140596"), n("116460"), n("138217"), n("685841"), n("256572"), n("764828"), n("662285"), n("488464"), n("325861"), n("77173"), n("834052"), n("364685"), n("347738"), n("401690"), n("689275"), n("821343"), n("755624"), n("593752"), n("800843"), n("610730"), n("612246"), n("521128"), n("915639"), n("161778"), n("374363"), n("453515"), n("407117"), n("410348"), n("373469"), n("271938"), n("950104"), n("870691"), n("935692"), n("19766"), n("508229"), n("2105"), n("42203"), n("816092"), n("47319"), n("350522"), n("368694"), n("313915"), n("474643"), n("760190"), n("319781"), n("925758"), n("55411"), n("555826"), n("341542"), n("245997"), n("923959"), n("525065"), n("124948"), n("26989"), n("778689"), n("952451"), n("305961"), n("10802"), n("88093"), n("353802"), n("330154"), n("216391"), n("260320"), n("169602"), n("42887"), n("486996"), n("377253"), n("555179"), n("1017"), n("130473"), n("957255"), n("669280"), n("824563"), n("336376"), n("501090"), n("945956"), n("660478"), n("27618"), n("744983"), n("18494"), n("162771"), n("101125"), n("235660"), n("677099"), n("280168"), n("262768"), n("205817"), n("381684"), n("191542"), n("462495"), n("282109"), n("330387"), n("697218"), n("555035"), n("800762"), n("160299"), n("572182"), n("150057"), n("607620"), n("677225"), n("287850"), n("316133"), n("545429"), n("535974"), n("352326"), n("227602"), n("189857"), n("860957"), n("901165")
        },
        489560: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007"), n("424973");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("299285"),
                r = n("963662"),
                o = n("592407"),
                u = n("524503"),
                d = n("650509"),
                c = n("49111"),
                E = n("782340"),
                f = n("630159");

            function _(e) {
                let {
                    guild: t
                } = e, n = (0, d.useUnseenEndedApplicationSubscriptionEntitlements)(t), _ = () => (0, u.dismissApplicationSubscriptionExpirationNotice)(t.id), C = s.useMemo(() => new Set(n.map(e => e.applicationId)), [n]), h = (0, l.useStateFromStoresArray)([i.default], () => {
                    let e = [];
                    for (let t of C) {
                        let n = i.default.getApplication(t);
                        null != n && e.push(n)
                    }
                    return e
                }, [C]);
                if (0 === h.length) return null;
                let I = "";
                return I = 1 === h.length ? E.default.Messages.ONE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: h[0].name
                }) : 2 === h.length ? E.default.Messages.TWO_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: h[0].name,
                    b: h[1].name
                }) : 3 === h.length ? E.default.Messages.THREE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT.format({
                    a: h[0].name,
                    b: h[1].name,
                    c: h[2].name
                }) : E.default.Messages.MORE_APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CONTENT, (0, a.jsx)(r.default, {
                    guild: t,
                    onDismissed: _,
                    message: I,
                    type: c.ChannelNoticeTypes.APPLICATION_SUBSCRIPTION_EXPIRATION,
                    image: f,
                    onClick: () => {
                        _(), o.default.open(t.id, c.GuildSettingsSections.INTEGRATIONS)
                    },
                    imageMarginTop: 6,
                    imageMarginX: 46,
                    cta: E.default.Messages.APPLICATION_SUBSCRIPTION_EXPIRATION_CHANNEL_NOTICE_CTA
                })
            }
        },
        209535: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getRedirectPath: function() {
                    return o
                },
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("803182"),
                l = n("447669"),
                i = n("49111"),
                r = n("492397");

            function o() {
                let e = location.pathname + location.search,
                    t = r.CONFERENCE_MODE_ENABLED ? i.Routes.REGISTER : (0, l.getLoginPath)(e, !1);
                return t
            }
            var u = function() {
                return (0, a.jsx)(s.Redirect, {
                    to: o()
                })
            }
        },
        590157: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                makeAuthenticated: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("271938"),
                l = n("831588"),
                i = n("209535"),
                r = n("49111");

            function o(e, t) {
                var n, o;
                let u = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                    passProps: !0
                };

                function d(n) {
                    if (!(0, l.isAuthenticated)() && s.default.getLoginStatus() !== r.LoginStates.LOGGING_IN && s.default.allowLogoutRedirect()) return null != t ? (0, a.jsx)(t, {
                        renderRedirect: (0, a.jsx)(i.default, {})
                    }) : (0, a.jsx)(i.default, {});
                    return (0, a.jsx)(e, {
                        ...u.passProps ? n : null
                    })
                }
                return d.displayName = "Authenticated(".concat(null !== (o = null !== (n = e.displayName) && void 0 !== n ? n : e.name) && void 0 !== o ? o : "<Unknown>", ")"), d
            }
        },
        882278: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("42203"),
                i = n("697218"),
                r = n("194051"),
                o = n("754493");

            function u(e) {
                var t;
                let n = (0, s.useStateFromStores)([i.default], () => i.default.getCurrentUser()),
                    u = (0, s.useStateFromStores)([l.default], () => l.default.getChannel(e)),
                    d = (0, s.useStateFromStores)([r.default], () => null != e ? r.default.getBroadcastByChannel(e) : null),
                    c = (0, o.default)(),
                    E = a.useMemo(() => {
                        var e, t;
                        return null !== (t = null == u ? void 0 : null === (e = u.recipients) || void 0 === e ? void 0 : e.map(e => i.default.getUser(e)).filter(e => null != e && e.id !== (null == d ? void 0 : d.userId))) && void 0 !== t ? t : []
                    }, [null == d ? void 0 : d.userId, null == u ? void 0 : u.recipients]);
                return null == n ? [] : c ? E : null !== (t = E.length > 0 ? [n].concat(E) : null == d ? void 0 : d.viewers) && void 0 !== t ? t : []
            }
        },
        484140: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return D
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("669491"),
                r = n("77078"),
                o = n("987317"),
                u = n("990766"),
                d = n("716241"),
                c = n("442939"),
                E = n("673527"),
                f = n("410348"),
                _ = n("271938"),
                C = n("546463"),
                h = n("18494"),
                I = n("697218"),
                T = n("953109"),
                S = n("277174"),
                N = n("368121"),
                A = n("811305"),
                m = n("158998"),
                p = n("882278"),
                g = n("754493"),
                R = n("813531"),
                O = n("49111"),
                L = n("706530"),
                v = n("782340"),
                M = n("42845");

            function P(e) {
                let {
                    users: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: M.viewers,
                    children: [(0, a.jsx)(N.default, {
                        width: 16,
                        height: 16,
                        color: i.default.colors.HEADER_PRIMARY.css
                    }), (0, a.jsx)(A.default, {
                        showUserPopout: !0,
                        useFallbackUserForPopout: !0,
                        users: t,
                        max: 6,
                        size: A.Sizes.SIZE_24
                    })]
                })
            }

            function D(e) {
                var t;
                let {
                    broadcast: n
                } = e, {
                    userId: i,
                    applicationId: N,
                    channelId: A,
                    streamKey: D
                } = n, [y, x] = s.useState(!1), U = (0, l.useStateFromStores)([I.default], () => I.default.getUser(i)), b = (0, l.useStateFromStores)([C.default], () => {
                    var e, t;
                    return null !== (t = null === (e = C.default.getDetectableGame(N)) || void 0 === e ? void 0 : e.id) && void 0 !== t ? t : ""
                }), [G] = (0, c.default)([b]), j = null !== (t = m.default.getGlobalName(U)) && void 0 !== t ? t : m.default.getUserTag(U), w = (0, R.default)(), k = (0, l.useStateFromStores)([f.default], () => f.default.getPreviewURL(null, A, i)), F = (0, l.useStateFromStores)([h.default], () => h.default.getVoiceChannelId()), B = (0, g.default)(), H = (0, p.default)(A);
                if (s.useEffect(() => {
                        y && F === A && x(!1)
                    }, [F, y, A]), null == U || null == j) return null;
                let {
                    buttonColor: V,
                    buttonCTA: Y,
                    disabled: W
                } = function(e, t) {
                    let n = _.default.getId(),
                        a = t.some(e => e.id === n) || e === n,
                        s = t.length >= O.MAX_GROUP_DM_BROADCAST_PARTICIPANTS;
                    return {
                        buttonColor: s ? r.ButtonColors.RED : r.ButtonColors.GREEN,
                        buttonCTA: s ? v.default.Messages.BROADCAST_FULL : a ? v.default.Messages.VIEW_BROADCAST : v.default.Messages.JOIN_BROADCAST,
                        disabled: s
                    }
                }(i, H);
                return (0, a.jsxs)("div", {
                    className: M.container,
                    children: [(0, a.jsx)(r.Avatar, {
                        size: r.AvatarSizes.SIZE_32,
                        src: U.getAvatarURL(null, 32),
                        "aria-label": j
                    }), (0, a.jsxs)("div", {
                        className: M.details,
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-md/semibold",
                            children: j
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-sm/medium",
                            color: "header-secondary",
                            children: null != G ? v.default.Messages.STREAMING.format({
                                name: G.name
                            }) : v.default.Messages.STREAMING_A_GAME
                        }), (0, a.jsxs)("div", {
                            className: M.activity,
                            children: [H.length > 0 && (0, a.jsx)(P, {
                                users: H
                            }), (0, a.jsxs)(r.Button, {
                                onClick: () => {
                                    if (F === A) {
                                        o.default.selectPrivateChannel(A);
                                        return
                                    }
                                    x(!0), (0, u.joinPrivateChannelAndWatchStream)(A, D), d.default.trackWithMetadata(O.AnalyticEvents.BROADCAST_VIEWED, {
                                        num_active_broadcasts: w.length,
                                        broadcast_position: w.findIndex(e => e.userId === i) + 1,
                                        is_broadcasting: B,
                                        broadcast_channel_id: A
                                    })
                                },
                                color: V,
                                size: r.ButtonSizes.SMALL,
                                className: M.button,
                                disabled: W,
                                innerClassName: M.innerButton,
                                children: [(0, a.jsx)(S.default, {
                                    width: 16,
                                    height: 16
                                }), Y]
                            })]
                        })]
                    }), null != k ? (0, a.jsx)(E.default, {
                        className: M.stream,
                        stream: {
                            streamType: L.StreamTypes.CALL,
                            ownerId: i,
                            channelId: A
                        }
                    }) : (0, a.jsx)(T.default, {
                        game: G,
                        size: T.default.Sizes.LARGE,
                        className: M.gameIcon
                    })]
                })
            }
        },
        347272: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("669491"),
                l = n("77078"),
                i = n("774223"),
                r = n("9759"),
                o = n("813531"),
                u = n("484140"),
                d = n("395635"),
                c = n("782340"),
                E = n("472036");

            function f() {
                let {
                    canViewBroadcasts: e
                } = r.default.useExperiment({
                    location: "broadcast_list_no_track"
                }, {
                    autoTrackExposure: !1
                }), t = (0, o.default)();
                return 0 === t.length ? null : (r.default.trackExposure({
                    location: "broadcast_list"
                }), e) ? (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)("div", {
                        className: E.header,
                        children: (0, a.jsxs)("div", {
                            className: E.inline,
                            children: [(0, a.jsx)(i.default, {
                                color: s.default.colors.HEADER_PRIMARY.css,
                                height: 20,
                                width: 20
                            }), (0, a.jsx)(l.Heading, {
                                variant: "heading-md/semibold",
                                children: c.default.Messages.LIVE_BROADCASTS
                            }), (0, a.jsx)(d.default, {}), (0, a.jsxs)(l.Heading, {
                                variant: "heading-md/semibold",
                                children: ["— ", t.length.toLocaleString()]
                            })]
                        })
                    }), t.map(e => (0, a.jsx)(u.default, {
                        broadcast: e
                    }, e.userId))]
                }) : null
            }
        },
        809310: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ENABLE_CACHE_STORE: function() {
                    return G
                }
            }), n("222007"), n("808653");
            var a = n("102053");
            n("576863");
            var s = n("316693"),
                l = n("446674"),
                i = n("95410"),
                r = n("913144"),
                o = n("595525"),
                u = n("759370"),
                d = n("29328"),
                c = n("849365"),
                E = n("219788"),
                f = n("860255"),
                _ = n("794897"),
                C = n("723939"),
                h = n("605250"),
                I = n("619443"),
                T = n("410912"),
                S = n("271938"),
                N = n("42203"),
                A = n("305961"),
                m = n("660478"),
                p = n("18494"),
                g = n("162771"),
                R = n("697218"),
                O = n("287850"),
                L = n("831588"),
                v = n("485167"),
                M = n("773336"),
                P = n("969388"),
                D = n("288206"),
                y = n("1544"),
                x = n("619317"),
                U = n("49111");
            let b = new h.default("CacheStore"),
                G = !1,
                j = "stable-27",
                w = !1,
                k = "initializing",
                F = 0,
                B = !1,
                H = !1,
                V = !1;

            function Y(e) {
                b.log("Clearing cache store"), F = Date.now(), D.default.clear(), i.default.remove(U.CACHE_STORE_KEY), i.default.remove(U.CACHE_STORE_LAZY_KEY), i.default.remove(U.CACHE_STORE_CHANNELS_LAZY_KEY), (0, v.removeFile)("cache", U.CACHE_STORE_KEY), (0, v.removeFile)("cache", U.CACHE_STORE_LAZY_KEY), C.default.replaceDisableAllDatabases("CacheStore (".concat(e, ")")), k = "no-cache"
            }

            function W() {
                if (!(0, L.isAuthenticated)()) {
                    b.log("Not writing cache because not authenticated");
                    return
                }
                if (w) {
                    b.log("Not writing cache because caches cleared");
                    return
                }
                if (!V) {
                    b.log("Not writing cache because never connected");
                    return
                }
                z()
            }

            function K() {
                Y("action: CLEAR_CACHES"), w = !0
            }
            async function z() {
                b.verbose("Writing cache now"), F = Date.now();
                let e = Q(),
                    t = {
                        version: j,
                        channels: Q(),
                        guilds: function() {
                            let e = A.default.getGuild(g.default.getGuildId());
                            return null != e ? [e] : []
                        }(),
                        users: function(e) {
                            let t = new Set;
                            e.forEach(e => {
                                e.isPrivate() && e.recipients.forEach(e => {
                                    let n = R.default.getUser(e);
                                    null != n && t.add(n)
                                })
                            }), O.default.getPrivateChannelIds().forEach(e => {
                                let n = N.default.getChannel(e);
                                (null == n ? void 0 : n.isPrivate()) && n.recipients.forEach(e => {
                                    let n = R.default.getUser(e);
                                    null != n && t.add(n)
                                })
                            });
                            let n = R.default.getCurrentUser();
                            return null != n && t.add(n), Array.from(t)
                        }(e),
                        readStates: function() {
                            return m.default.getAllReadStates(!1)
                        }()
                    };
                B = !0, i.default.remove(U.CACHE_STORE_KEY), i.default.remove(U.CACHE_STORE_LAZY_KEY), i.default.remove(U.CACHE_STORE_CHANNELS_LAZY_KEY), await (0, v.writeFile)("cache", U.CACHE_STORE_KEY, JSON.stringify(t), "utf8"), await q()
            }
            async function q() {
                let e = Date.now().toString(),
                    t = {
                        version: j,
                        nonce: e,
                        saveableChannels: _.default.toSnapshot()
                    };
                b.verbose("Writing lazy cache (nonce: ".concat(e, ")")), r.default.dispatch({
                    type: "WRITE_CACHES",
                    nonce: e
                }), await (0, v.writeFile)("cache", U.CACHE_STORE_LAZY_KEY, JSON.stringify(t), "utf8"), D.default.persist(e)
            }

            function Q() {
                let e = N.default.getChannel(p.default.getChannelId());
                return null != e ? [e] : []
            }

            function Z(e) {
                if (null != e.guilds) {
                    for (let {
                            roles: t
                        }
                        of e.guilds)
                        if (null != t)
                            for (let e in t) {
                                let n = t[e];
                                n.permissions = s.default.deserialize(n.permissions)
                            }
                }
                null != e.channels && (0, y.default)(e.channels), null != e.privateChannels && (0, y.default)(e.privateChannels), null != e.guildChannels && (0, y.deserializeChannelEntries)(e.guildChannels)
            }
            async function X(e, t, n) {
                let a = performance.now();
                if (null == e || null == n) return b.verbose("skipped loaded messages (channel: ".concat(n, ", database: ").concat(e, ").")), [performance.now() - a, {
                    guildId: null,
                    channelId: null,
                    users: [],
                    members: [],
                    messages: []
                }];
                {
                    let s = await E.default.startupLoad(e, t, n, U.MAX_MESSAGES_PER_CHANNEL);
                    b.verbose("loaded ".concat(s.messages.length, " messages (guild: ").concat(t, ", channel: ").concat(n, ")."));
                    let l = {
                        guildId: t,
                        channelId: n,
                        users: s.users,
                        members: s.members,
                        messages: s.messages
                    };
                    return [performance.now() - a, l]
                }
            }
            async function J() {
                let e = performance.now(),
                    t = await new Promise(async e => {
                        let t = await (0, v.readFile)("cache", U.CACHE_STORE_KEY, "utf8");
                        null != t ? e(JSON.parse(t)) : i.default.asyncGet(U.CACHE_STORE_KEY, e)
                    });
                return (null == t ? void 0 : t.version) === j ? (Z(t), [performance.now() - e, t]) : (b.log("cache either did not exist, or contains an incompatible version (required: ".concat(j, ", loaded: ").concat(null == t ? void 0 : t.version, ").")), [performance.now() - e, null])
            }
            async function $(e, t, n) {
                var s, i, o, u, d;
                b.verbose("loading early cache");
                let c = I.default.getSocket();
                c.connect();
                let E = null !== (s = g.default.getGuildId()) && void 0 !== s ? s : null,
                    _ = null !== (i = p.default.getChannelId()) && void 0 !== i ? i : null,
                    C = performance.now(),
                    h = T.default.loadCachedMessages.measureAsyncWithoutNesting(() => X(e, E, _)),
                    S = T.default.loadMiniCache.measureAsyncWithoutNesting(J),
                    N = T.default.fetchInitialGuildCache.measureAsync(() => ee(e, c, n)),
                    A = null != e && "private-channels" === n.page ? a.default.timeAsync("\uD83D\uDCBE", "kv: private_channels", () => f.default.getAsync(e, null)) : Promise.resolve([]),
                    [
                        [m, R],
                        [O, L], v, M
                    ] = await Promise.all([S, h, N, A]),
                    P = performance.now() - C;
                if (b.verbose("cache loaded in ".concat(P, "ms (legacy ").concat(m, "ms, channel_history ").concat(O, "ms)")), null == R || null == L) return b.verbose("finished without dispatching CACHE_LOADED"), [!1, null, 0];
                {
                    let s = Object.fromEntries(L.members.map(e => [e.userId, e])),
                        i = null != v.guild && null != v.channels,
                        f = null !== (u = v.guild) && void 0 !== u ? u : null;
                    return l.default.Emitter.batched(() => {
                        a.default.time("\uD83D\uDCBE", "Dispatch Mini Cache", () => {
                            var e;
                            return r.default.dispatch({
                                ...R,
                                type: "CACHE_LOADED",
                                guilds: null != f ? [...R.guilds, f] : R.guilds,
                                channels: [...R.channels, ...M, ...null !== (e = v.channels) && void 0 !== e ? e : []],
                                users: [...R.users, ...L.users],
                                messages: null == L.channelId ? {} : {
                                    [L.channelId]: L.messages
                                },
                                guildMembers: null == L.guildId ? {} : {
                                    [L.guildId]: s
                                }
                            })
                        }), a.default.time("\uD83D\uDCBE", "socket.processFirstQueuedDispatch()", () => c.processFirstQueuedDispatch(new Set(["INITIAL_GUILD"])))
                    }), b.verbose("early_cache_summary: (\n        ok: true\n        meta:\n          auth_user_id: ".concat(t, "\n          selected_guild: ").concat(E, "\n          selected_channel: ").concat(_, "\n          navigation_state: ").concat(JSON.stringify(n), "\n          database: ").concat(null != e, "\n            name: ").concat(null == e ? void 0 : e.name, "\n        data:\n          database:\n            private_channels: ").concat("private-channels" === n.page ? M.length : "skipped", "\n            channel_history:\n              guild: ").concat(L.guildId, "\n              channel: ").concat(L.channelId, "\n              messages: ").concat(L.messages.length, "\n                members: ").concat(L.members.length, "\n                users: ").concat(L.users.length, "\n            initial_guild:\n              id: ").concat(null == f ? void 0 : f.id, "\n              channels: ").concat(null === (o = v.channels) || void 0 === o ? void 0 : o.length, "\n          legacy:\n            guilds: ").concat(R.guilds.length, " (").concat(R.guilds.map(e => e.id).join(", "), ")\n            channels: ").concat(R.channels.length, " (").concat(R.channels.map(e => e.id).join(", "), ")\n            users: ").concat(R.users.length, "\n            read_states: ").concat(R.readStates.length, "\n      )")), b.verbose("finished dispatching CACHE_LOADED"), [!0, i && null !== (d = null == f ? void 0 : f.id) && void 0 !== d ? d : null, M.length]
                }
            }
            async function ee(e, t, n) {
                let a = t.getIdentifyInitialGuildId();
                if (null == a && "guild-channels" === n.page && (a = n.guildId), null == e || null == a) return b.verbose("skipped loading initial guild (guild: ".concat(a, ", database: ").concat(e, ")")), Promise.resolve({
                    guild: null,
                    channels: null
                });
                let s = a,
                    [l, i] = await Promise.all([(0, o.tryLoadAsync)(() => d.default.getOneAsync(e, s)), (0, o.tryLoadAsync)(() => f.default.getAsync(e, s))]);
                return {
                    guild: l,
                    channels: i
                }
            }
            async function et(e, t, n, s, l) {
                b.verbose("loading late lazy cache");
                let [E, _, C, h, S] = await T.default.fetchLazyCache.measureAsync(() => Promise.all([a.default.timeAsync("\uD83D\uDCBE", "storage: ".concat(U.CACHE_STORE_LAZY_KEY), async () => {
                    let e = await (0, v.readFile)("cache", U.CACHE_STORE_LAZY_KEY, "utf8");
                    return null != e ? e : i.default.asyncGetRaw(U.CACHE_STORE_LAZY_KEY)
                }), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: cache_version", () => c.default.okAsync(e)) : Promise.resolve(!0)), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: guilds", () => d.default.getAsync(e)) : Promise.resolve([])), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: basic_channels", () => u.default.getAsync(e)) : Promise.resolve({
                    all: [],
                    stale: [],
                    channels: []
                })), (0, o.tryLoadAsync)(() => null != e ? a.default.timeAsync("\uD83D\uDCBE", "kv: private_channels", () => f.default.getAsync(e, null)) : Promise.resolve([]))])), N = await T.default.fetchStaleChannels.measureAsync(() => null != e && null != h && h.stale.length > 0 ? (0, o.tryLoadAsync)(() => {
                    var t, n;
                    return t = e, n = h.stale, b.verbose("loading stale guild channels (count: ".concat(n.length, ", ids: ").concat(n.join(", "), ")")), Promise.all(n.map(e => f.default.getAsync(t, e).then(t => [e, t])))
                }) : Promise.resolve([]));
                await new Promise(e => setTimeout(e, 0)), T.default.loadLazyCache.recordStart();
                let A = I.default.getSocket();
                en(() => {
                    var a, i, o;
                    let u = performance.now();
                    if (!1 === _) {
                        Y("database: not ok"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (null == C || null == h || null == N || null == S) {
                        (0, x.default)("database:load_failed"), b.log("couldn't load database item (\n          database: ".concat(null != e, "\n          basic_channels: ").concat(null != h, "\n          guild_channels: ").concat(null != N, "\n          private_channels: ").concat(null != S, "\n          guilds: ").concat(null != C, "\n        )")), Y("database: load_failed"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (null == _ && (C.length > 0 || S.length > 0 || h.all.length > 0)) {
                        (0, x.default)("database:versionless"), Y("database: versionless"), b.log("kv_cache was not ok (null version with values)"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (H) {
                        b.log("Skipping lazy cache; already connected."), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    if (null == E) {
                        b.log("Lazy cache was missing"), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    A.addAnalytics({
                        hadCacheAtStartup: !0
                    });
                    let d = T.default.parseLazyCache.measure(() => JSON.parse(E));
                    if (d.version !== j) {
                        b.log("Saved cached has mismatched version. Expected ".concat(j, ", got ").concat(d.version)), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    let c = d.nonce,
                        f = D.default.getSavedNonce();
                    if ("" !== f && c !== f) {
                        (0, x.default)("nonce:lazy_cache"), b.log("ClientStateStore has mismatched nonces with cache."), r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        });
                        return
                    }
                    let I = {
                        ...d,
                        guilds: C,
                        privateChannels: S,
                        guildChannels: N,
                        basicGuildChannels: h.channels,
                        initialGuildId: n
                    };
                    T.default.deserializeCache.measure(() => Z(I)), T.default.dispatchLazyCache.measure(() => r.default.dispatch({
                        type: "CACHE_LOADED_LAZY",
                        ...I
                    })), b.verbose("late lazy cache loaded (ok: true, took: ".concat(performance.now() - u, "ms)")), A.addAnalytics({
                        usedCacheAtStartup: !0
                    });
                    let m = N.reduce((e, t) => {
                            let [n, a] = t;
                            return e + a.length
                        }, 0),
                        p = N.length,
                        g = h.all.reduce((e, t) => {
                            let [n, a] = t;
                            return e + a.length
                        }, 0),
                        R = h.channels.reduce((e, t) => {
                            let [n, a] = t;
                            return e + a.length
                        }, 0),
                        O = g - R,
                        L = 0 === h.stale.length ? "" : " \xb7 ".concat(h.stale.join(", "));
                    b.verbose("lazy_cache_summary: (\n        ok: true\n        meta:\n          auth_user_id: ".concat(t, "\n          nonce: ").concat(c, "\n          initial_guild: ").concat(n, "\n          database: ").concat(null != e, "\n            ok: ").concat(_, "\n            name: ").concat(null == e ? void 0 : e.name, "\n        data:\n          database:\n            guilds: ").concat(C.length, "\n            private_channels: ").concat("private-channels" === s.page ? "skipped" : S.length, "\n            basic_channels:\n              total: ").concat(g, " (").concat(h.channels.length, " guilds)\n              stale: ").concat(O, " (").concat(h.stale.length, " guilds").concat(L, ")\n              unstale: ").concat(R, "\n            full_channels (guilds_with_stale_basic_channels):\n              total: ").concat(m, " (").concat(N.length, " guilds)\n          legacy:\n              saveable_channels: ").concat(null === (i = I.saveableChannels) || void 0 === i ? void 0 : null === (a = i.channels) || void 0 === a ? void 0 : a.length, "\n              users: ").concat(null === (o = I.users) || void 0 === o ? void 0 : o.length, "\n      )")), T.default.setCacheInfo({
                        guilds: C.length,
                        privateChannels: l + S.length,
                        basicChannels: g,
                        basicChannelsStale: O,
                        fullChannels: m,
                        fullChannelGuilds: p
                    })
                })
            }

            function en(e) {
                let t = I.default.getSocket(),
                    n = !1;
                l.default.Emitter.batched(() => {
                    try {
                        if (e(), !t.hasQueuedDispatches()) {
                            b.verbose("Processing Dispatch Queue"), t.processDispatchQueue();
                            return
                        }
                        n = !0, T.default.loadLazyCache.recordEnd(), b.verbose("Processing First Queued Dispatch"), t.processFirstQueuedDispatch(new Set(["READY", "INITIAL_GUILD"])), setTimeout(() => {
                            b.verbose("Processing Dispatch Queue"), t.processDispatchQueue()
                        }, 100)
                    } catch (e) {
                        var a;
                        b.warn("Lazy cache has encountered error", e), Y("error: resumeFluxAndSocket"), null === (a = I.default.getSocket()) || void 0 === a || a.resetSocketOnError(e, "LazyCache", {
                            sentry: !0,
                            immediate: !0
                        })
                    }
                }), !n && T.default.loadLazyCache.recordEnd()
            }
            class ea extends l.default.Store {
                initialize() {
                    if (!G) {
                        let e = I.default.getSocket();
                        e.processDispatchQueue()
                    }
                }
                hasCache() {
                    return !G || B
                }
                getLazyCacheStatus() {
                    return G ? k : "no-cache"
                }
                async loadCacheAsync(e, t) {
                    let n = (0, P.callOnce)(t);
                    if ("initializing" !== k) {
                        n(), setTimeout(() => {
                            var e;
                            return null === (e = I.default.getSocket()) || void 0 === e ? void 0 : e.processDispatchQueue()
                        }, 0);
                        return
                    }
                    try {
                        let t = S.default.getId(),
                            a = C.default.carefullyOpenDatabase(t),
                            [s, l, i] = await $(a, t, e);
                        s ? (n(), await et(a, t, l, e, i)) : (n(), await (en(() => r.default.dispatch({
                            type: "CACHE_LOADED_LAZY_NO_CACHE"
                        })), Promise.resolve()))
                    } catch (e) {
                        var a;
                        b.error("clearing cache. exception encountered while loading cache.", e, e.stack), Y("loadCacheAsync"), n(), null === (a = I.default.getSocket()) || void 0 === a || a.resetSocketOnError(e, "loadCacheAsync", {
                            sentry: !0,
                            immediate: !0
                        })
                    }
                }
                constructor(...e) {
                    super(...e), this.persist = z
                }
            }
            ea.displayName = "CacheStore", new ea(r.default, G ? {
                CONNECTION_OPEN: function() {
                    return H = !0, V = !0, !1
                },
                LOGOUT: function() {
                    Y("action: LOGOUT")
                },
                CONNECTION_CLOSED: function() {
                    return H = !1, V = !0, b.verbose("Writing cache on connection closed"), W(), !1
                },
                APP_STATE_UPDATE: function(e) {
                    let {
                        state: t
                    } = e, n = (0, M.isAndroid)() ? U.AppStates.BACKGROUND : U.AppStates.INACTIVE;
                    return n === t && H && W(), !1
                },
                CACHE_LOADED: function() {
                    B = !0
                },
                CACHE_LOADED_LAZY: function() {
                    B = !0, k = "cache-loaded"
                },
                CACHE_LOADED_LAZY_NO_CACHE: function() {
                    k = "no-cache"
                },
                CLEAR_CACHES: K,
                CLEAR_GUILD_CACHE: K,
                WINDOW_FOCUS: function(e) {
                    let {
                        focused: t
                    } = e;
                    return !t && (Date.now() - F > 9e5 ? (b.verbose("Writing cache from window unfocus"), W()) : b.verbose("Not writing cache from window unfocus")), !1
                }
            } : {})
        },
        619317: function(e, t, n) {
            "use strict";

            function a(e) {}
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        842272: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("782340");

            function s(e, t, n) {
                return n ? a.default.Messages.CONSOLE_CONNECTING_DISABLED : t ? a.default.Messages.SERVER_DEAFENED_DIALOG_TITLE : e ? a.default.Messages.UNDEAFEN : a.default.Messages.DEAFEN
            }
        },
        734592: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("222007");
            var a = n("913144"),
                s = n("629109"),
                l = n("316272"),
                i = n("292687"),
                r = n("42887"),
                o = n("568307"),
                u = n("471671"),
                d = n("49111"),
                c = n("353927");
            let E = new Set,
                f = new Set,
                _ = null;

            function C() {
                for (let e of E) s.default.setDisableLocalVideo(e, d.VideoToggleState.MANUAL_ENABLED, c.MediaEngineContextTypes.DEFAULT, !1);
                f.clear(), E.clear()
            }
            class h extends l.default {
                _initialize() {
                    a.default.subscribe("RTC_CONNECTION_VIDEO", this.handleIncomingVideo), a.default.subscribe("AUDIO_SET_LOCAL_VIDEO_DISABLED", this.handleManualLocalVideoToggle), a.default.subscribe("WINDOW_FOCUS", this.handleWindowFocus), a.default.subscribe("VOICE_CHANNEL_SELECT", this.handleVoiceChannelSelect), i.default.addChangeListener(this.handlePopoutChange)
                }
                _terminate() {
                    a.default.unsubscribe("RTC_CONNECTION_VIDEO", this.handleIncomingVideo), a.default.unsubscribe("AUDIO_SET_LOCAL_VIDEO_DISABLED", this.handleManualLocalVideoToggle), a.default.unsubscribe("WINDOW_FOCUS", this.handleWindowFocus), a.default.unsubscribe("VOICE_CHANNEL_SELECT", this.handleVoiceChannelSelect), i.default.removeChangeListener(this.handlePopoutChange), C(), _ = null
                }
                handleIncomingVideo(e) {
                    let {
                        userId: t,
                        context: n,
                        streamId: a
                    } = e;
                    if (n !== c.MediaEngineContextTypes.DEFAULT || null == a) return;
                    let l = null != o.default.getVisibleGame(),
                        _ = u.default.isFocused(),
                        C = i.default.getWindowFocused(d.PopoutWindowKeys.CHANNEL_CALL_POPOUT),
                        h = r.default.isLocalVideoDisabled(t, n),
                        I = f.has(t);
                    l && !_ && !C && !h && !I && (E.add(t), s.default.setDisableLocalVideo(t, d.VideoToggleState.DISABLED, n, !1))
                }
                handleManualLocalVideoToggle(e) {
                    let {
                        userId: t,
                        persist: n
                    } = e;
                    n && (f.add(t), E.delete(t))
                }
                constructor(...e) {
                    super(...e), this.handleWindowFocus = e => {
                        let {
                            focused: t
                        } = e;
                        t && C()
                    }, this.handleVoiceChannelSelect = e => {
                        let {
                            channelId: t
                        } = e;
                        t !== _ && (C(), _ = t)
                    }, this.handlePopoutChange = () => {
                        i.default.getWindowFocused(d.PopoutWindowKeys.CHANNEL_CALL_POPOUT) && C()
                    }
                }
            }
            var I = new h
        },
        278572: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return Y
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("301165"),
                o = n("446674"),
                u = n("77078"),
                d = n("561288"),
                c = n("228157"),
                E = n("987317"),
                f = n("543155"),
                _ = n("843962"),
                C = n("679653"),
                h = n("393414"),
                I = n("659558"),
                T = n("439141"),
                S = n("648911"),
                N = n("999180"),
                A = n("289180"),
                m = n("19065"),
                p = n("981913"),
                g = n("742683"),
                R = n("116439"),
                O = n("42887"),
                L = n("697218"),
                v = n("471671"),
                M = n("945330"),
                P = n("823050"),
                D = n("439932"),
                y = n("191145"),
                x = n("458685"),
                U = n("49111"),
                b = n("353927"),
                G = n("782340"),
                j = n("597976"),
                w = n("212029");
            let k = {
                    width: 232,
                    height: 315
                },
                F = {
                    width: 232,
                    height: 267
                },
                B = {
                    width: 475,
                    height: 267
                };

            function H(e) {
                let {
                    header: t
                } = e, n = O.default.getCameraComponent(), l = (0, o.useStateFromStores)([O.default], () => O.default.getVideoDeviceId()), i = (0, S.default)();
                return s.useEffect(() => {
                    let e = L.default.getCurrentUser();
                    if (i && null != e) {
                        let t = (0, I.getLastUsedVideoBackgroundOption)(e);
                        (0, T.applyBackgroundOptionPreview)(t, l, {
                            track: !1
                        }).catch(U.NOOP)
                    }
                }, [i, l]), (0, a.jsxs)("div", {
                    className: j.previewRoot,
                    children: [(0, a.jsx)(u.Spinner, {}), (0, a.jsx)("div", {
                        className: j.preview,
                        children: (0, a.jsx)(n, {
                            disabled: !1,
                            deviceId: l,
                            width: B.width,
                            height: B.height
                        })
                    }), (0, a.jsx)("div", {
                        className: j.previewChannelHeader,
                        children: t
                    })]
                })
            }

            function V(e) {
                let {
                    canVideo: t,
                    channel: n,
                    numVideoDevices: s
                } = e, {
                    cameraUnavailable: l,
                    enabled: r
                } = (0, N.default)(), o = (0, A.default)(n);
                return (0, a.jsxs)("div", {
                    className: j.actions,
                    children: [(0, a.jsx)(p.CenterControlButton, {
                        iconComponent: M.default,
                        color: "red",
                        className: j.actionButton,
                        label: G.default.Messages.DISMISS,
                        onClick: () => d.default.stopRinging(n.id)
                    }), t && (0, a.jsx)(u.Popout, {
                        renderPopout: e => {
                            let {
                                closePopout: t
                            } = e;
                            return (0, a.jsx)(x.default, {
                                onClose: t
                            })
                        },
                        position: "top",
                        align: "center",
                        animation: u.Popout.Animation.FADE,
                        children: (e, t) => {
                            let {
                                onClick: i
                            } = e, {
                                isShown: u
                            } = t;
                            return (0, a.jsx)(R.default, {
                                join: !0,
                                enabled: r,
                                color: "green",
                                centerButton: !0,
                                hasPermission: o,
                                cameraUnavailable: l,
                                channel: n,
                                onPopoutClick: s > 1 ? i : null,
                                className: j.actionButton,
                                popoutOpen: u,
                                onCameraUnavailable: m.default,
                                onChange: () => {
                                    E.default.selectVoiceChannel(n.id, !0), (0, h.transitionToGuild)(U.ME, n.id)
                                }
                            })
                        }
                    }), (0, a.jsx)(g.default, {
                        channel: n,
                        color: "green",
                        centerButton: !0,
                        className: i(j.actionButton, j.last),
                        onClick: () => E.default.selectVoiceChannel(n.id)
                    })]
                })
            }

            function Y(e) {
                let {
                    animatedStyle: t,
                    y: n,
                    x: l,
                    channel: E
                } = e, [h, I] = s.useState(!1), T = (0, _.getChannelIconURL)(E), S = (0, C.default)(E), [N, A] = (0, o.useStateFromStoresArray)([O.default], () => [O.default.supports(b.Features.VIDEO), Object.keys(O.default.getVideoDevices()).length]), m = (0, o.useStateFromStores)([v.default], () => v.default.isFocused()), p = (0, o.useStateFromStores)([y.default], () => y.default.getMode(E.id)), g = s.useCallback(e => {
                    null != e.top && null != e.left && c.default.move(e.left, e.top)
                }, []), R = (0, r.useSpring)({
                    value: h ? 1 : 0,
                    config: {
                        ...r.config.stiff,
                        clamp: !0
                    }
                });
                s.useEffect(() => {
                    let e = e => {
                        e.keyCode === U.KeyboardKeys.ESCAPE && d.default.stopRinging(E.id)
                    };
                    return window.addEventListener("keydown", e), () => window.removeEventListener("keydown", e)
                }, [E]);
                let L = p === U.ChannelModes.VIDEO && N && A > 0,
                    M = (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(P.default, {
                            className: j.icon,
                            ringing: m,
                            src: null != T ? T : "",
                            ringingType: P.default.RingingType.INCOMING,
                            size: h ? u.AvatarSizes.SIZE_40 : u.AvatarSizes.SIZE_80
                        }), (0, a.jsxs)("div", {
                            className: j.titleGroup,
                            children: [(0, a.jsx)(u.Text, {
                                className: j.title,
                                color: "header-primary",
                                variant: h ? "text-md/semibold" : "text-lg/semibold",
                                children: S
                            }), (0, a.jsx)(u.Text, {
                                color: "header-secondary",
                                className: j.subtitle,
                                variant: h ? "text-sm/normal" : "text-md/normal",
                                children: p === U.ChannelModes.VOICE ? G.default.Messages.INCOMING_CALL_ELLIPSIS : G.default.Messages.INCOMING_VIDEO_CALL_ELLIPSIS
                            })]
                        })]
                    }),
                    x = L ? k : F;
                return (0, a.jsx)(f.default, {
                    className: j.wrapper,
                    selector: ".".concat(j.root),
                    initialPosition: {
                        left: l,
                        top: n
                    },
                    maxX: window.innerWidth,
                    maxY: window.innerHeight,
                    onDragEnd: g,
                    dragAnywhere: !0,
                    children: (0, a.jsx)(a.Fragment, {
                        children: (0, a.jsxs)(r.animated.div, {
                            className: i(j.root, w.elevationHigh, {
                                [j.previewCamera]: h
                            }, h ? (0, D.getThemeClass)("dark") : null),
                            style: {
                                ...t,
                                width: R.value.interpolate([0, 1], [x.width, B.width]),
                                minHeight: R.value.interpolate([0, 1], [x.height, B.height]),
                                translateX: R.value.interpolate([0, 1], [0, -1 * Math.abs(B.width - x.width) / 2])
                            },
                            children: [h ? (0, a.jsx)(H, {
                                header: M
                            }) : (0, a.jsx)("div", {
                                className: j.mainChannelInfo,
                                children: M
                            }), (0, a.jsx)(V, {
                                canVideo: L,
                                channel: E,
                                numVideoDevices: A
                            }), L && !h ? (0, a.jsx)(u.Button, {
                                size: u.Button.Sizes.SMALL,
                                fullWidth: !0,
                                look: u.Button.Looks.LINK,
                                color: u.Button.Colors.PRIMARY,
                                className: j.previewButton,
                                onClick: () => I(!0),
                                children: G.default.Messages.INCOMING_CALL_PREVIEW_CAMERA
                            }) : null]
                        })
                    })
                })
            }
        },
        959646: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("629109"),
                i = n("135230"),
                r = n("782340");

            function o(e) {
                if (e) {
                    (0, s.openModal)(e => (0, a.jsx)(i.default, {
                        ...e,
                        title: r.default.Messages.SERVER_DEAFENED_DIALOG_TITLE,
                        body: r.default.Messages.SERVER_DEAFENED_DIALOG_BODY
                    }));
                    return
                }
                l.default.toggleSelfDeaf()
            }
        },
        516899: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("884691"),
                s = n("717811");

            function l(e) {
                a.useEffect(() => {
                    if (null != e) return s.default.lockChangeLog(e), () => {
                        s.default.unlockChangeLog(e)
                    }
                }, [e])
            }
        },
        442174: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("850391"),
                o = n("557809"),
                u = n("288518"),
                d = n("486503"),
                c = n("803524"),
                E = n("7643"),
                f = n("949067"),
                _ = n("144491"),
                C = n("208021"),
                h = n("982108"),
                I = n("945330"),
                T = n("664336"),
                S = n("679653"),
                N = n("176347"),
                A = n("782340"),
                m = n("768922"),
                p = n("421202");

            function g(e) {
                let {
                    channel: t,
                    baseChannelId: n
                } = e, g = (0, S.default)(t), R = (0, c.useListHasSingleMessageRequest)(), O = (0, c.useListHasSingleSpamMessageRequest)(), L = (0, l.useStateFromStores)([u.default], () => u.default.isMessageRequest(t.id)), v = (0, l.useStateFromStores)([d.default], () => d.default.isSpam(t.id)), M = (0, f.useLongestChannelMessageBeforeReply)(t.id, t.getRecipientId()), P = s.useCallback(() => {
                    C.default.closeChannelSidebar(h.MESSAGE_REQUESTS_BASE_CHANNEL_ID), L && R && (0, _.transitionToChannel)(t.id), v && O && (0, _.transitionToChannel)(t.id)
                }, [t.id, v, O, L, R]), D = s.useCallback(() => {
                    (0, i.showToast)((0, i.createToast)(A.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE, i.ToastType.FAILURE))
                }, []), {
                    markAsNotSpam: y
                } = (0, E.useMessageRequestActions)({
                    onAcceptSuccess: P,
                    onError: D
                });
                if (null == t || !t.isDM()) return null;
                let x = [(0, a.jsx)(T.default.Icon, {
                    icon: I.default,
                    tooltip: A.default.Messages.CLOSE,
                    onClick: () => C.default.closeChannelSidebar(n)
                }, "close")];
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(T.default, {
                        toolbar: x,
                        "aria-label": A.default.Messages.CHANNEL_HEADER_BAR_A11Y_LABEL,
                        children: (0, o.renderTitle)({
                            channel: t,
                            channelName: g,
                            inSidebar: !0
                        })
                    }), v && (0, a.jsxs)("div", {
                        className: p.hamBanner,
                        children: [(0, a.jsx)(i.Text, {
                            className: p.hamBannerText,
                            variant: "text-sm/normal",
                            children: A.default.Messages.MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_HEADER
                        }), (0, a.jsx)(i.Button, {
                            className: p.hamBannerButton,
                            size: i.ButtonSizes.SMALL,
                            onClick: () => y(t, M),
                            children: A.default.Messages.MESSAGE_REQUESTS_CHANNEL_SIDEBAR_HAM_BUTTON
                        })]
                    }), (0, a.jsx)("div", {
                        className: m.chat,
                        children: (0, a.jsx)(N.default, {
                            channel: t,
                            guild: null,
                            chatInputType: r.ChatInputTypes.SIDEBAR
                        }, t.id)
                    })]
                })
            }
        },
        837844: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("65597"),
                o = n("151426"),
                u = n("509802"),
                d = n("131143"),
                c = n("162771"),
                E = n("120363"),
                f = n("994428"),
                _ = n("326185");
            let C = s.memo(function(e) {
                var t, n, l;
                let {
                    state: r,
                    markAsDismissed: u
                } = e, {
                    name: c,
                    guildId: E,
                    boundingRect: f
                } = r, C = s.useMemo(() => (function(e, t, n) {
                    if (e === o.DismissibleContent.RECURRING_EVENT_COACHMARK) return (0, a.jsx)(d.default, {
                        guildId: t,
                        markAsDismissed: n
                    });
                    return null
                })(c, E, u), [c, E, u]);
                if (null == C) return null;
                return (0, a.jsx)("div", {
                    className: i(_.upsell, !(null != (t = f) && !(t.y < 0)) && _.hidden),
                    style: (n = 0, null == (l = f) ? {} : {
                        top: l.top,
                        left: l.right - l.x
                    }),
                    children: C
                })
            });

            function h() {
                let e = (0, r.default)([c.default], () => c.default.getGuildId()),
                    t = (0, E.useChannelListUpsells)(e),
                    [n, s] = (0, u.useDismissibleContentGroup)(Object.values(t).filter(e => {
                        let {
                            disabled: t
                        } = e;
                        return !t
                    }).map(e => {
                        let {
                            name: t
                        } = e;
                        return t
                    }), f.DismissibleContentGroupName.SIDEBAR);
                if (null == n) return null;
                let l = t[n];
                return null == l ? null : (0, a.jsx)("div", {
                    className: _.container,
                    children: (0, a.jsx)(C, {
                        state: l,
                        markAsDismissed: s
                    })
                })
            }
        },
        478761: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useChannelNoticeRedesignExperiment: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2022-12_channel_notice_redesign",
                label: "Channel Notice Redesign",
                defaultConfig: {
                    showRedesignedChannelNotice: !1,
                    showRedesignedLiveChannelNotice: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show Redesigned Channel Notices",
                    config: {
                        showRedesignedChannelNotice: !0,
                        showRedesignedLiveChannelNotice: !1
                    }
                }, {
                    id: 2,
                    label: "Show Redesigned Stage/Event Notices",
                    config: {
                        showRedesignedChannelNotice: !1,
                        showRedesignedLiveChannelNotice: !0
                    }
                }, {
                    id: 3,
                    label: "Show Redesigned Channel Notices & Stage/Event Notices",
                    config: {
                        showRedesignedChannelNotice: !0,
                        showRedesignedLiveChannelNotice: !0
                    }
                }]
            });

            function l() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                    {
                        showRedesignedChannelNotice: t,
                        showRedesignedLiveChannelNotice: n
                    } = s.useExperiment({
                        location: "c0d6eb_1"
                    }, {
                        autoTrackExposure: e
                    });
                return {
                    showRedesignedChannelNotice: t,
                    showRedesignedLiveChannelNotice: n
                }
            }
        },
        640322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return U
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("151426"),
                r = n("95410"),
                o = n("489560"),
                u = n("343885"),
                d = n("570319"),
                c = n("475405"),
                E = n("55058"),
                f = n("509802"),
                _ = n("48821"),
                C = n("388437"),
                h = n("667048"),
                I = n("580362"),
                T = n("153014"),
                S = n("79176"),
                N = n("986321"),
                A = n("519440"),
                m = n("947337"),
                p = n("197881"),
                g = n("401774"),
                R = n("607894"),
                O = n("746504"),
                L = n("107153"),
                v = n("32505"),
                M = n("731681"),
                P = n("427474"),
                D = n("994428");

            function y(e) {
                e.stopPropagation()
            }

            function x(e) {
                var t;
                let {
                    guild: n
                } = e, [o, _] = s.useState(null !== (t = r.default.get(P.LAST_HIDDEN_CHANNEL_NOTICE)) && void 0 !== t ? t : 0), T = e => {
                    r.default.set(P.LAST_HIDDEN_CHANNEL_NOTICE, e), _(e)
                }, N = (0, l.useStateFromStoresArray)(P.CHANNEL_NOTICE_STORES, () => P.CHANNEL_NOTICES.filter(e => {
                    let {
                        store: t
                    } = e;
                    return null == t ? void 0 : t.channelNoticePredicate(n, o)
                }).map(e => e.dismissibleContentType)), A = (0, d.default)(n.id, "channel_notice");
                return u.default.useExperiment({
                    guildId: n.id,
                    location: "channel_notice"
                }), (0, a.jsx)(f.default, {
                    contentTypes: N,
                    groupName: D.DismissibleContentGroupName.CHANNEL_NOTICES,
                    children: e => {
                        let {
                            visibleContent: t,
                            markAsDismissed: s
                        } = e, l = () => {
                            T(Date.now()), s(D.ContentDismissActionType.UNKNOWN)
                        }, r = (() => {
                            switch (t) {
                                case i.DismissibleContent.CHANNEL_NOTICE_HUBLINK:
                                    return (0, a.jsx)(S.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_INVITE:
                                    return (0, a.jsx)(O.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION:
                                    return (0, a.jsx)(h.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER:
                                    return (0, a.jsx)(v.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER:
                                    return (0, a.jsx)(C.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE:
                                    return (0, a.jsx)(R.default, {
                                        guild: n,
                                        markAsDismissed: l
                                    });
                                case i.DismissibleContent.LINKED_ROLE_ADMIN_GUILD:
                                    return (0, a.jsx)(E.default, {
                                        guild: n,
                                        markAsDismissed: () => s(D.ContentDismissActionType.UNKNOWN)
                                    });
                                default:
                                    return null
                            }
                        })();
                        if (null == r) {
                            if (!A || (0, I.isContentDismissed)(i.DismissibleGuildContent.CLYDE_GUILD_NOTICE_NUX, n.id)) return null;
                            r = (0, a.jsx)(c.default, {
                                guild: n,
                                markAsDismissed: () => {
                                    (0, I.markContentAsDismissed)(i.DismissibleGuildContent.CLYDE_GUILD_NOTICE_NUX, n.id, !0)
                                }
                            })
                        }
                        return (0, a.jsx)("div", {
                            onContextMenu: y,
                            children: r
                        })
                    }
                })
            }
            var U = e => {
                let {
                    guild: t
                } = e, n = (0, M.default)(t);
                switch (n) {
                    case M.ConnectedChannelNotices.ENABLE_PUBLIC_GUILD:
                        return (0, a.jsx)(m.default, {
                            guild: t
                        });
                    case M.ConnectedChannelNotices.APPLIED_GUILD_BOOST_GRACE_PERIOD:
                        return (0, a.jsx)(_.default, {
                            guild: t
                        });
                    case M.ConnectedChannelNotices.MAX_MEMBER_COUNT:
                        return (0, a.jsx)(L.default, {
                            guild: t
                        });
                    case M.ConnectedChannelNotices.GUILD_LIVE_CHANNEL:
                        return (0, a.jsx)(T.default, {
                            guild: t
                        });
                    case M.ConnectedChannelNotices.GUILD_MFA_WARNING:
                        return (0, a.jsx)(g.default, {
                            guild: t
                        });
                    case M.ConnectedChannelNotices.COMMANDS_MIGRATION:
                        return (0, a.jsx)(A.default, {
                            guild: t
                        });
                    case M.ConnectedChannelNotices.APPLICATION_SUBSCRIPTION_EXPIRATION:
                        return (0, a.jsx)(o.default, {
                            guild: t
                        });
                    case M.ConnectedChannelNotices.HUB_STUDY_ROOM:
                        return (0, a.jsx)(N.default, {
                            guild: t
                        })
                }
                return p.ProcessArgs.isDisallowPopupsSet() ? null : (0, a.jsx)(x, {
                    guild: e.guild
                })
            }
        },
        427474: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                LAST_HIDDEN_CHANNEL_NOTICE: function() {
                    return E
                },
                CHANNEL_NOTICES: function() {
                    return f
                },
                CHANNEL_NOTICE_STORES: function() {
                    return _
                }
            });
            var a = n("151426"),
                s = n("116460"),
                l = n("779671"),
                i = n("8452"),
                r = n("433973"),
                o = n("150057"),
                u = n("141162"),
                d = n("449008"),
                c = n("49111");
            let E = "lastHiddenChannelNotice",
                f = [{
                    type: c.ChannelNoticeTypes.GUILD_BOOSTING,
                    store: i.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION
                }, {
                    type: c.ChannelNoticeTypes.GUILD_BANNER,
                    store: l.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_GUILD_BANNER
                }, {
                    type: c.ChannelNoticeTypes.INVITE,
                    store: u.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_INVITE
                }, {
                    type: c.ChannelNoticeTypes.HUB_LINK,
                    store: o.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_HUBLINK
                }, {
                    type: c.ChannelNoticeTypes.QUICKSWITCHER,
                    store: s.default,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER
                }, {
                    type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL,
                    store: r.default,
                    dismissibleContentType: a.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE
                }, {
                    type: c.ChannelNoticeTypes.LINKED_ROLES_ADMIN,
                    dismissibleContentType: a.DismissibleContent.LINKED_ROLE_ADMIN_GUILD
                }, {
                    type: c.ChannelNoticeTypes.CLYDE_ADMIN_NUX,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_CLYDE_NUX
                }, {
                    type: c.ChannelNoticeTypes.CLYDE_USER_NUX,
                    dismissibleContentType: a.DismissibleContent.CHANNEL_NOTICE_CLYDE_NUX
                }],
                _ = f.map(e => e.store).filter(d.isNotNullish)
        },
        401774: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("79112"),
                i = n("963662"),
                r = n("49111"),
                o = n("782340"),
                u = n("37476");
            class d extends s.PureComponent {
                render() {
                    return (0, a.jsx)(i.default, {
                        guild: this.props.guild,
                        onClick: () => l.default.open(r.UserSettingsSections.ACCOUNT),
                        message: o.default.Messages.TWO_FA_GUILD_MFA_WARNING_MESSAGE_WITH_SPACING.format(),
                        cta: o.default.Messages.TWO_FA_GUILD_MFA_WARNING_RESOLVE_BUTTON,
                        trackingSource: r.ChannelNoticeCtaSources.GUILD_MFA_WARNING,
                        type: r.ChannelNoticeTypes.MFA_WARNING,
                        image: u,
                        imageMarginX: 54,
                        undismissable: !0
                    })
                }
            }
            var c = d
        },
        607894: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("10641"),
                r = n("179803"),
                o = n("592407"),
                u = n("599110"),
                d = n("164586"),
                c = n("49111"),
                E = n("994428"),
                f = n("782340"),
                _ = e => {
                    let {
                        guild: t,
                        markAsDismissed: n
                    } = e;
                    s.useEffect(() => {
                        (0, i.requestMarkDismissibleContentAsShown)(l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                    }, []);
                    let _ = s.useCallback(() => {
                            o.default.open(t.id, c.GuildSettingsSections.ONBOARDING), u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                                type: l.DismissibleContent[l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE],
                                action: "primary"
                            }), (0, i.markDismissibleContentAsDismissed)(l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE, {
                                dismissAction: E.ContentDismissActionType.PRIMARY
                            }), (0, r.dismissedGuildOnboardingUpsell)(t.id, l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                        }, [t.id]),
                        C = s.useCallback(() => {
                            u.default.track(c.AnalyticEvents.UPSELL_CLICKED, {
                                type: l.DismissibleContent[l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE],
                                action: "dismiss"
                            }), n(E.ContentDismissActionType.UNKNOWN), (0, r.dismissedGuildOnboardingUpsell)(t.id, l.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                        }, [t.id, n]);
                    return (0, a.jsx)(d.default, {
                        guild: t,
                        onDismissed: C,
                        onClick: _,
                        title: f.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_TITLE,
                        message: f.default.Messages.GUILD_ONBOARDING_CHANNEL_NOTICE_MESSAGE,
                        cta: f.default.Messages.CHECK_IT_OUT,
                        trackingSource: c.ChannelNoticeCtaSources.GUILD_ONBOARDING_UPSELL_NOTICE,
                        type: c.ChannelNoticeTypes.GUILD_ONBOARDING_UPSELL
                    })
                }
        },
        746504: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("819689"),
                r = n("18494"),
                o = n("963662"),
                u = n("49111"),
                d = n("994428"),
                c = n("782340"),
                E = n("292379");
            class f extends s.PureComponent {
                render() {
                    let e = "".concat(c.default.Messages.INVITE_NOTICE_MESSAGE, "\n").concat(c.default.Messages.INVITE_NOTICE_MESSAGE_PART_2);
                    return (0, a.jsx)(o.default, {
                        guild: this.props.guild,
                        onDismissed: this.handleClose,
                        onClick: this.handleInvite,
                        message: e,
                        cta: c.default.Messages.INVITE_PEOPLE,
                        trackingSource: u.ChannelNoticeCtaSources.INVITE_NOTICE,
                        type: u.ChannelNoticeTypes.INVITE,
                        image: E,
                        imageMarginX: 46
                    })
                }
                constructor(...e) {
                    super(...e), this.handleInvite = () => {
                        let {
                            guild: e
                        } = this.props;
                        (0, l.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await n.el("310688").then(n.bind(n, "310688"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guild: e,
                                source: u.InstantInviteSources.INVITE_NOTICE
                            })
                        })
                    }, this.handleClose = () => {
                        let e = r.default.getChannelId();
                        this.props.markAsDismissed(d.ContentDismissActionType.UNKNOWN), null != e && i.default.sendBotMessage(e, c.default.Messages.HOW_TO_INVITE_OTHERS.format({
                            invitePeople: c.default.Messages.INVITE_PEOPLE
                        }))
                    }
                }
            }
            var _ = f
        },
        810467: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return V
                }
            }), n("222007");
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("414456"),
                o = n.n(r),
                u = n("446674"),
                d = n("669491"),
                c = n("77078"),
                E = n("327037"),
                f = n("419830"),
                _ = n("374021"),
                C = n("398604"),
                h = n("395869"),
                I = n("824650"),
                T = n("1339"),
                S = n("593897"),
                N = n("534222"),
                A = n("841363"),
                m = n("822516"),
                p = n("393414"),
                g = n("716214"),
                R = n("488464"),
                O = n("998716"),
                L = n("834052"),
                v = n("160870"),
                M = n("506885"),
                P = n("981601"),
                D = n("957255"),
                y = n("697218"),
                x = n("945330"),
                U = n("272339"),
                b = n("89684"),
                G = n("718550"),
                j = n("228427"),
                w = n("290581"),
                k = n("49111"),
                F = n("745049"),
                B = n("782340"),
                H = n("832025");
            (s = a || (a = {}))[s.STAGE = 0] = "STAGE", s[s.EVENT_EXTERNAL = 1] = "EVENT_EXTERNAL", s[s.EVENT_VOICE = 2] = "EVENT_VOICE", s[s.STUDY_ROOM = 3] = "STUDY_ROOM";

            function V(e) {
                let {
                    guild: t,
                    isStudyRoomNotice: n = !1
                } = e, a = (0, S.useActiveEventOrStageInstanceChannel)(t.id), s = (0, N.useGuildActiveEvent)(t.id), r = (0, u.useStateFromStores)([L.default], () => L.default.getStageInstanceByChannel(null == a ? void 0 : a.id), [a]), {
                    isStageNoticeHidden: V,
                    isEventNoticeHidden: Y
                } = (0, u.useStateFromStoresObject)([I.default], () => ({
                    isStageNoticeHidden: I.default.isLiveChannelNoticeHidden({
                        stageId: null == r ? void 0 : r.id
                    }),
                    isEventNoticeHidden: I.default.isLiveChannelNoticeHidden({
                        eventId: null == s ? void 0 : s.id
                    })
                }), [r, s]), W = null == a ? void 0 : a.id, {
                    speakers: K,
                    listenerCount: z
                } = (0, u.useStateFromStoresObject)([R.default], () => {
                    let e = R.default.getMutableParticipants(W, O.StageChannelParticipantNamedIndex.SPEAKER),
                        t = null != W ? R.default.getParticipantCount(W, O.StageChannelParticipantNamedIndex.AUDIENCE) : 0;
                    return {
                        speakers: [...new Set(e.map(e => e.user))],
                        listenerCount: t
                    }
                }, [W]), q = (0, u.useStateFromStores)([D.default], () => D.default.can(k.Permissions.CONNECT, a)), Q = (0, v.default)(null == a ? void 0 : a.id), Z = null == s ? void 0 : s.creator_id, X = (0, u.useStateFromStores)([y.default], () => y.default.getUser(Z), [Z]);
                i.useEffect(() => {
                    null != Z && (0, E.getUser)(Z)
                }, [Z]);
                let {
                    noticeType: J,
                    title: $,
                    location: ee,
                    locationIcon: et,
                    canListenIn: en,
                    buttonText: ea,
                    users: es,
                    overflowUsers: el,
                    onClose: ei
                } = i.useMemo(() => (function(e) {
                    let {
                        guildEvent: t,
                        stageInstance: n,
                        activeChannel: a,
                        canConnect: s,
                        myRole: i,
                        eventCreator: r,
                        speakers: o,
                        listenerCount: u,
                        isEventNoticeHidden: d,
                        isStageNoticeHidden: E,
                        isStudyRoomNotice: _
                    } = e, I = null != n && null != a && !E, S = null != t ? (0, m.getNextRecurrenceIdInEvent)(t) : null;
                    if (_ && null != a) {
                        let e = (0, f.getChannelIconComponent)(a);
                        return {
                            noticeType: 3,
                            title: "\uD83D\uDCDA☕ ".concat(a.name),
                            location: B.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
                            locationIcon: null != e ? (0, l.jsx)(e, {
                                width: 16,
                                height: 16,
                                className: H.locationIcon
                            }) : null,
                            canListenIn: s,
                            buttonText: B.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
                            users: [],
                            overflowUsers: null
                        }
                    }
                    if (null == t || d) {
                        if (I) {
                            let e = B.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                            return (null == i ? void 0 : i.speaker) ? e = B.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != i && (e = B.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON), {
                                noticeType: 0,
                                title: n.topic,
                                location: a.name,
                                locationIcon: (0, l.jsx)(j.default, {
                                    width: 16,
                                    height: 16,
                                    className: H.locationIcon
                                }),
                                canListenIn: s,
                                buttonText: e,
                                onClose: () => (0, h.hideLiveChannelNotice)({
                                    stageId: null == n ? void 0 : n.id
                                }),
                                users: o.length > 5 ? o.slice(0, 5) : o,
                                overflowUsers: u < 1 ? null : (0, l.jsxs)("div", {
                                    className: H.pill,
                                    children: [(0, l.jsx)(U.default, {
                                        width: 12,
                                        height: 12,
                                        className: H.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: H.pillLabel,
                                        children: u
                                    })]
                                })
                            }
                        }
                    } else {
                        if (t.entity_type === F.GuildScheduledEventEntityTypes.STAGE_INSTANCE && I) {
                            let e = B.default.Messages.STAGE_CHANNEL_JOIN_BUTTON;
                            return (null == i ? void 0 : i.speaker) ? e = B.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != i && (e = B.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON), {
                                noticeType: 0,
                                title: n.topic,
                                location: a.name,
                                locationIcon: (0, l.jsx)(j.default, {
                                    width: 16,
                                    height: 16,
                                    className: H.locationIcon
                                }),
                                canListenIn: s,
                                buttonText: e,
                                onClose: () => (0, h.hideLiveChannelNotice)({
                                    stageId: null == n ? void 0 : n.id
                                }),
                                users: o.length > 5 ? o.slice(0, 5) : o,
                                overflowUsers: u < 1 ? null : (0, l.jsxs)("div", {
                                    className: H.pill,
                                    children: [(0, l.jsx)(U.default, {
                                        width: 12,
                                        height: 12,
                                        className: H.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: H.pillLabel,
                                        children: u
                                    })]
                                })
                            }
                        }
                        if (t.entity_type === F.GuildScheduledEventEntityTypes.EXTERNAL) {
                            let e = (0, A.getLocationFromEvent)(t);
                            if (null == e) return {
                                noticeType: null
                            };
                            let n = C.default.getUserCount(t.id, S);
                            return {
                                noticeType: 1,
                                title: t.name,
                                location: (0, T.guildEventDetailsParser)(e, !0),
                                locationIcon: (0, l.jsx)(G.default, {
                                    width: 16,
                                    height: 16,
                                    className: H.locationIcon
                                }),
                                canListenIn: !1,
                                buttonText: B.default.Messages.GUILD_EVENT_DETAILS_INFO_TAB_TITLE,
                                onClose: () => (0, h.hideLiveChannelNotice)({
                                    eventId: null == t ? void 0 : t.id
                                }),
                                users: null == r ? [] : [r],
                                overflowUsers: n < 1 ? null : (0, l.jsxs)("div", {
                                    className: H.pill,
                                    children: [(0, l.jsx)(w.default, {
                                        width: 12,
                                        height: 12,
                                        className: H.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: H.pillLabel,
                                        children: n
                                    })]
                                })
                            }
                        } else if (t.entity_type === F.GuildScheduledEventEntityTypes.VOICE && null != a) {
                            let e = (0, f.getChannelIconComponent)(a),
                                n = C.default.getUserCount(t.id, S);
                            return {
                                noticeType: 2,
                                title: t.name,
                                location: a.name,
                                locationIcon: null != e ? (0, l.jsx)(e, {
                                    width: 16,
                                    height: 16,
                                    className: H.locationIcon
                                }) : null,
                                canListenIn: s,
                                buttonText: B.default.Messages.GUILD_EVENT_JOIN,
                                onClose: () => (0, h.hideLiveChannelNotice)({
                                    eventId: null == t ? void 0 : t.id
                                }),
                                users: null == r ? [] : [r],
                                overflowUsers: n < 1 ? null : (0, l.jsxs)("div", {
                                    className: H.pill,
                                    children: [(0, l.jsx)(w.default, {
                                        width: 12,
                                        height: 12,
                                        className: H.pillIcon
                                    }), (0, l.jsx)(c.Text, {
                                        variant: "text-xs/medium",
                                        color: "header-secondary",
                                        className: H.pillLabel,
                                        children: n
                                    })]
                                })
                            }
                        }
                    }
                    return {
                        noticeType: null
                    }
                })({
                    guildEvent: s,
                    stageInstance: r,
                    activeChannel: a,
                    canConnect: q,
                    myRole: Q,
                    eventCreator: X,
                    speakers: K,
                    listenerCount: z,
                    isEventNoticeHidden: Y,
                    isStageNoticeHidden: V,
                    isStudyRoomNotice: n
                }), [s, r, a, q, Q, X, K, z, Y, V, n]);
                return null == J ? null : (0, l.jsxs)("div", {
                    className: H.container,
                    children: [null != ei ? (0, l.jsx)(c.Clickable, {
                        onClick: ei,
                        className: H.close,
                        "aria-label": B.default.Messages.DISMISS,
                        children: (0, l.jsx)(x.default, {
                            className: H.closeIcon
                        })
                    }) : null, (0, l.jsxs)("div", {
                        className: H.header,
                        children: [(0, l.jsx)(b.default, {
                            color: d.default.unsafe_rawColors.GREEN_230.css,
                            width: 16,
                            height: 16
                        }), (0, l.jsx)(c.Text, {
                            variant: "text-xs/semibold",
                            color: "text-positive",
                            children: B.default.Messages.LIVE
                        })]
                    }), (es.length > 0 || null != el) && (0, l.jsxs)("div", {
                        className: H.participants,
                        children: [es.map(e => (0, l.jsx)(c.Popout, {
                            preload: () => (0, M.default)(e.id, e.getAvatarURL(t.id, 80), {
                                guildId: t.id
                            }),
                            renderPopout: t => (0, l.jsx)(P.default, {
                                ...t,
                                userId: e.id
                            }),
                            position: "right",
                            children: n => (0, l.jsx)(c.Avatar, {
                                ...n,
                                src: e.getAvatarURL(t.id, 24),
                                "aria-label": e.username,
                                size: c.AvatarSizes.SIZE_24,
                                className: H.avatar
                            })
                        }, e.id)), el]
                    }), (0, l.jsx)(c.Text, {
                        variant: "text-md/medium",
                        color: "header-primary",
                        className: o(H.title, H.live),
                        children: $
                    }), (0, l.jsxs)("div", {
                        className: H.locationContainer,
                        children: [et, (0, l.jsx)(c.Text, {
                            variant: "text-xs/normal",
                            color: "text-muted",
                            className: H.location,
                            children: ee
                        })]
                    }), en || 1 === J ? (0, l.jsx)(c.Button, {
                        size: c.Button.Sizes.SMALL,
                        color: c.Button.Colors.GREEN,
                        onClick: () => {
                            if (en) null != a && null != a.getGuildId() && ((0, g.connectAndOpen)(a), (0, p.transitionToGuild)(a.getGuildId(), a.id));
                            else {
                                if (null == s) return;
                                (0, _.openGuildEventDetails)({
                                    eventId: s.id
                                })
                            }
                        },
                        className: H.button,
                        fullWidth: !0,
                        children: ea
                    }) : null]
                })
            }
        },
        107153: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("363025"),
                i = n("701909"),
                r = n("963662"),
                o = n("49111"),
                u = n("782340"),
                d = n("649592"),
                c = e => {
                    let {
                        guild: t
                    } = e, n = s.useCallback(() => {
                        (0, l.hideMaxMemberCountChannelNotice)(t.id)
                    }, [t.id]);
                    return (0, a.jsx)(r.default, {
                        guild: t,
                        onDismissed: n,
                        message: u.default.Messages.NOTICE_CHANNEL_MAX_MEMBERS_CAP_REACHED_MESSAGE.format({
                            maxMemberCount: t.maxMembers,
                            maxMembersUrl: i.default.getArticleURL(o.HelpdeskArticles.MAX_MEMBERS)
                        }),
                        type: o.ChannelNoticeTypes.MAX_MEMBER_COUNT,
                        image: d,
                        imageMarginX: 61
                    })
                }
        },
        963662: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("77078"),
                o = n("716241"),
                u = n("945330"),
                d = n("599110"),
                c = n("478761"),
                E = n("164586"),
                f = n("49111"),
                _ = n("782340"),
                C = n("866241");
            let h = i.debounce(o.default.trackWithMetadata, 500),
                I = e => {
                    let {
                        guild: t,
                        title: n,
                        message: l,
                        image: i,
                        type: c,
                        imageMarginX: E,
                        imageMarginTop: I,
                        trackingSource: T,
                        undismissable: S,
                        onDismissed: N,
                        onClick: A,
                        cta: m,
                        ctaColor: p
                    } = e;
                    s.useEffect(() => {
                        h(f.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
                            notice_type: c,
                            guild_id: t.id
                        })
                    }, [t.id, c]);
                    let g = null;
                    "function" == typeof m ? g = m() : null != m && (g = (0, a.jsx)(r.Button, {
                        className: C.btn,
                        size: r.Button.Sizes.SMALL,
                        onClick: () => {
                            null != c && d.default.track(f.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                                source: T,
                                guild_id: t.id,
                                notice_type: c
                            }), null == A || A()
                        },
                        fullWidth: !0,
                        color: p,
                        children: m
                    }));
                    let R = null != E ? "".concat(E, "px") : "16px";
                    return (0, a.jsxs)("div", {
                        className: C.channelNotice,
                        children: [!0 === S ? null : (0, a.jsx)(r.Clickable, {
                            onClick: () => {
                                o.default.trackWithMetadata(f.AnalyticEvents.CHANNEL_NOTICE_CLOSED, {
                                    notice_type: c
                                }), null == N || N()
                            },
                            className: C.close,
                            "aria-label": _.default.Messages.DISMISS,
                            children: (0, a.jsx)(u.default, {
                                className: C.closeIcon
                            })
                        }), (0, a.jsx)("div", {
                            className: C.imageContainer,
                            style: {
                                marginTop: "".concat(I, "px"),
                                marginLeft: R,
                                marginRight: R
                            },
                            children: (0, a.jsx)("img", {
                                className: C.image,
                                src: i,
                                alt: ""
                            })
                        }), (0, a.jsxs)("div", {
                            className: C.message,
                            children: [null != n ? (0, a.jsx)(r.Heading, {
                                variant: "heading-md/semibold",
                                className: C.title,
                                children: n
                            }) : null, (0, a.jsx)(r.Text, {
                                variant: "text-sm/normal",
                                children: l
                            }), g]
                        })]
                    })
                };
            var T = function(e) {
                let {
                    showRedesignedChannelNotice: t
                } = (0, c.useChannelNoticeRedesignExperiment)(!0);
                return t ? (0, a.jsx)(E.default, {
                    ...e
                }) : (0, a.jsx)(I, {
                    ...e
                })
            }
        },
        32505: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("242149"),
                i = n("104589"),
                r = n("963662"),
                o = n("49111"),
                u = n("994428"),
                d = n("782340"),
                c = n("398586"),
                E = e => {
                    let t = l.QUICKSWITCHER_SHOW.binds[0].split("+").map(e => null != s.PRETTY_KEYS[e] ? (0, s.PRETTY_KEYS)[e]() : e).join(" + ").toUpperCase();
                    return (0, a.jsx)(r.default, {
                        guild: e.guild,
                        onDismissed: () => e.markAsDismissed(u.ContentDismissActionType.UNKNOWN),
                        onClick: () => (0, i.show)("CHANNEL_NOTICE"),
                        message: d.default.Messages.QUICKSWITCHER_NOTICE,
                        cta: t,
                        trackingSource: o.ChannelNoticeCtaSources.QUICK_SWITCHER_NOTICE,
                        type: o.ChannelNoticeTypes.QUICKSWITCHER,
                        image: c,
                        imageMarginX: 50
                    })
                }
        },
        731681: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ConnectedChannelNotices: function() {
                    return s
                },
                default: function() {
                    return m
                }
            });
            var a, s, l = n("884691"),
                i = n("446674"),
                r = n("583367"),
                o = n("650509"),
                u = n("933326"),
                d = n("568500"),
                c = n("534222"),
                E = n("341563"),
                f = n("702411"),
                _ = n("226511"),
                C = n("735201"),
                h = n("957255"),
                I = n("833781"),
                T = n("572182"),
                S = n("201952"),
                N = n("427459"),
                A = n("49111");

            function m(e) {
                var t;
                let n = null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "",
                    {
                        lastFetchedAt: a
                    } = (0, i.useStateFromStoresObject)([C.default], () => ({
                        appliedGuildBoosts: C.default.getAppliedGuildBoostsForGuild(n),
                        lastFetchedAt: C.default.getLastFetchedAtForGuild(n)
                    })),
                    {
                        lastDismissedGracePeriod: s,
                        isGracePeriodVisible: m
                    } = (0, i.useStateFromStoresObject)([I.default], () => ({
                        lastDismissedGracePeriod: I.default.getLastDismissedGracePeriodForGuild(n),
                        isGracePeriodVisible: I.default.isVisible(n)
                    })),
                    p = (0, i.useStateFromStores)([_.default], () => _.default.isVisible(e)),
                    g = (0, i.useStateFromStores)([S.default], () => S.default.isVisible(e)),
                    R = (0, i.useStateFromStores)([h.default], () => h.default.can(A.Permissions.ADMINISTRATOR, e)),
                    O = null != s && Date.now() - s <= A.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY,
                    L = null != e ? e.premiumSubscriberCount : 0,
                    v = (0, N.getGuildTierFromAppliedBoostCount)(L, n) !== A.BoostedGuildTiers.NONE,
                    M = null != a && Date.now() - a <= 432e5,
                    P = !M && !O && R && v,
                    D = (0, d.useGuildHasLiveChannelNotice)(n),
                    y = null != (0, c.useGuildUpcomingEventsNotice)(n),
                    x = (0, i.useStateFromStores)([T.default], () => T.default.isVisible(e)),
                    U = f.default.useShouldShowChannelNotice(n),
                    b = (0, o.useUnseenEndedApplicationSubscriptionEntitlements)(e),
                    {
                        enableStudyGroup: G
                    } = (0, E.useHubStudyGroupExperiment)(e),
                    j = b.length > 0,
                    w = G && !(null == e ? void 0 : e.hasFeature(A.GuildFeatures.HUB));
                if (l.useEffect(() => {
                        u.default.getGuildEventsForCurrentUser(n)
                    }, [n]), l.useEffect(() => {
                        let e = -1;
                        return P && (e = window.setTimeout(() => {
                            null != n && (0, r.fetchAppliedGuildBoostsForGuild)(n)
                        }, 3e4 * Math.random())), () => {
                            window.clearTimeout(e)
                        }
                    }, [n, P]), p) return 0;
                if (m) return 1;
                if (g) return 2;
                else if (D || y) return 3;
                else if (x) return 4;
                else if (U) return 5;
                else if (j) return 6;
                else if (w) return 7;
                return null
            }(a = s || (s = {}))[a.ENABLE_PUBLIC_GUILD = 0] = "ENABLE_PUBLIC_GUILD", a[a.APPLIED_GUILD_BOOST_GRACE_PERIOD = 1] = "APPLIED_GUILD_BOOST_GRACE_PERIOD", a[a.MAX_MEMBER_COUNT = 2] = "MAX_MEMBER_COUNT", a[a.GUILD_LIVE_CHANNEL = 3] = "GUILD_LIVE_CHANNEL", a[a.GUILD_MFA_WARNING = 4] = "GUILD_MFA_WARNING", a[a.COMMANDS_MIGRATION = 5] = "COMMANDS_MIGRATION", a[a.APPLICATION_SUBSCRIPTION_EXPIRATION = 6] = "APPLICATION_SUBSCRIPTION_EXPIRATION", a[a.HUB_STUDY_ROOM = 7] = "HUB_STUDY_ROOM"
        },
        156565: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("77078"),
                o = n("252917"),
                u = n("945183"),
                d = n("493765"),
                c = n("485328"),
                E = n("206230"),
                f = n("105437"),
                _ = n("126090"),
                C = n("53889"),
                h = n("471671"),
                I = n("659500"),
                T = n("214875"),
                S = n("223415"),
                N = n("399174"),
                A = n("49111"),
                m = n("507812"),
                p = s.memo(function() {
                    let e = s.useRef(null),
                        t = s.useCallback(t => {
                            let {
                                duration: n,
                                intensity: a
                            } = t;
                            if (E.default.useReducedMotion || !h.default.isFocused()) return;
                            let {
                                current: s
                            } = e;
                            i(null != s, "Shakeable is shaken when not mounted"), s.shake(n, a)
                        }, []);
                    return s.useEffect(() => (c.default.setLayout(d.default), c.default.enable(), () => c.default.disable()), []), s.useEffect(() => (I.ComponentDispatch.subscribe(A.ComponentActions.SHAKE_APP, t), () => {
                        I.ComponentDispatch.unsubscribe(A.ComponentActions.SHAKE_APP, t)
                    }), [t]), (0, f.default)(), (0, a.jsxs)(r.Shakeable, {
                        ref: e,
                        className: m.app,
                        children: [(0, a.jsx)(N.default, {
                            className: m.layers,
                            children: (0, a.jsx)(o.default, {})
                        }), (0, a.jsx)(_.default, {}), (0, a.jsx)(u.default, {}), (0, a.jsx)(T.default, {}), (0, a.jsx)(C.default, {}), (0, a.jsx)(r.DnDKeyboardHelpBar, {}), (0, a.jsx)(S.default, {})]
                    })
                })
        },
        214875: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return q
                }
            }), n("702976"), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("823411"),
                r = n("299147"),
                o = n("115718"),
                u = n("575365"),
                d = n("716241"),
                c = n("382483"),
                E = n("701916"),
                f = n("939398"),
                _ = n("191145"),
                C = n("605250"),
                h = n("619443"),
                I = n("963103"),
                T = n("778613"),
                S = n("398604"),
                N = n("123561"),
                A = n("288518"),
                m = n("834052"),
                p = n("845579"),
                g = n("42203"),
                R = n("546463"),
                O = n("26989"),
                L = n("305961"),
                v = n("42887"),
                M = n("377253"),
                P = n("957255"),
                D = n("945956"),
                y = n("568307"),
                x = n("18494"),
                U = n("162771"),
                b = n("101125"),
                G = n("282109"),
                j = n("697218"),
                w = n("330338"),
                k = n("545429"),
                F = n("860957"),
                B = n("599110"),
                H = n("568734"),
                V = n("449008"),
                Y = n("50885"),
                W = n("49111"),
                K = n("6791");
            class z extends s.PureComponent {
                componentDidMount() {
                    let {
                        selectedChannelId: e,
                        connected: t,
                        isNSFWChannel: n,
                        channelParentId: a,
                        isTextInVoice: s,
                        canSendMessage: l,
                        hasPendingMemberAction: i
                    } = this.props;
                    t && null != e && ((0, d.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
                        channel_is_nsfw: n,
                        parent_id: a,
                        can_send_message: l,
                        has_pending_member_action: i
                    }), s && (0, d.trackWithMetadata)(W.AnalyticEvents.TEXT_IN_VOICE_OPENED, {
                        channel_is_nsfw: n
                    }))
                }
                componentDidUpdate(e) {
                    var t, n, a;
                    let {
                        voiceChannelId: s,
                        voiceChannelGuildId: l,
                        voiceChannelType: u,
                        voiceChannelBitrate: h,
                        videoEnabled: I,
                        isScreenSharing: T,
                        runningGame: A,
                        runningGamePid: O,
                        selectedChannelId: v,
                        selectedGuildId: P,
                        channelParentId: x,
                        connected: j,
                        homeLink: w,
                        friendsTabSection: k,
                        isNSFWChannel: z,
                        isMemberPending: q,
                        hasPreviewEnabled: Q,
                        postableChannelCount: Z,
                        isTextInVoice: X,
                        canSendMessage: J,
                        numMessageRequests: $,
                        hasPendingMemberAction: ee
                    } = this.props;
                    if (e.voiceChannelId !== s && null != e.voiceChannelId) {
                        let t = y.default.getCurrentGameForAnalytics(),
                            n = null != t ? t.name : "",
                            a = m.default.getStageInstanceByChannel(e.voiceChannelId),
                            s = S.default.getActiveEventByChannel(e.voiceChannelId);
                        B.default.track(W.AnalyticEvents.LEAVE_VOICE_CHANNEL, {
                            channel_id: e.voiceChannelId,
                            channel_type: e.voiceChannelType,
                            channel_bitrate: e.voiceChannelBitrate,
                            guild_id: e.voiceChannelGuildId,
                            rtc_connection_id: D.default.getRTCConnectionId(),
                            game_name: n,
                            duration: D.default.getDuration(),
                            game_platform: this.props.gamePlatform,
                            game_id: this.props.gameId,
                            media_session_id: D.default.getMediaSessionId(),
                            stage_instance_id: null == a ? void 0 : a.id,
                            guild_scheduled_event_id: null == s ? void 0 : s.id,
                            ...(0, d.getVoiceStateMetadata)(e.voiceChannelGuildId, e.voiceChannelId, e.videoEnabled),
                            ...D.default.getVoiceStateStats(),
                            ..._.default.getSelectedParticipantStats(e.voiceChannelId)
                        })
                    }
                    if (e.voiceChannelId !== s && null != s) {
                        let e = y.default.getCurrentGameForAnalytics(),
                            t = null != e ? e.name : "",
                            n = m.default.getStageInstanceByChannel(s),
                            a = S.default.getActiveEventByChannel(s);
                        r.default.trackExposure({
                            location: "db3810_1"
                        }), (0, d.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
                            channel_id: s,
                            channel_is_nsfw: z,
                            parent_id: x,
                            can_send_message: J,
                            has_pending_member_action: ee
                        }), B.default.track(W.AnalyticEvents.JOIN_VOICE_CHANNEL, {
                            channel_id: s,
                            channel_type: u,
                            channel_bitrate: h,
                            guild_id: l,
                            game_name: t,
                            game_platform: this.props.gamePlatform,
                            game_id: this.props.gameId,
                            stage_instance_id: null == n ? void 0 : n.id,
                            guild_scheduled_event_id: null == a ? void 0 : a.id,
                            ...(0, d.getCustomStatusMetadata)(l, s),
                            ...(0, d.getVoiceStateMetadata)(l, s, I)
                        })
                    }
                    if (e.runningGame !== A && null != A && !A.isLauncher) {
                        let e = R.default.getGameByName(A.name),
                            t = y.default.getOverrideForGame(A),
                            n = L.default.getGuildIds(),
                            a = p.ActivityRestrictedGuilds.getSetting(),
                            s = n.filter(e => !a.includes(e)).slice(0, 200),
                            l = null;
                        l = null != t ? "custom_override" : null != e ? "verified_game" : "launcher";
                        let r = (0, y.getOverlayGameStatus)(A);
                        if (setTimeout(() => {
                                var t;
                                let n = Y.default.GetWindowFullscreenTypeByPid(A.pid, A.name, A.fullscreenType);
                                B.default.track(W.AnalyticEvents.LAUNCH_GAME, {
                                    game: A.name,
                                    game_id: null == e ? null : e.id,
                                    verified: null != e,
                                    elevated: A.elevated,
                                    is_launcher: null !== (t = null == A ? void 0 : A.isLauncher) && void 0 !== t && t,
                                    game_platform: W.ActivityGamePlatforms.DESKTOP,
                                    detection_method: l,
                                    distributor: A.distributor,
                                    is_overlay_enabled: F.default.enabled,
                                    is_overlay_game_enabled: r.enabled,
                                    is_overlay_game_source: r.source,
                                    fullscreen_type: o.RunningProcessFullscreenType[n],
                                    overlay_method: K.OverlayMethod[r.overlayMethod],
                                    activity_status_enabled: p.ShowCurrentGame.getSetting(),
                                    activity_status_shared_guilds: s,
                                    current_user_status: b.default.getStatus()
                                })
                            }, 1e4), null != A.name && null != O && R.default.shouldReport(A.name)) {
                            let e = A.name;
                            i.default.identifyGame(O, e).then(e => i.default.reportUnverifiedGame(e)).catch(e => new(0, C.default)("AutoAnalytics").error("Cannot identify game", e))
                        }
                    }
                    if ((e.videoEnabled !== I || e.isScreenSharing !== T) && null != s) {
                        let e = "none",
                            t = [T ? "screen" : null, I ? "camera" : null].filter(V.isNotNullish),
                            n = null;
                        T ? (e = "screen", n = (0, f.getDesktopSourceMetadata)()) : I && (e = "camera"), B.default.track(W.AnalyticEvents.VIDEO_INPUT_TOGGLED, {
                            video_input_type: e,
                            video_toggle_source: __OVERLAY__ ? "overlay" : "app",
                            enabled_inputs: t,
                            preview_enabled: p.AlwaysPreviewVideo.getSetting(),
                            ...n,
                            ...this.getGameMetadata(),
                            ...(0, d.collectVoiceAnalyticsMetadata)(s)
                        })
                    }
                    if (j && null != P && (P !== e.selectedGuildId || !e.connected || q && !e.isMemberPending)) {
                        let e = {
                            ...q ? {
                                is_pending: q,
                                preview_enabled: Q
                            } : {},
                            postable_channels: Z,
                            premium_progress_bar_enabled: null !== (n = null === (t = L.default.getGuild(U.default.getGuildId())) || void 0 === t ? void 0 : t.premiumProgressBarEnabled) && void 0 !== n && n,
                            viewing_all_channels: !G.default.isOptInEnabled(P),
                            num_recent_channels: N.default.recentsChannelCount(P)
                        };
                        (0, d.trackWithMetadata)(W.AnalyticEvents.GUILD_VIEWED, e)
                    } else j && null == P && w === W.Routes.FRIENDS && (!e.connected || k !== e.friendsTabSection || w !== e.homeLink) ? B.default.track(W.AnalyticEvents.FRIENDS_LIST_VIEWED, {
                        tab_opened: k,
                        ...(0, c.default)()
                    }) : j && null == P && w === W.Routes.MESSAGE_REQUESTS && (!e.connected || w !== e.homeLink) && !this.isMessageRequestsInitialized && (this.isMessageRequestsInitialized = !0, B.default.track(W.AnalyticEvents.MESSAGE_REQUESTS_INITIALIZED, {
                        num_message_requests: $
                    }));
                    if (j && null != v && (!e.connected || v !== e.selectedChannelId || P !== e.selectedGuildId)) {
                        let t = e.selectedChannelId,
                            n = g.default.getChannel(t),
                            s = L.default.getGuild(null == n ? void 0 : n.getGuildId());
                        if (null != t && null != n && null != s && s.publicUpdatesChannelId === t) {
                            let e = M.default.getMessages(t),
                                l = e.toArray().reverse(),
                                i = l.find(e => {
                                    var t;
                                    return (0, H.hasFlag)(e.flags, W.MessageFlags.IS_CROSSPOST) && (null === (t = e.messageReference) || void 0 === t ? void 0 : t.guild_id) === "667560445975986187"
                                });
                            B.default.track(W.AnalyticEvents.ACK_COMMUNITY_MESSAGES, {
                                last_message_id: null == i ? void 0 : i.id,
                                last_message_reference_message_id: null == i ? void 0 : null === (a = i.messageReference) || void 0 === a ? void 0 : a.message_id,
                                messages_loaded: e.hasFetched,
                                ...(0, d.collectChannelAnalyticsMetadata)(n),
                                ...(0, d.collectGuildAnalyticsMetadata)(s.id)
                            })
                        }
                        let l = (0, E.collectThreadMetadata)(g.default.getChannel(v), !0);
                        (0, d.trackWithMetadata)(W.AnalyticEvents.CHANNEL_OPENED, {
                            channel_is_nsfw: z,
                            parent_id: x,
                            can_send_message: J,
                            has_pending_member_action: ee,
                            ...l
                        }), X && (0, d.trackWithMetadata)(W.AnalyticEvents.TEXT_IN_VOICE_OPENED, {
                            channel_is_nsfw: z
                        })
                    }
                }
                getGameMetadata() {
                    return {
                        game_platform: this.props.gamePlatform,
                        game_name: this.props.gameName,
                        game_exe_name: this.props.gameExeName,
                        game_id: this.props.gameId
                    }
                }
                render() {
                    return null
                }
                constructor(...e) {
                    super(...e), this.isMessageRequestsInitialized = !1
                }
            }

            function q() {
                var e;
                let [t, n] = (0, l.useStateFromStoresArray)([x.default], () => [x.default.getVoiceChannelId(), x.default.getChannelId()], []), s = (0, l.useStateFromStores)([g.default], () => g.default.getChannel(n), [n]), i = (0, l.useStateFromStores)([_.default], () => (null == s ? void 0 : s.id) != null && _.default.getChatOpen(s.id), [s]), r = null == s ? void 0 : s.nsfw, o = null !== (e = null == s ? void 0 : s.parent_id) && void 0 !== e ? e : void 0, d = (0, l.useStateFromStores)([g.default], () => g.default.getChannel(t), [t]), c = (0, l.useStateFromStores)([U.default], () => U.default.getGuildId(), []), E = (0, l.useStateFromStores)([L.default], () => L.default.getGuild(c), [c]), f = (0, l.useStateFromStores)([j.default], () => j.default.getCurrentUser(), []), C = (0, l.useStateFromStores)([O.default], () => {
                    var e, t;
                    return null != f && null != c && null !== (t = null === (e = O.default.getMember(c, f.id)) || void 0 === e ? void 0 : e.isPending) && void 0 !== t && t
                }, [f, c]), S = (0, l.useStateFromStores)([k.default], () => k.default.getState().section, []), N = (0, l.useStateFromStores)([w.default], () => w.default.getHomeLink(), []), m = (0, l.useStateFromStores)([h.default], () => h.default.isConnected(), []), [p, R] = (0, l.useStateFromStoresArray)([v.default], () => [v.default.isVideoEnabled(), v.default.isScreenSharing()], []), M = (0, l.useStateFromStores)([b.default], () => b.default.getPrimaryActivity(), []), D = (0, l.useStateFromStores)([y.default], () => y.default.getCurrentGameForAnalytics(), []), G = (0, I.default)(c), F = (0, l.useStateFromStores)([P.default], () => P.default.can(W.Permissions.SEND_MESSAGES, s)), B = (0, l.useStateFromStores)([A.default], () => A.default.getMessageRequestsCount(), []), H = (0, T.useHasPendingMemberAction)(null == E ? void 0 : E.id, null == s ? void 0 : s.id), V = {
                    selectedChannelId: n,
                    channelParentId: o,
                    isNSFWChannel: r,
                    selectedGuildId: c,
                    friendsTabSection: S,
                    homeLink: N,
                    connected: m,
                    videoEnabled: p,
                    isScreenSharing: R,
                    voiceChannelId: null == d ? void 0 : d.id,
                    voiceChannelGuildId: null == d ? void 0 : d.getGuildId(),
                    voiceChannelType: null == d ? void 0 : d.type,
                    voiceChannelBitrate: null == d ? void 0 : d.bitrate,
                    runningGame: D,
                    runningGamePid: null != D ? D.pid : null,
                    gamePlatform: (0, u.default)(M),
                    gameName: null != M ? M.name : null,
                    gameId: null != M ? M.application_id : null,
                    gameExeName: null != D ? D.exeName : null,
                    hasPreviewEnabled: null == E ? void 0 : E.features.has(W.GuildFeatures.PREVIEW_ENABLED),
                    isMemberPending: C,
                    postableChannelCount: G,
                    isTextInVoice: i,
                    canSendMessage: F,
                    numMessageRequests: B,
                    hasPendingMemberAction: H
                };
                return (0, a.jsx)(z, {
                    ...V
                })
            }
        },
        223415: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("775560"),
                o = n("301165"),
                u = n("446674"),
                d = n("278572"),
                c = n("684581"),
                E = n("488284"),
                f = n("870696"),
                _ = n("385649"),
                C = n("18494"),
                h = n("102985"),
                I = n("31957"),
                T = n("709681"),
                S = n("157246");
            let N = {
                    transform: "scale(0.7)",
                    opacity: 0
                },
                A = {
                    transform: "scale(1)",
                    opacity: 1
                };
            var m = () => {
                let e = (0, u.useStateFromStores)([C.default], () => C.default.getChannelId()),
                    t = (0, u.useStateFromStoresArray)([I.default], () => I.default.getIncomingCalls().filter(t => {
                        let {
                            channel: n
                        } = t;
                        return e !== n.id
                    })),
                    n = (0, u.useStateFromStores)([I.default], () => I.default.hasIncomingCalls()),
                    l = (0, u.useStateFromStores)([_.default], () => _.default.isSoundDisabled("call_ringing")),
                    m = (0, E.useIsHolidayRingtoneEligible)(),
                    p = (0, u.useStateFromStores)([_.default], () => {
                        var e;
                        return (null === (e = c.default.ringtone) || void 0 === e ? void 0 : e.name) == null || _.default.isSoundDisabled(c.default.ringtone.name)
                    }),
                    g = (0, u.useStateFromStores)([h.default], () => h.default.disableSounds),
                    R = (0, u.useStateFromStores)([f.default], () => f.default.getSoundpack()),
                    O = s.useRef(!1),
                    L = (0, r.useStableMemo)(() => {
                        let e = "call_ringing";
                        if (m && !p) return (0, T.createSound)(c.default.ringtone.name, e);
                        if (R === S.Soundpacks.CLASSIC) {
                            let t = 500 === i.random(1, 1e3) ? "call_ringing_beat" : "call_ringing";
                            return (0, T.createSound)(t, e)
                        }
                        return (0, T.createSoundForPack)("call_ringing", R)
                    }, [R, p, m]);
                s.useEffect(() => () => {
                    L.stop()
                }, [L]), s.useEffect(() => {
                    if (g || l) {
                        O.current && (L.stop(), O.current = !1);
                        return
                    }
                    n && !O.current ? (L.loop(), O.current = !0) : !n && O.current && (L.stop(), O.current = !1)
                }, [l, g, n, L]);
                let v = (0, o.useTransition)(t, {
                    keys: e => {
                        var t;
                        return null === (t = e.channel) || void 0 === t ? void 0 : t.id
                    },
                    enter: {
                        from: N,
                        to: A
                    },
                    leave: N,
                    config: {
                        mass: 1,
                        tension: 500,
                        friction: 18,
                        clamp: !0
                    }
                });
                return v((e, t) => (0, a.jsx)(d.default, {
                    ...t,
                    animatedStyle: e
                }))
            }
        },
        399174: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            }), n("424973");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("458960"),
                o = n("446674"),
                u = n("266491"),
                d = n("77078"),
                c = n("54239"),
                E = n("454286"),
                f = n("485328"),
                _ = n("269936"),
                C = n("161778"),
                h = n("778588"),
                I = n("708169"),
                T = n("659500"),
                S = n("439932"),
                N = n("49111"),
                A = n("350828");
            let m = (0, _.makeLazy)({
                    createPromise: () => n.el("420610").then(n.bind(n, "420610")),
                    webpackId: "420610",
                    name: "UserSettings"
                }),
                p = (0, _.makeLazy)({
                    createPromise: () => n.el("995865").then(n.bind(n, "995865")),
                    webpackId: "995865",
                    name: "ChannelSettings"
                }),
                g = (0, _.makeLazy)({
                    createPromise: () => n.el("258556").then(n.bind(n, "258556")),
                    webpackId: "258556",
                    name: "CollectiblesShop"
                }),
                R = (0, _.makeLazy)({
                    createPromise: () => n.el("725621").then(n.bind(n, "725621")),
                    webpackId: "725621",
                    name: "GuildSettings"
                }),
                O = {
                    [N.Layers.USER_SETTINGS]: () => (0, a.jsx)(m, {}),
                    [N.Layers.CHANNEL_SETTINGS]: () => (0, a.jsx)(p, {}),
                    [N.Layers.GUILD_SETTINGS]: () => (0, a.jsx)(R, {}),
                    [N.Layers.COLLECTIBLES_SHOP]: () => (0, a.jsx)(g, {})
                },
                L = "SHOWN",
                v = "HIDDEN",
                M = {
                    friction: 10,
                    tension: 100
                };

            function P() {
                return s.useEffect(() => (f.default.enable(), f.default.enableTemp(E.SETTINGS_LAYERS_LAYOUT), () => f.default.disableTemp()), []), null
            }
            class D extends s.PureComponent {
                static getDerivedStateFromProps(e, t) {
                    return e.mode !== t.mode ? {
                        animating: !0,
                        mode: e.mode
                    } : null
                }
                componentDidUpdate(e) {
                    let {
                        mode: t
                    } = this.props, {
                        mode: n
                    } = e;
                    if (t !== n) {
                        if (t === L && n === v) return this.animateIn();
                        if (t === v && n === L) return this.animateUnder()
                    }
                }
                componentWillEnter(e) {
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    n.setValue(1.1), t.setValue(0), e(), this.setState({
                        animating: !0
                    }, () => this.animateIn())
                }
                componentWillLeave(e) {
                    this.setState({
                        animating: !0
                    }, () => this.animateOut(e))
                }
                animateIn(e) {
                    o.default.Emitter.pause(500);
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    r.default.parallel([r.default.spring(t, {
                        toValue: 1,
                        ...M
                    }), r.default.spring(n, {
                        toValue: 1,
                        ...M
                    })]).start(() => this.animateComplete(e))
                }
                animateOut(e) {
                    o.default.Emitter.pause(500);
                    let {
                        opacity: t,
                        scale: n
                    } = this.state;
                    T.ComponentDispatch.dispatch(N.ComponentActions.LAYER_POP_START), r.default.parallel([r.default.spring(t, {
                        toValue: 0,
                        ...M
                    }), r.default.spring(n, {
                        toValue: 1.1,
                        ...M
                    })]).start(() => {
                        e(), T.ComponentDispatch.dispatch(N.ComponentActions.LAYER_POP_COMPLETE)
                    })
                }
                animateUnder() {
                    o.default.Emitter.pause(500);
                    let {
                        opacity: e,
                        scale: t
                    } = this.state;
                    r.default.parallel([r.default.spring(e, {
                        toValue: 0,
                        ...M
                    }), r.default.spring(t, {
                        toValue: .93,
                        ...M
                    })]).start(() => this.animateComplete())
                }
                animateComplete(e) {
                    this.setState({
                        animating: !1
                    }, e)
                }
                render() {
                    let {
                        animating: e
                    } = this.state, {
                        mode: t,
                        children: n,
                        baseLayer: s,
                        ...l
                    } = this.props, o = e || t === v ? this.getAnimatedStyle() : null, u = (0, a.jsx)(r.default.div, {
                        ref: e => this.containerRef.current = null != e ? e.refs.node : void 0,
                        "aria-hidden": t === v,
                        className: i(A.layer, {
                            [A.baseLayer]: s,
                            [A.animating]: e,
                            "stop-animations": t === v
                        }),
                        style: o,
                        ...l,
                        children: n
                    });
                    return s ? u : (0, a.jsx)(d.FocusLock, {
                        containerRef: this.containerRef,
                        children: u
                    })
                }
                getAnimatedStyle() {
                    let {
                        opacity: e,
                        scale: t
                    } = this.state, {
                        reducedMotion: n
                    } = this.context;
                    return {
                        opacity: e,
                        transform: n.enabled ? void 0 : [{
                            scale: t
                        }, {
                            translateZ: 0
                        }]
                    }
                }
                constructor(e) {
                    super(e), this.containerRef = s.createRef();
                    let t = 1,
                        n = 1;
                    e.mode === v && (t = .93, n = 0), this.state = {
                        animating: !1,
                        scale: new r.default.Value(t),
                        opacity: new r.default.Value(n),
                        mode: e.mode
                    }
                }
            }
            D.defaultProps = {
                baseLayer: !1
            }, D.contextType = d.AccessibilityPreferencesContext;
            class y extends s.PureComponent {
                componentDidMount() {
                    T.ComponentDispatch.subscribe(N.ComponentActions.LAYER_POP_ESCAPE_KEY, c.popLayer)
                }
                componentWillUnmount() {
                    T.ComponentDispatch.unsubscribe(N.ComponentActions.LAYER_POP_ESCAPE_KEY, c.popLayer)
                }
                renderLayers() {
                    let {
                        children: e,
                        layers: t,
                        hasFullScreenLayer: n
                    } = this.props, {
                        length: s
                    } = t, l = [];
                    return l.push((0, a.jsx)(D, {
                        mode: 0 !== s || n ? v : L,
                        baseLayer: !0,
                        children: e
                    }, "layer-base")), t.forEach((e, t) => l.push(this.renderComponent(e, t, s))), l
                }
                renderComponent(e, t, n) {
                    let s;
                    return s = "string" == typeof e ? O[e]() : (0, a.jsx)(e, {}), (0, a.jsxs)(D, {
                        mode: t === n - 1 ? L : v,
                        children: [(0, a.jsx)(P, {}), s]
                    }, "layer-".concat(t))
                }
                renderArtisanalHack() {
                    return (0, a.jsx)("div", {
                        className: i(A.bg, (0, S.getThemeClass)(this.props.sidebarTheme))
                    })
                }
                render() {
                    return (0, a.jsxs)(a.Fragment, {
                        children: [this.renderArtisanalHack(), (0, a.jsx)(u.default, {
                            component: "div",
                            className: i(A.layers, this.props.className),
                            children: this.renderLayers()
                        })]
                    })
                }
            }

            function x(e) {
                let t = (0, o.useStateFromStores)([C.default], () => C.default.darkSidebar) ? N.ThemeTypes.DARK : void 0,
                    n = (0, o.useStateFromStores)([h.default], () => h.default.getLayers()),
                    s = (0, I.useFullScreenLayerStore)(e => e.fullScreenLayers.length > 0);
                return (0, a.jsx)(y, {
                    ...e,
                    sidebarTheme: t,
                    layers: n,
                    hasFullScreenLayer: s
                })
            }
        },
        366410: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            }), n("222007");
            var a = n("316272"),
                s = n("737292"),
                l = n("161778"),
                i = n("845579"),
                r = n("374363"),
                o = n("32531"),
                u = n("253539"),
                d = n("941719");
            class c extends a.default {
                _initialize() {
                    r.default.addChangeListener(this._updateClientTheme), l.default.addChangeListener(this._updateClientTheme)
                }
                _terminate() {
                    r.default.removeChangeListener(this._updateClientTheme), l.default.removeChangeListener(this._updateClientTheme)
                }
                _resetClientTheme() {
                    (0, o.resetBackgroundGradientPreset)(), (0, o.resetBackgroundGradientAngle)(), this._currentBackgroundGradientPresetId = void 0, this._currentBackgroundGradientAngle = void 0
                }
                constructor(...e) {
                    super(...e), this._updateBackgroundGradientPresetId = e => {
                        if (this._currentBackgroundGradientPresetId !== e) {
                            if (null == e) {
                                (0, o.resetBackgroundGradientPreset)(), this._currentBackgroundGradientPresetId = void 0;
                                return
                            }(0, o.updateBackgroundGradientPreset)(e), this._currentBackgroundGradientPresetId = e
                        }
                    }, this._updateBackgroundGradientAngle = e => {
                        if (this._currentBackgroundGradientAngle !== e) {
                            if (null == e) {
                                (0, o.resetBackgroundGradientAngle)(), this._currentBackgroundGradientAngle = void 0;
                                return
                            }(0, o.updateBackgroundGradientAngle)(e), this._currentBackgroundGradientAngle = e
                        }
                    }, this._updateClientTheme = () => {
                        var e, t, n, a, r;
                        let o, c;
                        if (s.default.shouldSync("appearance")) {
                            let {
                                backgroundGradientPresetId: e,
                                backgroundGradientAngle: t
                            } = i.ClientThemeSettings.getSetting();
                            o = e, c = t
                        } else o = null === (n = s.default.getAppearanceSettings()) || void 0 === n ? void 0 : null === (t = n.clientThemeSettings) || void 0 === t ? void 0 : t.backgroundGradientPresetId, c = null === (r = s.default.getAppearanceSettings()) || void 0 === r ? void 0 : null === (a = r.clientThemeSettings) || void 0 === a ? void 0 : a.backgroundGradientAngle;
                        if (null != o && (null === (e = d.BACKGROUND_GRADIENT_PRESETS_MAP[o]) || void 0 === e ? void 0 : e.theme) !== l.default.theme) {
                            let e = d.BACKGROUND_GRADIENT_PRESETS_MAP[o];
                            if (!(0, u.areThemesEqualForGradientThemes)(e.theme, l.default.theme)) {
                                this._resetClientTheme();
                                return
                            }
                        }
                        this._updateBackgroundGradientPresetId(o), this._updateBackgroundGradientAngle(c)
                    }
                }
            }
            var E = new c
        },
        185314: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("77078"),
                r = n("997289"),
                o = n("685665"),
                u = n("369964"),
                d = n("649844"),
                c = n("697218"),
                E = n("599110"),
                f = n("764364"),
                _ = n("56947"),
                C = n("49111"),
                h = n("994428"),
                I = n("646718"),
                T = n("782340"),
                S = n("150119"),
                N = function(e) {
                    let {
                        markAsDismissed: t
                    } = e, n = (0, _.useShouldSeeClipsPremiumEarlyAccessAnnouncementCoachmark)({
                        autoTrackExposure: !0
                    }), N = (0, r.useAnalyticsContext)(), {
                        analyticsLocations: A
                    } = (0, o.default)(), m = c.default.getCurrentUser(), p = (0, f.isPremium)(m);
                    return s.useEffect(() => {
                        n && !p && E.default.track(C.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                            type: I.PremiumUpsellTypes.CLIPS_GUILD_SIDEBAR_COACHMARK_PREMIUM_EARLY_ACCESS_UPSELL,
                            location: N.location,
                            location_stack: A
                        })
                    }, [n, p, N.location, A]), n ? (0, a.jsx)(u.default, {
                        dismissibleContent: l.DismissibleContent.CLIPS_GUILD_PANEL_PREMIUM_EARLY_ACCESS_COACHMARK,
                        contentClassName: S.container,
                        isPremiumEarlyAccess: !0,
                        shouldUseHorizontalButtons: !0,
                        inlineArt: !0,
                        artClassName: S.clipsArt,
                        position: "right",
                        header: T.default.Messages.CLIPS_NITRO_EA_ANNOUNCEMENT_COACHMARK_TITLE,
                        headerClassName: S.clipsEducationHeader,
                        body: (0, a.jsx)(i.Text, {
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: T.default.Messages.CLIPS_NITRO_EA_ANNOUNCEMENT_COACHMARK_BODY
                        }),
                        tryItText: p ? void 0 : T.default.Messages.CLIPS_NITRO_EA_ANNOUNCEMENT_COACHMARK_CTA_NON_SUBS,
                        onTryFeature: p ? void 0 : () => {
                            (0, d.default)({
                                subscriptionTier: I.PremiumSubscriptionSKUs.TIER_2,
                                analyticsLocations: A
                            })
                        },
                        onClose: () => t(h.ContentDismissActionType.UNKNOWN)
                    }) : null
                }
        },
        570319: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("305961"),
                l = n("957255"),
                i = n("772051");
            n("343885");
            var r = n("49111");

            function o(e, t) {
                var n;
                let o = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    u = (0, a.useStateFromStores)([l.default], () => l.default.can(r.Permissions.ADMINISTRATOR, o)),
                    d = null == o ? void 0 : o.hasFeature(r.GuildFeatures.CLYDE_DISABLED),
                    c = i.default.useExperiment({
                        guildId: null !== (n = null == o ? void 0 : o.id) && void 0 !== n ? n : "",
                        location: t
                    }).experimentState;
                return c === i.ClydeExperimentState.DefaultOn && !d || c === i.ClydeExperimentState.ComingSoon && u
            }
        },
        475405: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("206230"),
                r = n("164586"),
                o = n("592407"),
                u = n("957255"),
                d = n("79798"),
                c = n("599110"),
                E = n("701909"),
                f = n("772051"),
                _ = n("980215"),
                C = n("49111"),
                h = n("988268"),
                I = n("994428"),
                T = n("782340"),
                S = n("445930"),
                N = n("311492"),
                A = n("382719");

            function m(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e, m = (0, s.useStateFromStores)([i.default], () => i.default.useReducedMotion), p = (0, _.useClydeExperiment)(t) === f.ClydeExperimentState.ComingSoon, g = (0, s.useStateFromStores)([u.default], () => u.default.can(C.Permissions.ADMINISTRATOR, t)), R = p && g, O = () => {
                    open(E.default.getArticleURL(C.HelpdeskArticles.CLYDE_AI)), n(I.ContentDismissActionType.UNKNOWN)
                };
                return (0, a.jsx)(r.default, {
                    image: m ? A : N,
                    imageStyles: {
                        borderRadius: "50%"
                    },
                    imageMarginTop: 8,
                    guild: t,
                    onDismissed: () => n(I.ContentDismissActionType.UNKNOWN),
                    centerText: !0,
                    imageMarginX: 64,
                    onClick: R ? void 0 : O,
                    title: () => {
                        let e = R ? T.default.Messages.CLYDE_NUX_ADMIN_CHANNEL_NOTICE_TITLE : T.default.Messages.CLYDE_NUX_USER_CHANNEL_NOTICE_TITLE;
                        return (0, a.jsxs)("div", {
                            className: S.titleContainer,
                            children: [(0, a.jsx)(l.Text, {
                                variant: "text-md/medium",
                                color: "header-primary",
                                className: S.title,
                                children: e
                            }), (0, a.jsx)(d.default, {
                                type: h.BotTagTypes.AI
                            })]
                        })
                    },
                    message: R ? T.default.Messages.CLYDE_NUX_ADMIN_CHANNEL_NOTICE_MESSAGE : T.default.Messages.CLYDE_NUX_USER_CHANNEL_NOTICE_MESSAGE,
                    cta: R ? () => (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(l.Button, {
                            className: S.button,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => {
                                o.default.open(t.id, C.GuildSettingsSections.INTEGRATIONS), c.default.track(C.AnalyticEvents.CLYDE_NUX_NOTICE_MANAGE_SETTINGS_CTA_CLICKED, {
                                    guild_id: t.id
                                }), n(I.ContentDismissActionType.UNKNOWN)
                            },
                            fullWidth: !0,
                            color: l.Button.Colors.PRIMARY,
                            children: T.default.Messages.CLYDE_NUX_ADMIN_CHANNEL_NOTICE_MANAGE_SETTINGS
                        }), (0, a.jsx)(l.Button, {
                            className: S.button,
                            size: l.Button.Sizes.SMALL,
                            onClick: () => {
                                c.default.track(C.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                                    source: C.ChannelNoticeCtaSources.CLYDE_ADMIN_NUX_NOTICE,
                                    guild_id: t.id,
                                    notice_type: C.ChannelNoticeTypes.CLYDE_ADMIN_NUX
                                }), O()
                            },
                            fullWidth: !0,
                            children: T.default.Messages.CLYDE_NUX_CHANNEL_NOTICE_LEARN_MORE
                        })]
                    }) : T.default.Messages.CLYDE_NUX_CHANNEL_NOTICE_LEARN_MORE,
                    trackingSource: R ? C.ChannelNoticeCtaSources.CLYDE_ADMIN_NUX_NOTICE : C.ChannelNoticeCtaSources.CLYDE_USER_NUX_NOTICE,
                    type: R ? C.ChannelNoticeTypes.CLYDE_ADMIN_NUX : C.ChannelNoticeTypes.CLYDE_USER_NUX
                })
            }
        },
        417313: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-11_collectibles_gifting",
                label: "Collectibles Gifting",
                defaultConfig: {
                    giftingEnabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Collectibles Gifting Enabled",
                    config: {
                        giftingEnabled: !0
                    }
                }]
            });
            var l = e => {
                let {
                    location: t,
                    autoTrackExposure: n = !0,
                    trackExposureOptions: a = {}
                } = e;
                return s.useExperiment({
                    location: t
                }, {
                    autoTrackExposure: n,
                    trackExposureOptions: a
                })
            }
        },
        235898: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMaybeFetchCollectiblesCategories: function() {
                    return u
                },
                default: function() {
                    return d
                }
            }), n("222007");
            var a = n("884691"),
                s = n("65597"),
                l = n("875212"),
                i = n("21526"),
                r = n("853987"),
                o = n("775416");

            function u() {
                let e = "useMaybeFetchCollectiblesCategories";
                (0, l.useTriggerDebuggingAA)({
                    location: e + " auto on",
                    autoTrackExposure: !0
                }), (0, l.useTriggerDebuggingAA)({
                    location: e + " auto off",
                    autoTrackExposure: !1
                });
                let [t, n, o, u] = (0, s.useStateFromStoresArray)([r.default], () => {
                    var e;
                    return [r.default.isFetching, r.default.error, null !== (e = r.default.lastFetched) && void 0 !== e ? e : 0, r.default.categories]
                });
                return (0, a.useEffect)(() => {
                    !(t || n || Date.now() - o < 6e5) && (0, i.fetchCollectiblesCategories)()
                }, [t, o, n]), {
                    isFetching: t,
                    categories: u,
                    error: n
                }
            }

            function d() {
                var e;
                let t = "useFetchCollectiblesCategoriesAndPurchases";
                (0, l.useTriggerDebuggingAA)({
                    location: t + " auto on",
                    autoTrackExposure: !0
                }), (0, l.useTriggerDebuggingAA)({
                    location: t + " auto off",
                    autoTrackExposure: !1
                });
                let {
                    isFetching: n,
                    categories: r,
                    error: d
                } = u(), {
                    isClaiming: c,
                    fetchError: E,
                    claimError: f,
                    isFetching: _,
                    purchases: C
                } = function() {
                    let e = "useFetchPurchases";
                    (0, l.useTriggerDebuggingAA)({
                        location: e + " auto on",
                        autoTrackExposure: !0
                    }), (0, l.useTriggerDebuggingAA)({
                        location: e + " auto off",
                        autoTrackExposure: !1
                    });
                    let [t, n, r, u, d] = (0, s.useStateFromStoresArray)([o.default], () => [o.default.isFetching, o.default.isClaiming, o.default.fetchError, o.default.claimError, o.default.purchases]);
                    return (0, a.useEffect)(() => {
                        (0, i.fetchCollectiblesPurchases)()
                    }, []), {
                        isClaiming: n,
                        fetchError: r,
                        claimError: u,
                        isFetching: t,
                        purchases: d
                    }
                }(), h = null !== (e = null != d ? d : E) && void 0 !== e ? e : f;
                return {
                    isFetching: n || _,
                    isFetchingCategories: n,
                    isFetchingPurchases: _,
                    isClaiming: c,
                    categories: r,
                    purchases: C,
                    error: h
                }
            }
        },
        321833: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("301165"),
                i = n("265586"),
                r = n("446674"),
                o = n("77078"),
                u = n("152584"),
                d = n("206230"),
                c = n("812204"),
                E = n("685665"),
                f = n("783142"),
                _ = n("945330"),
                C = n("21526"),
                h = n("491232"),
                I = n("235898"),
                T = n("806224"),
                S = n("782340"),
                N = n("55395");
            let A = () => [{
                    name: S.default.Messages.PREMIUM_MARKETING_WHATS_NEW_PROFILE_EFFECTS_TITLE,
                    value: i.CollectiblesItemType.PROFILE_EFFECT
                }, {
                    name: S.default.Messages.PREMIUM_FEATURE_AVATAR_DECORATIONS_HEADER,
                    value: i.CollectiblesItemType.AVATAR_DECORATION
                }],
                m = c.default.COLLECTIBLES_ACCOUNT_SWITCH_UPSELL;

            function p(e) {
                let {
                    height: t,
                    onClose: n
                } = e, {
                    categories: c,
                    isFetching: p
                } = (0, I.useMaybeFetchCollectiblesCategories)(), {
                    analyticsLocations: g
                } = (0, E.default)(m), R = s.useCallback(() => {
                    n()
                }, [n]), O = (0, r.useStateFromStores)([d.default], () => d.default.useReducedMotion), L = (0, l.useSpring)({
                    immediate: O,
                    from: {
                        transform: "translate3d(-110%, 0, 0)",
                        height: t
                    },
                    to: {
                        transform: "translate3d(0, 0, 0)",
                        height: t
                    },
                    config: {
                        mass: 1,
                        stiffness: 100,
                        damping: 15
                    }
                }), v = s.useMemo(() => (0, h.sortAvatarDecorationsByPopularity)((0, h.getAvatarDecorationsFromCategories)(c)), [c]), M = s.useMemo(() => (0, h.sortProfileEffectsByPopularity)((0, h.getProfileEffectsFromCategories)(c)), [c]), [P, D] = s.useState(i.CollectiblesItemType.PROFILE_EFFECT), [y, x] = s.useState();
                s.useEffect(() => (null != y && (0, u.setSingleTryItOutCollectiblesItem)(y), () => {
                    (0, f.setTryItOutAvatarDecoration)(null), (0, f.setTryItOutProfileEffect)(null)
                }), [y]);
                let U = s.useCallback(() => {
                    n(), (0, C.openCollectiblesShop)({
                        analyticsLocations: g,
                        analyticsSource: m,
                        initialProductSkuId: null != y ? y.skuId : void 0
                    })
                }, [n, g, y]);
                return null == t ? null : (0, a.jsxs)(l.animated.div, {
                    className: N.container,
                    style: L,
                    children: [(0, a.jsxs)("div", {
                        className: N.content,
                        children: [(0, a.jsx)(o.HeadingLevel, {
                            component: (0, a.jsxs)(o.Heading, {
                                variant: "heading-lg/semibold",
                                className: N.title,
                                children: [S.default.Messages.COLLECTIBLES_ACCOUNT_SWITCHER_POPOUT_HEADER, (0, a.jsx)(o.Clickable, {
                                    className: N.close,
                                    onClick: R,
                                    children: (0, a.jsx)(_.default, {
                                        className: N.closeIcon
                                    })
                                })]
                            }),
                            children: (0, a.jsx)(o.Text, {
                                variant: "text-sm/normal",
                                children: S.default.Messages.COLLECTIBLES_ACCOUNT_SWITCHER_POPOUT_SUBHEADER
                            })
                        }), (0, a.jsx)(o.SegmentedControl, {
                            options: A(),
                            value: P,
                            onChange: e => {
                                let {
                                    value: t
                                } = e;
                                return D(t)
                            },
                            className: N.segmentControl,
                            optionClassName: N.segmentControlOption,
                            selectedOptionClassName: N.segmentControlOptionSelected,
                            look: "pill"
                        })]
                    }), (0, a.jsx)(T.CollectiblesItemsList, {
                        items: P === i.CollectiblesItemType.PROFILE_EFFECT ? M : v,
                        isFetching: p,
                        selectedItem: y,
                        setSelectedItem: x,
                        containerClassName: N.listContainer,
                        isAccountSwitcher: !0
                    }), (0, a.jsx)("div", {
                        className: N.ctaContainer,
                        children: (0, a.jsx)(o.Button, {
                            className: N.cta,
                            size: o.Button.Sizes.LARGE,
                            color: o.Button.Colors.BRAND_NEW,
                            onClick: U,
                            children: S.default.Messages.COLLECTIBLES_ACCOUNT_SWITCH_UPSELL_CTA
                        })
                    })]
                })
            }
        },
        252551: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("812204"),
                i = n("685665"),
                r = n("369964"),
                o = n("393414"),
                u = n("21526"),
                d = n("49111"),
                c = n("782340"),
                E = n("608284"),
                f = () => {
                    let {
                        analyticsLocations: e
                    } = (0, i.default)(l.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP);
                    return (0, a.jsx)(r.default, {
                        dismissibleContent: s.DismissibleContent.COLLECTIBLES_GIFTING_COACHMARK,
                        shouldUseHorizontalButtons: !0,
                        inlineArt: !0,
                        tryItText: c.default.Messages.CHECK_IT_OUT,
                        onTryFeature: () => {
                            (0, o.transitionTo)(d.Routes.COLLECTIBLES_SHOP), (0, u.openCollectiblesShop)({
                                openInLayer: !1,
                                analyticsLocations: e,
                                analyticsSource: l.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP
                            })
                        },
                        header: c.default.Messages.COLLECTIBLES_GIFT_COACHMARK_HEADING,
                        body: c.default.Messages.COLLECTIBLES_GIFT_COACHMARK_DESC,
                        dismissText: c.default.Messages.BACK,
                        position: "right",
                        align: "top",
                        art: (0, a.jsx)("div", {
                            className: E.art,
                            children: c.default.Messages.COLLECTIBLES_SHOP_FOR_ALL_NITRO_ONLY_COACHMARK_ART
                        })
                    })
                }
        },
        806224: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                CollectiblesItemsList: function() {
                    return p
                }
            }), n("794252");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("506838"),
                o = n("265586"),
                u = n("446674"),
                d = n("77078"),
                c = n("252744"),
                E = n("606292"),
                f = n("688318"),
                _ = n("845962"),
                C = n("859498"),
                h = n("635471"),
                I = n("697218"),
                T = n("312595"),
                S = n("513002");
            let N = e => {
                    let {
                        item: t,
                        avatarSize: n
                    } = e, s = (0, u.useStateFromStores)([I.default], () => I.default.getCurrentUser()), {
                        avatarDecorationSrc: l,
                        eventHandlers: i
                    } = (0, f.default)({
                        user: s,
                        avatarDecorationOverride: t,
                        size: (0, E.getDecorationSizeForAvatarSize)(n),
                        animateOnHover: !0
                    });
                    return (0, a.jsx)("img", {
                        ...i,
                        className: T.avatarDecoration,
                        src: l,
                        alt: t.label
                    })
                },
                A = e => {
                    var t;
                    let {
                        item: n
                    } = e, l = (0, u.useStateFromStores)([_.default], () => _.default.getProfileEffectById(n.id)), {
                        accessibilityLabel: i,
                        id: r
                    } = null !== (t = null == l ? void 0 : l.config) && void 0 !== t ? t : {}, o = s.useRef(null), d = (0, c.default)(o);
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("img", {
                            ref: o,
                            src: S,
                            alt: i,
                            className: T.presetEffectBackground
                        }), (0, a.jsx)(h.default, {
                            profileEffectID: r,
                            useThumbnail: !0,
                            autoPlay: d,
                            restartMethod: C.RestartMethod.FromStart,
                            resetOnHover: !0,
                            isHovering: !1,
                            introDelay: .1,
                            useOpacityOnHover: !1,
                            noBorderRadius: !0
                        })]
                    })
                };

            function m(e) {
                let {
                    listRef: t,
                    items: n,
                    selectedItem: s,
                    setSelectedItem: l,
                    isAccountSwitcher: u,
                    avatarSize: c
                } = e, E = e => {
                    let {
                        item: t,
                        children: n,
                        className: r
                    } = e, o = t.skuId === (null == s ? void 0 : s.skuId);
                    return (0, a.jsx)(d.FocusRing, {
                        children: (0, a.jsx)(d.Clickable, {
                            className: i({
                                [T.selectedItem]: o
                            }, u ? T.accountSwitcherItem : T.interactiveModalItem, r),
                            onClick: () => l(t),
                            children: n
                        })
                    })
                };
                return (0, a.jsx)("div", {
                    ref: t,
                    className: u ? T.accountSwitcherCollectiblesList : T.interactiveModalCollectiblesList,
                    children: n.map(e => (0, r.match)(e).with({
                        type: o.CollectiblesItemType.AVATAR_DECORATION
                    }, e => (0, a.jsx)(E, {
                        item: e,
                        className: T.avatarDecorationItem,
                        children: (0, a.jsx)(N, {
                            item: e,
                            avatarSize: c
                        }, e.id)
                    })).with({
                        type: o.CollectiblesItemType.PROFILE_EFFECT
                    }, e => (0, a.jsx)(E, {
                        item: e,
                        children: (0, a.jsx)(A, {
                            item: e
                        }, e.id)
                    })).otherwise(() => null))
                })
            }
            let p = e => {
                let {
                    items: t,
                    isFetching: n,
                    selectedItem: l,
                    setSelectedItem: i,
                    containerClassName: r,
                    isAccountSwitcher: o
                } = e, u = s.useRef(null);
                if (n) return (0, a.jsx)(d.Spinner, {
                    className: T.loading
                });
                let c = (e, n) => (0, a.jsx)(m, {
                    listRef: u,
                    items: t,
                    selectedItem: l,
                    setSelectedItem: i,
                    isAccountSwitcher: n,
                    avatarSize: e
                });
                return (0, a.jsx)(d.FocusRingScope, {
                    containerRef: u,
                    children: o ? (0, a.jsx)(d.AdvancedScroller, {
                        className: r,
                        children: c(d.AvatarSizes.SIZE_56, !0)
                    }) : (0, a.jsx)("div", {
                        className: r,
                        children: c(d.AvatarSizes.SIZE_48)
                    })
                })
            }
        },
        710342: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            }), n("222007");
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("446674"),
                o = n("151426"),
                u = n("77078"),
                d = n("340066"),
                c = n("206230"),
                E = n("812204"),
                f = n("685665"),
                _ = n("369964"),
                C = n("393414"),
                h = n("21526"),
                I = n("49111"),
                T = n("782340"),
                S = n("322853"),
                N = n("200546"),
                A = n("571104"),
                m = n("431616");
            (s = a || (a = {}))[s.LOADING = 0] = "LOADING", s[s.INTRO = 1] = "INTRO", s[s.IDLE = 2] = "IDLE";
            let p = (e, t) => {
                if (t) return m;
                switch (e) {
                    case 1:
                        return A;
                    case 2:
                        return N;
                    default:
                        return m
                }
            };
            var g = () => {
                let {
                    analyticsLocations: e
                } = (0, f.default)(E.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP), t = (0, r.useStateFromStores)([c.default], () => c.default.useReducedMotion), [n, a] = i.useState(!1), [s, m] = i.useState(!1), g = i.useRef(0), [R, O] = i.useState(0), [L, v] = i.useState(!1);
                return (0, d.default)(() => v(!0), 2e3), i.useEffect(() => {
                    if (!L || !n || !s || 0 !== g.current) return;
                    g.current = 1, O(1);
                    let e = setTimeout(() => {
                        O(2), g.current = 2
                    }, 2880);
                    return () => clearTimeout(e)
                }, [L, n, s, g]), (0, d.default)(() => {
                    g.current = 2, O(2)
                }, 0 === g.current ? 3e3 : null), (0, l.jsx)(_.default, {
                    dismissibleContent: o.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_NITRO_ONLY_COACHMARK,
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0,
                    className: 0 === R ? S.loading : S.coachmark,
                    artClassName: S.shopArt,
                    tryItText: T.default.Messages.CHECK_IT_OUT,
                    onTryFeature: () => {
                        (0, C.transitionTo)(I.Routes.COLLECTIBLES_SHOP), (0, h.openCollectiblesShop)({
                            openInLayer: !1,
                            analyticsLocations: e,
                            analyticsSource: E.default.COLLECTIBLES_FEATURE_EDUCATION_TOOLTIP
                        })
                    },
                    header: T.default.Messages.USER_PROFILE_SETTINGS_SHOP_FOR_ALL_BANNER_HEADER,
                    body: (0, l.jsxs)(l.Fragment, {
                        children: [(0, l.jsx)(u.Text, {
                            variant: "text-sm/normal",
                            color: "always-white",
                            children: T.default.Messages.COLLECTIBLES_SHOP_TAB_COACHMARK_SUBHEADER
                        }), (0, l.jsxs)("div", {
                            className: S.imageLoader,
                            "aria-hidden": !0,
                            role: "presentation",
                            children: [(0, l.jsx)("img", {
                                src: A,
                                alt: " ",
                                onLoad: () => a(!0)
                            }), (0, l.jsx)("img", {
                                src: N,
                                alt: " ",
                                onLoad: () => m(!0)
                            })]
                        })]
                    }),
                    dismissText: T.default.Messages.BACK,
                    position: "right",
                    align: "top",
                    art: (0, l.jsx)("img", {
                        alt: " ",
                        src: p(R, t)
                    })
                })
            }
        },
        171984: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("269936").makeLazy)({
                createPromise: () => n.el("258556").then(n.bind(n, "258556")),
                webpackId: "258556"
            })
        },
        232374: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            }), n("424973"), n("222007");
            var a = n("151426"),
                s = n("77078"),
                l = n("446674"),
                i = n("509802"),
                r = n("778588"),
                o = n("197881"),
                u = n("417313"),
                d = n("195362");
            let c = "useCollectiblesShopTabCoachmark";
            var E = () => {
                let {
                    coachmarkEnabled: e
                } = (0, d.default)({
                    location: c
                }), {
                    giftingEnabled: t
                } = (0, u.default)({
                    location: c
                }), n = (0, l.useStateFromStores)([r.default], () => r.default.hasLayers()), E = (0, s.useModalsStore)(s.hasAnyModalOpenSelector), f = E || n || o.ProcessArgs.isDisallowPopupsSet(), _ = [];
                e && _.push(a.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_NITRO_ONLY_COACHMARK), t && _.push(a.DismissibleContent.COLLECTIBLES_GIFTING_COACHMARK);
                let [C] = (0, i.useDismissibleContentGroup)(f ? [] : _, void 0, !0);
                return C
            }
        },
        8977: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            }), n("424973"), n("222007");
            var a = n("884691"),
                s = n("446674"),
                l = n("151426"),
                i = n("875212"),
                r = n("509802"),
                o = n("697218"),
                u = n("719923"),
                d = n("805172"),
                c = n("994428"),
                E = () => {
                    let e = "useShouldShowAccountProfilePopoutCollectiblesUpsell",
                        t = (0, s.useStateFromStores)([o.default], () => o.default.getCurrentUser()),
                        n = u.default.canUseCollectibles(t),
                        {
                            marketingEnabled: E
                        } = (0, d.default)({
                            location: "AccountProfilePopoutCollectiblesUpsell"
                        });
                    (0, i.useTriggerDebuggingAA)({
                        location: e + " auto on",
                        autoTrackExposure: !0
                    }), (0, i.useTriggerDebuggingAA)({
                        location: e + " auto off",
                        autoTrackExposure: !1
                    });
                    let f = a.useMemo(() => {
                            let e = [];
                            return !n && E && e.push(l.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_ACCOUNT_POPOUT_UPSELL), e
                        }, [E, n]),
                        [_, C] = (0, r.useDismissibleContentGroup)(f, void 0, !0);
                    return {
                        shouldShow: _ === l.DismissibleContent.COLLECTIBLES_SHOP_FOR_ALL_ACCOUNT_POPOUT_UPSELL,
                        dismissCollectiblesUpsell: () => {
                            C(c.ContentDismissActionType.USER_DISMISS)
                        }
                    }
                }
        },
        927175: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272");
            let r = "CONNECTIONS_GRID_MODAL_KEY";
            class o extends i.default {
                _initialize() {
                    l.default.subscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow), l.default.subscribe("CONNECTIONS_GRID_MODAL_HIDE", this.handleHide)
                }
                _terminate() {
                    l.default.unsubscribe("CONNECTIONS_GRID_MODAL_SHOW", this.handleShow), l.default.unsubscribe("CONNECTIONS_GRID_MODAL_HIDE", this.handleHide)
                }
                handleShow(e) {
                    let {
                        onComplete: t,
                        excludedPlatformTypes: l,
                        integrations: i,
                        onCompleteApplication: o
                    } = e;
                    !(0, s.hasModalOpen)(r) && (0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("121942").then(n.bind(n, "121942"));
                        return n => (0, a.jsx)(e, {
                            onComplete: t,
                            excludedPlatformTypes: l,
                            integrations: i,
                            onCompleteApplication: o,
                            ...n
                        })
                    })
                }
                handleHide() {
                    (0, s.closeModal)(r)
                }
            }
            var u = new o
        },
        55058: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("963662"),
                l = n("701909"),
                i = n("49111"),
                r = n("994428"),
                o = n("782340"),
                u = n("476742");

            function d(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)(s.default, {
                    image: u,
                    guild: t,
                    onDismissed: () => n(r.ContentDismissActionType.UNKNOWN),
                    onClick: () => {
                        open(l.default.getArticleURL(i.HelpdeskArticles.CONNECTION_DETAILS)), n(r.ContentDismissActionType.UNKNOWN)
                    },
                    title: o.default.Messages.LINKED_ROLES_ADMIN_NUX_TITLE,
                    message: o.default.Messages.LINKED_ROLES_ADMIN_NUX_CONTENT,
                    cta: o.default.Messages.LEARN_MORE,
                    trackingSource: i.ChannelNoticeCtaSources.LINKED_ROLES_ADMIN_NUX,
                    type: i.ChannelNoticeTypes.LINKED_ROLES_ADMIN
                })
            }
        },
        105437: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            }), n("222007");
            var a = n("884691"),
                s = n("386411"),
                l = n.n(s),
                i = n("597755"),
                r = n.n(i),
                o = n("446674"),
                u = n("952451"),
                d = n("385649"),
                c = n("27618"),
                E = n("31957"),
                f = n("773336"),
                _ = n("50885"),
                C = n("69927"),
                h = n("49111"),
                I = n("782340");
            let T = new Set(["Blink", "Gecko", "WebKit"]),
                S = h.NOOP;
            if (f.isPlatformEmbedded) S = e => _.default.setBadge(e);
            else if (T.has(r.layout)) {
                let e = new l({
                    animation: "none"
                });
                S = t => {
                    try {
                        (0, C.setPageTitleNotificationCount)(t), e.badge(-1 === t ? "•" : t)
                    } catch (e) {}
                }
            }

            function N() {
                let e = (0, o.useStateFromStores)([E.default], () => E.default.hasIncomingCalls()),
                    t = (0, o.useStateFromStores)([u.default, c.default, d.default], () => {
                        let e = u.default.getTotalMentionCount(),
                            t = c.default.getPendingCount(),
                            n = u.default.hasAnyUnread(),
                            a = d.default.getDisableUnreadBadge(),
                            s = e + t;
                        return 0 === s && n && !a && (s = -1), s
                    });
                a.useEffect(() => {
                    if (!e) return;
                    let t = _.default.bounceDock("critical"),
                        n = (0, C.flashPageTitle)({
                            messages: [I.default.Messages.INCOMING_CALL],
                            count: 50
                        });
                    return () => {
                        null == t || t(), n()
                    }
                }, [e]), a.useEffect(() => {
                    S(t)
                }, [t]), a.useEffect(() => () => S(0), [])
            }
        },
        126090: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            }), n("222007");
            var a, s, l = n("884691"),
                i = n("446674"),
                r = n("629109"),
                o = n("79112"),
                u = n("952451"),
                d = n("42887"),
                c = n("385649"),
                E = n("945956"),
                f = n("27618"),
                _ = n("280168"),
                C = n("773336"),
                h = n("50885"),
                I = n("49111");
            (s = a || (a = {})).DEFAULT = "DEFAULT", s.UNREAD = "UNREAD", s.CONNECTED = "CONNECTED", s.SPEAKING = "SPEAKING", s.MUTED = "MUTED", s.DEAFENED = "DEAFENED";
            let T = (0, C.isMac)() ? null : "DEFAULT";
            class S extends l.PureComponent {
                componentDidMount() {
                    h.default.setSystemTrayIcon(this.getIcon())
                }
                componentDidUpdate() {
                    h.default.setSystemTrayIcon(this.getIcon())
                }
                componentWillUnmount() {
                    h.default.setSystemTrayIcon(T)
                }
                render() {
                    return null
                }
                constructor(...e) {
                    super(...e), this.getIcon = () => {
                        let {
                            deafened: e,
                            muted: t,
                            speaking: n,
                            connected: a,
                            unread: s
                        } = this.props, l = T;
                        return (0, C.isMac)() && !a ? l : (0, C.isLinux)() || !a ? (s && (l = "UNREAD"), l) : l = e ? "DEAFENED" : t ? "MUTED" : n ? "SPEAKING" : "CONNECTED"
                    }
                }
            }
            let N = () => null;
            C.isPlatformEmbedded && (h.default.on("SYSTEM_TRAY_TOGGLE_MUTE", () => r.default.toggleSelfMute()), h.default.on("SYSTEM_TRAY_TOGGLE_DEAFEN", () => r.default.toggleSelfDeaf()), h.default.on("SYSTEM_TRAY_OPEN_VOICE_SETTINGS", () => {
                o.default.open(I.UserSettingsSections.VOICE)
            }), N = i.default.connectStores([E.default, d.default, _.default, u.default, f.default, c.default], () => {
                let e = u.default.getTotalMentionCount(),
                    t = u.default.hasAnyUnread(),
                    n = f.default.getPendingCount(),
                    a = c.default.getDisableUnreadBadge();
                return {
                    connected: E.default.isConnected(),
                    speaking: _.default.isCurrentUserSpeaking(),
                    muted: d.default.isSelfMute() || d.default.isSelfMutedTemporarily(),
                    deafened: d.default.isSelfDeaf(),
                    unread: !a && !!(t || e + n > 0)
                }
            })(S));
            var A = N
        },
        957328: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("458960"),
                d = n("446674"),
                c = n("95410"),
                E = n("77078"),
                f = n("167359"),
                _ = n("206230"),
                C = n("619443"),
                h = n("684581"),
                I = n("870696"),
                T = n("262768"),
                S = n("50647"),
                N = n("15435"),
                A = n("637888"),
                m = n("773336"),
                p = n("709681"),
                g = n("50885"),
                R = n("49111"),
                O = n("782340"),
                L = n("923075");
            class v extends s.PureComponent {
                createSound() {
                    let {
                        soundpack: e
                    } = this.props, t = (0, p.createSoundForPack)("discodo", e);
                    return t.volume = 1, t
                }
                componentDidMount() {
                    this.setProblemsTimeout()
                }
                componentDidUpdate(e, t) {
                    let {
                        ready: n,
                        hide: a,
                        problems: s,
                        opacity: l
                    } = this.state, {
                        connected: i,
                        soundpack: r,
                        reducedMotion: o
                    } = this.props, d = i && n && !a && !s;
                    if (e.soundpack !== r && (this._connectedSound = this.createSound()), e.connected !== i || d) {
                        if (i && null != this.videoRef) {
                            let e = Math.max(Math.ceil((this.videoRef.duration - this.videoRef.currentTime) * 1e3), 600);
                            clearTimeout(this._noProblemsTimeout), c.default.get(R.DISCODO_STORAGE_KEY) && this._connectedSound.play(), o ? this.setState({
                                problems: !1,
                                hide: i
                            }) : this._noProblemsTimeout = setTimeout(() => {
                                this.setState({
                                    problems: !1,
                                    hide: i
                                })
                            }, e)
                        } else this.setState({
                            problems: !1,
                            hide: i
                        })
                    } else t.hide !== a ? (a ? this.clearProblemsTimeout() : this.setProblemsTimeout(), this.setState({
                        shouldRender: !0
                    }), u.default.timing(l, {
                        toValue: a ? 0 : 1,
                        duration: 200
                    }).start(() => this.setState({
                        shouldRender: !a
                    }))) : t.problems !== s && s && f.default.checkIncidents()
                }
                componentWillUnmount() {
                    this.clearProblemsTimeout(), clearTimeout(this._noProblemsTimeout)
                }
                render() {
                    let {
                        connected: e,
                        incident: t
                    } = this.props;
                    if (!this.state.shouldRender) return null;
                    {
                        let n = this._loadingText,
                            s = null;
                        return null != this._eventLoadingText && (n = this._eventLoadingText), null != t && (n = t.name, s = t.incident_updates[0].body), (0, a.jsxs)(u.default.div, {
                            className: L.container,
                            style: {
                                opacity: this.state.opacity
                            },
                            children: [(0, a.jsxs)("div", {
                                className: L.content,
                                children: [(0, a.jsx)(A.default, {
                                    autoPlay: !0,
                                    loop: !e,
                                    setRef: this.setVideoRef,
                                    onReady: this.handleReady,
                                    className: this.state.ready ? L.ready : ""
                                }), (0, a.jsxs)("div", {
                                    className: L.text,
                                    children: [null != t ? null : (0, a.jsx)("div", {
                                        className: L.tipTitle,
                                        children: O.default.Messages.LOADING_DID_YOU_KNOW
                                    }), (0, a.jsx)("div", {
                                        className: null != t ? L.title : L.tip,
                                        children: n
                                    }), (0, a.jsx)("div", {
                                        className: L.body,
                                        children: s
                                    })]
                                })]
                            }), (0, a.jsxs)("div", {
                                className: i(L.problems, {
                                    [L.slideIn]: this.state.problems
                                }),
                                children: [(0, a.jsx)("div", {
                                    className: L.problemsText,
                                    children: O.default.Messages.CONNECTING_PROBLEMS_CTA
                                }), (0, a.jsxs)("div", {
                                    children: [(0, a.jsxs)(E.Anchor, {
                                        className: L.twitterLink,
                                        href: R.Links.TWITTER_SUPPORT,
                                        target: "_blank",
                                        children: [(0, a.jsx)(N.default, {
                                            className: L.icon
                                        }), O.default.Messages.TWEET_US]
                                    }), (0, a.jsxs)(E.Anchor, {
                                        className: L.statusLink,
                                        href: R.Links.STATUS,
                                        target: "_blank",
                                        children: [(0, a.jsx)(S.default, {
                                            className: L.icon
                                        }), O.default.Messages.SERVER_STATUS]
                                    })]
                                })]
                            })]
                        })
                    }
                }
                constructor(e) {
                    super(e), this.videoRef = null, this._noProblemsTimeout = null, this._problemsTimeout = null, this._connectedSound = this.createSound(), this._loadingText = function() {
                        let e = [O.default.Messages.ACCESSIBILITY_LOADING_TIP_1, O.default.Messages.ACCESSIBILITY_LOADING_TIP_2, O.default.Messages.ACCESSIBILITY_LOADING_TIP_3, O.default.Messages.ACCESSIBILITY_LOADING_TIP_4, O.default.Messages.ACCESSIBILITY_LOADING_TIP_5, O.default.Messages.ACCESSIBILITY_LOADING_TIP_6.format({
                            tabHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "tab",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.ACCESSIBILITY_LOADING_TIP_7, O.default.Messages.ACCESSIBILITY_LOADING_TIP_8, O.default.Messages.ACCESSIBILITY_LOADING_TIP_9, O.default.Messages.ACCESSIBILITY_LOADING_TIP_10.format({
                            F6Hook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "f6",
                                className: L.keybind
                            }, t),
                            tabHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "tab",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_LINE_1, O.default.Messages.LOADING_LINE_2, O.default.Messages.LOADING_LINE_4, O.default.Messages.LOADING_LINE_5, O.default.Messages.LOADING_LINE_6, O.default.Messages.LOADING_LINE_7, O.default.Messages.LOADING_LINE_8, O.default.Messages.LOADING_LINE_9, O.default.Messages.LOADING_LINE_10, O.default.Messages.LOADING_LINE_11, O.default.Messages.LOADING_LINE_12, O.default.Messages.LOADING_LINE_13, O.default.Messages.LOADING_LINE_14, O.default.Messages.LOADING_LINE_15, O.default.Messages.LOADING_TIP_1, O.default.Messages.LOADING_TIP_2, O.default.Messages.LOADING_TIP_3, O.default.Messages.LOADING_TIP_4, O.default.Messages.LOADING_TIP_5, O.default.Messages.LOADING_TIP_6, O.default.Messages.LOADING_TIP_7, O.default.Messages.LOADING_TIP_8, O.default.Messages.LOADING_TIP_9, O.default.Messages.LOADING_TIP_10, O.default.Messages.LOADING_TIP_11, O.default.Messages.LOADING_TIP_12, O.default.Messages.LOADING_TIP_13, O.default.Messages.LOADING_TIP_14, O.default.Messages.LOADING_TIP_15, O.default.Messages.LOADING_TIP_16, O.default.Messages.LOADING_TIP_17, O.default.Messages.LOADING_TIP_18, O.default.Messages.LOADING_TIP_19, O.default.Messages.LOADING_TIP_20, O.default.Messages.LOADING_TIP_21, O.default.Messages.LOADING_TIP_22, O.default.Messages.LOADING_TIP_23, O.default.Messages.LOADING_TIP_24, O.default.Messages.LOADING_TIP_25, O.default.Messages.LOADING_TIP_26, O.default.Messages.LOADING_TIP_27.format({
                            asterisks: "**"
                        }), O.default.Messages.LOADING_KEYBIND_TIP_1.format({
                            quickSwitcherHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "mod+k",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_KEYBIND_TIP_2.format({
                            markUnreadHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "alt+click",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_KEYBIND_TIP_3.format({
                            markServerUnreadHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "shift+esc",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_KEYBIND_TIP_4.format({
                            navigateUnreadHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "shift+alt+up",
                                className: L.keybind
                            }, t),
                            downHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "down",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_KEYBIND_TIP_5.format({
                            keyboardShortcutsHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "mod+/",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_KEYBIND_TIP_6.format({
                            messageNewlineHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "shift+return",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_KEYBIND_TIP_7.format({
                            shiftHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "shift",
                                className: L.keybind
                            }, t)
                        }), O.default.Messages.LOADING_KEYBIND_TIP_8.format({
                            upHook: (e, t) => (0, a.jsx)(E.KeyCombo, {
                                shortcut: "up",
                                className: L.keybind
                            }, t)
                        })];
                        return e[o.random(e.length - 1)]
                    }(), this._eventLoadingText = function() {
                        var e;
                        let t = null === (e = h.default.getLoadingTips) || void 0 === e ? void 0 : e.call(h.default);
                        if (null != t) return t[o.random(t.length - 1)]
                    }(), this.handleReady = () => {
                        this.setState({
                            ready: !0
                        }), (0, m.isDesktop)() && (g.default.send("UPDATED_QUOTES", ["Hold Tight — Loading Discord"]), g.default.send("UPDATE_OPEN_ON_STARTUP"))
                    }, this.setVideoRef = e => {
                        this.videoRef = e
                    }, this.setProblemsTimeout = () => {
                        null == this._problemsTimeout && (this._problemsTimeout = setTimeout(() => this.setState({
                            problems: !0
                        }), 1e4))
                    }, this.clearProblemsTimeout = () => {
                        clearTimeout(this._problemsTimeout), this._problemsTimeout = null
                    };
                    let {
                        connected: t
                    } = e;
                    this.state = {
                        ready: t,
                        hide: t,
                        problems: !1,
                        shouldRender: !t,
                        opacity: new u.default.Value(t ? 0 : 1)
                    }, this._connectedSound.volume = 1
                }
            }
            var M = d.default.connectStores([C.default, T.default, I.default, _.default], () => ({
                isTryingToConnect: C.default.isTryingToConnect(),
                connected: C.default.isConnected(),
                incident: T.default.getIncident(),
                soundpack: I.default.getSoundpack(),
                reducedMotion: _.default.useReducedMotion
            }))(e => {
                let {
                    isTryingToConnect: t,
                    connected: n,
                    incident: s,
                    soundpack: l,
                    reducedMotion: i
                } = e;
                return t ? (0, a.jsx)(v, {
                    reducedMotion: i,
                    soundpack: l,
                    connected: n,
                    incident: s
                }) : null
            })
        },
        657199: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                handleInaccessiblePage: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("393414"),
                i = n("476108"),
                r = n("923959"),
                o = n("18494"),
                u = n("49111");

            function d(e, t) {
                if ((0, s.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("657233").then(n.bind(n, "657233"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    }), o.default.getChannelId(e) === t) {
                    var d;
                    (0, l.replaceWith)(u.Routes.CHANNEL(e, null === (d = r.default.getDefaultChannel(e)) || void 0 === d ? void 0 : d.id))
                } else(0, l.replaceWith)(i.default.defaultRoute)
            }
        },
        72860: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            }), n("222007");
            var a = n("913144"),
                s = n("316272"),
                l = n("305961"),
                i = n("697218"),
                r = n("773336"),
                o = n("197509"),
                u = n("49111");
            class d extends s.default {
                _initialize() {
                    a.default.subscribe("CONNECTION_OPEN", this.maybeFetchEligiblity)
                }
                _terminate() {
                    a.default.unsubscribe("CONNECTION_OPEN", this.maybeFetchEligiblity)
                }
                constructor(...e) {
                    super(...e), this.maybeFetchEligiblity = async () => {
                        if ((0, r.isDesktop)() || (0, r.isWeb)()) {
                            let e = Object.values(l.default.getGuilds()),
                                t = i.default.getCurrentUser(),
                                n = e.filter(e => e.isOwner(t) && !e.hasFeature(u.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE) && !e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_RESTRICTED) && !e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_DISABLED) && (e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE) || e.hasFeature(u.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)));
                            n.length > 0 && await (0, o.fetchCreatorMonetizationNagActivateEligibility)(n.map(e => e.id))
                        }
                    }
                }
            }
            var c = new d
        },
        106803: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCustomStatusMenuItem: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("943722"),
                o = n("997289"),
                u = n("845579"),
                d = n("381546"),
                c = n("782340"),
                E = n("352865");

            function f(e, t) {
                let s = (0, o.useAnalyticsContext)();

                function f(e) {
                    e.stopPropagation(), u.CustomStatusSetting.updateSetting(void 0)
                }

                function _() {
                    (0, i.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("711438").then(n.bind(n, "711438"));
                        return t => (0, a.jsx)(e, {
                            sourceAnalyticsContext: s,
                            ...t
                        })
                    })
                }
                if (null != e) {
                    let n = null != e.emoji ? t => {
                        let {
                            className: n
                        } = t;
                        return (0, a.jsx)(r.ActivityEmoji, {
                            className: n,
                            emoji: e.emoji,
                            animate: !0,
                            hideTooltip: !0
                        })
                    } : void 0;
                    return (0, a.jsx)(i.MenuItem, {
                        id: "edit-custom-status",
                        label: c.default.Messages.CUSTOM_STATUS_EDIT_CUSTOM_STATUS_PLACEHOLDER,
                        icon: n,
                        focusedClassName: t,
                        showIconFirst: !0,
                        hint: e => (0, a.jsx)(i.Clickable, {
                            ...e,
                            onClick: f,
                            tabIndex: -1,
                            children: (0, a.jsx)(d.default, {
                                width: 18,
                                height: 18
                            })
                        }),
                        action: _
                    })
                }
                return (0, a.jsx)(i.MenuItem, {
                    id: "set-custom-status",
                    focusedClassName: t,
                    label: c.default.Messages.CUSTOM_STATUS_SET_CUSTOM_STATUS_CTA,
                    icon: e => (0, a.jsx)("div", {
                        className: l(E.customEmojiPlaceholder, e)
                    }),
                    action: _,
                    showIconFirst: !0
                })
            }
        },
        142813: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                searchQueryContainsBannedWord: function() {
                    return s
                }
            }), n("813006");
            var a = n("843455");
            let s = function() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                return e.split(" ").some(e => a.DiscoveryBannedSearchWords.includes(e.toLowerCase()))
            }
        },
        378662: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryInAppReportingExperiment: function() {
                    return i
                },
                useCanSeeDiscoveryContextMenu: function() {
                    return r
                }
            });
            var a = n("884691"),
                s = n("862205"),
                l = n("845579");
            let i = (0, s.createExperiment)({
                kind: "user",
                id: "2022-01_discovery_iar",
                label: "Ability to report servers in Server Discovery",
                defaultConfig: {
                    canSeeInAppReportingButtons: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show IAR buttons in Server Discovery",
                    config: {
                        canSeeInAppReportingButtons: !0
                    }
                }]
            });

            function r() {
                let {
                    canSeeInAppReportingButtons: e
                } = i.useExperiment({
                    location: "7a11e2_1"
                }, {
                    autoTrackExposure: !1
                }), t = l.DeveloperMode.useSetting();
                return a.useEffect(() => {
                    i.trackExposure({
                        location: "7a11e2_2"
                    })
                }, []), e || t
            }
        },
        574921: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryTagsExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2021-11_discovery_tags",
                label: "Discovery Tags",
                defaultConfig: {
                    shouldDisplayTags: !1,
                    shouldDisplayRecommendedSearchTags: !1
                },
                treatments: [{
                    id: 1,
                    label: "Show keyword tags on home and search result pages",
                    config: {
                        shouldDisplayTags: !0,
                        shouldDisplayRecommendedSearchTags: !1
                    }
                }, {
                    id: 2,
                    label: "Show keyword tags on home and search result pages and under the search bar",
                    config: {
                        shouldDisplayTags: !0,
                        shouldDisplayRecommendedSearchTags: !0
                    }
                }]
            })
        },
        649725: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("316887"),
                l = n("627490"),
                i = n("447853"),
                r = n("517425"),
                o = n("709071"),
                u = n("228427"),
                d = n("855670"),
                c = n("11056"),
                E = n("449008"),
                f = n("447621"),
                _ = n("763065");
            let C = e => {
                    switch (e) {
                        case f.CategoryIcons.Activity:
                            return (0, a.jsx)(s.default, {});
                        case f.CategoryIcons.Discover:
                            return (0, a.jsx)(l.default, {});
                        case f.CategoryIcons.Education:
                            return (0, a.jsx)(i.default, {});
                        case f.CategoryIcons.Music:
                            return (0, a.jsx)(r.default, {});
                        case f.CategoryIcons.Science:
                            return (0, a.jsx)(o.default, {});
                        case f.CategoryIcons.Stage:
                            return (0, a.jsx)(u.default, {
                                height: 22,
                                width: 22
                            });
                        case f.CategoryIcons.Television:
                            return (0, a.jsx)(d.default, {});
                        default:
                            (0, E.assertNever)(e)
                    }
                },
                h = e => {
                    let {
                        categories: t,
                        currentCategoryId: n,
                        handleCategorySelect: s,
                        shouldDisplaySelectedCategory: l = !0
                    } = e;
                    return (0, a.jsx)(a.Fragment, {
                        children: t.map(e => (0, a.jsx)(c.default, {
                            avatar: C(e.icon),
                            name: e.name,
                            focusProps: {
                                offset: {
                                    right: 4,
                                    top: 1,
                                    bottom: 1
                                }
                            },
                            onClick: () => s(e.categoryId),
                            wrapContent: !0,
                            selected: l && e.categoryId === n,
                            className: _.categoryItem,
                            selectedClassName: _.selectedCategoryItem,
                            innerClassName: _.itemInner
                        }, e.categoryId))
                    })
                };
            h.Icons = f.CategoryIcons;
            var I = h
        },
        866487: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoverySidebarHeader: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("825321");

            function i(e) {
                let {
                    text: t
                } = e;
                return (0, a.jsx)(s.Heading, {
                    variant: "heading-xl/semibold",
                    className: l.discoverHeader,
                    children: t
                })
            }
        },
        276580: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("424973");
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("913144"),
                r = n("685665"),
                o = n("141254"),
                u = n("116616"),
                d = n("465126"),
                c = n("738169"),
                E = n("49111"),
                f = n("628159");
            let _ = [
                    [1696, 20],
                    [1432, 16],
                    [1168, 12],
                    [0, 8]
                ],
                C = [
                    [1696, 30],
                    [1432, 24],
                    [1168, 18],
                    [0, 12]
                ];
            var h = e => {
                let t, {
                    title: n,
                    subtitle: h,
                    guildsData: I,
                    analyticsContext: T,
                    theme: S,
                    onViewGuild: N,
                    fetchGuilds: A,
                    onGuildCardSeen: m,
                    currentCategoryId: p,
                    loadId: g,
                    onTagClick: R,
                    showMoreCards: O = !1
                } = e;
                s.useEffect(() => {
                    i.default.wait(() => A())
                }, [p]);
                let L = (0, c.default)(O ? C : _),
                    {
                        analyticsLocations: v
                    } = (0, r.default)();
                if (null == I) return null;
                let {
                    guilds: M,
                    loading: P
                } = I, D = null == M || 0 === M.length;
                if (!P && D) return null;
                let y = async e => {
                    if ((0, o.isAtGuildCapAndNonPremium)())(0, u.default)({
                        analyticsSource: {
                            page: E.AnalyticsPages.GUILD_DISCOVERY
                        },
                        analyticsLocation: {
                            page: E.AnalyticsPages.GUILD_DISCOVERY,
                            section: E.AnalyticsSections.GUILD_CAP_UPSELL_MODAL
                        },
                        analyticsLocations: v
                    });
                    else {
                        let t = M.findIndex(t => t.id === e);
                        await N(e, t, T, g)
                    }
                };
                if (P || null == M) {
                    let e = [];
                    for (let t = 0; t < L; t++) e.push((0, a.jsx)(d.default.Placeholder, {}, t));
                    t = e
                } else t = M.slice(0, L).map(e => (0, a.jsx)(d.default, {
                    className: f.guildCard,
                    guild: e,
                    onView: y,
                    theme: S,
                    onGuildCardSeen: m,
                    onTagClick: R
                }, e.id));
                return (0, a.jsx)("section", {
                    className: f.guildListSection,
                    children: (0, a.jsxs)(l.HeadingLevel, {
                        component: (0, a.jsx)(l.Heading, {
                            className: f.title,
                            variant: "heading-lg/semibold",
                            children: n
                        }),
                        children: [null != h && (0, a.jsx)(l.Text, {
                            className: f.subtitle,
                            variant: "text-sm/normal",
                            color: "header-secondary",
                            children: h
                        }), (0, a.jsx)("div", {
                            className: f.guildList,
                            children: t
                        })]
                    })
                })
            }
        },
        586086: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MAX_GUILDS_PER_PAGE: function() {
                    return A
                },
                default: function() {
                    return R
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("522632"),
                o = n("446674"),
                u = n("77078"),
                d = n("340626"),
                c = n("393414"),
                E = n("926787"),
                f = n("246053"),
                _ = n("794818"),
                C = n("961098"),
                h = n("338638"),
                I = n("719369"),
                T = n("447621"),
                S = n("782340"),
                N = n("492898");
            let A = 12,
                m = () => {
                    let e = (0, c.getHistory)(),
                        t = e.location.search,
                        n = null != t && t.length > 0 && t.startsWith("?");
                    return n ? r.parse(t) : {}
                },
                p = e => {
                    let {
                        categoryId: t,
                        categoryName: n,
                        onClick: s
                    } = e, l = t === T.DISCOVERY_ALL_CATEGORIES_ID, i = l ? S.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_HEADER : S.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_HEADER.format({
                        categoryName: n
                    }), r = l ? S.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_BODY : S.default.Messages.GUILD_DISCOVERY_SEARCH_EMPTY_CATEGORY_BODY.format({
                        onClick: s
                    });
                    return (0, a.jsxs)("div", {
                        className: N.emptyContainer,
                        children: [(0, a.jsx)("div", {
                            className: N.emptyImage
                        }), (0, a.jsx)(u.Heading, {
                            variant: "heading-xl/semibold",
                            className: N.emptyHeader,
                            children: i
                        }), (0, a.jsx)(u.Text, {
                            variant: "text-md/normal",
                            color: "header-secondary",
                            children: r
                        })]
                    })
                },
                g = () => (0, a.jsxs)("div", {
                    className: N.emptyContainer,
                    children: [(0, a.jsx)("div", {
                        className: N.errorImage
                    }), (0, a.jsx)(u.Text, {
                        variant: "text-md/normal",
                        color: "header-secondary",
                        className: N.emptyHeader,
                        children: S.default.Messages.GUILD_DISCOVERY_SEARCH_ERROR
                    })]
                });
            var R = e => {
                let {
                    loadId: t,
                    searchResults: n,
                    mostRecentQuery: l,
                    defaultLanguage: r,
                    availableLanguages: c,
                    isFetchingSearch: R,
                    scroller: O,
                    loadingGuildId: L,
                    theme: v,
                    currentCategoryId: M,
                    currentCategoryName: P,
                    onViewGuild: D,
                    onGuildCardSeen: y,
                    placeholder: x,
                    onTagClick: U
                } = e, b = i.uniqueId("GuildDiscovery"), {
                    guilds: G,
                    loading: j,
                    total: w
                } = n, [k, F] = s.useState(!1), {
                    tag: B
                } = m(), [H, V] = s.useState(B), Y = (0, o.useStateFromStores)([E.default], () => E.default.hasSearchError()), W = (e, t, n) => {
                    d.doAlgoliaSearch(l, {
                        categoryId: n ? T.DISCOVERY_ALL_CATEGORIES_ID : M,
                        preferredLocale: r.code,
                        offset: e,
                        length: t,
                        filters: {
                            approximate_member_count: _.MINIMUM_MEMBER_COUNT
                        }
                    }), F(!1)
                }, K = () => {
                    null == O || O.scrollTo({
                        to: 0
                    })
                };
                s.useEffect(() => {
                    let {
                        offset: e,
                        tag: t
                    } = m(), n = null != e ? Math.floor(parseInt(e, 10) / A) + 1 : 1;
                    V(!!t), 1 === n && F(!0)
                }, [l]);
                let z = M === T.DISCOVERY_ALL_CATEGORIES_ID ? S.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_HEADER.format({
                    count: null != w ? w.toLocaleString() : "0",
                    query: l
                }) : S.default.Messages.GUILD_DISCOVERY_SEARCH_RESULTS_CATEGORY_HEADER.format({
                    count: null != w ? w.toLocaleString() : "0",
                    query: l,
                    category: P
                });
                return (0, a.jsxs)("div", {
                    className: N.container,
                    children: [(0, a.jsxs)("div", {
                        className: N.searchHeader,
                        children: [(0, a.jsx)(u.Clickable, {
                            onClick: () => {
                                d.clearSearch(), _.trackSearchClosed(t)
                            },
                            className: N.arrow,
                            "aria-label": S.default.Messages.BACK,
                            children: (0, a.jsx)(f.default, {
                                direction: f.default.Directions.LEFT
                            })
                        }), (0, a.jsx)(u.Heading, {
                            variant: "heading-xl/semibold",
                            className: N.header,
                            children: z
                        })]
                    }), (0, a.jsx)(h.default, {
                        loadId: t,
                        searchResults: n,
                        mostRecentQuery: l,
                        isFetchingSearch: R,
                        defaultLanguage: r,
                        placeholder: x,
                        availableLanguages: c,
                        isSearchPage: !0,
                        currentCategoryId: M,
                        isTagSearch: H
                    }), Y ? (0, a.jsx)(g, {}) : w <= 0 ? (0, a.jsx)(p, {
                        categoryId: M,
                        categoryName: P,
                        onClick: () => {
                            d.selectCategory(T.DISCOVERY_ALL_CATEGORIES_ID), W(0, A, !0)
                        }
                    }) : (0, a.jsx)("div", {
                        className: N.results,
                        children: (0, a.jsx)(C.default, {
                            pageSize: A,
                            totalCount: w,
                            resetCurrentPage: k,
                            onPageChange: e => {
                                let t = (e - 1) * A;
                                W(t, A), K()
                            },
                            children: e => {
                                let {
                                    controller: t
                                } = e;
                                return (0, a.jsxs)("section", {
                                    "aria-labelledby": b,
                                    children: [(0, a.jsx)(I.default, {
                                        guilds: G,
                                        loading: j,
                                        loadingPlaceholderCount: A,
                                        onViewGuild: D,
                                        loadingGuildId: L,
                                        theme: v,
                                        analyticsContext: _.AnalyticsContexts.SEARCH,
                                        onGuildCardSeen: y,
                                        onTagClick: U
                                    }), t]
                                })
                            }
                        })
                    })]
                })
            }
        },
        353681: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return z
                }
            }), n("881410"), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("522632"),
                d = n("458960"),
                c = n("394846"),
                E = n("446674"),
                f = n("77078"),
                _ = n("913144"),
                C = n("340626"),
                h = n("444949"),
                I = n("139245"),
                T = n("69927"),
                S = n("444497"),
                N = n("349682"),
                A = n("393414"),
                m = n("970366"),
                p = n("915639"),
                g = n("161778"),
                R = n("350522"),
                O = n("926787"),
                L = n("305961"),
                v = n("251013"),
                M = n("664336"),
                P = n("794818"),
                D = n("574921"),
                y = n("197231"),
                x = n("283167"),
                U = n("868246"),
                b = n("276580"),
                G = n("586086"),
                j = n("338638"),
                w = n("311092"),
                k = n("447621"),
                F = n("49111"),
                B = n("782340"),
                H = n("309633"),
                V = n("479999"),
                Y = n("183127");
            class W extends s.PureComponent {
                componentDidMount() {
                    var e, t, n;
                    let {
                        isFetching: a,
                        guilds: {
                            gamesYouPlay: s,
                            featured: l
                        },
                        searchRoute: i,
                        currentHomepageCategoryId: r,
                        mostRecentQuery: o
                    } = this.props;
                    if ((0, h.fetchActivityStatistics)(), (0, x.maybeFetchGuildDiscoveryCategories)(), null == O.default.getSearchIndex() && (0, C.createAlgoliaIndex)(), _.default.wait(() => {
                            (0, I.markView)(F.ViewHistoryKeys.SERVER_DISCOVERY_BADGE)
                        }), !a && 0 === o.length && P.trackDiscoveryViewed({
                            loadId: this.loadId,
                            gamesYouPlayGuilds: s.guilds,
                            allGuilds: l.guilds,
                            categoryId: r
                        }), null != i) {
                        let {
                            query: e,
                            offset: t,
                            limit: n,
                            preferredLocale: a,
                            categoryId: s
                        } = u.parse(i);
                        (0, C.doAlgoliaSearch)(e, {
                            categoryId: parseInt(s, 10),
                            preferredLocale: a,
                            offset: parseInt(t, 10),
                            filters: {
                                approximate_member_count: P.MINIMUM_MEMBER_COUNT
                            },
                            length: parseInt(n, 10)
                        })
                    } else null != r && r !== k.DISCOVERY_ALL_CATEGORIES_ID && _.default.wait(() => (0, C.selectCategory)(r));
                    let d = (0, A.getHistory)().location,
                        c = null !== (t = null === (e = d.state) || void 0 === e ? void 0 : e.scrollTop) && void 0 !== t ? t : 0;
                    c > 0 && (null === (n = this._scroller.current) || void 0 === n || n.scrollTo({
                        to: c
                    })), (0, m.trackAppUIViewed)("guild_discovery")
                }
                componentDidUpdate(e) {
                    let {
                        guilds: {
                            gamesYouPlay: t,
                            featured: n
                        },
                        isFetching: a,
                        mostRecentQuery: s,
                        currentHomepageCategoryId: l,
                        currentCategoryId: i
                    } = this.props;
                    if (e.isFetching && !a && P.trackDiscoveryViewed({
                            loadId: this.loadId,
                            gamesYouPlayGuilds: t.guilds,
                            allGuilds: n.guilds,
                            categoryId: l
                        }), e.currentCategoryId !== i) {
                        var r;
                        null === (r = this._scroller.current) || void 0 === r || r.scrollTo({
                            to: 0
                        })
                    }
                    e.currentCategoryId !== i && P.trackDiscoveryExited(this.loadId, Array.from(this._guildIdsSeen)), e.mostRecentQuery.length > 0 && s.length < 1 && l !== i && (0, C.selectCategory)(l)
                }
                componentWillUnmount() {
                    let {
                        currentCategoryId: e,
                        recommendationsLoadId: t,
                        recommendationsGuilds: n
                    } = this.props;
                    e === k.DISCOVERY_ALL_CATEGORIES_ID ? null != n && null != t && P.trackDiscoveryExited(t, this.getOrderedGuildIdsSeen(n.map(e => e.id)), "Game Recommendations") : P.trackDiscoveryExited(this.loadId, Array.from(this._guildIdsSeen))
                }
                getOrderedGuildIdsSeen(e) {
                    return e.filter(e => this._guildIdsSeen.has(e))
                }
                renderGamesYouPlay() {
                    let {
                        guilds: e,
                        mightHaveGamesYouPlay: t,
                        theme: n,
                        userGuilds: s
                    } = this.props, l = Object.keys(s), i = e[F.GuildDiscoverySections.GAMES_YOU_PLAY];
                    i.guilds = i.guilds.filter(e => !l.includes(e.id));
                    let {
                        loadingGuildId: r
                    } = this.state;
                    return t ? (0, a.jsx)(b.default, {
                        loadId: this.loadId,
                        title: B.default.Messages.GUILD_DISCOVERY_HEADER_GAMES_YOU_PLAY,
                        guildsData: i,
                        loadingGuildId: r,
                        analyticsContext: P.AnalyticsContexts.RECOMMENDED,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: C.fetchGamesYouPlayGuilds,
                        theme: n
                    }) : null
                }
                renderSearchBar() {
                    var e, t;
                    let {
                        mostRecentQuery: n,
                        guilds: {
                            search: s
                        },
                        defaultLanguage: l,
                        isFetchingSearch: i,
                        currentCategoryId: r,
                        categories: o,
                        currentCategoryName: u
                    } = this.props;
                    D.DiscoveryTagsExperiment.trackExposure({
                        location: "54961b_1"
                    });
                    let {
                        shouldDisplayRecommendedSearchTags: d
                    } = D.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "54961b_2"
                    }, {
                        autoTrackExposure: !1
                    }), c = d ? r === k.DISCOVERY_ALL_CATEGORIES_ID ? B.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER_TAGS : B.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER_TAGS.format({
                        categoryName: u
                    }) : r === k.DISCOVERY_ALL_CATEGORIES_ID ? B.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER : B.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format({
                        categoryName: u
                    }), E = null !== (t = null === (e = s[n]) || void 0 === e ? void 0 : e[r]) && void 0 !== t ? t : O.EMPTY_DISCOVERABLE_GUILDS_SECTION;
                    return (0, a.jsx)(j.default, {
                        loadId: this.loadId,
                        searchResults: E,
                        mostRecentQuery: n,
                        isFetchingSearch: i,
                        defaultLanguage: l,
                        placeholder: c,
                        currentCategoryId: r,
                        categories: o
                    })
                }
                renderSearchResults() {
                    var e, t;
                    let {
                        mostRecentQuery: n,
                        guilds: {
                            search: s
                        },
                        availableLanguages: l,
                        defaultLanguage: i,
                        isFetchingSearch: r,
                        theme: o,
                        currentCategoryId: u,
                        currentCategoryName: d
                    } = this.props, {
                        loadingGuildId: c
                    } = this.state, E = u === k.DISCOVERY_ALL_CATEGORIES_ID ? B.default.Messages.GUILD_DISCOVERY_SEARCH_PLACEHOLDER : B.default.Messages.GUILD_DISCOVERY_CATEGORY_SEARCH_PLACEHOLDER.format({
                        categoryName: d
                    }), f = null !== (t = null === (e = s[n]) || void 0 === e ? void 0 : e[u]) && void 0 !== t ? t : O.EMPTY_DISCOVERABLE_GUILDS_SECTION;
                    return (0, a.jsx)(G.default, {
                        loadId: this.loadId,
                        availableLanguages: l,
                        defaultLanguage: i,
                        placeholder: E,
                        isFetchingSearch: r,
                        searchResults: f,
                        mostRecentQuery: n,
                        loadingGuildId: c,
                        currentCategoryId: u,
                        currentCategoryName: d,
                        scroller: this._scroller.current,
                        theme: o,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, P.AnalyticsContexts.SEARCH)
                    })
                }
                renderRecommendedGuildsSection() {
                    let {
                        guilds: e,
                        theme: t
                    } = this.props, {
                        loadingGuildId: n
                    } = this.state;
                    return (0, a.jsx)(b.default, {
                        loadId: this.loadId,
                        title: B.default.Messages.GUILD_DISCOVERY_FEATURED_HEADER,
                        guildsData: e.featured,
                        analyticsContext: P.AnalyticsContexts.POPULAR,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: () => (0, C.fetchFeaturedOrPopularGuilds)(0, 30),
                        loadingGuildId: n,
                        theme: t,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, P.AnalyticsContexts.POPULAR)
                    })
                }
                renderPopularGuildsSection() {
                    let {
                        guilds: e,
                        theme: t,
                        currentCategoryId: n
                    } = this.props, {
                        loadingGuildId: s
                    } = this.state;
                    return (0, a.jsx)(b.default, {
                        loadId: this.loadId,
                        title: B.default.Messages.GUILD_DISCOVERY_POPULAR_HEADER,
                        guildsData: e[n],
                        loadingGuildId: s,
                        analyticsContext: P.AnalyticsContexts.POPULAR,
                        onViewGuild: this.handleViewGuild,
                        onGuildCardSeen: this.handleGuildCardSeen,
                        fetchGuilds: () => (0, C.fetchPopularGuildsForCategory)(n),
                        currentCategoryId: n,
                        theme: t,
                        onTagClick: (e, t) => this.handleTagSearch(e, t, P.AnalyticsContexts.POPULAR)
                    })
                }
                render() {
                    var e, t;
                    let {
                        currentCategoryName: n,
                        mostRecentQuery: l,
                        currentCategoryId: r,
                        guilds: u
                    } = this.props, d = l.length > 0;
                    D.DiscoveryTagsExperiment.trackExposure({
                        location: "54961b_3"
                    });
                    let {
                        shouldDisplayRecommendedSearchTags: E
                    } = D.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "54961b_4"
                    }, {
                        autoTrackExposure: !1
                    }), _ = r === k.DISCOVERY_ALL_CATEGORIES_ID ? null === (e = u[F.GuildDiscoverySections.FEATURED]) || void 0 === e ? void 0 : e.guilds : null === (t = u[r]) || void 0 === t ? void 0 : t.guilds;
                    if (r === k.DISCORD_HUB_ID) return (0, a.jsx)(N.default, {
                        loadId: this.loadId
                    });
                    let C = r === k.DISCOVERY_ALL_CATEGORIES_ID ? B.default.Messages.GUILD_DISCOVERY_HOME_TITLE : B.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format({
                        categoryName: n
                    });
                    return (0, a.jsxs)("div", {
                        className: H.pageWrapper,
                        children: [(0, a.jsx)(T.AppPageTitle, {
                            subsection: d ? l : void 0,
                            location: C
                        }), (0, a.jsx)("div", {
                            className: i(H.dragRegion, H.pageHeaderDrag, {
                                [H.searchPageDrag]: d
                            })
                        }), c.isMobile && (0, a.jsx)(M.default, {
                            children: (0, a.jsx)(s.Fragment, {})
                        }), (0, a.jsx)(f.AdvancedScrollerAuto, {
                            className: H.scroller,
                            ref: this._scroller,
                            onScroll: this.handleScroll,
                            children: (0, a.jsx)("div", {
                                className: i(H.viewWrapper, {
                                    [H.searchPage]: d
                                }),
                                children: d ? this.renderSearchResults() : (0, a.jsxs)(f.HeadingLevel, {
                                    forceLevel: 1,
                                    component: (0, a.jsxs)("div", {
                                        className: H.searchHeader,
                                        children: [(0, a.jsx)("img", {
                                            alt: "",
                                            className: H.headerImage,
                                            src: Y
                                        }), (0, a.jsx)("div", {
                                            className: H.headerContentWrapper,
                                            children: (0, a.jsxs)("div", {
                                                className: H.headerContent,
                                                children: [(0, a.jsx)(f.Heading, {
                                                    variant: "heading-xl/semibold",
                                                    className: H.searchTitle,
                                                    children: r === k.DISCOVERY_ALL_CATEGORIES_ID ? B.default.Messages.GUILD_DISCOVERY_HOME_TITLE : B.default.Messages.GUILD_DISCOVERY_CATEGORY_TITLE.format({
                                                        categoryName: n
                                                    })
                                                }), (0, a.jsx)(f.Text, {
                                                    variant: "text-md/normal",
                                                    className: H.searchSubtitle,
                                                    children: r === k.DISCOVERY_ALL_CATEGORIES_ID && B.default.Messages.GUILD_DISCOVERY_HOME_SUBTITLE
                                                }), this.renderSearchBar(), E && (0, a.jsx)(w.DiscoveryTags, {
                                                    hideOverflow: !0,
                                                    section: P.AnalyticsContexts.HEADER,
                                                    className: H.headerTagContainer,
                                                    discoveryTagStyle: w.DiscoveryTagStyle.LIGHT,
                                                    onTagClick: e => this.handleTagSearch(e, void 0, P.AnalyticsContexts.HEADER),
                                                    tags: o.chain(_).flatMap(e => e.keywords).compact().uniq().sampleSize(10).value()
                                                })]
                                            })
                                        })]
                                    }),
                                    children: [(0, a.jsx)("div", {
                                        className: H.featuredBody,
                                        children: r === k.DISCOVERY_ALL_CATEGORIES_ID ? this.renderRecommendedGuildsSection() : this.renderPopularGuildsSection()
                                    }), (0, a.jsxs)("div", {
                                        className: H.footer,
                                        children: [(0, a.jsx)("img", {
                                            alt: "",
                                            src: V,
                                            className: H.footerImage
                                        }), (0, a.jsx)(f.Heading, {
                                            variant: "heading-md/semibold",
                                            children: B.default.Messages.GUILD_DISCOVERY_CATEGORY_FOOTER_TITLE
                                        }), (0, a.jsx)(f.Button, {
                                            look: f.Button.Looks.LINK,
                                            color: f.Button.Colors.LINK,
                                            size: f.Button.Sizes.MIN,
                                            onClick: this.scrollToTop,
                                            children: B.default.Messages.GUILD_DISCOVERY_FOOTER_BODY
                                        })]
                                    })]
                                })
                            })
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this._scroller = s.createRef(), this._guildIdsSeen = new Set, this.loadId = (0, y.makeAnalyticsID)(), this.state = {
                        animatedValue: new d.default.Value(0),
                        loadingGuildId: null
                    }, this.scrollToTop = () => {
                        null != this._scroller.current && this._scroller.current.scrollTo({
                            to: 0
                        })
                    }, this.handleScroll = () => {
                        var e, t;
                        let {
                            animatedValue: n
                        } = this.state, a = null !== (t = null === (e = this._scroller.current) || void 0 === e ? void 0 : e.getScrollerState().scrollTop) && void 0 !== t ? t : 0;
                        n.setValue(Math.min(1, a / 200))
                    }, this.handleViewGuild = async (e, t, n, a) => {
                        var s, l;
                        let {
                            currentCategoryId: i
                        } = this.props, {
                            loadingGuildId: r
                        } = this.state;
                        if (e === r) return;
                        let o = null !== (l = null === (s = this._scroller.current) || void 0 === s ? void 0 : s.getScrollerState().scrollTop) && void 0 !== l ? l : 0,
                            {
                                location: u
                            } = (0, A.getHistory)();
                        (0, A.replaceWith)({
                            ...u,
                            state: o
                        }), this.setState({
                            loadingGuildId: e
                        });
                        let d = i !== k.DISCOVERY_ALL_CATEGORIES_ID ? i : null;
                        try {
                            await P.viewGuild({
                                loadId: null != a ? a : this.loadId,
                                guildId: e,
                                index: t,
                                analyticsContext: n,
                                categoryId: d
                            })
                        } catch (e) {
                            this.setState({
                                loadingGuildId: null
                            })
                        }
                    }, this.handleGuildCardSeen = e => {
                        this._guildIdsSeen.add(e)
                    }, this.handleTagSearch = (e, t, n) => {
                        let {
                            currentCategoryId: a,
                            defaultLanguage: s
                        } = this.props;
                        if (null == a) return;
                        let l = {
                            approximate_member_count: P.MINIMUM_MEMBER_COUNT
                        };
                        (0, C.getSearchResultsCount)(e, l), (0, C.doAlgoliaSearch)(e, {
                            filters: l,
                            categoryId: a,
                            preferredLocale: s.code,
                            offset: 0,
                            length: G.MAX_GUILDS_PER_PAGE,
                            tag: !0
                        }), P.trackTagSearchStarted(this.loadId, a, n, t), this.scrollToTop()
                    }
                }
            }
            let K = E.default.connectStores([g.default, p.default, v.default, R.default, O.default, U.default, L.default], () => {
                var e;
                let t = k.LANGUAGE_OPTIONS,
                    n = p.default.locale,
                    a = null !== (e = o.find(t, {
                        code: n
                    })) && void 0 !== e ? e : t[0],
                    s = v.default.applicationStatistics,
                    l = Object.keys(s),
                    i = R.default.hasConsented(F.Consents.PERSONALIZATION) && l.length > 0,
                    r = O.default.getCurrentCategoryId(),
                    u = O.default.getCurrentHomepageCategoryId();
                return {
                    isFetching: O.default.isFetching(),
                    isFetchingSearch: O.default.isFetchingSearch(),
                    guilds: O.default.getDiscoverableGuilds(),
                    mostRecentQuery: O.default.getMostRecentQuery(),
                    currentCategoryId: r,
                    currentHomepageCategoryId: u,
                    currentCategoryName: U.default.getCategoryName(r),
                    categories: U.default.getDiscoveryCategories(),
                    userGuilds: L.default.getGuilds(),
                    theme: g.default.theme,
                    mightHaveGamesYouPlay: i,
                    availableLanguages: t,
                    defaultLanguage: a
                }
            })(W);

            function z(e) {
                let {
                    fetching: t,
                    loadId: n,
                    recommendedGuilds: s
                } = (0, E.useStateFromStoresObject)([S.default], () => ({
                    recommendedGuilds: S.default.getRecommendedGuilds(),
                    loadId: S.default.getLoadId(),
                    fetching: S.default.isFetching()
                }));
                return (0, a.jsx)(K, {
                    ...e,
                    fetchingRecommendations: t,
                    usingGameRecommendations: !1,
                    recommendationsGuilds: s,
                    recommendationsLoadId: n
                })
            }
        },
        256430: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("340626"),
                r = n("40546"),
                o = n("397039"),
                u = n("926787"),
                d = n("868246"),
                c = n("649725"),
                E = n("866487"),
                f = n("447621"),
                _ = n("782340");
            let C = e => {
                switch (e) {
                    case 1:
                        return f.CategoryIcons.Activity;
                    case 2:
                        return f.CategoryIcons.Music;
                    case 3:
                        return f.CategoryIcons.Television;
                    case 5:
                        return f.CategoryIcons.Science;
                    case 6:
                        return f.CategoryIcons.Education;
                    default:
                        return f.CategoryIcons.Discover
                }
            };
            var h = () => {
                let {
                    currentCategoryId: e,
                    isViewingSearchResults: t
                } = (0, s.useStateFromStoresObject)([u.default], () => ({
                    currentCategoryId: u.default.getCurrentCategoryId(),
                    isViewingSearchResults: u.default.getMostRecentQuery().length > 0
                })), n = (0, s.useStateFromStores)([d.default], () => d.default.getDiscoveryCategories(), [], d.areDiscoveryCategoriesEqual), f = null == n ? void 0 : n.map(e => ({
                    ...e,
                    icon: C(e.categoryId)
                })), h = e => {
                    (0, i.selectCategory)(e, !0), o.default.closeSidebar(), t && (0, i.clearSearch)()
                };
                return (0, a.jsxs)(l.Scroller, {
                    children: [(0, a.jsx)(E.DiscoverySidebarHeader, {
                        text: _.default.Messages.DISCOVER
                    }), (0, a.jsx)(c.default, {
                        categories: f,
                        handleCategorySelect: h,
                        currentCategoryId: e,
                        shouldDisplaySelectedCategory: !t
                    }), (0, a.jsx)(r.default, {
                        handleCategorySelect: h,
                        currentCategoryId: e,
                        shouldDisplaySelectedCategory: !t
                    })]
                })
            }
        },
        392533: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                },
                GuildDiscoveryMenuPopout: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("272030"),
                r = n("861370"),
                o = n("377114"),
                u = n("305961"),
                d = n("957255"),
                c = n("907566"),
                E = n("378662"),
                f = n("49111"),
                _ = n("782340");

            function C(e) {
                let {
                    guild: t,
                    shiftId: n,
                    onSelect: C,
                    closePopout: h,
                    "aria-label": I
                } = e, T = (0, r.default)({
                    id: t.id,
                    label: _.default.Messages.COPY_ID_GUILD,
                    shiftId: n,
                    onSuccess: h
                }), S = (0, s.useStateFromStores)([u.default], () => u.default.getGuild(t.id), [t.id]), N = (0, s.useStateFromStores)([d.default], () => d.default.can(f.Permissions.ADMINISTRATOR, S)), {
                    canSeeInAppReportingButtons: A
                } = E.DiscoveryInAppReportingExperiment.useExperiment({
                    location: "0e35b9_1"
                }, {
                    autoTrackExposure: !1
                }), m = () => {
                    (0, i.closeContextMenu)(), null == h || h()
                };
                return (0, a.jsxs)(l.Menu, {
                    onSelect: C,
                    navId: "guild-discovery-context-menu",
                    "aria-label": null != I ? I : _.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onClose: i.closeContextMenu,
                    children: [(0, a.jsx)(l.MenuGroup, {
                        children: !N && A ? (0, a.jsx)(l.MenuItem, {
                            id: "report-guild-discovery-listing",
                            label: _.default.Messages.REPORT_SERVER_NO_NAME,
                            action: () => {
                                (0, o.showReportModalForDiscoverableGuild)(t), m()
                            },
                            icon: c.default,
                            color: "danger"
                        }) : null
                    }), (0, a.jsx)(l.MenuGroup, {
                        children: T
                    })]
                })
            }
            let h = e => {
                let {
                    guild: t,
                    children: n,
                    onRequestOpen: s,
                    onRequestClose: i
                } = e;
                return (0, a.jsx)(l.Popout, {
                    onRequestOpen: s,
                    onRequestClose: i,
                    animation: l.Popout.Animation.NONE,
                    position: "bottom",
                    spacing: 4,
                    align: "right",
                    renderPopout: e => {
                        let {
                            closePopout: n
                        } = e;
                        return (0, a.jsx)(C, {
                            guild: t,
                            closePopout: n
                        })
                    },
                    children: n
                })
            }
        },
        593094: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("592407"),
                l = n("5667"),
                i = n("49111"),
                r = n("782340"),
                o = n("465194"),
                u = n("892839");

            function d(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)(l.default, {
                    header: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_TITLE,
                    content: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_DESCRIPTION,
                    asset: (0, a.jsx)("div", {
                        className: o.image,
                        children: (0, a.jsx)("img", {
                            alt: "",
                            src: u
                        })
                    }),
                    buttonCTA: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_ACCEPT,
                    onClick: e => {
                        var n;
                        n = t, s.default.open(n.id, i.GuildSettingsSections.DISCOVERY_LANDING_PAGE)
                    },
                    secondaryButtonCTA: r.default.Messages.DISCOVERY_LANDING_PAGE_UPSELL_BUTTON_DISMISS,
                    onSecondaryClick: () => {},
                    markAsDismissed: n
                })
            }
        },
        961098: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("522632"),
                i = n("77078"),
                r = n("393414");
            class o extends s.PureComponent {
                componentDidUpdate(e) {
                    let {
                        resetCurrentPage: t
                    } = this.props;
                    !e.resetCurrentPage && t && this.setState({
                        currentPage: 1
                    })
                }
                render() {
                    let {
                        totalCount: e,
                        pageSize: t,
                        maxVisiblePages: n,
                        children: s
                    } = this.props, {
                        currentPage: l
                    } = this.state, r = (0, a.jsx)(i.Paginator, {
                        totalCount: e,
                        pageSize: t,
                        currentPage: l,
                        maxVisiblePages: n,
                        onPageChange: this.handlePageChange
                    });
                    return s({
                        controller: r
                    })
                }
                constructor(e) {
                    super(e), this.handlePageChange = e => {
                        let {
                            onPageChange: t
                        } = this.props;
                        this.setState({
                            currentPage: e
                        }), null != t && t(e)
                    };
                    let t = (0, r.getHistory)(),
                        n = t.location.search,
                        a = null != n && n.length > 0 && n.startsWith("?"),
                        {
                            offset: s
                        } = a ? l.parse(n) : {},
                        i = null != s ? Math.floor(parseInt(s, 10) / e.pageSize) + 1 : 1;
                    this.state = {
                        currentPage: i
                    }
                }
            }
            var u = o
        },
        338638: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("446674"),
                d = n("77078"),
                c = n("340626"),
                E = n("926787"),
                f = n("646240"),
                _ = n("599110"),
                C = n("659500"),
                h = n("794818"),
                I = n("142813"),
                T = n("197231"),
                S = n("868246"),
                N = n("447621"),
                A = n("49111"),
                m = n("782340"),
                p = n("708417");
            let g = o.throttle(h.trackSearchResultsViewed, 1e3, {
                    leading: !1,
                    trailing: !0
                }),
                R = e => {
                    let {
                        isSelected: t,
                        onCategoryChange: n,
                        categoryId: s,
                        name: l,
                        count: r
                    } = e;
                    return (0, a.jsx)(d.Clickable, {
                        onClick: () => n(s),
                        className: i(p.categoryPill, {
                            [p.selected]: t
                        }),
                        children: (0, a.jsx)(d.Text, {
                            className: p.categoryLabel,
                            variant: "text-sm/normal",
                            children: null != r ? "".concat(l, " (").concat(r, ")") : l
                        })
                    })
                };
            class O extends s.PureComponent {
                componentDidMount() {
                    let {
                        loadId: e,
                        searchResults: t,
                        currentCategoryId: n
                    } = this.props, {
                        searchId: a,
                        query: s,
                        isHandlingTagSearch: l
                    } = this.state, i = this.context;
                    if (null == E.default.getSearchIndex() && c.createAlgoliaIndex(), C.ComponentDispatch.subscribe(A.ComponentActions.GLOBAL_CLIPBOARD_PASTE, this.focusInput), C.ComponentDispatch.subscribe(A.ComponentActions.TEXTAREA_FOCUS, this.focusInput), s.length > 0) {
                        let r = n !== N.DISCOVERY_ALL_CATEGORIES_ID ? n : null;
                        g({
                            loadId: e,
                            searchId: a,
                            query: s,
                            guildResults: t.guilds,
                            analyticsContext: i,
                            categoryId: r,
                            isTagSearch: l
                        })
                    }
                }
                componentDidUpdate(e, t) {
                    let {
                        loadId: n,
                        isFetchingSearch: a,
                        searchResults: s,
                        currentCategoryId: l,
                        mostRecentQuery: i
                    } = this.props, {
                        isSearching: r,
                        searchId: o,
                        query: u,
                        isHandlingTagSearch: d
                    } = this.state, c = this.context, E = e.isFetchingSearch && !a, f = l !== N.DISCOVERY_ALL_CATEGORIES_ID ? l : null;
                    (r || d) && E && (g({
                        loadId: n,
                        searchId: o,
                        query: u,
                        guildResults: s.guilds,
                        analyticsContext: c,
                        categoryId: f,
                        isTagSearch: d
                    }), this.setState({
                        isHandlingTagSearch: !1
                    })), !t.isSearching && r && h.trackSearchStarted(n, f, c), e.mostRecentQuery !== i && this.setState({
                        query: i,
                        searchId: (0, T.makeAnalyticsID)(),
                        isHandlingTagSearch: !0
                    })
                }
                componentWillUnmount() {
                    C.ComponentDispatch.unsubscribe(A.ComponentActions.GLOBAL_CLIPBOARD_PASTE, this.focusInput), C.ComponentDispatch.unsubscribe(A.ComponentActions.TEXTAREA_FOCUS, this.focusInput)
                }
                renderSearchOptions() {
                    var e;
                    let {
                        availableLanguages: t
                    } = this.props, {
                        selectedLanguage: n
                    } = this.state;
                    if (null == t) return null;
                    let s = t.map(e => {
                        let {
                            name: t
                        } = e;
                        return {
                            label: t,
                            value: t
                        }
                    });
                    return (0, a.jsx)(d.SingleSelect, {
                        className: p.languageSelector,
                        options: s,
                        value: null !== (e = null == n ? void 0 : n.name) && void 0 !== e ? e : "",
                        onChange: this.handleLanguageChange,
                        maxVisibleItems: 6
                    })
                }
                renderCategories() {
                    let {
                        currentCategoryId: e,
                        countsByCategory: t
                    } = this.props;
                    return (0, a.jsx)("div", {
                        className: p.categories,
                        children: null == t ? void 0 : t.map(t => {
                            let [n, s] = t;
                            return (0, a.jsx)(R, {
                                categoryId: n,
                                name: n === N.DISCOVERY_ALL_CATEGORIES_ID ? m.default.Messages.GUILD_DISCOVERY_ALL_CATEGORY_FILTER : S.default.getCategoryName(n),
                                onCategoryChange: this.handleCategoryChange,
                                isSelected: e === n,
                                count: s
                            }, n)
                        })
                    })
                }
                render() {
                    let {
                        query: e,
                        inputFocused: t
                    } = this.state, {
                        placeholder: n,
                        isSearchPage: s
                    } = this.props;
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)("div", {
                            className: i(p.container, {
                                [p.searchPage]: s
                            }),
                            children: [(0, a.jsx)("div", {
                                className: p.search,
                                children: (0, a.jsx)(f.default, {
                                    ref: this._searchRef,
                                    searchTerm: e,
                                    className: s ? void 0 : p.searchBox,
                                    inputClassName: s ? void 0 : p.searchBoxInput,
                                    closeIconClassName: s ? void 0 : p.closeIcon,
                                    searchIconClassName: s ? void 0 : p.searchIcon,
                                    label: m.default.Messages.GUILD_DISCOVERY_SEARCH_LABEL,
                                    placeholder: n,
                                    onChange: this.handleQueryChanged,
                                    onClear: this.handleQueryCleared,
                                    onFocus: this.handleFocus,
                                    onBlur: this.handleSearchBlurred,
                                    onKeyPress: this.handleSearchKeyPress,
                                    autoFocus: !s,
                                    cta: t && null != e && e.length > 1 ? m.default.Messages.GUILD_DISCOVERY_SEARCH_ENTER_CTA : null
                                })
                            }), s ? this.renderSearchOptions() : null]
                        }), s ? this.renderCategories() : null]
                    })
                }
                constructor(e) {
                    super(e), this._searchRef = s.createRef(), this.canSearch = e => e.trim().length >= 2 && !(0, I.searchQueryContainsBannedWord)(e), this.doSearch = (e, t, n, a) => {
                        var s;
                        let {
                            defaultLanguage: l,
                            currentCategoryId: i
                        } = this.props, {
                            query: r,
                            selectedLanguage: o
                        } = this.state, u = {
                            approximate_member_count: h.MINIMUM_MEMBER_COUNT
                        };
                        a && c.getSearchResultsCount(r, u), this.setState({
                            searchId: (0, T.makeAnalyticsID)(),
                            queryHasChanged: !1,
                            isSearching: !0
                        }), c.doAlgoliaSearch(r, {
                            categoryId: null == n ? i : n,
                            preferredLocale: null !== (s = null == o ? void 0 : o.code) && void 0 !== s ? s : l.code,
                            offset: e,
                            length: t,
                            filters: u
                        })
                    }, this.handleSearchBlurred = e => {
                        let {
                            onSearchBlur: t
                        } = this.props;
                        this.setState({
                            inputFocused: !1
                        }), null == t || t()
                    }, this.handleSearchKeyPress = e => {
                        let {
                            query: t,
                            queryHasChanged: n
                        } = this.state, {
                            loadId: a,
                            currentCategoryId: s
                        } = this.props, l = s !== N.DISCOVERY_ALL_CATEGORIES_ID ? s : null;
                        this.canSearch(t) && n && e.charCode === A.KeyboardKeys.ENTER ? (h.trackSearchStarted(a, l), this.doSearch(0, 12, void 0, !0)) : 0 === t.length && e.charCode === A.KeyboardKeys.ENTER && this.setState({
                            isSearching: !1
                        })
                    }, this.handleQueryChanged = e => {
                        this.setState({
                            query: e,
                            queryHasChanged: !0
                        })
                    }, this.handleQueryCleared = () => {
                        this.setState({
                            query: "",
                            queryHasChanged: !0,
                            isSearching: !1
                        })
                    }, this.handleLanguageChange = e => {
                        let {
                            mostRecentQuery: t,
                            availableLanguages: n
                        } = this.props, a = null == n ? void 0 : n.find(t => t.name === e);
                        this.setState({
                            selectedLanguage: a
                        }, () => {
                            this.canSearch(t) && this.doSearch(0, 12)
                        })
                    }, this.handleCategoryChange = e => {
                        let {
                            mostRecentQuery: t
                        } = this.props;
                        c.selectCategory(e), this.canSearch(t) && this.doSearch(0, 12, e)
                    }, this.handleFocus = () => {
                        let {
                            onSearchFocus: e
                        } = this.props;
                        this.setState({
                            inputFocused: !0
                        }), null == e || e()
                    }, this.focusInput = () => {
                        var e;
                        null === (e = this._searchRef.current) || void 0 === e || e.focus()
                    }, this.state = {
                        searchId: (0, T.makeAnalyticsID)(),
                        query: e.isSearchPage ? e.mostRecentQuery : "",
                        queryHasChanged: !1,
                        isSearching: !1,
                        selectedLanguage: e.defaultLanguage,
                        inputFocused: !1,
                        isHandlingTagSearch: e.isTagSearch || !1
                    }
                }
            }

            function L(e) {
                let t = (0, u.useStateFromStores)([S.default], () => S.default.getDiscoveryCategories(), [], S.areDiscoveryCategoriesEqual),
                    n = (0, u.useStateFromStores)([E.default], () => E.default.getTopCategoryCounts(e.mostRecentQuery));
                return (0, a.jsx)(O, {
                    ...e,
                    categories: t,
                    countsByCategory: n
                })
            }
            O.contextType = _.AnalyticsContext
        },
        311092: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoveryTagStyle: function() {
                    return h
                },
                DiscoveryTags: function() {
                    return I
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("731898"),
                u = n("599110"),
                d = n("49111"),
                c = n("259160");
            let E = ["egirl", "egirls", "waifu", "dating", "nsfw", "sex", "playboy", "stupid", "harem", "playgirl", "shitcoin", "shitpost", "porno", "nudes", "sexy", "horny", "fart", "tits", "balls", "cum"],
                f = e => {
                    let {
                        text: t,
                        onClick: n,
                        className: s,
                        hide: l
                    } = e;
                    return (0, a.jsx)("li", {
                        className: i(c.tag, s, {
                            [c.hide]: l
                        }),
                        children: (0, a.jsx)(r.Clickable, {
                            className: c.tagText,
                            onClick: e => {
                                e.stopPropagation(), e.preventDefault(), n(e)
                            },
                            children: t
                        })
                    })
                },
                _ = e => {
                    let {
                        tags: t,
                        onTagClick: n,
                        guildId: l,
                        section: i
                    } = e;
                    return s.useEffect(() => {
                        u.default.track(d.AnalyticEvents.OPEN_POPOUT, {
                            type: "Discovery Tags Overflow",
                            guild_id: l,
                            location: {
                                page: d.AnalyticsPages.GUILD_DISCOVERY,
                                section: i
                            }
                        })
                    }, [l, i]), (0, a.jsx)(r.Dialog, {
                        className: c.overflowTagsPopout,
                        children: (0, a.jsx)("ul", {
                            children: t.map(e => (0, a.jsx)(f, {
                                onClick: () => n(e),
                                className: c.tagAlt,
                                text: e
                            }, e))
                        })
                    })
                },
                C = e => {
                    let {
                        className: t,
                        count: n
                    } = e;
                    return (0, a.jsx)(r.Popout, {
                        renderPopout: () => (0, a.jsx)(_, {
                            ...e
                        }),
                        position: "right",
                        align: "top",
                        closeOnScroll: !0,
                        children: e => (0, a.jsx)(f, {
                            className: t,
                            ...e,
                            text: "+".concat(n)
                        })
                    })
                },
                h = {
                    DEFAULT: c.tagDefault,
                    LIGHT: c.tagLight,
                    ALT: c.tagAlt
                },
                I = e => {
                    let {
                        tags: t,
                        onTagClick: n,
                        className: l,
                        discoveryTagStyle: r = h.DEFAULT,
                        hideOverflow: u = !1,
                        guildId: d,
                        section: _
                    } = e, {
                        ref: I,
                        width: T
                    } = (0, o.default)(), [S, N] = s.useState(null), A = t.filter(e => !E.includes(e.toLowerCase()));
                    return s.useLayoutEffect(() => {
                        if (null == I.current || null == T || 0 === T) return;
                        let e = 0,
                            t = 0,
                            n = T - 40 - 4;
                        for (let a = 0; a < A.length; a++) {
                            let s = I.current.children[a],
                                l = s.clientWidth;
                            if (t += l + 4, a === A.length - 1 ? t > n + 40 : t > n) break;
                            e++
                        }
                        N(t => e <= A.length ? e : t)
                    }, [T, I, A]), (0, a.jsxs)("ul", {
                        ref: I,
                        className: i(c.tagContainer, l, {
                            [c.invisible]: null == S
                        }),
                        children: [A.map((e, t) => (0, a.jsx)(f, {
                            className: r,
                            onClick: () => n(e),
                            hide: null != S && t >= S,
                            text: e
                        }, e)), !u && null != S && S < A.length && (0, a.jsx)(C, {
                            className: r,
                            onTagClick: n,
                            tags: A.slice(S),
                            count: A.length - S,
                            guildId: d,
                            section: _
                        })]
                    })
                }
        },
        951169: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("75766"),
                r = n("994428"),
                o = n("782340"),
                u = n("935344");

            function d(e) {
                let {
                    onClick: t,
                    onSecondaryClick: n,
                    onComponentMount: d,
                    markAsDismissed: c
                } = e;
                s.useEffect(() => {
                    null == d || d()
                }, [d]);
                let E = s.useCallback(e => {
                        t(e), null == c || c(r.ContentDismissActionType.PRIMARY)
                    }, [t, c]),
                    f = s.useCallback(() => {
                        null == n || n(), null == c || c(r.ContentDismissActionType.SECONDARY)
                    }, [n, c]);
                return (0, a.jsxs)("div", {
                    className: u.tooltipWrapper,
                    children: [(0, a.jsx)(l.Heading, {
                        className: u.tooltipHeader,
                        variant: "heading-md/semibold",
                        children: o.default.Messages.SERVER_DISCOVERY_TOOLTIP_TITLE
                    }), (0, a.jsx)(l.Text, {
                        className: u.tooltipText,
                        variant: "text-sm/normal",
                        children: o.default.Messages.SERVER_DISCOVERY_TOOLTIP_DESCRIPTION.format({
                            count: i.LOWERED_MINIMUM_SIZE
                        })
                    }), (0, a.jsxs)("div", {
                        className: u.buttonsContainer,
                        children: [(0, a.jsx)(l.Button, {
                            fullWidth: !0,
                            size: l.Button.Sizes.SMALL,
                            color: l.Button.Colors.BRAND,
                            onClick: E,
                            children: o.default.Messages.LEARN_MORE
                        }), (0, a.jsx)(l.Button, {
                            fullWidth: !0,
                            size: l.Button.Sizes.SMALL,
                            look: l.Button.Looks.BLANK,
                            onClick: f,
                            children: o.default.Messages.NO_THANKS
                        })]
                    })]
                })
            }
        },
        719369: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("424973"), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("301165"),
                i = n("948062"),
                r = n("309633");
            class o extends s.PureComponent {
                renderPlaceholders() {
                    let {
                        loadingPlaceholderCount: e
                    } = this.props, t = [];
                    for (let n = 0; n < e; n++) t.push((0, a.jsx)(i.DiscoverSearchResultPlaceholder, {}, n));
                    return t
                }
                render() {
                    let {
                        guilds: e,
                        loading: t
                    } = this.props;
                    return (0, a.jsx)(l.Spring, {
                        from: {
                            opacity: t ? 0 : 1
                        },
                        to: {
                            opacity: 1
                        },
                        delay: 100,
                        children: n => (0, a.jsx)(l.animated.div, {
                            className: r.guildList,
                            style: n,
                            children: t || null == e ? this.renderPlaceholders() : e.map(this.renderGuild)
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.handleViewGuild = async e => {
                        let {
                            guilds: t,
                            analyticsContext: n,
                            onViewGuild: a
                        } = this.props, s = t.findIndex(t => t.id === e);
                        await a(e, s, n)
                    }, this.renderGuild = (e, t) => {
                        let {
                            theme: n,
                            onTagClick: s
                        } = this.props;
                        return (0, a.jsx)(i.default, {
                            guild: e,
                            theme: n,
                            onView: this.handleViewGuild,
                            onTagClick: s
                        }, t)
                    }
                }
            }
            o.defaultProps = {
                loadingPlaceholderCount: 12
            };
            var u = o
        },
        948062: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DiscoverSearchResultPlaceholder: function() {
                    return O
                },
                default: function() {
                    return L
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("272030"),
                u = n("685665"),
                d = n("407063"),
                c = n("141254"),
                E = n("116616"),
                f = n("580357"),
                _ = n("587974"),
                C = n("315102"),
                h = n("794818"),
                I = n("378662"),
                T = n("574921"),
                S = n("311092"),
                N = n("613088"),
                A = n("49111"),
                m = n("782340"),
                p = n("750408"),
                g = n("68422"),
                R = n("578817");
            let O = () => (0, a.jsx)("div", {
                className: p.placeholder
            });
            var L = e => {
                var t;
                let {
                    guild: l,
                    theme: O,
                    onView: L,
                    onTagClick: v
                } = e, {
                    id: M,
                    discoverySplash: P,
                    icon: D,
                    name: y,
                    description: x,
                    presenceCount: U,
                    memberCount: b,
                    keywords: G
                } = l, [j, w] = s.useState(!1), [k, F] = s.useState(!1), {
                    analyticsLocations: B
                } = (0, u.default)(), H = C.default.getGuildDiscoverySplashURL({
                    id: M,
                    splash: P,
                    size: 240 * (0, d.getDevicePixelRatio)()
                }), V = null != H ? H : function(e) {
                    switch (e) {
                        case A.ThemeTypes.DARK:
                            return g;
                        case A.ThemeTypes.LIGHT:
                            return R
                    }
                }(O), Y = null !== (t = C.default.getGuildIconURL({
                    id: M,
                    icon: D,
                    size: 32
                })) && void 0 !== t ? t : void 0, W = async e => {
                    let {
                        className: t
                    } = e.target;
                    if (!t.includes("Menu")) {
                        if ((0, c.isAtGuildCapAndNonPremium)()) {
                            (0, E.default)({
                                analyticsSource: {
                                    page: A.AnalyticsPages.GUILD_DISCOVERY
                                },
                                analyticsLocation: {
                                    page: A.AnalyticsPages.GUILD_DISCOVERY,
                                    section: A.AnalyticsSections.GUILD_CAP_UPSELL_MODAL
                                },
                                analyticsLocations: B
                            });
                            return
                        }
                        F(!0);
                        try {
                            null != L && await L(l.id)
                        } finally {
                            F(!1)
                        }
                    }
                };
                s.useEffect(() => T.DiscoveryTagsExperiment.trackExposure({
                    location: "4302e4_1"
                }));
                let {
                    shouldDisplayTags: K
                } = T.DiscoveryTagsExperiment.useExperiment({
                    location: "4302e4_2"
                }, {
                    autoTrackExposure: !1
                }), z = (0, I.useCanSeeDiscoveryContextMenu)();
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: p.card,
                        children: [k ? (0, a.jsx)(r.Spinner, {
                            type: r.Spinner.Type.PULSING_ELLIPSIS,
                            className: p.spinner
                        }) : null, (0, a.jsxs)(r.Clickable, {
                            className: i(p.container, {
                                [p.hover]: j,
                                [p.submitting]: k
                            }),
                            onClick: W,
                            onContextMenu: e => {
                                (0, o.openContextMenuLazy)(e, async () => {
                                    let {
                                        default: e
                                    } = await n.el("392533").then(n.bind(n, "392533"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        guild: l
                                    })
                                })
                            },
                            onMouseEnter: () => w(!0),
                            onMouseLeave: () => w(!1),
                            children: [(0, a.jsx)("div", {
                                className: i(p.splashContainer, {
                                    [p.splashContainerWithTags]: K
                                }),
                                children: (0, a.jsx)("img", {
                                    src: V,
                                    alt: "",
                                    className: p.splashImage,
                                    width: 240
                                })
                            }), (0, a.jsxs)("div", {
                                className: i(p.content, {
                                    [p.contentWithTags]: K
                                }),
                                children: [(0, a.jsxs)("div", {
                                    className: p.header,
                                    children: [(0, a.jsx)(_.default, {
                                        mask: _.default.Masks.SQUIRCLE,
                                        width: 32,
                                        height: 32,
                                        children: (0, a.jsx)("img", {
                                            src: Y,
                                            alt: "",
                                            className: p.avatar
                                        })
                                    }), (0, a.jsxs)("div", {
                                        className: p.headerName,
                                        children: [(0, a.jsx)("div", {
                                            children: (0, a.jsx)(f.default, {
                                                guild: l,
                                                className: p.guildBadge,
                                                size: 16
                                            })
                                        }), (0, a.jsx)(r.Heading, {
                                            variant: "heading-md/semibold",
                                            className: p.headerTitle,
                                            children: y
                                        })]
                                    })]
                                }), (0, a.jsx)(r.Text, {
                                    className: p.description,
                                    variant: "text-sm/normal",
                                    children: x
                                }), K && null != G && null != v && (0, a.jsx)(S.DiscoveryTags, {
                                    guildId: l.id,
                                    discoveryTagStyle: S.DiscoveryTagStyle.ALT,
                                    onTagClick: e => v(e, l.id),
                                    tags: G,
                                    section: h.AnalyticsContexts.SEARCH
                                }), (0, a.jsxs)("div", {
                                    className: p.memberInfo,
                                    children: [null != U && (0, a.jsx)("div", {
                                        className: p.memberCount,
                                        children: (0, a.jsx)(r.Text, {
                                            variant: "text-xs/normal",
                                            color: "header-secondary",
                                            children: m.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format({
                                                membersOnline: U
                                            })
                                        })
                                    }), null != b && (0, a.jsxs)(a.Fragment, {
                                        children: [(0, a.jsx)("div", {
                                            className: p.dotSeparator
                                        }), (0, a.jsx)("div", {
                                            className: p.memberCount,
                                            children: (0, a.jsx)(r.Text, {
                                                variant: "text-xs/normal",
                                                color: "header-secondary",
                                                children: m.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format({
                                                    count: b
                                                })
                                            })
                                        })]
                                    })]
                                })]
                            }), z ? (0, a.jsx)("div", {
                                className: p.actionButtons,
                                children: (0, a.jsx)(N.default, {
                                    guild: l
                                })
                            }) : null]
                        })]
                    }), (0, a.jsx)("hr", {
                        className: p.separator
                    })]
                })
            }
        },
        613088: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("433487"),
                u = n("149279"),
                d = n("392533"),
                c = n("782340"),
                E = n("133487"),
                f = function(e) {
                    let {
                        guild: t
                    } = e, [n, l] = s.useState(!1), f = s.useCallback(() => l(!0), [l]), _ = s.useCallback(() => l(!0), [l]);
                    return (0, a.jsx)("div", {
                        className: i(E.actionButtonsContainer, {
                            [E.forceButtonsShow]: n
                        }),
                        children: (0, a.jsx)(u.default, {
                            children: (0, a.jsx)(d.GuildDiscoveryMenuPopout, {
                                onRequestOpen: f,
                                onRequestClose: _,
                                guild: t,
                                children: e => {
                                    let {
                                        onClick: t,
                                        ...n
                                    } = e;
                                    return (0, a.jsx)(r.Tooltip, {
                                        text: c.default.Messages.MORE,
                                        hideOnClick: !0,
                                        children: e => {
                                            let {
                                                onClick: s,
                                                ...l
                                            } = e;
                                            return (0, a.jsx)(u.Button, {
                                                ...n,
                                                ...l,
                                                onClick: e => {
                                                    e.stopPropagation(), null == s || s(), t(e)
                                                },
                                                "aria-label": c.default.Messages.MORE,
                                                children: (0, a.jsx)(o.default, {
                                                    className: E.overflowIcon
                                                })
                                            })
                                        }
                                    })
                                }
                            })
                        })
                    })
                }
        },
        738169: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            }), n("222007");
            var a = n("884691");

            function s(e) {
                let [t, n] = a.useState(0), s = a.useCallback(() => {
                    let t = window.innerWidth;
                    for (let a of e) {
                        let [e, s] = a;
                        if (t >= e) {
                            n(s);
                            return
                        }
                    }
                }, [e]);
                return a.useEffect(() => {
                    s()
                }, [s]), a.useEffect(() => (window.addEventListener("resize", s), () => {
                    window.removeEventListener("resize", s)
                })), t
            }
        },
        697316: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("913144"),
                s = n("862853"),
                l = {
                    init() {
                        a.default.subscribe("CONNECTION_OPEN", () => {
                            (0, s.reset)()
                        }), a.default.subscribe("LOGOUT", () => {
                            (0, s.reset)()
                        })
                    }
                }
        },
        935246: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                DismissibleContentNotices: function() {
                    return P
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("151426"),
                i = n("77078"),
                r = n("327037"),
                o = n("79112"),
                u = n("376556"),
                d = n("926994"),
                c = n("889293"),
                E = n("757557"),
                f = n("994750"),
                _ = n("966003"),
                C = n("363861"),
                h = n("695827"),
                I = n("425538"),
                T = n("393414"),
                S = n("600133"),
                N = n("936629"),
                A = n("489622"),
                m = n("599110"),
                p = n("509802"),
                g = n("994428"),
                R = n("49111"),
                O = n("935583"),
                L = n("646718"),
                v = n("782340"),
                M = n("185401");
            let P = e => {
                let {
                    dismissibleContent: t,
                    noticeType: P
                } = e, D = (0, s.useStateFromStores)([S.default], () => S.default.getNotice());
                return (0, a.jsx)(p.default, {
                    contentTypes: [t],
                    groupName: g.DismissibleContentGroupName.NOTICE_BAR,
                    bypassAutoDismiss: !0,
                    children: e => {
                        var t, s;
                        let {
                            visibleContent: S,
                            markAsDismissed: p
                        } = e;
                        switch (S) {
                            case l.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR:
                                return (0, a.jsx)(_.default, {
                                    dismissCurrentNotice: () => p(g.ContentDismissActionType.UNKNOWN)
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.DEFAULT,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN),
                                        noticeType: P
                                    }), v.default.Messages.NOTICE_NATIVE_APPS_2020_06, (0, a.jsx)("i", {
                                        className: M.iconApple
                                    }), (0, a.jsx)("i", {
                                        className: M.iconAndroid
                                    }), (0, a.jsx)("i", {
                                        className: M.iconWindows
                                    }), (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        noticeType: P,
                                        onClick: () => {
                                            (0, i.openModalLazy)(async () => {
                                                let {
                                                    default: e
                                                } = await n.el("649486").then(n.bind(n, "649486"));
                                                return t => (0, a.jsx)(e, {
                                                    source: "Top Bar Nag",
                                                    ...t
                                                })
                                            })
                                        },
                                        children: v.default.Messages.DOWNLOAD
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.SPOTIFY,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN),
                                        noticeType: P
                                    }), (0, a.jsx)(N.default, {
                                        className: M.platformIcon
                                    }), v.default.Messages.NOTICE_CONNECT_SPOTIFY, (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        onClick: () => (0, d.default)(R.PlatformTypes.SPOTIFY, "Notice Bar"),
                                        noticeType: P,
                                        children: v.default.Messages.CONNECT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.PLAYSTATION,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN)
                                    }), (0, a.jsx)("img", {
                                        alt: "",
                                        className: M.platformIcon,
                                        src: u.default.get(R.PlatformTypes.PLAYSTATION).icon.whiteSVG
                                    }), v.default.Messages.NOTICE_CONNECT_PLAYSTATION, (0, a.jsx)(A.NoticeButton, {
                                        onClick: () => (0, d.default)(R.PlatformTypes.PLAYSTATION, "Notice Bar"),
                                        children: v.default.Messages.CONNECT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.DEFAULT,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN),
                                        noticeType: P
                                    }), v.default.Messages.NOTICE_MFA_SMS_BACKUP, (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        onClick: () => o.default.open(R.UserSettingsSections.ACCOUNT),
                                        noticeType: P,
                                        children: v.default.Messages.NOTICE_MFA_SMS_BACKUP_BUTTON
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_PROMO:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.PREMIUM_TIER_2,
                                    children: [(0, a.jsx)("span", {
                                        className: M.premiumLogo
                                    }), (0, a.jsx)("span", {
                                        className: M.premiumText,
                                        children: v.default.Messages.NOTICE_PREMIUM_PROMO_MESSAGE
                                    }), (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        className: M.premiumAction,
                                        noticeType: P,
                                        onClick: () => {
                                            m.default.track(R.AnalyticEvents.PREMIUM_PROMOTION_OPENED, {
                                                location_section: R.AnalyticsSections.NOTIFICATION_BAR,
                                                location_object: R.AnalyticsObjects.BUTTON_CTA
                                            }), o.default.open(R.UserSettingsSections.PREMIUM)
                                        },
                                        children: v.default.Messages.NOTICE_PREMIUM_PROMO_ACTION
                                    }), (0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => {
                                            p(g.ContentDismissActionType.UNKNOWN), (0, r.setFlag)(R.UserFlags.PREMIUM_PROMO_DISMISSED, !0)
                                        },
                                        noticeType: P
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING:
                                return (0, a.jsx)(I.default, {
                                    dismissCurrentNotice: () => p(g.ContentDismissActionType.UNKNOWN),
                                    subscriptionTier: L.PremiumSubscriptionSKUs.TIER_2
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_0_TRIAL_ENDING:
                                return (0, a.jsx)(I.default, {
                                    dismissCurrentNotice: () => p(g.ContentDismissActionType.UNKNOWN),
                                    subscriptionTier: L.PremiumSubscriptionSKUs.TIER_0
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.PREMIUM_TIER_2,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        noticeType: P,
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN)
                                    }), v.default.Messages.PREMIUM_SUBSCRIPTION_REACTIVATION_NOTICE_TEXT, (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        noticeType: P,
                                        onClick: () => {
                                            p(g.ContentDismissActionType.UNKNOWN), o.default.open(R.UserSettingsSections.PREMIUM)
                                        },
                                        children: v.default.Messages.PREMIUM_SUBSCRIPTION_REACTIVATION_NOTICE_BUTTON_TEXT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_LOCALIZED_PRICING:
                                return (0, a.jsx)(h.default, {
                                    notice: D,
                                    noticeType: P,
                                    dismissCurrentNotice: () => p(g.ContentDismissActionType.UNKNOWN)
                                });
                            case l.DismissibleContent.QUEST_1_GO_LIVE_BANNER:
                                let y = null == D ? void 0 : null === (t = D.metadata) || void 0 === t ? void 0 : t.partnerGame;
                                return (0, a.jsx)(f.default, {
                                    noticeType: P,
                                    markAsDismissed: () => p(g.ContentDismissActionType.UNKNOWN),
                                    partnerGame: y
                                });
                            case l.DismissibleContent.QUEST_1_ENDED_INCOMPLETE:
                                let x = null == D ? void 0 : null === (s = D.metadata) || void 0 === s ? void 0 : s.partnerGame;
                                return (0, a.jsx)(E.default, {
                                    noticeType: P,
                                    markAsDismissed: () => p(g.ContentDismissActionType.UNKNOWN),
                                    partnerGame: x
                                });
                            case l.DismissibleContent.NAGBAR_BOUNCED_EMAIL_NOTICE:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.DANGER,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN),
                                        noticeType: P
                                    }), v.default.Messages.BOUNCED_EMAIL_DETECTED_NOTICE, (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        noticeType: P,
                                        onClick: () => {
                                            (0, T.transitionTo)(R.Routes.SETTINGS("account"))
                                        },
                                        children: v.default.Messages.CHANGE_EMAIL_SHORT
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_ACTIVATE_SERVER_SUBSCRIPTION:
                                let U = c.default.getEligibleGuildsForNagActivate();
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.DEFAULT,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN),
                                        noticeType: P
                                    }), v.default.Messages.GUILD_ROLE_SUBSCRIPTION_NAGBAR_TEXT, (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        noticeType: P,
                                        onClick: () => {
                                            p(g.ContentDismissActionType.PRIMARY), (0, T.transitionTo)(1 === U.length ? R.Routes.GUILD_SETTINGS(U[0], "role-subscriptions") : R.Routes.PICK_GUILD_SETTINGS("role-subscriptions", void 0, "server-subscriptions-finish-setting-up"))
                                        },
                                        children: v.default.Messages.LETS_GO
                                    })]
                                });
                            case l.DismissibleContent.NAGBAR_NOTICE_POMELO:
                                return (0, a.jsxs)(A.default, {
                                    color: A.NoticeColors.WARNING,
                                    children: [(0, a.jsx)(A.NoticeCloseButton, {
                                        onClick: () => p(g.ContentDismissActionType.UNKNOWN),
                                        noticeType: P
                                    }), v.default.Messages.POMELO_ACTION_NEEDED.format(), (0, a.jsx)(A.PrimaryCTANoticeButton, {
                                        onClick: () => (0, C.default)(O.PomeloEntrypoints.NOTICE),
                                        noticeType: P,
                                        children: v.default.Messages.GET_STARTED
                                    })]
                                })
                        }
                    }
                })
            }
        },
        757557: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("697218"),
                i = n("489622"),
                r = n("579565"),
                o = n("994428"),
                u = n("782340"),
                d = n("229701"),
                c = e => {
                    var t;
                    let {
                        noticeType: n,
                        markAsDismissed: c,
                        partnerGame: E
                    } = e, f = (0, s.useStateFromStores)([l.default], () => l.default.getCurrentUser());
                    if (null == E) return null;
                    let _ = (0, r.getDrop)(E);
                    if (null == _) return null;
                    let C = "https://survey.alchemer.com/s3/7043057/Drops-NPS?user_id=".concat(null !== (t = null == f ? void 0 : f.id) && void 0 !== t ? t : "");
                    return (0, a.jsxs)(i.default, {
                        className: d.colorGuildBlue,
                        children: [u.default.Messages.DROPS_BANNER_ENDED_INCOMPLETE.format({
                            gameTitle: _.title
                        }), (0, a.jsx)(i.NoticeButtonAnchor, {
                            href: C,
                            target: "_blank",
                            onClick: () => {
                                c(o.ContentDismissActionType.PRIMARY)
                            },
                            children: u.default.Messages.DROPS_FEEDBACK_SURVEY
                        }), (0, a.jsx)(i.NoticeCloseButton, {
                            onClick: () => {
                                c(o.ContentDismissActionType.DISMISS)
                            },
                            noticeType: n
                        })]
                    })
                }
        },
        473503: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("79112"),
                r = n("945330"),
                o = n("376152"),
                u = n("243632"),
                d = n("49111"),
                c = n("994428"),
                E = n("782340"),
                f = n("905769");
            let _ = (e, t) => ({
                header: E.default.Messages.DROP_ENROLLMENT_CTA_TOOLTIP_HEADER.format({
                    gameName: e.title
                }),
                body: e.messages.enrollmentTooltip(t),
                imgSrc: e.assets.tooltipSrc,
                imgStyle: f.defaultDropImage
            });

            function C(e) {
                let {
                    markAsDismissed: t,
                    partnerGame: n
                } = e;
                (0, u.useTrackDropsImpression)(n, s.ImpressionTypes.POPOUT, s.ImpressionNames.DROPS_QUEST_ENROLLMENT);
                let C = (0, u.useDropsExperiment)(n);
                if (null == C) return null;
                let {
                    header: h,
                    body: I,
                    imgSrc: T,
                    imgStyle: S
                } = _(C.drop, C.config.streamLengthRequirement), N = () => {
                    t(c.ContentDismissActionType.DISMISS)
                };
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)("img", {
                        src: T,
                        alt: "",
                        className: S
                    }), (0, a.jsx)(l.Clickable, {
                        className: f.buttonClose,
                        "aria-label": E.default.Messages.CLOSE,
                        onClick: N,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            className: f.closeIcon
                        })
                    }), (0, a.jsx)(l.Heading, {
                        className: f.title,
                        variant: "heading-md/extrabold",
                        children: h
                    }), (0, a.jsx)(l.Text, {
                        variant: "text-sm/medium",
                        className: f.subTitle,
                        children: I
                    }), C.config.autoEnrollment ? (0, a.jsx)(l.Button, {
                        look: l.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            i.default.open(d.UserSettingsSections.INVENTORY), t(c.ContentDismissActionType.PRIMARY)
                        },
                        children: E.default.Messages.LEARN_MORE
                    }) : (0, a.jsx)(l.Button, {
                        innerClassName: f.button,
                        look: l.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            (0, o.enrollDropsUser)(C.drop.dropsQuestId), i.default.open(d.UserSettingsSections.INVENTORY), t(c.ContentDismissActionType.PRIMARY)
                        },
                        children: E.default.Messages.DROPS_ELIGIBILITY_ENROLLMENT_PRIMARY_CTA
                    }), (0, a.jsx)(l.Button, {
                        className: f.linkButtonContainer,
                        innerClassName: f.linkButton,
                        onClick: N,
                        look: l.Button.Looks.LINK,
                        fullWidth: !0,
                        color: l.Button.Colors.WHITE,
                        children: E.default.Messages.NOT_NOW
                    }), (0, a.jsx)("div", {
                        className: f.pointer
                    })]
                })
            }
        },
        994750: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("866227"),
                l = n.n(s),
                i = n("489622"),
                r = n("243632"),
                o = n("994428"),
                u = n("782340"),
                d = n("623158");
            let c = (e, t) => ({
                bodyText: u.default.Messages.DROPS_BANNER_NOTICE.format({
                    gameName: e.title,
                    endDate: l(e.endDate, "YYYY-MM-DD HH:mm").format("MMM Do"),
                    streamLengthRequirement: t
                }),
                articleUrl: e.articleUrl
            });
            var E = e => {
                let {
                    noticeType: t,
                    markAsDismissed: n,
                    partnerGame: s
                } = e, l = (0, r.useDropsExperiment)(s);
                if (null == l) return null;
                let {
                    bodyText: E,
                    articleUrl: f
                } = c(l.drop, l.config.streamLengthRequirement);
                return (0, a.jsxs)(i.default, {
                    className: d.colorGuildBlue,
                    children: [E, (0, a.jsx)(i.NoticeButtonAnchor, {
                        href: f,
                        target: "_blank",
                        onClick: () => {
                            n(o.ContentDismissActionType.PRIMARY)
                        },
                        children: u.default.Messages.LEARN_MORE
                    }), (0, a.jsx)(i.NoticeCloseButton, {
                        onClick: () => {
                            n(o.ContentDismissActionType.DISMISS)
                        },
                        noticeType: t
                    })]
                })
            }
        },
        257426: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("77078"),
                i = n("79112"),
                r = n("945330"),
                o = n("243632"),
                u = n("49111"),
                d = n("994428"),
                c = n("782340"),
                E = n("436815");
            let f = (e, t) => ({
                body: e.messages.completionTooltip(t),
                imgSrc: e.assets.tooltipSrc,
                imgStyle: E.defaultDropImage
            });

            function _(e) {
                let {
                    markAsDismissed: t,
                    partnerGame: n
                } = e;
                (0, o.useTrackDropsImpression)(n, s.ImpressionTypes.POPOUT, s.ImpressionNames.DROPS_QUEST_COMPLETION);
                let _ = (0, o.useDropsExperiment)(n);
                if (null == _) return null;
                let {
                    body: C,
                    imgSrc: h,
                    imgStyle: I
                } = f(_.drop, _.config.streamLengthRequirement), T = () => {
                    t(d.ContentDismissActionType.DISMISS)
                };
                return (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsx)("img", {
                        src: h,
                        alt: "",
                        className: I
                    }), (0, a.jsx)(l.Clickable, {
                        className: E.buttonClose,
                        "aria-label": c.default.Messages.CLOSE,
                        onClick: T,
                        children: (0, a.jsx)(r.default, {
                            width: 16,
                            height: 16,
                            className: E.closeIcon
                        })
                    }), (0, a.jsx)(l.Heading, {
                        className: E.title,
                        variant: "heading-md/extrabold",
                        children: c.default.Messages.DROPS_QUEST_COMPLETION_TOOLTIP_HEADER
                    }), (0, a.jsx)(l.Text, {
                        variant: "text-sm/medium",
                        className: E.subTitle,
                        children: C
                    }), (0, a.jsx)(l.Button, {
                        look: l.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            i.default.open(u.UserSettingsSections.INVENTORY), t(d.ContentDismissActionType.PRIMARY)
                        },
                        children: c.default.Messages.REDEEM
                    }), (0, a.jsx)(l.Button, {
                        className: E.linkButtonContainer,
                        innerClassName: E.linkButton,
                        onClick: T,
                        look: l.Button.Looks.LINK,
                        fullWidth: !0,
                        color: l.Button.Colors.WHITE,
                        children: c.default.Messages.NOT_NOW
                    }), (0, a.jsx)("div", {
                        className: E.pointer
                    })]
                })
            }
        },
        587233: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("913144"),
                s = n("316272"),
                l = n("200008");

            function i(e) {
                let {
                    channel: {
                        id: t
                    }
                } = e;
                (0, l.removeFavoriteChannel)(t)
            }
            class r extends s.default {
                _initialize() {
                    a.default.subscribe("CHANNEL_DELETE", i)
                }
                _terminate() {
                    a.default.unsubscribe("CHANNEL_DELETE", i)
                }
            }
            var o = new r
        },
        683716: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("77078"),
                i = n("913144"),
                r = n("316272"),
                o = n("10641"),
                u = n("525065"),
                d = n("305961"),
                c = n("957255"),
                E = n("867965"),
                f = n("49111"),
                _ = n("994428");
            let C = e => {
                var t;
                let n = d.default.getGuild(e),
                    a = !!(null == n ? void 0 : n.hasFeature(f.GuildFeatures.COMMUNITY)),
                    l = c.default.can(f.Permissions.MANAGE_CHANNELS, n),
                    i = (0, o.isDismissibleContentDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL),
                    r = null !== (t = u.default.getMemberCount(e)) && void 0 !== t ? t : 0;
                return a && l && !i && r >= 200
            };
            class h extends r.default {
                _initialize() {
                    i.default.subscribe("CHANNEL_SELECT", this.handleChannelSelect)
                }
                _terminate() {
                    i.default.unsubscribe("CHANNEL_SELECT", this.handleChannelSelect)
                }
                handleChannelSelect(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == t) return;
                    let i = C(t);
                    if (!i) return;
                    (0, E.trackForumUpsellModalViewed)(), (0, o.requestMarkDismissibleContentAsShown)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL);
                    let r = function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : _.ContentDismissActionType.DISMISS;
                        (0, o.markDismissibleContentAsDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL, {
                            dismissAction: e
                        })
                    };
                    (0, l.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("135430").then(n.bind(n, "135430"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            onClose: e => {
                                r(e), n.onClose()
                            },
                            guildId: t,
                            shouldUpsellCreation: !0
                        })
                    }, {
                        onCloseCallback: () => (0, o.markDismissibleContentAsDismissed)(s.DismissibleContent.FORUM_CHANNEL_UPSELL_MODAL, {
                            dismissAction: _.ContentDismissActionType.DISMISS
                        }),
                        onCloseRequest: f.NOOP_NULL
                    })
                }
            }
            var I = new h
        },
        390790: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("49111"),
                i = {
                    async fetch() {
                        try {
                            let e = await a.default.get({
                                url: l.Endpoints.FRIEND_SUGGESTIONS
                            });
                            s.default.dispatch({
                                type: "LOAD_FRIEND_SUGGESTIONS_SUCCESS",
                                suggestions: e.body
                            })
                        } catch (e) {
                            s.default.dispatch({
                                type: "LOAD_FRIEND_SUGGESTIONS_FAILURE"
                            })
                        }
                    },
                    ignore(e) {
                        a.default.delete(l.Endpoints.FRIEND_SUGGESTION(e))
                    }
                }
        },
        449004: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("222007");
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("766274"),
                o = n("697218"),
                u = n("390790");
            let d = {},
                c = 0,
                E = !1,
                f = !1;

            function _(e) {
                var t;
                return {
                    key: e.suggested_user.id,
                    name: null === (t = s.first(e.reasons)) || void 0 === t ? void 0 : t.name,
                    user: new r.default(e.suggested_user),
                    mutualFriendsCount: e.mutual_friends_count
                }
            }
            class C extends l.default.Store {
                initialize() {
                    this.waitFor(o.default)
                }
                getSuggestionCount() {
                    return c
                }
                getSuggestions() {
                    return Object.entries(d).map(e => {
                        let [t, n] = e;
                        return n
                    })
                }
                getSuggestion(e) {
                    return d[e]
                }
            }
            C.displayName = "FriendSuggestionStore";
            var h = new C(i.default, {
                CONNECTION_OPEN: function(e) {
                    d = {}, (c = e.friendSuggestionCount) > 0 && (f = !0, E || !f || (E = !0, f = !1, u.default.fetch()))
                },
                FRIEND_SUGGESTION_CREATE: function(e) {
                    let t = _(e.suggestion);
                    if (null != d[t.key]) return !1;
                    c++, d = {
                        ...d,
                        [t.key]: t
                    }
                },
                FRIEND_SUGGESTION_DELETE: function(e) {
                    c = Math.max(0, --c), delete d[e.suggestedUserId]
                },
                LOAD_FRIEND_SUGGESTIONS_SUCCESS: function(e) {
                    var t;
                    E = !1, t = e.suggestions, d = s.chain(t).map(_).keyBy(e => e.key).value(), c = s.keys(d).length
                },
                LOAD_FRIEND_SUGGESTIONS_FAILURE: function() {
                    E = !1, d = {}
                }
            })
        },
        167715: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("446674"),
                r = n("77078"),
                o = n("235660"),
                u = n("998564"),
                d = n("420145"),
                c = n("209969"),
                E = n("171644"),
                f = n("782340"),
                _ = n("505393");

            function C(e) {
                let {
                    platform: t
                } = e;
                return t === E.GameConsoleTypes.XBOX ? (0, a.jsx)(d.default, {
                    className: _.icon
                }) : t === E.GameConsoleTypes.PLAYSTATION ? (0, a.jsx)(u.default, {
                    className: _.icon
                }) : null
            }

            function h(e) {
                let {
                    voiceState: t,
                    awaitingRemoteSessionInfo: n
                } = e, s = null != n ? (0, c.coercePlatformTypeToConsoleType)(n.type) : null, u = (0, i.useStateFromStores)([o.default], () => {
                    var e, n;
                    return null === (e = o.default.getSessionById(null !== (n = null == t ? void 0 : t.sessionId) && void 0 !== n ? n : "")) || void 0 === e ? void 0 : e.clientInfo.os
                }), d = null != s ? s : u;
                if (null == d || !E.GAME_CONSOLE_SESSIONS.has(d)) return null;
                let h = null != n,
                    I = h ? d === E.GameConsoleTypes.XBOX ? f.default.Messages.XBOX_TRANSFERRING_ELLIPSIS : f.default.Messages.PLAYSTATION_TRANSFERRING_ELLIPSIS : d === E.GameConsoleTypes.XBOX ? f.default.Messages.XBOX_REMOTE_CONNECTED.format() : f.default.Messages.PLAYSTATION_REMOTE_CONNECTED.format();
                return (0, a.jsxs)("div", {
                    className: l(_.root, h ? _.connecting : _.connected),
                    children: [(0, a.jsx)(C, {
                        platform: d
                    }), (0, a.jsx)(r.Text, {
                        color: h ? "header-primary" : "always-white",
                        variant: "text-xs/medium",
                        children: I
                    })]
                })
            }
        },
        954732: function(e, t, n) {
            "use strict";
            n.r(t), n("222007");
            var a = n("446674"),
                s = n("913144");
            let l = [];
            class i extends a.default.Store {
                getInvites() {
                    return l
                }
            }
            i.displayName = "GameInviteStore", new i(s.default, {
                CONNECTION_OPEN_SUPPLEMENTAL: function(e) {
                    let {
                        gameInvites: t
                    } = e;
                    l = t
                },
                GAME_INVITE_CREATE: function(e) {
                    let {
                        gameInvite: t
                    } = e;
                    l = [...l, t]
                },
                GAME_INVITE_DELETE: function(e) {
                    let {
                        inviteId: t
                    } = e;
                    l = l.filter(e => e.invite_id !== t)
                }
            })
        },
        132943: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("222007");
            var a = n("913144"),
                s = n("823411"),
                l = n("605250"),
                i = n("546463");
            let r = {};

            function o(e) {
                let {
                    name: t,
                    hash: n,
                    missingData: a
                } = e;
                for (let e of (i.default.markGameReported(t), a))
                    if ("icon" === e) {
                        let e = r[t];
                        null != e && s.default.uploadIcon(t, n, e);
                        return
                    } else new(0, l.default)("GameStoreIconManager").log("Could not find missing data key: ".concat(e))
            }

            function u(e) {
                let {
                    gameName: t,
                    icon: n
                } = e;
                r[t] = n
            }
            var d = {
                initialize() {
                    a.default.subscribe("UNVERIFIED_GAME_UPDATE", o), a.default.subscribe("GAME_ICON_UPDATE", u)
                }
            }
        },
        319769: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("913144"),
                s = n("299285"),
                l = n("269180"),
                i = n("860285");

            function r(e) {
                let {
                    gameId: t
                } = e;
                ! function(e) {
                    let t;
                    let n = i.default.launchableGames[e],
                        r = s.default.getApplication(e);
                    (t = null != r ? l.default.isLaunchable(r) : l.default.isGameLaunchable(e)).then(t => {
                        t !== n && a.default.dispatch({
                            type: "GAME_LAUNCHABLE_UPDATE",
                            gameId: e,
                            isLaunchable: t
                        })
                    })
                }(t)
            }
            var o = {
                initialize() {
                    a.default.subscribe("CHECK_LAUNCHABLE_GAME", r)
                }
            }
        },
        506377: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("70614"),
                s = n("686470"),
                l = n("167726"),
                i = {
                    init() {
                        s.default.whenInitialized(() => {
                            null != l.default.testModeApplicationId && (0, a.authorizeAndSetTestModeApplication)(l.default.testModeApplicationId, l.default.testModeOriginURL)
                        })
                    }
                }
        },
        318915: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("70102");
            var a = n("913144"),
                s = n("190017"),
                l = n("271938"),
                i = n("602043");

            function r() {
                if (!(0, i.isSupportedPlatform)()) return;
                let e = l.default.getToken(),
                    t = l.default.getId();
                if (null == e) throw Error("missing user token");
                s.init(e, t)
            }

            function o() {
                s.destroy()
            }
            var u = {
                init() {
                    a.default.subscribe("CONNECTION_OPEN", r), a.default.subscribe("LOGOUT", o)
                }
            }
        },
        288207: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            }), n("222007");
            let a = new Set(["nvidia"]);

            function s(e) {
                for (let t of Object.keys(e)) {
                    let n = e[t];
                    if (null != n && null == n.error && a.has(t)) return !0
                }
                return !1
            }
        },
        439792: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("222007");
            var a = n("570277"),
                s = n.n(a),
                l = n("773336");
            let i = {
                [l.PlatformTypes.WINDOWS]: {
                    nvidia: "<=537.58.0"
                }
            };

            function r(e) {
                let t = i[(0, l.getPlatform)()];
                if (null == t) return !1;
                for (let n of Object.keys(e)) {
                    let a = e[n],
                        l = t[n];
                    if (null == a || null == l || null != a.error) continue;
                    let i = function(e) {
                        var t, n;
                        return "".concat(null !== (t = e.major) && void 0 !== t ? t : 0, ".").concat(null !== (n = e.minor) && void 0 !== n ? n : 0, ".0")
                    }(a);
                    if (!s.satisfies(i, l)) return !0
                }
                return !1
            }
        },
        709496: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("222007");
            var a = n("570277"),
                s = n.n(a),
                l = n("773336");
            let i = {
                [l.PlatformTypes.WINDOWS]: {
                    nvidia: ">=397.93.0"
                }
            };

            function r(e) {
                let t = i[(0, l.getPlatform)()];
                if (null == t) return !1;
                for (let n of Object.keys(e)) {
                    let a = e[n],
                        l = t[n];
                    if (null == a || null == l || null != a.error) continue;
                    let i = function(e) {
                        var t, n;
                        return "".concat(null !== (t = e.major) && void 0 !== t ? t : 0, ".").concat(null !== (n = e.minor) && void 0 !== n ? n : 0, ".0")
                    }(a);
                    if (!s.satisfies(i, l)) return !0
                }
                return !1
            }
        },
        767960: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("773336"),
                i = n("50885"),
                r = n("288207"),
                o = n("439792"),
                u = n("709496");
            let d = !1,
                c = !0,
                E = !1;
            class f extends a.default.Store {
                initialize() {
                    !(!l.isPlatformEmbedded || __OVERLAY__) && i.default.getGPUDriverVersions().then(e => {
                        d = (0, u.default)(e), c = (0, r.default)(e), E = (0, o.default)(e), this.emitChange()
                    })
                }
                get GPUDriversOutdated() {
                    return d
                }
                get canUseHardwareAcceleration() {
                    return c
                }
                get problematicGPUDriver() {
                    return E
                }
                getState() {
                    return {
                        GPUDriversOutdated: d,
                        canUseHardwareAcceleration: c,
                        problematicGPUDriver: E
                    }
                }
            }
            f.displayName = "StreamingCapabilitiesStore";
            var _ = new f(s.default, {
                OVERLAY_INITIALIZE: function(e) {
                    let {
                        streamingCapabilitiesStoreState: t
                    } = e;
                    d = t.GPUDriversOutdated, c = t.canUseHardwareAcceleration
                }
            })
        },
        712258: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("990766"),
                s = n("373469"),
                l = n("42203"),
                i = n("305961"),
                r = n("42887"),
                o = n("957255"),
                u = n("568307"),
                d = n("18494"),
                c = n("703370"),
                E = n("223913"),
                f = n("479788"),
                _ = n("375202");

            function C() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                if (!(0, f.default)(r.default) || null != s.default.getCurrentUserActiveStream()) return !1;
                let t = (0, _.default)(u.default, c.default);
                if (null == t || t.isLauncher && !e) return !1;
                let n = d.default.getVoiceChannelId(),
                    C = l.default.getChannel(n);
                if (null == C) return !1;
                let h = C.getGuildId();
                return !!(0, E.canStreamInChannel)(C, i.default, o.default, !1) && ((0, a.startStream)(h, C.id, {
                    pid: t.pid
                }), !0)
            }
        },
        145067: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                showGuildHeaderPopout: function() {
                    return i
                },
                useGuildHeaderPopoutStore: function() {
                    return r
                }
            });
            var a = n("308503");
            let s = Object.freeze({
                    isPopoutOpen: !1
                }),
                l = (0, a.default)(e => s),
                i = e => {
                    l.setState(() => ({
                        isPopoutOpen: e
                    }))
                },
                r = l
        },
        963103: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("316693"),
                s = n("446674"),
                l = n("923959"),
                i = n("957255"),
                r = n("49111");

            function o(e) {
                let t = (0, s.useStateFromStores)([l.default], () => {
                    var t;
                    return null !== (t = l.default.getChannels(e)[l.GUILD_SELECTABLE_CHANNELS_KEY]) && void 0 !== t ? t : []
                }, [e]);
                if (0 === t.length) return 0;
                let n = t.filter(e => {
                    let {
                        channel: t
                    } = e;
                    return i.default.can(a.default.combine(r.Permissions.SEND_MESSAGES, r.Permissions.VIEW_CHANNEL), t)
                });
                return n.length
            }
        },
        381065: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("466818"),
                o = n("645266"),
                u = n("305961"),
                d = n("18494"),
                c = n("162771"),
                E = n("476263"),
                f = n("45029"),
                _ = n("489622"),
                C = n("599110"),
                h = n("398654"),
                I = n("712125"),
                T = n("311161"),
                S = n("49111"),
                N = n("724210"),
                A = n("782340"),
                m = n("17629");

            function p(e) {
                var t, p;
                let {
                    onDismiss: g
                } = e, R = (0, l.useStateFromStores)([c.default], () => c.default.getGuildId()), O = (0, l.useStateFromStores)([d.default], () => null != R ? d.default.getChannelId(R) : null, [R]), L = null != R ? R : null, v = (0, l.useStateFromStores)([u.default], () => null != L ? u.default.getGuild(L) : null, [L]), {
                    shouldShowIncidentActions: M,
                    incidentData: P,
                    isUnderLockdown: D
                } = (0, h.useGuildIncidentsState)(L), y = (0, r.useCanAccessMemberSafetyPage)(null !== (t = null == v ? void 0 : v.id) && void 0 !== t ? t : ""), x = s.useCallback(() => null != v && (0, o.goToMemberSafetyDashboard)(v.id), [v]);
                if (null == v || null == P || !M) return null;
                let U = e => {
                        if (e && y && O !== N.StaticChannelRoute.MEMBER_SAFETY && x()) {
                            C.default.track(S.AnalyticEvents.APP_NOTICE_PRIMARY_CTA_OPENED, {
                                notice_type: S.NoticeTypes.GUILD_RAID_NOTIFICATION,
                                guild_id: v.id
                            });
                            return
                        }(0, i.openModalLazy)(async () => {
                            let e = {
                                    source: I.GuildIncidentActionSources.NAGBAR,
                                    alertType: (0, T.getIncidentAlertType)(P)
                                },
                                {
                                    default: t
                                } = await n.el("186638").then(n.bind(n, "186638"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guildId: v.id,
                                analyticsData: e
                            })
                        })
                    },
                    b = (0, a.jsx)(E.default, {
                        className: m.guildIcon,
                        guild: v,
                        size: E.default.Sizes.MINI
                    }),
                    G = (0, T.getSecurityActionDetailsString)(P, v.name),
                    j = null !== (p = P.dmsDisabledUntil) && void 0 !== p ? p : P.invitesDisabledUntil;
                if (null != j && D) return (0, a.jsxs)(_.default, {
                    className: m.notice,
                    color: _.NoticeColors.NEUTRAL,
                    children: [(0, a.jsx)(_.NoticeCloseButton, {
                        onClick: g,
                        noticeType: S.NoticeTypes.GUILD_RAID_NOTIFICATION
                    }), b, G, (0, a.jsx)(_.NoticeButton, {
                        className: m.actionButton,
                        onClick: () => U(!1),
                        children: (0, a.jsxs)("div", {
                            className: m.actionButtonInner,
                            children: [(0, a.jsx)(f.default, {
                                width: 16,
                                height: 16
                            }), (0, a.jsx)("span", {
                                children: A.default.Messages.GUILD_ANTIRAID_LOCKDOWN_NAGBAR_ACTION
                            })]
                        })
                    })]
                });
                let w = (0, T.hasDetectedRaid)(P) ? A.default.Messages.GUILD_ANTIRAID_NAGBAR_RAID_MESSAGE_2_NEW.format({
                        guildName: v.name
                    }) : (0, T.hasDetectedDMRaid)(P) ? A.default.Messages.GUILD_ANTIRAID_NAGBAR_DM_RAID_MESSAGE_2_NEW.format({
                        guildName: v.name
                    }) : A.default.Messages.GUILD_ANTIRAID_NAGBAR_MESSAGE_2_NEW.format({
                        guildName: v.name
                    }),
                    k = y && O === N.StaticChannelRoute.MEMBER_SAFETY;
                return (0, a.jsxs)(_.default, {
                    className: m.notice,
                    color: _.NoticeColors.WARNING,
                    children: [(0, a.jsx)(_.NoticeCloseButton, {
                        onClick: g,
                        noticeType: S.NoticeTypes.GUILD_RAID_NOTIFICATION
                    }), b, w, !k && (0, a.jsx)(_.NoticeButton, {
                        className: m.actionButton,
                        onClick: () => U(!0),
                        children: (0, a.jsx)("div", {
                            className: m.actionButtonInner,
                            children: (0, a.jsx)("span", {
                                children: A.default.Messages.GUILD_ANTIRAID_NAGBAR_ACTION_VIEW
                            })
                        })
                    })]
                })
            }
        },
        840968: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("489622"),
                l = n("956967"),
                i = n("782340"),
                r = n("185401");

            function o(e) {
                let {
                    guildId: t,
                    analyticsLocations: n,
                    analyticsLocation: o
                } = e, [u, d] = (0, l.useOpenFixQuarantinedProfileModal)({
                    guildId: t,
                    analyticsLocations: n,
                    analyticsLocation: o,
                    openWithoutBackstack: !0
                }), c = d ? i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE : i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE_NO_PERMS, E = d ? i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_USER_PROFILE_CTA : i.default.Messages.GUILD_AUTOMOD_NAGBAR_QUARANTINED_ACCOUNT_USERNAME_CTA;
                return (0, a.jsxs)(s.default, {
                    color: s.NoticeColors.CUSTOM,
                    className: r.quarantineNotice,
                    children: [c, (0, a.jsx)(s.NoticeButton, {
                        onClick: u,
                        children: E
                    })]
                })
            }
        },
        668214: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                AutomodCustomBlockMessageUpsellTooltip: function() {
                    return S
                },
                GuildMentionRaidLimitUpsellTooltip: function() {
                    return N
                },
                GuildAntiRaidUpsellTooltip: function() {
                    return A
                },
                AutomodUserProfileUpsellTooltip: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("733724"),
                i = n("77078"),
                r = n("413476"),
                o = n("592407"),
                u = n("5667"),
                d = n("561359"),
                c = n("599110"),
                E = n("523096"),
                f = n("49111"),
                _ = n("994428"),
                C = n("782340"),
                h = n("325223");

            function I() {
                let e = (0, E.getAutomodAvatarURL)(!0);
                return (0, a.jsx)("div", {
                    children: (0, a.jsx)(i.Avatar, {
                        src: e,
                        size: i.AvatarSizes.SIZE_40,
                        "aria-label": C.default.Messages.GUILD_AUTOMOD_USERNAME
                    })
                })
            }

            function T(e) {
                let {
                    guildId: t,
                    onDismissed: n,
                    contentHeader: r,
                    contentBody: E,
                    acceptButtonText: T,
                    dismissButtonText: S,
                    imageHeader: N,
                    analyticsTooltipViewedType: A,
                    onAccept: m,
                    onInitialized: p
                } = e, g = null != m ? m : () => {
                    n(_.ContentDismissActionType.UNKNOWN), o.default.open(t, f.GuildSettingsSections.GUILD_AUTOMOD), o.default.setSection(f.GuildSettingsSections.GUILD_AUTOMOD)
                };
                return s.useEffect(() => {
                    null != p && p()
                }, [p]), (0, a.jsx)(u.default, {
                    className: h.message,
                    header: r,
                    content: E,
                    onComponentMount: () => {
                        null != A && c.default.track(f.AnalyticEvents.TOOLTIP_VIEWED, {
                            type: A,
                            location: {
                                page: f.AnalyticsPages.GUILD_CHANNEL
                            }
                        })
                    },
                    asset: (0, a.jsx)("div", {
                        className: h.container,
                        children: (0, a.jsxs)("div", {
                            className: h.card,
                            children: [(0, a.jsx)(I, {}), (0, a.jsxs)("div", {
                                className: h.content,
                                children: [(0, a.jsxs)("div", {
                                    className: h.name,
                                    children: [(0, a.jsx)(i.Text, {
                                        variant: "text-sm/semibold",
                                        color: "text-brand",
                                        className: h.nameText,
                                        children: null != N ? N : C.default.Messages.GUILD_AUTOMOD_DEFAULT_UPSELL_ASSET_HEADER
                                    }), (0, a.jsx)(d.default, {
                                        width: 16,
                                        height: 16,
                                        color: l.default.BLUE_345,
                                        className: h.shield
                                    })]
                                }), (0, a.jsx)("div", {
                                    className: h.spoiler
                                })]
                            })]
                        })
                    }),
                    buttonCTA: null != T ? T : C.default.Messages.GUILD_AUTOMOD_DEFAULT_UPSELL_CTA,
                    onClick: g,
                    secondaryButtonCTA: null != S ? S : C.default.Messages.GUILD_AUTOMOD_DEFAULT_UPSELL_DISMISSAL,
                    markAsDismissed: n
                })
            }

            function S(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(T, {
                    guildId: t,
                    onDismissed: n,
                    contentHeader: C.default.Messages.GUILD_AUTOMOD_CUSTOM_BLOCK_MESSAGE_UPSELL_HEADER,
                    contentBody: C.default.Messages.GUILD_AUTOMOD_CUSTOM_BLOCK_MESSAGE_UPSELL_CONTENT.format(),
                    analyticsTooltipViewedType: "guild_automod_custom_block_message"
                })
            }

            function N(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(T, {
                    guildId: t,
                    onDismissed: n,
                    imageHeader: C.default.Messages.GUILD_MENTION_RAID_LIMIT_UPSELL_ASSET_HEADER,
                    contentHeader: C.default.Messages.GUILD_MENTION_RAID_LIMIT_UPSELL_HEADER,
                    contentBody: C.default.Messages.GUILD_MENTION_RAID_LIMIT_UPSELL_CONTENT,
                    analyticsTooltipViewedType: "guild_mention_raid_limit",
                    onAccept: () => {
                        n(_.ContentDismissActionType.UNKNOWN), o.default.open(t, f.GuildSettingsSections.GUILD_AUTOMOD), o.default.setSection(f.GuildSettingsSections.GUILD_AUTOMOD, f.GuildSettingsSubsections.AUTOMOD_MENTION_SPAM)
                    }
                })
            }

            function A(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(T, {
                    guildId: t,
                    onDismissed: n,
                    imageHeader: C.default.Messages.GUILD_ANTIRAID_UPSELL_ASSET_HEADER,
                    contentHeader: C.default.Messages.GUILD_ANTIRAID_UPSELL_HEADER,
                    contentBody: C.default.Messages.GUILD_ANTIRAID_UPSELL_CONTENT.format(),
                    analyticsTooltipViewedType: "guild_anti_raid_upsell",
                    dismissButtonText: C.default.Messages.GUILD_ANTIRAID_UPSELL_DISMISSAL,
                    onAccept: () => {
                        n(_.ContentDismissActionType.UNKNOWN), o.default.open(t, f.GuildSettingsSections.MODERATION)
                    },
                    onInitialized: () => {
                        r.RaidAlertExperiment.trackExposure({
                            guildId: t,
                            location: "4de95f_1"
                        })
                    }
                })
            }

            function m(e) {
                let {
                    guildId: t,
                    onDismissed: n
                } = e;
                return (0, a.jsx)(T, {
                    guildId: t,
                    onDismissed: n,
                    contentHeader: C.default.Messages.AUTOMOD_USER_PROFILE_UPSELL_HEADER,
                    contentBody: C.default.Messages.AUTOMOD_USER_PROFILE_UPSELL_CONTENT.format(),
                    analyticsTooltipViewedType: "guild_automod_user_profile"
                })
            }
        },
        48821: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("363025"),
                r = n("963662"),
                o = n("592407"),
                u = n("735201"),
                d = n("427459"),
                c = n("49111"),
                E = n("782340"),
                f = n("557659"),
                _ = e => {
                    let {
                        guild: t
                    } = e, n = t.id, _ = (0, s.useStateFromStores)([u.default], () => u.default.getAppliedGuildBoostsForGuild(t.id));
                    return null == _ || 0 >= (0, d.appliedGuildBoostsRequiredForPerks)(_, n) ? null : (0, a.jsx)(r.default, {
                        guild: t,
                        onDismissed: () => {
                            (0, i.hidePremiumGuildGracePeriodNotice)(n)
                        },
                        onClick: () => {
                            o.default.open(n, c.GuildSettingsSections.GUILD_PREMIUM)
                        },
                        message: E.default.Messages.PREMIUM_GUILD_GRACE_PERIOD_NOTICE,
                        trackingSource: c.ChannelNoticeCtaSources.GRACE_PERIOD_NOTICE,
                        type: c.ChannelNoticeTypes.GUILD_BOOSTING_GRACE_PERIOD,
                        image: f,
                        cta: E.default.Messages.PREMIUM_GUILD_GRACE_PERIOD_NOTICE_BUTTON,
                        ctaColor: l.ButtonColors.PRIMARY
                    })
                }
        },
        388437: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("812204"),
                l = n("685665"),
                i = n("963662"),
                r = n("379532"),
                o = n("427459"),
                u = n("49111"),
                d = n("994428"),
                c = n("944305"),
                E = n("782340"),
                f = n("65016");

            function _(e) {
                let {
                    guild: t,
                    markAsDismissed: n
                } = e, _ = (0, o.getNumberOfAppliedBoostsNeededForTier)(t, u.BoostedGuildTiers.TIER_2), {
                    analyticsLocations: C
                } = (0, l.default)(s.default.GUILD_BANNER_NOTICE);
                return (0, a.jsx)(i.default, {
                    guild: t,
                    onDismissed: () => n(d.ContentDismissActionType.UNKNOWN),
                    cta: E.default.Messages.GUILD_BANNER_NOTICE_CTA,
                    message: E.default.Messages.GUILD_BANNER_NOTICE.format({
                        boostsNeeded: _
                    }),
                    type: u.ChannelNoticeTypes.GUILD_BANNER,
                    image: f,
                    onClick: () => (0, r.default)({
                        analyticsLocations: C,
                        analyticsSourceLocation: {
                            section: u.AnalyticsSections.CHANNEL_NOTICE,
                            object: u.AnalyticsObjects.SERVER_BANNER_TOOLTIP
                        },
                        guild: t,
                        perks: (0, c.guildBannerUpsellPerks)()
                    }),
                    imageMarginTop: 15,
                    imageMarginX: 22
                })
            }
        },
        667048: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("963662"),
                r = n("95039"),
                o = n("525065"),
                u = n("49111"),
                d = n("994428"),
                c = n("782340"),
                E = n("367574");
            class f extends s.PureComponent {
                render() {
                    let {
                        guild: e,
                        memberCount: t,
                        markAsDismissed: n
                    } = this.props;
                    return (0, a.jsx)(i.default, {
                        guild: e,
                        onDismissed: () => n(d.ContentDismissActionType.UNKNOWN),
                        onClick: this.handleButtonClick,
                        message: null == t || t < 30 ? c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE_SMALL_GUILD : c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE,
                        cta: c.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_NOTICE_BUTTON,
                        trackingSource: u.ChannelNoticeCtaSources.GUILD_SUBSCRIPTION_NOTICE,
                        type: u.ChannelNoticeTypes.GUILD_BOOSTING,
                        image: E,
                        imageMarginX: 26
                    })
                }
                constructor(...e) {
                    super(...e), this.handleButtonClick = () => {
                        let {
                            guild: e
                        } = this.props;
                        (0, r.openGuildBoostingMarketingModal)({
                            guildId: e.id,
                            location: {
                                section: u.AnalyticsSections.CHANNEL_NOTICE,
                                object: u.AnalyticsObjects.SERVER_STATUS_CTA
                            }
                        })
                    }
                }
            }
            var _ = l.default.connectStores([o.default], e => {
                let {
                    guild: t
                } = e;
                return {
                    memberCount: o.default.getMemberCount(t.id)
                }
            })(f)
        },
        580362: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isContentDismissed: function() {
                    return _
                },
                useIsContentDismissed: function() {
                    return C
                },
                markContentAsDismissed: function() {
                    return h
                },
                useIsGuildDismissibleContentChannelNoticeShown: function() {
                    return I
                }
            });
            var a = n("446674"),
                s = n("151426"),
                l = n("343885"),
                i = n("570319"),
                r = n("872173"),
                o = n("374363"),
                u = n("599110"),
                d = n("674268"),
                c = n("49111"),
                E = n("994428"),
                f = n("397336");

            function _(e, t) {
                let n = o.default.getDismissedGuildContent(t);
                return null != n && (0, d.hasBit)(n, e)
            }

            function C(e, t) {
                return (0, a.useStateFromStores)([o.default], () => _(e, t))
            }

            function h(e, t, n, a) {
                (0, r.updateUserGuildSettings)(t, n => {
                    if (_(e, t)) return !1;
                    n.dismissedGuildContent = (0, d.addBit)(n.dismissedGuildContent, e)
                }, f.UserSettingsDelay.INFREQUENT_USER_ACTION), n && u.default.track(c.AnalyticEvents.DISMISSIBLE_CONTENT_DISMISSED, {
                    type: s.DismissibleGuildContent[e],
                    guild_id: t,
                    action: null != a ? a : E.ContentDismissActionType.UNKNOWN
                })
            }

            function I(e) {
                let t = (0, i.default)(e, "guild_dismissible_content_utils");
                return l.default.useExperiment({
                    guildId: e,
                    location: "guild_dismissible_content_utils"
                }), !!t && !_(s.DismissibleGuildContent.CLYDE_GUILD_NOTICE_NUX, e) || !1
            }
        },
        754707: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("77078"),
                r = n("402309"),
                o = n("599110"),
                u = n("991170"),
                d = n("580362"),
                c = n("49111"),
                E = n("994428"),
                f = n("695838"),
                _ = n("69741");

            function C(e) {
                var t;
                let C = (0, r.useCanCurrentUserViewDisableUnsafeGuildSettingsNotice)(e),
                    h = _.MODERATOR_PERMISSIONS.some(t => (null == e ? void 0 : e.id) !== f.FAVORITES_RAW_GUILD_ID && u.default.canEveryone(t, e)),
                    I = (null == e ? void 0 : e.defaultMessageNotifications) === c.UserNotificationSettings.ALL_MESSAGES,
                    T = (0, d.useIsContentDismissed)(l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : ""),
                    S = C && (h || I) && !T,
                    N = s.useCallback(() => {
                        var t;
                        (0, d.markContentAsDismissed)(l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE, null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "", !0, E.ContentDismissActionType.DISMISS)
                    }, [e]),
                    A = s.useRef(!1);
                s.useEffect(() => {
                    if (S && !A.current) {
                        var t;
                        (0, i.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await n.el("675454").then(n.bind(n, "675454"));
                            return n => (0, a.jsx)(t, {
                                guild: e,
                                canEveryoneModerate: h,
                                isDefaultNotificationsAllMessages: I,
                                ...n
                            })
                        }, {
                            onCloseCallback: N
                        }), o.default.track(c.AnalyticEvents.DISMISSIBLE_CONTENT_SHOWN, {
                            type: l.DismissibleGuildContent[l.DismissibleGuildContent.DISABLE_UNSAFE_COMMUNITY_PERMISSIONS_NOTICE],
                            guild_id: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : ""
                        }), A.current = !0
                    }
                }, [h, e, N, I, S])
            }
        },
        720102: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("446674"),
                s = n("913144"),
                l = n("162771"),
                i = n("599110"),
                r = n("49111");
            let o = {};

            function u(e) {
                var t;
                if (null == e || e === r.ME || e === r.FAVORITES) return !1;
                let n = null !== (t = o[e]) && void 0 !== t ? t : 0;
                if (Date.now() <= n + 288e5) return !1;
                o[e] = Date.now(), i.default.track(r.AnalyticEvents.HIGHLIGHTS_TEST_LOADED, {
                    guild_id: e
                })
            }
            class d extends a.default.PersistedStore {
                initialize(e) {
                    this.waitFor(l.default), null != e && (o = e.lastHighlightsLoadMillis)
                }
                getState() {
                    return {
                        lastHighlightsLoadMillis: o
                    }
                }
            }
            d.displayName = "HighlightsTestStore", d.persistKey = "HighlightsTestStore", new d(s.default, {
                CONNECTION_OPEN: function() {
                    let e = l.default.getGuildId();
                    return u(e)
                },
                CHANNEL_SELECT: function(e) {
                    let {
                        guildId: t
                    } = e;
                    return u(t)
                }
            })
        },
        444752: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("476263"),
                i = n("782340"),
                r = n("120825"),
                o = n("270111"),
                u = e => {
                    let {
                        headerId: t,
                        reapplyText: n,
                        onReapply: u,
                        confirmText: d,
                        onConfirm: c,
                        rejectionReason: E = null,
                        guild: f = null
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: r.confirmation,
                        children: [(0, a.jsxs)("div", {
                            className: r.confirmationContent,
                            children: [null !== f ? (0, a.jsx)(l.default, {
                                size: l.default.Sizes.LARGER,
                                guild: f,
                                className: r.guildIcon
                            }) : (0, a.jsx)("img", {
                                alt: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_ICON,
                                src: o,
                                className: r.verificationStateIcon
                            }), (0, a.jsx)(s.Heading, {
                                id: t,
                                variant: "heading-xl/semibold",
                                className: r.header,
                                children: (null == f ? void 0 : f.name) != null ? i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE_WITH_GUILD_NAME.format({
                                    guildName: f.name
                                }) : i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_TITLE
                            }), null != E && "" !== E ? (0, a.jsx)(a.Fragment, {
                                children: (0, a.jsxs)(s.Text, {
                                    variant: "text-sm/normal",
                                    children: [(0, a.jsx)("span", {
                                        className: r.rejectionReasonLabel,
                                        children: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_REJECTED_REASON
                                    }), (0, a.jsx)("span", {
                                        className: r.rejectionReason,
                                        children: E
                                    })]
                                })
                            }) : null]
                        }), (0, a.jsxs)("div", {
                            className: r.confirmationButtonRow,
                            children: [(0, a.jsx)(s.Button, {
                                onClick: u,
                                color: s.Button.Colors.PRIMARY,
                                className: r.confirmationButton,
                                children: n
                            }), (0, a.jsx)(s.Button, {
                                onClick: c,
                                color: s.Button.Colors.PRIMARY,
                                className: r.confirmationButton,
                                children: d
                            })]
                        })]
                    })
                }
        },
        437942: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("476263"),
                i = n("782340"),
                r = n("120825"),
                o = n("158463"),
                u = e => {
                    let {
                        onCancel: t,
                        onLeave: n,
                        guild: u = null
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: r.confirmation,
                        children: [(0, a.jsxs)("div", {
                            className: r.confirmationContent,
                            children: [null !== u ? (0, a.jsx)(l.default, {
                                size: l.default.Sizes.LARGER,
                                guild: u,
                                className: r.guildIcon
                            }) : (0, a.jsx)("img", {
                                alt: i.default.Messages.MEMBER_VERIFICATION_PENDING_APPLICATION_ICON,
                                src: o,
                                className: r.verificationStateIcon
                            }), (0, a.jsx)(s.Heading, {
                                variant: "heading-xl/semibold",
                                className: r.header,
                                children: (null == u ? void 0 : u.name) != null ? i.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE_WITH_GUILD_NAME.format({
                                    guildName: u.name
                                }) : i.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE
                            }), (0, a.jsx)(s.Text, {
                                variant: "text-sm/normal",
                                color: "header-secondary",
                                children: i.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_SUBTITLE
                            })]
                        }), (0, a.jsxs)("div", {
                            className: r.confirmationButtonColumn,
                            children: [(0, a.jsx)(s.Button, {
                                onClick: t,
                                look: s.Button.Looks.LINK,
                                color: s.Button.Colors.LINK,
                                size: s.Button.Sizes.SMALL,
                                children: i.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION
                            }), (0, a.jsx)(s.Button, {
                                onClick: n,
                                look: s.Button.Looks.LINK,
                                color: s.Button.Colors.LINK,
                                size: s.Button.Sizes.SMALL,
                                children: i.default.Messages.MEMBER_VERIFICATION_PENDING_APPLICATION_MODAL_WITHDRAW_AND_LEAVE
                            })]
                        })]
                    })
                }
        },
        546102: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("393414"),
                o = n("305961"),
                u = n("554054"),
                d = n("831588"),
                c = n("315102"),
                E = n("549103"),
                f = n("50926"),
                _ = n("526253"),
                C = n("567054"),
                h = n("982527"),
                I = n("444752"),
                T = n("437942"),
                S = n("267235"),
                N = n("49111"),
                A = n("289382"),
                m = n("782340"),
                p = n("936791"),
                g = e => {
                    var t;
                    let {
                        guildId: n,
                        inviteCode: g
                    } = e, [R, O] = s.useState(A.WaveStates.INITIAL), L = (0, l.useStateFromStores)([_.default], () => _.default.get(n)), v = (0, l.useStateFromStores)([h.default], () => h.default.getRequest(n)), M = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(n)), {
                        hasFetchedRequestToJoinGuilds: P,
                        guildPreviewDisabled: D
                    } = (0, l.useStateFromStoresObject)([h.default], () => ({
                        hasFetchedRequestToJoinGuilds: h.default.hasFetchedRequestToJoinGuilds,
                        guildPreviewDisabled: h.default.getJoinRequestGuild(n)
                    }));
                    s.useEffect(() => {
                        null != M && (0, r.transitionTo)(N.Routes.CHANNEL(n))
                    }, [M, n]), s.useEffect(() => {
                        !P && E.default.fetchRequestToJoinGuilds()
                    }, [P]);
                    let y = s.useCallback(e => {
                            O(t => Math.max(t, e))
                        }, []),
                        x = (e, t) => () => {
                            (0, i.openModal)(n => (0, a.jsx)(i.ConfirmModal, {
                                header: m.default.Messages.MEMBER_VERIFICATION_CONFIRM_LEAVE_TITLE,
                                cancelText: m.default.Messages.NEVERMIND,
                                onConfirm: t,
                                confirmText: m.default.Messages.YES_TEXT,
                                confirmButtonColor: i.Button.Colors.RED,
                                ...n,
                                children: (0, a.jsx)(i.Text, {
                                    variant: "text-sm/normal",
                                    color: "header-secondary",
                                    children: e
                                })
                            }))
                        },
                        U = async e => {
                            await f.default.submitVerificationForm(n, e)
                        }, b = () => {
                            E.default.resetGuildJoinRequest(n)
                        }, G = x(m.default.Messages.LEAVE_SERVER_BODY.format({
                            name: null == M ? void 0 : M.toString()
                        }), () => {
                            O(Math.max(R, A.WaveStates.FILLING)), E.default.removeGuildJoinRequest(n), (0, r.transitionTo)(N.Routes.ME)
                        }), j = (null == L ? void 0 : null === (t = L.guild) || void 0 === t ? void 0 : t.splash) != null ? c.default.getGuildSplashURL({
                            id: L.guild.id,
                            splash: L.guild.splash
                        }) : (0, d.getArtForPath)();
                    return (0, a.jsx)("div", {
                        className: p.page,
                        children: (0, a.jsxs)(u.default, {
                            embedded: !0,
                            splash: j,
                            waveState: R,
                            showLogo: !1,
                            updateWaveState: y,
                            children: [(0, a.jsx)("div", {
                                className: p.dragRegion
                            }), (0, a.jsx)("div", {
                                className: p.contentWrapper,
                                children: (() => {
                                    switch (null == v ? void 0 : v.applicationStatus) {
                                        case C.GuildJoinRequestApplicationStatuses.SUBMITTED:
                                            return (0, a.jsx)(T.default, {
                                                onCancel: x(m.default.Messages.MEMBER_VERIFICATION_CANCEL_PENDING_APPLICATION_MODAL_TITLE, b),
                                                onLeave: G,
                                                guild: D
                                            });
                                        case C.GuildJoinRequestApplicationStatuses.REJECTED:
                                            return (0, a.jsx)(I.default, {
                                                reapplyText: m.default.Messages.MEMBER_VERIFICATION_APPLICATION_REAPPLY,
                                                onReapply: b,
                                                confirmText: m.default.Messages.LEAVE_SERVER,
                                                onConfirm: G,
                                                rejectionReason: null == v ? void 0 : v.rejectionReason,
                                                guild: D
                                            });
                                        default:
                                            return (0, a.jsx)(S.default, {
                                                guildId: n,
                                                inviteCode: g,
                                                onComplete: U
                                            })
                                    }
                                })()
                            })]
                        })
                    })
                }
        },
        747554: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            }), n("424973"), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("803182"),
                r = n("90915"),
                o = n("446674"),
                u = n("77078"),
                d = n("305961"),
                c = n("162771"),
                E = n("549103"),
                f = n("233322"),
                _ = n("567054"),
                C = n("982527"),
                h = n("49111"),
                I = n("724210"),
                T = n("782340"),
                S = n("884938"),
                N = n("105029"),
                A = () => {
                    var e, t;
                    let s = (0, o.useStateFromStores)([c.default], () => c.default.getGuildId(), []),
                        A = (0, o.useStateFromStores)([d.default], () => d.default.getGuild(s), [s]),
                        m = (0, o.useStateFromStores)([C.default], () => null != s ? C.default.getRequest(s) : null, [s]),
                        p = (0, r.useLocation)(),
                        g = (null === (e = (0, i.matchPath)(p.pathname, h.Routes.CHANNEL(null == A ? void 0 : A.id, I.StaticChannelRoute.GUILD_ONBOARDING))) || void 0 === e ? void 0 : e.isExact) === !0;
                    if (null == A || !A.hasVerificationGate() || g) return null;
                    let R = null !== (t = null == m ? void 0 : m.applicationStatus) && void 0 !== t ? t : _.GuildJoinRequestApplicationStatuses.STARTED,
                        O = null,
                        L = null,
                        v = null,
                        M = [S.notice, N.notice];
                    switch (R) {
                        case _.GuildJoinRequestApplicationStatuses.SUBMITTED:
                            O = T.default.Messages.MEMBER_VERIFICATION_APPLICATION_CONFIRMATION_TITLE, L = T.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION, v = () => {
                                (0, u.openModal)(e => (0, a.jsx)(u.ConfirmModal, {
                                    header: T.default.Messages.MODIFY_FOLLOWED_NEWS_HEADER,
                                    confirmText: T.default.Messages.CONFIRM,
                                    cancelText: T.default.Messages.CANCEL,
                                    onConfirm: () => E.default.removeGuildJoinRequest(A.id),
                                    confirmButtonColor: u.Button.Colors.BRAND,
                                    ...e,
                                    children: (0, a.jsx)(u.Text, {
                                        variant: "text-md/normal",
                                        children: T.default.Messages.MEMBER_VERIFICATION_CANCEL_APPLICATION_SUBTITLE
                                    })
                                }))
                            };
                            break;
                        case _.GuildJoinRequestApplicationStatuses.REJECTED:
                            O = T.default.Messages.MEMBER_VERIFICATION_REJECTED_TITLE, L = T.default.Messages.MEMBER_VERIFICATION_LEARN_MORE, v = () => {
                                (0, u.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("388435").then(n.bind(n, "388435"));
                                    return t => (0, a.jsx)(e, {
                                        guildId: A.id,
                                        ...t
                                    })
                                })
                            }, M.push(S.error);
                            break;
                        default:
                            O = T.default.Messages.MEMBER_VERIFICATION_NOTICE_TEXT, L = T.default.Messages.MEMBER_VERIFICATION_NOTICE_CTA, v = () => {
                                (0, f.openMemberVerificationModal)(A.id)
                            }
                    }
                    return (0, a.jsxs)("div", {
                        className: l(...M),
                        children: [(0, a.jsx)(u.Text, {
                            className: S.header,
                            variant: "text-sm/normal",
                            children: O
                        }), (0, a.jsx)(u.Button, {
                            className: S.button,
                            look: u.Button.Looks.OUTLINED,
                            color: u.Button.Colors.WHITE,
                            size: u.Button.Sizes.NONE,
                            onClick: v,
                            children: L
                        })]
                    })
                }
        },
        802896: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                doGuildOnboardingForPostAuthInvite: function() {
                    return i
                }
            });
            var a = n("970728"),
                s = n("487946"),
                l = n("305961");
            async function i(e) {
                let {
                    code: t
                } = e, i = await (0, s.default)(t), r = i.invite;
                if (null == r || null == r.guild) return;
                if (await
                    function() {
                        return new Promise(e => {
                            l.default.addConditionalChangeListener(() => !l.default.isLoaded() || (e(), !1))
                        })
                    }(), null == l.default.getGuild(r.guild.id)) return;
                let {
                    default: o
                } = await n.el("937692").then(n.bind(n, "937692"));
                await o({
                    guildId: r.guild.id
                }), a.default.transitionToInvite(r)
            }
        },
        889145: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("685829"),
                r = n("937692"),
                o = n("782340"),
                u = n("613230");

            function d(e) {
                let {
                    guildId: t,
                    channelId: n
                } = e, d = s.useCallback(() => {
                    null != t && null != n && ((0, i.startOnboarding)(t), (0, r.default)({
                        guildId: t,
                        returnChannelId: n
                    }))
                }, [t, n]);
                return (0, a.jsx)("div", {
                    className: u.container,
                    children: (0, a.jsxs)("div", {
                        className: u.explainerContainer,
                        children: [(0, a.jsx)(l.Text, {
                            variant: "text-md/normal",
                            children: o.default.Messages.ONBOARDING_ERROR_PAGE_TEXT
                        }), (0, a.jsx)(l.Button, {
                            onClick: d,
                            children: (0, a.jsx)(l.Text, {
                                variant: "text-md/medium",
                                children: o.default.Messages.START_ONBOARDING
                            })
                        })]
                    })
                })
            }
        },
        966003: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("151426"),
                r = n("10641"),
                o = n("592407"),
                u = n("305961"),
                d = n("162771"),
                c = n("489622"),
                E = n("599110"),
                f = n("179803"),
                _ = n("49111"),
                C = n("782340");

            function h(e) {
                let {
                    dismissCurrentNotice: t
                } = e, n = (0, l.default)([d.default], () => d.default.getGuildId(), []), h = (0, l.default)([u.default], () => u.default.getGuild(n), [n]);
                return (s.useEffect(() => {
                    (0, r.requestMarkDismissibleContentAsShown)(i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR)
                }, []), null == h) ? null : (0, a.jsxs)(c.default, {
                    color: c.NoticeColors.DEFAULT,
                    children: [(0, a.jsx)(c.NoticeCloseButton, {
                        onClick: () => {
                            E.default.track(_.AnalyticEvents.UPSELL_CLICKED, {
                                type: i.DismissibleContent[i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR],
                                action: "dismiss"
                            }), t(), (0, f.dismissedGuildOnboardingUpsell)(h.id, i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR)
                        }
                    }), C.default.Messages.GUILD_ONBOARDING_NAGBAR_MESSAGE, (0, a.jsx)(c.NoticeButton, {
                        onClick: () => {
                            E.default.track(_.AnalyticEvents.UPSELL_CLICKED, {
                                type: i.DismissibleContent[i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR],
                                action: "primary"
                            }), o.default.open(h.id, _.GuildSettingsSections.ONBOARDING), (0, f.dismissedGuildOnboardingUpsell)(h.id, i.DismissibleContent.GUILD_ONBOARDING_UPSELL_NAGBAR)
                        },
                        children: C.default.Messages.GUILD_ONBOARDING_UPSELL_COACHMARK_CHECK_IT_OUT
                    })]
                })
            }
        },
        778613: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHasPendingMemberAction: function() {
                    return f
                }
            }), n("702976");
            var a = n("65597"),
                s = n("42203"),
                l = n("26989"),
                i = n("305961"),
                r = n("568734"),
                o = n("698882"),
                u = n("675305"),
                d = n("6263"),
                c = n("49111"),
                E = n("657944");

            function f(e, t) {
                let n = (0, a.default)([i.default], () => i.default.getGuild(e)),
                    f = (0, a.default)([s.default], () => s.default.getChannel(t)),
                    _ = (0, a.default)([l.default], () => null == e ? null : l.default.getSelfMember(e)),
                    {
                        showOnboardingHome: C
                    } = (0, d.useOnboardingHomeExperiment)(n, _);
                return (0, a.default)([u.default, o.default, l.default], () => {
                    var e, t;
                    return null != n && null != f && C && n.hasFeature(c.GuildFeatures.GUILD_SERVER_GUIDE) && !r.hasFlag(null !== (t = null === (e = l.default.getSelfMember(n.id)) || void 0 === e ? void 0 : e.flags) && void 0 !== t ? t : 0, E.GuildMemberFlags.COMPLETED_HOME_ACTIONS) && o.default.hasMemberAction(n.id, f.id) && !u.default.hasCompletedActionForChannel(n.id, f.id)
                })
            }
        },
        665274: function(e, t, n) {
            "use strict";
            n.r(t), n("424973"), n("222007");
            var a = n("446674"),
                s = n("913144"),
                l = n("271938"),
                i = n("42203"),
                r = n("305961"),
                o = n("188631");
            let u = {};

            function d(e, t) {
                let n = u[e];
                return !(null == n || n.has(t)) && (u[e] = new Set(n.add(t)), !0)
            }
            class c extends a.default.PersistedStore {
                initialize(e) {
                    this.waitFor(l.default, r.default), u = {}, null != e && Object.keys(e).forEach(t => {
                        let n = e[t];
                        null != n && "function" == typeof n[Symbol.iterator] && (u[t] = new Set(n))
                    })
                }
                getProgress(e) {
                    return u[e]
                }
                hasProgress(e) {
                    let t = u[e];
                    return null != t && !t.has(o.Steps.DISMISSED)
                }
                getState() {
                    return u
                }
            }
            c.displayName = "GuildProgressStore", c.persistKey = "GuildProgressStore", new c(s.default, {
                CONNECTION_OPEN: function() {
                    let e = [];
                    Object.keys(u).forEach(t => {
                        u[t].has(o.Steps.COMPLETED) && e.push(t)
                    }), e.forEach(e => d(e, o.Steps.DISMISSED))
                },
                GUILD_PROGRESS_INITIALIZE: function(e) {
                    let {
                        guildId: t
                    } = e;
                    null == u[t] && (u[t] = new Set), !u[t].has(o.Steps.COMPLETED) && u[t].delete(o.Steps.DISMISSED)
                },
                GUILD_PROGRESS_COMPLETED_SEEN: function(e) {
                    let {
                        guildId: t
                    } = e;
                    if (null == u[t]) return !1;
                    u[t] = new Set(u[t].add(o.Steps.COMPLETED))
                },
                GUILD_PROGRESS_DISMISS: function(e) {
                    let {
                        guildId: t
                    } = e;
                    return d(t, o.Steps.DISMISSED)
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: {
                            id: t,
                            member_count: n
                        }
                    } = e, a = r.default.getGuild(t);
                    if (null == a) return !1;
                    a.ownerId === l.default.getId() && null != u[a.id] && (null != a.icon && u[a.id].add(o.Steps.AVATAR), n > 1 && u[a.id].add(o.Steps.INVITE))
                },
                CHANNEL_CREATE: function(e) {
                    let {
                        channel: t
                    } = e;
                    return null != t && null != t.guild_id && null != u[t.guild_id] && d(t.guild_id, o.Steps.CHANNEL)
                },
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e, n = !1;
                    for (let e of t) null != e && null != e.guild_id && null != u[e.guild_id] && !1 !== d(e.guild_id, o.Steps.CHANNEL) && (n = !0);
                    return n
                },
                GUILD_SETTINGS_SUBMIT_SUCCESS: function(e) {
                    let {
                        guild: t
                    } = e;
                    return null != t && null != t.id && null != u[t.id] && null != t.icon && d(t.id, o.Steps.AVATAR)
                },
                MESSAGE_CREATE: function(e) {
                    var t;
                    let {
                        channelId: n,
                        message: a
                    } = e, s = i.default.getChannel(n);
                    return (null === (t = a.author) || void 0 === t ? void 0 : t.id) === l.default.getId() && null != s && null != u[s.guild_id] && d(s.guild_id, o.Steps.MESSAGE)
                },
                GUILD_MEMBER_LIST_UPDATE: function(e) {
                    let {
                        guildId: t,
                        memberCount: n
                    } = e;
                    return null != u[t] && !!(n > 1) && d(t, o.Steps.INVITE)
                }
            })
        },
        93877: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("305961"),
                l = n("858560"),
                i = n("808388"),
                r = n("65722"),
                o = n("49111");

            function u(e) {
                let t = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    n = (0, i.useGuildEligibleForTierTemplates)(e),
                    u = (0, i.useUserEligibleForTierTemplates)(),
                    d = (null == t ? void 0 : t.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_ENABLED)) === !0 && (null == t ? void 0 : t.hasFeature(o.GuildFeatures.ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE)) === !1,
                    c = (0, r.canManageGuildRoleSubscriptions)(t);
                return d && u && c && l.GuildRoleSubscriptionsTierTemplatesExperiment.trackExposure({
                    guildId: e,
                    location: "ca30d9_1"
                }), d && u && c && n
            }
        },
        167790: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("7331"),
                l = n("305961"),
                i = n("697218"),
                r = n("49111");

            function o(e) {
                var t;
                let n = (0, a.useStateFromStores)([l.default], () => l.default.getGuild(e)),
                    o = (0, a.useStateFromStores)([i.default], () => i.default.getCurrentUser()),
                    u = (null == n ? void 0 : n.ownerId) === (null == o ? void 0 : o.id),
                    d = (0, s.useIsUserInCreatorMonetizationEligibleCountry)();
                return u && null !== (t = null == n ? void 0 : n.hasFeature(r.GuildFeatures.COMMUNITY)) && void 0 !== t && t && d && !((null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE)) || (null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_PROVISIONAL)) || (null == n ? void 0 : n.hasFeature(r.GuildFeatures.CREATOR_MONETIZABLE_DISABLED)))
            }
        },
        755574: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("191814"),
                o = n("423487"),
                u = n("751083");

            function d(e) {
                let {
                    message: t,
                    error: n,
                    onClick: s,
                    submitting: d,
                    className: c,
                    ctaMessage: E
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(u.container, c),
                    children: [(0, a.jsxs)("div", {
                        className: u.textContainer,
                        children: [(0, a.jsx)(o.default, {
                            className: u.warningIcon
                        }), (0, a.jsx)(r.default, {
                            size: 10,
                            horizontal: !0
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(r.default, {
                                size: 1
                            }), (0, a.jsx)(i.Text, {
                                className: u.info,
                                variant: "text-sm/normal",
                                children: t
                            }), null != n && (0, a.jsx)(i.Text, {
                                className: l(u.info, u.error),
                                variant: "text-sm/normal",
                                children: n
                            })]
                        })]
                    }), (0, a.jsx)(r.default, {
                        size: 16,
                        horizontal: !0
                    }), (0, a.jsx)(i.Button, {
                        className: u.undoButton,
                        color: i.Button.Colors.LINK,
                        look: i.Button.Looks.LINK,
                        size: i.Button.Sizes.ICON,
                        onClick: s,
                        submitting: d,
                        children: E
                    })]
                })
            }
        },
        526843: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("759843"),
                l = n("65597"),
                i = n("428958"),
                r = n("592407"),
                o = n("5667"),
                u = n("305961"),
                d = n("697218"),
                c = n("49111"),
                E = n("782340"),
                f = n("123685"),
                _ = n("936775");

            function C(e) {
                let {
                    guildId: t,
                    markAsDismissed: n
                } = e, C = (0, l.default)([u.default, d.default], () => {
                    let e = d.default.getCurrentUser(),
                        n = u.default.getGuild(t);
                    return (null == n ? void 0 : n.isOwner(e)) === !0
                });
                return (0, i.default)({
                    type: s.ImpressionTypes.POPOUT,
                    name: s.ImpressionNames.ENABLE_CREATOR_MONETIZATION_GUILD_HEADER_UPSELL,
                    properties: {
                        guild_id: t,
                        is_owner: C
                    }
                }), (0, a.jsx)("div", {
                    className: f.container,
                    children: (0, a.jsx)(o.default, {
                        header: E.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_HEADER,
                        content: E.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_BODY,
                        asset: (0, a.jsx)("div", {
                            className: f.image,
                            children: (0, a.jsx)("img", {
                                alt: E.default.Messages.GUILD_ROLE_SUBSCRIPTION_UPSELL_IMG_ALT,
                                src: _,
                                className: f.image
                            })
                        }),
                        buttonCTA: E.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_UPSELL_CTA,
                        onClick: () => {
                            r.default.open(t, c.GuildSettingsSections.ROLE_SUBSCRIPTIONS)
                        },
                        secondaryButtonCTA: E.default.Messages.DISMISS,
                        markAsDismissed: n
                    })
                })
            }
        },
        442619: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("592407"),
                l = n("5667"),
                i = n("58608"),
                r = n("49111"),
                o = n("782340"),
                u = n("992703");

            function d(e) {
                let {
                    guildId: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsx)("div", {
                    className: u.container,
                    children: (0, a.jsx)(l.default, {
                        header: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_TITLE,
                        content: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_BODY,
                        asset: (0, a.jsx)(i.default, {
                            className: u.video,
                            src: "https://cdn.discordapp.com/assets/server-subscription-tier-template/upsell.mov",
                            autoPlay: !0,
                            loop: !0
                        }),
                        buttonCTA: o.default.Messages.GUILD_ROLE_SUBSCRIPTION_TIER_TEMPLATE_UPSELL_CTA,
                        onClick: () => {
                            s.default.open(t, r.GuildSettingsSections.ROLE_SUBSCRIPTIONS, void 0, r.GuildSettingsSubsections.ROLE_SUBSCRIPTION_TIER_TEMPLATE)
                        },
                        secondaryButtonCTA: o.default.Messages.DISMISS,
                        markAsDismissed: n
                    })
                })
            }
        },
        430780: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("866227"),
                i = n.n(l),
                r = n("850068"),
                o = n("812204"),
                u = n("685665"),
                d = n("837008"),
                c = n("755574"),
                E = n("782340");
            let f = e => {
                let [t, n] = s.useState(!1), [a, l] = s.useState(null), i = async t => {
                    n(!0), l(null);
                    try {
                        await (0, r.deleteRenewalMutation)(t, e)
                    } catch (e) {
                        l(e)
                    } finally {
                        n(!1)
                    }
                };
                return {
                    resetRenewalMutation: i,
                    submitting: t,
                    error: a
                }
            };

            function _(e) {
                let {
                    groupListingId: t,
                    subscription: n,
                    className: l
                } = e, {
                    analyticsLocations: r
                } = (0, u.default)(o.default.PENDING_PLAN_CHANGE_NOTICE), {
                    resetRenewalMutation: _,
                    submitting: C,
                    error: h
                } = f(r), I = (0, d.useSubscriptionListingsForGroup)(t, {
                    includeSoftDeleted: !0
                }), {
                    currentListing: T,
                    nextListing: S
                } = s.useMemo(() => {
                    if ((null == n ? void 0 : n.renewalMutations) == null) return {
                        currentListing: void 0,
                        nextListing: void 0
                    };
                    let e = n.items[0].planId,
                        t = n.renewalMutations.items[0].planId,
                        a = I.find(t => t.subscription_plans[0].id === e),
                        s = I.find(e => e.subscription_plans[0].id === t);
                    return {
                        currentListing: a,
                        nextListing: s
                    }
                }, [n, I]);
                if (null == n || null == T || null == S) return null;
                let N = i(n.currentPeriodEnd).format("MMM DD, YYYY");
                return (0, a.jsx)(c.default, {
                    message: E.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_DELETE_MUTATION_DESCRIPTION.format({
                        currentListing: T.name,
                        nextListing: S.name,
                        changeDate: N
                    }),
                    error: null == h ? void 0 : h.message,
                    onClick: () => _(n),
                    submitting: C,
                    ctaMessage: E.default.Messages.GUILD_ROLE_CANCEL_SUBSCRIPTION_DELETE_MUTATION_CTA,
                    className: l
                })
            }
        },
        904698: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("79112"),
                l = n("191814"),
                i = n("755574"),
                r = n("49111"),
                o = n("397336"),
                u = n("782340");

            function d(e) {
                let {
                    subscription: t
                } = e;
                return null == t ? null : t.status === r.SubscriptionStatusTypes.PAST_DUE ? (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(l.default, {
                        size: 16
                    }), (0, a.jsx)(i.default, {
                        message: u.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_WARNING,
                        ctaMessage: u.default.Messages.GUILD_ROLE_SUBSCRIPTION_USER_SUBSCRIPTION_PAST_DUE_CTA,
                        onClick: () => {
                            s.default.open(r.UserSettingsSections.SUBSCRIPTIONS, o.ROLE_SUBSCRIPTION_SUBSECTION)
                        }
                    })]
                }) : null
            }
        },
        740316: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                BackToPreviousScreenNotice: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("246053"),
                i = n("489622"),
                r = n("49111"),
                o = n("395200");

            function u(e) {
                let {
                    buttonText: t,
                    onGoBack: n,
                    onDismiss: u,
                    showCloseButton: d
                } = e;
                return (0, a.jsxs)(i.default, {
                    className: o.backNotice,
                    children: [d && (0, a.jsx)(i.NoticeCloseButton, {
                        onClick: u,
                        noticeType: r.NoticeTypes.BACK_TO_PREVIOUS_SCREEN
                    }), (0, a.jsxs)(s.Button, {
                        className: o.backButton,
                        innerClassName: o.backButtonInner,
                        look: s.Button.Looks.OUTLINED,
                        color: s.Button.Colors.WHITE,
                        size: s.Button.Sizes.NONE,
                        onClick: n,
                        children: [(0, a.jsx)(l.default, {
                            width: 16,
                            height: 16,
                            direction: l.default.Directions.LEFT,
                            className: o.backArrow
                        }), t]
                    })]
                })
            }
        },
        967251: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("837008"),
                i = n("167109"),
                r = n("176687"),
                o = n("847426"),
                u = n("430780"),
                d = n("904698"),
                c = n("900076"),
                E = n("108314"),
                f = n("337239"),
                _ = n("49111"),
                C = n("782340"),
                h = n("773461"),
                I = e => {
                    var t, n;
                    let {
                        guild: I
                    } = e, T = (0, l.useGroupListingsForGuild)(I.id)[0];
                    (0, o.default)({
                        guildId: I.id,
                        groupListingId: null == T ? void 0 : T.id,
                        location: _.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB,
                        relevantSubscriptionListingIds: null == T ? void 0 : T.subscription_listings_ids
                    });
                    let {
                        activeSubscription: S
                    } = (0, r.default)(null == T ? void 0 : T.id), N = (0, l.useSubscriptionsSettings)(I.id), A = null == N ? void 0 : N.description, {
                        editStateIds: m
                    } = i.useEditStateIds(null !== (t = null == T ? void 0 : T.id) && void 0 !== t ? t : null, I.id);
                    return (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsxs)(f.default, {
                            title: C.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_PAGE_GROUP_CTA.format({
                                serverName: I.toString()
                            }),
                            description: null != A ? A : null,
                            coverImageAsset: null !== (n = null == N ? void 0 : N.cover_image_asset) && void 0 !== n ? n : null,
                            guild: I,
                            children: [null != T ? (0, a.jsx)(u.default, {
                                className: h.pendingPlanChangeNotice,
                                groupListingId: T.id,
                                subscription: S
                            }) : null, (0, a.jsx)(d.default, {
                                subscription: S
                            })]
                        }), (0, a.jsx)(s.HeadingLevel, {
                            children: (0, a.jsx)(c.default, {
                                guildId: I.id,
                                children: m.map(e => {
                                    var t;
                                    return (0, a.jsx)(E.default, {
                                        guildId: I.id,
                                        groupListingId: null !== (t = null == T ? void 0 : T.id) && void 0 !== t ? t : "",
                                        listingId: e,
                                        analyticsLocation: _.AnalyticsLocations.ROLE_SUBSCRIPTIONS_TAB
                                    }, e)
                                })
                            })
                        })]
                    })
                }
        },
        663831: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildRoleSubscriptionsOverviewErrorType: function() {
                    return s
                },
                GuildRoleSubscriptionsOverviewErrorPage: function() {
                    return E
                }
            });
            var a, s, l = n("37983");
            n("884691");
            var i = n("759843"),
                r = n("77078"),
                o = n("428958"),
                u = n("782340"),
                d = n("33716"),
                c = n("12469");
            (a = s || (s = {})).GUILD_NOT_ELIGIBLE = "guild_not_eligible", a.NOT_GUILD_MEMBER = "not_guild_member";
            let E = e => {
                let {
                    errorType: t
                } = e;
                return (0, o.default)({
                    type: i.ImpressionTypes.PAGE,
                    name: i.ImpressionNames.ROLE_SUBSCRIPTION_LISTING_UPSELL_ERROR_PAGE,
                    properties: {
                        error_page_type: t
                    }
                }), (0, l.jsx)("div", {
                    className: d.errorPageContainer,
                    children: (0, l.jsxs)("div", {
                        className: d.errorPageContent,
                        children: [(0, l.jsx)("img", {
                            src: c,
                            alt: "",
                            className: d.errorPageIllo
                        }), (0, l.jsx)(r.Heading, {
                            variant: "heading-xl/extrabold",
                            className: d.errorPageTitle,
                            children: "guild_not_eligible" === t ? u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_TITLE : u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_TITLE
                        }), (0, l.jsx)(r.Text, {
                            variant: "text-md/normal",
                            className: d.errorPagSubtitle,
                            children: "guild_not_eligible" === t ? u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_GUILD_NOT_ELIGIBLE_SUBTITLE : u.default.Messages.GUILD_ROLE_SUBSCRIPTION_PURCHASE_ERROR_PAGE_NOT_GUILD_MEMBER_SUBTITLE
                        })]
                    })
                })
            }
        },
        993057: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return M
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("394846"),
                i = n("446674"),
                r = n("77078"),
                o = n("850068"),
                u = n("516899"),
                d = n("69927"),
                c = n("657199"),
                E = n("250666"),
                f = n("465869"),
                _ = n("619443"),
                C = n("539938"),
                h = n("305961"),
                I = n("160299"),
                T = n("257869"),
                S = n("638779"),
                N = n("459736"),
                A = n("967251"),
                m = n("663831"),
                p = n("170185"),
                g = n("277860"),
                R = n("724210"),
                O = n("782340"),
                L = n("981239");

            function v(e) {
                let {
                    guildId: t
                } = e, n = (0, i.useStateFromStores)([h.default], () => h.default.getGuild(t), [t]), v = (0, i.useStateFromStores)([_.default], () => _.default.isConnected()), M = (0, E.default)(t), P = (0, S.default)(t), D = (0, i.useStateFromStores)([I.default], () => I.default.isSubscriptionFetching), y = (0, T.useGroupListingsFetchContext)(), {
                    shouldHideGuildPurchaseEntryPoints: x,
                    restrictionsLoading: U
                } = (0, f.useShouldHideGuildPurchaseEntryPoints)(t), b = null == n || !y || D || U;
                (0, d.usePageTitle)({
                    subsection: O.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                    location: null == n ? void 0 : n.name
                }), (0, u.default)(l.isMobile ? "role-subscriptions-overview" : void 0);
                let G = v && (null == n || !(M || P) || x && !U);
                if (s.useEffect(() => {
                        o.fetchSubscriptions()
                    }, []), s.useEffect(() => {
                        G && !l.isMobile && (0, c.handleInaccessiblePage)(t, R.StaticChannelRoute.ROLE_SUBSCRIPTIONS)
                    }, [t, G]), l.isMobile && G) {
                    let e = null == n ? m.GuildRoleSubscriptionsOverviewErrorType.NOT_GUILD_MEMBER : m.GuildRoleSubscriptionsOverviewErrorType.GUILD_NOT_ELIGIBLE;
                    return (0, a.jsx)(m.GuildRoleSubscriptionsOverviewErrorPage, {
                        errorType: e
                    })
                }
                return (0, a.jsxs)("div", {
                    className: L.container,
                    children: [(0, a.jsxs)(C.default, {
                        toolbar: (0, a.jsx)(s.Fragment, {}),
                        className: L.headerBar,
                        children: [(0, a.jsx)(C.default.Icon, {
                            icon: N.default,
                            "aria-hidden": !0
                        }), (0, a.jsx)(C.default.Title, {
                            children: O.default.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE
                        })]
                    }), (0, a.jsx)("div", {
                        id: g.OVERVIEW_NOTICE_ROOT
                    }), (0, a.jsx)("div", {
                        className: L.content,
                        children: M ? (0, a.jsx)(r.ScrollerNone, {
                            className: L.scroller,
                            children: (0, a.jsx)("div", {
                                className: L.scrollerContent,
                                children: b ? (0, a.jsx)(r.Spinner, {}) : (0, a.jsx)(A.default, {
                                    guild: n
                                })
                            })
                        }) : (0, a.jsx)(p.default, {})
                    })]
                })
            }

            function M(e) {
                let {
                    guildId: t
                } = e;
                return (0, a.jsx)(T.GroupListingsFetchContextProvider, {
                    guildId: t,
                    refetchOnMount: !0,
                    children: (0, a.jsx)(v, {
                        guildId: t
                    })
                })
            }
        },
        170185: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("191814"),
                i = n("782340"),
                r = n("160317"),
                o = n("936775");

            function u() {
                return (0, a.jsx)("div", {
                    className: r.container,
                    children: (0, a.jsxs)("div", {
                        className: r.content,
                        children: [(0, a.jsx)("img", {
                            src: o,
                            alt: i.default.Messages.CREATOR_MONETIZATION_NOTICE_ILLO_A11Y_LABEL
                        }), (0, a.jsx)(l.default, {
                            size: 12
                        }), (0, a.jsx)(s.Heading, {
                            className: r.header,
                            variant: "heading-lg/semibold",
                            children: i.default.Messages.CREATOR_MONETIZATION_DISABLED_NOTICE_TITLE
                        }), (0, a.jsx)(l.default, {
                            size: 8
                        }), (0, a.jsx)(s.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: i.default.Messages.CREATOR_MONETIZATION_DISABLED_NOTICE_DESCRIPTION
                        })]
                    })
                })
            }
        },
        277860: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                OVERVIEW_NOTICE_ROOT: function() {
                    return a
                }
            });
            let a = "guild-role-subscription-overview-notice"
        },
        337239: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("845579"),
                i = n("476263"),
                r = n("866190"),
                o = n("132349"),
                u = n("492969");

            function d(e) {
                let {
                    coverImageAsset: t,
                    title: n,
                    guild: d,
                    description: c,
                    children: E
                } = e, f = l.GifAutoPlay.useSetting(), _ = (0, r.useIsWindowFocused)(), [C, h] = (0, o.default)(t, _ && f);
                return (0, a.jsxs)("div", {
                    className: u.container,
                    children: [(0, a.jsx)("div", {
                        ref: C,
                        className: u.coverImageContainer,
                        children: null != h && (0, a.jsx)("img", {
                            src: h,
                            alt: "",
                            className: u.coverImage
                        })
                    }), (0, a.jsx)("div", {
                        className: u.guildIconContainer,
                        children: (0, a.jsx)(i.default, {
                            guild: d,
                            size: i.default.Sizes.XLARGE
                        })
                    }), (0, a.jsx)(s.Heading, {
                        variant: "heading-xl/semibold",
                        className: u.ctaTitle,
                        children: n
                    }), (0, a.jsx)(s.Text, {
                        className: u.ctaSubtitle,
                        variant: "text-md/normal",
                        color: "header-secondary",
                        children: c
                    }), E]
                })
            }
        },
        395869: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                hideLiveChannelNotice: function() {
                    return s
                },
                hideUpcomingEventNotice: function() {
                    return l
                },
                markUpcomingEventNoticeAsSeen: function() {
                    return i
                }
            });
            var a = n("913144");

            function s(e) {
                let {
                    eventId: t,
                    stageId: n
                } = e;
                (null != t || null != n) && a.default.dispatch({
                    type: "LIVE_CHANNEL_NOTICE_HIDE",
                    eventId: t,
                    stageId: n
                })
            }

            function l(e) {
                a.default.dispatch({
                    type: "UPCOMING_GUILD_EVENT_NOTICE_HIDE",
                    eventId: e
                })
            }

            function i(e) {
                a.default.dispatch({
                    type: "UPCOMING_GUILD_EVENT_NOTICE_SEEN",
                    guildEventId: e
                })
            }
        },
        824650: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("424973");
            var a = n("446674"),
                s = n("913144"),
                l = n("745049");
            let i = {
                hiddenEventsAndStages: []
            };
            class r extends a.default.PersistedStore {
                initialize(e) {
                    null != e && null != e.hiddenEventsAndStages && (i = e)
                }
                isLiveChannelNoticeHidden(e) {
                    let {
                        eventId: t,
                        stageId: n
                    } = e;
                    return !!(null != n && i.hiddenEventsAndStages.includes("stage-".concat(n))) || null != t && i.hiddenEventsAndStages.includes("event-".concat(t))
                }
                getState() {
                    return i
                }
            }
            r.displayName = "LiveChannelNoticesStore", r.persistKey = "liveChannelNotices_v2";
            var o = new r(s.default, {
                LIVE_CHANNEL_NOTICE_HIDE: function(e) {
                    let {
                        eventId: t,
                        stageId: n
                    } = e;
                    null != t ? i.hiddenEventsAndStages.push("event-".concat(t)) : null != n && i.hiddenEventsAndStages.push("stage-".concat(n))
                },
                GUILD_SCHEDULED_EVENT_UPDATE: function(e) {
                    let {
                        guildScheduledEvent: t
                    } = e, n = "event-".concat(t.id);
                    i.hiddenEventsAndStages.includes(n) && (t.status === l.GuildScheduledEventStatus.CANCELED || t.status === l.GuildScheduledEventStatus.COMPLETED) && (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(e => e !== n))
                },
                GUILD_SCHEDULED_EVENT_DELETE: function(e) {
                    let {
                        guildScheduledEvent: t
                    } = e, n = "event-".concat(t.id);
                    i.hiddenEventsAndStages.includes(n) && (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(e => e !== n))
                },
                STAGE_INSTANCE_DELETE: function(e) {
                    let {
                        instance: t
                    } = e, n = "stage-".concat(t.id);
                    i.hiddenEventsAndStages.includes(n) && (i.hiddenEventsAndStages = i.hiddenEventsAndStages.filter(e => e !== n))
                }
            })
        },
        73675: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "guild",
                id: "2023-09_upcoming_guild_events_notice",
                label: "Shows additional notices in the channel list for upcoming events",
                defaultConfig: {
                    canSeeUpcomingEventsNotices: !1
                },
                treatments: [{
                    id: 1,
                    label: "Guild members can see upcoming events notices",
                    config: {
                        canSeeUpcomingEventsNotices: !0
                    }
                }]
            });
            var l = s
        },
        593897: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActiveEventOrStageInstanceChannel: function() {
                    return i
                }
            });
            var a = n("170183"),
                s = n("42203"),
                l = n("534222");

            function i(e) {
                var t;
                let n = (0, l.useFirstActiveEventChannel)(e),
                    i = (0, a.default)(e),
                    r = s.default.getChannel(null === (t = i[0]) || void 0 === t ? void 0 : t.id);
                return null != n ? n : r
            }
        },
        568500: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useGuildHasLiveChannelNotice: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("834052"),
                l = n("170183"),
                i = n("42203"),
                r = n("824650"),
                o = n("534222");

            function u(e) {
                var t;
                let n = (0, l.default)(e),
                    u = i.default.getChannel(null === (t = n[0]) || void 0 === t ? void 0 : t.id),
                    d = (0, a.useStateFromStores)([s.default], () => s.default.getStageInstanceByChannel(null == u ? void 0 : u.id), [u]),
                    c = (0, o.useGuildActiveEvent)(e),
                    {
                        isStageNoticeHidden: E,
                        isEventNoticeHidden: f
                    } = (0, a.useStateFromStoresObject)([r.default], () => ({
                        isStageNoticeHidden: r.default.isLiveChannelNoticeHidden({
                            stageId: null == d ? void 0 : d.id
                        }),
                        isEventNoticeHidden: r.default.isLiveChannelNoticeHidden({
                            eventId: null == c ? void 0 : c.id
                        })
                    }), [d, c]);
                if (null != c) return null != d ? !E : !f;
                return null != d && !E
            }
        },
        153014: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                GuildNoticeBody: function() {
                    return q
                },
                VoiceChannelType: function() {
                    return a
                },
                LiveVoiceOrStageChannelNotice: function() {
                    return en
                },
                default: function() {
                    return ea
                }
            }), n("222007");
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("446674"),
                o = n("77078"),
                u = n("419830"),
                d = n("478761"),
                c = n("810467"),
                E = n("393414"),
                f = n("716214"),
                _ = n("488464"),
                C = n("998716"),
                h = n("230324"),
                I = n("834052"),
                T = n("160870"),
                S = n("957255"),
                N = n("316133"),
                A = n("660279"),
                m = n("943232"),
                p = n("36694"),
                g = n("945330"),
                R = n("272339"),
                O = n("718550"),
                L = n("228427"),
                v = n("811305"),
                M = n("599110"),
                P = n("449008"),
                D = n("374021"),
                y = n("398604"),
                x = n("395869"),
                U = n("824650"),
                b = n("431934"),
                G = n("73675"),
                j = n("1339"),
                w = n("593897"),
                k = n("466148"),
                F = n("534222"),
                B = n("841363"),
                H = n("822516"),
                V = n("936965"),
                Y = n("745049"),
                W = n("49111"),
                K = n("782340"),
                z = n("640701");
            let q = i.memo(function(e) {
                let {
                    heading: t,
                    location: n,
                    locationIcon: a,
                    details: s,
                    detailsIcon: i,
                    topic: r,
                    onClickCloseIcon: u,
                    onClickTopicText: d,
                    children: c
                } = e, E = (0, l.jsx)(o.Text, {
                    color: "header-primary",
                    variant: "text-md/semibold",
                    className: z.eventName,
                    children: r
                });
                return (0, l.jsxs)("div", {
                    className: z.channelNotice,
                    children: [(0, l.jsxs)("div", {
                        className: z.textBlock,
                        children: [(0, l.jsx)("div", {
                            className: z.liveIndicator
                        }), (0, l.jsx)(o.Text, {
                            color: "text-positive",
                            variant: "text-xs/bold",
                            className: z.liveNowText,
                            children: t
                        }), null != u && (0, l.jsx)(o.Clickable, {
                            onClick: u,
                            className: z.closeIcon,
                            "aria-label": K.default.Messages.CLOSE,
                            children: (0, l.jsx)(g.default, {
                                height: 16,
                                width: 16
                            })
                        })]
                    }), null == d ? E : (0, l.jsx)(o.Button, {
                        size: o.Button.Sizes.MIN,
                        look: o.Button.Looks.LINK,
                        color: o.Button.Colors.PRIMARY,
                        onClick: d,
                        children: E
                    }), (0, l.jsxs)("div", {
                        className: z.textBlock,
                        children: [a, (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: z.channelName,
                            children: n
                        }), null != s && null != i && (0, l.jsxs)(l.Fragment, {
                            children: [(0, l.jsx)(o.Text, {
                                className: z.dotDivider,
                                color: "header-secondary",
                                variant: "text-xs/normal",
                                children: "•"
                            }), i, (0, l.jsx)(o.Text, {
                                color: "header-secondary",
                                variant: "text-xs/normal",
                                children: s
                            })]
                        })]
                    }), c]
                })
            });

            function Q(e) {
                let {
                    guildEvent: t,
                    channel: n
                } = e, a = (0, r.useStateFromStoresArray)([N.default], () => N.default.getVoiceStatesForChannel(n).map(e => {
                    let {
                        user: t
                    } = e;
                    return t
                }), [n]), s = (0, u.getChannelIconComponent)(n);
                return (0, l.jsx)(q, {
                    onClickCloseIcon: () => (0, x.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id
                    }),
                    heading: K.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                    topic: t.name,
                    location: n.name,
                    locationIcon: null != s ? (0, l.jsx)(s, {
                        width: 16,
                        height: 16,
                        className: z.stageIcon
                    }) : null,
                    children: (0, l.jsx)(en, {
                        channel: n,
                        speakers: a,
                        voiceType: 1
                    })
                })
            }

            function Z(e) {
                let {
                    guildEvent: t,
                    noticeType: n
                } = e, a = (0, H.getNextRecurrenceIdInEvent)(t), s = (0, r.useStateFromStores)([y.default], () => y.default.isInterestedInEventRecurrence(t.id, a), [t.id, a]), i = (0, r.useStateFromStores)([b.default], () => b.default.getUpcomingNoticeSeenTime(t.id), [t.id]);
                return !s && null == i && (0, x.markUpcomingEventNoticeAsSeen)(t.id), (0, l.jsxs)(o.Button, {
                    fullWidth: !0,
                    className: z.joinButton,
                    innerClassName: z.rsvpButton,
                    onClick: function() {
                        (0, V.default)(t.id, null, t.guild_id, () => setTimeout(() => (0, x.hideUpcomingEventNotice)(t.id), 1e3)), M.default.track(W.AnalyticEvents.CHANNEL_NOTICE_CTA_CLICKED, {
                            guild_id: t.guild_id,
                            notice_type: n
                        })
                    },
                    look: s ? o.Button.Looks.OUTLINED : o.Button.Looks.FILLED,
                    color: s ? o.Button.Colors.TRANSPARENT : o.Button.Colors.GREEN,
                    size: o.Button.Sizes.SMALL,
                    children: [s ? (0, l.jsx)(p.default, {
                        width: 16,
                        height: 16,
                        className: z.buttonIcon
                    }) : (0, l.jsx)(A.default, {
                        width: 16,
                        height: 16,
                        className: z.buttonIcon
                    }), K.default.Messages.INDICATE_RSVP]
                })
            }

            function X(e) {
                var t;
                let {
                    guildEvent: n,
                    noticeType: a
                } = e, s = (0, B.getLocationFromEvent)(n), r = null != s ? (0, j.guildEventDetailsParser)(s, !0) : null, d = (0, B.getChannelFromEvent)(n), c = (0, u.getChannelIconComponent)(d), {
                    startTime: E,
                    endTime: f
                } = (0, k.default)(n.id), {
                    startDateTimeString: _,
                    upcomingEvent: C,
                    diffMinutes: h
                } = (0, H.getEventTimeData)(E.toISOString(), null == f ? void 0 : f.toISOString()), I = C ? h > 0 ? K.default.Messages.STARTING_IN_MINUTES.format({
                    minutes: h
                }) : K.default.Messages.STARTING_SOON : K.default.Messages.STARTING_ON_DATE.format({
                    date: _
                });
                return i.useEffect(() => {
                    M.default.track(W.AnalyticEvents.CHANNEL_NOTICE_VIEWED, {
                        notice_type: a,
                        guild_id: n.guild_id
                    })
                }, [n, a]), (0, l.jsxs)("div", {
                    className: z.channelNotice,
                    children: [(0, l.jsxs)("div", {
                        className: z.textBlock,
                        children: [(0, l.jsx)(o.Clickable, {
                            onClick: () => (0, D.openGuildEventDetails)({
                                eventId: n.id
                            }),
                            className: z.eventNameClickable,
                            children: (0, l.jsx)(o.Text, {
                                color: "header-primary",
                                variant: "text-md/semibold",
                                className: z.eventName,
                                children: n.name
                            })
                        }), (0, l.jsx)(o.Clickable, {
                            onClick: () => {
                                M.default.track(W.AnalyticEvents.CHANNEL_NOTICE_CLOSED, {
                                    notice_type: a,
                                    guild_id: n.guild_id
                                }), (0, x.hideUpcomingEventNotice)(n.id)
                            },
                            className: z.closeIcon,
                            "aria-label": K.default.Messages.CLOSE,
                            children: (0, l.jsx)(g.default, {
                                height: 16,
                                width: 16
                            })
                        })]
                    }), (0, l.jsxs)("div", {
                        className: z.textBlock,
                        children: [(0, l.jsx)(m.default, {
                            className: z.stageIcon,
                            width: 16,
                            height: 16
                        }), (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: z.startTime,
                            children: I
                        })]
                    }), (0, l.jsxs)("div", {
                        className: z.textBlock,
                        children: [null != c ? (0, l.jsx)(c, {
                            width: 16,
                            height: 16,
                            className: z.stageIcon
                        }) : (0, l.jsx)(O.default, {
                            width: 16,
                            height: 16,
                            className: z.stageIcon
                        }), (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: z.channelName,
                            children: null !== (t = null == d ? void 0 : d.name) && void 0 !== t ? t : r
                        })]
                    }), (0, l.jsx)(Z, {
                        guildEvent: n,
                        noticeType: a
                    })]
                })
            }

            function J(e) {
                let {
                    guildEvent: t
                } = e, n = (0, B.getLocationFromEvent)(t);
                return null == n ? null : (0, l.jsx)(q, {
                    onClickCloseIcon: () => (0, x.hideLiveChannelNotice)({
                        eventId: null == t ? void 0 : t.id
                    }),
                    heading: K.default.Messages.HAPPENING_NOW,
                    topic: t.name,
                    location: (0, j.guildEventDetailsParser)(n, !0),
                    locationIcon: (0, l.jsx)(O.default, {
                        width: 16,
                        height: 16,
                        className: z.stageIcon
                    }),
                    children: (0, l.jsx)($, {
                        guildEvent: t
                    })
                })
            }

            function $(e) {
                let {
                    guildEvent: t
                } = e, n = i.useCallback(() => {
                    (0, D.openGuildEventDetails)({
                        eventId: t.id
                    })
                }, [t]);
                return (0, l.jsx)(o.Button, {
                    fullWidth: !0,
                    className: z.joinButton,
                    onClick: n,
                    color: o.Button.Colors.GREEN,
                    size: o.Button.Sizes.SMALL,
                    children: K.default.Messages.SEE_DETAIL
                })
            }

            function ee(e) {
                let {
                    channel: t,
                    label: n
                } = e;
                return (0, l.jsx)(o.Button, {
                    fullWidth: !0,
                    className: z.joinButton,
                    onClick: () => {
                        null != t && null != t.getGuildId() && ((0, f.connectAndOpen)(t), (0, E.transitionToGuild)(t.getGuildId(), t.id))
                    },
                    color: o.Button.Colors.GREEN,
                    size: o.Button.Sizes.SMALL,
                    children: n
                })
            }

            function et(e) {
                let {
                    stageInstance: t,
                    channel: n
                } = e, {
                    speakers: a,
                    listenerCount: s
                } = (0, r.useStateFromStoresObject)([_.default], () => {
                    let e = _.default.getMutableParticipants(n.id, C.StageChannelParticipantNamedIndex.SPEAKER),
                        t = _.default.getParticipantCount(n.id, C.StageChannelParticipantNamedIndex.AUDIENCE);
                    return {
                        speakers: [...new Set(e.map(e => e.user))],
                        listenerCount: t
                    }
                }, [n.id]), i = K.default.Messages.LISTENING_COUNT.format({
                    count: "".concat(s)
                });
                return (0, l.jsx)(q, {
                    onClickCloseIcon: () => (0, x.hideLiveChannelNotice)({
                        stageId: null == t ? void 0 : t.id
                    }),
                    heading: K.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                    location: n.name,
                    details: i,
                    detailsIcon: (0, l.jsx)(R.default, {
                        width: 14,
                        height: 14,
                        className: z.stageIcon
                    }),
                    locationIcon: (0, l.jsx)(L.default, {
                        width: 16,
                        height: 16,
                        className: z.stageIcon
                    }),
                    topic: t.topic,
                    children: (0, l.jsx)(en, {
                        channel: n,
                        speakers: a,
                        voiceType: 2
                    })
                })
            }

            function en(e) {
                let {
                    channel: t,
                    speakers: n,
                    voiceType: a
                } = e, s = t.getGuildId(), u = i.useMemo(() => n.slice(0, 3), [n]), d = (0, r.useStateFromStores)([S.default], () => S.default.can(W.Permissions.CONNECT, t)), c = (0, T.default)(t.id), E = K.default.Messages.JOIN;
                switch (a) {
                    case 1:
                        E = K.default.Messages.JOIN;
                        break;
                    case 2:
                        E = K.default.Messages.STAGE_CHANNEL_JOIN_BUTTON, (null == c ? void 0 : c.speaker) ? E = K.default.Messages.STAGE_CHANNEL_JOINED_SPEAKER_BUTTON : null != c && (E = K.default.Messages.STAGE_CHANNEL_JOINED_AUDIENCE_BUTTON);
                        break;
                    case 3:
                        E = K.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA;
                        break;
                    default:
                        (0, P.assertNever)(a)
                }
                return null == s ? null : (0, l.jsxs)(l.Fragment, {
                    children: [u.length > 0 ? (0, l.jsxs)("div", {
                        className: z.textBlock,
                        children: [(0, l.jsx)(v.default, {
                            guildId: s,
                            users: u,
                            showUserPopout: !0,
                            size: v.Sizes.SIZE_16
                        }), (0, l.jsx)(o.Text, {
                            color: "header-secondary",
                            variant: "text-xs/normal",
                            className: z.userNames,
                            children: (0, h.summarizeUsernamesParticipating)(s, u, null == t ? void 0 : t.id, n.length)
                        })]
                    }) : null, d && null == c && (0, l.jsx)(ee, {
                        channel: t,
                        label: E
                    })]
                })
            }(s = a || (a = {}))[s.VOICE = 1] = "VOICE", s[s.STAGE = 2] = "STAGE", s[s.STUDY_ROOM = 3] = "STUDY_ROOM";
            var ea = i.memo(function(e) {
                let {
                    guild: t
                } = e, {
                    showRedesignedLiveChannelNotice: n
                } = (0, d.useChannelNoticeRedesignExperiment)(!0), a = (0, w.useActiveEventOrStageInstanceChannel)(t.id), s = (0, F.useGuildActiveEvent)(t.id), i = (0, F.useGuildUpcomingEventsNotice)(t.id), {
                    canSeeUpcomingEventsNotices: o
                } = G.default.useExperiment({
                    guildId: t.id,
                    location: "Guild Channel Notice"
                }, {
                    autoTrackExposure: !1
                }), u = (0, r.useStateFromStores)([I.default], () => I.default.getStageInstanceByChannel(null == a ? void 0 : a.id), [a]), {
                    isStageNoticeHidden: E,
                    isEventNoticeHidden: f
                } = (0, r.useStateFromStoresObject)([U.default], () => ({
                    isStageNoticeHidden: U.default.isLiveChannelNoticeHidden({
                        stageId: null == u ? void 0 : u.id
                    }),
                    isEventNoticeHidden: U.default.isLiveChannelNoticeHidden({
                        eventId: null == s ? void 0 : s.id
                    })
                }), [u, s]), _ = null, C = null != u && null != a && !E;
                if (n) return (0, l.jsx)(c.default, {
                    guild: t
                });
                null == s || f ? C && (_ = (0, l.jsx)(et, {
                    stageInstance: u,
                    channel: a
                })) : s.entity_type === Y.GuildScheduledEventEntityTypes.STAGE_INSTANCE && C ? _ = (0, l.jsx)(et, {
                    stageInstance: u,
                    channel: a
                }) : s.entity_type === Y.GuildScheduledEventEntityTypes.EXTERNAL ? _ = (0, l.jsx)(J, {
                    guildEvent: s
                }) : s.entity_type === Y.GuildScheduledEventEntityTypes.VOICE && null != a && (_ = (0, l.jsx)(Q, {
                    guildEvent: s,
                    channel: a
                }));
                let h = t.hasFeature(W.GuildFeatures.COMMUNITY) || t.hasFeature(W.GuildFeatures.HUB);
                if (null == _ && null != i && !h) {
                    let {
                        upcomingEvent: e,
                        noticeType: n
                    } = i;
                    G.default.trackExposure({
                        guildId: t.id,
                        location: "Guild Live Channel Notice"
                    }), _ = o ? (0, l.jsx)(X, {
                        guildEvent: e,
                        noticeType: n
                    }) : null
                }
                return _
            })
        },
        73968: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                openGuildSettingsPickerModal: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078");

            function l(e) {
                (0, s.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await n.el("945216").then(n.bind(n, "945216"));
                    return n => (0, a.jsx)(t, {
                        ...n,
                        ...e
                    })
                }, {
                    modalKey: "Guild Settings Picker Modal"
                })
            }
        },
        951568: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                TutorialType: function() {
                    return s
                },
                EmbeddedActivityTutorial: function() {
                    return p
                }
            });
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("446674"),
                o = n("77078"),
                u = n("244201"),
                d = n("550766"),
                c = n("478272"),
                E = n("812204"),
                f = n("685665"),
                _ = n("42203"),
                C = n("58608"),
                h = n("599110"),
                I = n("49111"),
                T = n("994428"),
                S = n("782340"),
                N = n("314796");
            (a = s || (s = {})).BOOSTING = "BOOSTING", a.NITRO = "NITRO", a.BASH_OUT = "BASH_OUT", a.GARTIC_PHONE = "GARTIC_PHONE", a.GAME_NIGHT = "GAME_NIGHT";
            let A = "https://cdn.discordapp.com/attachments/860252504826445825/1029516100356018217/Activities_NUX_GL_1.mp4",
                m = "https://cdn.discordapp.com/attachments/887469171804356628/916446867586416660/activities-video-poster-512.png",
                p = e => {
                    let {
                        channelId: t,
                        markAsDismissed: n,
                        tutorialType: a
                    } = e, {
                        analyticsLocation: s,
                        analyticsType: p,
                        ctaText: g,
                        dismissText: R,
                        description: O,
                        learnMore: L,
                        title: v,
                        videoPosterUrl: M,
                        videoUrl: P
                    } = function(e) {
                        switch (e) {
                            case "BOOSTING":
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_BOOSTING, analyticsType: "embedded_activity_discovery_tutorial", description: S.default.Messages.EMBEDDED_ACTIVITY_NOTICE_WTP_DESCRIPTION, learnMore: !0, title: S.default.Messages.EMBEDDED_ACTIVITY_NOTICE_TITLE, videoPosterUrl: m, videoUrl: A, ctaText: S.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT, dismissText: S.default.Messages.DISMISS
                                };
                            case "NITRO":
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_NITRO, analyticsType: "embedded_activity_nitro_discovery_tutorial", description: S.default.Messages.EMBEDDED_ACTIVITY_NOTICE_NITRO_DESCRIPTION, learnMore: !0, title: S.default.Messages.EMBEDDED_ACTIVITY_NOTICE_NITRO_TITLE, videoPosterUrl: m, videoUrl: A, ctaText: S.default.Messages.EMBEDDED_ACTIVITIES_TRY_IT_OUT, dismissText: S.default.Messages.DISMISS
                                };
                            case "BASH_OUT":
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_BASH_OUT, analyticsType: "embedded_activity_bash_out_tutorial", description: S.default.Messages.EMBEDDED_ACTIVITY_NOTICE_BASH_OUT_DESCRIPTION, learnMore: !1, title: S.default.Messages.EMBEDDED_ACTIVITIES_AVAILABLE_NOW, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1037963592227635230/bash_out.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1037967755955146762/bash_out.mp4", ctaText: S.default.Messages.PLAY, dismissText: S.default.Messages.DISMISS
                                };
                            case "GARTIC_PHONE":
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_GARTIC_PHONE, analyticsType: "embedded_activity_gartic_phone_tutorial", description: S.default.Messages.EMBEDDED_ACTIVITY_GARTIC_PHONE_DESCRIPTION, learnMore: !1, title: S.default.Messages.EMBEDDED_ACTIVITY_GARTIC_PHONE_TITLE, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1083484393609367563/23_023_GarticPhone_Web_Coachmark_English.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1083484048539779173/23_023_GarticPhone_Web_Coachmark_English.mp4", ctaText: S.default.Messages.PLAY_NOW, dismissText: S.default.Messages.MAYBE_LATER
                                };
                            case "GAME_NIGHT":
                                return {
                                    analyticsLocation: E.default.ACTIVITIES_COACH_MARK_GAME_NIGHT, analyticsType: "embedded_activity_game_night_tutorial", description: S.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_BODY, learnMore: !1, title: S.default.Messages.EMBEDDED_ACTIVITIES_GAME_NIGHT_HEADING, videoPosterUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1093287297950175272/game_night_desktop.jpg", videoUrl: "https://cdn.discordapp.com/attachments/860252504826445825/1093286971708813382/game_night_desktop.mp4", ctaText: S.default.Messages.PLAY_NOW, dismissText: S.default.Messages.MAYBE_LATER
                                };
                            default:
                                return {
                                    analyticsLocation: E.default.ACTIVITY_COACH_MARK_NITRO, analyticsType: "", description: "", learnMore: !1, title: "", videoPosterUrl: "", videoUrl: "", ctaText: "", dismissText: ""
                                }
                        }
                    }(a), {
                        analyticsLocations: D,
                        AnalyticsLocationProvider: y
                    } = (0, f.default)(s);
                    i.useEffect(() => {
                        h.default.track(I.AnalyticEvents.TOOLTIP_VIEWED, {
                            type: p
                        })
                    }, [p]);
                    let x = (0, u.useAppContext)(),
                        U = x === I.AppContext.POPOUT,
                        b = (0, r.useStateFromStores)([_.default], () => _.default.getChannel(t), [t]);
                    return (0, l.jsx)(y, {
                        children: (0, l.jsx)("div", {
                            className: N.wrapper,
                            children: (0, l.jsx)("div", {
                                className: N.container,
                                children: (0, l.jsxs)("div", {
                                    className: N.content,
                                    children: [(0, l.jsx)(C.default, {
                                        className: N.video,
                                        src: P,
                                        poster: M,
                                        width: 224,
                                        height: 126,
                                        loop: !0,
                                        muted: !0,
                                        autoPlay: !0
                                    }), (0, l.jsx)("div", {
                                        className: N.header,
                                        children: (0, l.jsx)(o.Heading, {
                                            className: N.headerText,
                                            variant: "text-sm/bold",
                                            color: "always-white",
                                            children: v
                                        })
                                    }), (0, l.jsxs)(o.Text, {
                                        className: N.subheaderText,
                                        variant: "text-xs/normal",
                                        color: "always-white",
                                        children: [O, L ? (0, l.jsxs)(l.Fragment, {
                                            children: [" ", (0, l.jsx)(o.Anchor, {
                                                className: N.learnMoreLink,
                                                href: "https://support.discord.com/hc/articles/4422142836759",
                                                children: S.default.Messages.LEARN_MORE
                                            })]
                                        }) : null]
                                    }), (0, l.jsxs)("div", {
                                        className: N.ctaActionWrapper,
                                        children: [(0, l.jsx)(o.Button, {
                                            color: o.Button.Colors.BRAND,
                                            onClick: () => {
                                                n(T.ContentDismissActionType.UNKNOWN)
                                            },
                                            children: R
                                        }), (0, l.jsx)(o.Button, {
                                            color: o.Button.Colors.BRAND,
                                            look: o.Button.Looks.INVERTED,
                                            onClick: () => {
                                                n(T.ContentDismissActionType.UNKNOWN), null != b && ((0, c.default)({
                                                    channel: b.isGuildVoice() ? b : void 0,
                                                    guildId: b.guild_id,
                                                    locationObject: {
                                                        page: I.AnalyticsPages.GUILD_CHANNEL,
                                                        section: I.AnalyticsSections.GUILD_CHANNEL_LIST,
                                                        object: I.AnalyticsObjects.ACTIVITIES_COACH_MARK,
                                                        objectType: I.AnalyticsObjectTypes.ACTIVITY
                                                    },
                                                    openInPopout: U,
                                                    analyticsLocations: D
                                                }), (0, d.fetchShelf)({
                                                    guildId: b.guild_id
                                                }))
                                            },
                                            children: g
                                        })]
                                    })]
                                })
                            })
                        })
                    })
                }
        },
        828931: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return H
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("151426"),
                i = n("819855"),
                r = n("77078"),
                o = n("685665"),
                u = n("593094"),
                d = n("951169"),
                c = n("509802"),
                E = n("668214"),
                f = n("379532"),
                _ = n("526843"),
                C = n("442619"),
                h = n("592407"),
                I = n("465511"),
                T = n("519119"),
                S = n("5667"),
                N = n("79798"),
                A = n("599110"),
                m = n("427459"),
                p = n("701909"),
                g = n("344696"),
                R = n("49111"),
                O = n("988268"),
                L = n("994428"),
                v = n("944305"),
                M = n("646718"),
                P = n("782340"),
                D = n("706904"),
                y = n("142190"),
                x = n("288562"),
                U = n("553274"),
                b = n("824489"),
                G = n("311492"),
                j = n("776432");

            function w(e) {
                null != e && h.default.open(e.id, R.GuildSettingsSections.OVERVIEW, {
                    section: R.AnalyticsSections.PREMIUM_GUILD_PROGRESS_BAR
                }, R.GuildSettingsSubsections.DISPLAY)
            }

            function k(e, t) {
                t && h.default.open(e.id, R.GuildSettingsSections.DISCOVERY)
            }

            function F(e, t) {
                null != t && ((0, m.isTierUnlocked)(t, R.BoostedGuildTiers.TIER_1) ? h.default.open(t.id, R.GuildSettingsSections.OVERVIEW, {
                    section: R.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH
                }, R.GuildSettingsSubsections.INVITE) : (0, f.default)({
                    analyticsLocations: e,
                    analyticsSourceLocation: R.AnalyticsSections.PREMIUM_GUILD_INVITE_SPLASH,
                    guild: t,
                    perks: (0, v.guildInviteUpsellPerks)()
                }))
            }

            function B(e) {
                let {
                    renderPopout: t,
                    renderGuildHeaderDropdownButton: n
                } = e;
                return (0, a.jsx)(r.Popout, {
                    renderPopout: () => (0, a.jsx)("div", {
                        onClick: e => e.stopPropagation(),
                        children: t
                    }),
                    position: "bottom",
                    align: "center",
                    animation: r.Popout.Animation.TRANSLATE,
                    shouldShow: !0,
                    children: () => n()
                })
            }
            var H = s.memo(function(e) {
                let {
                    contentTypes: t,
                    theme: n,
                    guild: s,
                    renderGuildHeaderDropdownButton: r
                } = e, {
                    analyticsLocations: f
                } = (0, o.default)(), v = () => {
                    A.default.track(R.AnalyticEvents.TOOLTIP_VIEWED, {
                        type: M.PremiumUpsellTypes.PREMIUM_PROGRESS_BAR,
                        location: {
                            page: R.AnalyticsPages.GUILD_CHANNEL
                        }
                    })
                }, H = () => {
                    A.default.track(R.AnalyticEvents.PREMIUM_UPSELL_VIEWED, {
                        type: M.PremiumUpsellTypes.INVITE_SPLASH_UPSELL,
                        location: {
                            page: R.AnalyticsPages.GUILD_CHANNEL
                        },
                        location_stack: f
                    })
                }, V = (0, i.isThemeDark)(n) ? U : b, [Y, W] = (0, c.useDismissibleContentGroup)(t, L.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS);
                return (0, a.jsx)(a.Fragment, {
                    children: (() => {
                        switch (Y) {
                            case l.DismissibleContent.GUILD_MENTION_RAID_LIMIT:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(E.GuildMentionRaidLimitUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_AUTOMOD_CUSTOM_BLOCK_MESSAGE:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(E.AutomodCustomBlockMessageUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_AUTOMOD_USER_PROFILE_UPSELL_AB:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(E.AutomodUserProfileUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.ANTI_RAID_SAFETY_ALERT_NOTICE:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(E.GuildAntiRaidUpsellTooltip, {
                                        guildId: s.id,
                                        onDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        onComponentMount: v,
                                        header: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: V,
                                            className: y.fullWidthImage
                                        }),
                                        content: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CONTENT.format(),
                                        buttonCTA: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                                        secondaryButtonCTA: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => w(),
                                        onClick: () => w(s),
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        onComponentMount: v,
                                        header: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: V,
                                            className: y.fullWidthImage
                                        }),
                                        content: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_SIZE_TOOLTIP_CONTENT.format(),
                                        buttonCTA: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS,
                                        secondaryButtonCTA: P.default.Messages.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => w(),
                                        onClick: () => w(s),
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(_.default, {
                                        guildId: s.id,
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(d.default, {
                                        onClick: () => k(s, !0),
                                        onSecondaryClick: () => k(s),
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(u.default, {
                                        guild: s,
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_INVITE_SPLASH:
                                let e = (0, m.isTierUnlocked)(s, R.BoostedGuildTiers.TIER_1) ? P.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT.format() : P.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CONTENT_LOCKED.format({
                                        boostCount: (0, m.getNumberOfAppliedBoostsNeededForTier)(s, R.BoostedGuildTiers.TIER_1)
                                    }),
                                    t = (0, m.isTierUnlocked)(s, R.BoostedGuildTiers.TIER_1) ? P.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_PRIMARY_ROLE_SETTINGS : P.default.Messages.LEARN_MORE;
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        onComponentMount: H,
                                        header: P.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_TITLE,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: x,
                                            className: y.fullWidthImage
                                        }),
                                        content: e,
                                        buttonCTA: t,
                                        secondaryButtonCTA: P.default.Messages.INVITE_SPLASH_GUILD_HEADER_TOOLTIP_CTA_SECONDARY,
                                        onSecondaryClick: () => F(f),
                                        onClick: () => F(f, s),
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(I.default, {
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        className: D.tooltipOverrideColor,
                                        header: P.default.Messages.ACTIVE_THREADS_UPSELL_HEADER,
                                        content: P.default.Messages.ACTIVE_THREADS_UPSELL_CONTENT,
                                        buttonCTA: P.default.Messages.GOT_IT,
                                        onClick: () => W(L.ContentDismissActionType.UNKNOWN),
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.CLYDE_GUILD_HEADER_NUX:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        header: (0, a.jsxs)(a.Fragment, {
                                            children: [P.default.Messages.CLYDE_MODAL_TITLE, (0, a.jsx)(N.default, {
                                                className: D.botTag,
                                                type: O.BotTagTypes.AI,
                                                verified: !0
                                            })]
                                        }),
                                        headerClassName: D.clydeTooltipHeaderContainer,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: G,
                                            className: D.clydeTooltipAsset
                                        }),
                                        content: P.default.Messages.CLYDE_GUILD_TOOLTIP_DETAILS.format({
                                            learnMoreURL: p.default.getArticleURL(R.HelpdeskArticles.CLYDE_AI)
                                        }),
                                        buttonCTA: P.default.Messages.ENABLE,
                                        onClick: () => {
                                            h.default.open(s.id, R.GuildSettingsSections.INTEGRATIONS)
                                        },
                                        secondaryButtonCTA: P.default.Messages.DISMISS,
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(S.default, {
                                        header: P.default.Messages.SOUNDBOARD_TOOLTIP_TITLE_NEW,
                                        content: P.default.Messages.SOUNDBOARD_TOOLTIP_BODY,
                                        buttonCTA: P.default.Messages.CHECK_IT_OUT,
                                        secondaryButtonCTA: P.default.Messages.NO_THANKS,
                                        asset: (0, a.jsx)("img", {
                                            alt: "",
                                            src: j,
                                            className: y.fullWidthImage
                                        }),
                                        onClick: () => {
                                            h.default.open(s.id, R.GuildSettingsSections.ROLES), h.default.selectRole(s.id, P.default.Messages.USE_SOUNDBOARD)
                                        },
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.MEDIA_CHANNEL_UPSELL:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(T.default, {
                                        guildId: s.id,
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(C.default, {
                                        guildId: s.id,
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            case l.DismissibleContent.INVENTORY_GUILD_SETTINGS_MODMIN_COACHMARK:
                                return (0, a.jsx)(B, {
                                    renderPopout: (0, a.jsx)(g.default, {
                                        guild: s,
                                        markAsDismissed: W
                                    }),
                                    renderGuildHeaderDropdownButton: r
                                });
                            default:
                                return r()
                        }
                    })()
                })
            })
        },
        118971: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ex
                }
            }), n("424973"), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("917351"),
                o = n.n(r),
                u = n("301165"),
                d = n("446674"),
                c = n("151426"),
                E = n("862337"),
                f = n("77078"),
                _ = n("913144"),
                C = n("272030"),
                h = n("366634"),
                I = n("225664"),
                T = n("241845"),
                S = n("84339"),
                N = n("614175"),
                A = n("180065"),
                m = n("768613"),
                p = n("812204"),
                g = n("685665"),
                R = n("619935"),
                O = n("731681"),
                L = n("185314"),
                v = n("453910"),
                M = n("862853"),
                P = n("10641"),
                D = n("509802"),
                y = n("149362"),
                x = n("145067"),
                U = n("95039"),
                b = n("580362"),
                G = n("754707"),
                j = n("93877"),
                w = n("167790"),
                k = n("81732"),
                F = n("518953"),
                B = n("699209"),
                H = n("341563"),
                V = n("240239"),
                Y = n("6895"),
                W = n("817963"),
                K = n("694768"),
                z = n("921228"),
                q = n("414581"),
                Q = n("848877"),
                Z = n("1501"),
                X = n("689275"),
                J = n("12896"),
                $ = n("612246"),
                ee = n("5667"),
                et = n("161778"),
                en = n("42203"),
                ea = n("350522"),
                es = n("162805"),
                el = n("341542"),
                ei = n("923959"),
                er = n("525065"),
                eo = n("305961"),
                eu = n("778588"),
                ed = n("957255"),
                ec = n("945956"),
                eE = n("568307"),
                ef = n("697218"),
                e_ = n("719923"),
                eC = n("197881"),
                eh = n("120817"),
                eI = n("951568"),
                eT = n("637667"),
                eS = n("828931"),
                eN = n("89956"),
                eA = n("421595"),
                em = n("49111"),
                ep = n("427474"),
                eg = n("994428"),
                eR = n("695838"),
                eO = n("646718"),
                eL = n("782340"),
                ev = n("706904");
            let eM = 64,
                eP = "server-settings",
                eD = {
                    origin: {
                        x: -8,
                        y: -48
                    },
                    targetWidth: 40,
                    targetHeight: 40,
                    offset: {
                        x: 0,
                        y: 0
                    }
                };
            class ey extends s.PureComponent {
                static getDerivedStateFromProps(e) {
                    let {
                        guild: t,
                        hasChannelNotice: n
                    } = e;
                    return null == t || null == t.banner || n ? {
                        renderBanner: !1,
                        bannerVisible: !1
                    } : null
                }
                componentDidMount() {
                    var e;
                    this.setAnimatedValue(0), _.default.subscribe("LAYER_PUSH", this.closeAllHeaderNotices), this.historyUnlisten = Z.default.addRouteChangeListener(this.handleHistoryChange);
                    let {
                        location: t
                    } = Z.default.getHistory();
                    (null === (e = t.state) || void 0 === e ? void 0 : e.shouldShowSubscribeTooltip) && this.showTimeout.start(1e3, () => this.setState({
                        shouldShowSubscribeTooltip: !0
                    }))
                }
                componentWillUnmount() {
                    this.showTimeout.stop(), this.state.controller.dispose(), this.historyUnlisten(), _.default.unsubscribe("LAYER_PUSH", this.closeAllHeaderNotices)
                }
                getGuildBannerHash() {
                    let {
                        guild: e,
                        hasChannelNotice: t
                    } = this.props;
                    return null == e || t ? null : e.banner
                }
                renderGuildHeaderNotices(e) {
                    let {
                        showGuildTemplateDirtyTooltip: t,
                        showGuildHeaderTutorial: n,
                        anyLayerOpen: s
                    } = this.props, {
                        shouldShowSubscribeTooltip: l
                    } = this.state;
                    if (n) return (0, a.jsx)("div", {
                        onClick: t => e ? null : t.stopPropagation(),
                        children: (0, a.jsx)(J.default, {
                            tutorialId: eP,
                            position: "bottom",
                            inlineSpecs: eD,
                            children: this.renderGuildHeaderDropdownButton(e)
                        })
                    });
                    if (t) return (0, a.jsx)(f.Tooltip, {
                        forceOpen: !0,
                        color: f.TooltipColors.BRAND,
                        position: "bottom",
                        shouldShow: !e && !s,
                        text: eL.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
                        "aria-label": eL.default.Messages.GUILD_TEMPLATES_UNSYNCED_TOOLTIP,
                        children: () => this.renderGuildHeaderDropdownButton(e)
                    });
                    if (!s && !e) return l ? (0, a.jsx)(f.Popout, {
                        renderPopout: () => (0, a.jsx)("div", {
                            onClick: e => e.stopPropagation(),
                            children: (0, a.jsx)(ee.default, {
                                header: eL.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_HEADER,
                                content: eL.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_TEXT,
                                buttonCTA: eL.default.Messages.PREMIUM_GUILD_SUBSCRIPTION_HEADER_SUBSCRIBE_TOOLTIP_CLOSE,
                                onClick: this.handleCloseSubscribeTooltip
                            })
                        }),
                        position: "bottom",
                        align: "center",
                        animation: f.Popout.Animation.TRANSLATE,
                        shouldShow: !0,
                        children: () => this.renderGuildHeaderDropdownButton(e)
                    }) : this.renderGuildHeaderUpsellPopout(e);
                    return this.renderGuildHeaderDropdownButton(e)
                }
                renderGuildHeader(e) {
                    let {
                        guild: t,
                        isHeaderPopoutOpen: n,
                        showGuildHeaderTutorial: s,
                        showGuildTemplateDirtyTooltip: l,
                        isGuildHeaderDismissibleTooltipShown: i,
                        HeaderAnalyticsLocationProvider: r
                    } = this.props, {
                        controller: o,
                        renderBanner: u,
                        bannerVisible: d,
                        bannerVisibleHeight: c,
                        communityInfoVisible: E
                    } = this.state, _ = s || l || i;
                    return null == t ? null : (0, a.jsx)(r, {
                        children: (0, a.jsx)(f.LazyPopout, {
                            renderPopout: this.renderMenuPopout,
                            position: "bottom",
                            align: "center",
                            animation: f.Popout.Animation.SCALE,
                            shouldShow: n,
                            onRequestClose: () => {
                                (0, Q.dismissPremiumTutorialFlow)(eO.PremiumTutorialSteps.BOOSTING), (0, x.showGuildHeaderPopout)(!1)
                            },
                            children: s => {
                                let {
                                    onClick: l,
                                    ...i
                                } = s;
                                return (0, a.jsx)(eT.default, {
                                    guild: t,
                                    controller: o,
                                    renderBanner: u,
                                    hasSubheader: e,
                                    bannerVisible: d,
                                    communityInfoVisible: E,
                                    guildBanner: this.getGuildBannerHash(),
                                    onClick: this.handleHeaderMenuToggle,
                                    onContextMenu: this.handleHeaderContextMenu,
                                    disableBannerAnimation: _,
                                    animationOverlayHeight: c,
                                    ...i,
                                    children: this.renderGuildHeaderNotices(n)
                                })
                            }
                        })
                    })
                }
                setAnimatedValue(e) {
                    let {
                        guild: t
                    } = this.props, n = null != this.getGuildBannerHash(), a = null == t ? void 0 : t.hasCommunityInfoSubheader();
                    null != t && (n || a) && (n ? this.setAnimatedValueForBanner(e) : this.setAnimatedValueForGuildInfo(e))
                }
                setAnimatedValueForBanner(e) {
                    let {
                        renderBanner: t,
                        communityInfoVisible: n,
                        bannerVisible: a,
                        bannerVisibleHeight: s,
                        controller: l
                    } = this.state;
                    (e >= eM && a || e < eM && !a) && (a = !a), (e >= 88 && !t || e < 88 && t) && (t = !t), s = Math.max(88 - e, 0), n = a, (t !== this.state.renderBanner || a !== this.state.bannerVisible || s !== this.state.bannerVisibleHeight || n !== this.state.communityInfoVisible) && this.setState({
                        renderBanner: t,
                        bannerVisible: a,
                        bannerVisibleHeight: s,
                        communityInfoVisible: n
                    }), l.update({
                        value: Math.min(1, Math.max(0, 1 - e / 88)),
                        immediate: !0
                    }).start()
                }
                setAnimatedValueForGuildInfo(e) {
                    let {
                        communityInfoVisible: t,
                        controller: n
                    } = this.state;
                    (e >= 20 && t || e < 20 && !t) && (t = !t), t !== this.state.communityInfoVisible && this.setState({
                        communityInfoVisible: t
                    }), n.update({
                        value: Math.min(1, Math.max(0, 1 - e / 20)),
                        immediate: !0
                    }).start()
                }
                renderChannelList() {
                    let {
                        isUnavailable: e,
                        guild: t,
                        selectedChannel: n,
                        enableStudyGroup: s,
                        ...l
                    } = this.props;
                    if (e || null == t) return (0, a.jsx)(eA.default, {
                        withBannerPadding: null != t && null != this.getGuildBannerHash()
                    });
                    {
                        if (t.hasFeature(em.GuildFeatures.HUB) && !s) return (0, a.jsx)("div", {
                            className: ev.hubContainer,
                            children: (0, a.jsx)(V.default, {
                                guild: t,
                                channel: null != n ? n : ei.default.getDefaultChannel(t.id)
                            })
                        });
                        let e = t.id === eR.FAVORITES_RAW_GUILD_ID ? eh.FavoritesChannelList : eh.GuildChannelList;
                        return (0, a.jsx)(e, {
                            guild: t,
                            ...l,
                            guildBanner: this.getGuildBannerHash(),
                            hasGuildSubheader: this.state.hasGuildSubheader,
                            onScroll: null != t && (null != this.getGuildBannerHash() || t.hasCommunityInfoSubheader()) ? this.pinBannerOrGuildInfo : null
                        })
                    }
                }
                renderFooter() {
                    let {
                        selectedChannelId: e,
                        shouldRenderBashOutCoachMark: t,
                        shouldRenderGarticPhoneCoachMark: n,
                        shouldRenderActivitiesGameNightCoachMark: s,
                        isEligibleForClipsPremiumEarlyAccessCoachmark: l
                    } = this.props, i = [];
                    return t && i.push(c.DismissibleContent.BASH_OUT_COACH_MARK), n && i.push(c.DismissibleContent.ACTIVITY_COACH_MARK_GARTIC_PHONE), s && i.push(c.DismissibleContent.ACTIVITIES_COACH_MARK_GAME_NIGHT), l && i.push(c.DismissibleContent.CLIPS_GUILD_PANEL_PREMIUM_EARLY_ACCESS_COACHMARK), (0, a.jsx)(D.default, {
                        contentTypes: i,
                        children: t => {
                            let {
                                visibleContent: n,
                                markAsDismissed: s
                            } = t;
                            switch (n) {
                                case c.DismissibleContent.BASH_OUT_COACH_MARK:
                                    return (0, a.jsx)(eI.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: s,
                                        tutorialType: eI.TutorialType.BASH_OUT
                                    });
                                case c.DismissibleContent.ACTIVITY_COACH_MARK_GARTIC_PHONE:
                                    return (0, a.jsx)(eI.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: s,
                                        tutorialType: eI.TutorialType.GARTIC_PHONE
                                    });
                                case c.DismissibleContent.ACTIVITIES_COACH_MARK_GAME_NIGHT:
                                    return (0, a.jsx)(eI.EmbeddedActivityTutorial, {
                                        channelId: null != e ? e : void 0,
                                        markAsDismissed: s,
                                        tutorialType: eI.TutorialType.GAME_NIGHT
                                    });
                                case c.DismissibleContent.CLIPS_GUILD_PANEL_PREMIUM_EARLY_ACCESS_COACHMARK:
                                    return (0, a.jsx)(L.default, {
                                        markAsDismissed: s
                                    });
                                default:
                                    return (0, a.jsx)(a.Fragment, {})
                            }
                        }
                    })
                }
                render() {
                    let {
                        guild: e,
                        FooterAnalyticsLocationProvider: t
                    } = this.props;
                    return (0, a.jsxs)("nav", {
                        className: ev.container,
                        onContextMenu: this.handleContextMenu,
                        "aria-label": eL.default.Messages.GUILD_SIDEBAR_A11Y_LABEL.format({
                            guildName: null != e ? e.toString() : ""
                        }),
                        children: [null != e && this.renderGuildHeader(this.state.hasGuildSubheader), null != e && (0, a.jsx)(eN.default, {
                            guild: e,
                            setHasSubheader: e => this.setState({
                                hasGuildSubheader: e
                            })
                        }), this.renderChannelList(), (0, a.jsx)(t, {
                            children: this.renderFooter()
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.historyUnlisten = () => {}, this.showTimeout = new E.Timeout, this.state = {
                        controller: new u.Controller({
                            value: 1,
                            immediate: !0
                        }),
                        renderBanner: !1,
                        bannerVisible: !1,
                        communityInfoVisible: !1,
                        shouldShowSubscribeTooltip: !1,
                        bannerVisibleHeight: 88,
                        hasGuildSubheader: !1
                    }, this.handleHistoryChange = e => {
                        null != e.state && e.state.shouldShowSubscribeTooltip && this.showTimeout.start(1e3, () => this.setState({
                            shouldShowSubscribeTooltip: !0
                        }))
                    }, this.handleHeaderMenuToggle = e => {
                        let {
                            isHeaderPopoutOpen: t
                        } = this.props;
                        e.stopPropagation(), (0, x.showGuildHeaderPopout)(!t), (0, Q.dismissPremiumTutorialTooltip)(c.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP), this.closeAllHeaderNotices()
                    }, this.handleContextMenu = e => {
                        let {
                            guild: t
                        } = this.props;
                        null != t && (0, C.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("358060").then(n.bind(n, "358060"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }, this.handleHeaderContextMenu = e => {
                        let {
                            guild: t
                        } = this.props;
                        null != t && (0, C.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("374705").then(n.bind(n, "374705"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }, this.closeAllHeaderNotices = () => {
                        this.handleCloseSubscribeTooltip(), this.handleCloseTemplateDirtyTooltip(), this.handleCloseStudentHubPrivacySettingsTooltip()
                    }, this.handleCloseStudentHubPrivacySettingsTooltip = () => {
                        var e;
                        let t = (0, P.isDismissibleContentDismissed)(c.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP),
                            n = null === (e = this.props.guild) || void 0 === e ? void 0 : e.hasFeature(em.GuildFeatures.HUB);
                        !t && n && (0, P.markDismissibleContentAsDismissed)(c.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP, {
                            dismissAction: eg.ContentDismissActionType.AUTO
                        })
                    }, this.handleCloseSubscribeTooltip = () => {
                        this.showTimeout.stop(), this.state.shouldShowSubscribeTooltip && this.setState({
                            shouldShowSubscribeTooltip: !1
                        })
                    }, this.handleCloseTemplateDirtyTooltip = () => {
                        let {
                            guild: e,
                            showGuildTemplateDirtyTooltip: t
                        } = this.props;
                        null != e && t && k.default.hideGuildTemplateDirtyTooltip(e.id)
                    }, this.renderMenuPopout = async () => {
                        let {
                            default: e
                        } = await n.el("992996").then(n.bind(n, "992996"));
                        return t => {
                            let {
                                closePopout: n
                            } = t, {
                                guild: s
                            } = this.props;
                            return null != s && (0, a.jsx)(e, {
                                onClose: n,
                                guild: s
                            })
                        }
                    }, this.renderGuildHeaderUpsellPopout = e => {
                        let {
                            showGuildBoostingProgressBarUpsell: t,
                            showGuildBoostingProgressBarSizeUpsell: n,
                            showRoleSubscriptionUpsell: s,
                            showDiscoveryTooltip: l,
                            showInviteSplashUpsell: i,
                            showDiscoveryLandingPageSettingsUpsell: r,
                            showHubPrivacySettingsTooltip: o,
                            showActiveThreadsNotice: u,
                            showGuildSoundboardPermissionUpsell: d,
                            showMediaChannelUpsell: E,
                            showTierTemplatesUpsell: f,
                            showInventoryGuildSettingsModminCoachmark: _,
                            guild: C,
                            theme: h
                        } = this.props;
                        if (null == C) return this.renderGuildHeaderDropdownButton(e);
                        let I = [];
                        return (o && I.push(c.DismissibleContent.STUDENT_HUB_PRIVACY_SETTINGS_TOOLTIP), u && I.push(c.DismissibleContent.GUILD_HEADER_ACTIVE_THREADS_NOTICE), t && I.push(c.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS), n && I.push(c.DismissibleContent.GUILD_HEADER_PROGRESS_BAR_SIZE_COACH_MARK), s && I.push(c.DismissibleContent.GUILD_HEADER_ROLE_SUBSCRIPTION_UPSELL), d && I.push(c.DismissibleContent.GUILD_HEADER_SOUNDBOARD_PERMISSION), i && I.push(c.DismissibleContent.GUILD_HEADER_INVITE_SPLASH), l && I.push(c.DismissibleContent.GUILD_HEADER_SERVER_DISCOVERY_TOOLTIP), r && I.push(c.DismissibleContent.GUILD_DISCOVERY_LANDING_PAGE_SETTINGS_UPSELL), 0 === I.length) ? this.renderGuildHeaderDropdownButton(e) : (E && I.push(c.DismissibleContent.MEDIA_CHANNEL_UPSELL), f && I.push(c.DismissibleContent.SERVER_SUBSCRIPTION_TIER_TEMPLATE_UPSELL), _ && I.push(c.DismissibleContent.INVENTORY_GUILD_SETTINGS_MODMIN_COACHMARK), (0, a.jsx)(eS.default, {
                            contentTypes: I,
                            theme: h,
                            guild: C,
                            renderGuildHeaderDropdownButton: () => this.renderGuildHeaderDropdownButton(e)
                        }))
                    }, this.renderGuildHeaderDropdownButton = e => {
                        let {
                            guild: t,
                            shouldShowBoostingHighlight: n,
                            isTutorialHighlightDismissed: s,
                            isBoostingFlowDismissed: l
                        } = this.props, {
                            enabled: r
                        } = K.default.getCurrentConfig({
                            location: "91c8a9_1"
                        }, {
                            autoTrackExposure: !1
                        }), o = n && !s && !l;
                        return (0, a.jsx)(q.PremiumTutorialSubstep, {
                            substeps: [eO.PremiumTutorialSubsteps.BOOSTING_GUILD_MENU_ITEM],
                            disableFlow: r && !e || null == t,
                            tooltipPosition: "right",
                            tooltipSpacingRight: 16,
                            tooltipSpacingBottom: 16,
                            onNext: () => {
                                null != t && (0, U.openGuildBoostingMarketingModal)({
                                    guildId: t.id,
                                    location: {
                                        section: em.AnalyticsSections.GUILD_HEADER_POPOUT
                                    }
                                })
                            },
                            disableHighlight: !0,
                            children: t => (0, a.jsx)("div", {
                                className: i({
                                    [ev.dropdownWrapperHighlighted]: o
                                }),
                                children: (0, a.jsx)(h.default, {
                                    open: e,
                                    className: ev.dropdownButton,
                                    withHighlight: o
                                })
                            })
                        })
                    }, this.pinBannerOrGuildInfo = e => {
                        let {
                            scrollTop: t
                        } = e;
                        this.setAnimatedValue(t)
                    }
                }
            }

            function ex(e) {
                var t;
                let {
                    guildId: n,
                    hideSelectedChannel: l,
                    selectedChannelId: i
                } = e, r = (0, d.useStateFromStores)([eo.default], () => eo.default.getGuild(n));
                (0, T.useGlobalTriggerDebugging)(n);
                let u = (0, y.default)(n),
                    E = (0, d.useStateFromStores)([es.default], () => es.default.getGuildDimensions(n).scrollTo),
                    _ = (0, d.useStateFromStores)([ec.default], () => ec.default.getChannelId()),
                    [C, h, L] = (0, d.useStateFromStoresArray)([ed.default], () => [ed.default.can(em.Permissions.MANAGE_GUILD, r), ed.default.can(em.Permissions.MANAGE_ROLES, r), ed.default.can(em.Permissions.MANAGE_THREADS, r)]),
                    D = (0, d.useStateFromStores)([el.default], () => el.default.isUnavailable(n)),
                    U = (0, d.useStateFromStores)([ef.default], () => ef.default.getCurrentUser()),
                    k = (0, d.useStateFromStores)([et.default], () => et.default.darkSidebar ? em.ThemeTypes.DARK : et.default.theme),
                    {
                        enableStudyGroup: V
                    } = (0, H.useHubStudyGroupExperiment)(r),
                    K = (0, M.default)(e => e.currentlyShown.has(c.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION)),
                    [q, Q] = s.useState(!K),
                    Z = (0, S.default)(n),
                    {
                        AnalyticsLocationProvider: J
                    } = (0, g.default)(p.default.GUILD_HEADER),
                    {
                        AnalyticsLocationProvider: ee
                    } = (0, g.default)(p.default.GUILD_CHANNEL_LIST_FOOTER);
                s.useEffect(() => {
                    n !== Z && Q(!K)
                }, [n, Z, K]);
                let [ei, eh] = (0, M.default)(e => [ep.CHANNEL_NOTICES.some(t => e.currentlyShown.has(t.dismissibleContentType)), e.currentlyShownGroup.has(eg.DismissibleContentGroupName.GUILD_HEADER_TOOLTIPS)]), eI = (0, b.useIsGuildDismissibleContentChannelNoticeShown)(n), eT = (0, O.default)(r), eS = (0, f.useModalsStore)(f.hasAnyModalOpenSelector), eN = (0, d.useStateFromStores)([eu.default], () => eu.default.hasLayers()), eA = (0, d.useStateFromStores)([$.default], () => $.default.shouldShow(eP)), eR = C && (null == r ? void 0 : r.premiumProgressBarEnabled) === !1 && !eC.ProcessArgs.isDisallowPopupsSet(), eL = (0, d.useStateFromStores)([er.default], () => er.default.getMemberCount(n)), ev = C && null != eL && eL >= 30 && (null == r ? void 0 : r.premiumProgressBarEnabled) === !1 && !eC.ProcessArgs.isDisallowPopupsSet(), eM = h && null != r && (r.hasFeature(em.GuildFeatures.COMMUNITY) || null != eL && eL > 50), eD = (0, w.default)(n), ex = (0, v.useLowerMemberCountRequirements)(n), eU = (null == r ? void 0 : r.hasFeature(em.GuildFeatures.HUB)) === !0, eb = C && (null == r ? void 0 : r.hasFeature(em.GuildFeatures.DISCOVERABLE)) === !0, eG = (0, R.useBlockedPaymentsConfig)(), ej = (C || (null == r ? void 0 : r.premiumTier) === em.BoostedGuildTiers.NONE) && !eC.ProcessArgs.isDisallowPopupsSet() && !eG, ew = (0, d.useStateFromStores)([F.default, eu.default], () => null != r && null != U && C && !eu.default.hasLayers() && F.default.shouldShowGuildTemplateDirtyTooltip(n)), ek = (0, d.useStateFromStores)([en.default], () => en.default.getChannel(i)), {
                    isPopoutOpen: eF
                } = (0, x.useGuildHeaderPopoutStore)(), eB = null !== (t = null == r ? void 0 : r.hasFeature(em.GuildFeatures.COMMUNITY)) && void 0 !== t && t, eH = (0, d.useStateFromStores)([X.default], () => !o.isEmpty(X.default.getThreadsForGuild(n))), eV = (0, z.useIsPremiumTutorialEnabled)("ConnectedGuildSidebar"), eY = (0, P.useIsDismissibleContentDismissed)(eO.PremiumTutorialSteps.BOOSTING), {
                    enabled: eW
                } = m.BashOutCoachMarkExperiment.useExperiment({
                    location: "91c8a9_2"
                }, {
                    autoTrackExposure: !0
                }), eK = e_.default.canUsePremiumActivities(U), ez = e_.default.isNewUser(U), eq = q && eW && eK, {
                    enabled: eQ
                } = (0, I.useBurstReactionsExperiment)(n), eZ = (0, I.useBurstReactionsUserExperiment)(), eX = q && (eQ || eZ) && !ez, {
                    enabled: eJ
                } = A.ActivityCoachMarkGarticPhoneExperiment.useExperiment({
                    location: "91c8a9_3"
                }, {
                    autoTrackExposure: !0
                }), e$ = q && eJ, {
                    enabled: e0
                } = N.ActivitiesGameNightExperiment.useExperiment({
                    location: "91c8a9_4"
                }, {
                    autoTrackExposure: !0
                }), e1 = q && e0, e2 = (0, d.useStateFromStores)([eE.default], () => eE.default.getVisibleGame()), e4 = (0, d.useStateFromStores)([ea.default], () => ea.default.hasConsented(em.Consents.PERSONALIZATION));
                (0, G.default)(r);
                let e9 = (0, P.useIsDismissibleContentDismissed)(c.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP),
                    e7 = (0, Y.default)(n),
                    e8 = (0, j.default)(n),
                    e3 = (0, W.useHasInventoryGuildSettingsPermission)(r),
                    {
                        enableHangStatus: e6
                    } = B.HangStatusExperiment.useExperiment({
                        guildId: n,
                        location: "GuildSidebar"
                    });
                return (0, a.jsx)(ey, {
                    guildId: n,
                    hideSelectedChannel: l,
                    guild: r,
                    scrollToChannel: E,
                    selectedChannelId: l ? null : i,
                    selectedChannel: ek,
                    selectedVoiceChannelId: _,
                    voiceStates: u,
                    isUnavailable: D,
                    theme: k,
                    user: U,
                    hasChannelNotice: null != eT || ei || eI,
                    anyLayerOpen: eS || eN,
                    showGuildBoostingProgressBarUpsell: eR,
                    showGuildBoostingProgressBarSizeUpsell: ev,
                    showInviteSplashUpsell: ej,
                    showDiscoveryLandingPageSettingsUpsell: eb,
                    showGuildHeaderTutorial: eA,
                    showGuildTemplateDirtyTooltip: ew,
                    showRoleSubscriptionUpsell: eD,
                    showDiscoveryTooltip: ex,
                    showHubPrivacySettingsTooltip: eU,
                    showNewUnreadsBar: eB,
                    showActiveThreadsNotice: L && null != eL && eL >= 200 && eH,
                    showGuildSoundboardPermissionUpsell: eM,
                    showMediaChannelUpsell: e7,
                    showInventoryGuildSettingsModminCoachmark: e3,
                    showTierTemplatesUpsell: e8,
                    isHeaderPopoutOpen: eF,
                    enableStudyGroup: V,
                    isGuildHeaderDismissibleTooltipShown: eh,
                    canShowCoachMarkAtBottom: q,
                    HeaderAnalyticsLocationProvider: J,
                    FooterAnalyticsLocationProvider: ee,
                    shouldShowBoostingHighlight: eV,
                    isBoostingFlowDismissed: eY,
                    shouldRenderBashOutCoachMark: eq,
                    shouldRenderGarticPhoneCoachMark: e$,
                    shouldRenderActivitiesGameNightCoachMark: e1,
                    isEligibleForClipsPremiumEarlyAccessCoachmark: null != e2 && e4,
                    isTutorialHighlightDismissed: e9,
                    shouldRenderBurstCoachmark: eX,
                    enableHangStatus: e6
                })
            }
        },
        89956: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("640322"),
                i = n("477635");

            function r(e) {
                let {
                    guild: t,
                    setHasSubheader: n
                } = e, r = s.useRef(null);
                return s.useLayoutEffect(() => {
                    let e = r.current;
                    null != e && n(e.childNodes.length > 0)
                }), (0, a.jsx)("div", {
                    className: i.container,
                    ref: r,
                    children: (0, a.jsx)(l.default, {
                        guild: t
                    })
                })
            }
        },
        344696: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("592407"),
                l = n("252931"),
                i = n("5667"),
                r = n("49111"),
                o = n("994428"),
                u = n("782340"),
                d = n("147070"),
                c = n("696414"),
                E = e => {
                    let {
                        guild: t,
                        markAsDismissed: n
                    } = e, {
                        getNewSettingsDescription: E
                    } = (0, l.useInventoryGuildSettingsExperiment)({
                        guildId: t.id
                    });
                    return (0, a.jsx)(i.default, {
                        header: u.default.Messages.INVENTORY_NEW_SETTING,
                        content: E(),
                        buttonCTA: u.default.Messages.GOT_IT,
                        asset: (0, a.jsx)("img", {
                            alt: "Nelly the hamster holding a wrench",
                            src: c,
                            className: d.tooltipImage
                        }),
                        onClick: () => n(o.ContentDismissActionType.UNKNOWN),
                        onSecondaryClick: () => {
                            s.default.open(t.id, r.GuildSettingsSections.EMOJI), n(o.ContentDismissActionType.UNKNOWN)
                        },
                        secondaryButtonCTA: u.default.Messages.INVENTORY_VIEW_SETTING,
                        markAsDismissed: () => n(o.ContentDismissActionType.UNKNOWN)
                    })
                }
        },
        421595: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("244510");
            let r = () => (0, a.jsx)("div", {
                    className: i.spacer
                }),
                o = () => (0, a.jsx)("div", {
                    className: i.category
                }),
                u = e => {
                    let {
                        width: t
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i.channel,
                        children: [(0, a.jsx)("div", {
                            className: i.channelIcon
                        }), (0, a.jsx)("div", {
                            className: i.channelName,
                            style: {
                                width: "".concat(t, "px")
                            }
                        })]
                    })
                };
            var d = e => {
                let {
                    withBannerPadding: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(i.container, {
                        [i.bannerPadding]: t
                    }),
                    children: [(0, a.jsx)(o, {}), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 74
                    }), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 70
                    }), (0, a.jsx)(u, {
                        width: 112
                    }), (0, a.jsx)(u, {
                        width: 175
                    }), (0, a.jsx)(r, {}), (0, a.jsx)(o, {}), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 74
                    }), (0, a.jsx)(u, {
                        width: 100
                    }), (0, a.jsx)(u, {
                        width: 70
                    }), (0, a.jsx)(u, {
                        width: 112
                    }), (0, a.jsx)(u, {
                        width: 56
                    })]
                })
            }
        },
        518953: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("446674"),
                s = n("95410"),
                l = n("913144");
            let i = "hasSeenGuildTemplatePromotionTooltip",
                r = {},
                o = !0 === s.default.get(i);

            function u(e) {
                let {
                    guildId: t
                } = e;
                r = {
                    ...r,
                    [t]: !1
                }
            }
            class d extends a.default.Store {
                shouldShowGuildTemplateDirtyTooltip(e) {
                    var t;
                    return null !== (t = r[e]) && void 0 !== t && t
                }
                shouldShowGuildTemplatePromotionTooltip() {
                    return !o
                }
            }
            d.displayName = "GuildTemplateTooltipStore";
            var c = new d(l.default, {
                GUILD_TEMPLATE_DIRTY_TOOLTIP_REFRESH: function(e) {
                    let {
                        guildTemplate: t
                    } = e;
                    r = {
                        ...r,
                        [t.source_guild_id]: t.is_dirty || !1
                    }
                },
                GUILD_TEMPLATE_PROMOTION_TOOLTIP_HIDE: function() {
                    s.default.set(i, !0), o = !0
                },
                GUILD_TEMPLATE_SYNC_SUCCESS: function(e) {
                    r = {
                        ...r,
                        [e.guildTemplate.source_guild_id]: !1
                    }
                },
                GUILD_TEMPLATE_DIRTY_TOOLTIP_HIDE: u,
                GUILD_TEMPLATE_DELETE_SUCCESS: u
            })
        },
        913645: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("742270"),
                s = n("815157"),
                l = n("391679"),
                i = n("523086"),
                r = n("599110"),
                o = n("65300"),
                u = n("883069"),
                d = n("49111");
            let c = "template";
            var E = {
                ...u.default,
                openNativeAppModal(e) {
                    i.default.openNativeAppModal(e, d.RPCCommands.GUILD_TEMPLATE_BROWSER)
                },
                openMobileApp(e, t) {
                    if (null != platform.ua && platform.ua.toLowerCase().indexOf("googlebot") > -1) return;
                    let n = null != e ? (0, a.getGuildTemplateDynamicLinkTemplate)(e) : (0, a.getDefaultDynamicLinkTemplate)(),
                        i = (0, s.generateAttemptId)(),
                        u = (0, s.default)(n, {
                            utmSource: c,
                            fingerprint: t,
                            attemptId: i
                        });
                    r.default.track(d.AnalyticEvents.DEEP_LINK_CLICKED, {
                        fingerprint: (0, l.maybeExtractId)(t),
                        attempt_id: i,
                        source: c,
                        guild_template_code: e
                    }), o.default.launch(u, () => {})
                }
            }
        },
        535859: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("925749"),
                r = n("342845"),
                o = n("36553");

            function u(e) {
                let {
                    activity: t,
                    className: n,
                    iconClassName: s
                } = e;
                if (null == t) return null;
                let u = (0, i.getHangStatusText)(t);
                return (0, a.jsxs)("div", {
                    className: l(o.container, n),
                    children: [(0, a.jsx)(r.default, {
                        hangStatusActivity: t,
                        className: l(o.emoji, s)
                    }), null != u && u.length > 0 ? u : null]
                })
            }
        },
        488284: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsHolidayRingtoneEligible: function() {
                    return s
                }
            }), n("424973"), n("446674"), n("193990"), n("845579"), n("385649"), n("599110");
            var a = n("684581");

            function s() {
                let e = a.default.useIsEligible();
                return e && null != a.default.ringtone && null != a.default.soundSettingsLabel
            }
            n("49111"), n("782340")
        },
        236199: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("913144"),
                s = n("597517"),
                l = n("533613"),
                i = {
                    init() {
                        a.default.subscribe("VOICE_CHANNEL_SELECT", e => {
                            let {
                                channelId: t
                            } = e;
                            null == t && s.hideHotspot(l.HotspotLocations.VOICE_PANEL_INTRODUCTION)
                        })
                    }
                }
        },
        341563: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useHubStudyGroupExperiment: function() {
                    return r
                }
            });
            var a = n("884691"),
                s = n("862205"),
                l = n("49111");
            let i = (0, s.createExperiment)({
                    kind: "guild",
                    id: "2021-10_study_group",
                    label: "Student hub study group",
                    defaultConfig: {
                        enableStudyGroup: !1
                    },
                    treatments: [{
                        id: 1,
                        label: "Enables study group sidebar",
                        config: {
                            enableStudyGroup: !0
                        }
                    }]
                }),
                r = e => {
                    var t;
                    a.useEffect(() => {
                        null != e && e.hasFeature(l.GuildFeatures.HUB) && i.trackExposure({
                            guildId: e.id,
                            location: "467c32_1"
                        })
                    }, [e]);
                    let n = i.useExperiment({
                        guildId: null !== (t = null == e ? void 0 : e.id) && void 0 !== t ? t : "",
                        location: "467c32_2"
                    }, {
                        autoTrackExposure: !1,
                        disable: null == e || !e.hasFeature(l.GuildFeatures.HUB)
                    });
                    return n
                }
        },
        973191: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("782340"),
                i = n("672639"),
                r = e => {
                    let {
                        hasHub: t
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: i.container,
                        children: [(0, a.jsx)("div", {
                            className: i.iconContainer,
                            children: (0, a.jsx)("div", {
                                className: i.icon
                            })
                        }), (0, a.jsx)(s.Text, {
                            color: "header-primary",
                            variant: "text-lg/semibold",
                            className: i.header,
                            children: t ? l.default.Messages.HUB_EMAIL_CONNECTION_ADD_HEADER : l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_HEADER
                        }), (0, a.jsx)(s.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            className: i.description,
                            children: t ? l.default.Messages.HUB_EMAIL_CONNECTION_ADD_DESCRIPTION : l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_CARD_DESCRIPTION
                        }), (0, a.jsx)("div", {
                            className: i.gap
                        }), (0, a.jsx)(s.Button, {
                            size: s.Button.Sizes.LARGE,
                            color: t ? s.Button.Colors.PRIMARY : s.Button.Colors.GREEN,
                            onClick: () => (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("927475").then(n.bind(n, "927475"));
                                return t => (0, a.jsx)(e, {
                                    ...t
                                })
                            }),
                            children: (0, a.jsx)(s.Text, {
                                variant: "text-sm/semibold",
                                className: i.addButton,
                                color: "none",
                                children: t ? l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_ANOTHER : l.default.Messages.HUB_EMAIL_CONNECTION_JOIN_MY_SCHOOOL
                            })
                        })]
                    })
                }
        },
        143217: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("851387"),
                r = n("161778"),
                o = n("465126"),
                u = n("973191"),
                d = n("782340"),
                c = n("683449"),
                E = e => {
                    let {
                        guilds: t
                    } = e, n = (0, s.useStateFromStores)([r.default], () => r.default.theme), E = t.map(e => (0, a.jsx)(o.default, {
                        className: c.guildCard,
                        onView: () => i.default.transitionToGuildSync(e.id),
                        guild: {
                            ...e,
                            presenceCount: void 0,
                            memberCount: void 0,
                            premiumSubscriptionCount: void 0,
                            emojis: void 0
                        },
                        theme: n
                    }, e.id));
                    return (0, a.jsx)("section", {
                        className: c.guildListSection,
                        children: t.length > 0 ? (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(l.Heading, {
                                className: c.title,
                                variant: "heading-lg/semibold",
                                children: d.default.Messages.YOUR_HUB
                            }), (0, a.jsxs)("div", {
                                className: c.guildList,
                                children: [E, (0, a.jsx)(u.default, {
                                    hasHub: !0
                                })]
                            })]
                        }) : (0, a.jsx)("div", {
                            className: c.guildList,
                            children: (0, a.jsx)(u.default, {
                                hasHub: !1
                            })
                        })
                    })
                }
        },
        40546: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("139321"),
                r = n("269596"),
                o = n("745633"),
                u = n("11056"),
                d = n("447621"),
                c = n("782340"),
                E = n("763065"),
                f = e => {
                    let {
                        handleCategorySelect: t,
                        shouldDisplaySelectedCategory: n,
                        currentCategoryId: f
                    } = e, _ = (0, s.useStateFromStores)([r.default], () => r.default.hasHotspot(i.HotspotLocations.HUB_NEW));
                    return (0, a.jsx)(u.default, {
                        avatar: (0, a.jsx)(o.default, {}),
                        name: c.default.Messages.HUB_SCHOOL_HUBS,
                        focusProps: {
                            offset: {
                                right: 4,
                                top: 1,
                                bottom: 1
                            }
                        },
                        onClick: () => {
                            t(d.DISCORD_HUB_ID), (0, i.hideHotspot)(i.HotspotLocations.HUB_NEW)
                        },
                        wrapContent: !0,
                        selected: n && d.DISCORD_HUB_ID === f,
                        className: E.categoryItem,
                        selectedClassName: E.selectedCategoryItem,
                        innerClassName: E.itemInner,
                        children: _ && (0, a.jsx)("div", {
                            className: E.new,
                            children: (0, a.jsx)(l.Text, {
                                color: "none",
                                variant: "text-xs/semibold",
                                className: E.newText,
                                children: c.default.Messages.NEW
                            })
                        })
                    }, d.DISCORD_HUB_ID)
                }
        },
        349682: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("69927"),
                r = n("794818"),
                o = n("244922"),
                u = n("143217"),
                d = n("447621"),
                c = n("782340"),
                E = n("254514"),
                f = n("152985"),
                _ = e => {
                    let {
                        loadId: t
                    } = e, n = (0, o.default)();
                    return s.useEffect(() => {
                        (0, r.trackDiscoveryViewed)({
                            loadId: t,
                            gamesYouPlayGuilds: [],
                            allGuilds: [],
                            categoryId: d.DISCORD_HUB_ID
                        })
                    }, [t]), (0, i.usePageTitle)({
                        subsection: c.default.Messages.HUB_SCHOOL_HUBS,
                        location: c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE
                    }), (0, a.jsx)(l.Scroller, {
                        className: E.scroller,
                        children: (0, a.jsxs)("div", {
                            className: E.viewWrapper,
                            children: [(0, a.jsxs)("div", {
                                className: E.headerContainer,
                                children: [(0, a.jsx)("img", {
                                    alt: "",
                                    className: E.headerImage,
                                    src: f
                                }), (0, a.jsxs)("div", {
                                    className: E.headerContent,
                                    children: [(0, a.jsx)(l.Heading, {
                                        className: E.headerText,
                                        variant: "heading-xl/semibold",
                                        children: c.default.Messages.HUB_DIRECTORY_SEARCH_TITLE
                                    }), (0, a.jsx)(l.Text, {
                                        className: E.headerDescription,
                                        variant: "text-md/normal",
                                        color: "none",
                                        children: c.default.Messages.HUB_DIRECTORY_SEARCH_SUBTITLE
                                    })]
                                })]
                            }), (0, a.jsx)(u.default, {
                                guilds: n
                            }), (0, a.jsx)("div", {
                                className: E.divider
                            }), (0, a.jsx)(l.Text, {
                                className: E.footerDescription,
                                variant: "text-md/medium",
                                color: "header-secondary",
                                children: c.default.Messages.HUB_DISCOVERY_FOOTER_DESCRIPTION
                            })]
                        })
                    })
                }
        },
        273457: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("222007"), n("506083");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("970728"),
                r = n("393414"),
                o = n("305961"),
                u = n("337543"),
                d = n("554054"),
                c = n("831588"),
                E = n("927475"),
                f = n("49111"),
                _ = n("289382"),
                C = n("694907"),
                h = e => {
                    let {
                        guildId: t,
                        inviteCode: n
                    } = e, [h, I] = s.useState(_.WaveStates.INITIAL), [T, S] = s.useState(null != n);
                    s.useEffect(() => {
                        null != n && i.default.resolveInvite(n, "Hub").finally(() => S(!1))
                    }, [n]);
                    let N = (0, l.useStateFromStores)([u.default], () => null != n ? u.default.getInvite(n) : null),
                        A = (0, l.useStateFromStores)([o.default], () => o.default.getGuild(t));
                    s.useEffect(() => {
                        null != A && (0, r.transitionTo)(f.Routes.CHANNEL(t))
                    }, [A, t]);
                    let m = s.useCallback(e => {
                            I(t => Math.max(t, e))
                        }, []),
                        p = (0, c.getArtForPath)();
                    return (0, a.jsx)("div", {
                        className: C.page,
                        children: (0, a.jsxs)(d.default, {
                            embedded: !0,
                            splash: p,
                            waveState: h,
                            showLogo: !1,
                            updateWaveState: m,
                            children: [(0, a.jsx)("div", {
                                className: C.dragRegion
                            }), (0, a.jsx)("div", {
                                className: C.contentWrapper,
                                children: !T && (0, a.jsx)(E.HubEmailConnectionModalView, {
                                    invite: N
                                })
                            })]
                        })
                    })
                }
        },
        79176: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("963662"),
                i = n("49111"),
                r = n("994428"),
                o = n("782340"),
                u = n("843528");

            function d(e) {
                let {
                    guild: t,
                    markAsDismissed: d
                } = e;
                return (0, a.jsx)(l.default, {
                    guild: t,
                    onDismissed: () => d(r.ContentDismissActionType.UNKNOWN),
                    onClick: function() {
                        (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("927475").then(n.bind(n, "927475"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        })
                    },
                    message: o.default.Messages.HUB_LINK_CHANNEL_NOTICE_BODY,
                    cta: o.default.Messages.LEARN_MORE,
                    trackingSource: i.ChannelNoticeCtaSources.HUB_LINK_NOTICE,
                    type: i.ChannelNoticeTypes.HUB_LINK,
                    image: u
                })
            }
        },
        465511: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("994428"),
                i = n("782340"),
                r = n("617979");

            function o(e) {
                let {
                    markAsDismissed: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: r.container,
                    children: [(0, a.jsx)("div", {
                        className: r.pointer
                    }), (0, a.jsx)(s.Text, {
                        variant: "text-sm/normal",
                        className: r.content,
                        children: i.default.Messages.HUB_PRIVACY_SETTINGS_TOOLTIP
                    }), (0, a.jsx)(s.Button, {
                        look: s.Button.Looks.INVERTED,
                        fullWidth: !0,
                        onClick: () => {
                            t(l.ContentDismissActionType.AUTO)
                        },
                        children: i.default.Messages.GOT_IT
                    })]
                })
            }
        },
        244922: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            }), n("222007");
            var a = n("446674"),
                s = n("305961"),
                l = n("49111");

            function i() {
                return (0, a.useStateFromStores)([s.default], () => {
                    let e = s.default.getGuilds();
                    return Object.entries(e).filter(e => {
                        let [t, n] = e;
                        return n.hasFeature(l.GuildFeatures.HUB)
                    }).map(e => {
                        let [t, n] = e;
                        return n
                    })
                })
            }
        },
        986321: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("301165"),
                l = n("446674"),
                i = n("139321"),
                r = n("923959"),
                o = n("957255"),
                u = n("119153"),
                d = n("602632"),
                c = n("723872"),
                E = n("49111");

            function f(e) {
                let {
                    channel: t,
                    guild: n
                } = e, r = (0, l.useStateFromStores)([i.HotspotStore], () => i.HotspotStore.hasHotspot(i.HotspotLocations.HUB_STUDY_ROOM_NOTICE)), o = (0, c.useConnectedInCurrentHub)(t.guild_id), E = (0, s.useSpring)({
                    maxHeight: o ? 0 : 300,
                    overflow: "hidden",
                    delay: 400
                });
                return (0, a.jsx)(s.animated.div, {
                    style: E,
                    children: r ? (0, a.jsx)(u.default, {
                        channel: t,
                        guild: n
                    }) : (0, a.jsx)(d.default, {
                        name: "\uD83D\uDCDA☕ ".concat(t.name),
                        channel: t
                    })
                })
            }
            var _ = function(e) {
                let {
                    guild: t
                } = e, n = (0, l.useStateFromStores)([r.default], () => {
                    let e = r.default.getChannels(t.id),
                        n = e[r.GUILD_VOCAL_CHANNELS_KEY];
                    return n[0]
                }), s = (0, l.useStateFromStores)([o.default], () => null != n && o.default.can(E.Permissions.CONNECT, n.channel));
                return t.hasFeature(E.GuildFeatures.HUB) && null != n && s ? (0, a.jsx)(f, {
                    channel: n.channel,
                    guild: t
                }) : null
            }
        },
        119153: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("963662"),
                l = n("139321"),
                i = n("393414"),
                r = n("716214"),
                o = n("49111"),
                u = n("782340"),
                d = n("963301"),
                c = e => {
                    let {
                        channel: t,
                        guild: n
                    } = e;
                    return (0, a.jsx)(s.default, {
                        guild: n,
                        onDismissed: () => {
                            (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE)
                        },
                        onClick: () => {
                            (0, l.hideHotspot)(l.HotspotLocations.HUB_STUDY_ROOM_NOTICE), null != t && null != t.getGuildId() && ((0, r.connectAndOpen)(t), (0, i.transitionToGuild)(t.getGuildId(), t.id))
                        },
                        title: u.default.Messages.HUB_STUDY_ROOM_NOTICE_TITLE,
                        message: u.default.Messages.HUB_STUDY_ROOM_NOTICE_DESCRIPTION,
                        cta: u.default.Messages.HUB_STUDY_ROOM_NOTICE_VOICE_CTA,
                        image: d,
                        type: o.ChannelNoticeTypes.HUB_STUDY_ROOM
                    })
                }
        },
        602632: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("419830"),
                i = n("153014"),
                r = n("316133"),
                o = n("782340"),
                u = n("916333"),
                d = function(e) {
                    let {
                        name: t,
                        channel: n
                    } = e, d = (0, s.useStateFromStoresArray)([r.default], () => r.default.getVoiceStatesForChannel(n).map(e => {
                        let {
                            user: t
                        } = e;
                        return t
                    }), [n]), c = (0, l.getChannelIconComponent)(n);
                    return (0, a.jsx)(i.GuildNoticeBody, {
                        heading: o.default.Messages.STAGE_CHANNEL_LIVE_NOW,
                        topic: t,
                        location: o.default.Messages.HUB_STUDY_ROOM_VOICE_CHANNEL_TOOLTIP,
                        locationIcon: null != c ? (0, a.jsx)(c, {
                            width: 16,
                            height: 16,
                            className: u.icon
                        }) : null,
                        children: (0, a.jsx)(i.LiveVoiceOrStageChannelNotice, {
                            channel: n,
                            speakers: d,
                            voiceType: i.VoiceChannelType.STUDY_ROOM
                        })
                    })
                }
        },
        519440: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("963662"),
                l = n("592407"),
                i = n("702411"),
                r = n("49111"),
                o = n("782340"),
                u = n("885634");

            function d(e) {
                let {
                    guild: t
                } = e, n = () => i.default.dismissNotice(t.id);
                return (0, a.jsx)(s.default, {
                    guild: t,
                    onDismissed: n,
                    cta: o.default.Messages.CHECK_IT_OUT,
                    message: o.default.Messages.COMMANDS_SCOPE_MIGRATION_ADMIN_NOTICE.format(),
                    type: r.ChannelNoticeTypes.COMMANDS_MIGRATION,
                    image: u,
                    onClick: () => {
                        n(), l.default.open(t.id, r.GuildSettingsSections.INTEGRATIONS)
                    },
                    imageMarginTop: 15,
                    imageMarginX: 22
                })
            }
        },
        470055: function(e, t, n) {
            "use strict";
            let a, s, l, i, r;
            n.r(t), n.d(t, {
                InteractionModalState: function() {
                    return u
                },
                default: function() {
                    return T
                }
            });
            var o, u, d = n("627445"),
                c = n.n(d),
                E = n("446674"),
                f = n("913144"),
                _ = n("819689"),
                C = n("798609"),
                h = n("274800");
            (o = u || (u = {}))[o.IN_FLIGHT = 0] = "IN_FLIGHT", o[o.ERRORED = 1] = "ERRORED", o[o.SUCCEEDED = 2] = "SUCCEEDED";
            class I extends E.default.Store {
                getModalState(e) {
                    return e !== a ? null : s
                }
            }
            I.displayName = "InteractionModalStore";
            var T = new I(f.default, {
                LOGOUT: function() {
                    return a = null, s = null, l = null, i = null, r = null, !0
                },
                INTERACTION_MODAL_CREATE: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return t === r && (_.default.deleteMessage(i, l, !0), l = null, i = null, r = null), !1
                },
                INTERACTION_IFRAME_MODAL_CREATE: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return t === r && (_.default.deleteMessage(i, l, !0), l = null, i = null, r = null), !1
                },
                INTERACTION_QUEUE: function(e) {
                    let {
                        messageId: t,
                        nonce: n,
                        data: o
                    } = e;
                    switch (o.interactionType) {
                        case C.InteractionTypes.APPLICATION_COMMAND:
                            return l = t, i = o.channelId, r = n, !1;
                        case C.InteractionTypes.MODAL_SUBMIT:
                            return c(null == a || 1 === s || 2 === s, "cannot submit multiple modals at once"), a = n, s = 0, setTimeout(() => {
                                a === n && 0 === s && (0, h.setFailed)(n)
                            }, 1e4), !0;
                        default:
                            return !1
                    }
                },
                INTERACTION_SUCCESS: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return null != t && t === a && (s = 2, !0)
                },
                INTERACTION_FAILURE: function(e) {
                    let {
                        nonce: t
                    } = e;
                    return null != t && t === a && (s = 1, !0)
                }
            })
        },
        940035: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            });
            var a = n("913144"),
                s = n("629109"),
                l = n("539405"),
                i = n("987317"),
                r = n("990766"),
                o = n("52289"),
                u = n("316272"),
                d = n("56947"),
                c = n("803725"),
                E = n("374014"),
                f = n("712258"),
                _ = n("393414"),
                C = n("245463"),
                h = n("570413"),
                I = n("373469"),
                T = n("42887"),
                S = n("102985"),
                N = n("860957"),
                A = n("901165"),
                m = n("599110"),
                p = n("360782"),
                g = n("49111"),
                R = n("353927");
            let O = {
                [g.GlobalKeybindActions.TOGGLE_PRIORITY_SPEAKER]: {
                    onTrigger() {},
                    keyEvents: {}
                },
                [g.GlobalKeybindActions.UNASSIGNED]: {
                    onTrigger() {},
                    keyEvents: {}
                },
                [g.GlobalKeybindActions.PUSH_TO_TALK]: {
                    onTrigger(e, t) {
                        T.default.getMode(t.context) === g.InputModes.PUSH_TO_TALK && (O[g.GlobalKeybindActions.PUSH_TO_TALK].isPressed = e, T.default.getMediaEngine().eachConnection(t => t.setForceAudioInput(e, !1), t.context))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [g.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY]: {
                    onTrigger(e) {
                        T.default.getMode() === g.InputModes.PUSH_TO_TALK && (O[g.GlobalKeybindActions.PUSH_TO_TALK_PRIORITY].isPressed = e, T.default.getMediaEngine().eachConnection(t => t.setForceAudioInput(e, !0), R.MediaEngineContextTypes.DEFAULT))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [g.GlobalKeybindActions.PUSH_TO_MUTE]: {
                    onTrigger(e) {
                        if (T.default.getMode() === g.InputModes.VOICE_ACTIVITY) !T.default.isSelfDeaf() && (O[g.GlobalKeybindActions.PUSH_TO_MUTE].isPressed = e, s.default.setTemporarySelfMute(e))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    },
                    isPressed: !1
                },
                [g.GlobalKeybindActions.TOGGLE_MUTE]: {
                    onTrigger: () => s.default.toggleSelfMute(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_DEAFEN]: {
                    onTrigger() {
                        s.default.toggleSelfDeaf()
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_VOICE_MODE]: {
                    onTrigger() {
                        let e = T.default.getMode() === g.InputModes.PUSH_TO_TALK ? g.InputModes.VOICE_ACTIVITY : g.InputModes.PUSH_TO_TALK;
                        s.default.setMode(e)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_OVERLAY]: {
                    onTrigger() {
                        let e = N.default.enabled;
                        l.default.setEnabled(!e)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_OVERLAY_INPUT_LOCK]: {
                    onTrigger(e) {
                        let t = (0, p.default)();
                        null != t && (e ? l.default.setUILocked(!A.default.isUILocked(t), t) : l.default.setInputLocked(!N.default.isInputLocked(t), t))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    }
                },
                [g.GlobalKeybindActions.OVERLAY_ACTIVATE_REGION_TEXT_WIDGET]: {
                    onTrigger() {
                        let e = N.default.getFocusedPID(),
                            t = null != e;
                        null != e && t && A.default.isPinned(g.OverlayWidgets.TEXT) && N.default.isReady(e) && N.default.isInputLocked(e) && l.default.activateRegion(g.OverlayActiveRegions.TEXT_WIDGET)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_GO_LIVE_STREAMING]: {
                    onTrigger() {
                        let e = I.default.getCurrentUserActiveStream();
                        if (null != e) return (0, r.stopStream)((0, E.encodeStreamKey)(e));
                        (0, f.default)()
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.TOGGLE_STREAMER_MODE]: {
                    onTrigger() {
                        o.default.setEnabled(!S.default.enabled)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.NAVIGATE_BACK]: {
                    onTrigger: () => (0, _.back)(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        focused: !0,
                        blurred: !1
                    }
                },
                [g.GlobalKeybindActions.NAVIGATE_FORWARD]: {
                    onTrigger: () => (0, _.forward)(),
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        focused: !0,
                        blurred: !1
                    }
                },
                [g.GlobalKeybindActions.SOUNDBOARD]: {
                    onTrigger: () => {
                        if (!(0, C.canSelectedVoiceChannelUseSoundboard)()) return;
                        let e = (0, p.default)();
                        null != e && (A.default.isUILocked(e) ? (0, h.openSoundboardInOverlay)(!0, e) : (0, h.closeSoundboardInOverlay)(e))
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1
                    }
                },
                [g.GlobalKeybindActions.SOUNDBOARD_HOLD]: {
                    onTrigger: e => {
                        if (!(0, C.canSelectedVoiceChannelUseSoundboard)()) return;
                        let t = (0, p.default)();
                        if (null != t) {
                            e ? (0, h.openSoundboardInOverlay)(!1, t) : (0, h.closeSoundboardInOverlay)(t);
                            return
                        }
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !0
                    }
                },
                [g.GlobalKeybindActions.SAVE_CLIP]: {
                    onTrigger: () => {
                        let e = (0, d.areClipsEnabled)();
                        e && (m.default.track(g.AnalyticEvents.CLIP_SAVE_KEYBIND_PRESSED), (0, c.saveClip)())
                    },
                    keyEvents: {
                        keyup: !1,
                        keydown: !0
                    }
                },
                [g.GlobalKeybindActions.SWITCH_TO_VOICE_CHANNEL]: {
                    onTrigger(e, t) {
                        let {
                            params: {
                                channelId: n
                            }
                        } = t;
                        null != n && i.default.selectVoiceChannel(n)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        blurred: !0,
                        focused: !0
                    }
                },
                [g.GlobalKeybindActions.DISCONNECT_FROM_VOICE_CHANNEL]: {
                    onTrigger() {
                        i.default.selectVoiceChannel(null)
                    },
                    keyEvents: {
                        keyup: !0,
                        keydown: !1,
                        blurred: !0,
                        focused: !0
                    }
                }
            };
            class L extends u.default {
                _initialize() {
                    a.default.wait(() => a.default.dispatch({
                        type: "KEYBINDS_REGISTER_GLOBAL_KEYBIND_ACTIONS",
                        keybinds: O
                    }))
                }
                _terminate() {}
            }
            var v = new L
        },
        363691: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("851387"),
                d = n("393414"),
                c = n("305961"),
                E = n("162771"),
                f = n("531470"),
                _ = n("794818"),
                C = n("267567"),
                h = n("49111"),
                I = n("782340"),
                T = n("600323"),
                S = n("105029"),
                N = () => {
                    let e = (0, r.useStateFromStores)([E.default], () => E.default.getGuildId(), []),
                        t = (0, r.useStateFromStores)([c.default], () => c.default.getGuild(e), [e]),
                        n = (0, r.useStateFromStores)([C.default], () => C.default.getHistorySnapshot(), []),
                        [l, N] = s.useState(!1);
                    if (null == t) return null;
                    let A = async () => {
                        N(!0);
                        try {
                            _.trackGuildJoinClicked(t.id), await u.default.joinGuild(t.id, {
                                source: h.JoinGuildSources.NOTICE_BAR
                            })
                        } catch {
                            N(!1)
                        }
                    };
                    return (0, a.jsxs)("div", {
                        className: i(T.notice, S.notice),
                        children: [(0, a.jsxs)(o.Button, {
                            look: o.Button.Looks.OUTLINED,
                            color: o.Button.Colors.WHITE,
                            size: o.Button.Sizes.NONE,
                            className: i(T.button, T.back),
                            innerClassName: T.iconButton,
                            onClick: () => {
                                let e = (0, d.getHistory)();
                                null != n && null != n.location ? (0, d.replaceWith)({
                                    ...n.location
                                }) : e.goBack()
                            },
                            children: [(0, a.jsx)(f.default, {
                                width: 16,
                                height: 16,
                                className: T.arrow
                            }), I.default.Messages.BACK]
                        }), (0, a.jsx)(o.Text, {
                            className: T.header,
                            variant: "text-sm/normal",
                            children: I.default.Messages.LURKER_MODE_NAG_BAR_HEADER
                        }), (0, a.jsx)(o.Button, {
                            className: T.button,
                            look: o.Button.Looks.OUTLINED,
                            color: o.Button.Colors.WHITE,
                            size: o.Button.Sizes.NONE,
                            submitting: l,
                            onClick: A,
                            children: I.default.Messages.LURKER_MODE_NAG_BAR_BUTTON.format({
                                guild: t.name
                            })
                        })]
                    })
                }
        },
        6895: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("305961"),
                l = n("957255"),
                i = n("690563"),
                r = n("49111");

            function o(e) {
                let t = (0, a.useStateFromStores)([s.default], () => s.default.getGuild(e)),
                    n = (0, i.useGuildEligibleForMediaChannels)(t),
                    o = l.default.can(r.Permissions.MANAGE_CHANNELS, t);
                return n && o
            }
        },
        519119: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("716241"),
                i = n("5667"),
                r = n("58608"),
                o = n("599110"),
                u = n("701909"),
                d = n("49111"),
                c = n("782340"),
                E = n("45243");

            function f(e) {
                let {
                    guildId: t,
                    markAsDismissed: f
                } = e, _ = (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(s.Text, {
                        color: "always-white",
                        variant: "text-sm/normal",
                        className: E.upsellBody,
                        children: c.default.Messages.MEDIA_CHANNEL_UPSELL_BODY
                    }), (0, a.jsx)(s.Text, {
                        color: "always-white",
                        variant: "text-sm/normal",
                        children: c.default.Messages.MEDIA_CHANNEL_LEARN_MORE.format({
                            hcArticleUrl: u.default.getCreatorSupportArticleURL(d.HelpdeskArticles.MEDIA_CHANNEL)
                        })
                    })]
                });
                return (0, a.jsx)(i.default, {
                    header: c.default.Messages.MEDIA_CHANNEL_UPSELL_TITLE,
                    content: _,
                    asset: (0, a.jsx)(r.default, {
                        className: E.video,
                        src: "https://cdn.discordapp.com/assets/media_channel/media_channel_upsell_demo.mp4",
                        autoPlay: !0,
                        loop: !0
                    }),
                    buttonCTA: c.default.Messages.MEDIA_CHANNEL_UPSELL_CREATE_NOW_CTA,
                    onClick: () => {
                        o.default.track(d.AnalyticEvents.MEDIA_CHANNEL_UPSELL_CLICKED, {
                            ...(0, l.collectGuildAnalyticsMetadata)(t)
                        }), (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("581354").then(n.bind(n, "581354"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channelType: d.ChannelTypes.GUILD_MEDIA,
                                guildId: t
                            })
                        })
                    },
                    secondaryButtonCTA: c.default.Messages.DISMISS,
                    markAsDismissed: f
                })
            }
        },
        94372: function(e, t, n) {
            "use strict";
            n.r(t), n("222007");
            var a = n("75247"),
                s = n("913144"),
                l = n("280468"),
                i = n("605250"),
                r = n("21121"),
                o = n("42203"),
                u = n("377253"),
                d = n("344442");
            let c = -1 / 0,
                E = new i.default("MessagePreviewStore");
            class f extends a.default {
                isLatest(e, t) {
                    var n;
                    let a = this.guilds.get(null != e ? e : null);
                    return null !== (n = null == a ? void 0 : a.isLatest(t, this.generation)) && void 0 !== n && n
                }
                isLocalFetchNeeded(e) {
                    var t, n;
                    return null === (n = null === (t = this.guilds.get(e)) || void 0 === t ? void 0 : t.localNeeded) || void 0 === n || n
                }
                message(e, t) {
                    var n, a;
                    return null !== (a = null === (n = this.guilds.get(e)) || void 0 === n ? void 0 : n.messageRecord(t)) && void 0 !== a ? a : null
                }
                data(e) {
                    return !this.guilds.has(e) && this.guilds.set(e, new d.PreviewData), this.guilds.get(e)
                }
                handleOneGuildCreate(e) {
                    var t, n;
                    let a = this.data(e.id);
                    a.putMany(null !== (t = e.lastMessages) && void 0 !== t ? t : [], this.generation), a.putMany(null !== (n = e.threadMessages) && void 0 !== n ? n : [], this.generation), null != e.lastMessages && (a.localNeeded = !1)
                }
                handleConnectionOpen(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    for (let t of (this.generation += 1, e.guilds)) this.handleOneGuildCreate(t)
                }
                handleGuildCreate(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    this.handleOneGuildCreate(e.guild)
                }
                handleGuildDelete(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    this.guilds.delete(e.guild.id)
                }
                handleMessageCreate(e) {
                    var t;
                    if (!(0, r.isInMainTabsExperiment)() || e.optimistic || e.isPushNotification) return !1;
                    this.data(null !== (t = e.guildId) && void 0 !== t ? t : null).put(e.message.channel_id, e.message, this.generation)
                }
                handleMessageDelete(e) {
                    var t, n;
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    let a = null !== (n = e.guildId) && void 0 !== n ? n : null,
                        s = null === (t = this.data(a)) || void 0 === t ? void 0 : t.messageId(e.channelId);
                    if (s === e.id) {
                        let t = u.default.getMessages(e.channelId),
                            n = t.hasMoreAfter ? null : t.last();
                        null != n ? this.data(a).put(e.channelId, n, this.generation) : this.data(a).delete(e.channelId)
                    }
                }
                handleMessageUpdate(e) {
                    var t;
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    let n = null !== (t = e.guildId) && void 0 !== t ? t : null,
                        a = e.message.channel_id,
                        s = e.message.id;
                    if (null == a || null == s) return !1;
                    let l = this.data(n),
                        i = null == l ? void 0 : l.messageId(a);
                    if (i !== s) return !1;
                    null == l || l.update(e.message)
                }
                handleThreadListSync(e) {
                    var t;
                    if (!(0, r.isInMainTabsExperiment)()) return !1;
                    this.data(e.guildId).putMany(null !== (t = e.mostRecentMessages) && void 0 !== t ? t : [], this.generation)
                }
                handleLoadMessagesSuccess(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    let t = o.default.getBasicChannel(e.channelId);
                    if (null != t) {
                        var n;
                        (0, l.requireSortedDescending)(e.messages), this.data(t.guild_id).putNew(e.channelId, null !== (n = e.messages[0]) && void 0 !== n ? n : null, this.generation)
                    }
                }
                handleLocalMessagesLoaded(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    let t = o.default.getBasicChannel(e.channelId);
                    if (null != t) {
                        var n;
                        (0, l.requireSortedDescending)(e.messages), this.data(t.guild_id).putNew(e.channelId, null !== (n = e.messages[0]) && void 0 !== n ? n : null, c)
                    }
                }
                handleMessagePreviewsLoaded(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    E.verbose("adding remote previews (guildId: ".concat(e.guildId, ", messages: ").concat(e.messages.length, ")"));
                    let t = this.data(e.guildId);
                    for (let n of e.messages) !t.isLatest(n.channel_id, this.generation) && t.put(n.channel_id, n, this.generation)
                }
                handleMessagePreviewsLocallyLoaded(e) {
                    if (!(0, r.isInMainTabsExperiment)()) return;
                    E.verbose("adding local previews (guildId: ".concat(e.guildId, ", messages: ").concat(e.messages.length, ")"));
                    let t = this.data(e.guildId);
                    for (let [n, a] of e.messages) !t.has(n) && t.put(n, a, c);
                    t.localNeeded = !1
                }
                handleLogout(e) {
                    this.guilds.clear()
                }
                constructor() {
                    super(s.default, {
                        CONNECTION_OPEN: e => this.handleConnectionOpen(e),
                        GUILD_CREATE: e => this.handleGuildCreate(e),
                        GUILD_DELETE: e => this.handleGuildDelete(e),
                        LOAD_MESSAGES_SUCCESS: e => this.handleLoadMessagesSuccess(e),
                        LOCAL_MESSAGES_LOADED: e => this.handleLocalMessagesLoaded(e),
                        LOGOUT: e => this.handleLogout(e),
                        MESSAGE_CREATE: e => this.handleMessageCreate(e),
                        MESSAGE_DELETE: e => this.handleMessageDelete(e),
                        MESSAGE_PREVIEWS_LOADED: e => this.handleMessagePreviewsLoaded(e),
                        MESSAGE_PREVIEWS_LOCALLY_LOADED: e => this.handleMessagePreviewsLocallyLoaded(e),
                        MESSAGE_UPDATE: e => this.handleMessageUpdate(e),
                        THREAD_LIST_SYNC: e => this.handleThreadListSync(e)
                    }), this.guilds = new Map, this.generation = 0
                }
            }
            new f
        },
        344442: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PreviewData: function() {
                    return r
                }
            }), n("222007");
            var a = n("249654"),
                s = n("692038"),
                l = n("719926"),
                i = n("660478");
            class r {
                isLatest(e, t) {
                    return this.messageGeneration(e, t) === t
                }
                messageGeneration(e, t) {
                    let n = this.messages.get(e);
                    return null == n ? -1 / 0 : n.generation !== t && null != n.message && n.message.id === i.default.lastMessageId(e) ? (this.messages.set(e, {
                        ...n,
                        generation: t
                    }), t) : n.generation
                }
                messageId(e) {
                    var t, n;
                    let a = this.messages.get(e);
                    return null !== (n = null == a ? void 0 : null === (t = a.message) || void 0 === t ? void 0 : t.id) && void 0 !== n ? n : null
                }
                messageRecord(e) {
                    var t;
                    let n = this.messages.get(e);
                    return null != n && null != n.message && !(n.message instanceof l.default) && (n.message = (0, s.createMessageRecord)(n.message)), null !== (t = null == n ? void 0 : n.message) && void 0 !== t ? t : null
                }
                has(e) {
                    return this.messages.has(e)
                }
                put(e, t, n) {
                    this.messages.set(e, {
                        message: t,
                        generation: n
                    })
                }
                putNew(e, t, n) {
                    var s;
                    let l = this.messages.get(e);
                    null != t && function(e, t) {
                        return null == t || a.default.compare(e, t) > 0
                    }(t.id, null == l ? void 0 : null === (s = l.message) || void 0 === s ? void 0 : s.id) && this.put(e, t, n)
                }
                putMany(e, t) {
                    for (let n of e) this.put(n.channel_id, n, t)
                }
                update(e) {
                    var t;
                    if (null == e.id || null == e.channel_id) return;
                    let n = e.channel_id,
                        a = this.messages.get(n);
                    if ((null == a ? void 0 : null === (t = a.message) || void 0 === t ? void 0 : t.id) !== e.id) return;
                    let i = a.message instanceof l.default ? (0, s.updateMessageRecord)(a.message, e) : (0, s.updateServerMessage)(a.message, e);
                    this.messages.set(n, {
                        ...a,
                        message: i
                    })
                }
                delete(e) {
                    this.messages.delete(e)
                }
                constructor() {
                    this.localNeeded = !0, this.messages = new Map
                }
            }
        },
        460929: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                sortChannelIds: function() {
                    return s
                }
            });
            var a = n("249654");

            function s(e) {
                return e.sort((e, t) => a.default.compare(e.lastMessageId, t.lastMessageId)).reverse()
            }
        },
        803524: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useListHasSingleMessageRequest: function() {
                    return u
                },
                useListHasSingleSpamMessageRequest: function() {
                    return d
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("288518"),
                i = n("486503"),
                r = n("260488"),
                o = n("452229");

            function u() {
                let e = (0, r.useMessageRequestsCount)(),
                    t = a.useRef(e),
                    n = (0, s.useStateFromStores)([l.default], () => l.default.isReady()),
                    i = a.useRef(n);
                return a.useEffect(() => {
                    n && !i.current && (i.current = !0, t.current = e)
                }, [n, e]), t.current <= 1 && 1 === e
            }

            function d() {
                let e = (0, o.useSpamMessageRequestCount)(),
                    t = a.useRef(e),
                    n = (0, s.useStateFromStores)([i.default], () => i.default.isReady()),
                    l = a.useRef(n);
                return a.useEffect(() => {
                    n && !l.current && (l.current = !0, t.current = e)
                }, [n, e]), t.current <= 1 && 1 === e
            }
        },
        91830: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMessageRequestRelativeTimestampText: function() {
                    return o
                }
            }), n("866227");
            var a = n("249654"),
                s = n("446674"),
                l = n("487269"),
                i = n("660478"),
                r = n("389495");

            function o(e) {
                let t = (0, r.useMessageRequestPreview)(e),
                    n = (0, s.useStateFromStores)([i.default], () => i.default.lastMessageId(e.id)),
                    o = function(e) {
                        let {
                            lastMessageId: t,
                            message: n,
                            loaded: s
                        } = e;
                        return s && null != n ? a.default.extractTimestamp(n.id) : null != t ? a.default.extractTimestamp(t) : null
                    }({
                        lastMessageId: n,
                        ...t
                    });
                return null == o ? "" : (0, l.getTimestampString)(o)
            }
        },
        639547: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useShouldShowMessageRequestsRow: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("288518"),
                l = n("415435"),
                i = n("486503");

            function r() {
                return (0, a.useStateFromStores)([s.default, i.default], () => (0, l.shouldShowMessageRequests)([s.default, i.default]))
            }
        },
        500526: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("42203"),
                i = n("697218"),
                r = n("288518"),
                o = n("460929");

            function u() {
                let e = (0, s.useStateFromStores)([l.default], () => l.default.getPrivateChannelsVersion()),
                    t = (0, s.useStateFromStoresArray)([l.default, r.default], () => {
                        let e = l.default.getMutablePrivateChannels(),
                            t = Array.from(r.default.getMessageRequestChannelIds()).map(t => e[t]).filter(e => null != e);
                        return (0, o.sortChannelIds)(t)
                    }, [e]),
                    n = (0, s.useStateFromStoresObject)([i.default], () => {
                        let e = {};
                        return t.forEach(t => {
                            let n = i.default.getUser(t.recipients[0]);
                            null != n && (e[t.id] = n)
                        }), e
                    }, [t]),
                    u = a.useMemo(() => t.map(e => ({
                        channel: e,
                        user: n[e.id]
                    })), [t, n]);
                return u
            }
        },
        521702: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("884691"),
                s = n("446674"),
                l = n("42203"),
                i = n("697218"),
                r = n("460929"),
                o = n("486503");

            function u() {
                let e = (0, s.useStateFromStores)([l.default], () => l.default.getPrivateChannelsVersion()),
                    t = (0, s.useStateFromStoresArray)([l.default, o.default], () => {
                        let e = l.default.getMutablePrivateChannels(),
                            t = Array.from(o.default.getSpamChannelIds()).map(t => e[t]).filter(e => null != e);
                        return (0, r.sortChannelIds)(t)
                    }, [e]),
                    n = (0, s.useStateFromStoresObject)([i.default], () => {
                        let e = {};
                        return t.forEach(t => {
                            let n = i.default.getUser(t.recipients[0]);
                            null != n && (e[t.id] = n)
                        }), e
                    }, [t]),
                    u = a.useMemo(() => t.map(e => ({
                        channel: e,
                        user: n[e.id]
                    })), [t, n]);
                return u
            }
        },
        452229: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSpamMessageRequestCount: function() {
                    return l
                }
            });
            var a = n("446674"),
                s = n("486503");

            function l() {
                return (0, a.useStateFromStores)([s.default], () => s.default.getSpamChannelsCount())
            }
        },
        24927: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("458960"),
                o = n("974667"),
                u = n("77078"),
                d = n("272030"),
                c = n("973199"),
                E = n("649678"),
                f = function(e) {
                    let {
                        index: t,
                        children: l,
                        user: f,
                        channel: _,
                        onClick: C,
                        isFocused: h,
                        isActive: I,
                        onOtherHover: T,
                        className: S
                    } = e, [N, A] = s.useState(!1), [m, p] = s.useState(!1), g = () => {
                        A(!0), h && !I && !m && (null == T || T())
                    }, R = () => {
                        A(!1)
                    }, O = (e, t) => {
                        null != t && (p(!0), (0, d.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: () => {
                                p(!1)
                            }
                        }))
                    };
                    return (0, a.jsx)(o.ListNavigatorItem, {
                        id: _.id,
                        children: e => (0, a.jsx)(u.FocusRing, {
                            offset: {
                                left: -8,
                                right: -8
                            },
                            children: (0, a.jsx)(r.default.div, {
                                className: i(E.messageRequestItem, S, {
                                    [E.active]: I || m,
                                    [E.firstItem]: 0 === t
                                }),
                                onContextMenu: e => O(e, f),
                                onMouseEnter: g,
                                onMouseLeave: R,
                                onClick: null != C ? C : void 0,
                                style: {
                                    LIST_ROW_HEIGHT: c.LIST_ROW_HEIGHT,
                                    opacity: 1
                                },
                                ...e,
                                children: l(N || I || m)
                            })
                        })
                    })
                }
        },
        598156: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ei
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("974667"),
                o = n("432710"),
                u = n("446674"),
                d = n("151426"),
                c = n("77078"),
                E = n("939488"),
                f = n("737960"),
                _ = n("74456"),
                C = n("206230"),
                h = n("302437"),
                I = n("665182"),
                T = n("442174"),
                S = n("69927"),
                N = n("10641"),
                A = n("509802"),
                m = n("539938"),
                p = n("155084"),
                g = n("393414"),
                R = n("582713"),
                O = n("970366"),
                L = n("5667"),
                v = n("161778"),
                M = n("982108"),
                P = n("42203"),
                D = n("778588"),
                y = n("556081"),
                x = n("826684"),
                U = n("599110"),
                b = n("439932"),
                G = n("288518"),
                j = n("486503"),
                w = n("916650"),
                k = n("803524"),
                F = n("7643"),
                B = n("785770"),
                H = n("260488"),
                V = n("500526"),
                Y = n("452229"),
                W = n("196986"),
                K = n("410560"),
                z = n("433591"),
                q = n("973199"),
                Q = n("49111"),
                Z = n("994428"),
                X = n("782340"),
                J = n("618223"),
                $ = n("305794");

            function ee() {
                let e = s.useRef(null),
                    t = (0, H.useMessageRequestsCount)(),
                    n = (0, V.default)(),
                    l = (0, k.useListHasSingleMessageRequest)(),
                    u = (0, _.useIsRejectAllMessageRequestsEnabled)(),
                    d = s.useCallback(() => {
                        (0, c.showToast)((0, c.createToast)(X.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, c.ToastType.FAILURE))
                    }, []),
                    {
                        rejectAll: E
                    } = (0, F.useMessageRequestActions)({
                        onError: d
                    }),
                    f = (0, h.default)("message-requests-list"),
                    {
                        channelId: C
                    } = (0, B.useMessageRequestSidebarState)(),
                    I = s.useCallback(() => {
                        let e = n.map(e => e.channel.id);
                        E(e)
                    }, [n, E]),
                    T = s.useCallback(e => {
                        var t, s;
                        let {
                            row: r
                        } = e, o = n[r], u = null === (s = n[r + 1]) || void 0 === s ? void 0 : null === (t = s.channel) || void 0 === t ? void 0 : t.id, d = o.channel.id;
                        return (0, a.jsx)(K.default, {
                            index: r,
                            className: i({
                                [J.selected]: null != C && C === d,
                                [J.siblingSelected]: null != C && C === u
                            }),
                            channel: o.channel,
                            user: o.user,
                            hasSingleMessageRequest: l
                        }, d)
                    }, [l, n, C]),
                    S = s.useCallback(() => (0, a.jsxs)(x.default, {
                        className: J.sectionTitle,
                        children: [t > 0 ? X.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE_WITH_COUNT.format({
                            count: t
                        }) : X.default.Messages.MESSAGE_REQUESTS_PAGE_TITLE, u && t > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(c.Text, {
                                className: J.titleDivider,
                                variant: "eyebrow",
                                color: "header-secondary",
                                tag: "span",
                                children: "•"
                            }), (0, a.jsx)(c.Button, {
                                onClick: I,
                                look: c.ButtonLooks.LINK,
                                color: c.ButtonColors.LINK,
                                size: c.ButtonSizes.SMALL,
                                className: J.clearAllButton,
                                "aria-label": X.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                                children: X.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL
                            })]
                        }) : null]
                    }, "title"), [t, I, u]);
                return (n.length !== t && p.default.increment({
                    name: o.MetricEvents.MESSAGE_REQUEST_COUNT_DRIFT
                }), 0 === n.length) ? (0, a.jsx)(W.default, {
                    section: q.MessageRequestSections.REQUESTS
                }) : (0, a.jsx)(r.ListNavigatorProvider, {
                    navigator: f,
                    children: (0, a.jsx)(r.ListNavigatorContainer, {
                        children: t => {
                            let {
                                ref: s,
                                role: l,
                                ...i
                            } = t;
                            return (0, a.jsx)(c.List, {
                                className: J.list,
                                innerRole: l,
                                innerAriaLabel: X.default.Messages.MESSAGE_REQUESTS,
                                ref: t => {
                                    var n;
                                    e.current = t, s.current = null !== (n = null == t ? void 0 : t.getScrollerNode()) && void 0 !== n ? n : null
                                },
                                paddingTop: 24,
                                paddingBottom: 24,
                                sectionHeight: q.LIST_SECTION_HEIGHT,
                                rowHeight: q.LIST_ROW_HEIGHT,
                                renderSection: S,
                                renderRow: T,
                                sections: [n.length],
                                chunkSize: 30,
                                fade: !0,
                                ...i
                            }, "message-requests-list")
                        }
                    })
                })
            }

            function et(e) {
                let {
                    pageWidth: t,
                    onSidebarResize: n
                } = e, s = (0, u.useStateFromStores)([M.default], () => M.default.getSidebarState(M.MESSAGE_REQUESTS_BASE_CHANNEL_ID)), l = (0, u.useStateFromStores)([P.default], () => P.default.getChannel(null == s ? void 0 : s.channelId));
                if (null == s || s.type !== R.SidebarType.VIEW_MESSAGE_REQUEST || null == l || !l.isPrivate()) return null;
                let i = t - Q.DEFAULT_MESSAGE_REQUEST_SIDEBAR_WIDTH;
                return (0, a.jsx)(I.default, {
                    sidebarType: I.ChatSidebarType.MessageRequestSidebar,
                    maxWidth: i,
                    onWidthChange: n,
                    children: (0, a.jsx)(T.default, {
                        channel: l,
                        baseChannelId: M.MESSAGE_REQUESTS_BASE_CHANNEL_ID
                    })
                })
            }
            let en = function(e) {
                    let {
                        markAsDismissed: t
                    } = e;
                    return (0, a.jsx)(L.default, {
                        header: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_TITLE,
                        content: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONTENT_TEENS,
                        buttonCTA: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_DISMISS,
                        className: J.messageRequestCoachmark,
                        onClick: () => t(Z.ContentDismissActionType.UNKNOWN),
                        markAsDismissed: t,
                        caretPosition: L.CaretPosition.TOP_CENTER,
                        headerClassName: J.header
                    })
                },
                ea = e => {
                    let t = (0, w.default)(),
                        n = () => D.default.hasLayers() || (0, c.hasAnyModalOpen)(),
                        l = (0, u.useStateFromStores)([C.default], () => C.default.useReducedMotion);
                    return s.useEffect(() => {
                        (0, N.requestMarkDismissibleContentAsShown)(d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK)
                    }, []), (0, a.jsx)(A.default, {
                        contentTypes: [d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK],
                        children: s => {
                            let {
                                visibleContent: i,
                                markAsDismissed: r
                            } = s;
                            if (i === d.DismissibleContent.MESSAGE_REQUEST_SETTINGS_COACH_MARK) return (0, a.jsx)(c.Popout, {
                                renderPopout: () => t ? (0, a.jsx)(en, {
                                    markAsDismissed: r
                                }) : (0, a.jsx)(L.default, {
                                    header: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_TITLE,
                                    content: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONTENT,
                                    buttonCTA: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_CONFIRM,
                                    secondaryButtonCTA: X.default.Messages.MESSAGE_REQUESTS_COACHMARK_DISMISS,
                                    className: J.messageRequestCoachmark,
                                    onClick: e => {
                                        e.stopPropagation(), (0, g.transitionTo)(Q.Routes.SETTINGS("privacy-and-safety"))
                                    },
                                    markAsDismissed: r,
                                    caretPosition: L.CaretPosition.TOP_CENTER,
                                    headerClassName: J.header
                                }),
                                position: "bottom",
                                align: "center",
                                animation: l ? c.Popout.Animation.NONE : c.Popout.Animation.TRANSLATE,
                                shouldShow: !n(),
                                spacing: 16,
                                children: () => e.children
                            });
                            return e.children
                        }
                    })
                };

            function es(e) {
                let {
                    section: t
                } = e;
                return t === q.MessageRequestSections.SPAM ? (0, a.jsx)(z.default, {}) : (0, a.jsx)(ee, {})
            }
            let el = (0, f.default)(function(e) {
                let {
                    width: t
                } = e, n = (0, H.useMessageRequestsCount)();
                s.useEffect(() => {
                    E.setHomeLink(Q.Routes.MESSAGE_REQUESTS), (0, O.trackAppUIViewed)("message-requests"), U.default.track(Q.AnalyticEvents.MESSAGE_REQUESTS_VIEWED, {
                        num_message_requests: n
                    }), p.default.increment({
                        name: o.MetricEvents.MESSAGE_REQUEST_VIEW
                    })
                }, []);
                let l = (0, u.useStateFromStores)([v.default], () => v.default.theme),
                    r = (0, Y.useSpamMessageRequestCount)(),
                    [d, f] = s.useState(!1),
                    _ = (0, u.useStateFromStores)([M.default, G.default, j.default], () => {
                        let e = M.default.getSidebarState(M.MESSAGE_REQUESTS_BASE_CHANNEL_ID);
                        return null != e && e.type === R.SidebarType.VIEW_MESSAGE_REQUEST && (G.default.isMessageRequest(e.channelId) || j.default.isSpam(e.channelId))
                    }),
                    [C, h] = s.useState(q.MessageRequestSections.REQUESTS);
                return (0, S.usePageTitle)({
                    location: X.default.Messages.MESSAGE_REQUESTS
                }), (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsxs)("div", {
                        className: i($.chat, J.container, {
                            [$.threadSidebarOpen]: _,
                            [$.threadSidebarFloating]: _ && d
                        }),
                        children: [(0, a.jsxs)(m.default, {
                            className: (0, b.getThemeClass)(l),
                            toolbar: !0,
                            children: [(0, a.jsx)(m.default.Icon, {
                                icon: y.default,
                                "aria-hidden": !0
                            }), (0, a.jsx)(ea, {
                                children: (0, a.jsx)(m.default.Title, {
                                    children: X.default.Messages.MESSAGE_REQUESTS
                                })
                            }), (0, a.jsx)(m.default.Divider, {}), (0, a.jsxs)(c.TabBar, {
                                "aria-label": X.default.Messages.MESSAGE_REQUESTS,
                                selectedItem: C,
                                type: "top-pill",
                                onItemSelect: e => {
                                    h(e)
                                },
                                className: J.tabBar,
                                children: [(0, a.jsx)(c.TabBar.Item, {
                                    id: q.MessageRequestSections.REQUESTS,
                                    className: J.item,
                                    children: X.default.Messages.MESSAGE_REQUESTS_REQUESTS_TAB_TITLE
                                }), (0, a.jsx)(c.TabBar.Item, {
                                    id: q.MessageRequestSections.SPAM,
                                    className: J.item,
                                    children: 0 === r ? X.default.Messages.MESSAGE_REQUESTS_SPAM_TAB_TITLE : X.default.Messages.MESSAGE_REQUESTS_SPAM_TAB_TITLE_WITH_COUNT.format({
                                        count: r
                                    })
                                })]
                            })]
                        }), (0, a.jsx)("div", {
                            className: $.content,
                            children: (0, a.jsx)(es, {
                                section: C
                            })
                        })]
                    }), _ && (0, a.jsx)(et, {
                        pageWidth: t,
                        onSidebarResize: (e, t) => {
                            f(t)
                        }
                    })]
                })
            });
            var ei = el
        },
        214621: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("70845"),
                d = n("95045"),
                c = n("845579"),
                E = n("957255"),
                f = n("27618"),
                _ = n("505684"),
                C = n("93427"),
                h = n("389495"),
                I = n("49111"),
                T = n("719347"),
                S = n("782340"),
                N = n("863452"),
                A = n("632215");
            let m = s.memo(function(e) {
                let {
                    channel: t
                } = e, {
                    loaded: n,
                    error: l,
                    message: m
                } = (0, h.useMessageRequestPreview)(t), p = (0, r.useStateFromStores)([f.default], () => null != m && f.default.isBlocked(m.author.id), [m]), g = (0, r.useStateFromStores)([E.default], () => E.default.can(I.Permissions.MANAGE_MESSAGES, t)), R = c.RenderSpoilers.useSetting(), {
                    content: O
                } = s.useMemo(() => (null == m ? void 0 : m.content) != null && "" !== m.content ? (0, d.default)(m, {
                    formatInline: !0,
                    noStyleAndInteraction: !0
                }) : {
                    content: null
                }, [m]), L = null;
                if (l) L = (0, a.jsx)(o.Text, {
                    className: N.messageReplacement,
                    variant: "text-sm/normal",
                    color: "text-muted",
                    children: S.default.Messages.MESSAGE_REQUESTS_ERROR_LOADING_PREVIEW
                });
                else if (n) {
                    if (null != m && p) L = (0, a.jsx)(o.Text, {
                        className: N.messageReplacement,
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: S.default.Messages.MESSAGE_REQUESTS_BLOCKED_MESSAGE
                    });
                    else if (null != m) {
                        let {
                            contentPlaceholder: e,
                            renderedContent: t
                        } = (0, C.renderSingleLineMessage)(m, O, p, i(N.messageContent, A.inlineFormat, A.smallFontSize), {
                            iconClass: N.messageContentIcon,
                            iconSize: T.SINGLE_LINE_MESSAGE_DEFAULT_ICON_SIZE
                        });
                        L = null != t ? (0, a.jsx)(o.Text, {
                            variant: "text-sm/normal",
                            color: "text-muted",
                            className: N.messageContent,
                            children: t
                        }) : (0, a.jsx)(o.Text, {
                            tag: "span",
                            variant: "text-sm/normal",
                            color: "text-muted",
                            className: N.messageReplacement,
                            children: e
                        })
                    } else L = (0, a.jsx)(o.Text, {
                        className: N.messageReplacement,
                        variant: "text-sm/normal",
                        color: "text-muted",
                        children: S.default.Messages.MESSAGE_REQUESTS_DELETED_MESSAGE
                    })
                } else L = null;
                return (0, a.jsx)(_.ObscuredDisplayContext.Provider, {
                    value: (0, u.default)(R, g),
                    children: (0, a.jsx)(o.FocusBlock, {
                        className: N.messageFocusBlock,
                        children: L
                    })
                })
            });
            var p = m
        },
        98708: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("145079"),
                r = n("206230"),
                o = n("606292"),
                u = n("688318"),
                d = n("843962"),
                c = n("27618"),
                E = n("158998"),
                f = n("50885"),
                _ = n("91830"),
                C = n("214621"),
                h = n("782340"),
                I = n("556559");
            let T = f.default.getEnableHardwareAcceleration() ? l.AnimatedAvatar : l.Avatar;

            function S(e) {
                var t;
                let {
                    channel: n,
                    otherUser: f,
                    active: S
                } = e, N = (0, s.useStateFromStores)([r.default], () => r.default.useReducedMotion), A = (0, s.useStateFromStores)([c.default], () => null == f ? null : c.default.getNickname(f.id)), m = (0, _.useMessageRequestRelativeTimestampText)(n), {
                    avatarDecorationSrc: p
                } = (0, u.default)({
                    user: f,
                    size: (0, o.getDecorationSizeForAvatarSize)(l.AvatarSizes.SIZE_40),
                    animateOnHover: !0
                });
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(T, {
                        className: I.avatar,
                        src: (0, d.getChannelIconURL)(n, 40, !N && S),
                        avatarDecoration: p,
                        size: l.AvatarSizes.SIZE_40,
                        "aria-label": null !== (t = null == f ? void 0 : f.username) && void 0 !== t ? t : h.default.Messages.UNKNOWN_USER
                    }), (0, a.jsxs)("div", {
                        className: I.userPreview,
                        children: [(0, a.jsxs)("div", {
                            className: I.userContainerWithPreview,
                            children: [(0, a.jsx)(i.default, {
                                nick: A,
                                user: f,
                                showAccountIdentifier: !0,
                                className: I.tagContainer,
                                usernameClass: I.username,
                                discriminatorClass: null != E.default.getGlobalName(f) ? I.globalName : I.discriminator
                            }), (0, a.jsx)(l.Text, {
                                className: I.timestampWithPreview,
                                color: "text-muted",
                                variant: "text-xs/normal",
                                children: m
                            })]
                        }), (0, a.jsx)("div", {
                            className: I.messagePreview,
                            children: (0, a.jsx)(C.default, {
                                channel: n
                            })
                        })]
                    })]
                })
            }
        },
        196986: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("161778"),
                i = n("941886"),
                r = n("973199"),
                o = n("782340"),
                u = n("772473"),
                d = n("855143"),
                c = n("934516");

            function E(e) {
                let {
                    section: t
                } = e, n = (0, s.useStateFromStores)([l.default], () => l.default.theme);
                return (0, a.jsxs)(i.default, {
                    theme: n,
                    className: u.emptyStateContainer,
                    children: [(0, a.jsx)(i.default.Image, {
                        width: 415,
                        height: 200,
                        lightSrc: c,
                        darkSrc: d
                    }), (0, a.jsx)(i.default.Text, {
                        note: t === r.MessageRequestSections.SPAM ? o.default.Messages.MESSAGE_REQUESTS_SPAM_EMPTY_STATE_BODY : o.default.Messages.MESSAGE_REQUESTS_EMPTY_STATE_BODY
                    })]
                })
            }
        },
        410560: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("208021"),
                l = n("982108"),
                i = n("599110"),
                r = n("659500"),
                o = n("785770"),
                u = n("24927"),
                d = n("410688"),
                c = n("49111");

            function E(e) {
                let {
                    index: t,
                    className: n,
                    channel: E,
                    user: f,
                    hasSingleMessageRequest: _
                } = e, {
                    channelId: C
                } = (0, o.useMessageRequestSidebarState)();
                return (0, a.jsx)(u.default, {
                    index: t,
                    className: n,
                    isFocused: C === E.id,
                    channel: E,
                    user: f,
                    onClick: e => {
                        e.stopPropagation(), s.default.openPrivateChannelAsSidebar({
                            channelId: E.id,
                            baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                            hasSingleMessageRequest: _
                        }), i.default.track(c.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                            is_spam: !1,
                            channel_id: E.id,
                            other_user_id: f.id
                        }), setTimeout(() => {
                            r.ComponentDispatch.dispatch(c.ComponentActions.FOCUS_CHANNEL_TEXT_AREA, {
                                channelId: E.id
                            })
                        }, 0)
                    },
                    children: e => (0, a.jsx)(d.PendingMessageRequestRowItem, {
                        active: e,
                        user: f,
                        channel: E
                    })
                })
            }
        },
        410688: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PendingMessageRequestRowItem: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("144491"),
                r = n("208021"),
                o = n("982108"),
                u = n("803524"),
                d = n("7643"),
                c = n("98708"),
                E = n("782340"),
                f = n("727447");

            function _(e) {
                let {
                    active: t,
                    user: n,
                    channel: _
                } = e, C = (0, u.useListHasSingleMessageRequest)(), h = s.useCallback(() => {
                    (0, l.showToast)((0, l.createToast)(E.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, l.ToastType.FAILURE))
                }, []), I = s.useCallback(() => {
                    r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID)
                }, []), T = s.useCallback(() => {
                    r.default.closeChannelSidebar(o.MESSAGE_REQUESTS_BASE_CHANNEL_ID), C && (0, i.transitionToChannel)(_.id)
                }, [_.id, C]), {
                    acceptMessageRequest: S,
                    rejectMessageRequest: N,
                    isAcceptLoading: A,
                    isRejectLoading: m,
                    isUserProfileLoading: p,
                    isOptimisticAccepted: g,
                    isOptimisticRejected: R
                } = (0, d.useMessageRequestActions)({
                    user: n,
                    onAcceptSuccess: T,
                    onRejectSuccess: I,
                    onError: h
                }), O = A || m || p || g || R;
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsx)(c.default, {
                        channel: _,
                        otherUser: n,
                        active: t
                    }), (0, a.jsxs)("div", {
                        className: f.actions,
                        children: [(0, a.jsx)(l.Button, {
                            className: f.button,
                            color: l.ButtonColors.PRIMARY,
                            size: l.Button.Sizes.SMALL,
                            onClick: e => {
                                e.stopPropagation(), N(_.id)
                            },
                            disabled: O,
                            submitting: m || R,
                            children: E.default.Messages.MESSAGE_REQUEST_IGNORE
                        }), (0, a.jsx)(l.Button, {
                            className: f.button,
                            color: l.ButtonColors.BRAND,
                            size: l.Button.Sizes.SMALL,
                            onClick: e => {
                                e.stopPropagation(), S(_.id)
                            },
                            disabled: O,
                            submitting: A || p || g,
                            children: E.default.Messages.MESSAGE_REQUEST_ACCEPT
                        })]
                    })]
                })
            }
        },
        92918: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("208021"),
                l = n("982108"),
                i = n("599110"),
                r = n("659500"),
                o = n("24927"),
                u = n("745772"),
                d = n("49111");

            function c(e) {
                let {
                    index: t,
                    className: n,
                    channel: c,
                    user: E,
                    hasSingleMessageRequest: f
                } = e;
                return (0, a.jsx)(o.default, {
                    index: t,
                    className: n,
                    isFocused: !1,
                    channel: c,
                    user: E,
                    onClick: e => {
                        e.stopPropagation(), s.default.openPrivateChannelAsSidebar({
                            channelId: c.id,
                            baseChannelId: l.MESSAGE_REQUESTS_BASE_CHANNEL_ID,
                            hasSingleMessageRequest: f
                        }), i.default.track(d.AnalyticEvents.MESSAGE_REQUEST_PREVIEW_VIEWED, {
                            is_spam: !0,
                            channel_id: c.id,
                            other_user_id: E.id
                        }), setTimeout(() => {
                            r.ComponentDispatch.dispatch(d.ComponentActions.FOCUS_CHANNEL_TEXT_AREA, {
                                channelId: c.id
                            })
                        }, 0)
                    },
                    children: e => (0, a.jsx)(u.default, {
                        active: e,
                        user: E,
                        channel: c
                    })
                })
            }
        },
        433591: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("355262"),
                o = n("432710"),
                u = n("77078"),
                d = n("74456"),
                c = n("302437"),
                E = n("155084"),
                f = n("826684"),
                _ = n("599110"),
                C = n("803524"),
                h = n("7643"),
                I = n("785770"),
                T = n("521702"),
                S = n("452229"),
                N = n("196986"),
                A = n("92918"),
                m = n("973199"),
                p = n("49111"),
                g = n("782340"),
                R = n("127671");

            function O() {
                let e = s.useRef(null),
                    t = (0, T.default)(),
                    n = (0, S.useSpamMessageRequestCount)(),
                    l = (0, C.useListHasSingleSpamMessageRequest)(),
                    O = (0, d.useIsRejectAllMessageRequestsEnabled)(),
                    L = (0, c.default)("message-requests-spam-list"),
                    {
                        channelId: v
                    } = (0, I.useMessageRequestSidebarState)(),
                    M = s.useCallback(() => {
                        (0, u.showToast)((0, u.createToast)(g.default.Messages.MESSAGE_REQUEST_REQUEST_ERROR_ALERT_TITLE, u.ToastType.FAILURE))
                    }, []),
                    {
                        rejectAll: P
                    } = (0, h.useMessageRequestActions)({
                        onError: M
                    }),
                    D = s.useCallback(() => {
                        let e = t.map(e => e.channel.id);
                        P(e)
                    }, [t, P]);
                s.useEffect(() => {
                    _.default.track(p.AnalyticEvents.SPAM_MESSAGE_REQUESTS_VIEWED, {
                        num_spam_message_requests: n
                    }), E.default.increment({
                        name: o.MetricEvents.SPAM_MESSAGE_REQUEST_VIEW
                    })
                }, []);
                let y = s.useCallback(e => {
                        var n, s;
                        let {
                            row: r
                        } = e, o = t[r], u = null === (s = t[r + 1]) || void 0 === s ? void 0 : null === (n = s.channel) || void 0 === n ? void 0 : n.id, d = o.channel.id;
                        return (0, a.jsx)(A.default, {
                            index: r,
                            className: i({
                                [R.selected]: null != v && v === d,
                                [R.siblingSelected]: null != v && v === u
                            }),
                            channel: o.channel,
                            user: o.user,
                            hasSingleMessageRequest: l
                        }, d)
                    }, [t, l, v]),
                    x = s.useCallback(() => (0, a.jsxs)(f.default, {
                        className: R.sectionTitle,
                        children: [g.default.Messages.MESSAGE_REQUESTS_SPAM_HEADER.format({
                            count: n
                        }), O && n > 0 ? (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(u.Text, {
                                className: R.titleDivider,
                                variant: "eyebrow",
                                color: "header-secondary",
                                tag: "span",
                                children: "•"
                            }), (0, a.jsx)(u.Button, {
                                onClick: D,
                                look: u.ButtonLooks.LINK,
                                color: u.ButtonColors.LINK,
                                size: u.ButtonSizes.SMALL,
                                className: R.clearAllButton,
                                "aria-label": g.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL,
                                children: g.default.Messages.MESSAGE_REQUESTS_CLEAR_ALL
                            })]
                        }) : null]
                    }, "message-requests-spam-title"), [n, D, O]);
                return 0 === t.length ? (0, a.jsx)(N.default, {
                    section: m.MessageRequestSections.SPAM
                }) : (0, a.jsx)(r.ListNavigatorProvider, {
                    navigator: L,
                    children: (0, a.jsx)(r.ListNavigatorContainer, {
                        children: n => {
                            let {
                                ref: s,
                                role: l,
                                ...i
                            } = n;
                            return (0, a.jsx)(u.List, {
                                className: R.list,
                                innerRole: l,
                                innerAriaLabel: g.default.Messages.MESSAGE_REQUESTS,
                                ref: t => {
                                    var n;
                                    e.current = t, s.current = null !== (n = null == t ? void 0 : t.getScrollerNode()) && void 0 !== n ? n : null
                                },
                                paddingTop: 24,
                                paddingBottom: 24,
                                sectionHeight: m.LIST_SECTION_HEIGHT,
                                rowHeight: m.LIST_ROW_HEIGHT,
                                renderSection: x,
                                renderRow: y,
                                sections: [t.length],
                                chunkSize: 30,
                                fade: !0,
                                ...i
                            }, "message-requests-spam-list")
                        }
                    })
                })
            }
        },
        745772: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("432710"),
                i = n("77078"),
                r = n("155084"),
                o = n("144491"),
                u = n("208021"),
                d = n("982108"),
                c = n("803524"),
                E = n("7643"),
                f = n("98708"),
                _ = n("28424"),
                C = n("782340"),
                h = n("578484");

            function I(e) {
                let {
                    active: t,
                    user: n,
                    channel: I
                } = e, T = (0, c.useListHasSingleSpamMessageRequest)(), S = s.useCallback(() => {
                    (0, i.showToast)((0, i.createToast)(C.default.Messages.MESSAGE_REQUESTS_SPAM_ERROR_ALERT_TITLE, i.ToastType.FAILURE)), r.default.increment({
                        name: l.MetricEvents.SPAM_MESSAGE_REQUEST_ERROR_VIEW
                    })
                }, []), N = s.useCallback(() => {
                    u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID)
                }, []), A = s.useCallback(() => {
                    u.default.closeChannelSidebar(d.MESSAGE_REQUESTS_BASE_CHANNEL_ID), T && (0, o.transitionToChannel)(I.id)
                }, [I.id, T]), {
                    acceptMessageRequest: m,
                    isAcceptLoading: p,
                    isUserProfileLoading: g,
                    isOptimisticAccepted: R
                } = (0, E.useMessageRequestActions)({
                    user: n,
                    onAcceptSuccess: A,
                    onRejectSuccess: N,
                    onError: S
                }), O = p || g, L = O || R;
                return (0, a.jsxs)("div", {
                    className: h.container,
                    children: [(0, a.jsx)(f.default, {
                        otherUser: n,
                        channel: I,
                        active: t
                    }), (0, a.jsxs)("div", {
                        className: h.actions,
                        children: [(0, a.jsx)(i.Button, {
                            className: h.button,
                            color: i.ButtonColors.PRIMARY,
                            size: i.Button.Sizes.SMALL,
                            onClick: e => {
                                m(I.id), e.stopPropagation()
                            },
                            disabled: L,
                            submitting: O,
                            children: C.default.Messages.MESSAGE_REQUESTS_SPAM_ACCEPT
                        }), (0, a.jsx)(_.default, {
                            className: h.button,
                            channel: I,
                            buttonSize: i.Button.Sizes.SMALL
                        })]
                    })]
                })
            }
        },
        760797: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MIDJOURNEY_GUILD_ID: function() {
                    return a
                }
            });
            let a = "662267976984297473"
        },
        256896: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isEligibleForMidjourneyOnboarding: function() {
                    return s
                }
            });
            var a = n("924593");

            function s(e) {
                let {
                    enabled: t
                } = a.MidjourneyOnboardingExperiment.getCurrentConfig({
                    location: e
                });
                return t
            }
        },
        924593: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MidjourneyOnboardingExperiment: function() {
                    return s
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-11_midjourney_onboarding",
                label: "Midjourney Onboarding",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enables the accelerated Midjourney Onboarding & Discord experience for the user.",
                    config: {
                        enabled: !0
                    }
                }]
            })
        },
        894887: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isMidjourneyOnboardingFlow: function() {
                    return i
                }
            }), n("446674");
            var a = n("305961"),
                s = n("256896"),
                l = n("760797");

            function i(e) {
                return (0, s.isEligibleForMidjourneyOnboarding)(e) && 1 === a.default.getGuildCount() && null != a.default.getGuild(l.MIDJOURNEY_GUILD_ID)
            }
        },
        397039: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("913144"),
                s = {
                    closeSidebar() {
                        a.default.dispatch({
                            type: "MOBILE_WEB_SIDEBAR_CLOSE"
                        })
                    },
                    openSidebar() {
                        a.default.dispatch({
                            type: "MOBILE_WEB_SIDEBAR_OPEN"
                        })
                    }
                }
        },
        628805: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("394846"),
                s = n("446674"),
                l = n("913144");
            let i = !1;
            class r extends s.default.Store {
                getIsOpen() {
                    return !a.isMobile || i
                }
            }
            r.displayName = "MobileWebSidebarStore";
            var o = new r(l.default, {
                MOBILE_WEB_SIDEBAR_OPEN: function() {
                    i = !0
                },
                MOBILE_WEB_SIDEBAR_CLOSE: function() {
                    i = !1
                }
            })
        },
        397009: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = (0, n("862205").createExperiment)({
                kind: "user",
                id: "2022-04_account_profile_popout",
                label: "Account Profile Popout",
                defaultConfig: {
                    isPopupEnabled: !1,
                    isTaglessAccountPanelEnabled: !1,
                    isJoinedTagButtonEnabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enable Account Profile Popout",
                    config: {
                        isPopupEnabled: !0,
                        isTaglessAccountPanelEnabled: !1,
                        isJoinedTagButtonEnabled: !1
                    }
                }, {
                    id: 2,
                    label: "Enable Account Profile Popout w/ DiscordTag button",
                    config: {
                        isPopupEnabled: !0,
                        isTaglessAccountPanelEnabled: !1,
                        isJoinedTagButtonEnabled: !0
                    }
                }]
            })
        },
        81516: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("845579"),
                s = n("101125"),
                l = n("599110"),
                i = n("49111");
            async function r(e, t, n) {
                null == t && (t = s.default.getStatus()), await a.StatusSetting.updateSetting(e);
                let r = {
                    next_status: e,
                    prev_status: t
                };
                null != n && (r = {
                    ...r,
                    ...n
                }), l.default.track(i.AnalyticEvents.USER_STATUS_UPDATED, r)
            }
        },
        337328: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return Y
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("627445"),
                o = n.n(r),
                u = n("394846"),
                d = n("446674"),
                c = n("77078"),
                E = n("327037"),
                f = n("997289"),
                _ = n("731898"),
                C = n("252744"),
                h = n("502651"),
                I = n("812204"),
                T = n("685665"),
                S = n("321833"),
                N = n("8977"),
                A = n("106803"),
                m = n("861370"),
                p = n("217513"),
                g = n("430312"),
                R = n("763866"),
                O = n("10532"),
                L = n("935409"),
                v = n("373469"),
                M = n("52028"),
                P = n("824563"),
                D = n("697218"),
                y = n("304121"),
                x = n("599110"),
                U = n("158998"),
                b = n("81516"),
                G = n("644091"),
                j = n("891964"),
                w = n("49111"),
                k = n("590456"),
                F = n("782340"),
                B = n("135231");

            function H(e, t, n, s) {
                return (0, a.jsx)(c.MenuItem, {
                    id: e,
                    keepItemStyles: !0,
                    render: t => {
                        let {
                            isFocused: n
                        } = t;
                        return (0, a.jsxs)("div", {
                            className: B.statusItem,
                            children: [(0, a.jsx)(c.Status, {
                                status: e,
                                className: B.icon,
                                size: 10,
                                color: n ? "currentColor" : void 0
                            }), (0, a.jsx)("div", {
                                className: B.status,
                                children: (0, U.humanizeStatus)(e)
                            }), null != s && (0, a.jsx)("div", {
                                className: B.description,
                                children: s
                            })]
                        })
                    },
                    action: () => (0, b.default)(e, t, n)
                })
            }

            function V(e) {
                var t, n;
                let {
                    user: l,
                    customStatus: r,
                    guildId: o,
                    isApplicationStreaming: E,
                    onClose: v,
                    onSelect: M,
                    closePopout: D
                } = e, b = (0, f.useAnalyticsContext)(), {
                    AnalyticsLocationProvider: V
                } = (0, T.default)(I.default.ACCOUNT_PROFILE_POPOUT), Y = (0, p.default)(l.id, o), [W, K, z, q] = (0, d.useStateFromStoresArray)([P.default], () => {
                    var e;
                    let t = l.id;
                    return "string" != typeof t ? [void 0, void 0, w.StatusTypes.UNKNOWN, !1] : [null !== (e = P.default.findActivity(t, e => e.type !== w.ActivityTypes.CUSTOM_STATUS)) && void 0 !== e ? e : void 0, P.default.findActivity(l.id, e => e.type === w.ActivityTypes.CUSTOM_STATUS), P.default.getStatus(t), P.default.isMobileOnline(t)]
                });
                let Q = (t = z, n = b, (0, a.jsxs)(a.Fragment, {
                        children: [H(w.StatusTypes.ONLINE, t, n), (0, a.jsx)(c.MenuSeparator, {}, "menu-separator-statuses"), H(w.StatusTypes.IDLE, t, n), H(w.StatusTypes.DND, t, n, F.default.Messages.STATUS_DND_HELP), H(w.StatusTypes.INVISIBLE, t, n, F.default.Messages.STATUS_INVISIBLE_HELPER)]
                    })),
                    {
                        shouldShow: Z,
                        dismissCollectiblesUpsell: X
                    } = (0, N.default)(),
                    {
                        ref: J,
                        height: $
                    } = (0, _.default)(),
                    ee = (0, C.default)(J);
                s.useEffect(() => {
                    x.default.track(w.AnalyticEvents.OPEN_POPOUT, {
                        type: "User Status Menu",
                        has_custom_status: null != r,
                        other_user_id: l.id,
                        application_id: null != W ? W.application_id : void 0,
                        is_streaming: E,
                        application_name: null != W ? W.name : void 0,
                        profile_has_nitro_customization: (null == Y ? void 0 : Y.banner) != null,
                        location: b.location,
                        has_profile_effect: (null == Y ? void 0 : Y.profileEffectID) != null
                    })
                }, []);
                let et = (0, G.useMultiAccountMenuItems)(),
                    en = (0, A.useCustomStatusMenuItem)(null != r ? r : void 0, B.menuItemFocused),
                    ea = (0, m.default)({
                        id: l.id,
                        label: F.default.Messages.COPY_ID_USER,
                        showIconFirst: !0
                    });
                return (0, a.jsx)(V, {
                    children: (0, a.jsxs)("div", {
                        className: B.popoutContainer,
                        children: [Z && (0, a.jsx)(S.default, {
                            height: $,
                            onClose: () => {
                                v(), X()
                            }
                        }), (0, a.jsx)("div", {
                            ref: J,
                            children: (0, a.jsxs)(g.default, {
                                user: l,
                                profileType: k.UserProfileTypes.POPOUT,
                                children: [(0, a.jsx)(L.default, {
                                    user: l,
                                    displayProfile: Y,
                                    onClose: () => null == D ? void 0 : D(),
                                    isMobile: q,
                                    isStreaming: (0, h.default)(W),
                                    status: z,
                                    disableUserProfileLink: __OVERLAY__,
                                    isHovering: ee,
                                    showPremiumBadgeUpsell: !1,
                                    showCollectiblesTryItOut: Z
                                }), (0, a.jsxs)(g.default.Inner, {
                                    children: [(0, a.jsx)(R.default, {
                                        activity: W,
                                        customStatusActivity: K,
                                        displayProfile: Y,
                                        user: l,
                                        onClose: v,
                                        setNote: !1,
                                        canDM: !1,
                                        hideNote: !0,
                                        showCopiableUsername: !0
                                    }), (0, a.jsx)(O.default, {
                                        className: B.divider
                                    }), (0, a.jsxs)(c.Menu, {
                                        navId: "account",
                                        "aria-label": F.default.Messages.SET_STATUS,
                                        hideScroller: !0,
                                        className: B.menu,
                                        onClose: v,
                                        onSelect: M,
                                        children: [(0, a.jsxs)(c.MenuGroup, {
                                            children: [(0, a.jsx)(c.MenuItem, {
                                                id: "status-picker",
                                                label: (0, U.humanizeStatus)(z),
                                                focusedClassName: B.menuItemFocused,
                                                subMenuIconClassName: B.subMenuIcon,
                                                action: u.isMobile ? function() {
                                                    (0, c.openModalLazy)(() => new Promise(e => {
                                                        e(e => (0, a.jsx)(c.ModalRoot, {
                                                            ...e,
                                                            size: c.ModalSize.SMALL,
                                                            className: B.modal,
                                                            "aria-label": F.default.Messages.SET_STATUS,
                                                            children: (0, a.jsx)(c.Menu, {
                                                                navId: "account",
                                                                variant: "fixed",
                                                                "aria-label": F.default.Messages.SET_STATUS,
                                                                hideScroller: !0,
                                                                className: B.statusPickerModalMenu,
                                                                onClose: e.onClose,
                                                                onSelect: e.onClose,
                                                                children: Q
                                                            })
                                                        }))
                                                    }))
                                                } : void 0,
                                                showIconFirst: !0,
                                                icon: e => {
                                                    let {
                                                        className: t,
                                                        isFocused: n
                                                    } = e;
                                                    return (0, a.jsx)(c.Status, {
                                                        status: z,
                                                        size: 12,
                                                        className: i(t, B.mainStatusIcon),
                                                        color: n ? "currentColor" : void 0
                                                    })
                                                },
                                                children: u.isMobile ? void 0 : Q
                                            }, "status-picker"), en]
                                        }), (0, a.jsx)(c.MenuGroup, {
                                            children: (0, a.jsx)(c.MenuItem, {
                                                id: "switch-account",
                                                focusedClassName: B.menuItemFocused,
                                                subMenuIconClassName: B.subMenuIcon,
                                                label: F.default.Messages.SWITCH_ACCOUNTS_MENU_ITEM_TITLE,
                                                icon: y.default,
                                                showIconFirst: !0,
                                                action: j.default,
                                                children: et
                                            }, "switch-account")
                                        }), (0, a.jsx)(c.MenuGroup, {
                                            children: ea
                                        })]
                                    })]
                                })]
                            })
                        })]
                    })
                })
            }

            function Y(e) {
                let {
                    userId: t,
                    user: n,
                    guildId: l,
                    onClose: i,
                    onSelect: r
                } = e, u = (0, d.useStateFromStores)([D.default], () => D.default.getUser(t), [t]), c = (0, d.useStateFromStores)([M.default], () => M.default.getCustomStatusActivity()), [f, _] = s.useState(!1), C = null != u ? u : n, h = (0, d.useStateFromStores)([v.default], () => null != C && null != v.default.getAnyStreamForUser(C.id));
                return (s.useEffect(() => {
                    null == u && e();
                    async function e() {
                        "string" == typeof t && (await (0, E.getUser)(t), _(!0))
                    }
                }, [u, t]), null == C) ? (f && o(null != C, "Unexpected missing user"), null) : (0, a.jsx)(V, {
                    closePopout: i,
                    user: C,
                    customStatus: c,
                    guildId: l,
                    isApplicationStreaming: h,
                    onClose: i,
                    onSelect: r
                })
            }
        },
        891964: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("583374");

            function r() {
                (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await n.el("685807").then(n.bind(n, "685807"));
                    return t => (0, a.jsx)(e, {
                        ...t
                    })
                }, {
                    onCloseCallback: () => {
                        l.default.dispatch({
                            type: "CLEAR_AUTHENTICATION_ERRORS"
                        }), l.default.dispatch({
                            type: "LOGIN_RESET",
                            isMultiAccount: !0
                        })
                    },
                    modalKey: i.SWITCH_ACCOUNTS_MODAL_KEY
                })
            }
        },
        644091: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useMultiAccountMenuItems: function() {
                    return A
                }
            }), n("424973");
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("449918"),
                r = n("766274"),
                o = n("102985"),
                u = n("697218"),
                d = n("578706"),
                c = n("423487"),
                E = n("599110"),
                f = n("158998"),
                _ = n("694787"),
                C = n("770032"),
                h = n("927101"),
                I = n("891964"),
                T = n("49111"),
                S = n("782340"),
                N = n("962101");

            function A() {
                let e = (0, s.useStateFromStores)([u.default], () => u.default.getCurrentUser()),
                    t = (0, s.useStateFromStores)([o.default], () => o.default.hidePersonalInformation),
                    {
                        multiAccountUsers: n
                    } = (0, h.useMultiAccountUsers)(),
                    A = t => {
                        t !== (null == e ? void 0 : e.id) && (E.default.track(T.AnalyticEvents.MULTI_ACCOUNT_SWITCH_ATTEMPT, {
                            location: {
                                section: T.AnalyticsSections.PROFILE_POPOUT
                            }
                        }), _.switchAccount(t))
                    },
                    m = n.map(n => {
                        let s = new r.default(n),
                            o = s.id === (null == e ? void 0 : e.id),
                            u = n.tokenStatus === C.MultiAccountTokenStatus.INVALID,
                            E = t ? null : "#".concat(s.discriminator);
                        return (0, a.jsx)(l.MenuItem, {
                            id: s.id,
                            focusedClassName: N.focused,
                            label: e => {
                                let {
                                    isFocused: r
                                } = e;
                                return (0, a.jsxs)("div", {
                                    className: N.userMenuItem,
                                    children: [(0, a.jsx)(l.Avatar, {
                                        src: s.getAvatarURL(void 0, 40),
                                        size: l.AvatarSizes.SIZE_24,
                                        "aria-label": n.username
                                    }), (0, a.jsxs)("div", {
                                        className: N.userMenuUsername,
                                        children: [(0, a.jsx)(l.Text, {
                                            className: N.userMenuText,
                                            variant: "text-sm/normal",
                                            children: f.default.getUserTag(s, {
                                                mode: "username",
                                                identifiable: t ? "never" : "always"
                                            })
                                        }), !s.isPomelo() && (0, a.jsx)(l.Text, {
                                            className: N.userMenuDiscriminator,
                                            variant: "text-sm/normal",
                                            children: E
                                        })]
                                    }), o && (0, a.jsx)(d.default, {
                                        color: (0, i.getColor)(r ? T.Color.WHITE_500 : T.Color.BRAND_500),
                                        backgroundColor: (0, i.getColor)(r ? T.Color.BRAND_500 : T.Color.WHITE_500),
                                        width: 18,
                                        height: 18,
                                        className: N.activeIcon
                                    }), u && (0, a.jsx)(c.default, {
                                        color: (0, i.getColor)(T.Color.RED_400),
                                        backgroundColor: (0, i.getColor)(T.Color.WHITE_500),
                                        width: 15,
                                        height: 15,
                                        className: N.activeIcon
                                    })]
                                })
                            },
                            action: () => {
                                u ? (0, I.default)() : A(s.id)
                            }
                        }, s.id)
                    });
                return m.push((0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)(l.MenuSeparator, {}), (0, a.jsx)(l.MenuItem, {
                        id: "manage-accounts",
                        label: S.default.Messages.SWITCH_ACCOUNTS_MANAGE_ACCOUNTS,
                        action: I.default
                    })]
                })), m
            }
        },
        636174: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                ICON_SIZE: function() {
                    return a
                }
            });
            let a = 64
        },
        744923: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                mount: function() {
                    return s
                },
                unmount: function() {
                    return l
                }
            });
            var a = n("913144");

            function s() {
                a.default.dispatch({
                    type: "NOW_PLAYING_MOUNTED"
                })
            }

            function l() {
                a.default.dispatch({
                    type: "NOW_PLAYING_UNMOUNTED"
                })
            }
        },
        386133: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("913144"),
                d = n("777273"),
                c = n("843823"),
                E = n("697218"),
                f = n("392453"),
                _ = n("744923"),
                C = n("333705"),
                h = n("749554"),
                I = n("62659"),
                T = n("36512"),
                S = n("638441"),
                N = n("782340"),
                A = n("561368");
            let m = (0, S.default)(function(e) {
                    let {
                        party: t,
                        onUserContextMenu: n,
                        onChannelContextMenu: s
                    } = e, l = (0, a.jsx)(h.default, {
                        party: t,
                        onUserContextMenu: n
                    }), i = (0, a.jsx)(C.default, {
                        party: t,
                        onChannelContextMenu: s
                    });
                    return null != l || null != i ? (0, a.jsx)(o.Popout, {
                        position: "left",
                        renderPopout: e => {
                            let {
                                closePopout: n
                            } = e;
                            return (0, a.jsx)(T.default, {
                                party: t,
                                close: n
                            })
                        },
                        spacing: 8,
                        children: (e, t) => {
                            let {
                                isShown: n
                            } = t;
                            return (0, a.jsx)(I.default, {
                                ...e,
                                "aria-haspopup": "menu",
                                className: A.itemCard,
                                active: n,
                                children: (0, a.jsxs)("div", {
                                    children: [l, i]
                                })
                            })
                        }
                    }) : null
                }),
                p = i.throttle(() => d.fetchUserAffinities(!1), 3e5);

            function g() {
                let {
                    nowPlayingCards: e,
                    loaded: t,
                    needsRefresh: n,
                    fetching: l,
                    currentUser: i
                } = (0, r.useStateFromStoresObject)([f.default, c.default, E.default], () => ({
                    nowPlayingCards: f.default.nowPlayingCards,
                    loaded: f.default.loaded,
                    needsRefresh: c.default.needsRefresh(),
                    fetching: c.default.getFetching(),
                    currentUser: E.default.getCurrentUser()
                }));
                s.useEffect(() => (u.default.wait(() => _.mount()), () => u.default.wait(() => _.unmount())), [null == i ? void 0 : i.id]), s.useEffect(() => {
                    n && !l && p()
                }, [n, l]);
                let d = null;
                return t ? (d = e.length > 0 ? e.map(e => {
                    let {
                        party: t
                    } = e;
                    return (0, a.jsx)(m, {
                        party: t
                    }, t.id)
                }) : (0, a.jsxs)("div", {
                    className: A.emptyCard,
                    children: [(0, a.jsx)(o.Heading, {
                        variant: "heading-md/semibold",
                        className: A.emptyHeader,
                        children: N.default.Messages.ACTIVITY_FEED_NONE_PLAYING_HEADER
                    }), (0, a.jsx)(o.Text, {
                        color: "none",
                        className: A.emptyText,
                        variant: "text-sm/normal",
                        children: N.default.Messages.ACTIVITY_FEED_NONE_PLAYING_BODY
                    })]
                }), (0, a.jsx)(a.Fragment, {
                    children: d
                })) : (0, a.jsx)("div", {
                    className: A.emptyCard,
                    children: (0, a.jsx)(o.Spinner, {})
                })
            }
        },
        333705: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("424973"), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("987317"),
                l = n("990766"),
                i = n("309570"),
                r = n("152311"),
                o = n("429928"),
                u = n("36539"),
                d = n("502651"),
                c = n("239380"),
                E = n("550368"),
                f = n("67139"),
                _ = n("62659"),
                C = n("636174"),
                h = n("49111");

            function I(e) {
                let {
                    party: t,
                    onChannelContextMenu: n
                } = e, {
                    voiceChannels: I,
                    currentActivities: T,
                    partiedMembers: S,
                    applicationStreams: N,
                    guildContext: A
                } = t, m = [], p = e => {
                    var t, n;
                    let {
                        length: s
                    } = m;
                    if (0 === s) {
                        m.push(e);
                        return
                    }
                    let l = m[s - 1],
                        i = "".concat(null !== (t = null == e ? void 0 : e.key) && void 0 !== t ? t : ""),
                        r = "".concat(null !== (n = null == l ? void 0 : l.key) && void 0 !== n ? n : ""),
                        o = r.startsWith("game") && i.startsWith("rich-presence");
                    m.push((0, a.jsx)(_.default.Separator, {
                        inset: o
                    }, "sep-".concat(i))), m.push(e)
                };
                for (let {
                        activity: e
                    }
                    of(I.length > 0 && I.forEach(e => {
                        let {
                            members: t,
                            channel: s,
                            guild: l
                        } = e;
                        p((0, a.jsx)(_.default.VoiceSection, {
                            guild: l,
                            channel: s,
                            members: t,
                            partySize: function(e, t) {
                                let n;
                                let a = e.length,
                                    s = 0;
                                if (null != t && null != t.party && null != t.party.size && t.party.size.length >= 2) {
                                    let a = t.party.size;
                                    s = Math.max(a[0] - e.length, 0), n = a[1]
                                } else n = a + s;
                                return {
                                    knownSize: a,
                                    unknownSize: s,
                                    totalSize: n
                                }
                            }(t),
                            onChannelContextMenu: n,
                            onGuildClick: () => {
                                (0, c.transitionToGuild)(l.id)
                            }
                        }, "voice-".concat(s.id)))
                    }), t.currentActivities))
                    if (null != e) {
                        let t = f.createBody(e);
                        if (null != t) {
                            p(t);
                            break
                        }
                    } return N.length > 0 && N.forEach(e => {
                    let {
                        stream: t,
                        streamUser: n,
                        activity: i
                    } = e;
                    p((0, a.jsx)(_.default.ApplicationStreamingSection, {
                        guildId: null == A ? void 0 : A.id,
                        user: n,
                        activity: i,
                        applicationStream: t,
                        onPreviewClick: () => {
                            s.default.selectVoiceChannel(t.channelId), (0, l.watchStreamAndTransitionToStream)(t)
                        }
                    }, "application-stream-".concat(t.ownerId)))
                }), T.forEach((e, t) => {
                    var n, s, l, c, f, N, m, g;
                    let {
                        activity: R,
                        game: O,
                        playingMembers: L,
                        activityUser: v
                    } = e;
                    if (null == R || null == R.type) return null;
                    if (T.length > 1 && R.type === h.ActivityTypes.PLAYING && !(0, i.default)(R) && null != O) p((0, a.jsx)(_.default.GameSection, {
                        icon: O.getIconURL(C.ICON_SIZE),
                        name: O.name,
                        partySize: {
                            knownSize: L.length,
                            unknownSize: 0,
                            totalSize: L.length
                        },
                        members: L
                    }, "game-".concat(null !== (n = R.session_id) && void 0 !== n ? n : t, "-").concat(null !== (s = R.application_id) && void 0 !== s ? s : t)));
                    else if ((0, r.default)(R)) {
                        let e = new Set(L.map(e => e.id)),
                            t = null === (l = I.find(e => null != e)) || void 0 === l ? void 0 : l.channel;
                        null != t && p((0, a.jsx)(_.default.EmbeddedActivitySection, {
                            activity: R,
                            participants: e,
                            channel: t,
                            guildId: t.guild_id
                        }, "embedded-activity-".concat(R.application_id)))
                    } else if ((null != R.assets || (0, i.default)(R)) && R.type === h.ActivityTypes.PLAYING) p((0, a.jsx)(_.default.RichPresenceSection, {
                        activity: R,
                        getAssetImage: E.getAssetImage
                    }, "rich-presence-".concat(null !== (c = R.session_id) && void 0 !== c ? c : t, "-").concat(v.id)));
                    else if ((0, d.default)(R)) {
                        let e = I.length > 0 && I[0].members.length > 1,
                            n = L.length > 1;
                        p((0, a.jsx)(_.default.TwitchSection, {
                            guildId: null == A ? void 0 : A.id,
                            activity: R,
                            user: e || n ? v : null,
                            getAssetImage: E.getAssetImage
                        }, "streaming-".concat(null !== (f = R.session_id) && void 0 !== f ? f : t)))
                    } else(0, o.default)(R) ? p((0, a.jsx)(_.default.SpotifySection, {
                        activity: R,
                        isSolo: 1 === S.length,
                        partySize: {
                            knownSize: L.length,
                            unknownSize: 0,
                            totalSize: L.length
                        },
                        getAssetImage: E.getAssetImage,
                        members: L
                    }, "spotify-".concat(null !== (N = R.session_id) && void 0 !== N ? N : t, "-").concat(v.id))) : (null != R.assets || (0, i.default)(R)) && R.type === h.ActivityTypes.LISTENING ? p((0, a.jsx)(_.default.RichPresenceSection, {
                        activity: R,
                        getAssetImage: E.getAssetImage
                    }, "rich-presence-".concat(null !== (m = R.session_id) && void 0 !== m ? m : t, "-").concat(v.id))) : (0, u.default)(R) && p((0, a.jsx)(_.default.XboxSection, {
                        title: O.name
                    }, "xbox-".concat(null !== (g = R.session_id) && void 0 !== g ? g : t)))
                }), m.length > 0 ? (0, a.jsx)(_.default.Body, {
                    children: m
                }) : null
            }
        },
        67139: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createHeader: function() {
                    return o
                },
                createBody: function() {
                    return u
                },
                shouldShowActivity: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("885590"),
                l = n("837979"),
                i = n("732827");
            let r = {
                [l.STAGE_APPLICATION_ID]: new s.StageChannelNowPlayingDelegate
            };

            function o(e) {
                var t;
                let n = e.application_id;
                if (null == n) return;
                let a = r[n];
                if (null != a && (null === (t = a.shouldShow) || void 0 === t ? void 0 : t.call(a, e)) !== !1) return a.createHeader(e)
            }

            function u(e) {
                var t;
                let n = e.application_id;
                if (null == n) return;
                let s = r[n];
                if ((null == s ? void 0 : s.body) != null && (null === (t = s.shouldShow) || void 0 === t ? void 0 : t.call(s, e)) !== !1) {
                    let t = s.body;
                    return (0, a.jsx)("section", {
                        className: i.section,
                        children: (0, a.jsx)(t, {
                            activity: e
                        })
                    }, "delegate-".concat(n))
                }
            }

            function d(e) {
                var t;
                let n = e.application_id;
                if (null == n) return !0;
                let a = r[n];
                return null == a || (null === (t = a.shouldShow) || void 0 === t ? void 0 : t.call(a, e)) !== !1
            }
        },
        749554: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("627445"),
                l = n.n(s),
                i = n("152311"),
                r = n("429928"),
                o = n("36539"),
                u = n("280174"),
                d = n("158998"),
                c = n("67139"),
                E = n("62659"),
                f = n("636174"),
                _ = n("49111"),
                C = n("782340");

            function h(e) {
                let {
                    party: t,
                    onUserContextMenu: s
                } = e, {
                    priorityMembers: h,
                    guildContext: I
                } = t, T = h[0], S = function(e) {
                    let {
                        priorityMembers: t,
                        partiedMembers: n
                    } = e, a = new Set(t.map(e => {
                        let {
                            user: t
                        } = e;
                        return t.id
                    })), s = n.filter(e => !a.has(e.id)), l = d.default.getName(t[0].user), i = null != t[1] ? d.default.getName(t[1].user) : null != s[0] ? d.default.getName(s[0]) : null;
                    switch (n.length) {
                        case 1:
                            return l;
                        case 2:
                            return C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN_ONLY.format({
                                user1: l,
                                user2: i
                            });
                        default:
                            return C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_HEADER_TWO_KNOWN.format({
                                user1: l,
                                user2: i,
                                extras: n.length - 2
                            })
                    }
                }(t), {
                    subtitle: N,
                    icon: A
                } = function(e) {
                    var t;
                    let {
                        priorityMembers: s,
                        partiedMembers: d,
                        voiceChannels: h,
                        currentActivities: I
                    } = e, T = s.length, S = d.length - T, N = I[0], A = null == N ? void 0 : N.activity, m = null == N ? void 0 : N.startedPlayingTime, p = {
                        name: null !== (t = null == A ? void 0 : A.name) && void 0 !== t ? t : ""
                    };
                    if ((0, i.default)(A) && null != A) return {
                        subtitle: (0, a.jsx)(u.default, {
                            start: m,
                            location: u.default.Locations.ACTIVITY_FEED_NEW,
                            messageProps: p
                        }),
                        icon: null
                    };
                    if (T + S === 1 && null != N) {
                        let {
                            game: e
                        } = N;
                        if (null == A) return {
                            subtitle: null,
                            icon: null
                        };
                        let t = c.createHeader(A);
                        if (null != t) return t;
                        switch (A.type) {
                            case _.ActivityTypes.PLAYING:
                                if ((0, o.default)(A)) return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_XBOX,
                                    icon: (0, a.jsx)(E.default.Header.Icon, {
                                        src: E.default.Header.Icon.Src.XBOX
                                    })
                                };
                                return {
                                    subtitle: (0, a.jsx)(u.default, {
                                        start: m,
                                        location: u.default.Locations.ACTIVITY_FEED_NEW,
                                        messageProps: p
                                    }), icon: null != e ? (0, a.jsx)(E.default.Header.Icon, {
                                        src: null != e.getIconURL(f.ICON_SIZE) ? e.getIconURL(f.ICON_SIZE) : n("992739")
                                    }) : null
                                };
                            case _.ActivityTypes.STREAMING:
                                return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_STREAMING_TWITCH, icon: null != e && null != e.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                        src: e.getIconURL(f.ICON_SIZE)
                                    }) : null
                                };
                            case _.ActivityTypes.LISTENING:
                                let s;
                                return s = (0, r.default)(A) ? (0, a.jsx)(E.default.Header.Icon, {
                                    src: E.default.Header.Icon.Src.SPOTIFY
                                }) : null != e.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                    src: e.getIconURL(f.ICON_SIZE)
                                }) : (0, a.jsx)(E.default.Header.Icon, {
                                    src: n("992739")
                                }), {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_LISTENING.format({
                                        name: A.name
                                    }),
                                    icon: s
                                };
                            case _.ActivityTypes.WATCHING:
                                return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_WATCHING, icon: null != e && null != e.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                        src: e.getIconURL(f.ICON_SIZE)
                                    }) : null
                                };
                            default:
                                return {
                                    subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL, icon: null
                                }
                        }
                    }
                    if (0 === I.length) {
                        if (h.length > 0) return {
                            subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_IN_A_VOICE_CHANNEL,
                            icon: null
                        };
                        let e = I[0];
                        if (null != e) {
                            let {
                                activity: t
                            } = e;
                            if (null != t) {
                                let e = c.createHeader(t);
                                if (null != e) return e
                            }
                            if (null != t && t.type === _.ActivityTypes.LISTENING) return {
                                subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_SPOTIFY,
                                icon: (0, a.jsx)(E.default.Header.Icon, {
                                    src: E.default.Header.Icon.Src.SPOTIFY
                                })
                            }
                        }
                    } else if (1 === I.length) {
                        let e = I.find(e => null != e.activity);
                        if (null == e) return {
                            subtitle: null,
                            icon: null
                        };
                        let {
                            activity: t,
                            game: n,
                            startedPlayingTime: s
                        } = e;
                        return l(null != t, "Activity was null somehow"), {
                            subtitle: (0, a.jsx)(u.default, {
                                start: s,
                                location: u.default.Locations.ACTIVITY_FEED_NEW,
                                messageProps: p
                            }),
                            icon: null != n && null != n.getIconURL(f.ICON_SIZE) ? (0, a.jsx)(E.default.Header.Icon, {
                                src: n.getIconURL(f.ICON_SIZE)
                            }) : null
                        }
                    }
                    return {
                        subtitle: C.default.Messages.ACTIVITY_FEED_NOW_PLAYING_MULTIPLE_GAMES,
                        icon: (0, a.jsx)(E.default.Header.Icon, {
                            src: E.default.Header.Icon.Src.MULTIPLE
                        })
                    }
                }(t);
                return (0, a.jsx)(E.default.Header, {
                    priorityUser: T,
                    guildId: null == I ? void 0 : I.id,
                    title: S,
                    subtitle: N,
                    icon: A,
                    onContextMenu: e => s(e, T.user)
                })
            }
        },
        62659: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return el
                }
            }), n("222007");
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("414456"),
                o = n.n(r),
                u = n("446674"),
                d = n("669491"),
                c = n("77078"),
                E = n("832627"),
                f = n("997289"),
                _ = n("376556"),
                C = n("706508"),
                h = n("287585"),
                I = n("309570"),
                T = n("985677"),
                S = n("429928"),
                N = n("502651"),
                A = n("29088"),
                m = n("698372"),
                p = n("141962"),
                g = n("685665"),
                R = n("299285"),
                O = n("679653"),
                L = n("223913"),
                v = n("673527"),
                M = n("395763"),
                P = n("271938"),
                D = n("42203"),
                y = n("697218"),
                x = n("944832"),
                U = n("953109"),
                b = n("280174"),
                G = n("163466"),
                j = n("316887"),
                w = n("936629"),
                k = n("420145"),
                F = n("368121"),
                B = n("980423"),
                H = n("550368"),
                V = n("449008"),
                Y = n("158998"),
                W = n("807534"),
                K = n("49111"),
                z = n("782340"),
                q = n("732827");
            let Q = {
                    SMALL: 64,
                    LARGE: 160
                },
                Z = [14, 14, 12, 12, 10, 8, 6],
                X = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return (0, l.jsx)(c.Text, {
                        className: o(q.textContent, t),
                        variant: "text-sm/semibold",
                        children: e
                    })
                },
                J = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return (0, l.jsx)(c.Text, {
                        className: o(q.textContent, t),
                        variant: "text-xs/normal",
                        children: e
                    })
                },
                $ = (0, E.default)(e => {
                    let {
                        message: t
                    } = e;
                    return (0, l.jsx)("div", {
                        className: q.timestamp,
                        children: t
                    })
                }),
                ee = e => {
                    let {
                        children: t
                    } = e;
                    return (0, l.jsx)("section", {
                        className: q.section,
                        children: t
                    })
                };
            class et extends i.Component {
                renderTimePlayed() {
                    let e;
                    let {
                        activity: t
                    } = this.props, {
                        timestamps: n
                    } = t;
                    return null == n || !(0, T.default)(t) || (0, S.default)(t) ? null : J(e = (0, I.default)(t) ? (0, l.jsx)($, {
                        timestamps: n
                    }) : (0, l.jsx)(b.default, {
                        start: n.start,
                        end: n.end,
                        location: b.default.Locations.USER_ACTIVITY,
                        className: q.playTime
                    }))
                }
                render() {
                    var e, t;
                    let {
                        activity: {
                            assets: a,
                            details: s,
                            state: i,
                            application_id: r
                        },
                        getAssetImage: u
                    } = this.props;
                    return (0, l.jsx)(ee, {
                        children: (0, l.jsxs)("div", {
                            className: q.activitySection,
                            children: [null != a && 0 !== Object.keys(a).length ? (0, l.jsxs)("div", {
                                className: q.activitySectionAssets,
                                children: [(0, l.jsx)("img", {
                                    alt: null !== (e = a.large_text) && void 0 !== e ? e : "",
                                    src: u(r, a.large_image, [Q.LARGE, Q.LARGE]),
                                    className: o(q.largeImage, {
                                        [q.largeImageMask]: null != a.small_image
                                    })
                                }), null != a.small_image ? (0, l.jsx)("img", {
                                    alt: null !== (t = a.small_text) && void 0 !== t ? t : "",
                                    src: u(r, a.small_image, [Q.SMALL, Q.SMALL]),
                                    className: q.smallImage
                                }) : null]
                            }) : (0, l.jsx)("div", {
                                className: q.activitySectionAssets,
                                children: (0, l.jsx)("img", {
                                    alt: "",
                                    src: n("992739"),
                                    className: q.largeImage
                                })
                            }), (0, l.jsxs)("div", {
                                children: [X(null != s && "" !== s ? s : z.default.Messages.USER_ACTIVITY_HEADER_PLAYING), null != i ? J(i) : null, this.renderTimePlayed()]
                            })]
                        })
                    })
                }
            }(s = a || (a = {})).XBOX = "XBOX", s.SPOTIFY = "SPOTIFY", s.MULTIPLE = "MULTIPLE";
            let en = e => {
                let t, {
                    src: n,
                    onClick: a,
                    onContextMenu: s
                } = e;
                switch (n) {
                    case "XBOX":
                        t = (0, l.jsx)(k.default, {
                            className: q.headerIcon,
                            color: d.default.unsafe_rawColors.PRIMARY_300.css
                        });
                        break;
                    case "SPOTIFY":
                        t = (0, l.jsx)(w.default, {
                            className: q.headerIcon,
                            color: d.default.unsafe_rawColors.SPOTIFY.css
                        });
                        break;
                    case "MULTIPLE":
                        t = (0, l.jsx)("div", {
                            className: q.multipleIconWrapper,
                            children: (0, l.jsx)(j.default, {
                                className: o(q.headerIcon, q.multipleIcon),
                                color: d.default.unsafe_rawColors.PRIMARY_300.css
                            })
                        });
                        break;
                    default:
                        t = (0, l.jsx)("img", {
                            src: null != n ? n : void 0,
                            alt: "",
                            className: q.headerIcon
                        })
                }
                return null != a || null != s ? (0, l.jsx)(c.Clickable, {
                    onClick: a,
                    className: o(null != a ? q.clickableIcon : ""),
                    onContextMenu: s,
                    children: t
                }) : t
            };
            en.Src = a;
            let ea = e => {
                let {
                    priorityUser: t,
                    title: n,
                    subtitle: a,
                    icon: s,
                    onContextMenu: i,
                    guildId: r
                } = e;
                return (0, l.jsxs)("header", {
                    className: null != s ? q.headerFull : q.headerSimple,
                    children: [(0, l.jsx)(c.Avatar, {
                        src: t.user.getAvatarURL(r, 32),
                        "aria-label": t.user.username,
                        size: c.AvatarSizes.SIZE_32,
                        className: q.headerAvatar,
                        status: t.status,
                        onContextMenu: i
                    }), (0, l.jsxs)("div", {
                        className: q.headerDetails,
                        children: [(0, l.jsx)(c.Text, {
                            className: o(q.textContent),
                            variant: "text-md/semibold",
                            children: n
                        }), (0, l.jsx)(c.Text, {
                            color: "header-secondary",
                            className: q.textContent,
                            variant: "text-sm/normal",
                            children: a
                        })]
                    }), null != s ? s : null]
                })
            };
            ea.Icon = en;
            let es = e => {
                let {
                    children: t,
                    className: n,
                    ...a
                } = e;
                return (0, l.jsx)(c.FocusRing, {
                    children: (0, l.jsx)(G.default, {
                        className: o(n, q.wrapper),
                        padded: !0,
                        ...a,
                        children: t
                    })
                })
            };
            es.Header = ea, es.Body = e => {
                let {
                    children: t
                } = e;
                return (0, l.jsx)(G.default, {
                    inset: !0,
                    padded: !1,
                    className: q.body,
                    children: t
                })
            }, es.Separator = e => {
                let {
                    inset: t,
                    className: n
                } = e;
                return (0, l.jsx)("div", {
                    className: o(q.separator, {
                        [q.inset]: t
                    }, n)
                })
            }, es.VoiceSection = e => {
                var t, n;
                let {
                    guild: a,
                    channel: s,
                    onGuildClick: r,
                    partySize: u,
                    members: d,
                    onChannelContextMenu: E
                } = e, f = i.useRef(null), _ = (0, O.default)(s, !0);
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.voiceSection,
                        ref: f,
                        onContextMenu: e => E(e, s),
                        children: [(0, l.jsx)(c.Clickable, {
                            onClick: r,
                            "aria-hidden": !0,
                            tabIndex: -1,
                            children: (0, l.jsxs)("div", {
                                className: q.voiceSectionAssets,
                                children: [null != a.getIconURL(32) ? (0, l.jsx)("img", {
                                    alt: "",
                                    src: null !== (t = a.getIconURL(32)) && void 0 !== t ? t : void 0,
                                    className: o(q.voiceSectionGuildImage, q.largeImageMask)
                                }) : (0, l.jsx)("div", {
                                    className: q.voiceSectionNoGuildImageWrapper,
                                    children: (0, l.jsx)("div", {
                                        className: q.voiceSectionNoGuildImage,
                                        style: {
                                            fontSize: null !== (n = Z[a.acronym.length]) && void 0 !== n ? n : Z[Z.length - 1]
                                        },
                                        children: a.acronym
                                    })
                                }), (0, l.jsx)("div", {
                                    className: q.voiceSectionIconWrapper,
                                    children: (0, l.jsx)(F.default, {
                                        className: q.voiceSectionIcon
                                    })
                                })]
                            })
                        }), (0, l.jsx)(c.Clickable, {
                            onClick: r,
                            focusProps: {
                                ringTarget: f
                            },
                            children: (0, l.jsxs)("div", {
                                className: q.voiceSectionDetails,
                                children: [X(a.toString(), q.voiceSectionText), J(_, q.voiceSectionText)]
                            })
                        }), (0, l.jsx)(W.default, {
                            partySize: u,
                            members: d,
                            guildId: a.id
                        })]
                    })
                })
            }, es.GameSection = e => {
                let {
                    icon: t,
                    name: n,
                    partySize: a,
                    members: s
                } = e;
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.gameSection,
                        children: [null != t ? (0, l.jsx)("img", {
                            alt: "",
                            src: t,
                            className: q.gameSectionIcon
                        }) : null, (0, l.jsxs)("div", {
                            children: [X(n), J(z.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format({
                                memberCount: a.totalSize
                            }))]
                        }), (0, l.jsx)(W.default, {
                            partySize: a,
                            members: s
                        })]
                    })
                })
            }, es.RichPresenceSection = et, es.XboxSection = e => {
                let {
                    title: t
                } = e;
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.xboxSection,
                        children: [(0, l.jsx)(k.default, {
                            className: q.xboxSectionIcon
                        }), (0, l.jsxs)("div", {
                            className: q.xboxSectionDetails,
                            children: [X(t), J(z.default.Messages.GAME_FEED_ACTIVITY_PLAYING_XBOX)]
                        })]
                    })
                })
            }, es.SpotifySection = e => {
                var t;
                let {
                    activity: {
                        assets: n,
                        details: a,
                        state: s,
                        application_id: i
                    },
                    partySize: r,
                    members: u,
                    isSolo: c,
                    getAssetImage: E
                } = e;
                return (0, l.jsx)(ee, {
                    children: (0, l.jsxs)("div", {
                        className: q.spotifySection,
                        children: [null != n ? (0, l.jsxs)("div", {
                            className: q.activitySectionAssets,
                            children: [(0, l.jsx)("img", {
                                alt: null !== (t = n.large_text) && void 0 !== t ? t : "",
                                src: E(i, n.large_image, [Q.LARGE, Q.LARGE]),
                                className: o(q.largeImage, q.borderRadius0, {
                                    [q.largeImageMask]: null != n.small_image
                                })
                            }), c ? null : (0, l.jsx)(w.default, {
                                className: q.smallImage,
                                color: d.default.unsafe_rawColors.SPOTIFY.css
                            })]
                        }) : (0, l.jsx)("div", {}), (0, l.jsxs)("div", {
                            children: [null != a ? X(a) : null, null != s ? J(s) : null]
                        }), (0, l.jsx)(W.default, {
                            minAvatarsShown: c ? 2 : 1,
                            partySize: r,
                            members: u
                        })]
                    })
                })
            }, es.TwitchSection = e => {
                let t, {
                        activity: a,
                        user: s,
                        getAssetImage: i,
                        guildId: r
                    } = e,
                    {
                        name: u,
                        details: d,
                        assets: E,
                        application_id: f
                    } = a;
                if (null != E && (0, N.default)(a)) {
                    var C;
                    t = (0, l.jsx)(x.default, {
                        className: q.twitchSectionPreviewWrapper,
                        aspectRatio: 16 / 9,
                        children: (0, l.jsxs)(c.Clickable, {
                            href: (0, h.default)(a),
                            tag: "a",
                            target: "_blank",
                            children: [(0, l.jsx)("img", {
                                alt: null !== (C = E.large_text) && void 0 !== C ? C : "",
                                src: i(f, E.large_image, [900, 500]),
                                className: q.twitchSectionPreview
                            }), (0, l.jsx)("img", {
                                src: n("306910"),
                                className: q.twitchSectionPlayButton,
                                alt: ""
                            })]
                        })
                    })
                }
                return (0, l.jsxs)(ee, {
                    children: [(0, l.jsxs)("div", {
                        className: o({
                            [q.twitchSectionSimple]: null == s,
                            [q.twitchSectionFull]: null != s
                        }),
                        children: [(0, l.jsx)("img", {
                            alt: "",
                            src: _.default.get(K.PlatformTypes.TWITCH).icon.lightSVG,
                            className: q.twitchSectionIcon
                        }), (0, l.jsxs)("div", {
                            children: [X(u), null != d ? J(d) : null]
                        }), null != s ? (0, l.jsx)(c.Avatar, {
                            src: s.getAvatarURL(r, 24),
                            "aria-label": s.username,
                            className: q.twitchSectionAvatar,
                            size: c.AvatarSizes.SIZE_24
                        }) : null]
                    }), t]
                })
            }, es.ApplicationStreamingSection = e => {
                var t;
                let {
                    activity: n,
                    user: a,
                    applicationStream: s,
                    onPreviewClick: i,
                    guildId: r
                } = e, o = (0, u.useStateFromStores)([D.default], () => D.default.getChannel(s.channelId)), [d, E] = (0, L.useCanWatchStream)(o), f = (0, l.jsx)(x.default, {
                    className: q.applicationStreamingPreviewWrapper,
                    aspectRatio: 16 / 9,
                    children: (0, l.jsxs)(c.Clickable, {
                        onClick: d ? i : void 0,
                        className: q.applicationStreamingPreviewSize,
                        children: [(0, l.jsx)(v.default, {
                            stream: s,
                            className: q.applicationStreamingPreviewSize
                        }), (0, l.jsx)("div", {
                            className: q.applicationStreamingHoverWrapper,
                            children: (0, l.jsx)("div", {
                                className: q.applicationStreamingHoverText,
                                children: (0, L.getStreamCTAString)(E)
                            })
                        })]
                    })
                }), _ = null !== (t = (0, A.default)(n, s)) && void 0 !== t ? t : z.default.Messages.SHARING_SCREEN;
                return (0, l.jsxs)(ee, {
                    children: [(0, l.jsxs)("div", {
                        className: q.applicationStreamingSection,
                        children: [(0, l.jsx)(c.Avatar, {
                            size: c.AvatarSizes.SIZE_32,
                            src: a.getAvatarURL(r, 32),
                            "aria-label": a.username,
                            className: q.applicationStreamingAvatar
                        }), (0, l.jsxs)("div", {
                            children: [X(Y.default.getName(a)), J(_)]
                        }), (0, l.jsx)(B.default, {
                            size: B.default.Sizes.SMALL
                        })]
                    }), f]
                })
            }, es.EmbeddedActivitySection = e => {
                var t;
                let {
                    activity: n,
                    channel: a,
                    guildId: s,
                    participants: r
                } = e, o = (0, m.default)(), [d, E] = i.useState(null);
                i.useEffect(() => {
                    null != n.application_id && (0, H.fetchAssetIds)(n.application_id, ["embedded_background"]).then(e => {
                        let [t] = e;
                        return E(t)
                    })
                }, [n.application_id]);
                let _ = (0, u.useStateFromStoresArray)([y.default, P.default], () => Array.from(r).map(e => P.default.getId() === e ? null : y.default.getUser(e)).filter(V.isNotNullish)),
                    h = (0, f.useAnalyticsContext)(),
                    {
                        analyticsLocations: I
                    } = (0, g.default)(),
                    T = R.default.getApplication(null !== (t = null == n ? void 0 : n.application_id) && void 0 !== t ? t : "");
                if (null == T) return null;
                let S = null != n.created_at && n.created_at > 0 ? {
                        start: n.created_at
                    } : void 0,
                    N = (0, H.getAssetImage)(T.id, d, 300);
                return (0, l.jsxs)(ee, {
                    children: [(0, l.jsxs)("div", {
                        className: q.embeddedActivityTopRow,
                        children: [(0, l.jsx)(U.default, {
                            game: T,
                            size: U.default.Sizes.XSMALL,
                            className: q.embeddedActivityIcon
                        }), (0, l.jsx)("div", {
                            className: q.embeddedActivityName,
                            children: (0, l.jsx)(c.Text, {
                                variant: "text-sm/semibold",
                                children: T.name
                            })
                        }), null != S ? (0, l.jsx)("div", {
                            className: q.embeddedActivityTimeElapsed,
                            children: (0, l.jsx)(c.Text, {
                                color: "text-muted",
                                variant: "text-sm/normal",
                                children: (0, l.jsx)($, {
                                    timestamps: S
                                })
                            })
                        }) : null]
                    }), (0, l.jsx)(x.default, {
                        aspectRatio: 16 / 9,
                        children: (0, l.jsxs)("div", {
                            className: q.embeddedActivityPlayerContainer,
                            children: [null != N ? (0, l.jsx)("img", {
                                src: N,
                                alt: T.name,
                                className: q.embeddedActivityImage
                            }) : null, (0, l.jsxs)("div", {
                                className: q.embeddedActivityImageOverlay,
                                children: [(0, l.jsx)(M.Avatars, {
                                    users: _,
                                    guildId: s,
                                    channelId: a.id
                                }), (0, l.jsx)("div", {
                                    className: q.embeddedActivityJoinWrapper,
                                    children: (0, l.jsx)(c.Button, {
                                        size: c.Button.Sizes.SMALL,
                                        onClick: e => {
                                            e.stopPropagation(), (0, C.default)({
                                                activity: n,
                                                currentEmbeddedApplication: o,
                                                activityChannelId: a.id,
                                                locationObject: h.location,
                                                embeddedActivitiesManager: p.default,
                                                analyticsLocations: I
                                            })
                                        },
                                        children: z.default.Messages.JOIN
                                    })
                                })]
                            })]
                        })
                    })]
                })
            };
            var el = es
        },
        265412: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("151426"),
                i = n("77078"),
                r = n("901582"),
                o = n("812204"),
                u = n("685665"),
                d = n("509802"),
                c = n("911574"),
                E = n("350522"),
                f = n("476765"),
                _ = n("386133"),
                C = n("49111"),
                h = n("782340"),
                I = n("607626");

            function T() {
                let {
                    AnalyticsLocationProvider: e
                } = (0, u.default)(o.default.ACTIVE_NOW_COLUMN), t = (0, s.useStateFromStores)([E.default], () => E.default.hasConsented(C.Consents.PERSONALIZATION)), n = t ? [] : [l.DismissibleContent.NOW_PLAYING_CONSENT_CARD], T = (0, f.useUID)();
                return (0, a.jsx)(e, {
                    children: (0, a.jsx)(r.default, {
                        section: C.AnalyticsSections.ACTIVE_NOW_COLUMN,
                        children: (0, a.jsx)("aside", {
                            className: I.container,
                            "aria-labelledby": T,
                            children: (0, a.jsxs)(i.Scroller, {
                                className: I.scroller,
                                children: [(0, a.jsx)(i.Heading, {
                                    variant: "heading-lg/semibold",
                                    className: I.header,
                                    id: T,
                                    children: h.default.Messages.GAME_FEED_CURRENT_HEADER_TITLE
                                }), (0, a.jsx)(d.default, {
                                    contentTypes: n,
                                    children: e => {
                                        let {
                                            visibleContent: t,
                                            markAsDismissed: n
                                        } = e;
                                        if (t === l.DismissibleContent.NOW_PLAYING_CONSENT_CARD) return (0, a.jsx)(c.default, {
                                            className: I.consentCard,
                                            markAsDismissed: n
                                        })
                                    }
                                }), (0, a.jsx)(_.default, {})]
                            })
                        })
                    })
                })
            }
        },
        807534: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            }), n("424973");
            var a = n("37983");
            n("884691");
            var s = n("917351"),
                l = n.n(s),
                i = n("77078"),
                r = n("86621"),
                o = n("506885"),
                u = n("981601"),
                d = n("479020"),
                c = n("449008"),
                E = n("49111"),
                f = n("683168");
            let _ = (0, r.default)(e => {
                let {
                    member: t,
                    empty: n,
                    analyticsContext: s,
                    guildId: l
                } = e;
                if (n) return (0, a.jsx)("div", {
                    className: f.partyMemberEmpty
                });
                if (null == t) return (0, a.jsx)("div", {
                    className: f.partyMemberUnknown,
                    children: (0, a.jsx)(d.default, {
                        className: f.partyMemberUnknownIcon
                    })
                });
                let r = {
                    location: {
                        ...s.location,
                        object: E.AnalyticsObjects.AVATAR
                    }
                };
                return (0, a.jsx)("div", {
                    className: f.partyMemberKnown,
                    children: (0, a.jsx)(i.Popout, {
                        preload: () => (0, o.default)(t.id, t.getAvatarURL(l, 80), {
                            guildId: l
                        }),
                        renderPopout: e => (0, a.jsx)(u.default, {
                            ...e,
                            userId: t.id,
                            analyticsParams: r
                        }),
                        position: "left",
                        children: e => (0, a.jsx)(i.Avatar, {
                            ...e,
                            src: t.getAvatarURL(l, 24),
                            "aria-label": t.username,
                            size: i.AvatarSizes.SIZE_24,
                            className: f.partyMember
                        })
                    })
                })
            });
            var C = e => {
                let {
                    partySize: t,
                    members: n,
                    minAvatarsShown: s = 1,
                    maxAvatarsShown: i = 2,
                    guildId: r
                } = e, {
                    unknownSize: o,
                    totalSize: u,
                    knownSize: d
                } = t;
                if (u < s) return null;
                let E = l(n).filter(c.isNotNullish).take(i).map(e => (0, a.jsx)(_, {
                    member: e,
                    guildId: r
                }, e.id)).value();
                for (let e = 0; e < o && E.length < i; e++) E.push((0, a.jsx)(_, {
                    guildId: r
                }, "unknown-member-".concat(e)));
                let C = u - d - o;
                for (let e = 0; e < C && E.length < i; e++) E.push((0, a.jsx)(_, {
                    empty: !0,
                    guildId: r
                }, "empty-member-".concat(e)));
                let h = Math.max(Math.min(u - E.length, 99), 0);
                if (1 === h) {
                    let e = n[i];
                    E.push((0, a.jsx)(_, {
                        member: e,
                        guildId: r
                    }, e.id))
                }
                return (0, a.jsx)("div", {
                    className: f.wrapper,
                    children: (0, a.jsxs)("div", {
                        className: f.partyMembers,
                        children: [E, h > 1 ? (0, a.jsxs)("div", {
                            className: f.partyMemberOverflow,
                            children: ["+", h]
                        }) : null]
                    })
                })
            }
        },
        36512: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("186888"),
                i = n("70118"),
                r = n("398953"),
                o = n("7259"),
                u = n("250529"),
                d = n("391950"),
                c = n("782340");

            function E(e) {
                let {
                    party: t,
                    close: n,
                    onSelect: E
                } = e, f = (0, r.default)(t), _ = (0, d.default)(t), C = (0, u.default)(t), h = (0, o.default)(t), I = (0, l.default)(t), T = (0, i.default)(t);
                return (0, a.jsxs)(s.Menu, {
                    navId: "now-playing-menu",
                    onClose: n,
                    "aria-label": c.default.Messages.GENERIC_ACTIONS_MENU_LABEL,
                    onSelect: E,
                    children: [f, (0, a.jsxs)(s.MenuGroup, {
                        children: [_, C]
                    }), (0, a.jsx)(s.MenuGroup, {
                        children: h
                    }), (0, a.jsx)(s.MenuGroup, {
                        children: I
                    }), T]
                })
            }
        },
        444097: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                },
                NowPlayingUnknownMemberMenuItem: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("145079"),
                o = n("402243");

            function u(e) {
                let {
                    user: t,
                    status: n,
                    isFocused: s,
                    guildId: l
                } = e;
                return (0, a.jsxs)("div", {
                    className: o.memberItem,
                    children: [(0, a.jsx)(i.Avatar, {
                        src: t.getAvatarURL(l, 24),
                        className: o.avatar,
                        "aria-label": t.username,
                        size: i.AvatarSizes.SIZE_24,
                        status: n,
                        statusColor: s ? "currentColor" : void 0
                    }), (0, a.jsx)(r.default, {
                        user: t,
                        hideDiscriminator: !0
                    })]
                })
            }

            function d(e) {
                let {
                    label: t
                } = e;
                return (0, a.jsxs)("div", {
                    className: o.memberItem,
                    children: [(0, a.jsx)("div", {
                        className: l(o.avatar, o.unknown)
                    }), (0, a.jsx)("div", {
                        children: t
                    })]
                })
            }
        },
        186888: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            }), n("424973"), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("260365"),
                o = n("987317"),
                u = n("79112"),
                d = n("376556"),
                c = n("871388"),
                E = n("152311"),
                f = n("36539"),
                _ = n("860285"),
                C = n("47319"),
                h = n("86878"),
                I = n("686470"),
                T = n("568307"),
                S = n("535974"),
                N = n("599110"),
                A = n("602043"),
                m = n("780009"),
                p = n("49111"),
                g = n("782340");
            let R = d.default.get(p.PlatformTypes.XBOX).name;

            function O(e) {
                let {
                    currentActivities: t
                } = e, n = t.length > 1, O = function(e) {
                    let {
                        currentActivities: t
                    } = e, n = (0, l.useStateFromStores)([C.default], () => C.default.getAccounts().some(e => e.type === d.default.get(p.PlatformTypes.XBOX).type)), s = t.some(e => {
                        let {
                            activity: t
                        } = e;
                        return (0, f.default)(t)
                    });
                    return n || !s ? null : (0, a.jsx)(i.MenuItem, {
                        id: "xbox-connect",
                        action: () => u.default.open(p.UserSettingsSections.CONNECTIONS),
                        label: g.default.Messages.USER_ACTIVITY_CONNECT_PLATFORM.format({
                            platform: R
                        })
                    })
                }(e), L = function(e) {
                    let {
                        currentActivities: t
                    } = e, n = s.useContext(N.AnalyticsContext);
                    return (0, l.useStateFromStoresArray)([T.default, I.default, _.default, S.default, h.default], () => t.filter(e => !(0, E.default)(e.activity)).map(e => {
                        let {
                            activity: t,
                            game: a
                        } = e, s = I.default.getActiveLibraryApplication(a.id);
                        return {
                            ...e,
                            libraryApplication: s,
                            canJoin: null != t && (0, c.default)(t, p.ActivityFlags.JOIN) && t.type === p.ActivityTypes.PLAYING,
                            canPlay: (0, A.isLaunchable)({
                                LibraryApplicationStore: I.default,
                                LaunchableGameStore: _.default,
                                DispatchApplicationStore: S.default,
                                ConnectedAppsStore: h.default,
                                applicationId: a.id,
                                branchId: null != s ? s.branchId : null
                            }),
                            isLaunching: _.default.launchingGames.has(a.id),
                            isRunning: T.default.getRunningVerifiedApplicationIds().includes(a.id),
                            location: n.location
                        }
                    }), [n.location, t])
                }(e), v = [];
                for (let e of L) {
                    let {
                        activity: t
                    } = e;
                    null != t && null != t.type && v.push(function(e, t) {
                        let {
                            canJoin: n,
                            activity: s,
                            activityUser: l
                        } = e;
                        if (!n || null == s) return null;
                        async function u() {
                            if (null == s) return;
                            let e = await r.default.sendActivityInviteUser({
                                type: p.ActivityActionTypes.JOIN_REQUEST,
                                userId: l.id,
                                activity: s,
                                location: p.AnalyticsLocations.PROFILE_POPOUT
                            });
                            null != e && o.default.selectPrivateChannel(e.id)
                        }
                        return (0, a.jsx)(i.MenuItem, {
                            id: "join-".concat(s.session_id),
                            label: t ? g.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN_USER.format({
                                name: l.toString()
                            }) : g.default.Messages.USER_ACTIVITY_ACTION_ASK_TO_JOIN,
                            action: u
                        })
                    }(e, n), function(e, t) {
                        let {
                            activity: n,
                            game: s,
                            libraryApplication: l,
                            location: r,
                            canPlay: o,
                            isRunning: u,
                            isLaunching: d
                        } = e;
                        if (!o || null == n) return null;
                        let c = u ? g.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_RUNNING.format({
                            name: s.name
                        }) : d ? g.default.Messages.ACTIVITY_FEED_POPOUT_APPLICATION_LAUNCHING.format({
                            name: s.name
                        }) : void 0;
                        return (0, a.jsx)(i.MenuItem, {
                            id: "play-".concat(n.session_id),
                            action: function() {
                                (0, m.playApplication)(s.id, l, {
                                    analyticsParams: {
                                        location: {
                                            ...r,
                                            object: p.AnalyticsObjects.LIST_ITEM
                                        }
                                    }
                                })
                            },
                            label: t ? g.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH_APPLICATION_NAME.format({
                                name: s.name
                            }) : g.default.Messages.APPLICATION_CONTEXT_MENU_LAUNCH,
                            subtext: c
                        })
                    }(e, n))
                }
                return [O, ...v]
            }
        },
        70118: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            }), n("424973"), n("222007"), n("881410");
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("401642"),
                r = n("444097"),
                o = n("49111"),
                u = n("782340");

            function d(e, t, n, s, d) {
                let c = [];
                for (let {
                        user: t,
                        status: n
                    }
                    of e) c.push((0, a.jsx)(l.MenuItem, {
                    id: t.id,
                    keepItemStyles: !0,
                    render: e => (0, a.jsx)(r.default, {
                        ...e,
                        user: t,
                        status: n,
                        guildId: d
                    }),
                    action: () => (0, i.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: {
                            section: o.AnalyticsSections.ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU
                        }
                    })
                }));
                for (let e of t) c.push((0, a.jsx)(l.MenuItem, {
                    id: e.id,
                    keepItemStyles: !0,
                    render: t => (0, a.jsx)(r.default, {
                        ...t,
                        user: e,
                        guildId: d
                    }),
                    action: () => (0, i.openUserProfileModal)({
                        userId: e.id,
                        analyticsLocation: {
                            section: o.AnalyticsSections.ACTIVITY_FEED_NOW_PLAYING_CONTEXT_MENU
                        }
                    })
                }));
                let E = n - c.length;
                return E > 0 && c.push((0, a.jsx)(l.MenuItem, {
                    id: "unknown-members-".concat(null == s ? void 0 : s.session_id),
                    render: e => (0, a.jsx)(r.NowPlayingUnknownMemberMenuItem, {
                        ...e,
                        label: u.default.Messages.GAME_FEED_UNKNOWN_PLAYERS.format({
                            count: E
                        })
                    })
                })), c
            }

            function c(e) {
                let {
                    priorityMembers: t,
                    partiedMembers: n,
                    currentActivities: i,
                    guildContext: r
                } = e, o = new Set(t.map(e => {
                    let {
                        user: t
                    } = e;
                    return t.id
                })), c = n.filter(e => !o.has(e.id)), E = s.useMemo(() => {
                    let e = i.flatMap(e => {
                        let {
                            playingMembers: t
                        } = e;
                        return t
                    }).map(e => e.id);
                    return n.filter(t => !e.includes(t.id))
                }, [n, i]);
                if (i.length <= 1 && 0 === E.length) {
                    var f, _;
                    return (0, a.jsx)(l.MenuGroup, {
                        label: n.length > 1 ? u.default.Messages.ACTIVITY_FEED_SINGLE_MEMBER_LIST_HEADER.format({
                            memberCount: n.length
                        }) : void 0,
                        children: d(t, c, n.length, null !== (_ = null === (f = i[0]) || void 0 === f ? void 0 : f.activity) && void 0 !== _ ? _ : void 0, null == r ? void 0 : r.id)
                    })
                }
                let C = i.map((e, n) => {
                        let {
                            playingMembers: s,
                            game: i,
                            activity: u
                        } = e, c = new Set(s.map(e => e.id));
                        return (0, a.jsx)(l.MenuGroup, {
                            label: "".concat(i.name, " - ").concat(s.length),
                            children: d(t.filter(e => {
                                let {
                                    user: t
                                } = e;
                                return c.has(t.id)
                            }), s.filter(e => !o.has(e.id)), s.length, null != u ? u : void 0, null == r ? void 0 : r.id)
                        }, n)
                    }),
                    h = E.map(e => e.id),
                    I = (0, a.jsx)(l.MenuGroup, {
                        label: "".concat(u.default.Messages.ACTIVITY_FEED_OTHER_MEMBER_LIST_HEADER, " - ").concat(E.length),
                        children: d(t.filter(e => {
                            let {
                                user: t
                            } = e;
                            return h.includes(t.id)
                        }), E.filter(e => !o.has(e.id)), E.length, void 0, null == r ? void 0 : r.id)
                    });
                return [...C, I]
            }
        },
        398953: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("450911"),
                r = n("716241"),
                o = n("456353"),
                u = n("599110"),
                d = n("49111"),
                c = n("782340");

            function E(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    {
                        priorityMembers: n,
                        partiedMembers: E
                    } = e,
                    f = s.useContext(u.AnalyticsContext),
                    _ = n.map(e => {
                        let {
                            user: t
                        } = e;
                        return t.id
                    }),
                    C = 1 === E.length && 1 === n.length,
                    h = n.length - E.length > 0;
                return (C || t) && !h && 0 !== _.length ? (0, a.jsx)(l.MenuItem, {
                    id: "message",
                    action: function() {
                        i.default.openPrivateChannel(_).then(t => r.default.trackWithMetadata(d.AnalyticEvents.ACTIVITY_FEED_DM_VISITED, {
                            source: {
                                ...f.location,
                                object: d.AnalyticsObjects.LIST_ITEM
                            },
                            channel_id: t,
                            recipient_id: "string" == typeof _ ? _ : _[0],
                            af_recently_played: !1,
                            ...(0, o.getPartyMetadata)(e)
                        }))
                    },
                    label: c.default.Messages.SEND_DM
                }) : null
            }
        },
        7259: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("2129");

            function s(e) {
                let {
                    currentActivities: t,
                    isSpotifyActivity: n
                } = e, s = t[0], l = (0, a.default)(null == s ? void 0 : s.activity, null == s ? void 0 : s.activityUser);
                return n ? l : null
            }
        },
        250529: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("987317"),
                i = n("990766"),
                r = n("158998"),
                o = n("782340");

            function u(e) {
                let {
                    applicationStreams: t
                } = e;
                return t.map(e => {
                    let {
                        stream: t,
                        streamUser: n
                    } = e;
                    return (0, a.jsx)(s.MenuItem, {
                        id: "spectate-".concat(t.ownerId),
                        action: () => {
                            l.default.selectVoiceChannel(t.channelId), (0, i.watchStreamAndTransitionToStream)(t)
                        },
                        label: o.default.Messages.WATCH_USER_STREAM.format({
                            streamerName: r.default.getName(n)
                        })
                    }, "spectate-".concat(t.ownerId))
                })
            }
        },
        391950: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("446674"),
                i = n("77078"),
                r = n("987317"),
                o = n("716241"),
                u = n("239380"),
                d = n("957255"),
                c = n("456353"),
                E = n("599110"),
                f = n("49111"),
                _ = n("782340");

            function C(e) {
                let t = s.useContext(E.AnalyticsContext),
                    n = e.voiceChannels[0],
                    C = (0, l.useStateFromStores)([d.default], () => null != n && d.default.can(f.Permissions.CONNECT, n.channel));
                return null == n ? null : [(0, a.jsx)(i.MenuItem, {
                    id: "join-voice",
                    action: function() {
                        (0, u.transitionToGuild)(n.guild.id), r.default.selectVoiceChannel(n.channel.id), o.default.trackWithMetadata(f.AnalyticEvents.ACTIVITY_FEED_VOICE_CHANNEL_VISITED, {
                            source: {
                                ...t.location,
                                object: f.AnalyticsObjects.LIST_ITEM
                            },
                            guild_id: n.guild.id,
                            channel_id: n.channel.id,
                            ...(0, c.getPartyMetadata)(e)
                        })
                    },
                    label: _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_JOIN_CHANNEL,
                    disabled: !C
                }, "join-voice"), (0, a.jsx)(i.MenuItem, {
                    id: "goto-server",
                    action: function() {
                        (0, u.transitionToGuild)(n.guild.id), o.default.trackWithMetadata(f.AnalyticEvents.ACTIVITY_FEED_GUILD_VISITED, {
                            source: {
                                ...t.location,
                                object: f.AnalyticsObjects.LIST_ITEM
                            },
                            guild_id: n.guild.id,
                            af_recently_played: !1,
                            ...(0, c.getPartyMetadata)(e)
                        })
                    },
                    label: _.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_GO_TO_SERVER
                }, "goto-server")]
            }
        },
        638441: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("450911"),
                i = n("272030"),
                r = n("86621"),
                o = n("305961");

            function u(e) {
                return (0, r.default)(class extends s.Component {
                    render() {
                        return (0, a.jsx)(e, {
                            ...this.props,
                            onMessageUser: this.handleMessageUser,
                            onUserContextMenu: this.handleUserContextMenu,
                            onGuildContextMenu: this.handleGuildContextMenu,
                            onChannelContextMenu: this.handleChannelContextMenu
                        })
                    }
                    handleMessageUser(e, t) {
                        return l.default.openPrivateChannel(t.id)
                    }
                    handleUserContextMenu(e, t, s) {
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: s
                        })
                    }
                    handleGuildContextMenu(e, t) {
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("374705").then(n.bind(n, "374705"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: t
                            })
                        })
                    }
                    handleChannelContextMenu(e, t) {
                        let s = o.default.getGuild(t.getGuildId());
                        if (null == s) return null;
                        (0, i.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("754938").then(n.bind(n, "754938"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t,
                                guild: s
                            })
                        })
                    }
                })
            }
        },
        527441: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = null;
            class i extends a.default.PersistedStore {
                initialize(e) {
                    var t;
                    l = null !== (t = null == e ? void 0 : e.type) && void 0 !== t ? t : null
                }
                getType() {
                    return l
                }
                getState() {
                    return {
                        type: l
                    }
                }
            }
            i.displayName = "NewUserStore", i.persistKey = "nuf";
            var r = new i(s.default, {
                NUF_NEW_USER: function(e) {
                    let {
                        newUserType: t
                    } = e;
                    l = t
                },
                NUF_COMPLETE: function() {
                    l = null
                }
            })
        },
        218971: function(e, t, n) {
            "use strict";
            var a, s;
            n.r(t), n.d(t, {
                NUFSlides: function() {
                    return a
                }
            }), (s = a || (a = {})).AGE_GATE = "age-gate", s.CHOOSE_TEMPLATE = "choose-template", s.CUSTOMIZE_GUILD = "customize-server", s.CHANNEL_PROMPT = "channel-prompt", s.JOIN_GUILD = "join-server", s.CREATION_INTENT = "creation-intent", s.COMPLETE = "complete"
        },
        946522: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return P
                }
            }), n("222007");
            var s = n("37983");
            n("884691");
            var l = n("77078"),
                i = n("913144"),
                r = n("316272"),
                o = n("19009"),
                u = n("774146"),
                d = n("233322"),
                c = n("894887"),
                E = n("42963"),
                f = n("223170"),
                _ = n("59811"),
                C = n("341542"),
                h = n("305961"),
                I = n("162771"),
                T = n("697218"),
                S = n("449008"),
                N = n("773336"),
                A = n("165926"),
                m = n("527441"),
                p = n("56235"),
                g = n("218971"),
                R = n("49111"),
                O = n("492397"),
                L = n("149806");

            function v() {
                null != a && (0, l.closeModal)(a)
            }
            class M extends r.default {
                _initialize() {
                    i.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen), i.default.subscribe("LOGOUT", v)
                }
                _terminate() {
                    i.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen), i.default.unsubscribe("LOGOUT", v)
                }
                handleConnectionOpen() {
                    var e;
                    let t, i = m.default.getType();
                    if (null == i) return;
                    switch (i) {
                        case p.NewUserTypes.INVITE_UNCLAIMED:
                            E.default.flowStart(L.FlowType.INVITE, L.RegistrationSteps.NUF_STARTED);
                            break;
                        case p.NewUserTypes.ORGANIC_REGISTERED:
                            E.default.flowStart(L.FlowType.ORGANIC, L.RegistrationSteps.NUF_STARTED);
                            break;
                        case p.NewUserTypes.MARKETING_UNCLAIMED:
                            E.default.flowStart(L.FlowType.ORGANIC_MARKETING, L.RegistrationSteps.NUF_STARTED)
                    }
                    let r = !1,
                        v = I.default.getGuildId();
                    if (i === p.NewUserTypes.INVITE_UNCLAIMED) {
                        let e = h.default.getGuild(v);
                        (null == e ? void 0 : e.hasVerificationGate()) && (r = !0, (0, f.fetchWelcomeScreen)(e.id))
                    }
                    let M = () => 0 === C.default.totalGuilds && !N.isPlatformEmbedded,
                        P = o.userNeedsAgeGate();
                    e = [{
                        key: "Unified NUF Modal",
                        open: async function e(e) {
                            let t = e => {
                                switch (e) {
                                    case g.NUFSlides.AGE_GATE:
                                        E.default.flowStep(L.FlowType.ANY, L.RegistrationSteps.AGE_GATE);
                                        break;
                                    case g.NUFSlides.CHOOSE_TEMPLATE:
                                        E.default.flowStep(L.FlowType.ANY, L.CreateGuildSteps.GUILD_TEMPLATES);
                                        break;
                                    case g.NUFSlides.CUSTOMIZE_GUILD:
                                        E.default.flowStep(L.FlowType.ANY, L.CreateGuildSteps.GUILD_CREATE);
                                        break;
                                    case g.NUFSlides.CHANNEL_PROMPT:
                                        E.default.flowStep(L.FlowType.ANY, L.CreateGuildSteps.CHANNEL_PROMPT);
                                        break;
                                    case g.NUFSlides.JOIN_GUILD:
                                        E.default.flowStep(L.FlowType.ANY, L.CreateGuildSteps.JOIN_GUILD);
                                        break;
                                    case g.NUFSlides.CREATION_INTENT:
                                        E.default.flowStep(L.FlowType.ANY, L.CreateGuildSteps.CREATION_INTENT);
                                        break;
                                    case g.NUFSlides.COMPLETE:
                                        E.default.flowStep(L.FlowType.ANY, L.CreateGuildSteps.SUCCESS);
                                        break;
                                    case null:
                                        break;
                                    default:
                                        S.assertNever(e)
                                }
                            };
                            a = await (0, l.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("439431").then(n.bind(n, "439431"));
                                return n => (0, s.jsx)(e, {
                                    ...n,
                                    onSlideChange: t
                                })
                            }, {
                                onCloseRequest: R.NOOP,
                                onCloseCallback: e,
                                modalKey: a
                            })
                        },
                        predicate: () => M() && !O.CONFERENCE_MODE_ENABLED
                    }, {
                        key: "New User Age Gate",
                        open: u.openNewUserAgeGateModal,
                        predicate: () => P && !M() && !O.CONFERENCE_MODE_ENABLED
                    }, {
                        key: "Claim Account Modal",
                        open: e => u.openClaimAccountModal(N.isPlatformEmbedded, e),
                        predicate: () => {
                            var e;
                            return !r && null != T.default.getCurrentUser() && !(null === (e = T.default.getCurrentUser()) || void 0 === e ? void 0 : e.isClaimed()) && !O.CONFERENCE_MODE_ENABLED && !(0, c.isMidjourneyOnboardingFlow)("new_user_manager")
                        }
                    }, {
                        key: "Verification Gate with Claim Account",
                        open: e => (0, d.openMemberVerificationModal)(v, null != e ? e : void 0),
                        predicate: () => {
                            var e;
                            return r && !(null === (e = T.default.getCurrentUser()) || void 0 === e ? void 0 : e.isClaimed()) && !O.CONFERENCE_MODE_ENABLED
                        }
                    }, {
                        key: "Guild Welcome Modal",
                        open: e => (0, l.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("900257").then(n.bind(n, "900257"));
                            return t => (0, s.jsx)(e, {
                                ...t,
                                guildId: v
                            })
                        }, {
                            onCloseCallback: e
                        }),
                        predicate: () => null != v && null != _.default.get(v) && _.default.get(v) !== _.NO_WELCOME_SCREEN
                    }], t = () => {
                        A.setNewUserFlowCompleted(), E.default.flowStep(L.FlowType.ANY, L.RegistrationSteps.NUF_COMPLETE, !0)
                    }, [...e].reverse().forEach(e => {
                        let n = t;
                        t = () => {
                            e.predicate() ? e.open(n) : n()
                        }
                    }), t()
                }
            }
            var P = new M
        },
        710768: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = {
                isScreenLandscape: () => null
            }
        },
        755729: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eq
                }
            }), n("222007"), n("424973");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("151426"),
                u = n("862337"),
                d = n("966900"),
                c = n("358917"),
                E = n("397659"),
                f = n("359902"),
                _ = n("696675"),
                C = n("780624"),
                h = n("696526"),
                I = n("197801"),
                T = n("582601"),
                S = n("77078"),
                N = n("850068"),
                A = n("272030"),
                m = n("79112"),
                p = n("146350"),
                g = n("901582"),
                R = n("415929"),
                O = n("687531"),
                L = n("875212"),
                v = n("899633"),
                M = n("606292"),
                P = n("489740"),
                D = n("355025"),
                y = n("842272"),
                x = n("14124"),
                U = n("959646"),
                b = n("338677"),
                G = n("20606"),
                j = n("225772"),
                w = n("775377"),
                k = n("10641"),
                F = n("509802"),
                B = n("243632"),
                H = n("180273"),
                V = n("579565"),
                Y = n("473503"),
                W = n("257426"),
                K = n("76393"),
                z = n("957833"),
                q = n("535859"),
                Q = n("397009"),
                Z = n("337328"),
                X = n("167209"),
                J = n("691818"),
                $ = n("106457"),
                ee = n("507917"),
                et = n("837944"),
                en = n("374089"),
                ea = n("189726"),
                es = n("666647"),
                el = n("286914"),
                ei = n("235004"),
                er = n("696770"),
                eo = n("506885"),
                eu = n("845579"),
                ed = n("933422"),
                ec = n("924658"),
                eE = n("244390"),
                ef = n("271938"),
                e_ = n("42203"),
                eC = n("778588"),
                eh = n("42887"),
                eI = n("945956"),
                eT = n("101125"),
                eS = n("102985"),
                eN = n("697218"),
                eA = n("521012"),
                em = n("145131"),
                ep = n("398288"),
                eg = n("837899"),
                eR = n("425190"),
                eO = n("474571"),
                eL = n("272339"),
                ev = n("200639"),
                eM = n("925877"),
                eP = n("849467"),
                eD = n("97347"),
                ey = n("962541"),
                ex = n("78574"),
                eU = n("329858"),
                eb = n("956089"),
                eG = n("599110"),
                ej = n("315102"),
                ew = n("306160"),
                ek = n("197881"),
                eF = n("158998"),
                eB = n("50885"),
                eH = n("49111"),
                eV = n("411511"),
                eY = n("782340"),
                eW = n("374555");
            let eK = eB.default.getEnableHardwareAcceleration() ? S.AnimatedAvatar : S.Avatar;
            class ez extends s.PureComponent {
                get isCopiedStreakGodlike() {
                    let {
                        copiedStreak: e
                    } = this.state;
                    return e >= 10
                }
                componentDidUpdate(e) {
                    let {
                        speakingWhileMuted: t,
                        occluded: n
                    } = e, {
                        speakingWhileMuted: a,
                        occluded: s
                    } = this.props;
                    s !== n && this.handleOccludedChanged(), a !== t && this.handleSpeakingWhileMutedChanged()
                }
                componentWillUnmount() {
                    this.copiedTimeout.stop(), this.copiedDecayTimeout.stop(), this.speakingWhileMutedTooltipTimeout.stop()
                }
                renderCopiedSuccess() {
                    let {
                        copiedStreak: e
                    } = this.state, t = [eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_1, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_2, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_3, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_4, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_5, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_6, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_7, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_8, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_9, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_10, eY.default.Messages.ACCOUNT_USERNAME_COPY_SUCCESS_11], n = Math.min(Math.max(0, e - 1), t.length - 1);
                    return (0, a.jsx)(S.Shaker, {
                        isShaking: this.isCopiedStreakGodlike,
                        children: t[n]
                    })
                }
                renderNameTag() {
                    let e;
                    let {
                        hovered: t
                    } = this.state, {
                        customStatusActivity: n,
                        hangStatusActivity: s,
                        userTag: l,
                        currentUser: i,
                        status: r
                    } = this.props;
                    if (null == i) return null;
                    let o = eF.default.getName(i),
                        u = null != r && r !== eH.StatusTypes.UNKNOWN,
                        d = null != n,
                        c = null != s;
                    return (c || d || u && i.isPomelo()) && (e = (0, a.jsx)(ep.default, {
                        hoverText: l,
                        forceHover: t,
                        children: c ? (0, a.jsx)(q.default, {
                            activity: s,
                            iconClassName: eW.emoji,
                            className: eW.customStatus
                        }) : d ? (0, a.jsx)(w.default, {
                            activity: n,
                            emojiClassName: eW.emoji,
                            className: eW.customStatus
                        }) : eF.default.humanizeStatus(r)
                    })), (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)("div", {
                            className: eW.panelTitleContainer,
                            children: (0, a.jsx)(eU.default, {
                                children: o
                            })
                        }), (0, a.jsx)("div", {
                            className: eW.panelSubtextContainer,
                            children: (0, a.jsx)(ex.default, {
                                children: null != e ? e : l
                            })
                        })]
                    })
                }
                renderCopiableNameTag() {
                    let {
                        currentUser: e
                    } = this.props, {
                        shouldShowNametagTooltip: t,
                        shouldShowCopiedFeedback: n
                    } = this.state;
                    if (null == e) return null;
                    let s = null,
                        l = S.TooltipColors.PRIMARY;
                    return ew.SUPPORTS_COPY && (s = eY.default.Messages.ACCOUNT_CLICK_TO_COPY, n && (s = this.renderCopiedSuccess(), l = this.isCopiedStreakGodlike ? S.TooltipColors.RED : S.TooltipColors.GREEN)), (0, a.jsx)(S.Tooltip, {
                        text: s,
                        forceOpen: t,
                        "aria-label": !!ew.SUPPORTS_COPY && eY.default.Messages.ACCOUNT_CLICK_TO_COPY,
                        color: l,
                        delay: 500,
                        onAnimationRest: (e, a) => {
                            n && !t && a.phase === eH.SpringTransitionPhases.LEAVE && this.setState({
                                shouldShowCopiedFeedback: !1
                            })
                        },
                        children: e => {
                            let {
                                onClick: t,
                                onMouseEnter: s,
                                ...l
                            } = e;
                            return (0, a.jsx)(S.Clickable, {
                                ...l,
                                onMouseEnter: () => {
                                    n ? (this.copiedTimeout.stop(), this.setState({
                                        shouldShowNametagTooltip: !1
                                    }, s)) : null == s || s()
                                },
                                onClick: () => {
                                    null == t || t(), this.handleCopyTag()
                                },
                                className: i(eW.nameTag, {
                                    [eW.canCopy]: ew.SUPPORTS_COPY
                                }),
                                children: this.renderNameTag()
                            })
                        }
                    })
                }
                renderAvatarWithPopout() {
                    let {
                        speaking: e,
                        streaming: t,
                        currentUser: n,
                        status: s,
                        showTagAsButton: l,
                        showTaglessAccountPanel: r
                    } = this.props;
                    if (null == n) return null;
                    let o = (0, ej.getAvatarDecorationURL)({
                        avatarDecoration: n.avatarDecoration,
                        size: (0, M.getDecorationSizeForAvatarSize)(S.AvatarSizes.SIZE_32)
                    });
                    return (0, a.jsx)(g.default, {
                        object: eH.AnalyticsObjects.AVATAR,
                        children: (0, a.jsx)(S.Popout, {
                            renderPopout: this.renderStatusPickerPopout,
                            position: "top",
                            align: "left",
                            animation: S.Popout.Animation.FADE,
                            spacing: 14,
                            fixed: !0,
                            preload: () => (0, eo.default)(n.id, null == n ? void 0 : n.getAvatarURL(null, 80)),
                            children: (u, d) => (0, a.jsxs)(S.Clickable, {
                                ...u,
                                "aria-label": eY.default.Messages.SET_STATUS,
                                className: i(eW.avatarWrapper, {
                                    [eW.withTagAsButton]: l,
                                    [eW.withTagless]: r
                                }),
                                children: [(0, a.jsx)(eK, {
                                    size: S.AvatarSizes.SIZE_32,
                                    src: n.getAvatarURL(void 0, 32, !1),
                                    avatarDecoration: o,
                                    "aria-label": n.username,
                                    status: t ? eH.StatusTypes.STREAMING : s,
                                    isSpeaking: e,
                                    className: eW.avatar
                                }), l || r ? (0, a.jsx)("div", {
                                    className: i(eW.nameTag, {
                                        [eW.canCopy]: ew.SUPPORTS_COPY
                                    }),
                                    children: r ? (0, a.jsx)(ey.default, {
                                        tooltipText: null,
                                        icon: d.isShown ? eg.default : eR.default,
                                        role: "switch",
                                        "aria-label": eY.default.Messages.SET_STATUS
                                    }) : this.renderNameTag()
                                }) : null]
                            })
                        })
                    })
                }
                renderNameZone() {
                    let {
                        currentUser: e,
                        dismissibleContents: t
                    } = this.props, {
                        showTagAsButton: n,
                        showTaglessAccountPanel: s
                    } = this.props;
                    return null == e ? null : (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(F.default, {
                            contentTypes: t.avatar,
                            children: e => {
                                let {
                                    visibleContent: t
                                } = e;
                                return this.renderAvatarWithPopout()
                            }
                        }), n || s ? null : this.renderCopiableNameTag()]
                    })
                }
                render() {
                    let {
                        currentUser: e,
                        selfDeaf: t,
                        selfMute: n,
                        awaitingRemote: s,
                        serverMute: l,
                        serverDeaf: r,
                        suppress: u,
                        dismissibleContents: d
                    } = this.props, {
                        shouldShowSpeakingWhileMutedTooltip: c
                    } = this.state;
                    if (null == e) return null;
                    let E = n || u || l,
                        f = t || r;
                    return (0, a.jsxs)("div", {
                        className: eW.container,
                        onMouseEnter: this.handleMouseEnter,
                        onMouseLeave: this.handleMouseLeave,
                        children: [this.renderNameZone(), (0, a.jsxs)(em.default, {
                            grow: 0,
                            children: [(0, a.jsx)(ey.default, {
                                tooltipText: c ? eY.default.Messages.ACCOUNT_SPEAKING_WHILE_MUTED : (0, x.default)(n, l, u, s),
                                tooltipColor: c ? S.TooltipColors.GREEN : void 0,
                                tooltipForceOpen: c || void 0,
                                onMouseEnter: this.handleMouseEnterMute,
                                onMouseLeave: this.handleMouseLeaveMute,
                                icon: (0, a.jsx)(eZ, {
                                    selfMute: n,
                                    serverMute: l,
                                    suppress: u
                                }),
                                iconForeground: E ? eW.strikethrough : null,
                                onClick: this.handleToggleSelfMute,
                                innerClassName: i({
                                    [eW.redIcon]: l || u
                                }),
                                onContextMenu: this.handleInputAudioContextMenu,
                                role: "switch",
                                "aria-label": eY.default.Messages.MUTE,
                                "aria-checked": E,
                                disabled: s
                            }), (0, a.jsx)(ey.default, {
                                tooltipText: (0, y.default)(t, r, s),
                                icon: (0, a.jsx)(eX, {
                                    selfDeaf: t,
                                    serverDeaf: r
                                }),
                                onClick: this.handleToggleSelfDeaf,
                                onContextMenu: this.handleOutputAudioContextMenu,
                                innerClassName: i({
                                    [eW.redIcon]: r
                                }),
                                iconForeground: f ? eW.strikethrough : null,
                                role: "switch",
                                "aria-label": eY.default.Messages.DEAFEN,
                                "aria-checked": f,
                                disabled: s
                            }), (0, a.jsx)(F.default, {
                                contentTypes: d.settings,
                                children: e => {
                                    let {
                                        visibleContent: t,
                                        markAsDismissed: n
                                    } = e;
                                    switch (t) {
                                        case o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ee.default, {}),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(Y.default, {
                                                    markAsDismissed: n,
                                                    partnerGame: eV.PartnerGame.FORTNITE
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(W.default, {
                                                    markAsDismissed: n,
                                                    partnerGame: eV.PartnerGame.FORTNITE
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_SAFE_DIRECT_MESSAGING:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ed.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_BLOCK:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(ea.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_MUTE:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(es.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(er.default, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        case o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_REPORTING:
                                            return (0, a.jsx)(S.Popout, {
                                                position: "top",
                                                align: "center",
                                                shouldShow: !0,
                                                renderPopout: () => (0, a.jsx)(el.UserSafetyEducationReportingCoachmark, {
                                                    markAsDismissed: n
                                                }),
                                                children: this.renderSettingsGear
                                            });
                                        default:
                                            return this.renderSettingsGear()
                                    }
                                }
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.copiedTimeout = new u.Timeout, this.copiedDecayTimeout = new u.Timeout, this.speakingWhileMutedTooltipTimeout = new u.Timeout, this.state = {
                        hovered: !1,
                        copiedStreak: 0,
                        shouldShowNametagTooltip: !1,
                        shouldShowCopiedFeedback: !1,
                        shouldShowSpeakingWhileMutedTooltip: !1,
                        hoveringOnMute: !1
                    }, this.handleToggleSelfMute = () => {
                        let {
                            serverMute: e,
                            suppress: t
                        } = this.props;
                        (0, b.default)(e, t)
                    }, this.handleToggleSelfDeaf = () => {
                        let {
                            serverDeaf: e
                        } = this.props;
                        (0, U.default)(e)
                    }, this.handleOpenAccountSettings = () => {
                        this.handleOpenSettings()
                    }, this.handleOpenSettings = function() {
                        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : eH.UserSettingsSections.ACCOUNT,
                            t = arguments.length > 1 ? arguments[1] : void 0,
                            n = arguments.length > 2 ? arguments[2] : void 0;
                        m.default.open(e, t, n)
                    }, this.handleOpenSettingsContextMenu = e => {
                        let {
                            currentUser: t
                        } = this.props;
                        null != t && (0, A.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("727212").then(n.bind(n, "727212"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t,
                                premiumSubscription: this.props.premiumSubscription,
                                webBuildOverride: this.props.webBuildOverride
                            })
                        })
                    }, this.handleInputAudioContextMenu = e => {
                        (0, A.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("266392").then(n.bind(n, "266392"));
                            return () => (0, a.jsx)(e, {
                                onClose: A.closeContextMenu,
                                renderInputDevices: !0,
                                renderInputModes: !0,
                                renderInputVolume: !0
                            })
                        })
                    }, this.handleOutputAudioContextMenu = e => {
                        (0, A.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("266392").then(n.bind(n, "266392"));
                            return () => (0, a.jsx)(e, {
                                onClose: A.closeContextMenu,
                                renderOutputDevices: !0,
                                renderOutputVolume: !0
                            })
                        })
                    }, this.handleMouseEnter = () => {
                        this.setState({
                            hovered: !0
                        })
                    }, this.handleMouseLeave = () => {
                        this.setState({
                            hovered: !1
                        })
                    }, this.handleMouseEnterMute = () => {
                        this.setState({
                            hoveringOnMute: !0,
                            shouldShowSpeakingWhileMutedTooltip: !1
                        }), this.speakingWhileMutedTooltipTimeout.stop()
                    }, this.handleMouseLeaveMute = () => {
                        this.setState({
                            hoveringOnMute: !1
                        })
                    }, this.handleCopyTag = () => {
                        let {
                            currentUser: e
                        } = this.props, {
                            shouldShowNametagTooltip: t,
                            copiedStreak: n
                        } = this.state;
                        if (null == e) return;
                        (0, ew.copy)(eF.default.getUserTag(e, {
                            decoration: "never",
                            identifiable: "always"
                        })), eG.default.track(eH.AnalyticEvents.TEXT_COPIED, {
                            type: "User Tag"
                        });
                        let a = {
                            shouldShowCopiedFeedback: !0,
                            shouldShowNametagTooltip: !0
                        };
                        !t && (a.copiedStreak = n + 1), this.setState(a, () => {
                            this.copiedTimeout.start(1e3, () => this.setState({
                                shouldShowNametagTooltip: !1
                            })), this.copiedDecayTimeout.start(2e3, () => this.setState({
                                copiedStreak: 0
                            }))
                        })
                    }, this.handleOccludedChanged = () => {
                        let {
                            occluded: e
                        } = this.props;
                        e && this.setState({
                            shouldShowNametagTooltip: !1,
                            shouldShowSpeakingWhileMutedTooltip: !1
                        })
                    }, this.handleSpeakingWhileMutedChanged = () => {
                        let {
                            selfMute: e,
                            serverMute: t,
                            suppress: n,
                            speakingWhileMuted: a,
                            occluded: s
                        } = this.props, {
                            hoveringOnMute: l
                        } = this.state;
                        a ? !l && e && !t && !n && !s && this.setState({
                            shouldShowSpeakingWhileMutedTooltip: !0
                        }, () => {
                            this.speakingWhileMutedTooltipTimeout.start(2e3, () => this.setState({
                                shouldShowSpeakingWhileMutedTooltip: !1
                            }))
                        }) : (this.setState({
                            shouldShowSpeakingWhileMutedTooltip: !1
                        }), this.speakingWhileMutedTooltipTimeout.stop())
                    }, this.renderStatusPickerPopout = e => {
                        let {
                            closePopout: t
                        } = e, {
                            showRichProfilePopup: n,
                            currentUser: s
                        } = this.props;
                        if (n) {
                            let e = {
                                userId: null == s ? void 0 : s.id,
                                user: s,
                                onClose: () => {
                                    this.handleMouseLeave(), null == t || t()
                                }
                            };
                            return (0, a.jsx)("div", {
                                className: eW.accountProfilePopoutWrapper,
                                children: (0, a.jsx)(Z.default, {
                                    ...e
                                })
                            })
                        }
                        return (0, a.jsx)(p.default, {
                            onClose: () => {
                                this.handleMouseLeave(), null == t || t()
                            }
                        })
                    }, this.renderSettingsGear = () => (0, a.jsx)(eQ, {
                        isEligibleForPomelo: this.props.isEligibleForPomelo,
                        webBuildOverride: this.props.webBuildOverride,
                        onClick: this.handleOpenAccountSettings,
                        onContextMenu: this.handleOpenSettingsContextMenu
                    })
                }
            }

            function eq() {
                let e = (0, r.useStateFromStores)([eN.default], () => eN.default.getCurrentUser()),
                    t = (0, B.useShowEligibilityEnrollmentTooltip)(eV.PartnerGame.FORTNITE),
                    n = (0, r.useStateFromStores)([ef.default], () => ef.default.getId()),
                    l = eu.CustomStatusSetting.useSetting(),
                    i = s.useMemo(() => null != l ? (0, j.default)(l) : null, [l]),
                    {
                        streaming: u,
                        status: d,
                        hangStatusActivity: c
                    } = (0, r.useStateFromStoresObject)([eT.default], () => ({
                        streaming: null != eT.default.findActivity(e => e.type === eH.ActivityTypes.STREAMING),
                        status: eT.default.getStatus(),
                        hangStatusActivity: eT.default.findActivity(e => e.type === eH.ActivityTypes.HANG_STATUS)
                    })),
                    E = (0, v.default)({
                        userId: n
                    }),
                    f = eF.default.useUserTag(e, {
                        decoration: "never"
                    }),
                    _ = (0, r.useStateFromStores)([eS.default], () => eS.default.hidePersonalInformation),
                    C = (0, r.useStateFromStores)([eI.default, e_.default], () => {
                        let e = eI.default.getChannelId();
                        return null != e ? e_.default.getChannel(e) : null
                    }),
                    {
                        mute: h,
                        selfMute: I,
                        suppress: T
                    } = (0, eE.default)(C),
                    {
                        selfDeaf: A,
                        deaf: m
                    } = (0, ec.default)(C),
                    p = (0, r.useStateFromStores)([P.default], () => {
                        var e;
                        return (0, D.probablyHasBuildOverride)() ? null === (e = P.default.getCurrentBuildOverride().overrides) || void 0 === e ? void 0 : e.discord_web : null
                    }),
                    g = (0, r.useStateFromStores)([eA.default], () => eA.default.getPremiumTypeSubscription()),
                    M = (0, r.useStateFromStores)([eh.default], () => eh.default.getEverSpeakingWhileMuted()),
                    y = (0, r.useStateFromStores)([eC.default], () => eC.default.hasLayers()),
                    x = (0, S.useModalsStore)(S.hasAnyModalOpenSelector),
                    U = x || y || ek.ProcessArgs.isDisallowPopupsSet(),
                    b = (0, X.useIsEligibleForPomelo)();
                s.useEffect(() => {
                    Q.default.trackExposure({
                        location: "08bd40_3"
                    })
                });
                let G = (0, r.useStateFromStores)([K.default], () => null != K.default.getAwaitingRemoteSessionInfo()),
                    {
                        isPopupEnabled: w,
                        isJoinedTagButtonEnabled: F,
                        isTaglessAccountPanelEnabled: Y
                    } = Q.default.useExperiment({
                        location: "08bd40_4"
                    }, {
                        autoTrackExposure: !1
                    }),
                    W = (0, r.useStateFromStores)([H.default], () => H.default.isCurrentQuestCompleted),
                    q = (0, r.useStateFromStores)([H.default], () => H.default.currentDropQuestGameTitle),
                    Z = (0, z.useIsHomeSelected)(),
                    ee = (0, O.useIsDmSpamFilterCoachmarkEnabled)(),
                    ea = (0, et.useCanSeeSafetyEducationBlockMuteCoachmark)(),
                    es = (0, R.useIsSafetyConsumerEducationBlockMuteBucket)(),
                    el = (0, en.useCanSeeSafetyEducationReportingCoachmark)(),
                    er = "account";
                (0, L.useTriggerDebuggingAA)({
                    location: er + " auto on",
                    autoTrackExposure: !0
                }), (0, L.useTriggerDebuggingAA)({
                    location: er + " auto off",
                    autoTrackExposure: !1
                }), (0, et.useSafetyEducationAATriggerPoint)();
                let eo = (0, r.useStateFromStores)([ei.default], () => ei.default.hasHadOtherUserPlaySoundInSession()),
                    ed = function() {
                        let e = (0, k.useIsDismissibleContentDismissed)(o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2),
                            [t, n] = (0, r.useStateFromStoresArray)([J.default], () => [J.default.hasFetchedRelevance, J.default.profileThemesRelevanceExceeded]),
                            [a, l] = (0, r.useStateFromStoresArray)([eA.default], () => [eA.default.hasFetchedMostRecentPremiumTypeSubscription(), eA.default.getMostRecentPremiumTypeSubscription()]),
                            {
                                enabled: i
                            } = $.default.useExperiment({
                                location: "08bd40_1"
                            }, {
                                autoTrackExposure: !0
                            }),
                            u = s.useMemo(() => {
                                let e = new Date().getTime();
                                return null != l && (l.status === eH.SubscriptionStatusTypes.ACTIVE || e - l.currentPeriodEnd.getTime() < 2592e6)
                            }, [l]);
                        return s.useEffect(() => {
                            let s = async () => {
                                if (!e && null == n && !!i) {
                                    if (!a) {
                                        await (0, N.fetchMostRecentSubscription)();
                                        return
                                    }!u && !t && await (0, N.getPerksRelevance)()
                                }
                            };
                            s()
                        }, [i, n, e, a, t, u]), !e && !!i && !u && null != n && n
                    }(),
                    em = {
                        avatar: [],
                        settings: []
                    };
                if (!U) {
                    if (ed && em.settings.push(o.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2), t) {
                        var ep;
                        em.settings.push(o.DismissibleContent.QUEST_2_ENROLLMENT_TOOLTIP), W && q === (null === (ep = (0, V.getDrop)(eV.PartnerGame.FORTNITE)) || void 0 === ep ? void 0 : ep.title) && em.settings.push(o.DismissibleContent.QUEST_2_COMPLETION_TOOLTIP)
                    }
                    Z && ee && em.settings.push(o.DismissibleContent.USER_SAFETY_SAFE_DIRECT_MESSAGING), ea && (1 === es ? em.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_MUTE) : em.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_BLOCK)), eo && em.settings.push(o.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION), el && em.settings.push(o.DismissibleContent.USER_SAFETY_CONSUMER_EDUCATION_REPORTING)
                }
                return (0, a.jsx)(ez, {
                    currentUser: e,
                    customStatusActivity: i,
                    hangStatusActivity: c,
                    dismissibleContents: em,
                    userTag: f,
                    hidePrivateData: _,
                    occluded: U,
                    premiumSubscription: g,
                    selfDeaf: A,
                    selfMute: I,
                    serverDeaf: m,
                    serverMute: h,
                    showRichProfilePopup: w,
                    showTagAsButton: F,
                    showTaglessAccountPanel: Y,
                    speaking: E,
                    speakingWhileMuted: M,
                    status: d,
                    streaming: u,
                    suppress: T,
                    webBuildOverride: p,
                    awaitingRemote: G,
                    isEligibleForPomelo: b
                })
            }

            function eQ(e) {
                let {
                    webBuildOverride: t,
                    isEligibleForPomelo: n,
                    onClick: s,
                    onContextMenu: l
                } = e, i = (0, S.useRedesignIconContext)().enabled, r = null, o = eO.default;
                return i ? o = null != t ? T.SettingsInfoIcon : n ? h.SettingsCircleIcon : I.SettingsIcon : null != t ? r = (0, a.jsx)(eM.default, {
                    width: 9,
                    height: 9,
                    className: eW.hasBuildOverride,
                    "aria-hidden": !0
                }) : n && (r = (0, a.jsx)(eb.CircleBadge, {
                    color: G.default.STATUS_DANGER,
                    className: eW.hasBuildOverride,
                    "aria-hidden": !0
                })), (0, a.jsx)(ey.default, {
                    tooltipText: null != t ? eY.default.Messages.USER_SETTINGS_WITH_BUILD_OVERRIDE.format({
                        webBuildOverride: t.id
                    }) : eY.default.Messages.USER_SETTINGS,
                    onClick: s,
                    onContextMenu: l,
                    innerClassName: null != t || n ? eW.buildOverrideButton : null,
                    icon: o,
                    children: r
                })
            }

            function eZ(e) {
                let {
                    selfMute: t,
                    suppress: n,
                    serverMute: s
                } = e, l = (0, S.useRedesignIconContext)().enabled;
                if (l) {
                    let e, l;
                    return s ? (e = f.MicrophoneDenyIcon, l = S.tokens.colors.STATUS_DANGER) : n ? (e = f.MicrophoneDenyIcon, l = S.tokens.colors.STATUS_DANGER) : t ? (e = C.MicrophoneSlashIcon, l = S.tokens.colors.STATUS_DANGER) : e = _.MicrophoneIcon, (0, a.jsx)(e, {
                        width: 20,
                        height: 20,
                        color: null != l ? l : "currentColor"
                    })
                } {
                    let e = t || n || s,
                        l = e ? eD.default : eP.default;
                    return (0, a.jsx)(l, {
                        width: 20,
                        height: 20,
                        foreground: e ? eW.strikethrough : void 0
                    })
                }
            }

            function eX(e) {
                let {
                    selfDeaf: t,
                    serverDeaf: n
                } = e, s = (0, S.useRedesignIconContext)().enabled;
                if (s) {
                    let e, s;
                    return n ? (e = d.HeadphonesDenyIcon, s = S.tokens.colors.STATUS_DANGER) : t ? (e = E.HeadphonesSlashIcon, s = S.tokens.colors.STATUS_DANGER) : e = c.HeadphonesIcon, (0, a.jsx)(e, {
                        width: 20,
                        height: 20,
                        color: null != s ? s : "currentColor"
                    })
                } {
                    let e = t ? ev.default : eL.default;
                    return (0, a.jsx)(e, {
                        width: 20,
                        height: 20,
                        foreground: t ? eW.strikethrough : void 0
                    })
                }
            }
        },
        566396: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("272030"),
                u = n("630273"),
                d = n("823704"),
                c = n("662285"),
                E = n("981601"),
                f = n("925758"),
                _ = n("27618"),
                C = n("697218"),
                h = n("663449"),
                I = n("449008"),
                T = n("782340");
            class S extends s.PureComponent {
                hasParty(e) {
                    return e.length > 1
                }
                handleStopListening() {
                    (0, d.default)()
                }
                renderUserPopout(e, t) {
                    return (0, a.jsx)(E.default, {
                        ...e,
                        userId: t.id
                    })
                }
                render() {
                    let {
                        currentUser: e,
                        host: t,
                        party: n
                    } = this.props;
                    return this.hasParty(n) && null != e ? (0, a.jsx)(h.default, {
                        currentUser: e,
                        host: t,
                        party: n,
                        renderUserPopout: this.renderUserPopout,
                        renderOverflowPopout: this.renderOverflowPopout,
                        onStopListening: this.handleStopListening,
                        onUserContextMenu: this.handleUserContextMenu
                    }) : null
                }
                constructor(...e) {
                    super(...e), this.handleUserContextMenu = (e, t) => {
                        (0, o.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        })
                    }, this.renderOverflowPopout = () => {
                        let {
                            party: e
                        } = this.props;
                        return (0, a.jsx)(u.default, {
                            party: e,
                            header: T.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENING_ALONG_COUNT.format({
                                count: e.length
                            })
                        })
                    }
                }
            }
            var N = r.default.connectStores([c.default, C.default, _.default, f.default], () => {
                let e, t;
                let n = c.default.getSyncingWith(),
                    a = c.default.getActivity(),
                    s = C.default.getCurrentUser(),
                    l = [];
                if (null != n ? (e = C.default.getUser(n.userId), t = n.partyId) : null != a && null != a.party && null != a.party.id && (e = s, t = a.party.id), null != t) {
                    var r;
                    l = i(Array.from(null !== (r = f.default.getParty(t)) && void 0 !== r ? r : [])).map(e => C.default.getUser(e)).filter(I.isNotNullish).orderBy([t => null == e || e.id === t.id, e => _.default.isFriend(e.id)], ["desc", "desc"]).value()
                }
                return {
                    currentUser: s,
                    host: e,
                    party: l
                }
            })(S)
        },
        618489: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eq
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("627445"),
                o = n.n(r),
                u = n("90915"),
                d = n("446674"),
                c = n("77078"),
                E = n("629109"),
                f = n("272030"),
                _ = n("406189"),
                C = n("32296"),
                h = n("412026"),
                I = n("86621"),
                T = n("997289"),
                S = n("244201"),
                N = n("140708"),
                A = n("84460"),
                m = n("191225"),
                p = n("372610"),
                g = n("380691"),
                R = n("943349"),
                O = n("702173"),
                L = n("10524"),
                v = n("478272"),
                M = n("812204"),
                P = n("685665"),
                D = n("754493"),
                y = n("458685"),
                x = n("679653"),
                U = n("76393"),
                b = n("261552"),
                G = n("167715"),
                j = n("479788"),
                w = n("16916"),
                k = n("597517"),
                F = n("269596"),
                B = n("38654"),
                H = n("393414"),
                V = n("245463"),
                Y = n("486185"),
                W = n("488464"),
                K = n("998716"),
                z = n("819450"),
                q = n("111542"),
                Q = n("924872"),
                Z = n("274438"),
                X = n("808422"),
                J = n("845579"),
                $ = n("999180"),
                ee = n("830210"),
                et = n("289180"),
                en = n("951691"),
                ea = n("19065"),
                es = n("977347"),
                el = n("799808"),
                ei = n("727284"),
                er = n("116439"),
                eo = n("373469"),
                eu = n("271938"),
                ed = n("42203"),
                ec = n("305961"),
                eE = n("778588"),
                ef = n("42887"),
                e_ = n("957255"),
                eC = n("945956"),
                eh = n("27618"),
                eI = n("697218"),
                eT = n("800762"),
                eS = n("316133"),
                eN = n("145131"),
                eA = n("437825"),
                em = n("142303"),
                ep = n("406019"),
                eg = n("220075"),
                eR = n("82636"),
                eO = n("394832"),
                eL = n("394640"),
                ev = n("343571"),
                eM = n("962541"),
                eP = n("78574"),
                eD = n("599110"),
                ey = n("701909"),
                ex = n("158998"),
                eU = n("452469"),
                eb = n("997769"),
                eG = n("49111"),
                ej = n("533613"),
                ew = n("782340"),
                ek = n("833076"),
                eF = n("926622");

            function eB(e) {
                let t = e.currentTarget;
                eD.default.track(eG.AnalyticEvents.NOISE_CANCELLATION_LINK_CLICKED, {
                    text: t.text,
                    href: t.href,
                    location: {
                        section: eG.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                    }
                })
            }

            function eH() {
                let e = s.useRef(null);
                (0, c.useFocusLock)(e), s.useEffect(() => {
                    eD.default.track(eG.AnalyticEvents.OPEN_POPOUT, {
                        type: eG.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                    })
                }, []);
                let t = (0, d.useStateFromStores)([ef.default], () => ef.default.getNoiseCancellation());
                return (0, a.jsxs)("div", {
                    ref: e,
                    className: ek.noiseCancellationPopout,
                    children: [(0, a.jsx)(c.FormSwitch, {
                        hideBorder: !0,
                        className: eF.marginBottom4,
                        value: t,
                        onChange: () => E.default.setNoiseCancellation(!t, {
                            section: eG.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        }),
                        note: ew.default.Messages.NOISE_CANCELLATION_POPOUT_DESCRIPTION,
                        children: ew.default.Messages.NOISE_CANCELLATION_POPOUT_HEADER
                    }), (0, a.jsx)(C.default, {
                        title: ew.default.Messages.NOISE_CANCELLATION_POPOUT_MIC_TEST_TITLE,
                        notchBackground: C.NotchBackground.BLACK,
                        buttonTest: ew.default.Messages.NOISE_CANCELLATION_POPOUT_TEST,
                        buttonStop: ew.default.Messages.NOISE_CANCELLATION_POPOUT_STOP,
                        buttonClassName: ek.micTestButton,
                        buttonColor: c.Button.Colors.PRIMARY,
                        location: {
                            section: eG.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        }
                    }), (0, a.jsx)(c.FormTitle, {
                        tag: c.FormTitleTags.H5,
                        className: i(eF.marginBottom8, eF.marginTop20),
                        children: ew.default.Messages.NOISE_CANCELLATION_POPOUT_FOOTER
                    }), (0, a.jsxs)(eN.default, {
                        justify: eN.default.Justify.BETWEEN,
                        className: ek.footer,
                        children: [(0, a.jsx)(c.Anchor, {
                            href: eG.MarketingURLs.KRISP,
                            onClick: e => eB(e),
                            children: (0, a.jsx)("div", {
                                className: ek.krispLogo
                            })
                        }), (0, a.jsx)(c.Anchor, {
                            href: ey.default.getArticleURL(eG.HelpdeskArticles.NOISE_SUPPRESSION),
                            className: ek.krispLink,
                            onClick: e => eB(e),
                            children: ew.default.Messages.LEARN_MORE
                        })]
                    })]
                })
            }

            function eV() {
                let e = (0, d.useStateFromStores)([Z.default], () => Z.default.isMuted()),
                    t = e ? ew.default.Messages.STAGE_MUSIC_UNMUTE : ew.default.Messages.STAGE_MUSIC_MUTE;
                return (0, a.jsx)(eM.default, {
                    "aria-label": t,
                    tooltipText: t,
                    icon: e ? ev.default : eL.default,
                    onClick: () => (0, q.updateStageMusicMuted)(!e)
                })
            }

            function eY(e) {
                let {
                    channel: t,
                    enableActivities: n,
                    disabled: l
                } = e, r = (0, $.default)(), o = (0, et.default)(t), u = (0, d.useStateFromStoresObject)([m.default], () => null != m.default.getSelfEmbeddedActivityForChannel(t.id)), f = (0, V.default)(t), {
                    reachedLimit: _,
                    limit: C
                } = (0, ee.default)(t), h = s.useCallback(() => {
                    (0, ea.default)()
                }, []), I = (0, S.useAppContext)(), T = s.useCallback(e => {
                    if (ef.default.isVideoEnabled() === e) return;
                    let n = () => {
                        var n;
                        E.default.setVideoEnabled(e), e && (0, H.transitionTo)(eG.Routes.CHANNEL(null !== (n = t.getGuildId()) && void 0 !== n ? n : eG.ME, t.id))
                    };
                    e ? (0, ei.default)(n, I) : n()
                }, [t, I]), N = u || n || f;
                return (0, a.jsx)(er.VideoButtonWrapper, {
                    onChange: T,
                    onCameraUnavailable: h,
                    hasPermission: o,
                    channelLimit: C,
                    channelLimitReached: _,
                    ...r,
                    enabled: !l && r.enabled,
                    children: e => {
                        let {
                            unavailable: t,
                            active: n,
                            label: s,
                            iconComponent: l,
                            ...r
                        } = e, o = n ? eA.default : em.default, u = (0, a.jsx)(o, {
                            className: i(ek.buttonIcon, {
                                [ek.withText]: !N
                            })
                        });
                        return (0, a.jsx)(c.Popout, {
                            renderPopout: e => {
                                let {
                                    closePopout: t
                                } = e;
                                return (0, a.jsx)(y.default, {
                                    onClose: t
                                })
                            },
                            position: "top",
                            align: "center",
                            animation: c.Popout.Animation.FADE,
                            children: (e, l) => {
                                let {
                                    onClick: o,
                                    ...d
                                } = e, {
                                    isShown: E
                                } = l;
                                return (0, a.jsx)(c.Tooltip, {
                                    text: s,
                                    children: e => (0, a.jsx)(c.Button, {
                                        ...r,
                                        ...e,
                                        ...d,
                                        onClick: t => {
                                            var n;
                                            r.onClick(t), null === (n = e.onClick) || void 0 === n || n.call(e), E && o(t)
                                        },
                                        onContextMenu: t => {
                                            var n;
                                            o(t), null === (n = e.onContextMenu) || void 0 === n || n.call(e)
                                        },
                                        size: c.Button.Sizes.SMALL,
                                        className: i(ek.button, ek.buttonColor, {
                                            [ek.buttonActive]: n,
                                            [ek.fauxDisabled]: t,
                                            [ek.disabled]: r.disabled
                                        }),
                                        innerClassName: ek.buttonContents,
                                        wrapperClassName: ek.button,
                                        fullWidth: !0,
                                        children: N ? u : (0, a.jsxs)(eN.default, {
                                            align: eN.default.Align.CENTER,
                                            children: [u, ew.default.Messages.VIDEO]
                                        })
                                    })
                                })
                            }
                        })
                    }
                })
            }

            function eW(e) {
                let {
                    channel: t,
                    enableActivities: n
                } = e, s = (0, S.useAppContext)(), {
                    analyticsLocations: l
                } = (0, P.default)(), r = s === eG.AppContext.POPOUT, o = (0, d.useStateFromStores)([A.default], () => A.default.getIsEnabled(), []), u = t.getGuildId();
                (0, N.useActivitiesRolloutExperiments)(u);
                let E = (0, R.useEmbeddedActivityLaunchability)(t.id),
                    f = (0, R.getEmbeddedActivityLaunchabilityLabel)(E),
                    [_] = (0, d.useStateFromStores)([m.default], () => null != t.id && "" !== t.id ? m.default.getEmbeddedActivitiesForChannel(t.id) : m.NO_ACTIVITIES),
                    {
                        userInActivity: C
                    } = (0, d.useStateFromStoresObject)([m.default], () => ({
                        userInActivity: null != m.default.getSelfEmbeddedActivityForChannel(t.id)
                    })),
                    h = (0, T.useAnalyticsContext)(),
                    I = (0, g.useShowActivityIndicator)(),
                    p = E !== R.EmbeddedActivityLaunchability.CAN_LAUNCH;
                return n ? (0, a.jsx)(c.Tooltip, {
                    text: f,
                    children: e => (0, a.jsxs)(c.Button, {
                        ...e,
                        fullWidth: !0,
                        size: c.Button.Sizes.SMALL,
                        onClick: () => {
                            var n;
                            (0, v.default)({
                                channel: t,
                                guildId: t.guild_id,
                                locationObject: h.location,
                                openInPopout: r,
                                analyticsLocations: l
                            }), null === (n = e.onClick) || void 0 === n || n.call(e)
                        },
                        disabled: p,
                        className: i(ek.button, ek.buttonColor, {
                            [ek.buttonDeveloperActivityShelf]: o,
                            [ek.buttonActive]: C || null != _,
                            [ek.disabled]: p
                        }),
                        innerClassName: ek.buttonContents,
                        wrapperClassName: ek.button,
                        children: [I ? (0, a.jsx)(L.FreeActivityIndicatorDot, {
                            top: -1,
                            right: -1
                        }) : null, (0, a.jsx)(eR.default, {
                            className: ek.buttonIcon
                        })]
                    })
                }) : null
            }

            function eK(e) {
                let t, {
                        channel: n,
                        canGoLive: l,
                        enableActivities: r,
                        disabled: o
                    } = e,
                    u = (0, d.useStateFromStores)([eI.default], () => eI.default.getCurrentUser()),
                    E = (0, d.useStateFromStoresArray)([eo.default], () => eo.default.getAllActiveStreams()),
                    f = (0, et.default)(n),
                    _ = n.getGuildId(),
                    C = (0, d.useStateFromStoresObject)([m.default], () => null != m.default.getSelfEmbeddedActivityForChannel(n.id)),
                    h = (0, V.default)(n),
                    I = s.useCallback(() => {
                        (0, el.default)(_, n.id, eG.AnalyticsSections.ACTIVITY_PANEL)
                    }, [_, n.id]),
                    T = E.find(e => e.ownerId === (null == u ? void 0 : u.id)),
                    S = (0, en.useOtherStreams)(n, u, E);
                t = null == T ? l ? I : es.default : () => (0, w.default)(T);
                let N = null != T || S.length > 0,
                    A = f ? ew.default.Messages.SHARE_YOUR_SCREEN : ew.default.Messages.ACTIVITY_PANEL_GO_LIVE_TOOLTIP_NO_PERMISSION_IN_VOICE,
                    p = C || r || h,
                    g = (0, a.jsx)(eO.default, {
                        className: i(ek.buttonIcon, {
                            [ek.withText]: !p
                        })
                    });
                return (0, a.jsx)(c.Popout, {
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(en.default, {
                            channel: n,
                            currentUser: u,
                            activeStreams: E,
                            onClose: t,
                            handleGoLive: l ? I : es.default
                        })
                    },
                    position: "top",
                    align: "center",
                    animation: c.Popout.Animation.FADE,
                    children: e => {
                        let {
                            onClick: n,
                            ...s
                        } = e;
                        return (0, a.jsx)(c.Tooltip, {
                            text: A,
                            children: e => (0, a.jsx)(c.Button, {
                                ...e,
                                size: c.Button.Sizes.SMALL,
                                onClick: a => {
                                    var s;
                                    N ? n(a) : t(), null === (s = e.onClick) || void 0 === s || s.call(e)
                                },
                                disabled: !f || o,
                                className: i(ek.button, ek.buttonColor, {
                                    [ek.buttonActive]: null != T,
                                    [ek.disabled]: !f || o
                                }),
                                ...N ? s : null,
                                innerClassName: ek.buttonContents,
                                wrapperClassName: ek.button,
                                children: p ? g : (0, a.jsxs)(eN.default, {
                                    align: eN.default.Align.CENTER,
                                    children: [g, ew.default.Messages.GO_LIVE_SHARE_SCREEN]
                                })
                            })
                        })
                    }
                })
            }
            class ez extends s.PureComponent {
                renderConnectionStatus() {
                    let e;
                    let {
                        channel: t,
                        guild: n,
                        rtcConnectionQuality: s,
                        rtcConnectionState: l,
                        rtcConnectionLastPing: i,
                        hasVideo: r,
                        isBroadcasting: o
                    } = this.props;
                    if (null == t) return null;
                    let d = (0, x.computeChannelName)(t, eI.default, eh.default);
                    return null != n ? (e = eG.Routes.CHANNEL(n.id, t.id), d = "".concat(d, " / ").concat(n.name)) : e = eG.Routes.CHANNEL(eG.ME, t.id), o && t.isBroadcastChannel() && (d = ew.default.Messages.BROADCASTING), (0, a.jsx)(h.default, {
                        statusTextClassName: ek.statusWithPopout,
                        quality: s,
                        state: l,
                        lastPing: i,
                        hasVideo: r,
                        children: (0, a.jsx)(c.FocusRing, {
                            children: (0, a.jsx)(u.Link, {
                                to: e,
                                onClick: this.handleChannelLinkClick,
                                onContextMenu: this.handleChannelLinkContextMenu,
                                children: (0, a.jsx)(eP.default, {
                                    className: ek.channel,
                                    children: d
                                })
                            })
                        })
                    })
                }
                renderNoiseCancellation() {
                    let {
                        noiseCancellationActive: e,
                        noiseCancellationError: t,
                        hasLayers: n,
                        remoteVoiceState: s,
                        channel: l,
                        voiceStates: i
                    } = this.props;
                    if (null != s) return null;
                    if (null == l ? void 0 : l.isGuildStageVoice()) {
                        let e = null != i.find(e => e.user.id === eu.default.getId() && (0, X.getAudienceRequestToSpeakState)(e.voiceState) === X.RequestToSpeakStates.ON_STAGE);
                        if (!e && (0, Q.shouldShowStageMusicMuteButton)(l.id)) return (0, a.jsx)(eV, {})
                    }
                    return !n && t ? (0, a.jsx)(c.Tooltip, {
                        text: ew.default.Messages.NOISE_CANCELLATION_CPU_OVERUSE,
                        tooltipClassName: ek.noiseCancellationTooltip,
                        forceOpen: !0,
                        children: e => {
                            let {
                                "aria-label": t
                            } = e;
                            return (0, a.jsx)(eM.default, {
                                "aria-label": t,
                                tooltipText: null,
                                disabled: !0,
                                icon: eg.default
                            })
                        }
                    }) : (0, a.jsx)(c.Popout, {
                        position: "top",
                        align: "center",
                        renderPopout: () => (0, a.jsx)(eH, {}),
                        children: (t, n) => {
                            let {
                                isShown: s
                            } = n;
                            return (0, a.jsx)(eM.default, {
                                ...t,
                                tooltipClassName: ek.noiseCancellationTooltip,
                                tooltipText: s ? null : ew.default.Messages.NOISE_CANCELLATION_TOOLTIP,
                                icon: e ? ep.default : eg.default
                            })
                        }
                    }, "krisp-popout")
                }
                renderVoiceStates() {
                    let {
                        channel: e,
                        voiceStates: t,
                        showVoiceStates: n
                    } = this.props;
                    return null != e && n && 0 !== t.length ? (0, a.jsx)(eb.default, {
                        voiceStates: t,
                        channel: e,
                        className: ek.voiceUsers
                    }) : null
                }
                renderChannelButtons() {
                    let {
                        channel: e,
                        canGoLive: t,
                        remoteVoiceState: n,
                        enableActivities: s,
                        voiceStates: l,
                        selfStream: r,
                        isPrivateChannelWithEnabledActivities: o
                    } = this.props;
                    if (null == e || null != n) return null;
                    let u = eu.default.getId();
                    if (e.isGuildStageVoice()) {
                        if (!(0, z.isStageVideoEnabled)(e.guild_id) || !t) return null;
                        let n = l.find(e => e.user.id === u);
                        if (null == n || n.voiceState.suppress) return null
                    }
                    let d = (e.isGuildVoice() || o) && s,
                        {
                            reachedLimit: c
                        } = (0, ee.getChannelVideoLimit)(e),
                        E = (0, z.getStageHasMedia)(e.id);
                    return (0, a.jsxs)("div", {
                        className: ek.actionButtons,
                        children: [(0, a.jsx)(eY, {
                            channel: e,
                            enableActivities: d,
                            disabled: !E && c
                        }), (0, a.jsx)(eK, {
                            channel: e,
                            canGoLive: t,
                            enableActivities: d,
                            disabled: e.isGuildStageVoice() && (E && null == r || !E && c)
                        }), (0, a.jsxs)(a.Fragment, {
                            children: [d ? (0, a.jsx)(eW, {
                                channel: e,
                                enableActivities: s
                            }) : null, (0, V.default)(e) ? (0, a.jsx)(Y.default, {
                                className: i(ek.button, ek.buttonColor),
                                iconClassName: ek.buttonIcon,
                                channel: e
                            }) : null]
                        })]
                    })
                }
                render() {
                    let {
                        channel: e,
                        noiseCancellationSupported: t,
                        shouldShowVoicePanelIntroduction: n
                    } = this.props;
                    return null == e ? null : (0, a.jsx)(c.Popout, {
                        renderPopout: this.renderVoicePanelIntroduction,
                        position: "top",
                        align: "center",
                        animation: c.Popout.Animation.TRANSLATE,
                        shouldShow: n,
                        children: () => (0, a.jsxs)("div", {
                            className: ek.container,
                            children: [(0, a.jsxs)(eN.default, {
                                className: ek.connection,
                                align: eN.default.Align.CENTER,
                                children: [(0, a.jsx)("div", {
                                    className: ek.inner,
                                    children: this.renderConnectionStatus()
                                }), (0, a.jsxs)(eN.default, {
                                    grow: 0,
                                    shrink: 0,
                                    children: [t ? this.renderNoiseCancellation() : null, (0, a.jsx)(eU.default, {
                                        channel: e
                                    })]
                                })]
                            }), this.renderVoiceStates(), this.renderChannelButtons()]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.canScreenshare = () => {
                        let {
                            channel: e,
                            canGoLive: t
                        } = this.props;
                        return t && null != e && null != e.getGuildId()
                    }, this.handleNoiseCancellationClicked = () => {
                        let {
                            noiseCancellationActive: e
                        } = this.props;
                        E.default.setNoiseCancellation(!e, {
                            section: eG.AnalyticsSections.NOISE_CANCELLATION_POPOUT
                        })
                    }, this.handleGoLive = () => {
                        let {
                            guild: e,
                            channel: t
                        } = this.props, n = null != t ? t.getGuildId() : null != e ? e.id : null;
                        null != n && (0, el.default)(n, t.id, eG.AnalyticsLocations.VOICE_PANEL)
                    }, this.handleChannelLinkClick = e => {
                        var t;
                        let {
                            guild: n,
                            channel: a
                        } = this.props;
                        o(null != a, "Channel is null during navigation click"), e.stopPropagation(), _.default.channelListScrollTo(null !== (t = null == n ? void 0 : n.id) && void 0 !== t ? t : eG.ME, a.id)
                    }, this.handleChannelLinkContextMenu = e => {
                        let {
                            channel: t
                        } = this.props;
                        (0, f.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("19577").then(n.bind(n, "19577"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                channel: t
                            })
                        })
                    }, this.handleCloseVoicePanelIntroduction = () => {
                        k.hideHotspot(ej.HotspotLocations.VOICE_PANEL_INTRODUCTION)
                    }, this.renderVoicePanelIntroduction = () => (0, a.jsxs)("div", {
                        className: i(ek.voicePanelIntroductionWrapper, "theme-light"),
                        children: [(0, a.jsx)(c.Heading, {
                            className: ek.voicePanelIntroductionHeader,
                            variant: "heading-md/semibold",
                            children: ew.default.Messages.VOICE_PANEL_INTRODUCTION_HEADER
                        }), (0, a.jsx)(c.Text, {
                            className: ek.voicePanelIntroductionText,
                            variant: "text-sm/normal",
                            children: ew.default.Messages.VOICE_PANEL_INTRODUCTION_TEXT
                        }), (0, a.jsx)(c.Button, {
                            className: ek.voicePanelIntroductionButton,
                            color: c.Button.Colors.BRAND,
                            onClick: this.handleCloseVoicePanelIntroduction,
                            children: ew.default.Messages.VOICE_PANEL_INTRODUCTION_CLOSE
                        })]
                    })
                }
            }
            var eq = (0, I.default)(function(e) {
                let t = (0, b.default)(),
                    n = (0, d.useStateFromStores)([U.default], () => U.default.getAwaitingRemoteSessionInfo()),
                    l = (0, d.useStateFromStores)([eI.default], () => eI.default.getCurrentUser()),
                    {
                        channelId: i,
                        ...r
                    } = (0, d.useStateFromStoresObject)([eC.default], () => null != t ? {
                        channelId: t.channelId,
                        rtcConnectionQuality: eG.RTCConnectionQuality.FINE,
                        rtcConnectionState: eG.RTCConnectionStates.RTC_CONNECTED,
                        rtcConnectionLastPing: 0
                    } : {
                        channelId: eC.default.getChannelId(),
                        rtcConnectionQuality: eC.default.getQuality(),
                        rtcConnectionState: eC.default.getState(),
                        rtcConnectionLastPing: eC.default.getLastPing()
                    }),
                    o = (0, d.useStateFromStores)([ed.default], () => ed.default.getChannel(i), [i]),
                    u = null == o ? void 0 : o.getGuildId(),
                    E = (0, d.useStateFromStores)([ec.default], () => ec.default.getGuild(u), [u]),
                    f = (0, d.useStateFromStoresObject)([ef.default], () => ({
                        noiseCancellationSupported: ef.default.isNoiseCancellationSupported(),
                        noiseCancellationActive: ef.default.getNoiseCancellation(),
                        noiseCancellationError: ef.default.isNoiseCancellationError(),
                        canGoLive: (0, j.default)(ef.default)
                    })),
                    _ = (0, d.useStateFromStores)([ef.default, F.default], () => F.default.hasHotspot(ej.HotspotLocations.VOICE_PANEL_INTRODUCTION) && (0, ex.isNewUser)(l) && !ef.default.isInteractionRequired() && !(null == o ? void 0 : o.isGuildStageVoice())),
                    C = (0, d.useStateFromStores)([eT.default], () => null != i && eT.default.hasVideo(i), [i]),
                    h = (0, d.useStateFromStores)([eo.default], () => eo.default.getCurrentUserActiveStream()),
                    I = (0, d.useStateFromStores)([eE.default], () => eE.default.hasLayers()),
                    T = (0, d.useStateFromStores)([B.default], () => B.default.isViewingRoles(u)),
                    S = (0, d.useStateFromStores)([e_.default], () => T && !e_.default.can(eG.Permissions.VIEW_CHANNEL, o), [T, o]),
                    N = J.RtcPanelShowVoiceStates.useSetting(),
                    [A, m, g] = (0, d.useStateFromStoresArray)([eS.default, W.default], () => (null == o ? void 0 : o.isGuildStageVoice()) ? [W.default.getMutableParticipants(o.id, K.StageChannelParticipantNamedIndex.SPEAKER), W.default.getParticipantsVersion(o.id), null] : [null, null, null != o ? eS.default.getVoiceStatesForChannel(o) : null], [o]),
                    R = s.useMemo(() => {
                        var e, t;
                        return null !== (t = null !== (e = null == A ? void 0 : A.map(e => {
                            let {
                                user: t,
                                userNick: n,
                                voiceState: a
                            } = e;
                            return {
                                user: t,
                                nick: n,
                                voiceState: a
                            }
                        })) && void 0 !== e ? e : g) && void 0 !== t ? t : []
                    }, [A, m, g]),
                    [L, v] = s.useState(!1);
                s.useEffect(() => {
                    (T || S) && v(!1)
                }, [T, S, v]);
                let {
                    AnalyticsLocationProvider: y
                } = (0, P.default)(M.default.RTC_PANEL), x = (0, p.default)(null != u ? u : "", null == o ? void 0 : o.id), w = (0, O.default)(null == o ? void 0 : o.id), k = (0, D.default)();
                return (0, a.jsx)(y, {
                    children: (0, a.jsxs)("div", {
                        className: ek.wrapper,
                        children: [null != t || null != n ? (0, a.jsx)(G.default, {
                            voiceState: t,
                            awaitingRemoteSessionInfo: n
                        }) : null, (0, a.jsx)(ez, {
                            ...e,
                            ...f,
                            ...r,
                            enableActivities: x,
                            remoteVoiceState: t,
                            guild: E,
                            channel: o,
                            hasVideo: C,
                            selfStream: h,
                            hasLayers: I,
                            voiceStates: R,
                            showVoiceStates: N,
                            shouldShowVoicePanelIntroduction: _,
                            isPrivateChannelWithEnabledActivities: w,
                            isBroadcasting: k
                        }), !L && T && null != u ? (0, a.jsxs)("div", {
                            className: ek.viewAsRolesWarning,
                            children: [(0, a.jsx)(c.Text, {
                                variant: "text-sm/normal",
                                className: ek.viewAsRolesWarningText,
                                children: S ? ew.default.Messages.VIEW_AS_ROLES_HIDDEN_VC_WARNING : ew.default.Messages.VIEW_AS_ROLES_VOICE_WARNING
                            }), (0, a.jsx)(c.Button, {
                                className: ek.viewAsRolesWarningButton,
                                size: c.Button.Sizes.MIN,
                                onClick: () => {
                                    v(!0)
                                },
                                children: ew.default.Messages.DISMISS
                            })]
                        }) : null]
                    })
                })
            })
        },
        452469: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("987317"),
                l = n("713726"),
                i = n("754493"),
                r = n("374021"),
                o = n("649275"),
                u = n("751661"),
                d = n("734019"),
                c = n("293137"),
                E = n("962541"),
                f = n("782340");

            function _() {
                return (0, a.jsx)(E.default, {
                    tooltipText: f.default.Messages.DISCONNECT_SELF,
                    onClick: () => {
                        (0, l.stopBroadcast)(), s.default.disconnect()
                    },
                    icon: c.default
                })
            }

            function C(e) {
                let {
                    channel: t
                } = e;
                return (0, a.jsx)(E.default, {
                    tooltipText: f.default.Messages.AUDIENCE_DISCONNECT,
                    onClick: () => {
                        if ((0, d.default)(t)) {
                            (0, u.openEndStageModal)(t);
                            return
                        }
                        s.default.disconnect()
                    },
                    icon: c.default
                })
            }

            function h(e) {
                let {
                    channel: t
                } = e;
                return (0, a.jsx)(E.default, {
                    tooltipText: f.default.Messages.DISCONNECT_SELF,
                    onClick: () => {
                        if ((0, o.default)(t)) {
                            (0, r.openEndEventModal)(t);
                            return
                        }
                        s.default.disconnect()
                    },
                    icon: c.default
                })
            }

            function I(e) {
                let {
                    channel: t
                } = e, n = (0, i.default)();
                return t.isGuildStageVoice() ? (0, a.jsx)(C, {
                    channel: t
                }) : n && t.isBroadcastChannel() ? (0, a.jsx)(_, {}) : (0, a.jsx)(h, {
                    channel: t
                })
            }
        },
        997769: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            }), n("424973"), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("966900"),
                u = n("397659"),
                d = n("359902"),
                c = n("780624"),
                E = n("77078"),
                f = n("272030"),
                _ = n("899633"),
                C = n("835040"),
                h = n("506885"),
                I = n("981601"),
                T = n("271938"),
                S = n("42887"),
                N = n("211248"),
                A = n("200639"),
                m = n("97347"),
                p = n("151185"),
                g = n("342169"),
                R = n("158998"),
                O = n("39141"),
                L = n("782340"),
                v = n("346216");
            let M = {
                    offset: 2
                },
                P = {
                    serverDeaf: {
                        icon: A.default,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_DEAFENED
                    },
                    serverMute: {
                        icon: m.default,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_MUTED
                    },
                    deaf: {
                        icon: A.default,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_DEAFENED
                    },
                    mute: {
                        icon: m.default,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_MUTED
                    }
                },
                D = {
                    serverDeaf: {
                        icon: o.HeadphonesDenyIcon,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_DEAFENED
                    },
                    serverMute: {
                        icon: d.MicrophoneDenyIcon,
                        colorize: !0,
                        getStatus: () => L.default.Messages.SERVER_MUTED
                    },
                    deaf: {
                        icon: u.HeadphonesSlashIcon,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_DEAFENED
                    },
                    mute: {
                        icon: c.MicrophoneSlashIcon,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_MUTED
                    },
                    localMute: {
                        icon: d.MicrophoneDenyIcon,
                        colorize: !1,
                        getStatus: () => L.default.Messages.VOICE_CHANNEL_LOCAL_MUTED
                    }
                };

            function y(e) {
                var t, s;
                let {
                    channel: l,
                    user: o,
                    nick: u,
                    mute: d,
                    deaf: c,
                    serverMute: T,
                    serverDeaf: N
                } = e, A = (0, r.useStateFromStores)([S.default], () => S.default.isLocalMute(o.id)), m = (0, _.default)({
                    userId: o.id,
                    checkSoundSharing: !0
                }), p = null !== (t = l.getGuildId()) && void 0 !== t ? t : void 0, g = o.getAvatarURL(l.guild_id, 24), y = null != u ? u : R.default.getName(o), {
                    icon: x,
                    colorize: U,
                    getStatus: b
                } = null !== (s = function(e) {
                    let {
                        serverDeaf: t,
                        deaf: n,
                        serverMute: a,
                        mute: s,
                        localMute: l
                    } = e, i = (0, E.useRedesignIconContext)().enabled;
                    if (t) return i ? D.serverDeaf : P.serverDeaf;
                    if (n) return i ? D.deaf : P.deaf;
                    if (a) return i ? D.serverMute : P.serverMute;
                    else if (l) return i ? D.localMute : P.mute;
                    else if (s) return i ? D.mute : P.mute
                }({
                    serverDeaf: N,
                    deaf: c,
                    serverMute: T,
                    mute: d,
                    localMute: A
                })) && void 0 !== s ? s : {}, G = null != b ? L.default.Messages.VOICE_PANEL_USER_TOOLTIP.format({
                    userName: y,
                    status: b()
                }) : y;

                function j(e) {
                    null != p ? (0, f.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("834247").then(n.bind(n, "834247"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            user: o,
                            guildId: p,
                            channel: l,
                            showMediaItems: !0
                        })
                    }) : (0, f.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("406784").then(n.bind(n, "406784"));
                        return t => (0, a.jsx)(e, {
                            ...t,
                            user: o,
                            showMediaItems: !0
                        })
                    })
                }
                return (0, a.jsx)(E.Popout, {
                    preload: () => (0, h.default)(o.id, o.getAvatarURL(p, 80), {
                        guildId: p,
                        channelId: l.id
                    }),
                    position: "top",
                    renderPopout: e => (0, a.jsx)(I.default, {
                        userId: o.id,
                        guildId: p,
                        channelId: l.id,
                        ...e
                    }),
                    children: e => (0, a.jsx)(E.Tooltip, {
                        text: G,
                        children: t => (0, a.jsx)(E.Clickable, {
                            ...t,
                            ...e,
                            className: v.avatarContainer,
                            onContextMenu: j,
                            focusProps: M,
                            children: (0, a.jsx)(C.default, {
                                shakeLocation: O.ShakeLocation.VOICE_USER,
                                isShaking: m,
                                children: (0, a.jsx)("div", {
                                    className: i(v.avatar, {
                                        [v.speaking]: m
                                    }),
                                    style: {
                                        backgroundImage: "url(".concat(g, ")")
                                    },
                                    children: null != x ? (0, a.jsx)(x, {
                                        className: i(v.avatarIconOverlay, {
                                            [v.avatarIconRed]: U
                                        }),
                                        color: "currentColor",
                                        width: 16,
                                        height: 16,
                                        foreground: v.avatarIconRed
                                    }) : null
                                })
                            })
                        })
                    })
                })
            }

            function x(e) {
                let {
                    voiceStates: t,
                    channel: n,
                    className: l
                } = e, [o, u] = s.useState(!1), d = o ? g.default : p.default, c = (0, a.jsx)(N.default, {
                    className: v.expandButton,
                    onClick: () => u(!o),
                    color: N.CircleIconButtonColors.PRIMARY,
                    size: N.CircleIconButtonSizes.SIZE_24,
                    tooltip: o ? L.default.Messages.VOICE_PANEL_HIDE_EXTRAS : L.default.Messages.VOICE_PANEL_SHOW_EXTRAS,
                    icon: (0, a.jsx)(d, {
                        width: 16,
                        height: 16
                    }),
                    focusProps: M
                }), f = (0, r.useStateFromStores)([T.default], () => T.default.getId(), []), [_, C] = function(e, t) {
                    let n = [];
                    for (let a of e) {
                        if (a.user.id !== t) {
                            if (!n.some(e => e.user.id === a.user.id)) {
                                if (n.length >= 7) return [n, !0];
                                n.push(a)
                            }
                        }
                    }
                    return [n, !1]
                }(t, f), h = C && o ? t : _;
                return h.length <= 0 ? null : (0, a.jsx)(E.ScrollerThin, {
                    className: i(v.scroller, l),
                    fade: !0,
                    children: (0, a.jsxs)("div", {
                        className: v.voiceUsers,
                        role: "group",
                        "aria-label": L.default.Messages.VOICE_PANEL_USERS_A11Y_LABEL,
                        children: [h.map(e => {
                            let {
                                user: t,
                                nick: s,
                                voiceState: l
                            } = e;
                            return t.id !== f ? (0, a.jsx)(y, {
                                channel: n,
                                user: t,
                                nick: s,
                                mute: l.isVoiceMuted(),
                                deaf: l.isVoiceDeafened(),
                                video: l.selfVideo,
                                serverMute: l.mute,
                                serverDeaf: l.deaf
                            }, t.id) : null
                        }), C ? c : null]
                    })
                })
            }
        },
        544556: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                updateLinkForUserId: function() {
                    return o
                },
                removeLinkForUserId: function() {
                    return u
                },
                getLinkCodeForCurrentUser: function() {
                    return d
                },
                default: function() {
                    return c
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("599110"),
                i = n("922832"),
                r = n("49111");
            async function o(e, t) {
                await a.default.patch({
                    url: r.Endpoints.FAMILY_CENTER_LINKED_USERS,
                    body: {
                        linked_user_id: e,
                        link_status: t
                    }
                }).then(e => {
                    let {
                        body: t
                    } = e;
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_REQUEST_LINK_UPDATE_SUCCESS",
                        linkedUsers: t
                    }), t
                })
            }
            async function u(e) {
                await a.default.delete({
                    url: r.Endpoints.FAMILY_CENTER_LINKED_USERS,
                    body: {
                        linked_user_id: e
                    }
                }).then(t => {
                    let {
                        body: n
                    } = t;
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_REQUEST_LINK_REMOVE_SUCCESS",
                        linkedUsers: n,
                        deletedUserId: e
                    }), n
                })
            }
            async function d() {
                await a.default.get({
                    url: r.Endpoints.FAMILY_CENTER_LINK_CODE
                }).then(e => {
                    let {
                        body: t
                    } = e, n = t.link_code;
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_LINK_CODE_FETCH_SUCCESS",
                        linkCode: n
                    }), n
                })
            }
            var c = {
                async initialPageLoad() {
                    var e, t, n, l;
                    s.default.dispatch({
                        type: "FAMILY_CENTER_FETCH_START"
                    });
                    let {
                        body: i
                    } = await a.default.get({
                        url: r.Endpoints.FAMILY_CENTER_TEEN_ACTIVITY_ME
                    }), {
                        teen_audit_log: o,
                        linked_users: u,
                        users: d
                    } = i, c = {
                        teenId: null == o ? void 0 : o.teen_user_id,
                        rangeStartId: null == o ? void 0 : o.range_start_id,
                        totals: null !== (e = null == o ? void 0 : o.totals) && void 0 !== e ? e : {},
                        actions: null !== (t = null == o ? void 0 : o.actions) && void 0 !== t ? t : [],
                        users: null !== (n = null == o ? void 0 : o.users) && void 0 !== n ? n : [],
                        guilds: null !== (l = null == o ? void 0 : o.guilds) && void 0 !== l ? l : []
                    };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_INITIAL_LOAD",
                        familyCenterTeenActivity: c,
                        linkedUsers: u,
                        users: d
                    }), c
                },
                async fetchLinkedUsers() {
                    let {
                        body: e
                    } = await a.default.get({
                        url: r.Endpoints.FAMILY_CENTER_LINKED_USERS
                    }), t = {
                        linkedUsers: e.linked_users,
                        users: e.users
                    };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_LINKED_USERS_FETCH_SUCCESS",
                        ...t
                    }), t
                },
                async requestLink(e, t) {
                    let {
                        body: n
                    } = await a.default.post({
                        url: r.Endpoints.FAMILY_CENTER_LINKED_USERS,
                        body: {
                            recipient_id: e,
                            code: t
                        }
                    }), l = {
                        linkedUsers: n.linked_users,
                        users: n.users
                    };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_REQUEST_LINK_SUCCESS",
                        ...l
                    }), l
                },
                async fetchTeenActivity(e) {
                    s.default.dispatch({
                        type: "FAMILY_CENTER_FETCH_START"
                    });
                    let t = r.Endpoints.FAMILY_CENTER_TEEN_ACTIVITY(e),
                        {
                            body: n
                        } = await a.default.get({
                            url: t
                        }),
                        l = n.teen_audit_log,
                        i = {
                            teenId: l.teen_user_id,
                            rangeStartId: l.range_start_id,
                            totals: l.totals,
                            actions: l.actions,
                            users: l.users,
                            guilds: l.guilds
                        };
                    return s.default.dispatch({
                        type: "FAMILY_CENTER_TEEN_ACTIVITY_FETCH_SUCCESS",
                        familyCenterTeenActivity: i
                    }), i
                },
                async fetchMoreTeenActivity(e, t, n, o) {
                    let {
                        body: u
                    } = await a.default.get({
                        url: r.Endpoints.FAMILY_CENTER_TEEN_ACTIVITY_MORE(e, t, n, o)
                    }), {
                        teen_audit_log: d
                    } = u, c = {
                        teenId: d.teen_user_id,
                        rangeStartId: d.range_start_id,
                        actions: d.actions,
                        users: d.users,
                        guilds: d.guilds
                    };
                    return l.default.track(r.AnalyticEvents.FAMILY_CENTER_ACTION, {
                        action: i.FamilyCenterAction.LoadMore,
                        selected_teen_id: e,
                        action_display_type: t
                    }), s.default.dispatch({
                        type: "FAMILY_CENTER_TEEN_ACTIVITY_MORE_FETCH_SUCCESS",
                        familyCenterTeenActivity: c
                    }), d
                },
                selectTab(e) {
                    s.default.dispatch({
                        type: "FAMILY_CENTER_HANDLE_TAB_SELECT",
                        tab: e
                    })
                }
            }
        },
        922832: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FAMILY_CENTER_REFETCH_COOLDOWN: function() {
                    return L
                },
                MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS: function() {
                    return v
                },
                MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS: function() {
                    return M
                },
                FAMILY_CENTER_REQUEST_SECTION_HEIGHT: function() {
                    return P
                },
                FAMILY_CENTER_REQUEST_ROW_HEIGHT: function() {
                    return D
                },
                FAMILY_CENTER_REQUEST_QR_CODE_URL: function() {
                    return y
                },
                FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS: function() {
                    return x
                },
                QR_CODE_AUTO_HIDE_TIMEOUT: function() {
                    return U
                },
                PLACEHOLDER_QR_CODE_URL: function() {
                    return b
                },
                FAMILY_CENTER_SUB_ROUTES: function() {
                    return G
                },
                UserLinkStatus: function() {
                    return l
                },
                TeenActionDisplayType: function() {
                    return i
                },
                FamilyCenterSubPages: function() {
                    return r
                },
                FamilyCenterSubPageAnalyticsIds: function() {
                    return o
                },
                FamilyCenterPageLocation: function() {
                    return u
                },
                FamilyCenterPageLocationAnalyticsIds: function() {
                    return d
                },
                FamilyCenterAction: function() {
                    return c
                },
                ACTION_TO_TEXT: function() {
                    return j
                },
                PENDING_LINK_REQUEST_TIMESTAMP_FORMATTER: function() {
                    return w
                },
                ACCEPTED_LINK_REQUEST_TIMESTAMP_FORMATTER: function() {
                    return k
                }
            }), n("222007");
            var a, s, l, i, r, o, u, d, c, E, f, _, C, h, I, T, S, N, A, m, p, g, R = n("447669"),
                O = n("782340");
            let L = 3e4,
                v = 8,
                M = 3,
                P = 26,
                D = 64,
                y = (e, t) => "https://discord.com/feature/family-center/my-family/".concat(e, "/").concat(t),
                x = 4,
                U = 3e5,
                b = "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
                G = (0, R.wrapPaths)(Object.freeze({
                    FAMILY_CENTER_SETTINGS: "/family-center/settings",
                    FAMILY_CENTER_MY_FAMILY: "/family-center/my-family"
                }), [":", "?", "@"]);
            (_ = a || (a = {}))[_.DM_MESSAGE_SEND = 1] = "DM_MESSAGE_SEND", _[_.GDM_MESSAGE_SEND = 2] = "GDM_MESSAGE_SEND", _[_.MESSAGE_REACT = 3] = "MESSAGE_REACT", _[_.ADD_FRIEND = 4] = "ADD_FRIEND", _[_.SEND_CALL = 5] = "SEND_CALL", _[_.CALL_JOIN = 6] = "CALL_JOIN", _[_.GUILD_JOIN = 7] = "GUILD_JOIN", (C = s || (s = {}))[C.PARENT = 1] = "PARENT", C[C.CHILD = 2] = "CHILD", (h = l || (l = {}))[h.PENDING = 1] = "PENDING", h[h.ACTIVE = 2] = "ACTIVE", h[h.INACTIVE = 3] = "INACTIVE", h[h.DECLINED = 4] = "DECLINED", h[h.EXPIRED = 5] = "EXPIRED", (I = i || (i = {}))[I.USER_ADD = 1] = "USER_ADD", I[I.GUILD_ADD = 2] = "GUILD_ADD", I[I.USER_INTERACTION = 3] = "USER_INTERACTION", I[I.GUILD_INTERACTION = 4] = "GUILD_INTERACTION", I[I.USER_CALLED = 5] = "USER_CALLED", (T = r || (r = {})).ACTIVITY = "ACTIVITY", T.REQUESTS = "REQUESTS", T.SETTINGS = "SETTINGS", (S = o || (o = {}))[S.ACTIVITY = 0] = "ACTIVITY", S[S.REQUESTS = 1] = "REQUESTS", S[S.SETTINGS = 2] = "SETTINGS", (N = u || (u = {})).SIDENAV = "SIDENAV", N.SETTINGS = "SETTINGS", (A = d || (d = {}))[A.SIDENAV = 0] = "SIDENAV", A[A.SETTINGS = 1] = "SETTINGS", (m = c || (c = {}))[m.TabChange = 0] = "TabChange", m[m.ShowQRCodeModal = 1] = "ShowQRCodeModal", m[m.RevealQRCode = 2] = "RevealQRCode", m[m.ScanQRCodeButton = 3] = "ScanQRCodeButton", m[m.ScanQRCode = 4] = "ScanQRCode", m[m.LoadMore = 5] = "LoadMore", m[m.SelectTeen = 6] = "SelectTeen", m[m.HideQRCode = 7] = "HideQRCode";
            let j = new Map([
                [3, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_INTERACTION_TOOLTIP_TEEN,
                    timestampFormatter: () => ({
                        today: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_MESSAGED_TIMESTAMP_TODAY,
                        yesterday: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_MESSAGED_TIMESTAMP_YESTERDAY,
                        days: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_MESSAGED_TIMESTAMP_DAYS
                    })
                }],
                [5, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TOOLTIP_TEEN,
                    timestampFormatter: () => ({
                        today: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TIMESTAMP_TODAY,
                        yesterday: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TIMESTAMP_YESTERDAY,
                        days: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_CALLED_TIMESTAMP_DAYS
                    })
                }],
                [1, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_ADD_FRIENDS_TOOLTIP_TEEN,
                    timestampFormatter: () => ({
                        today: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_ADDED_TIMESTAMP_TODAY,
                        yesterday: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_ADDED_TIMESTAMP_YESTERDAY,
                        days: O.default.Messages.FAMILY_CENTER_ACTIVITY_USER_ADDED_TIMESTAMP_DAYS
                    })
                }],
                [2, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_JOIN_TOOLTIP_TEEN
                }],
                [4, {
                    tooltipHeader: () => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_HEADER,
                    tooltipDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_TEEN,
                    sectionHeader: e => O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_SECTION_HEADER.format({
                        count: e
                    }),
                    sectionDescription: e => e ? O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_PARENT : O.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_INTERACTION_TOOLTIP_TEEN
                }]
            ]);
            (p = E || (E = {}))[p.CHECK = 0] = "CHECK", p[p.X = 1] = "X", (g = f || (f = {}))[g.GENERIC_ERROR = 0] = "GENERIC_ERROR", g[g.INELIGIBLE_FOR_FAMILY_CENTER = 1] = "INELIGIBLE_FOR_FAMILY_CENTER", g[g.PENDING_REQUEST_EXISTS = 2] = "PENDING_REQUEST_EXISTS", g[g.MAX_CONNECTIONS_REACHED = 3] = "MAX_CONNECTIONS_REACHED";
            let w = () => ({
                    seconds: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_SECONDS,
                    minutes: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_MINUTES,
                    hours: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_HOURS,
                    yesterday: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_YESTERDAY,
                    days: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_DAYS,
                    date: O.default.Messages.FAMILY_CENTER_PENDING_TIMESTAMP_DATE
                }),
                k = () => ({
                    seconds: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_SECONDS,
                    minutes: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_MINUTES,
                    hours: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_HOURS,
                    yesterday: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_YESTERDAY,
                    days: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_DAYS,
                    date: O.default.Messages.FAMILY_CENTER_ACCEPTED_TIMESTAMP_DATE
                })
        },
        138505: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FamilyCenterGuild: function() {
                    return s
                }
            });
            var a = n("813006");
            class s extends a.default {
                constructor(e) {
                    super(e), this.approximateMemberCount = e.approximate_member_count
                }
            }
        },
        822825: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return V
                }
            }), n("808653"), n("222007"), n("424973");
            var a = n("249654"),
                s = n("988415"),
                l = n("455079"),
                i = n("697218"),
                r = n("544556"),
                o = n("138505"),
                u = n("117933"),
                d = n("922832");
            let c = null,
                E = null,
                f = {},
                _ = p(),
                C = g(),
                h = null,
                I = function() {
                    var e, t, n, a;
                    return (null === (t = window) || void 0 === t ? void 0 : null === (e = t.location) || void 0 === e ? void 0 : e.pathname) === d.FAMILY_CENTER_SUB_ROUTES.FAMILY_CENTER_MY_FAMILY ? d.FamilyCenterSubPages.REQUESTS : (null === (a = window) || void 0 === a ? void 0 : null === (n = a.location) || void 0 === n ? void 0 : n.pathname) === d.FAMILY_CENTER_SUB_ROUTES.FAMILY_CENTER_SETTINGS ? d.FamilyCenterSubPages.SETTINGS : d.FamilyCenterSubPages.ACTIVITY
                }(),
                T = !1,
                S = !1,
                N = null,
                A = null,
                m = {};

            function p() {
                return {
                    [d.TeenActionDisplayType.USER_ADD]: {},
                    [d.TeenActionDisplayType.GUILD_ADD]: {},
                    [d.TeenActionDisplayType.USER_INTERACTION]: {},
                    [d.TeenActionDisplayType.GUILD_INTERACTION]: {},
                    [d.TeenActionDisplayType.USER_CALLED]: {}
                }
            }

            function g() {
                return {
                    [d.TeenActionDisplayType.USER_ADD]: 0,
                    [d.TeenActionDisplayType.GUILD_ADD]: 0,
                    [d.TeenActionDisplayType.USER_INTERACTION]: 0,
                    [d.TeenActionDisplayType.GUILD_INTERACTION]: 0,
                    [d.TeenActionDisplayType.USER_CALLED]: 0
                }
            }

            function R() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    t = arguments.length > 1 ? arguments[1] : void 0;
                return f = e.length > 0 ? e.reduce((e, t) => ({
                    ...e,
                    [t.user_id]: t
                }), {}) : {}
            }

            function O(e) {
                void 0 !== e && (C = e)
            }

            function L(e, t) {
                let n = t ? _ : p();
                return _ = e.reduce((e, t) => {
                    let a = t.display_type;
                    return void 0 !== n[a] && void 0 === n[a][t.event_id] && (e[a][t.event_id] = t), e
                }, n)
            }

            function v(e) {
                m = e.reduce((e, t) => ({
                    ...e,
                    [t.id]: new o.FamilyCenterGuild(t)
                }), m)
            }

            function M() {
                S = !0
            }

            function P(e) {
                let {
                    linkedUsers: t,
                    familyCenterTeenActivity: n
                } = e, {
                    actions: s,
                    guilds: l,
                    totals: i,
                    teenId: r,
                    rangeStartId: o
                } = n;
                c = r, E = o, L(s), O(i), v(l), R(t), S = !1, N = a.default.fromTimestamp(Date.now()), T = !0
            }

            function D(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t)
            }

            function y(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t)
            }

            function x(e) {
                let {
                    familyCenterTeenActivity: t
                } = e;
                if (void 0 === t) return;
                let {
                    actions: n,
                    totals: s,
                    guilds: l,
                    teenId: i,
                    rangeStartId: r
                } = t;
                c = i, E = r, L(n), O(s), v(l), S = !1, N = a.default.fromTimestamp(Date.now())
            }

            function U(e) {
                let {
                    familyCenterTeenActivity: t
                } = e, {
                    actions: n,
                    guilds: a
                } = t;
                L(n, !0), v(a)
            }

            function b(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t)
            }

            function G(e) {
                let {
                    linkedUsers: t
                } = e;
                R(t, !0)
            }

            function j(e) {
                let {
                    linkCode: t
                } = e;
                h = t
            }

            function w(e) {
                let {
                    tab: t
                } = e;
                I = t
            }

            function k(e) {
                let {
                    user: t
                } = e;
                if (void 0 === t.linked_users) return;
                let n = i.default.getUsers(),
                    a = t.linked_users.some(e => {
                        let {
                            user_id: t
                        } = e;
                        return void 0 === n[t]
                    });
                a && t.linked_users.length > Object.keys(f).length ? r.default.fetchLinkedUsers() : R(t.linked_users)
            }

            function F(e) {
                var t;
                let {
                    countryCode: n
                } = e;
                null != n && (A = null !== (t = (0, s.getCountryCodeByAlpha2)(n)) && void 0 !== t ? t : null)
            }

            function B() {
                c = null, E = null, f = {}, _ = p(), C = g(), m = {}, S = !1, N = null
            }
            class H extends l.default {
                takeSnapshot() {
                    return {
                        version: H.LATEST_SNAPSHOT_VERSION,
                        data: {
                            linkedUsers: Object.values(f),
                            teenActivityTotals: Object.entries(C).map(e => {
                                let [t, n] = e;
                                return "".concat(t, ":").concat(n)
                            }),
                            teenActivity: function() {
                                let e = [];
                                return Object.entries(_).forEach(t => {
                                    let [n, a] = t;
                                    e.push(...Object.values(a))
                                }), e
                            }(),
                            guilds: Object.values(m)
                        }
                    }
                }
                getSelectedTeenId() {
                    return c
                }
                getLinkedUsers() {
                    return f
                }
                getLinkTimestamp(e) {
                    var t;
                    let n = f[e];
                    return null == n ? null : null !== (t = n.updated_at) && void 0 !== t ? t : n.created_at
                }
                getRangeStartTimestamp() {
                    return null == E ? null : a.default.extractTimestamp(E)
                }
                getActionsForDisplayType(e) {
                    return Object.values(_[e])
                }
                getTotalForDisplayType(e) {
                    return C[e]
                }
                getLinkCode() {
                    return h
                }
                getGuild(e) {
                    return m[e]
                }
                getSelectedTab() {
                    return I
                }
                getStartId() {
                    return E
                }
                getIsInitialized() {
                    return T
                }
                getUserCountry() {
                    return A
                }
                isLoading() {
                    return S
                }
                canRefetch() {
                    return null === N || a.default.age(N) > d.FAMILY_CENTER_REFETCH_COOLDOWN
                }
                constructor() {
                    super(), this.loadCache = () => {
                        let e = this.readSnapshot(H.LATEST_SNAPSHOT_VERSION);
                        if (null != e) R(e.linkedUsers), v(e.guilds), L(e.teenActivity), C = e.teenActivityTotals.reduce((e, t) => {
                            let [n, a] = t.split(":"), s = (0, u.displayTypeFromString)(n);
                            return void 0 === s ? e : {
                                ...e,
                                [s]: parseInt(a, 10)
                            }
                        }, g())
                    }, this.registerActionHandlers({
                        CURRENT_USER_UPDATE: k,
                        CACHE_LOADED_LAZY: this.loadCache,
                        FAMILY_CENTER_INITIAL_LOAD: P,
                        FAMILY_CENTER_FETCH_START: M,
                        FAMILY_CENTER_LINKED_USERS_FETCH_SUCCESS: D,
                        FAMILY_CENTER_TEEN_ACTIVITY_FETCH_SUCCESS: x,
                        FAMILY_CENTER_TEEN_ACTIVITY_MORE_FETCH_SUCCESS: U,
                        FAMILY_CENTER_REQUEST_LINK_SUCCESS: y,
                        FAMILY_CENTER_REQUEST_LINK_UPDATE_SUCCESS: b,
                        FAMILY_CENTER_REQUEST_LINK_REMOVE_SUCCESS: G,
                        FAMILY_CENTER_LINK_CODE_FETCH_SUCCESS: j,
                        FAMILY_CENTER_HANDLE_TAB_SELECT: w,
                        SET_LOCATION_METADATA: F,
                        LOGOUT: B
                    }), this.waitFor(i.default)
                }
            }
            H.displayName = "FamilyCenterStore", H.LATEST_SNAPSHOT_VERSION = 3;
            var V = new H
        },
        117933: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getEmptyActivityFormatter: function() {
                    return c
                },
                getActivityWindowTimestampFormatter: function() {
                    return E
                },
                formatUserActivityTimestamp: function() {
                    return f
                },
                formatLinkTimestamp: function() {
                    return _
                },
                isUserAction: function() {
                    return C
                },
                isGuildAction: function() {
                    return h
                },
                displayTypeFromString: function() {
                    return I
                }
            }), n("222007");
            var a = n("866227"),
                s = n.n(a),
                l = n("922832"),
                i = n("782340");
            let r = 3600,
                o = 24 * r,
                u = 2 * o,
                d = 7 * o,
                c = () => ({
                    today: i.default.Messages.FAMILY_CENTER_EMPTY_ACTIVITY_TODAY,
                    yesterday: i.default.Messages.FAMILY_CENTER_EMPTY_ACTIVITY_YESTERDAY,
                    days: i.default.Messages.FAMILY_CENTER_EMPTY_ACTIVITY_DAYS
                }),
                E = e => e ? {
                    today: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_PARENT_TODAY,
                    yesterday: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_PARENT_YESTERDAY,
                    days: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_PARENT_DAYS
                } : {
                    today: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_TEEN_TODAY,
                    yesterday: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_TEEN_YESTERDAY,
                    days: i.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_DESCRIPTION_TEEN_DAYS
                },
                f = (e, t, n) => {
                    let a = s().diff(s(e), "s"),
                        l = t(),
                        i = s(e).format("LL");
                    return i = a < o ? l.today : a < u ? l.yesterday : l.days.format({
                        days: Math.min(Math.floor(a / o), null != n ? n : 999)
                    })
                },
                _ = (e, t) => {
                    let n = s().diff(s(e), "s"),
                        a = t(),
                        l = s(e).format("LL");
                    return l = n < 60 ? a.seconds : n < r ? a.minutes.format({
                        count: Math.floor(n / 60)
                    }) : n < o ? a.hours.format({
                        count: Math.floor(n / r)
                    }) : n < u ? a.yesterday : n < d ? a.days.format({
                        count: Math.floor(n / o)
                    }) : a.date.format({
                        date: l
                    })
                },
                C = e => e.display_type === l.TeenActionDisplayType.USER_ADD || e.display_type === l.TeenActionDisplayType.USER_INTERACTION || e.display_type === l.TeenActionDisplayType.USER_CALLED,
                h = e => e.display_type === l.TeenActionDisplayType.GUILD_ADD || e.display_type === l.TeenActionDisplayType.GUILD_INTERACTION,
                I = e => {
                    let t = Object.values(l.TeenActionDisplayType);
                    for (let n of t)
                        if (n.toString() === e) return n
                }
        },
        368874: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useAgeSpecificText: function() {
                    return s
                }
            });
            var a = n("775032");
            let s = (e, t) => {
                let n = (0, a.default)();
                return n ? t : e
            }
        },
        648750: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useFamilyCenterActions: function() {
                    return o
                }
            }), n("222007");
            var a = n("884691"),
                s = n("448993"),
                l = n("544556"),
                i = n("822825"),
                r = n("922832");

            function o(e) {
                let {
                    onError: t,
                    onSuccess: n
                } = null != e ? e : {}, [o, u] = a.useState(!1), [d, c] = a.useState(!1), [E, f] = a.useState(!1), [_, C] = a.useState(!1), [h, I] = a.useState(!1), [T, S] = a.useState(!1), [N, A] = a.useState(!1), [m, p] = a.useState(!1), g = o || d || E || _ || T || m, R = a.useCallback(async e => {
                    if (!g) {
                        u(!0);
                        try {
                            await (0, l.updateLinkForUserId)(e.id, r.UserLinkStatus.ACTIVE), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            u(!1)
                        }
                    }
                }, [g, t, n]), O = a.useCallback(async e => {
                    if (!g) {
                        c(!0);
                        try {
                            await (0, l.updateLinkForUserId)(e.id, r.UserLinkStatus.DECLINED), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            c(!1)
                        }
                    }
                }, [g, t, n]), L = a.useCallback(async e => {
                    if (!g) {
                        f(!0);
                        try {
                            await (0, l.updateLinkForUserId)(e.id, r.UserLinkStatus.INACTIVE), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            f(!1)
                        }
                    }
                }, [g, t, n]), v = a.useCallback(async e => {
                    if (!g) {
                        C(!0);
                        try {
                            await (0, l.removeLinkForUserId)(e.id), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            C(!1)
                        }
                    }
                }, [g, t, n]), M = a.useCallback(async () => {
                    if (!h) {
                        I(!0);
                        try {
                            await (0, l.getLinkCodeForCurrentUser)(), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            I(!1)
                        }
                    }
                }, [h, t, n]), P = a.useCallback(async e => {
                    if (!N) {
                        A(!0);
                        try {
                            await l.default.fetchTeenActivity(e), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            A(!1)
                        }
                    }
                }, [N, t, n]), D = a.useCallback(async (e, a) => {
                    if (!T) {
                        S(!0);
                        try {
                            await l.default.requestLink(e, a), null == n || n()
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            S(!1)
                        }
                    }
                }, [T, t, n]), y = a.useCallback(async e => {
                    let n = i.default.getActionsForDisplayType(e),
                        a = n[n.length - 1],
                        r = i.default.getStartId(),
                        o = i.default.getSelectedTeenId();
                    if (!m && null != r && null != o) {
                        p(!0);
                        try {
                            await l.default.fetchMoreTeenActivity(o, e, r, a.event_id)
                        } catch (n) {
                            let e = new s.APIError(n);
                            null == t || t(e)
                        } finally {
                            p(!1)
                        }
                    }
                }, [m, t]);
                return {
                    acceptLinkRequest: R,
                    declineLinkRequest: O,
                    disconnectLinkRequest: L,
                    cancelLinkRequest: v,
                    selectTeenUser: P,
                    getLinkCode: M,
                    requestLink: D,
                    loadMore: y,
                    isAcceptLoading: o,
                    isDeclineLoading: d,
                    isDisconnectLoading: E,
                    isCancelLoading: _,
                    isGetLinkCodeLoading: h,
                    isSelectTeenUserLoading: N,
                    isRequestingLink: T,
                    isMoreLoading: m
                }
            }
        },
        710514: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useActionsForDisplayType: function() {
                    return i
                },
                useActionTotalsForDisplayType: function() {
                    return r
                },
                useHasActionForAnyDisplayType: function() {
                    return o
                }
            });
            var a = n("65597"),
                s = n("822825"),
                l = n("922832");

            function i(e) {
                let t = (0, a.useStateFromStoresArray)([s.default], () => s.default.getActionsForDisplayType(e));
                return t
            }

            function r(e) {
                return (0, a.default)([s.default], () => s.default.getTotalForDisplayType(e))
            }

            function o() {
                return (0, a.default)([s.default], () => Object.values(l.TeenActionDisplayType).some(e => {
                    let t = s.default.getTotalForDisplayType(e);
                    return t > 0
                }))
            }
        },
        652126: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useShouldShowHelplineLink: function() {
                    return c
                }
            }), n("222007");
            var a = n("884691"),
                s = n("65597"),
                l = n("16108"),
                i = n("915639"),
                r = n("822825"),
                o = n("775032");
            let u = new Set(["US"]),
                d = new Set(["en-US", "es-ES"]),
                c = () => {
                    let e = (0, o.default)(),
                        t = (0, s.default)([r.default], () => r.default.getUserCountry()),
                        n = (0, s.default)([i.default], () => i.default.locale);
                    return a.useEffect(() => {
                        null == t && (0, l.fetchUserCountryCode)()
                    }, [t]), !e && null != t && u.has(t.alpha2) && d.has(n)
                }
        },
        104887: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("65597"),
                s = n("599110"),
                l = n("544556"),
                i = n("822825"),
                r = n("922832"),
                o = n("49111"),
                u = () => {
                    let e = (0, a.default)([i.default], () => i.default.getSelectedTab());
                    return {
                        selectedTab: e,
                        handleTabChange: e => {
                            l.default.selectTab(e), s.default.track(o.AnalyticEvents.FAMILY_CENTER_ACTION, {
                                action: r.FamilyCenterAction.TabChange,
                                tab: e
                            })
                        }
                    }
                }
        },
        771783: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSelectedTeenId: function() {
                    return l
                }
            });
            var a = n("65597");
            n("697218");
            var s = n("822825");
            let l = () => (0, a.default)([s.default], () => s.default.getSelectedTeenId())
        },
        339853: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useSelectedTeenUser: function() {
                    return r
                },
                useTeenUserForId: function() {
                    return o
                }
            });
            var a = n("65597"),
                s = n("697218"),
                l = n("822825"),
                i = n("775032");
            let r = () => {
                    let e = (0, i.default)();
                    return (0, a.default)([l.default, s.default], () => {
                        if (!e) return s.default.getCurrentUser();
                        let t = l.default.getSelectedTeenId();
                        if (null !== t) return s.default.getUser(t)
                    })
                },
                o = e => (0, a.default)([s.default], () => {
                    let t = s.default.getUser(e);
                    if (null != t) return t
                })
        },
        775032: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("446674"),
                s = n("697218");

            function l() {
                let e = (0, a.useStateFromStores)([s.default], () => {
                    var e;
                    return null === (e = s.default.getCurrentUser()) || void 0 === e ? void 0 : e.nsfwAllowed
                });
                return e
            }
        },
        25132: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useUserForLinkStatus: function() {
                    return d
                },
                useUserQRLinkUrl: function() {
                    return c
                },
                useHasMaxConnections: function() {
                    return E
                },
                usePendingRequestCount: function() {
                    return f
                },
                useAcceptedRequestsCount: function() {
                    return _
                },
                useActivityWindowTimeStamp: function() {
                    return C
                },
                useLinkTimestampText: function() {
                    return h
                }
            });
            var a = n("65597"),
                s = n("697218"),
                l = n("822825"),
                i = n("117933"),
                r = n("771783"),
                o = n("775032"),
                u = n("922832");

            function d(e) {
                let t = (0, a.default)([l.default], () => l.default.getLinkedUsers()),
                    n = Object.values(t).filter(t => null != t && t.link_status === e),
                    i = n.sort((e, t) => new Date(e.updated_at).getTime() - new Date(t.updated_at).getTime()).map(e => {
                        var t;
                        return null !== (t = e.user_id) && void 0 !== t ? t : void 0
                    }).filter(e => null != e);
                return (0, a.useStateFromStoresArray)([s.default], () => i.map(e => s.default.getUser(e))).filter(e => null != e)
            }

            function c() {
                let e = (0, a.default)([l.default], () => l.default.getLinkCode()),
                    t = (0, a.default)([s.default], () => s.default.getCurrentUser());
                return null == e || null == t ? null : (0, u.FAMILY_CENTER_REQUEST_QR_CODE_URL)(t.id, e)
            }

            function E() {
                let e = (0, o.default)(),
                    t = d(u.UserLinkStatus.ACTIVE),
                    n = e ? u.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS : u.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS;
                return t.length >= n
            }

            function f() {
                let e = (0, a.default)([s.default], () => s.default.getCurrentUser()),
                    t = (0, a.default)([l.default], () => l.default.getLinkedUsers());
                if (null == e) return 0;
                let n = Object.values(t).filter(t => null != t && t.link_status === u.UserLinkStatus.PENDING && e.id !== t.requestor_id);
                return n.length
            }

            function _() {
                let e = (0, a.default)([s.default], () => s.default.getCurrentUser()),
                    t = (0, a.default)([l.default], () => l.default.getLinkedUsers());
                if (null == e) return 0;
                let n = Object.values(t).filter(e => null != e && e.link_status === u.UserLinkStatus.ACTIVE);
                return n.length
            }

            function C(e) {
                let t = (0, r.useSelectedTeenId)(),
                    n = (0, a.default)([l.default], () => null == t ? null : l.default.getRangeStartTimestamp());
                return null == n ? null : (0, i.formatUserActivityTimestamp)(new Date(n).getTime(), () => e, 7)
            }

            function h(e, t) {
                let n = (0, a.default)([l.default], () => l.default.getLinkTimestamp(e));
                return null != n ? (0, i.formatLinkTimestamp)(Date.parse(n), t === u.UserLinkStatus.PENDING ? u.PENDING_LINK_REQUEST_TIMESTAMP_FORMATTER : u.ACCEPTED_LINK_REQUEST_TIMESTAMP_FORMATTER) : null
            }
        },
        322372: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("368874"),
                i = n("104887"),
                r = n("775032"),
                o = n("25132"),
                u = n("806468"),
                d = n("922832"),
                c = n("782340"),
                E = n("960943"),
                f = n("358616"),
                _ = n("865932");
            let C = () => {
                let e = (0, o.useUserForLinkStatus)(d.UserLinkStatus.ACTIVE),
                    t = (0, r.default)(),
                    {
                        handleTabChange: n
                    } = (0, i.default)(),
                    l = (0, o.useHasMaxConnections)();
                return l || t && e.length > 0 ? null : (0, a.jsx)("div", {
                    className: E.button,
                    children: t ? (0, a.jsx)(s.Button, {
                        fullWidth: !1,
                        size: s.ButtonSizes.LARGE,
                        onClick: () => n(d.FamilyCenterSubPages.REQUESTS),
                        children: c.default.Messages.GET_STARTED
                    }) : (0, a.jsx)(u.default, {})
                })
            };
            var h = () => {
                let e = (0, r.default)(),
                    t = (0, l.useAgeSpecificText)(c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_HEADER_TEEN, c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_HEADER_PARENT),
                    n = (0, l.useAgeSpecificText)(c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_DESCRIPTION_TEEN.format({
                        articleLink: "https://support.discord.com/hc/articles/14155060633623"
                    }), c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_DESCRIPTION_PARENT.format({
                        articleLink: "https://support.discord.com/hc/articles/14155043715735"
                    }));
                return (0, a.jsxs)("div", {
                    className: E.container,
                    children: [(0, a.jsxs)("div", {
                        children: [(0, a.jsx)("div", {
                            children: (0, a.jsxs)("div", {
                                className: E.headerText,
                                children: [(0, a.jsx)(s.Heading, {
                                    variant: "heading-xl/medium",
                                    children: (0, a.jsx)(s.HeadingLevel, {
                                        children: t
                                    })
                                }), (0, a.jsx)(s.Text, {
                                    variant: "text-sm/medium",
                                    color: "text-muted",
                                    children: n
                                })]
                            })
                        }), (0, a.jsx)(C, {})]
                    }), (0, a.jsx)("div", {
                        className: E.headerImage,
                        children: (0, a.jsx)("img", {
                            src: e ? f : _,
                            alt: c.default.Messages.FAMILY_CENTER_ACTIVITY_BANNER_IMAGE_ALT
                        })
                    })]
                })
            }
        },
        447342: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return j
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("65597"),
                o = n("77078"),
                u = n("462579"),
                d = n("266926"),
                c = n("599110"),
                E = n("299039"),
                f = n("822825"),
                _ = n("117933"),
                C = n("368874"),
                h = n("648750"),
                I = n("710514"),
                T = n("339853"),
                S = n("775032"),
                N = n("25132"),
                A = n("453479"),
                m = n("975344"),
                p = n("57"),
                g = n("863972"),
                R = n("884706"),
                O = n("424373"),
                L = n("922832"),
                v = n("49111"),
                M = n("782340"),
                P = n("354591");

            function D() {
                let e = s.useCallback(() => {
                    (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("538969").then(n.bind(n, "538969"));
                        return t => (0, a.jsx)(e, {
                            ...t
                        })
                    })
                }, []);
                return (0, a.jsx)(o.Clickable, {
                    className: P.tooltip,
                    onClick: e,
                    children: (0, a.jsx)(d.default, {
                        className: P.icon,
                        width: 15,
                        height: 15
                    })
                })
            }

            function y(e) {
                let {
                    displayType: t
                } = e, n = s.useCallback(() => {
                    (0, o.showToast)((0, o.createToast)(M.default.Messages.FAMILY_CENTER_ERROR_GENERIC_TOAST, o.ToastType.FAILURE))
                }, []), l = (0, S.default)(), r = (0, I.useActionsForDisplayType)(t), u = (0, I.useActionTotalsForDisplayType)(t), {
                    loadMore: d,
                    isMoreLoading: c
                } = (0, h.useFamilyCenterActions)({
                    onError: n
                }), f = L.ACTION_TO_TEXT.get(t), [C, T] = s.useState(L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS), N = s.useCallback(() => {
                    T(e => e + L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS), d(t)
                }, [t, d]);
                i(f, "No text for action type");
                let A = f.sectionHeader(u),
                    g = s.useCallback(e => {
                        let {
                            row: t
                        } = e, n = r[t];
                        return (0, _.isUserAction)(n) ? (0, a.jsx)(p.default, {
                            userId: n.entity_id,
                            timestamp: E.default.extractTimestamp(n.event_id),
                            timestampFormatter: f.timestampFormatter
                        }, n.event_id) : (0, _.isGuildAction)(n) ? (0, a.jsx)(m.default, {
                            guildId: n.entity_id
                        }, n.event_id) : void 0
                    }, [r, f.timestampFormatter]),
                    R = s.useCallback(() => (0, a.jsxs)(a.Fragment, {
                        children: [(0, a.jsx)(o.Text, {
                            className: P.sectionHeader,
                            variant: "eyebrow",
                            color: "header-secondary",
                            children: A
                        }), void 0 !== f.sectionDescription ? (0, a.jsx)(o.Text, {
                            className: P.sectionDescription,
                            variant: "text-md/medium",
                            color: "text-muted",
                            children: f.sectionDescription(null != l && l)
                        }) : null]
                    }), [A, f, l]);
                if (0 === r.length) return null;
                let O = r.slice(0, C);
                return (0, a.jsxs)("div", {
                    className: P.actionSection,
                    children: [R(), (0, a.jsx)("div", {
                        className: P.actions,
                        style: {
                            maxHeight: 65 * O.length
                        },
                        children: O.map((e, t) => g({
                            row: t
                        }))
                    }), O.length !== u ? (0, a.jsx)(o.Clickable, {
                        className: P.loadMoreBar,
                        onClick: N,
                        role: "button",
                        children: c ? (0, a.jsx)(o.Spinner, {
                            type: o.Spinner.Type.PULSING_ELLIPSIS,
                            className: P.spinner
                        }) : (0, a.jsx)(o.Text, {
                            className: P.loadMore,
                            variant: "text-sm/bold",
                            children: M.default.Messages.FAMILY_CENTER_ACTIVITY_MORE.format({
                                pageSize: Math.min(u - O.length, L.FAMILY_CENTER_ITEMS_SHOWN_INCREMENTS)
                            })
                        })
                    }) : null]
                })
            }
            let x = () => {
                    let e = (0, S.default)(),
                        t = (0, N.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE),
                        n = (0, C.useAgeSpecificText)(M.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_PREFACE_TEEN.format({
                            activeLinks: t.length
                        }), M.default.Messages.FAMILY_CENTER_ACTIVITY_OVERVIEW_PREFACE_PARENT),
                        s = (0, _.getActivityWindowTimestampFormatter)(!!e),
                        l = (0, N.useActivityWindowTimeStamp)(s);
                    return e && t.length > 1 ? (0, a.jsx)(o.Text, {
                        variant: "eyebrow",
                        children: l
                    }) : (0, a.jsxs)(a.Fragment, {
                        children: [e ? null : (0, a.jsx)(u.default, {
                            className: P.icon
                        }), (0, a.jsx)(o.Text, {
                            variant: "eyebrow",
                            children: n
                        })]
                    })
                },
                U = e => {
                    let {
                        userId: t,
                        subText: n,
                        avatarSize: s = o.AvatarSizes.SIZE_40
                    } = e, l = (0, T.useTeenUserForId)(t);
                    return void 0 === l ? null : (0, a.jsxs)("div", {
                        className: P.accountRow,
                        children: [(0, a.jsx)(g.FamilyCenterAvatar, {
                            user: l,
                            avatarSize: s
                        }), (0, a.jsxs)("div", {
                            className: P.headerText,
                            children: [(0, a.jsx)(R.default, {
                                user: l
                            }), void 0 !== n ? (0, a.jsx)(o.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                children: n
                            }) : null]
                        })]
                    })
                },
                b = () => {
                    let e = (0, N.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE),
                        t = (0, r.default)([f.default], () => f.default.getSelectedTeenId()),
                        {
                            selectTeenUser: n
                        } = (0, h.useFamilyCenterActions)({}),
                        l = e.map(e => ({
                            label: e.id,
                            value: e.id
                        })),
                        i = s.useCallback(e => (0, a.jsx)(U, {
                            userId: e.value,
                            avatarSize: o.AvatarSizes.SIZE_24
                        }), []);
                    return (0, a.jsx)(o.Select, {
                        className: P.select,
                        renderOptionLabel: i,
                        renderOptionValue: e => {
                            let [t] = e;
                            return i(t)
                        },
                        serialize: e => e,
                        select: e => {
                            n(e), c.default.track(v.AnalyticEvents.FAMILY_CENTER_ACTION, {
                                action: L.FamilyCenterAction.SelectTeen
                            })
                        },
                        isSelected: e => e === t,
                        options: l
                    })
                },
                G = e => {
                    let {
                        userId: t
                    } = e, n = (0, S.default)(), s = (0, N.useUserForLinkStatus)(L.UserLinkStatus.ACTIVE), l = (0, _.getActivityWindowTimestampFormatter)(!!n), i = (0, N.useActivityWindowTimeStamp)(l);
                    return n && 1 !== s.length ? (0, a.jsx)(b, {}) : (0, a.jsx)(U, {
                        userId: t,
                        subText: i
                    })
                };
            var j = e => {
                let {
                    user: t
                } = e, n = Array.from(L.ACTION_TO_TEXT.entries()), s = (0, I.useHasActionForAnyDisplayType)(), l = (0, _.getEmptyActivityFormatter)(), i = (0, N.useActivityWindowTimeStamp)(l);
                return (0, a.jsxs)("div", {
                    className: P.container,
                    children: [(0, a.jsxs)("div", {
                        className: P.connectedCounter,
                        children: [(0, a.jsx)(x, {}), (0, a.jsx)(D, {})]
                    }), (0, a.jsxs)("div", {
                        className: P.card,
                        children: [(0, a.jsx)("div", {
                            className: P.header,
                            children: (0, a.jsx)(G, {
                                userId: t.id
                            })
                        }), (0, a.jsxs)("div", {
                            className: P.content,
                            children: [(0, a.jsx)("div", {
                                className: P.activityCounterRow,
                                children: n.map(e => {
                                    let [t, n] = e;
                                    return (0, a.jsx)(A.default, {
                                        displayType: t,
                                        header: n.tooltipHeader()
                                    }, "counter-".concat(t))
                                })
                            }), (0, a.jsx)("div", {
                                className: P.activityOverview,
                                children: s ? n.map(e => {
                                    let [t] = e;
                                    return (0, a.jsx)(y, {
                                        displayType: t
                                    }, "".concat(t, "-list"))
                                }) : (0, a.jsx)(O.default, {
                                    className: P.emptyActivity,
                                    text: null != i ? i : ""
                                })
                            })]
                        })]
                    })]
                })
            }
        },
        453479: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("710514"),
                i = n("629788"),
                r = e => {
                    let {
                        header: t,
                        displayType: n
                    } = e, r = (0, l.useActionTotalsForDisplayType)(n);
                    return (0, a.jsxs)("div", {
                        className: i.counter,
                        children: [(0, a.jsx)(s.Heading, {
                            variant: "heading-xxl/medium",
                            color: r > 0 ? "text-brand" : "text-muted",
                            children: (0, a.jsx)(s.HeadingLevel, {
                                children: null != r ? r : 0
                            })
                        }), (0, a.jsx)(s.Text, {
                            variant: "text-sm/semibold",
                            children: t
                        })]
                    })
                }
        },
        299138: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("368874"),
                i = n("328911"),
                r = n("782340"),
                o = n("186614"),
                u = n("392963"),
                d = () => {
                    let e = (0, l.useAgeSpecificText)(r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_DESCRIPTION_TEEN, r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_DESCRIPTION_PARENT);
                    return (0, a.jsxs)("div", {
                        className: o.container,
                        children: [(0, a.jsxs)("div", {
                            className: o.content,
                            children: [(0, a.jsx)(s.Heading, {
                                className: o.header,
                                variant: "heading-md/bold",
                                children: (0, a.jsx)(s.HeadingLevel, {
                                    children: r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_HEADER
                                })
                            }), (0, a.jsx)(s.Text, {
                                className: o.description,
                                variant: "text-sm/medium",
                                color: "text-muted",
                                children: e
                            }), (0, a.jsx)(i.default, {})]
                        }), (0, a.jsx)("div", {
                            className: o.artContainer,
                            children: (0, a.jsx)("img", {
                                src: u,
                                alt: r.default.Messages.FAMILY_CENTER_ACTIVITY_DATA_CONFIRMATION_BANNER_ALT
                            })
                        })]
                    })
                }
        },
        975344: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("617258"),
                r = n("65597"),
                o = n("77078"),
                u = n("580357"),
                d = n("822825"),
                c = n("49111"),
                E = n("782340"),
                f = n("116658");
            let _ = [18, 18, 16, 16, 14, 12, 10];
            var C = e => {
                let {
                    guildId: t
                } = e, n = (0, r.default)([d.default], () => d.default.getGuild(t));
                if (void 0 === n) return null;
                let s = n.hasFeature(c.GuildFeatures.VERIFIED) || n.hasFeature(c.GuildFeatures.PARTNERED),
                    C = n.toString(),
                    h = n.getIconURL(40, !0),
                    I = null,
                    T = _[_.length - 1];
                if (null == n.icon && null != C) {
                    var S;
                    T = null !== (S = _[(I = (0, i.getAcronym)(C)).length - 1]) && void 0 !== S ? S : _[_.length - 1]
                }
                return (0, a.jsxs)("div", {
                    className: f.container,
                    children: [(0, a.jsxs)("div", {
                        style: {
                            fontSize: T
                        },
                        children: [null != I ? (0, a.jsx)("div", {
                            className: l(f.childWrapper, f.acronym),
                            "aria-hidden": !0,
                            children: I
                        }) : null, null != h ? (0, a.jsx)(o.Avatar, {
                            src: n.getIconURL(40, !0),
                            size: o.AvatarSizes.SIZE_40,
                            "aria-hidden": !0
                        }) : null]
                    }), (0, a.jsxs)("div", {
                        className: f.descriptors,
                        children: [(0, a.jsxs)("div", {
                            className: f.header,
                            children: [s ? (0, a.jsx)(u.default, {
                                guild: n,
                                tooltipPosition: "bottom",
                                tooltipColor: o.Tooltip.Colors.PRIMARY,
                                className: f.guildBadge
                            }) : null, (0, a.jsx)(o.Text, {
                                variant: "text-md/semibold",
                                children: n.toString()
                            })]
                        }), void 0 !== n.approximateMemberCount ? (0, a.jsx)(o.Text, {
                            variant: "text-xs/medium",
                            color: "text-muted",
                            children: E.default.Messages.FAMILY_CENTER_ACTIVITY_GUILD_ROW_MEMBER_COUNT.format({
                                members: n.approximateMemberCount
                            })
                        }) : null]
                    })]
                })
            }
        },
        544553: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return A
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("225288"),
                i = n("77078"),
                r = n("697218"),
                o = n("171710"),
                u = n("462579"),
                d = n("368874"),
                c = n("339853"),
                E = n("25132"),
                f = n("322372"),
                _ = n("447342"),
                C = n("299138"),
                h = n("893302"),
                I = n("490013"),
                T = n("922832"),
                S = n("782340"),
                N = n("54236"),
                A = () => {
                    let e = (0, E.useUserForLinkStatus)(T.UserLinkStatus.ACTIVE),
                        t = (0, c.useSelectedTeenUser)(),
                        n = (0, s.default)([r.default], () => r.default.getCurrentUser()),
                        A = (0, d.useAgeSpecificText)(S.default.Messages.FAMILY_CENTER_FEATURE_CARD_MESSAGES_DESCRIPTION_TEEN, S.default.Messages.FAMILY_CENTER_FEATURE_CARD_MESSAGES_DESCRIPTION_PARENT),
                        m = (0, d.useAgeSpecificText)(S.default.Messages.FAMILY_CENTER_FEATURE_CARD_SHARING_DESCRIPTION_TEEN, S.default.Messages.FAMILY_CENTER_FEATURE_CARD_SHARING_DESCRIPTION_PARENT),
                        p = (0, d.useAgeSpecificText)(S.default.Messages.FAMILY_CENTER_FEATURE_CARD_PAIRING_DESCRIPTION_TEEN, S.default.Messages.FAMILY_CENTER_FEATURE_CARD_PAIRING_DESCRIPTION_PARENT),
                        g = (0, i.useRedesignIconContext)().enabled;
                    return void 0 === n ? null : (0, a.jsxs)("div", {
                        className: N.container,
                        children: [(0, a.jsx)("div", {
                            className: N.banner,
                            children: (0, a.jsx)(f.default, {})
                        }), (0, a.jsxs)("div", {
                            className: N.featureCards,
                            children: [(0, a.jsx)(h.default, {
                                iconClassName: N.chatCheckIcon,
                                icon: o.default,
                                header: S.default.Messages.FAMILY_CENTER_FEATURE_CARD_MESSAGES_HEADER,
                                description: A
                            }), (0, a.jsx)(h.default, {
                                icon: u.default,
                                header: S.default.Messages.FAMILY_CENTER_FEATURE_CARD_SHARING_HEADER,
                                description: m
                            }), (0, a.jsx)(h.default, {
                                icon: g ? l.QrCodeCameraIcon : I.default,
                                header: S.default.Messages.FAMILY_CENTER_FEATURE_CARD_PAIRING_HEADER,
                                description: p
                            })]
                        }), 0 === e.length ? (0, a.jsx)(C.default, {}) : null, void 0 !== t && e.length > 0 ? (0, a.jsx)(_.default, {
                            user: t
                        }) : null]
                    })
                }
        },
        57: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("77078"),
                i = n("697218"),
                r = n("158998"),
                o = n("117933"),
                u = n("863972"),
                d = n("630345"),
                c = e => {
                    let {
                        userId: t,
                        timestamp: n,
                        timestampFormatter: c
                    } = e, E = (0, s.default)([i.default], () => i.default.getUser(t));
                    return void 0 === E ? null : (0, a.jsxs)("div", {
                        className: d.container,
                        children: [(0, a.jsx)(u.FamilyCenterAvatar, {
                            user: E,
                            avatarSize: l.AvatarSizes.SIZE_40
                        }), (0, a.jsx)("div", {
                            children: (0, a.jsxs)("div", {
                                className: d.descriptors,
                                children: [(0, a.jsx)(l.Text, {
                                    variant: "text-md/semibold",
                                    children: r.default.getName(E)
                                }), (0, a.jsx)(l.Text, {
                                    variant: "text-xs/medium",
                                    color: "text-muted",
                                    children: (0, o.formatUserActivityTimestamp)(new Date(n).getTime(), c)
                                })]
                            })
                        })]
                    })
                }
        },
        863972: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FamilyCenterAvatar: function() {
                    return d
                },
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("106435"),
                i = n("50885"),
                r = n("782340"),
                o = n("751226");
            let u = i.default.getEnableHardwareAcceleration() ? s.AnimatedAvatar : s.Avatar,
                d = e => {
                    let {
                        user: t,
                        avatarSize: n = s.AvatarSizes.SIZE_48
                    } = e, {
                        avatarSrc: i,
                        avatarDecorationSrc: d,
                        eventHandlers: c
                    } = (0, l.default)({
                        user: t,
                        size: n
                    });
                    return (0, a.jsx)("div", {
                        ...c,
                        children: (0, a.jsx)(u, {
                            className: o.avatar,
                            src: i,
                            avatarDecoration: d,
                            size: n,
                            "aria-label": r.default.Messages.FAMILY_CENTER_AVATAR_ARIA.format({
                                name: t.username
                            })
                        })
                    })
                };
            var c = e => {
                let {
                    currentUser: t,
                    otherUser: n,
                    children: s
                } = e;
                return (0, a.jsx)("div", {
                    className: o.avatarPairContainer,
                    children: (0, a.jsxs)("div", {
                        className: o.avatarPair,
                        children: [(0, a.jsx)(d, {
                            user: t
                        }), s, (0, a.jsx)(d, {
                            user: n
                        })]
                    })
                })
            }
        },
        328911: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("945330"),
                o = n("549586"),
                u = n("564875"),
                d = n("368874"),
                c = n("589333"),
                E = n("782340"),
                f = n("635577"),
                _ = n("926622");
            let C = e => {
                let {
                    header: t,
                    description: n,
                    icon: s,
                    inModal: r
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(f.row, _.marginBottom8, {
                        [f.inModal]: r
                    }),
                    children: [(0, a.jsx)("div", {
                        className: f.iconContainer,
                        children: s
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(i.Text, {
                            className: f.header,
                            variant: "text-sm/bold",
                            color: "header-primary",
                            children: t
                        }), (0, a.jsx)(i.Text, {
                            variant: "text-xs/medium",
                            color: "header-secondary",
                            children: n
                        })]
                    })]
                })
            };
            var h = e => {
                let {
                    inModal: t
                } = e, n = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_INCLUDED_HEADER_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_INCLUDED_HEADER_PARENT), s = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_HEADER_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_HEADER_PARENT), l = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_HEADER_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_HEADER_PARENT), _ = (0, d.useAgeSpecificText)(E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_DESCRIPTION_TEEN, E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_EXCLUDED_CONTENT_DESCRIPTION_PARENT);
                return (0, a.jsxs)("div", {
                    children: [(0, a.jsx)(i.Text, {
                        className: f.groupHeader,
                        variant: "text-xxs/bold",
                        color: "header-secondary",
                        children: n
                    }), (0, a.jsx)(C, {
                        header: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_FRIEND_ADD_HEADER,
                        description: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_FRIEND_ADD_DESCRIPTION,
                        icon: (0, a.jsx)(u.default, {
                            width: 20,
                            height: 20,
                            className: f.positive
                        }),
                        inModal: t
                    }), (0, a.jsx)(C, {
                        header: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_GUILD_PARTICIPATION_HEADER,
                        description: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_GUILD_PARTICIPATION_DESCRIPTION,
                        icon: (0, a.jsx)(o.default, {
                            width: 20,
                            height: 20,
                            className: f.positive
                        }),
                        inModal: t
                    }), (0, a.jsx)(C, {
                        header: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_USERS_MESSAGED_HEADER,
                        description: E.default.Messages.FAMILY_CENTER_DATA_CONFIRMATION_USERS_MESSAGED_DESCRIPTION,
                        icon: (0, a.jsx)(c.default, {
                            width: 20,
                            height: 20,
                            className: f.positive
                        }),
                        inModal: t
                    }), (0, a.jsx)(i.Text, {
                        className: f.groupHeader,
                        variant: "text-xxs/bold",
                        color: "header-secondary",
                        children: s
                    }), (0, a.jsx)(C, {
                        header: l,
                        description: _,
                        icon: (0, a.jsx)(r.default, {
                            width: 20,
                            height: 20,
                            className: f.negative
                        }),
                        inModal: t
                    })]
                })
            }
        },
        884706: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("158998"),
                o = n("833381"),
                u = e => {
                    let {
                        user: t,
                        fill: n
                    } = e, s = "\xa0(@".concat(r.default.getUserTag(t, {
                        decoration: "never"
                    }), ")");
                    return (0, a.jsxs)(i.Text, {
                        className: l([o.text, {
                            [o.fill]: n
                        }]),
                        variant: "text-md/medium",
                        children: [(0, a.jsx)("span", {
                            className: o.username,
                            children: r.default.getName(t)
                        }), (0, a.jsx)("span", {
                            className: o.discriminator,
                            children: s
                        })]
                    })
                }
        },
        424373: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("852410"),
                o = n("926622"),
                u = n("871859"),
                d = e => {
                    let {
                        text: t,
                        className: n
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: l(n, r.empty),
                        children: [(0, a.jsx)("img", {
                            className: r.image,
                            src: u,
                            alt: ""
                        }), (0, a.jsx)(i.Text, {
                            className: o.marginTop8,
                            variant: "text-sm/medium",
                            color: "text-muted",
                            children: t
                        })]
                    })
                }
        },
        893302: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("281319"),
                o = e => {
                    let {
                        icon: t,
                        iconClassName: n,
                        header: s,
                        description: o
                    } = e;
                    return (0, a.jsxs)("div", {
                        className: r.container,
                        children: [(0, a.jsx)("div", {
                            className: r.circle,
                            children: (0, a.jsx)(t, {
                                className: l(r.icon, n),
                                width: 21,
                                height: 21,
                                color: "currentColor"
                            })
                        }), (0, a.jsxs)("div", {
                            children: [(0, a.jsx)(i.Heading, {
                                variant: "heading-md/bold",
                                className: r.header,
                                children: (0, a.jsx)(i.HeadingLevel, {
                                    children: s
                                })
                            }), (0, a.jsx)(i.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                children: o
                            })]
                        })]
                    })
                }
        },
        589333: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 20 20",
                    fill: "none",
                    children: [(0, a.jsx)("path", {
                        d: "M5.42999 16C5.73201 16 5.97454 15.7326 5.98651 15.4309C5.99216 15.2885 6 15.145 6 15C6 10.582 8.97355 7 13.6115 7C15.3176 7 16.9378 7.60732 18.2734 8.47894C18.6009 8.69267 19.0088 8.49717 19.0012 8.10616C19.0004 8.06876 19 8.03318 19 8C19 3.589 15.0439 0 10.1825 0C5.32115 0 1.36504 3.589 1.36504 8C1.36504 9.24168 1.67304 10.4357 2.26529 11.523C2.49433 11.9436 2.45549 12.472 2.12042 12.8141L0.664819 14.3003C0.0449194 14.9332 0.493315 16 1.37923 16H5.42999Z",
                        fill: l
                    }), (0, a.jsx)("path", {
                        d: "M20.0134 17.8398C19.8366 17.558 19.8172 17.2085 19.9242 16.8935C20.1307 16.2852 20.2371 15.6451 20.2371 15C20.2371 11.691 17.4914 9 14.1166 9C10.7419 9 7.99609 11.691 7.99609 15C7.99609 18.309 10.7419 21 14.1166 21H20.1882C20.9744 21 21.4531 20.1345 21.0353 19.4685L20.0134 17.8398Z",
                        fill: l
                    })]
                })
            }
        },
        153935: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserSettingsFamilyCenterPage: function() {
                    return K
                },
                default: function() {
                    return z
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("394846"),
                o = n("432710"),
                u = n("65597"),
                d = n("151426"),
                c = n("77078"),
                E = n("939488"),
                f = n("669499"),
                _ = n("69927"),
                C = n("10641"),
                h = n("539938"),
                I = n("155084"),
                T = n("970366"),
                S = n("161778"),
                N = n("845579"),
                A = n("697218"),
                m = n("476765"),
                p = n("155207"),
                g = n("956089"),
                R = n("599110"),
                O = n("439932"),
                L = n("544556"),
                v = n("822825"),
                M = n("104887"),
                P = n("771783"),
                D = n("775032"),
                y = n("25132"),
                x = n("544553"),
                U = n("210173"),
                b = n("68818"),
                G = n("922832"),
                j = n("49111"),
                w = n("586391"),
                k = n("994428"),
                F = n("782340"),
                B = n("177960");
            let H = {
                    [G.FamilyCenterSubPages.REQUESTS]: () => (0, a.jsx)(U.default, {}),
                    [G.FamilyCenterSubPages.ACTIVITY]: () => (0, a.jsx)(x.default, {}),
                    [G.FamilyCenterSubPages.SETTINGS]: () => (0, a.jsx)(b.default, {})
                },
                V = {
                    [G.FamilyCenterSubPages.REQUESTS]: () => (0, a.jsx)(U.default, {}),
                    [G.FamilyCenterSubPages.ACTIVITY]: () => (0, a.jsx)(x.default, {})
                };

            function Y(e) {
                let {
                    section: t,
                    handleItemSelect: n
                } = e, s = (0, y.usePendingRequestCount)(), l = (0, D.default)();
                return (0, a.jsxs)(c.TabBar, {
                    className: B.settingsTabBar,
                    "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
                    selectedItem: t,
                    type: "top",
                    look: "brand",
                    onItemSelect: n,
                    children: [(0, a.jsx)(c.TabBar.Item, {
                        className: B.settingsTabBarItem,
                        id: G.FamilyCenterSubPages.ACTIVITY,
                        children: F.default.Messages.FAMILY_CENTER_ACTIVITY_TAB
                    }), (0, a.jsxs)(c.TabBar.Item, {
                        className: B.settingsTabBarItem,
                        id: G.FamilyCenterSubPages.REQUESTS,
                        "aria-label": F.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
                        children: [F.default.Messages.FAMILY_CENTER_REQUESTS_TAB, s > 0 ? (0, a.jsx)(g.NumberBadge, {
                            className: B.badge,
                            count: s
                        }) : null]
                    }), l ? (0, a.jsx)(c.TabBar.Item, {
                        className: B.settingsTabBarItem,
                        id: G.FamilyCenterSubPages.SETTINGS,
                        children: F.default.Messages.SETTINGS
                    }) : null]
                })
            }

            function W(e) {
                let {
                    theme: t,
                    section: n,
                    handleItemSelect: s
                } = e, l = (0, m.useUID)(), o = (0, y.usePendingRequestCount)();
                return (0, a.jsxs)(h.default, {
                    className: i((0, O.getThemeClass)(t), B.sidebarTabBar),
                    scrollable: r.isMobile,
                    role: "navigation",
                    "aria-labelledby": l,
                    toolbar: !0,
                    children: [(0, a.jsx)(h.default.Icon, {
                        icon: p.default,
                        "aria-hidden": !0
                    }), (0, a.jsx)(h.default.Title, {
                        id: l,
                        children: F.default.Messages.FAMILY_CENTER_TITLE
                    }), (0, a.jsx)(h.default.Divider, {}), (0, a.jsxs)(c.TabBar, {
                        "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
                        selectedItem: n,
                        type: "top-pill",
                        onItemSelect: s,
                        className: B.tabBar,
                        children: [(0, a.jsx)(c.TabBar.Item, {
                            id: G.FamilyCenterSubPages.ACTIVITY,
                            className: B.item,
                            children: F.default.Messages.FAMILY_CENTER_ACTIVITY_TAB
                        }), (0, a.jsxs)(c.TabBar.Item, {
                            id: G.FamilyCenterSubPages.REQUESTS,
                            className: B.item,
                            "aria-label": F.default.Messages.FAMILY_CENTER_REQUESTS_TAB,
                            children: [F.default.Messages.FAMILY_CENTER_REQUESTS_TAB, o > 0 ? (0, a.jsx)(g.NumberBadge, {
                                className: B.badge,
                                count: o
                            }) : null]
                        })]
                    })]
                })
            }

            function K() {
                let e = (0, D.default)(),
                    t = (0, y.useAcceptedRequestsCount)(),
                    n = (0, C.useIsDismissibleContentDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE),
                    l = (0, u.default)([v.default], () => v.default.getIsInitialized()),
                    r = (0, P.useSelectedTeenId)(),
                    {
                        selectedTab: E,
                        handleTabChange: h
                    } = (0, M.default)(),
                    S = (0, m.useUID)(),
                    N = A.default.getCurrentUser(),
                    p = null != e,
                    g = l && null != N && !p;
                return (s.useEffect(() => {
                    (0, T.trackAppUIViewed)("family-center"), L.default.initialPageLoad(), !n && (0, C.markDismissibleContentAsDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE, {
                        dismissAction: k.ContentDismissActionType.AUTO,
                        forceTrack: !0
                    })
                }, []), s.useEffect(() => {
                    l && p && (R.default.track(j.AnalyticEvents.FAMILY_CENTER_VIEWED, {
                        is_considered_adult: e,
                        num_of_accepted_links: t,
                        selected_teen_id: r,
                        initial_page: G.FamilyCenterSubPageAnalyticsIds[E],
                        source: G.FamilyCenterPageLocationAnalyticsIds[G.FamilyCenterPageLocation.SIDENAV]
                    }), I.default.increment({
                        name: o.MetricEvents.FAMILY_CENTER_VIEW
                    }))
                }, [l, p]), g) ? ((0, f.openAgeGateModal)(w.AgeGateSource.FAMILY_CENTER), null) : (0, a.jsxs)("main", {
                    className: i(B.container),
                    "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
                    children: [(0, a.jsx)(_.AppPageTitle, {
                        location: F.default.Messages.FAMILY_CENTER_TITLE
                    }), (0, a.jsx)(Y, {
                        section: E,
                        handleItemSelect: e => {
                            h(e)
                        }
                    }), (0, a.jsx)(c.TabBar.Panel, {
                        id: E,
                        "aria-labelledby": S,
                        className: B.contentPanel,
                        children: (0, a.jsx)("div", {
                            children: H[E]()
                        })
                    })]
                })
            }

            function z() {
                let e = (0, D.default)(),
                    t = (0, y.useAcceptedRequestsCount)(),
                    n = (0, C.useIsDismissibleContentDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE),
                    l = (0, u.default)([v.default], () => v.default.getIsInitialized()),
                    r = (0, P.useSelectedTeenId)(),
                    h = (0, u.default)([S.default], () => S.default.theme),
                    {
                        selectedTab: p,
                        handleTabChange: g
                    } = (0, M.default)(),
                    O = (0, m.useUID)(),
                    x = A.default.getCurrentUser(),
                    U = null != e,
                    b = l && null != x && !U;
                if (s.useEffect(() => {
                        E.setHomeLink(j.Routes.FAMILY_CENTER), (0, T.trackAppUIViewed)("family-center"), !v.default.isLoading() && v.default.canRefetch() && L.default.initialPageLoad(), !n && (0, C.markDismissibleContentAsDismissed)(d.DismissibleContent.FAMILY_CENTER_NEW_BADGE, {
                            dismissAction: k.ContentDismissActionType.AUTO,
                            forceTrack: !0
                        })
                    }, []), s.useEffect(() => {
                        l && U && (R.default.track(j.AnalyticEvents.FAMILY_CENTER_VIEWED, {
                            is_considered_adult: e,
                            num_of_accepted_links: t,
                            selected_teen_id: r,
                            initial_page: G.FamilyCenterSubPageAnalyticsIds[p],
                            source: G.FamilyCenterPageLocationAnalyticsIds[G.FamilyCenterPageLocation.SIDENAV]
                        }), I.default.increment({
                            name: o.MetricEvents.FAMILY_CENTER_VIEW
                        }))
                    }, [l, U]), s.useEffect(() => {
                        let t = N.FamilyCenterEnabled.getSetting();
                        l && e && void 0 === t && N.FamilyCenterEnabled.updateSetting(!0)
                    }, [l, e]), b) return (0, f.openAgeGateModal)(w.AgeGateSource.FAMILY_CENTER), null;
                let H = p !== G.FamilyCenterSubPages.SETTINGS ? p : G.FamilyCenterSubPages.ACTIVITY,
                    Y = V[H];
                return (0, a.jsxs)("main", {
                    className: i(B.container, B.containerSidenav),
                    "aria-label": F.default.Messages.FAMILY_CENTER_TITLE,
                    children: [(0, a.jsx)(_.AppPageTitle, {
                        location: F.default.Messages.FAMILY_CENTER_TITLE
                    }), (0, a.jsx)(W, {
                        theme: h,
                        section: H,
                        handleItemSelect: e => {
                            g(e)
                        }
                    }), (0, a.jsx)(c.TabBar.Panel, {
                        id: H,
                        "aria-labelledby": O,
                        className: B.contentPanel,
                        children: (0, a.jsx)("div", {
                            className: B.sideNavContent,
                            children: Y()
                        })
                    })]
                })
            }
        },
        490013: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        d: "M2.36002 2.35999V7.39991H7.39994V2.35999H2.36002ZM5.96009 5.96006H3.80009V3.80006H5.96009V5.96006Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M2.36002 14.5999V19.6401H7.39994V14.5999H2.36002ZM5.96009 18.2002H3.80009V16.0402H5.96009V18.2002Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M14.6001 2.35999V7.39991H19.64V2.35999H14.6001ZM18.2 5.96006H16.04V3.80006H18.2V5.96006Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M18.2 8.84003V13.16H14.6001V14.5999H19.64V8.84003H18.2Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M14.6001 16.0402V19.64H16.04V17.48H18.2V19.64H19.64V16.0402H14.6001Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M8.84006 2.35999V3.80006H11.72V7.39991H13.1601V2.35999H8.84006Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M11.72 8.84003V11.7202H8.84006V16.0402H11.72V19.64H13.1601V14.5999H10.2801V13.16H13.1601V10.2801H14.6001V11.7202H16.04V8.84003H11.72Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M10.2801 17.48H8.84006V19.64H10.2801V17.48Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M7.39999 11.7202H5.23999V13.1601H7.39999V11.7202Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    }), (0, a.jsx)("path", {
                        d: "M8.84001 5.23999V8.84006H2.36002V13.1601H3.80009V10.2801H10.2801V5.23999H8.84001Z",
                        fill: l,
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        className: i
                    })]
                })
            }
        },
        210173: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("355262"),
                o = n("77078"),
                u = n("302437"),
                d = n("826684"),
                c = n("368874"),
                E = n("652126"),
                f = n("775032"),
                _ = n("25132"),
                C = n("424373"),
                h = n("806468"),
                I = n("863023"),
                T = n("299387"),
                S = n("154640"),
                N = n("922832"),
                A = n("782340"),
                m = n("563662"),
                p = n("926622"),
                g = n("371997");

            function R(e) {
                let {
                    header: t,
                    description: n,
                    stepNumber: s
                } = e;
                return (0, a.jsxs)("div", {
                    className: m.step,
                    children: [(0, a.jsx)("div", {
                        className: m.stepNumber,
                        children: (0, a.jsx)(o.Heading, {
                            variant: "heading-md/semibold",
                            color: "text-brand",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: s
                            })
                        })
                    }), (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(o.Heading, {
                            variant: "heading-sm/bold",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: t
                            })
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            children: n
                        })]
                    })]
                })
            }

            function O() {
                return (0, a.jsxs)("div", {
                    className: i(m.box, m.linkingBanner, m.linkingBannerParent),
                    children: [(0, a.jsxs)("div", {
                        className: i(m.linkingBannerUpper),
                        children: [(0, a.jsxs)("div", {
                            className: m.header,
                            children: [(0, a.jsx)(o.Heading, {
                                className: p.marginBottom8,
                                variant: "heading-xl/medium",
                                children: (0, a.jsx)(o.HeadingLevel, {
                                    children: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_HEADER_PARENT
                                })
                            }), (0, a.jsx)(o.Text, {
                                variant: "text-sm/medium",
                                color: "text-muted",
                                className: p.marginBottom20,
                                children: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_DESCRIPTION_PARENT
                            })]
                        }), (0, a.jsx)("img", {
                            className: m.bannerArt,
                            src: g,
                            alt: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_ASSET_ALT
                        })]
                    }), (0, a.jsxs)("div", {
                        className: m.steps,
                        children: [(0, a.jsx)(R, {
                            header: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_1_HEADER,
                            description: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_1_DESCRIPTION,
                            stepNumber: 1
                        }), (0, a.jsx)(R, {
                            header: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_2_HEADER,
                            description: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_2_DESCRIPTION,
                            stepNumber: 2
                        }), (0, a.jsx)(R, {
                            header: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_3_HEADER,
                            description: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_PARENT_STEP_3_DESCRIPTION,
                            stepNumber: 3
                        })]
                    })]
                })
            }

            function L() {
                let e = (0, _.useHasMaxConnections)();
                return (0, a.jsxs)("div", {
                    className: i(m.box, m.linkingBanner),
                    children: [(0, a.jsxs)("div", {
                        children: [(0, a.jsx)(o.Heading, {
                            className: p.marginBottom8,
                            variant: "heading-xl/medium",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_HEADER_TEEN
                            })
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-sm/medium",
                            color: "text-muted",
                            className: p.marginBottom20,
                            children: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_DESCRIPTION_TEEN.format({
                                link: "https://support.discord.com/hc/articles/14155060633623"
                            })
                        }), e ? null : (0, a.jsx)(h.default, {})]
                    }), (0, a.jsx)("img", {
                        className: m.bannerArt,
                        src: g,
                        alt: A.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_ASSET_ALT
                    })]
                })
            }

            function v(e) {
                let {
                    sectionType: t,
                    sectionTitle: n,
                    requests: l
                } = e, i = s.useRef(null), c = "".concat(t, "-list"), E = (0, u.default)(c), f = s.useCallback(e => {
                    let {
                        row: n,
                        listIndex: s
                    } = e, i = l[n], r = s === l.length;
                    return null == i ? null : (0, a.jsx)(S.default, {
                        userId: i.id,
                        isLast: r,
                        children: () => t === N.UserLinkStatus.ACTIVE ? (0, a.jsx)(I.UserLinkAcceptedRequestRow, {
                            user: i
                        }) : (0, a.jsx)(T.UserLinkPendingRequestRow, {
                            user: i
                        })
                    }, i.id)
                }, [l, t]), _ = s.useCallback(() => (0, a.jsx)(d.default, {
                    className: m.sectionTitle,
                    children: (0, a.jsx)(o.Text, {
                        className: p.marginBottom8,
                        variant: "eyebrow",
                        color: "header-secondary",
                        children: n
                    })
                }, "title"), [n]);
                return (0, a.jsx)("div", {
                    className: m.section,
                    children: (0, a.jsx)(r.ListNavigatorProvider, {
                        navigator: E,
                        children: (0, a.jsx)(r.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: t,
                                    role: s,
                                    ...r
                                } = e;
                                return (0, a.jsx)(o.List, {
                                    className: m.list,
                                    innerRole: s,
                                    innerAriaLabel: n,
                                    ref: e => {
                                        var n;
                                        i.current = e, t.current = null !== (n = null == e ? void 0 : e.getScrollerNode()) && void 0 !== n ? n : null
                                    },
                                    sectionHeight: N.FAMILY_CENTER_REQUEST_SECTION_HEIGHT,
                                    rowHeight: N.FAMILY_CENTER_REQUEST_ROW_HEIGHT,
                                    renderSection: _,
                                    renderRow: f,
                                    sections: [l.length],
                                    chunkSize: 30,
                                    fade: !0,
                                    ...r
                                }, c)
                            }
                        })
                    })
                })
            }
            let M = () => {
                    let e = (0, f.default)(),
                        t = (0, _.useUserForLinkStatus)(N.UserLinkStatus.ACTIVE),
                        n = e ? N.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS : N.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS,
                        s = {
                            count: t.length,
                            max: n
                        },
                        l = (0, c.useAgeSpecificText)(A.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_TITLE_TEEN.format(s), A.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_TITLE_PARENT.format(s));
                    return (0, a.jsx)(a.Fragment, {
                        children: t.length > 0 ? (0, a.jsx)(v, {
                            sectionType: N.UserLinkStatus.ACTIVE,
                            sectionTitle: l,
                            requests: t
                        }) : (0, a.jsxs)("div", {
                            className: m.section,
                            children: [(0, a.jsx)(o.Text, {
                                className: p.marginBottom8,
                                variant: "eyebrow",
                                color: "header-secondary",
                                children: l
                            }), (0, a.jsx)("div", {
                                className: m.box,
                                children: (0, a.jsx)(C.default, {
                                    text: A.default.Messages.FAMILY_CENTER_ACCEPTED_REQUESTS_EMPTY_DESCRIPTION
                                })
                            })]
                        })
                    })
                },
                P = () => {
                    let e = (0, _.useHasMaxConnections)(),
                        t = (0, f.default)(),
                        n = t ? N.MAX_PARENT_TO_TEEN_ACTIVE_CONNECTIONS : N.MAX_TEEN_TO_PARENT_ACTIVE_CONNECTIONS,
                        s = (0, c.useAgeSpecificText)(A.default.Messages.FAMILY_CENTER_REQUESTS_LIMIT_INFO_TEEN.format({
                            maxConnections: n
                        }), A.default.Messages.FAMILY_CENTER_REQUESTS_LIMIT_INFO_PARENT.format({
                            maxConnections: n
                        }));
                    return e ? (0, a.jsx)("div", {
                        className: m.maxConnectionInfo,
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-xxs/medium",
                            color: "text-muted",
                            children: s
                        })
                    }) : null
                },
                D = () => {
                    let e = (0, E.useShouldShowHelplineLink)();
                    return e ? (0, a.jsxs)("div", {
                        className: i(m.helpLineInfo, p.marginTop20),
                        children: [(0, a.jsx)(o.Heading, {
                            className: m.supportHeader,
                            variant: "heading-sm/semibold",
                            children: (0, a.jsx)(o.HeadingLevel, {
                                children: A.default.Messages.FAMILY_CENTER_HELP_LINE_HEADER
                            })
                        }), (0, a.jsx)(o.Text, {
                            variant: "text-xs/medium",
                            color: "text-muted",
                            children: A.default.Messages.FAMILY_CENTER_HELP_LINE_CONTENT.format({
                                helpLink: "https://support.discord.com/hc/articles/7925648993943-Crisis-Text-Line"
                            })
                        })]
                    }) : null
                },
                y = () => {
                    let e = (0, _.useUserForLinkStatus)(N.UserLinkStatus.PENDING),
                        t = (0, c.useAgeSpecificText)(A.default.Messages.FAMILY_CENTER_PENDING_REQUESTS_TITLE_TEEN.format({
                            count: e.length
                        }), A.default.Messages.FAMILY_CENTER_PENDING_REQUESTS_TITLE_PARENT.format({
                            count: e.length
                        }));
                    return 0 === e.length ? null : (0, a.jsx)(v, {
                        sectionType: N.UserLinkStatus.PENDING,
                        sectionTitle: t,
                        requests: e
                    })
                };
            var x = () => {
                let e = (0, f.default)();
                return (0, a.jsxs)("div", {
                    className: m.container,
                    children: [e ? (0, a.jsx)(O, {}) : (0, a.jsx)(L, {}), (0, a.jsx)(M, {}), (0, a.jsx)(y, {}), (0, a.jsx)(P, {}), (0, a.jsx)(D, {})]
                })
            }
        },
        209688: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("90915"),
                l = n("775032"),
                i = n("153935"),
                r = n("49111");

            function o() {
                let e = (0, l.default)();
                return !1 === e ? (0, a.jsx)(s.Redirect, {
                    to: r.Routes.SETTINGS("family-center")
                }) : (0, a.jsx)(i.default, {})
            }
        },
        68818: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("90915"),
                o = n("750485"),
                u = n("446674"),
                d = n("77078"),
                c = n("54239"),
                E = n("389434"),
                f = n("521128"),
                _ = n("845579"),
                C = n("538137"),
                h = n("956089"),
                I = n("49111"),
                T = n("853994"),
                S = n("782340"),
                N = n("724708"),
                A = n("926622"),
                m = () => {
                    let e = _.FamilyCenterEnabled.useSetting(),
                        {
                            categories: t,
                            initialized: n
                        } = (0, u.useStateFromStoresObject)([f.default], () => f.default.getEmailSettings());
                    return s.useEffect(() => {
                        null == n && (0, E.fetchEmailSettings)()
                    }, [n]), (0, a.jsxs)("div", {
                        className: N.container,
                        children: [(0, a.jsx)(d.Text, {
                            variant: "eyebrow",
                            color: "text-muted",
                            children: S.default.Messages.FAMILY_CENTER_SETTINGS_FORM_TITLE
                        }), (0, a.jsx)(d.FormSwitch, {
                            className: i(A.marginTop8, A.marginBottom20),
                            value: e,
                            note: S.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_SWITCH_NOTE,
                            hideBorder: !0,
                            onChange: _.FamilyCenterEnabled.updateSetting,
                            children: S.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_SWITCH
                        }), e ? (0, a.jsx)(d.Card, {
                            className: N.enableCard,
                            type: d.Card.Types.CUSTOM,
                            outline: !0,
                            children: (0, a.jsxs)(o.default, {
                                justify: o.default.Justify.END,
                                children: [(0, a.jsx)(o.default.Child, {
                                    children: (0, a.jsx)(d.Text, {
                                        variant: "text-sm/semibold",
                                        color: "text-normal",
                                        children: S.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_PROMPT
                                    })
                                }), (0, a.jsx)(d.Clickable, {
                                    children: (0, a.jsx)(r.Link, {
                                        onClick: c.popLayer,
                                        to: {
                                            pathname: I.Routes.FAMILY_CENTER,
                                            state: {
                                                scrollRestoration: !1
                                            }
                                        },
                                        children: S.default.Messages.FAMILY_CENTER_SETTINGS_ENABLE_CTA
                                    })
                                }), (0, a.jsx)(h.IconBadge, {
                                    icon: C.default,
                                    className: N.arrow,
                                    disableColor: !0
                                })]
                            })
                        }) : null, (0, a.jsx)(d.FormSwitch, {
                            className: i(A.marginTop20, A.marginBottom20),
                            value: !!t[T.EmailCategories.FAMILY_CENTER_DIGEST],
                            note: S.default.Messages.FAMILY_CENTER_SETTINGS_EMAIL_DIGEST_ENABLE_SWITCH_NOTE,
                            hideBorder: !0,
                            onChange: function(e) {
                                (0, E.updateEmailSetting)(T.EmailCategories.FAMILY_CENTER_DIGEST, e)
                            },
                            children: S.default.Messages.FAMILY_CENTER_SETTINGS_EMAIL_DIGEST_ENABLE_SWITCH
                        })]
                    })
                }
        },
        806468: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("599110"),
                i = n("698370"),
                r = n("922832"),
                o = n("49111"),
                u = n("782340"),
                d = n("615108");

            function c() {
                return (0, a.jsxs)(s.Button, {
                    innerClassName: d.qrCodeButtonContent,
                    size: s.Button.Sizes.LARGE,
                    onClick: () => {
                        (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("668170").then(n.bind(n, "668170"));
                            return t => (0, a.jsx)(e, {
                                ...t
                            })
                        }), l.default.track(o.AnalyticEvents.FAMILY_CENTER_ACTION, {
                            action: r.FamilyCenterAction.ShowQRCodeModal
                        })
                    },
                    children: [(0, a.jsx)(i.default, {}), u.default.Messages.FAMILY_CENTER_REQUESTS_LINKING_BANNER_TEEN_BUTTON]
                })
            }
        },
        698370: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 18,
                    height: n = 18,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 18 18",
                    children: [(0, a.jsx)("path", {
                        fill: l,
                        d: "M1.8 1.8V6H6V1.8H1.8Zm3 3H3V3h1.8v1.8ZM1.8 12v4.2H6V12H1.8Zm3 3H3v-1.8h1.8V15ZM12 1.8V6h4.2V1.8H12Zm3 3h-1.8V3H15v1.8ZM7.2 1.8V3h2.4v3h1.2V1.8H7.2ZM6 9.6H4.2v1.2H6V9.6Z"
                    }), (0, a.jsx)("path", {
                        fill: l,
                        d: "M7.2 4.2v3H1.8v3.6H3V8.4h5.4V4.2H7.2ZM12.417 10.75c-.92 0-1.667.748-1.667 1.667 0 .92.748 1.666 1.667 1.666s1.666-.747 1.666-1.666c0-.92-.747-1.667-1.666-1.667Z"
                    }), (0, a.jsx)("path", {
                        fill: l,
                        d: "M15.75 9.5h-.804a.834.834 0 0 1-.694-.37l-.338-.509a.834.834 0 0 0-.693-.371h-1.608a.835.835 0 0 0-.694.37l-.338.51a.833.833 0 0 1-.694.37h-.804a.833.833 0 0 0-.833.833v4.584c0 .46.373.833.833.833h6.667c.46 0 .833-.373.833-.833v-4.584a.834.834 0 0 0-.833-.833Zm-3.333 5.417a2.503 2.503 0 0 1-2.5-2.5c0-1.379 1.12-2.5 2.5-2.5 1.378 0 2.5 1.121 2.5 2.5s-1.122 2.5-2.5 2.5Z"
                    })]
                })
            }
        },
        863023: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserLinkAcceptedRequestRow: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("65597"),
                o = n("77078"),
                u = n("697218"),
                d = n("945330"),
                c = n("768815"),
                E = n("176661"),
                f = n("922832"),
                _ = n("782340"),
                C = n("850832");

            function h(e) {
                let {
                    user: t
                } = e, l = (0, r.default)([u.default], () => u.default.getCurrentUser()), h = s.useCallback(() => {
                    i(void 0 !== l, "User must be logged in to accept a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("127563").then(n.bind(n, "127563"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: l,
                            otherUser: t
                        })
                    })
                }, [l, t]);
                return (0, a.jsxs)("div", {
                    className: C.container,
                    children: [(0, a.jsx)("div", {
                        className: C.details,
                        children: (0, a.jsx)(E.default, {
                            otherUser: t,
                            status: f.UserLinkStatus.ACTIVE
                        })
                    }), (0, a.jsx)("div", {
                        className: C.actions,
                        children: (0, a.jsx)(c.default, {
                            icon: d.default,
                            className: C.actionDeny,
                            tooltip: _.default.Messages.FAMILY_CENTER_LINK_ACTION_DISCONNECT,
                            onClick: h
                        })
                    })]
                })
            }
        },
        768815: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("292346");

            function o(e) {
                let {
                    icon: t,
                    tooltip: n,
                    onClick: s,
                    className: o
                } = e, u = e => {
                    e.preventDefault(), e.stopPropagation(), s(e)
                };
                return (0, a.jsx)(i.Tooltip, {
                    text: n,
                    children: e => (0, a.jsx)(i.Clickable, {
                        ...e,
                        "aria-label": n,
                        onClick: u,
                        className: l(r.actionButton, o),
                        children: (0, a.jsx)(t, {
                            className: r.icon
                        })
                    })
                })
            }
        },
        299387: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserLinkPendingRequestRow: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("65597"),
                o = n("77078"),
                u = n("697218"),
                d = n("36694"),
                c = n("945330"),
                E = n("775032"),
                f = n("25132"),
                _ = n("768815"),
                C = n("176661"),
                h = n("922832"),
                I = n("782340"),
                T = n("850832");

            function S(e) {
                let {
                    user: t
                } = e, l = (0, E.default)(), S = (0, f.useHasMaxConnections)(), N = (0, r.default)([u.default], () => u.default.getCurrentUser()), A = s.useCallback(() => {
                    i(void 0 !== N, "User must be logged in to accept a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("815201").then(n.bind(n, "815201"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: N,
                            otherUser: t
                        })
                    })
                }, [N, t]), m = s.useCallback(() => {
                    i(void 0 !== N, "User must be logged in to decline a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("217014").then(n.bind(n, "217014"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: N,
                            otherUser: t
                        })
                    })
                }, [N, t]), p = s.useCallback(() => {
                    i(void 0 !== N, "User must be logged in to decline a link request"), (0, o.openModalLazy)(async () => {
                        let {
                            default: e
                        } = await n.el("809175").then(n.bind(n, "809175"));
                        return n => (0, a.jsx)(e, {
                            ...n,
                            currentUser: N,
                            otherUser: t
                        })
                    })
                }, [N, t]);
                return (0, a.jsxs)("div", {
                    className: T.container,
                    children: [(0, a.jsx)("div", {
                        className: T.details,
                        children: (0, a.jsx)(C.default, {
                            otherUser: t,
                            status: h.UserLinkStatus.PENDING
                        })
                    }), (0, a.jsx)("div", {
                        className: T.actions,
                        children: l ? (0, a.jsx)(_.default, {
                            icon: c.default,
                            className: T.actionDeny,
                            tooltip: I.default.Messages.FAMILY_CENTER_LINK_ACTION_CANCEL,
                            onClick: p
                        }) : (0, a.jsxs)(a.Fragment, {
                            children: [S ? null : (0, a.jsx)(_.default, {
                                icon: d.default,
                                className: T.actionAccept,
                                tooltip: I.default.Messages.FAMILY_CENTER_LINK_ACTION_ACCEPT,
                                onClick: A
                            }), (0, a.jsx)(_.default, {
                                icon: c.default,
                                className: T.actionDeny,
                                tooltip: I.default.Messages.FAMILY_CENTER_LINK_ACTION_DECLINE,
                                onClick: m
                            })]
                        })
                    })]
                })
            }
        },
        176661: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("106435"),
                i = n("50885"),
                r = n("25132"),
                o = n("884706"),
                u = n("420386");
            let d = i.default.getEnableHardwareAcceleration() ? s.AnimatedAvatar : s.Avatar;

            function c(e) {
                let {
                    otherUser: t,
                    status: n
                } = e, i = (0, r.useLinkTimestampText)(t.id, n), {
                    avatarSrc: c,
                    avatarDecorationSrc: E,
                    eventHandlers: f
                } = (0, l.default)({
                    user: t,
                    size: s.AvatarSizes.SIZE_40,
                    animateOnHover: !0
                });
                return (0, a.jsxs)(a.Fragment, {
                    children: [(0, a.jsx)("div", {
                        ...f,
                        children: (0, a.jsx)(d, {
                            className: u.avatar,
                            src: c,
                            avatarDecoration: E,
                            size: s.AvatarSizes.SIZE_40,
                            "aria-label": t.username
                        })
                    }), (0, a.jsxs)("div", {
                        className: u.userPreview,
                        children: [(0, a.jsx)("div", {
                            className: u.userContainerWithTimestamp,
                            children: (0, a.jsx)(o.default, {
                                user: t
                            })
                        }), (0, a.jsx)(s.Text, {
                            className: u.timestamp,
                            color: "text-muted",
                            variant: "text-xs/normal",
                            children: i
                        })]
                    })]
                })
            }
        },
        154640: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("15542"),
                o = n("458960"),
                u = n("355262"),
                d = n("401642"),
                c = n("49111"),
                E = n("721578"),
                f = e => {
                    let {
                        userId: t,
                        children: n,
                        isLast: l,
                        className: f
                    } = e, [_, C] = s.useState(!1), h = s.useCallback(() => {
                        (0, d.openUserProfileModal)({
                            userId: t,
                            analyticsLocation: {
                                section: c.AnalyticsSections.FAMILY_CENTER
                            }
                        })
                    }, [t]), I = () => {
                        C(!0)
                    }, T = () => {
                        C(!1)
                    };
                    return (0, a.jsx)(u.ListNavigatorItem, {
                        id: t,
                        children: e => (0, a.jsx)(r.FocusRing, {
                            offset: {
                                left: -8,
                                right: -8
                            },
                            children: (0, a.jsx)(o.default.div, {
                                style: {
                                    opacity: 1
                                },
                                className: i(E.rowItem, f, {
                                    [E.last]: l,
                                    [E.active]: _
                                }),
                                onMouseEnter: I,
                                onMouseLeave: T,
                                onClick: h,
                                ...e,
                                children: n(_)
                            })
                        })
                    })
                }
        },
        791878: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useIsClearIncomingFriendRequestsEnabled: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-05_clear_pending_incoming_friend_requests",
                label: "Enable ability to clear incoming friend requests",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 1,
                    label: "Enabled",
                    config: {
                        enabled: !0
                    }
                }]
            });

            function l() {
                return s.useExperiment({
                    location: "ca2288_1"
                }, {
                    autoTrackExposure: !0
                }).enabled
            }
        },
        59678: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RELATIONSHIP_COUNT_ANIMATION_THRESHOLD: function() {
                    return a
                },
                PEOPLE_LIST_ITEM_HEIGHT: function() {
                    return s
                },
                STATUS_HEADER_HEIGHT: function() {
                    return l
                },
                MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL: function() {
                    return i
                }
            });
            let a = 64,
                s = 62,
                l = 24,
                i = 5
        },
        371449: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a, s, l = n("37983");
            n("884691");
            var i = n("414456"),
                r = n.n(i),
                o = n("394846"),
                u = n("77078"),
                d = n("383485");

            function c(e) {
                let {
                    icon: t,
                    tooltip: n,
                    onClick: a,
                    actionType: s = 2,
                    shouldHighlight: i
                } = e;
                return (0, l.jsx)(u.Tooltip, {
                    text: n,
                    children: e => (0, l.jsx)(u.Clickable, {
                        ...e,
                        "aria-label": n,
                        onClick: a,
                        className: r(d.actionButton, {
                            [d.actionAccept]: 0 === s,
                            [d.actionDeny]: 1 === s,
                            [d.highlight]: i,
                            [d.actionButtonMobile]: o.isMobile
                        }),
                        children: (0, l.jsx)(t, {
                            className: d.icon
                        })
                    })
                })
            }(a = s || (s = {}))[a.ACCEPT = 0] = "ACCEPT", a[a.DENY = 1] = "DENY", a[a.DEFAULT = 2] = "DEFAULT", c.ActionTypes = s;
            var E = c
        },
        161011: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("245489"),
                r = n("229929"),
                o = n("62899"),
                u = n("709410"),
                d = n("49111"),
                c = n("782340"),
                E = n("271755");

            function f() {
                return (0, a.jsxs)("header", {
                    className: E.header,
                    children: [(0, a.jsx)(l.FormTitle, {
                        tag: "h2",
                        className: E.title,
                        children: c.default.Messages.ADD_FRIEND
                    }), (0, a.jsx)(i.default, {})]
                })
            }
            var _ = function() {
                return (0, a.jsxs)(s.Fragment, {
                    children: [(0, a.jsx)(f, {}), (0, r.backToSchoolEnabled)() && (0, a.jsx)(o.default, {}), (0, a.jsx)("div", {
                        className: E.emptyState,
                        children: (0, a.jsx)(u.default, {
                            type: d.FriendsSections.ADD_FRIEND
                        })
                    })]
                })
            }
        },
        62899: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("77078"),
                i = n("340626"),
                r = n("393414"),
                o = n("239380"),
                u = n("305961"),
                d = n("599110"),
                c = n("315102"),
                E = n("853004"),
                f = n("49111"),
                _ = n("782340"),
                C = n("443"),
                h = n("156465");

            function I(e, t, n) {
                return (0, a.jsxs)("button", {
                    className: C.container,
                    onClick: n,
                    children: [(0, a.jsx)("img", {
                        className: C.icon,
                        alt: "",
                        src: e
                    }), (0, a.jsx)(l.Text, {
                        className: C.text,
                        variant: "text-md/medium",
                        children: t
                    }), (0, a.jsx)(E.default, {
                        className: C.arrow
                    })]
                }, t)
            }

            function T() {
                let e = Object.values(u.default.getGuilds()),
                    t = e.filter(e => e.hasFeature(f.GuildFeatures.HUB)),
                    n = e => {
                        d.default.track(f.AnalyticEvents.ADD_FRIEND_OTHER_PLACES_HUB_CLICKED, {
                            guild_id: e
                        }), (0, o.transitionToGuild)(e)
                    };
                return (0, a.jsxs)(s.Fragment, {
                    children: [(0, a.jsx)("header", {
                        className: C.header,
                        children: (0, a.jsx)(l.FormTitle, {
                            tag: "h2",
                            className: C.title,
                            children: _.default.Messages.ADD_FRIEND_MAKE_FRIENDS
                        })
                    }), (0, a.jsxs)("div", {
                        className: C.grid,
                        children: [t.map(e => I(c.default.getGuildIconURL({
                            id: e.id,
                            icon: e.icon,
                            size: 240
                        }), e.name, () => {
                            n(e.id)
                        })), I(h, _.default.Messages.ADD_FRIEND_EXPLORE_PUBLIC_SERVERS, () => {
                            (0, i.clearSearch)(), d.default.track(f.AnalyticEvents.ADD_FRIEND_OTHER_PLACES_DISCOVERY_CLICKED), (0, r.transitionTo)(f.Routes.GUILD_DISCOVERY)
                        })]
                    })]
                })
            }
        },
        853004: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("37983");

            function s(e) {
                let {
                    color: t = "currentColor",
                    ...n
                } = e;
                return (0, a.jsx)("svg", {
                    ...n,
                    fill: "none",
                    height: "20",
                    viewBox: "0 0 20 20",
                    width: "20",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: (0, a.jsx)("path", {
                        clipRule: "evenodd",
                        d: "m5.41667 4.2625 5.66573 5.7375-5.66573 5.7375 1.74426 1.7625 7.42237-7.5-7.42237-7.5z",
                        fill: t,
                        fillRule: "evenodd"
                    })
                })
            }
            n("884691")
        },
        637824: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("736964"),
                i = n("401642"),
                r = n("152224"),
                o = n("599110"),
                u = n("371449"),
                d = n("224978"),
                c = n("559541"),
                E = n("49111"),
                f = n("782340"),
                _ = n("728221");

            function C(e) {
                let {
                    user: t,
                    key: n,
                    isFocused: C
                } = e, h = s.useContext(o.AnalyticsContext), I = e => {
                    e.stopPropagation(), l.default.unblockUser(t.id, {
                        location: "Friends"
                    })
                };
                return (0, a.jsx)(d.default, {
                    isFocused: C,
                    onClick: () => (0, i.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: h.location
                    }),
                    user: t,
                    children: e => (0, a.jsxs)("div", {
                        className: _.listItemContents,
                        children: [(0, a.jsx)(c.default, {
                            user: t,
                            hovered: e,
                            status: E.StatusTypes.UNKNOWN,
                            subText: f.default.Messages.BLOCKED
                        }), (0, a.jsx)(u.default, {
                            icon: r.default,
                            actionType: u.default.ActionTypes.DENY,
                            tooltip: f.default.Messages.UNBLOCK,
                            onClick: I,
                            shouldHighlight: e
                        })]
                    })
                }, n)
            }
        },
        911574: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("629803"),
                o = n("79112"),
                u = n("163466"),
                d = n("49111"),
                c = n("994428"),
                E = n("782340"),
                f = n("72725");

            function _(e) {
                let {
                    className: t,
                    markAsDismissed: n
                } = e;
                return (0, a.jsxs)(u.default, {
                    className: l(f.card, t),
                    children: [(0, a.jsx)(i.Heading, {
                        variant: "heading-md/semibold",
                        className: f.header,
                        children: E.default.Messages.NOW_PLAYING_GDPR_HEADER
                    }), (0, a.jsx)(i.Text, {
                        variant: "text-sm/normal",
                        children: E.default.Messages.NOW_PLAYING_GDPR_BODY.format({
                            onPrivacyClick: () => o.default.open(d.UserSettingsSections.PRIVACY_AND_SAFETY)
                        })
                    }), (0, a.jsxs)("div", {
                        className: f.buttonContainer,
                        children: [(0, a.jsx)(i.Button, {
                            size: i.Button.Sizes.SMALL,
                            onClick: () => (0, r.setConsents)([d.Consents.PERSONALIZATION], []),
                            children: E.default.Messages.ACTIVITY_FEED_CARD_GDPR_BUTTON_YES
                        }), (0, a.jsx)(i.Button, {
                            color: i.Button.Colors.PRIMARY,
                            size: i.Button.Sizes.SMALL,
                            onClick: () => n(c.ContentDismissActionType.DISMISS),
                            look: i.Button.Looks.LINK,
                            children: E.default.Messages.NO_THANKS
                        })]
                    })]
                })
            }
        },
        146378: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("450911"),
                d = n("272030"),
                c = n("736964"),
                E = n("393414"),
                f = n("42203"),
                _ = n("42887"),
                C = n("109264"),
                h = n("663745"),
                I = n("158998"),
                T = n("371449"),
                S = n("224978"),
                N = n("83916"),
                A = n("559541"),
                m = n("49111"),
                p = n("353927"),
                g = n("782340"),
                R = n("889195");

            function O(e) {
                let {
                    user: t,
                    onSelect: n
                } = e, s = () => {
                    c.default.removeFriend(t.id, {
                        location: "Friends"
                    })
                }, l = (0, r.useStateFromStores)([_.default], () => _.default.supports(p.Features.VIDEO));
                return (0, a.jsxs)(o.Menu, {
                    navId: "friend-row",
                    "aria-label": g.default.Messages.USER_ACTIONS_MENU_LABEL,
                    onClose: d.closeContextMenu,
                    onSelect: n,
                    children: [l ? (0, a.jsx)(o.MenuItem, {
                        id: "start-video-call",
                        label: g.default.Messages.START_VIDEO_CALL,
                        action: function() {
                            u.default.openPrivateChannel(t.id, !0, !0)
                        }
                    }) : null, (0, a.jsx)(o.MenuItem, {
                        id: "start-voice-call",
                        label: g.default.Messages.START_VOICE_CALL,
                        action: () => {
                            u.default.openPrivateChannel(t.id, !0)
                        }
                    }), (0, a.jsx)(o.MenuItem, {
                        id: "remove-friend",
                        label: g.default.Messages.REMOVE_FRIEND,
                        action: () => {
                            (0, o.openModal)(e => (0, a.jsx)(o.ConfirmModal, {
                                header: g.default.Messages.REMOVE_FRIEND_TITLE.format({
                                    name: I.default.getName(t)
                                }),
                                confirmText: g.default.Messages.REMOVE_FRIEND,
                                cancelText: g.default.Messages.CANCEL,
                                onConfirm: s,
                                ...e,
                                children: (0, a.jsx)(o.Text, {
                                    variant: "text-md/normal",
                                    children: g.default.Messages.REMOVE_FRIEND_BODY.format({
                                        name: I.default.getName(t)
                                    })
                                })
                            }))
                        },
                        color: "danger"
                    })]
                })
            }
            class L extends s.PureComponent {
                componentWillLeave(e) {
                    null != this.peopleListItemRef.current && this.peopleListItemRef.current.componentWillLeave(e)
                }
                componentWillEnter(e) {
                    null != this.peopleListItemRef.current && this.peopleListItemRef.current.componentWillEnter(e)
                }
                render() {
                    let {
                        user: e,
                        isFocused: t,
                        activities: n,
                        applicationStream: s,
                        status: l,
                        isMobile: i
                    } = this.props, {
                        isActiveRow: r
                    } = this.state;
                    return (0, a.jsx)(S.default, {
                        ref: this.peopleListItemRef,
                        isFocused: t,
                        isActive: r,
                        user: e,
                        onOtherHover: () => r ? null : (0, d.closeContextMenu)(),
                        onClick: this.handleOpenPrivateChannel,
                        children: t => (0, a.jsxs)("div", {
                            className: R.listItemContents,
                            children: [(0, a.jsx)(A.default, {
                                user: e,
                                status: l,
                                isMobile: i,
                                subText: (0, a.jsx)(N.default, {
                                    hovered: t,
                                    activities: n,
                                    applicationStream: s,
                                    status: l,
                                    user: e
                                }),
                                hovered: t,
                                showAccountIdentifier: !0
                            }), (0, a.jsxs)("div", {
                                className: R.actions,
                                children: [(0, a.jsx)(T.default, {
                                    icon: C.default,
                                    tooltip: g.default.Messages.SEND_DM,
                                    onClick: this.handleOpenPrivateChannel,
                                    shouldHighlight: t
                                }), (0, a.jsx)(T.default, {
                                    icon: h.default,
                                    tooltip: g.default.Messages.MORE,
                                    onClick: this.handleOpenActionsMenu,
                                    shouldHighlight: t
                                })]
                            })]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.peopleListItemRef = s.createRef(), this.state = {
                        isActiveRow: !1
                    }, this.handleOpenPrivateChannel = e => {
                        let {
                            user: t
                        } = this.props;
                        e.stopPropagation();
                        let n = i.find(f.default.getMutablePrivateChannels(), e => e.type === m.ChannelTypes.DM && e.getRecipientId() === t.id);
                        null != n ? (0, E.transitionTo)(m.Routes.CHANNEL(m.ME, n.id)) : u.default.openPrivateChannel(t.id)
                    }, this.handleOpenActionsMenu = e => {
                        let {
                            user: t
                        } = this.props;
                        (0, d.openContextMenu)(e, e => (0, a.jsx)(O, {
                            ...e,
                            user: t
                        }), {
                            onClose: () => {
                                this.setState({
                                    isActiveRow: !1
                                })
                            }
                        }), this.setState({
                            isActiveRow: !0
                        })
                    }
                }
            }
            var v = L
        },
        709410: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                FriendsSearchStatus: function() {
                    return a
                },
                default: function() {
                    return I
                }
            }), n("70102"), n("222007");
            var a, s = n("37983"),
                l = n("884691"),
                i = n("458960"),
                r = n("446674"),
                o = n("77078"),
                u = n("161778"),
                d = n("941886"),
                c = n("49111"),
                E = n("782340"),
                f = n("401060");
            (a || (a = {})).SECTION_NO_RESULTS = "SECTION_NO_RESULTS";
            let _ = Object.freeze({
                    SECTION_ALL: {
                        lightSrc: n("1547"),
                        darkSrc: n("197040"),
                        width: 376,
                        height: 162,
                        renderContent: e => (0, s.jsxs)(l.Fragment, {
                            children: [(0, s.jsx)(d.default.Text, {
                                note: E.default.Messages.FRIENDS_EMPTY_STATE_ALL
                            }), (0, s.jsx)(o.Button, {
                                className: f.button,
                                onClick: e,
                                children: E.default.Messages.ADD_FRIEND
                            })]
                        })
                    },
                    SECTION_ONLINE: {
                        lightSrc: n("681224"),
                        darkSrc: n("819444"),
                        width: 421,
                        height: 218,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_ONLINE
                        })
                    },
                    SECTION_BLOCKED: {
                        lightSrc: n("289309"),
                        darkSrc: n("829361"),
                        width: 433,
                        height: 232,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_BLOCKED
                        })
                    },
                    SECTION_PENDING: {
                        lightSrc: n("934516"),
                        darkSrc: n("855143"),
                        width: 415,
                        height: 200,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_PENDING
                        })
                    },
                    SECTION_SUGGESTIONS: {
                        lightSrc: n("934516"),
                        darkSrc: n("855143"),
                        width: 415,
                        height: 200,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIENDS_EMPTY_STATE_SUGGESTIONS
                        })
                    },
                    SECTION_NO_RESULTS: {
                        lightSrc: n("681224"),
                        darkSrc: n("819444"),
                        width: 421,
                        height: 218,
                        renderContent: () => (0, s.jsx)(d.default.Text, {
                            note: E.default.Messages.FRIEND_REQUEST_NO_RESULTS_FOUND
                        })
                    }
                }),
                C = e => {
                    let {
                        theme: t
                    } = e, n = E.default.Messages.FRIENDS_EMPTY_STATE_ALL, a = _.SECTION_ALL;
                    return (0, s.jsx)(l.Fragment, {
                        children: (0, s.jsxs)(d.default, {
                            theme: t,
                            children: [(0, s.jsx)(d.default.Image, {
                                width: a.width,
                                height: a.height,
                                lightSrc: a.lightSrc,
                                darkSrc: a.darkSrc
                            }), (0, s.jsx)(d.default.Text, {
                                note: n
                            })]
                        })
                    })
                };
            class h extends l.PureComponent {
                render() {
                    let {
                        type: e,
                        onClick: t,
                        theme: n
                    } = this.props, a = {
                        opacity: this.state.opacity
                    }, l = function(e) {
                        switch (e) {
                            case c.FriendsSections.ADD_FRIEND:
                            case c.FriendsSections.ALL:
                                return _.SECTION_ALL;
                            case c.FriendsSections.ONLINE:
                                return _.SECTION_ONLINE;
                            case c.FriendsSections.PENDING:
                                return _.SECTION_PENDING;
                            case c.FriendsSections.SUGGESTIONS:
                                return _.SECTION_SUGGESTIONS;
                            case c.FriendsSections.BLOCKED:
                                return _.SECTION_BLOCKED;
                            case "SECTION_NO_RESULTS":
                                return _.SECTION_NO_RESULTS;
                            default:
                                throw Error("FriendsEmptyState: Invalid empty state")
                        }
                    }(e);
                    return e === c.FriendsSections.ADD_FRIEND ? (0, s.jsx)(i.default.div, {
                        className: f.friendsEmpty,
                        style: a,
                        children: (0, s.jsx)(C, {
                            theme: n
                        })
                    }) : (0, s.jsx)(i.default.div, {
                        className: f.friendsEmpty,
                        style: a,
                        children: (0, s.jsxs)(d.default, {
                            theme: n,
                            children: [(0, s.jsx)(d.default.Image, {
                                width: l.width,
                                height: l.height,
                                lightSrc: l.lightSrc,
                                darkSrc: l.darkSrc
                            }), l.renderContent(t)]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        opacity: new i.default.Value(1)
                    }, this.componentWillEnter = e => {
                        this.state.opacity.setValue(0), i.default.timing(this.state.opacity, {
                            toValue: 1,
                            duration: 250
                        }).start(e)
                    }, this.componentWillLeave = e => {
                        i.default.timing(this.state.opacity, {
                            toValue: 0,
                            duration: 250
                        }).start(e)
                    }
                }
            }
            var I = r.default.connectStores([u.default], () => ({
                theme: u.default.theme
            }), {
                forwardRef: !0
            })(h)
        },
        411676: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("669491"),
                i = n("736964"),
                r = n("401642"),
                o = n("697218"),
                u = n("36694"),
                d = n("945330"),
                c = n("956089"),
                E = n("599110"),
                f = n("371449"),
                _ = n("224978"),
                C = n("559541"),
                h = n("49111"),
                I = n("782340"),
                T = n("819745");

            function S(e) {
                let {
                    user: t,
                    type: n,
                    status: S,
                    isFocused: N
                } = e, A = s.useContext(E.AnalyticsContext), m = e => {
                    e.stopPropagation(), i.default.cancelFriendRequest(t.id, {
                        location: "Friends"
                    })
                }, p = e => {
                    e.stopPropagation(), i.default.addRelationship({
                        userId: t.id,
                        context: {
                            location: "Friends"
                        }
                    })
                }, g = S === h.StatusTypes.OFFLINE ? h.StatusTypes.UNKNOWN : S, R = n === h.RelationshipTypes.PENDING_INCOMING ? I.default.Messages.INCOMING_FRIEND_REQUEST : I.default.Messages.OUTGOING_FRIEND_REQUEST;
                return (0, a.jsx)(_.default, {
                    isFocused: N,
                    user: t,
                    onClick: () => (0, r.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: A.location
                    }),
                    children: e => {
                        var s;
                        let i = n === h.RelationshipTypes.PENDING_INCOMING ? (0, a.jsxs)(a.Fragment, {
                            children: [(null === (s = o.default.getCurrentUser()) || void 0 === s ? void 0 : s.isStaff()) && (null == t ? void 0 : t.isStaff()) && (0, a.jsx)("div", {
                                className: T.staffIndicator,
                                children: (0, a.jsx)(c.TextBadge, {
                                    color: l.default.unsafe_rawColors.BRAND_500.css,
                                    text: I.default.Messages.STAFF_BADGE_TOOLTIP
                                })
                            }), (0, a.jsx)(f.default, {
                                icon: u.default,
                                actionType: f.default.ActionTypes.ACCEPT,
                                tooltip: I.default.Messages.FRIEND_REQUEST_ACCEPT,
                                onClick: p,
                                shouldHighlight: e
                            }), (0, a.jsx)(f.default, {
                                icon: d.default,
                                actionType: f.default.ActionTypes.DENY,
                                tooltip: I.default.Messages.FRIEND_REQUEST_IGNORE,
                                onClick: m,
                                shouldHighlight: e
                            })]
                        }) : (0, a.jsx)(f.default, {
                            icon: d.default,
                            actionType: f.default.ActionTypes.DENY,
                            tooltip: I.default.Messages.FRIEND_REQUEST_CANCEL,
                            onClick: m,
                            shouldHighlight: e
                        });
                        return (0, a.jsxs)("div", {
                            className: T.listItemContents,
                            children: [(0, a.jsx)(C.default, {
                                user: t,
                                hovered: e,
                                showAccountIdentifier: !0,
                                status: g,
                                subText: R,
                                className: T.userInfo
                            }), (0, a.jsx)("div", {
                                className: T.actions,
                                children: i
                            })]
                        })
                    }
                })
            }
        },
        756183: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return P
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("446674"),
                o = n("77078"),
                u = n("630086"),
                d = n("736964"),
                c = n("901582"),
                E = n("206230"),
                f = n("347272"),
                _ = n("27618"),
                C = n("545429"),
                h = n("471671"),
                I = n("810567"),
                T = n("791878"),
                S = n("637824"),
                N = n("146378"),
                A = n("709410"),
                m = n("411676"),
                p = n("86959"),
                g = n("748753"),
                R = n("144521"),
                O = n("59678"),
                L = n("49111"),
                v = n("782340"),
                M = n("112082"),
                P = function(e) {
                    let {
                        sectionFilter: t,
                        titleId: n
                    } = e, {
                        rows: l,
                        section: P
                    } = (0, r.useStateFromStoresObject)([C.default], () => C.default.getState()), D = (0, r.useStateFromStores)([h.default], () => h.default.isFocused()), y = (0, r.useStateFromStores)([_.default], () => _.default.getRelationshipCount()), x = (0, T.useIsClearIncomingFriendRequestsEnabled)(), [U, b] = s.useState(() => {
                        let e = {};
                        for (let t of Object.values(L.FriendsSections)) e[t] = "";
                        return e
                    }), G = s.useCallback(e => {
                        b({
                            ...U,
                            [t]: e
                        })
                    }, [U, t]), j = s.useCallback(() => {
                        b({
                            ...U,
                            [t]: ""
                        })
                    }, [U, t]), w = l.filter(t, U[t]);
                    if (0 === w.length && "" === U[t]) return (0, a.jsxs)("div", {
                        className: M.emptyStateContainer,
                        children: [t === L.FriendsSections.ONLINE && (0, a.jsx)(f.default, {}), (0, a.jsx)(A.default, {
                            type: t,
                            onClick: () => {
                                u.default.setSection(L.FriendsSections.ADD_FRIEND)
                            }
                        }, P)]
                    });
                    let k = 0 === w.length && "" !== U[t],
                        F = w.filter(e => e.type === L.RelationshipTypes.PENDING_INCOMING).length,
                        B = t === L.FriendsSections.PENDING && F > 0,
                        H = B && x && F >= O.MINIMUM_PENDING_INCOMING_COUNT_FOR_CLEAR_ALL;
                    return (0, a.jsxs)(c.default, {
                        section: L.AnalyticsSections.FRIENDS_LIST,
                        children: [(0, a.jsx)(I.default, {
                            className: i(M.searchBar, k ? M.searchEmptyState : null),
                            query: U[t],
                            onChange: G,
                            onClear: j,
                            size: I.default.Sizes.MEDIUM
                        }), t === L.FriendsSections.ONLINE && "" === U[t] && (0, a.jsx)(f.default, {}), (0, a.jsxs)("div", {
                            className: M.sectionTitle,
                            children: [(0, a.jsx)(g.default, {
                                id: n,
                                title: function(e, t) {
                                    switch (e) {
                                        case L.FriendsSections.ONLINE:
                                            return v.default.Messages.FRIENDS_ONLINE_HEADER.format({
                                                online: t.toString()
                                            });
                                        case L.FriendsSections.PENDING:
                                            return v.default.Messages.FRIENDS_PENDING_HEADER.format({
                                                count: t.toString()
                                            });
                                        case L.FriendsSections.SUGGESTIONS:
                                            return v.default.Messages.FRIENDS_FRIEND_SUGGESTIONS_HEADER.format({
                                                count: t.toString()
                                            });
                                        case L.FriendsSections.BLOCKED:
                                            return v.default.Messages.FRIENDS_BLOCKED_HEADER.format({
                                                count: t.toString()
                                            });
                                        default:
                                            return v.default.Messages.FRIENDS_ALL_HEADER.format({
                                                count: t.toString()
                                            })
                                    }
                                }(t, w.length)
                            }), H && (0, a.jsx)(o.Button, {
                                look: o.ButtonLooks.LINK,
                                color: o.ButtonColors.LINK,
                                className: M.clearButton,
                                size: o.Button.Sizes.TINY,
                                onClick: e => {
                                    e.stopPropagation(), d.default.confirmClearPendingRelationships(F)
                                },
                                "aria-label": v.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON,
                                children: v.default.Messages.CLEAR_INCOMING_REQUESTS_BUTTON
                            })]
                        }), k ? (0, a.jsx)("div", {
                            className: M.emptyStateContainer,
                            children: (0, a.jsx)(A.default, {
                                type: A.FriendsSearchStatus.SECTION_NO_RESULTS
                            }, P)
                        }) : (0, a.jsx)(p.default, {
                            relationshipCount: y,
                            statusSections: [w],
                            renderRow: function(e) {
                                switch (t) {
                                    case L.FriendsSections.BLOCKED:
                                        return (0, a.jsx)(S.default, {
                                            ...e,
                                            isFocused: D
                                        });
                                    case L.FriendsSections.PENDING:
                                        return (0, a.jsx)(m.default, {
                                            ...e,
                                            isFocused: D
                                        });
                                    case L.FriendsSections.SUGGESTIONS:
                                        return (0, a.jsx)(R.default, {
                                            ...e,
                                            isFocused: D
                                        });
                                    case L.FriendsSections.ONLINE:
                                    case L.FriendsSections.ALL:
                                    default:
                                        return (0, a.jsx)(N.default, {
                                            ...e,
                                            isFocused: D
                                        })
                                }
                            },
                            sectionFilter: t,
                            searchQuery: U[t],
                            useReducedMotion: E.default.useReducedMotion
                        })]
                    })
                }
        },
        224978: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("458960"),
                o = n("974667"),
                u = n("77078"),
                d = n("272030"),
                c = n("59678"),
                E = n("890474");
            class f extends s.PureComponent {
                componentWillLeave(e) {
                    r.default.parallel([r.default.timing(this.state.opacity, {
                        toValue: 0,
                        duration: 200
                    }), r.default.timing(this.state.height, {
                        toValue: 0,
                        duration: 200
                    })]).start(e)
                }
                componentWillEnter(e) {
                    this.state.opacity.setValue(0), this.state.height.setValue(0), r.default.parallel([r.default.timing(this.state.opacity, {
                        toValue: 1,
                        duration: 200
                    }), r.default.timing(this.state.height, {
                        toValue: c.PEOPLE_LIST_ITEM_HEIGHT,
                        duration: 200
                    })]).start(e)
                }
                render() {
                    let {
                        height: e,
                        opacity: t,
                        hovered: n,
                        isContextMenuActive: s
                    } = this.state, {
                        children: l,
                        user: d,
                        onClick: c,
                        isActive: f
                    } = this.props;
                    return (0, a.jsx)(o.ListNavigatorItem, {
                        id: d.id,
                        children: o => (0, a.jsx)(u.FocusRing, {
                            offset: {
                                left: -8,
                                right: -8
                            },
                            children: (0, a.jsx)(r.default.div, {
                                className: i(E.peopleListItem, {
                                    [E.active]: f || s
                                }),
                                onContextMenu: e => this.handleContextMenu(e, d),
                                onMouseEnter: this.handleMouseEnter,
                                onMouseLeave: this.handleMouseLeave,
                                onClick: null != c ? c : void 0,
                                style: {
                                    height: e,
                                    opacity: t
                                },
                                ...o,
                                children: l(n || f || s)
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        height: new r.default.Value(c.PEOPLE_LIST_ITEM_HEIGHT),
                        opacity: new r.default.Value(1),
                        hovered: !1,
                        isContextMenuActive: !1
                    }, this.handleMouseEnter = () => {
                        let {
                            isFocused: e,
                            isActive: t,
                            onOtherHover: n
                        } = this.props, {
                            isContextMenuActive: a
                        } = this.state;
                        this.setState({
                            hovered: e
                        }), e && !t && !a && (null == n || n())
                    }, this.handleMouseLeave = () => {
                        this.setState({
                            hovered: !1
                        })
                    }, this.handleContextMenu = (e, t) => {
                        this.setState({
                            isContextMenuActive: !0
                        }), (0, d.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("406784").then(n.bind(n, "406784"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                user: t
                            })
                        }, {
                            onClose: () => {
                                this.setState({
                                    isContextMenuActive: !1
                                })
                            }
                        })
                    }
                }
            }
            var _ = f
        },
        86959: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("204597"),
                l = n("904945"),
                i = n("59678");

            function r(e) {
                let {
                    relationshipCount: t,
                    statusSections: n,
                    renderRow: r,
                    searchQuery: o,
                    sectionFilter: u,
                    useReducedMotion: d
                } = e;
                return t >= i.RELATIONSHIP_COUNT_ANIMATION_THRESHOLD ? (0, a.jsx)(s.default, {
                    statusSections: n,
                    renderRow: r,
                    searchQuery: o
                }) : (0, a.jsx)(l.default, {
                    statusSections: n,
                    renderRow: r,
                    sectionFilter: u,
                    searchQuery: o,
                    useReducedMotion: d
                })
            }
        },
        204597: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("974667"),
                i = n("446674"),
                r = n("77078"),
                o = n("206230"),
                u = n("59678"),
                d = n("112082"),
                c = function(e) {
                    let {
                        statusSections: t,
                        renderRow: n,
                        searchQuery: c
                    } = e, E = e => {
                        let n = t[e];
                        return 0 === n.length ? 0 : u.STATUS_HEADER_HEIGHT + 16
                    }, f = e => {
                        let {
                            section: a,
                            row: s
                        } = e, l = t[a];
                        if (null == l || null == s) return null;
                        let i = l[s];
                        return null == i ? null : n(i)
                    }, _ = (0, i.useStateFromStores)([o.default], () => o.default.keyboardModeEnabled), C = s.useRef(null), h = s.useCallback(() => new Promise(e => {
                        let t = C.current;
                        if (null == t) return e();
                        t.scrollToTop({
                            callback: () => requestAnimationFrame(() => e())
                        })
                    }), []), I = s.useCallback(() => new Promise(e => {
                        let t = C.current;
                        if (null == t) return e();
                        t.scrollToBottom({
                            callback: () => requestAnimationFrame(() => e())
                        })
                    }), []), T = s.useCallback(e => {
                        let t = document.querySelector(e),
                            n = C.current;
                        null != t && null != n && n.scrollIntoViewNode({
                            node: t,
                            padding: 8,
                            callback: () => null == t ? void 0 : t.focus()
                        })
                    }, []), S = (0, l.default)({
                        id: "people-list",
                        isEnabled: _,
                        scrollToStart: h,
                        scrollToEnd: I,
                        setFocus: T
                    });
                    return (0, a.jsx)(l.ListNavigatorProvider, {
                        navigator: S,
                        children: (0, a.jsx)(l.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: n,
                                    ...s
                                } = e;
                                return (0, a.jsx)(r.ListAuto, {
                                    ref: e => {
                                        var t;
                                        C.current = e, n.current = null !== (t = null == e ? void 0 : e.getScrollerNode()) && void 0 !== t ? t : null
                                    },
                                    sectionHeight: E,
                                    renderRow: f,
                                    rowHeight: u.PEOPLE_LIST_ITEM_HEIGHT,
                                    sections: t.map(e => "" !== c && 0 === e.length ? e.length + 1 : e.length),
                                    className: d.peopleList,
                                    ...s
                                })
                            }
                        })
                    })
                }
        },
        904945: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("974667"),
                l = n("446674"),
                i = n("266491"),
                r = n("77078"),
                o = n("206230"),
                u = n("49111"),
                d = n("112082"),
                c = function(e) {
                    let {
                        statusSections: t,
                        renderRow: n,
                        searchQuery: c,
                        sectionFilter: E,
                        useReducedMotion: f
                    } = e, _ = (0, l.useStateFromStores)([o.default], () => o.default.keyboardModeEnabled), C = (0, s.default)({
                        id: "people",
                        isEnabled: _,
                        async scrollToStart() {},
                        async scrollToEnd() {}
                    }), h = E !== u.FriendsSections.ONLINE && E !== u.FriendsSections.ALL, I = f || "" !== c || h, T = t.map((e, t) => I ? (0, a.jsx)("div", {
                        children: e.map(n)
                    }, t) : (0, a.jsx)(i.default, {
                        transitionAppear: !1,
                        component: "div",
                        children: e.map(n)
                    }, t));
                    return (0, a.jsx)(s.ListNavigatorProvider, {
                        navigator: C,
                        children: (0, a.jsx)(s.ListNavigatorContainer, {
                            children: e => {
                                let {
                                    ref: t,
                                    ...n
                                } = e;
                                return (0, a.jsx)(r.ScrollerAuto, {
                                    ref: t,
                                    className: d.peopleList,
                                    ...n,
                                    children: T
                                })
                            }
                        })
                    })
                }
        },
        747223: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            }), n("313619"), n("654714"), n("287168"), n("956660"), n("222007"), n("781738");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("90915"),
                o = n("394846"),
                u = n("446674"),
                d = n("77078"),
                c = n("913144"),
                E = n("939488"),
                f = n("630086"),
                _ = n("69927"),
                C = n("449004"),
                h = n("539938"),
                I = n("718091"),
                T = n("265412"),
                S = n("970366"),
                N = n("161778"),
                A = n("545429"),
                m = n("476765"),
                p = n("564875"),
                g = n("956089"),
                R = n("439932"),
                O = n("161011"),
                L = n("756183"),
                v = n("49111"),
                M = n("586391"),
                P = n("782340"),
                D = n("905360");

            function y() {
                return (0, a.jsxs)("div", {
                    className: D.inviteToolbar,
                    children: [(0, a.jsx)(I.default, {
                        tooltip: P.default.Messages.NEW_GROUP_DM
                    }), (0, a.jsx)(h.default.Divider, {})]
                })
            }
            var x = function(e) {
                let {
                    initialSection: t
                } = e, n = (0, r.useLocation)(), l = (0, r.useHistory)();
                s.useEffect(() => {
                    let e = "true" === new URLSearchParams(n.search).get("confirm-age");
                    e && c.default.dispatch({
                        type: "AGE_GATE_MODAL_OPEN",
                        source: M.AgeGateSource.DEEP_LINK_PROMPT
                    }).then(() => {
                        l.replace(v.Routes.ME)
                    })
                }, [l, n]), s.useEffect(() => {
                    E.setHomeLink(v.Routes.FRIENDS), (0, S.trackAppUIViewed)("friends")
                }), s.useEffect(() => {
                    null != t && f.default.setInitialSection(t)
                }, [t]);
                let I = (0, u.useStateFromStores)([N.default], () => N.default.theme),
                    {
                        section: x,
                        pendingCount: U
                    } = (0, u.useStateFromStoresObject)([A.default], () => A.default.getState()),
                    b = (0, u.useStateFromStoresObject)([C.default], () => C.default.getSuggestionCount()),
                    G = (0, m.useUID)(),
                    j = (0, m.useUID)();
                return (0, a.jsxs)("main", {
                    className: D.container,
                    "aria-label": P.default.Messages.FRIENDS,
                    children: [(0, a.jsx)(_.AppPageTitle, {
                        location: P.default.Messages.FRIENDS
                    }), (0, a.jsxs)(h.default, {
                        className: (0, R.getThemeClass)(I),
                        toolbar: (0, a.jsx)(y, {}),
                        scrollable: o.isMobile,
                        role: "navigation",
                        "aria-labelledby": G,
                        children: [(0, a.jsx)(h.default.Icon, {
                            icon: p.default,
                            "aria-hidden": !0
                        }), (0, a.jsx)(h.default.Title, {
                            id: G,
                            children: P.default.Messages.FRIENDS
                        }), (0, a.jsx)(h.default.Divider, {}), (0, a.jsxs)(d.TabBar, {
                            "aria-label": P.default.Messages.FRIENDS,
                            selectedItem: x,
                            type: "top-pill",
                            onItemSelect: e => {
                                f.default.setSection(e)
                            },
                            className: D.tabBar,
                            children: [(0, a.jsx)(d.TabBar.Item, {
                                id: v.FriendsSections.ONLINE,
                                className: D.item,
                                children: P.default.Messages.FRIENDS_SECTION_ONLINE
                            }), (0, a.jsx)(d.TabBar.Item, {
                                id: v.FriendsSections.ALL,
                                className: D.item,
                                children: P.default.Messages.FRIENDS_SECTION_ALL
                            }), (0, a.jsxs)(d.TabBar.Item, {
                                id: v.FriendsSections.PENDING,
                                className: D.item,
                                "aria-label": P.default.Messages.FRIENDS_SECTION_PENDING,
                                children: [P.default.Messages.FRIENDS_SECTION_PENDING, U > 0 ? (0, a.jsx)(g.NumberBadge, {
                                    count: U,
                                    className: D.badge,
                                    style: {
                                        paddingRight: 0
                                    }
                                }) : null]
                            }), b > 0 ? (0, a.jsxs)(d.TabBar.Item, {
                                id: v.FriendsSections.SUGGESTIONS,
                                className: D.item,
                                "aria-label": P.default.Messages.FRIENDS_SECTION_SUGGESTIONS,
                                children: [P.default.Messages.FRIENDS_SECTION_SUGGESTIONS, (0, a.jsx)(g.NumberBadge, {
                                    count: b,
                                    className: D.badge,
                                    style: {
                                        paddingRight: 0
                                    }
                                })]
                            }) : null, (0, a.jsx)(d.TabBar.Item, {
                                id: v.FriendsSections.BLOCKED,
                                className: D.item,
                                children: P.default.Messages.BLOCKED
                            }), (0, a.jsx)(d.TabBar.Item, {
                                "aria-label": P.default.Messages.FRIENDS_SECTION_ADD_FRIEND,
                                className: i(D.item, D.addFriend),
                                id: v.FriendsSections.ADD_FRIEND,
                                children: (0, a.jsx)("span", {
                                    children: P.default.Messages.FRIENDS_SECTION_ADD_FRIEND
                                })
                            })]
                        })]
                    }), (0, a.jsxs)("div", {
                        className: D.tabBody,
                        children: [(0, a.jsx)(d.TabBar.Panel, {
                            id: x,
                            className: D.peopleColumn,
                            "aria-labelledby": j,
                            children: x === v.FriendsSections.ADD_FRIEND ? (0, a.jsx)(O.default, {}) : (0, a.jsx)(L.default, {
                                titleId: j,
                                sectionFilter: x
                            })
                        }), (0, a.jsx)("div", {
                            className: D.nowPlayingColumn,
                            children: (0, a.jsx)(T.default, {})
                        })]
                    })]
                })
            }
        },
        748753: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("826684"),
                l = n("463431");

            function i(e) {
                let {
                    title: t,
                    id: n
                } = e;
                return (0, a.jsx)(s.default, {
                    className: l.title,
                    id: n,
                    children: t
                })
            }
        },
        83916: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("943722"),
                l = n("158998"),
                i = n("848179"),
                r = function(e) {
                    let {
                        hovered: t,
                        activities: n,
                        applicationStream: r,
                        status: o,
                        user: u
                    } = e;
                    return n.length > 0 ? (0, a.jsx)(s.default, {
                        className: i.activity,
                        textClassName: i.text,
                        emojiClassName: i.customStatusEmoji,
                        activities: n,
                        applicationStream: r,
                        animate: t,
                        user: u
                    }) : (0, a.jsx)("div", {
                        className: i.text,
                        children: (0, l.humanizeStatus)(o)
                    })
                }
        },
        144521: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("736964"),
                i = n("390790"),
                r = n("401642"),
                o = n("36694"),
                u = n("945330"),
                d = n("599110"),
                c = n("371449"),
                E = n("224978"),
                f = n("559541"),
                _ = n("49111"),
                C = n("782340"),
                h = n("858401");

            function I(e) {
                let {
                    user: t,
                    nickname: n,
                    status: I,
                    isFocused: T
                } = e, S = s.useContext(d.AnalyticsContext), N = e => {
                    null == e || e.stopPropagation(), l.default.addRelationship({
                        userId: t.id,
                        context: {
                            location: "Friends"
                        },
                        type: void 0,
                        friendToken: void 0,
                        fromFriendSuggestion: !0
                    })
                }, A = e => {
                    null == e || e.stopPropagation(), i.default.ignore(t.id)
                }, m = I === _.StatusTypes.OFFLINE ? _.StatusTypes.UNKNOWN : I;
                return (0, a.jsx)(E.default, {
                    isFocused: T,
                    user: t,
                    onClick: () => (0, r.openUserProfileModal)({
                        userId: t.id,
                        analyticsLocation: S.location
                    }),
                    children: e => {
                        let s = (0, a.jsxs)(a.Fragment, {
                            children: [(0, a.jsx)(c.default, {
                                icon: o.default,
                                actionType: c.default.ActionTypes.ACCEPT,
                                tooltip: C.default.Messages.FRIEND_REQUEST_ACCEPT,
                                onClick: N,
                                shouldHighlight: e
                            }), (0, a.jsx)(c.default, {
                                icon: u.default,
                                actionType: c.default.ActionTypes.DENY,
                                tooltip: C.default.Messages.FRIEND_REQUEST_IGNORE,
                                onClick: A,
                                shouldHighlight: e
                            })]
                        });
                        return (0, a.jsxs)("div", {
                            className: h.listItemContents,
                            children: [(0, a.jsx)(f.default, {
                                user: t,
                                hovered: e,
                                status: m,
                                subText: n,
                                className: h.userInfo
                            }), (0, a.jsx)("div", {
                                className: h.actions,
                                children: s
                            })]
                        })
                    }
                })
            }
        },
        559541: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("446674"),
                r = n("145079"),
                o = n("87657"),
                u = n("27618"),
                d = n("515026"),
                c = function(e) {
                    let {
                        user: t,
                        hovered: n,
                        subText: s,
                        showAccountIdentifier: c,
                        status: E,
                        isMobile: f,
                        className: _
                    } = e, C = (0, i.useStateFromStores)([u.default], () => u.default.getNickname(t.id));
                    return (0, a.jsxs)("div", {
                        className: l(d.userInfo, _, {
                            [d.hovered]: n
                        }),
                        children: [(0, a.jsx)(o.default, {
                            user: t,
                            className: d.avatar,
                            animate: n,
                            status: E,
                            isMobile: f
                        }), (0, a.jsxs)("div", {
                            className: d.text,
                            children: [(0, a.jsx)(r.default, {
                                user: t,
                                nick: C,
                                botClass: d.botTag,
                                className: l(d.discordTag, {
                                    [d.alignPomelo]: t.isPomelo()
                                }),
                                usernameClass: d.username,
                                discriminatorClass: d.discriminator,
                                showAccountIdentifier: c
                            }), (0, a.jsx)("div", {
                                className: d.subtext,
                                children: s
                            })]
                        })]
                    })
                }
        },
        356702: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                unlockAchievement: function() {
                    return u
                },
                showAchievementToast: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("106413"),
                r = n("745690"),
                o = n("782340");

            function u(e) {
                l.default.dispatch({
                    type: "POGGERMODE_ACHIEVEMENT_UNLOCK",
                    achievementId: e
                })
            }

            function d(e, t) {
                let n = (0, i.getPoggermodeAchievementData)(e);
                null != n && (0, s.showToast)((0, s.createToast)(o.default.Messages.POGGERMODE_ACHIEVEMENTS, s.ToastType.CUSTOM, {
                    position: s.ToastPosition.BOTTOM,
                    component: (0, a.jsx)(r.default, {
                        achievement: n,
                        unlocked: t
                    }),
                    duration: 6e3
                }))
            }
        },
        429464: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("271938"),
                i = n("356702"),
                r = n("880731"),
                o = n("943551");
            let u = {
                    unlockedAchievements: {}
                },
                d = {
                    ...u
                };
            class c extends a.default.PersistedStore {
                initialize(e) {
                    this.waitFor(l.default, o.default);
                    let t = null != e ? e : {
                        ...u
                    };
                    for (let e in t) d[e] = t[e]
                }
                getState() {
                    return d
                }
                getAllUnlockedAchievements() {
                    return d.unlockedAchievements
                }
                getUnlocked(e) {
                    var t;
                    return null !== (t = d.unlockedAchievements[e]) && void 0 !== t ? t : null
                }
            }
            c.displayName = "PoggermodeAchievementStore", c.persistKey = "PoggermodeAchievementStore";
            var E = new c(s.default, {
                POGGERMODE_ACHIEVEMENT_UNLOCK: function(e) {
                    var t;
                    let {
                        achievementId: n
                    } = e;
                    if (!r.default.isEnabled()) return !1;
                    t = n, null != d.unlockedAchievements[t] || (d.unlockedAchievements = {
                        ...d.unlockedAchievements,
                        [t]: {
                            achievementId: t,
                            dateUnlocked: Date.now()
                        }
                    }, setTimeout(() => {
                        (0, i.showAchievementToast)(t, !0)
                    }, 2e3))
                }
            })
        },
        106413: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                PoggermodeAchievementId: function() {
                    return l
                },
                PoggermodeAchievementRarity: function() {
                    return i
                },
                ACHIEVEMENT_LIST: function() {
                    return u
                },
                getPoggermodeAchievementData: function() {
                    return d
                },
                getAchievementStyles: function() {
                    return c
                }
            });
            var a, s, l, i, r = n("119035"),
                o = n("782340");
            (a = l || (l = {}))[a.ENABLE_POGGERMODE = 0] = "ENABLE_POGGERMODE", a[a.DISABLE_POGGERMODE = 1] = "DISABLE_POGGERMODE", a[a.PING_SOMEONE = 2] = "PING_SOMEONE", a[a.PING_ME = 3] = "PING_ME", a[a.COMBO_MULTI_LEVEL_1 = 4] = "COMBO_MULTI_LEVEL_1", a[a.COMBO_MULTI_LEVEL_2 = 5] = "COMBO_MULTI_LEVEL_2", a[a.COMBO_MULTI_LEVEL_3 = 6] = "COMBO_MULTI_LEVEL_3", a[a.COMBO_MULTI_LEVEL_4 = 7] = "COMBO_MULTI_LEVEL_4", a[a.TOTAL_SCORE_LEVEL_1 = 8] = "TOTAL_SCORE_LEVEL_1", a[a.TOTAL_SCORE_LEVEL_2 = 9] = "TOTAL_SCORE_LEVEL_2", a[a.TOTAL_SCORE_LEVEL_3 = 10] = "TOTAL_SCORE_LEVEL_3", a[a.TOTAL_SCORE_LEVEL_4 = 11] = "TOTAL_SCORE_LEVEL_4", a[a.TOTAL_SCORE_LEVEL_5 = 12] = "TOTAL_SCORE_LEVEL_5", a[a.VISITOR_100 = 13] = "VISITOR_100", a[a.CUSTOMIZE_CONFETTI = 14] = "CUSTOMIZE_CONFETTI", a[a.MORE = 15] = "MORE", a[a.COMBO_VALUE_LEVEL_1 = 16] = "COMBO_VALUE_LEVEL_1", a[a.COMBO_VALUE_LEVEL_2 = 17] = "COMBO_VALUE_LEVEL_2", a[a.COMBO_VALUE_LEVEL_3 = 18] = "COMBO_VALUE_LEVEL_3", a[a.COMBO_VALUE_LEVEL_4 = 19] = "COMBO_VALUE_LEVEL_4", (s = i || (i = {}))[s.COMMON = 0] = "COMMON", s[s.UNCOMMON = 1] = "UNCOMMON", s[s.RARE = 2] = "RARE", s[s.EPIC = 3] = "EPIC", s[s.LEGENDARY = 4] = "LEGENDARY";
            let u = {
                0: {
                    id: 0,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_ENABLE_POGGERMODE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_ENABLE_POGGERMODE_DESCRIPTION,
                    rarity: 0,
                    hideDescriptionUntilUnlock: !1
                },
                1: {
                    id: 1,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_DISABLE_POGGERMODE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_DISABLE_POGGERMODE_DESCRIPTION,
                    rarity: 1,
                    hideDescriptionUntilUnlock: !1
                },
                13: {
                    id: 13,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_VISITOR_100_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_VISITOR_100_DESCRIPTION,
                    rarity: 4,
                    hideDescriptionUntilUnlock: !0,
                    onAction: () => {
                        window.open("https://www.youtube.com/watch?v=dQw4w9WgXcQ", "_blank")
                    }
                },
                14: {
                    id: 14,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_CUSTOMIZE_CONFETTI_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_CUSTOMIZE_CONFETTI_DESCRIPTION,
                    rarity: 0,
                    hideDescriptionUntilUnlock: !1
                },
                15: {
                    id: 15,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_MORE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_MORE_DESCRIPTION,
                    rarity: 1,
                    hideDescriptionUntilUnlock: !1
                },
                2: {
                    id: 2,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_SOMEONE_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_SOMEONE_DESCRIPTION,
                    rarity: 0,
                    hideDescriptionUntilUnlock: !1
                },
                3: {
                    id: 3,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_ME_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_PING_ME_DESCRIPTION,
                    rarity: 1,
                    hideDescriptionUntilUnlock: !1
                },
                4: {
                    id: 4,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_1_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_1_DESCRIPTION,
                    rarity: 0,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 2
                },
                5: {
                    id: 5,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_2_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_2_DESCRIPTION,
                    rarity: 1,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 4
                },
                6: {
                    id: 6,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_3_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_3_DESCRIPTION,
                    rarity: 2,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 5
                },
                7: {
                    id: 7,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_4_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_MULTI_LEVEL_4_DESCRIPTION,
                    rarity: 2,
                    hideDescriptionUntilUnlock: !1,
                    checkUnlock: e => e.multiplier >= 7
                },
                8: {
                    id: 8,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_1_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_1_DESCRIPTION,
                    rarity: 3,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 430 === (0, r.getComboScore)(e)
                },
                9: {
                    id: 9,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_2_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_2_DESCRIPTION,
                    rarity: 3,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 555 === (0, r.getComboScore)(e)
                },
                10: {
                    id: 10,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_3_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_3_DESCRIPTION,
                    rarity: 3,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 898 === (0, r.getComboScore)(e)
                },
                11: {
                    id: 11,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_4_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_4_DESCRIPTION,
                    rarity: 4,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 1337 === (0, r.getComboScore)(e)
                },
                12: {
                    id: 12,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_5_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_TOTAL_SCORE_LEVEL_5_DESCRIPTION,
                    rarity: 4,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 2048 === (0, r.getComboScore)(e)
                },
                16: {
                    id: 16,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_1_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_1_DESCRIPTION,
                    rarity: 2,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 64 === e.value
                },
                17: {
                    id: 17,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_2_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_2_DESCRIPTION,
                    rarity: 3,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 88 === e.value
                },
                18: {
                    id: 18,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_3_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_3_DESCRIPTION,
                    rarity: 3,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 99 === e.value
                },
                19: {
                    id: 19,
                    name: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_4_NAME,
                    description: () => o.default.Messages.POGGERMODE_ACHIEVEMENT_COMBO_VALUE_LEVEL_4_DESCRIPTION,
                    rarity: 4,
                    hideDescriptionUntilUnlock: !0,
                    checkUnlock: e => 113 === e.value
                }
            };

            function d(e) {
                return u[e]
            }
            let c = e => {
                switch (e) {
                    case 0:
                        return {
                            color: "#1ABC9C"
                        };
                    case 1:
                        return {
                            color: "#3498DB"
                        };
                    case 2:
                        return {
                            color: "#9B59B6"
                        };
                    case 3:
                        return {
                            color: "#E91E63"
                        };
                    case 4:
                        return {
                            color: "#E67E22"
                        }
                }
            }
        },
        880185: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            }), n("222007");
            var a = n("913144"),
                s = n("316272"),
                l = n("271938"),
                i = n("356702"),
                r = n("429464"),
                o = n("106413"),
                u = n("880731"),
                d = n("943551");
            let c = new Set;
            class E extends s.default {
                _initialize() {
                    a.default.subscribe("MESSAGE_CREATE", this.handleMessageCreate), a.default.subscribe("POGGERMODE_SETTINGS_UPDATE", this.handleSettingsUpdate)
                }
                _terminate() {
                    a.default.unsubscribe("MESSAGE_CREATE", this.handleMessageCreate), a.default.unsubscribe("POGGERMODE_SETTINGS_UPDATE", this.handleSettingsUpdate)
                }
                constructor(...e) {
                    super(...e), this.handleSettingsUpdate = e => {
                        let {
                            settings: t
                        } = e;
                        t.enabled ? (0, i.unlockAchievement)(o.PoggermodeAchievementId.ENABLE_POGGERMODE) : !1 === t.enabled && (0, i.unlockAchievement)(o.PoggermodeAchievementId.DISABLE_POGGERMODE);
                        let n = Object.keys(t).some(e => e.startsWith("confetti"));
                        n && (0, i.unlockAchievement)(o.PoggermodeAchievementId.CUSTOMIZE_CONFETTI)
                    }, this.handleMessageCreate = e => {
                        var t;
                        let {
                            channelId: n,
                            message: {
                                author: a,
                                nonce: s,
                                mentions: E
                            }
                        } = e;
                        if (!u.default.isEnabled()) return !1;
                        let f = l.default.getId();
                        if ((null == E ? void 0 : E.find(e => e.id === f)) != null ? (0, i.unlockAchievement)(o.PoggermodeAchievementId.PING_ME) : (null !== (t = null == E ? void 0 : E.length) && void 0 !== t ? t : 0) > 0 && (null == a ? void 0 : a.id) === f && (0, i.unlockAchievement)(o.PoggermodeAchievementId.PING_SOMEONE), !(0, d.shouldTrackMessage)(null == a ? void 0 : a.id, f, s, c)) return !1;
                        let _ = d.default.getMostRecentMessageCombo(n),
                            {
                                combo: C
                            } = null != _ ? _ : {};
                        if (null == C) return !1;
                        Object.values(o.PoggermodeAchievementId).forEach(e => {
                            if (null != r.default.getUnlocked(e)) return;
                            let t = (0, o.getPoggermodeAchievementData)(e),
                                n = null == t ? void 0 : t.checkUnlock;
                            if (null != n) !1 !== n(C) && (0, i.unlockAchievement)(e)
                        })
                    }
                }
            }
            var f = new E
        },
        624043: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return O
                }
            }), n("222007"), n("424973");
            var a = n("913144"),
                s = n("316272"),
                l = n("870696"),
                i = n("271938"),
                r = n("945956"),
                o = n("18494"),
                u = n("191542"),
                d = n("709681"),
                c = n("880731"),
                E = n("943551"),
                f = n("49111");
            let _ = (0, d.createSoundForPack)("poggermode_applause", l.default.getSoundpack()),
                C = !1,
                h = !1,
                I = [],
                T = null,
                S = () => {
                    !C && (_.loop(), C = !0)
                },
                N = () => {
                    _.stop(), C = !1
                },
                A = () => {
                    let e = c.default.isEnabled(),
                        t = c.default.comboSoundsEnabled;
                    if (!e || !t) return !1;
                    let n = o.default.getChannelId();
                    return null != n && !0
                },
                m = () => {
                    if (0 === I.length || !A() || h) return;
                    h = !0;
                    let [e, t] = I[I.length - 1];
                    (0, d.playSound)(e, t), T = setTimeout(p, 1e3)
                },
                p = () => {
                    I.pop(), h = !1, m()
                },
                g = function(e) {
                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        n = r.default.isConnected();
                    I.push([e, t * (n ? .1 : 1)]), m()
                };
            class R extends s.default {
                _initialize() {
                    E.default.addChangeListener(this.startAudio), a.default.subscribe("RTC_CONNECTION_STATE", this.setVolume), a.default.subscribe("TYPING_STOP", this.stopAudio), a.default.subscribe("TYPING_STOP_LOCAL", this.stopAudio), a.default.subscribe("CHANNEL_SELECT", this.stopAudio), a.default.subscribe("POGGERMODE_SETTINGS_UPDATE", this.stopAudio)
                }
                _terminate() {
                    E.default.removeChangeListener(this.startAudio), a.default.unsubscribe("RTC_CONNECTION_STATE", this.setVolume), a.default.unsubscribe("TYPING_STOP", this.stopAudio), a.default.unsubscribe("TYPING_STOP_LOCAL", this.stopAudio), a.default.unsubscribe("CHANNEL_SELECT", this.stopAudio), a.default.unsubscribe("POGGERMODE_SETTINGS_UPDATE", this.stopAudio), clearTimeout(T)
                }
                setVolume(e) {
                    let {
                        state: t
                    } = e;
                    t === f.RTCConnectionStates.RTC_CONNECTED ? _.volume = .1 : _.volume = 1
                }
                handleTypingStop(e) {
                    let {
                        userId: t
                    } = e, n = i.default.getId();
                    n === t && N()
                }
                stopAudio() {
                    N()
                }
                startAudio() {
                    var e;
                    if (!A()) return;
                    let t = o.default.getChannelId();
                    if (null == t) return;
                    let n = i.default.getId(),
                        a = u.default.isTyping(t, n),
                        s = E.default.getUserCombo(n, t),
                        l = null !== (e = null == s ? void 0 : s.multiplier) && void 0 !== e ? e : 1;
                    a && l >= 7 ? S() : N()
                }
                playAchievementUnlockSound() {
                    A() && g("poggermode_achievement_unlock")
                }
            }
            var O = new R
        },
        745690: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("77078"),
                o = n("106413"),
                u = n("624043"),
                d = n("408792"),
                c = n("492532");
            let E = e => {
                let {
                    color: t
                } = e;
                return (0, a.jsxs)("svg", {
                    width: "48",
                    height: "28",
                    viewBox: "0 0 55 34",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: [(0, a.jsx)("rect", {
                        x: "10.1968",
                        y: "7",
                        width: "14.4203",
                        height: "14.4203",
                        transform: "rotate(45 10.1968 7)",
                        className: c.toastBG
                    }), (0, a.jsx)("rect", {
                        x: "27.3936",
                        y: "0.59021",
                        width: "23.4851",
                        height: "23.4851",
                        transform: "rotate(45 27.3936 0.59021)",
                        className: c.toastBG
                    }), (0, a.jsx)("rect", {
                        x: "44.5903",
                        y: "7",
                        width: "14.4203",
                        height: "14.4203",
                        transform: "rotate(45 44.5903 7)",
                        className: c.toastBG
                    }), (0, a.jsx)("rect", {
                        x: "10.1968",
                        y: "13",
                        width: "6",
                        height: "6",
                        transform: "rotate(45 10.1968 13)",
                        fill: t
                    }), (0, a.jsx)("path", {
                        d: "M27.3936 4.39355L34.1233 16.2873L27.3936 28.1811L20.6638 16.2873L27.3936 4.39355Z",
                        fill: t
                    }), (0, a.jsx)("rect", {
                        x: "44.5903",
                        y: "13",
                        width: "6",
                        height: "6",
                        transform: "rotate(45 44.5903 13)",
                        fill: t
                    })]
                })
            };

            function f(e) {
                let {
                    achievement: t,
                    unlocked: n
                } = e, {
                    name: l,
                    description: f,
                    rarity: _,
                    hideDescriptionUntilUnlock: C,
                    onAction: h
                } = t, {
                    color: I
                } = (0, o.getAchievementStyles)(_);
                s.useEffect(() => {
                    let e = setTimeout(() => {
                        u.default.playAchievementUnlockSound()
                    }, 50);
                    return () => {
                        clearTimeout(e)
                    }
                }, []);
                let T = null != h && n,
                    S = T ? r.Clickable : "div";
                return (0, a.jsxs)(S, {
                    className: i(c.container, T && c.actionable),
                    onClick: () => {
                        T && h()
                    },
                    children: [(0, a.jsx)("div", {
                        className: c.iconContainer,
                        children: (0, a.jsx)(d.default, {
                            achievementId: t.id,
                            size: d.default.Sizes.SIZE_40,
                            unlocked: n
                        })
                    }), (0, a.jsxs)("div", {
                        className: c.nameContainer,
                        children: [(0, a.jsx)(r.Text, {
                            variant: "text-md/semibold",
                            color: "header-primary",
                            children: l()
                        }), (0, a.jsx)(r.Text, {
                            variant: "text-xs/medium",
                            color: "header-secondary",
                            children: C && !n ? "?????" : f()
                        })]
                    }), (0, a.jsx)("div", {
                        className: c.flair,
                        children: (0, a.jsx)(E, {
                            color: I
                        })
                    })]
                })
            }
        },
        408792: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("819855"),
                l = n("77078"),
                i = n("841098"),
                r = n("449918"),
                o = n("451166"),
                u = n("45029"),
                d = n("300113"),
                c = n("106413"),
                E = n("843455"),
                f = n("406307");
            let _ = {
                    trophy: E.Color.PRIMARY_400,
                    locked: E.Color.PRIMARY_400,
                    unlocked: E.Color.GREEN_330
                },
                C = {
                    trophy: E.Color.PRIMARY_400,
                    locked: E.Color.PRIMARY_400,
                    unlocked: E.Color.GREEN_330
                };

            function h(e) {
                var t;
                let {
                    achievementId: n,
                    unlocked: E,
                    size: h = l.AvatarSizes.SIZE_40
                } = e, I = (0, i.default)(), T = (0, c.getPoggermodeAchievementData)(n);
                if (null == T) return null;
                let S = (0, l.getAvatarSpecs)(h),
                    {
                        name: N,
                        rarity: A
                    } = T,
                    {
                        color: m
                    } = (0, c.getAchievementStyles)(A),
                    p = (0, s.isThemeDark)(I) ? _ : C,
                    g = (S.size - S.offset - 2 * S.stroke) * .8,
                    R = S.size - S.stroke,
                    O = {
                        width: .4 * g,
                        height: .4 * g
                    },
                    L = {
                        width: O.width + 1,
                        height: O.height + 1,
                        right: S.stroke + 1,
                        bottom: S.stroke + 1,
                        padding: 0
                    };
                return (0, a.jsxs)("div", {
                    className: f.container,
                    style: {
                        width: R,
                        height: R,
                        padding: S.stroke
                    },
                    "aria-label": "".concat(null !== (t = N()) && void 0 !== t ? t : ""),
                    children: [(0, a.jsx)("div", {
                        className: f.trophyIconContainer,
                        children: (0, a.jsx)(d.default, {
                            color: E ? m : (0, r.getColor)(p.trophy),
                            width: g,
                            height: g
                        })
                    }), !E && (0, a.jsx)("div", {
                        className: f.lockContainer,
                        style: L,
                        children: (0, a.jsx)(u.default, {
                            color: (0, r.getColor)(p.locked),
                            ...O
                        })
                    }), E && A === c.PoggermodeAchievementRarity.LEGENDARY && (0, a.jsx)("div", {
                        className: f.lockContainer,
                        style: L,
                        children: (0, a.jsx)(o.default, {
                            className: f.confettiIcon,
                            ...O
                        })
                    })]
                })
            }
            h.Sizes = l.AvatarSizes
        },
        263065: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("782340");
            class o extends i.default {
                _initialize() {
                    l.default.subscribe("POGGERMODE_TEMPORARILY_DISABLED", this.handlePoggermodeTemporarilyDisabled)
                }
                _terminate() {
                    l.default.unsubscribe("POGGERMODE_TEMPORARILY_DISABLED", this.handlePoggermodeTemporarilyDisabled)
                }
                handlePoggermodeTemporarilyDisabled() {
                    (0, s.openModal)(e => (0, a.jsx)(s.ConfirmModal, {
                        ...e,
                        header: r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_TITLE,
                        confirmText: r.default.Messages.CONFIRM,
                        confirmButtonColor: s.Button.Colors.GREEN,
                        children: (0, a.jsx)(s.Text, {
                            variant: "text-md/normal",
                            children: r.default.Messages.POGGERMODE_TEMPORARILY_DISABLED_TOAST_BODY
                        })
                    }))
                }
            }
            var u = new o
        },
        204025: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("913144"),
                l = n("316272"),
                i = n("269936"),
                r = n("383294"),
                o = n("49111");
            n("361430");
            let u = (0, i.makeLazy)({
                    createPromise: () => n.el("93116").then(n.bind(n, "93116")),
                    webpackId: "93116",
                    name: "PopoutWindowChannelCall"
                }),
                d = (0, i.makeLazy)({
                    createPromise: () => n.el("846679").then(n.bind(n, "846679")),
                    webpackId: "846679",
                    name: "PopoutWindowStageChannelCall"
                }),
                c = (0, i.makeLazy)({
                    createPromise: () => n.el("620635").then(n.bind(n, "620635")),
                    webpackId: "620635",
                    name: "PopoutWindowRTCDebug"
                });
            class E extends l.default {
                _initialize() {
                    s.default.subscribe("CHANNEL_CALL_POPOUT_WINDOW_OPEN", this.handleOpenChannelCallPopout), s.default.subscribe("RTC_DEBUG_POPOUT_WINDOW_OPEN", this.handleOpenRTCDebugPopout)
                }
                _terminate() {
                    s.default.unsubscribe("CHANNEL_CALL_POPOUT_WINDOW_OPEN", this.handleOpenChannelCallPopout), s.default.unsubscribe("RTC_DEBUG_POPOUT_WINDOW_OPEN", this.handleOpenRTCDebugPopout)
                }
                handleOpenChannelCallPopout(e) {
                    let {
                        channel: t
                    } = e;
                    r.open(o.PopoutWindowKeys.CHANNEL_CALL_POPOUT, e => t.isGuildStageVoice() ? (0, a.jsx)(d, {
                        windowKey: e,
                        channelId: t.id
                    }) : (0, a.jsx)(u, {
                        windowKey: e,
                        channelId: t.id
                    }), {
                        defaultWidth: 854,
                        defaultHeight: 480
                    })
                }
                handleOpenRTCDebugPopout() {
                    r.open(o.PopoutWindowKeys.RTC_DEBUG_POPOUT, e => (0, a.jsx)(c, {
                        windowKey: e
                    }), {
                        defaultWidth: 854,
                        defaultHeight: 480
                    })
                }
            }
            var f = new E
        },
        684641: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("222007");
            var a = n("458960"),
                s = n("913144"),
                l = n("316272"),
                i = n("619106"),
                r = n("292687");
            class o extends l.default {
                _initialize() {
                    r.default.addChangeListener(this.handlePopoutWindowChange), s.default.subscribe("WINDOW_FOCUS", this.handleMainWindowFocus)
                }
                _terminate() {
                    r.default.removeChangeListener(this.handlePopoutWindowChange), s.default.unsubscribe("WINDOW_FOCUS", this.handleMainWindowFocus), this.injectWindowAnimationFrame(window)
                }
                injectWindowAnimationFrame(e) {
                    let t = t => e.requestAnimationFrame(t),
                        n = t => e.cancelAnimationFrame(t);
                    a.default.inject.RequestAnimationFrame(t), a.default.inject.CancelAnimationFrame(n), i.frameLoop.setRAF(t, n)
                }
                constructor(...e) {
                    super(...e), this.handleMainWindowFocus = e => {
                        let {
                            focused: t
                        } = e;
                        t && this.injectWindowAnimationFrame(window)
                    }, this.handlePopoutWindowChange = () => {
                        let e = r.default.getWindowKeys().find(e => r.default.getWindowFocused(e));
                        if (null == e) return this.injectWindowAnimationFrame(window);
                        let t = r.default.getWindow(e);
                        if (null == t || t.closed) return this.injectWindowAnimationFrame(window);
                        this.injectWindowAnimationFrame(t)
                    }
                }
            }
            var u = new o
        },
        691818: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = {
                    profileThemesRelevanceExceeded: null,
                    savedAt: null
                },
                i = {
                    hasFetchedRelevance: !1
                },
                r = l,
                o = i;
            class u extends a.default.PersistedStore {
                initialize(e) {
                    o = i, r = l;
                    let t = new Date;
                    null != e && null != e.savedAt && t.getTime() - e.savedAt < 432e5 && (r = e)
                }
                get hasFetchedRelevance() {
                    return o.hasFetchedRelevance
                }
                get profileThemesRelevanceExceeded() {
                    return r.profileThemesRelevanceExceeded
                }
                getState() {
                    return r
                }
            }
            u.displayName = "PerksRelevanceStore", u.persistKey = "PerksRelevanceStore";
            var d = new u(s.default, {
                BILLING_PERKS_RELEVANCE_FETCH_START: function() {
                    o.hasFetchedRelevance = !0
                },
                BILLING_PERKS_RELEVANCE_FETCH_SUCCESS: function(e) {
                    let {
                        res: t
                    } = e;
                    null != t && (r.profileThemesRelevanceExceeded = t.eligible, r.savedAt = new Date().getTime())
                },
                BILLING_PERKS_RELEVANCE_FETCH_FAIL: function() {},
                LOGOUT: function() {
                    o = i, r = l
                }
            })
        },
        176372: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("252931"),
                o = n("557562"),
                u = n("697218"),
                d = n("340412"),
                c = n("719923"),
                E = n("197881"),
                f = n("982457"),
                _ = n("641078"),
                C = n("953314"),
                h = n("986675");
            class I extends i.default {
                _initialize() {
                    l.default.subscribe("POST_CONNECTION_OPEN", this.mayShowAnnouncementModal)
                }
                _terminate() {
                    l.default.unsubscribe("POST_CONNECTION_OPEN", this.mayShowAnnouncementModal)
                }
                constructor(...e) {
                    super(...e), this.mayShowAnnouncementModal = async () => {
                        if (await (0, _.maybeFetchActiveBogoPromotion)(), await (0, o.maybeGetPacksForUser)("try packs modal"), E.ProcessArgs.isDisallowPopupsSet()) return;
                        !(0, s.hasAnyModalOpen)() && (0, h.isEligibleForQ4DropAnnouncementModal)() && (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("986675").then(n.bind(n, "986675"));
                            return t => (0, a.jsx)(e, {
                                renderModalProps: t
                            })
                        }), !(0, s.hasAnyModalOpen)() && await (0, _.isEligibleForBOGOAnnouncementModal)() && (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("981125").then(n.bind(n, "981125"));
                            return t => (0, a.jsx)(e, {
                                renderModalProps: t
                            })
                        });
                        let e = u.default.getCurrentUser(),
                            t = (0, r.getInventoryGuildPacksUserExperimentConfig)({
                                user: e
                            });
                        !(0, s.hasAnyModalOpen)() && t.showTryPacksModalAndV2Copy && (0, C.isEligibleForTryPacksModal)((0, c.isPremium)(e)) && (0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("953314").then(n.bind(n, "953314"));
                            return t => (0, a.jsx)(e, {
                                renderModalProps: t
                            })
                        })
                    }, this._hasTrialOffer = async () => {
                        try {
                            if (d.default.shouldFetchOffer() && await f.default.fetchUserTrialOffer(), d.default.hasFetchedOffer() && d.default.hasAnyUnexpiredOffer()) return !0;
                            return !1
                        } catch (e) {
                            return !1
                        }
                    }
                }
            }
            var T = new I
        },
        78291: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                InventoryTryPacksFeaturedPack: function() {
                    return p
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("65597"),
                r = n("77078"),
                o = n("430568"),
                u = n("13162"),
                d = n("529932"),
                c = n("166465"),
                E = n("557562"),
                f = n("412745"),
                _ = n("697218"),
                C = n("580357"),
                h = n("476263"),
                I = n("587974"),
                T = n("599110"),
                S = n("719923"),
                N = n("49111"),
                A = n("782340"),
                m = n("367969");

            function p(e) {
                let {
                    featuredPack: t,
                    alreadyAddedPackIds: n,
                    headerId: s,
                    autoFocused: p
                } = e, g = (0, d.useEmojiAndSourceGuild)({
                    emojiId: t.featuredEmojiIds[0]
                }), R = (0, i.default)([_.default], () => (0, S.isPremium)(_.default.getCurrentUser())), O = (0, i.default)([c.default], () => c.default.getSortedPackIds().length >= (0, E.getMaxPacksForUserType)(R)), L = e => new Set(n).has(e), v = (e, t, n) => {
                    T.default.track(N.AnalyticEvents.INVENTORY_PACK_ACTION_COMPLETED, {
                        type: e,
                        inventory_pack_id: t,
                        nonce: n
                    })
                };
                if (g.isFetching || null == g.expressionSourceGuild || null == g.expressionSourceGuild.emojis || g.hasJoinedEmojiSourceGuild) return null;
                let M = new Set(t.featuredEmojiIds),
                    P = g.expressionSourceGuild.emojis.filter(e => M.has(e.id)),
                    {
                        expressionSourceGuild: D
                    } = g;
                return (0, a.jsxs)("div", {
                    className: l(m.featuredPack, {
                        [m.dimmed]: O && !L(D.id)
                    }),
                    children: [(0, a.jsx)("div", {
                        className: m.featuredPackGuildIcon,
                        children: (0, a.jsx)(I.default, {
                            mask: I.default.Masks.SQUIRCLE,
                            width: 62,
                            height: 62,
                            className: m.guildIconContainer,
                            children: (0, a.jsx)(h.default, {
                                className: m.featuredPackGuildIconImage,
                                size: h.default.Sizes.LARGER,
                                guild: D
                            })
                        })
                    }), (0, a.jsxs)(r.Text, {
                        className: m.featuredPackTitle,
                        variant: "text-sm/semibold",
                        children: [(0, a.jsx)(C.default, {
                            guild: D,
                            className: m.featuredPackGuildBadge
                        }), D.name]
                    }), (0, a.jsx)("div", {
                        className: m.featuredPackEmojiGrid,
                        children: P.map(e => (0, a.jsx)("div", {
                            className: m.featuredPackEmojiWrapper,
                            children: (0, a.jsx)(o.default, {
                                emojiId: e.id,
                                emojiName: e.name,
                                size: "jumbo"
                            })
                        }, e.id))
                    }), (0, a.jsx)(r.Text, {
                        variant: "text-sm/normal",
                        children: A.default.Messages.INVENTORY_TRY_PACKS_MORE_EMOJI.format({
                            numberOfEmoji: g.expressionSourceGuild.emojis.length - P.length
                        })
                    }), (0, a.jsx)("div", {
                        className: m.featuredPackFooter,
                        children: L(D.id) ? (0, a.jsx)(r.Button, {
                            autoFocus: p,
                            color: r.ButtonColors.PRIMARY,
                            className: m.featuredPackFooterButton,
                            onClick: () => {
                                (0, u.uncollectPack)({
                                    packId: D.id
                                }), v(f.EmojiPopoutType.REMOVE_PACK, D.id, s)
                            },
                            children: (0, a.jsx)(r.Text, {
                                color: "always-white",
                                variant: "text-sm/normal",
                                children: R ? A.default.Messages.INVENTORY_REMOVE_PACK : A.default.Messages.INVENTORY_REMOVE_FREE_PACK
                            })
                        }) : (0, a.jsx)(r.Button, {
                            autoFocus: p,
                            className: m.featuredPackFooterButton,
                            disabled: O && !L(D.id),
                            onClick: () => {
                                (0, u.collectPack)({
                                    packId: D.id
                                }), v(f.EmojiPopoutType.ADD_PACK, D.id, s)
                            },
                            children: (0, a.jsx)(r.Text, {
                                color: "always-white",
                                variant: "text-sm/normal",
                                children: R ? A.default.Messages.INVENTORY_ADD_PACK : A.default.Messages.INVENTORY_ADD_FREE_PACK
                            })
                        })
                    })]
                }, D.id)
            }
        },
        953314: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                isEligibleForTryPacksModal: function() {
                    return G
                },
                default: function() {
                    return j
                }
            }), n("222007"), n("424973");
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("151426"),
                r = n("77078"),
                o = n("997289"),
                u = n("812204"),
                d = n("685665"),
                c = n("10641"),
                E = n("385976"),
                f = n("298878"),
                _ = n("529932"),
                C = n("166465"),
                h = n("557562"),
                I = n("649844"),
                T = n("305961"),
                S = n("697218"),
                N = n("181114"),
                A = n("476765"),
                m = n("216422"),
                p = n("642032"),
                g = n("599110"),
                R = n("701909"),
                O = n("719923"),
                L = n("78291"),
                v = n("646718"),
                M = n("49111"),
                P = n("994428"),
                D = n("365058"),
                y = n("782340"),
                x = n("466701");
            let U = "2023_fall_try_packs_modal",
                b = [{
                    humanReadableName: "ooblets",
                    guildId: "255509377614610433",
                    featuredEmojiIds: ["893216643759620178", "431916066835529728", "431888257849098240", "431887978084696074", "481491021570637825", "893216644376191006"]
                }, {
                    humanReadableName: "haikyuu",
                    guildId: "424012709219008522",
                    featuredEmojiIds: ["758052547733749889", "758052547746463885", "758052547771760752", "758052548023287918", "1154091599148634172", "1154091595143053423"]
                }, {
                    humanReadableName: "lofiGirl",
                    guildId: "707230275175841915",
                    featuredEmojiIds: ["859801993303949343", "859802018197143622", "867335504928309288", "859801993806479401", "1096430408914190408", "859801993262006322"]
                }, {
                    humanReadableName: "townhall",
                    guildId: "169256939211980800",
                    featuredEmojiIds: ["1143953689409769562", "1143284729790070875", "1143273217457410141", "1143956675766796360", "1143957933122662441", "1143287122862809118"]
                }];

            function G(e) {
                if (C.default.getIsFetching() || null == C.default.getPackEmojisTTL() || (0, c.isDismissibleContentDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL)) return !1;
                let t = 0,
                    n = 0,
                    a = new Set(C.default.getSortedPackIds());
                for (let e of b) {
                    let s = e.featuredEmojiIds[0],
                        l = (0, _.getJoinedEmojiSourceGuildData)(E.default, T.default, s);
                    null != l.joinedEmojiSourceGuildRecord ? t++ : a.has(e.guildId) && n++
                }
                return !!(t < b.length / 2 && n + t < b.length && a.size < (0, h.getMaxPacksForUserType)(e)) || (!(0, c.isDismissibleContentDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL) && (g.default.track(M.AnalyticEvents.CHANGE_LOG_CLOSED, {
                    change_log_id: U,
                    seconds_open: 0
                }), (0, c.markDismissibleContentAsDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL, {
                    dismissAction: P.ContentDismissActionType.DISMISS
                })), !1)
            }

            function j(e) {
                let {
                    renderModalProps: t
                } = e, {
                    onClose: n,
                    transitionState: E
                } = t, _ = (0, A.useUID)(), {
                    location: h
                } = (0, o.useAnalyticsContext)(), {
                    analyticsLocations: T
                } = (0, d.default)(u.default.PREMIUM_MARKETING_ANNOUNCEMENT_MODAL), G = (0, l.default)([S.default], () => (0, O.isPremium)(S.default.getCurrentUser())), j = (0, l.useStateFromStoresArray)([C.default], () => {
                    let e = [];
                    return b.map(e => e.guildId).map(e => C.default.getPackByPackId({
                        packId: e
                    })).forEach(t => {
                        (null == t ? void 0 : t.id) != null && e.push(t.id)
                    }), e
                });
                return s.useEffect(() => {
                    (0, c.requestMarkDismissibleContentAsShown)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL);
                    let e = Date.now();
                    return g.default.track(M.AnalyticEvents.CHANGE_LOG_OPENED, {
                        change_log_id: U
                    }), () => {
                        g.default.track(M.AnalyticEvents.CHANGE_LOG_CLOSED, {
                            change_log_id: U,
                            seconds_open: Math.round((Date.now() - e) / 1e3)
                        }), (0, c.markDismissibleContentAsDismissed)(i.DismissibleContent.INVENTORY_TRY_PACKS_MODAL, {
                            dismissAction: P.ContentDismissActionType.DISMISS
                        })
                    }
                }, []), (0, a.jsxs)(r.ModalRoot, {
                    className: x.root,
                    transitionState: E,
                    "aria-labelledby": _,
                    children: [(0, a.jsx)(r.ModalCloseButton, {
                        className: x.closeButton,
                        onClick: n
                    }), (0, a.jsxs)("span", {
                        children: [(0, a.jsx)(p.default, {
                            foreground: x.star1
                        }), (0, a.jsx)(p.default, {
                            foreground: x.star2
                        }), (0, a.jsx)(p.default, {
                            foreground: x.star3
                        }), (0, a.jsx)(f.default, {
                            className: x.betaTag,
                            color: "white"
                        }), (0, a.jsx)(p.default, {
                            foreground: x.star4
                        }), (0, a.jsx)(p.default, {
                            foreground: x.star5
                        })]
                    }), (0, a.jsxs)(r.ModalContent, {
                        className: x.content,
                        scrollbarType: "none",
                        children: [(0, a.jsxs)(r.Heading, {
                            color: "always-white",
                            variant: "heading-xl/extrabold",
                            className: x.headerText,
                            children: [(0, a.jsx)(m.default, {
                                className: x.nitroWheelHeader
                            }), G ? y.default.Messages.INVENTORY_TRY_PACKS_TITLE_NITRO : y.default.Messages.INVENTORY_TRY_PACKS_TITLE_FREEMIUM]
                        }), (0, a.jsx)(r.Text, {
                            color: "always-white",
                            variant: "text-md/normal",
                            className: x.subHeaderText,
                            children: y.default.Messages.INVENTORY_TRY_PACKS_DESCRIPTION_V2.format({
                                helpCenterLink: R.default.getArticleURL(M.HelpdeskArticles.INVENTORY_PACKS)
                            })
                        }), (0, a.jsx)(r.Text, {
                            color: "always-white",
                            variant: "text-md/normal",
                            className: x.subHeaderText,
                            children: G ? y.default.Messages.INVENTORY_TRY_PACKS_SECONDARY_DESCRIPTION_V2_NITRO.format({
                                maxPacks: D.INVENTORY_MAX_PACKS
                            }) : y.default.Messages.INVENTORY_TRY_PACKS_SECONDARY_DESCRIPTION_V2_FREEMIUM
                        }), (0, a.jsx)("div", {
                            className: x.featuredPacks,
                            children: b.map((e, t) => (0, a.jsx)(L.InventoryTryPacksFeaturedPack, {
                                autoFocused: 0 === t,
                                featuredPack: e,
                                alreadyAddedPackIds: j,
                                headerId: _
                            }, e.guildId))
                        }), !G && (() => {
                            let e = Date.now();
                            return (0, a.jsxs)("div", {
                                className: x.footerUpsell,
                                children: [(0, a.jsx)(r.Text, {
                                    className: x.upsellText,
                                    variant: "text-sm/normal",
                                    children: y.default.Messages.INVENTORY_TRY_PACKS_UPSELL.format({
                                        maxPacks: D.INVENTORY_MAX_PACKS
                                    })
                                }), (0, a.jsx)(N.default, {
                                    onlyShineOnHover: !0,
                                    className: x.getNitroButton,
                                    color: r.Button.Colors.GREEN,
                                    size: r.Button.Sizes.SMALL,
                                    onClick: () => {
                                        g.default.track(M.AnalyticEvents.CHANGE_LOG_CTA_CLICKED, {
                                            change_log_id: U,
                                            cta_type: "get_nitro_button",
                                            seconds_open: Math.round((Date.now() - e) / 1e3),
                                            target: "inventory_try_packs_payment_modal"
                                        }), (0, I.default)({
                                            subscriptionTier: v.PremiumSubscriptionSKUs.TIER_2,
                                            analyticsLocations: T,
                                            analyticsObject: {
                                                ...h,
                                                object: M.AnalyticsObjects.BUTTON_CTA,
                                                objectType: M.AnalyticsObjectTypes.TIER_2
                                            },
                                            onClose: e => {
                                                e && n()
                                            }
                                        })
                                    },
                                    children: (0, a.jsxs)(r.Text, {
                                        color: "always-white",
                                        variant: "text-sm/semibold",
                                        className: x.getNitroButtonContents,
                                        children: [(0, a.jsx)(m.default, {
                                            className: x.nitroWheelButton
                                        }), y.default.Messages.PREMIUM_UPSELL_GET_NITRO]
                                    })
                                })]
                            })
                        })()]
                    })]
                })
            }
        },
        106457: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("862205");
            let s = (0, a.createExperiment)({
                kind: "user",
                id: "2023-08_dcf_ml_model",
                label: "DCF ML Perks Relevance Model",
                defaultConfig: {
                    enabled: !1
                },
                treatments: [{
                    id: 0,
                    label: "threshold 0",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 1,
                    label: "threshold 1",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 2,
                    label: "threshold 2",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 3,
                    label: "threshold 3",
                    config: {
                        enabled: !0
                    }
                }, {
                    id: 4,
                    label: "threshold 4",
                    config: {
                        enabled: !0
                    }
                }]
            });
            var l = s
        },
        695827: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("79112"),
                l = n("216422"),
                i = n("489622"),
                r = n("909469"),
                o = n("959905"),
                u = n("485138"),
                d = n("49111"),
                c = n("994428"),
                E = n("782340"),
                f = n("185401"),
                _ = e => {
                    let {
                        notice: t,
                        noticeType: n,
                        dismissCurrentNotice: _
                    } = e, C = (null == t ? void 0 : t.metadata.premiumSubscription) != null, h = (0, o.useLocalizedPromoQuery)();
                    if ((0, u.useTrackLocalizedPricingPromoImpression)(d.AnalyticsSections.NOTIFICATION_BAR, null == h ? void 0 : h.countryCode), null == h) return null;
                    let I = h.countryCode,
                        T = h.currency,
                        S = h.paymentSourceTypes.length > 0;
                    return (0, a.jsxs)(i.default, {
                        color: C ? i.NoticeColors.BRAND : i.NoticeColors.PREMIUM_TIER_2,
                        children: [(0, a.jsx)(i.NoticeCloseButton, {
                            onClick: () => _(c.ContentDismissActionType.UNKNOWN),
                            noticeType: n
                        }), !C && (0, a.jsx)(l.default, {
                            className: f.premiumIcon
                        }), (0, r.getLocalizedPricingNotice)(I, T, S, C), (0, a.jsx)(i.PrimaryCTANoticeButton, {
                            onClick: () => {
                                _(c.ContentDismissActionType.UNKNOWN), s.default.open(d.UserSettingsSections.PREMIUM)
                            },
                            noticeType: n,
                            children: E.default.Messages.LEARN_MORE
                        })]
                    })
                }
        },
        406915: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                prefetch: function() {
                    return v
                },
                PremiumSubscriptionWowMomentForHelper: function() {
                    return M
                },
                default: function() {
                    return P
                }
            }), n("511434"), n("313619"), n("654714"), n("287168"), n("956660"), n("222007");
            var s = n("37983"),
                l = n("884691"),
                i = n("301165"),
                r = n("446674"),
                o = n("913144"),
                u = n("206230"),
                d = n("58608"),
                c = n("599110"),
                E = n("560528"),
                f = n("659500"),
                _ = n("855133"),
                C = n("824986"),
                h = n("921228"),
                I = n("848877"),
                T = n("22230"),
                S = n("604448"),
                N = n("833572"),
                A = n("170486"),
                m = n("49111"),
                p = n("600608"),
                g = n("318342"),
                R = n("788936"),
                O = n("90976"),
                L = n("664182");
            async function v(e) {
                try {
                    o.default.dispatch({
                        type: "PREMIUM_TUTORIAL_IS_FETCHING_WOW_MOMENT_MEDIA",
                        value: !0
                    });
                    let t = e ? S : R;
                    window.matchMedia("(min-width: 1012px) and (max-width: 1980px)").matches || window.matchMedia("(min-height: 720px) and (max-height: 1408px)").matches ? t = e ? N : O : (window.matchMedia("(min-width: 1980px)").matches || window.matchMedia("(min-height: 1408px)").matches) && (t = e ? A : L);
                    let n = fetch(t).then(async e => {
                            let t = await e.blob(),
                                n = window.URL.createObjectURL(t);
                            return n
                        }),
                        a = fetch(e ? T : g).then(async e => {
                            let t = await e.blob(),
                                n = window.URL.createObjectURL(t);
                            return n
                        }),
                        [s, l] = await Promise.all([n, a]);
                    o.default.dispatch({
                        type: "PREMIUM_TUTORIAL_FETCH_WOW_MOMENT_MEDIA_SUCCESS",
                        wumpusMedia: s,
                        helperMedia: l
                    })
                } catch (e) {
                    o.default.dispatch({
                        type: "PREMIUM_TUTORIAL_IS_FETCHING_WOW_MOMENT_MEDIA",
                        value: !1
                    }), (0, _.setIsPersistentHelperHidden)(!1)
                }
            }

            function M() {
                let [e, t] = l.useState(!0), n = (0, r.useStateFromStores)([C.default], () => C.default.wowMomentHelperMedia), a = (0, E.supportsHEVCAlpha)();
                return (0, s.jsx)("div", {
                    children: e && null !== n && (0, s.jsx)(d.default, {
                        className: p.videoWrapperForHelper,
                        autoPlay: !0,
                        onEnded: () => {
                            t(!1), (0, _.setCanPlayWowMoment)(!1)
                        },
                        children: (0, s.jsx)("source", {
                            src: n,
                            type: a ? "video/mp4" : "video/webm"
                        })
                    })
                })
            }
            var P = function() {
                let e = (0, r.useStateFromStores)([u.default], () => u.default.useReducedMotion),
                    t = (0, h.useIsPremiumTutorialEnabled)("PremiumSubscriptionWowMoment"),
                    {
                        wumpusMedia: n,
                        helperMedia: o,
                        isFetchingMedia: T,
                        canPlayWowMoment: S
                    } = (0, r.useStateFromStoresObject)([C.default], () => ({
                        wumpusMedia: C.default.wowMomentWumpusMedia,
                        helperMedia: C.default.wowMomentHelperMedia,
                        isFetchingMedia: C.default.isFetchingWowMomentMedia,
                        canPlayWowMoment: C.default.canPlayWowMoment
                    })),
                    [N, A] = l.useState(!1),
                    g = (0, E.getChromeVersion)(),
                    R = (0, E.supportsHEVCAlpha)(),
                    O = g > 52 || -1 === g || R,
                    L = R ? "video/mp4" : "video/webm",
                    M = O && !e && S && t && null === n && null === o && !1 === T;
                M && v(R), l.useEffect(() => {
                    function t() {
                        let t = (0, h.isPremiumTutorialEnabled)("PremiumSubscriptionWowMoment-maybeActivateWowMoment", !e && O);
                        t && (A(!0), a = setTimeout(() => {
                            A(!1), D(!0), c.default.track(m.AnalyticEvents.PREMIUM_WOW_MOMENT_VIEWED, {
                                wow_moment_type: I.WowMomentTypes.GRADIENT_HIGHLIGHT
                            })
                        }, 2e3)), e && ((0, _.setCanPlayWowMoment)(!1), (0, _.setIsPersistentHelperHidden)(!1)), !O && (0, _.setIsPersistentHelperHidden)(!1)
                    }
                    return f.ComponentDispatch.subscribe(m.ComponentActions.PREMIUM_SUBSCRIPTION_CREATED, t), () => {
                        f.ComponentDispatch.unsubscribe(m.ComponentActions.PREMIUM_SUBSCRIPTION_CREATED, t)
                    }
                }, [e, O]);
                let [P, D] = l.useState(!1), [y, x] = l.useState(!1), U = (0, i.useSpring)({
                    opacity: P ? .2 : 0,
                    config: {
                        duration: 100
                    },
                    immediate: e
                }), b = (0, i.useSpring)({
                    x: y ? "100%" : "-100%",
                    config: {
                        duration: 500
                    },
                    immediate: e || !y
                });
                return l.useEffect(() => {
                    let e = -1;
                    return P && (e = window.setTimeout(() => {
                        x(!0)
                    }, 1e3)), () => {
                        window.clearTimeout(e)
                    }
                }, [P]), l.useEffect(() => {
                    let e = -1;
                    return y && (e = window.setTimeout(() => {
                        x(!1), D(!1), (0, _.setIsPersistentHelperHidden)(!1)
                    }, 1e3)), () => {
                        window.clearTimeout(e)
                    }
                }, [y]), (0, s.jsxs)("div", {
                    className: p.wrapper,
                    children: [N && null !== n && (0, s.jsx)(d.default, {
                        autoPlay: !0,
                        className: p.videoWrapper,
                        onPlay: () => {
                            clearTimeout(a), c.default.track(m.AnalyticEvents.PREMIUM_WOW_MOMENT_VIEWED, {
                                wow_moment_type: I.WowMomentTypes.WUMPUS_FLIGHT
                            })
                        },
                        onTimeUpdate: e => {
                            e.currentTarget.currentTime > 4 && ((0, _.setCanPlayWowMoment)(!0), (0, _.setIsPersistentHelperHidden)(!1))
                        },
                        onEnded: () => {
                            A(!1)
                        },
                        children: (0, s.jsx)("source", {
                            src: n,
                            type: L
                        })
                    }), (0, s.jsx)(i.animated.div, {
                        className: p.gadientHighlight,
                        style: U
                    }), (0, s.jsx)(i.animated.div, {
                        className: p.swipeWrapper,
                        style: b,
                        children: (0, s.jsxs)("svg", {
                            className: p.swipe,
                            viewBox: "0 0 848 1024",
                            fill: "none",
                            children: [(0, s.jsx)("path", {
                                d: "M257.206 1024L0 0H341.333L598.539 1024H257.206Z",
                                fill: "white"
                            }), (0, s.jsx)("path", {
                                d: "M847.975 1024H690.436L433.231 0H590.769L847.975 1024Z",
                                fill: "white"
                            })]
                        })
                    })]
                })
            }
        },
        425538: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            }), n("70102");
            var a = n("37983");
            n("884691");
            var s = n("174727"),
                l = n("812204"),
                i = n("685665"),
                r = n("649844"),
                o = n("216422"),
                u = n("489622"),
                d = n("917247"),
                c = n("646718"),
                E = n("49111"),
                f = n("782340"),
                _ = n("185401"),
                C = function(e) {
                    var t;
                    let {
                        dismissCurrentNotice: n,
                        subscriptionTier: C
                    } = e, {
                        analyticsLocations: h
                    } = (0, i.default)(function(e) {
                        switch (e) {
                            case c.PremiumSubscriptionSKUs.TIER_0:
                                return l.default.PREMIUM_TIER_0_TRIAL_ENDING_NOTICE;
                            case c.PremiumSubscriptionSKUs.TIER_2:
                                return l.default.PREMIUM_TIER_2_TRIAL_ENDING_NOTICE;
                            default:
                                throw Error("Unsupported subscription tier: ".concat(e))
                        }
                    }(C)), I = (0, d.usePremiumTrialOffer)(), T = (0, s.default)(null != I && null != I.expires_at ? Date.parse(I.expires_at) : 0);
                    return null == I || (null === (t = I.subscription_trial) || void 0 === t ? void 0 : t.sku_id) !== C || null == I.expires_at || Object.values(T).every(e => 0 === e) ? null : (0, a.jsxs)(u.default, {
                        color: function(e) {
                            switch (e) {
                                case c.PremiumSubscriptionSKUs.TIER_0:
                                    return u.NoticeColors.PREMIUM_TIER_0;
                                case c.PremiumSubscriptionSKUs.TIER_2:
                                    return u.NoticeColors.PREMIUM_TIER_2;
                                default:
                                    throw Error("Unsupported subscription tier: ".concat(e))
                            }
                        }(C),
                        children: [(0, a.jsx)(u.NoticeCloseButton, {
                            onClick: n
                        }), (0, a.jsx)(o.default, {
                            className: _.premiumIcon
                        }), function(e, t) {
                            switch (e) {
                                case c.PremiumSubscriptionSKUs.TIER_0:
                                    return t.days > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_DAYS_VARIANT.format({
                                        days: t.days
                                    }) : t.hours > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_HOURS_VARIANT.format({
                                        hours: t.hours
                                    }) : f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_MINUTES_VARIANT.format({
                                        minutes: Math.max(t.minutes, 1)
                                    });
                                case c.PremiumSubscriptionSKUs.TIER_2:
                                    return t.days > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_DAYS_VARIANT.format({
                                        days: t.days
                                    }) : t.hours > 0 ? f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_HOURS_VARIANT.format({
                                        hours: t.hours
                                    }) : f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_MINUTES_VARIANT.format({
                                        minutes: Math.max(t.minutes, 1)
                                    });
                                default:
                                    throw Error("Unsupported subscription tier: ".concat(e))
                            }
                        }(C, T), (0, a.jsx)(u.NoticeButton, {
                            onClick: () => {
                                (0, r.default)({
                                    trialId: I.trial_id,
                                    subscriptionTier: C,
                                    analyticsLocations: h,
                                    analyticsObject: {
                                        page: E.AnalyticsPages.IN_APP,
                                        section: E.AnalyticsSections.NOTIFICATION_BAR,
                                        object: E.AnalyticsObjects.BUTTON_CTA
                                    }
                                })
                            },
                            children: function(e) {
                                switch (e) {
                                    case c.PremiumSubscriptionSKUs.TIER_0:
                                        return f.default.Messages.NOTICE_PREMIUM_TIER_0_TRIAL_ENDING_CTA_VARIANT;
                                    case c.PremiumSubscriptionSKUs.TIER_2:
                                        return f.default.Messages.NOTICE_PREMIUM_TIER_2_TRIAL_ENDING_CTA_VARIANT;
                                    default:
                                        throw Error("Unsupported subscription tier: ".concat(e))
                                }
                            }(C)
                        })]
                    })
                }
        },
        516245: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return eP
                }
            }), n("222007");
            var a, s, l = n("37983"),
                i = n("884691"),
                r = n("414456"),
                o = n.n(r),
                u = n("298386"),
                d = n("446674"),
                c = n("151426"),
                E = n("669491"),
                f = n("819855"),
                _ = n("77078"),
                C = n("255397"),
                h = n("366634"),
                I = n("841098"),
                T = n("206230"),
                S = n("812204"),
                N = n("685665"),
                A = n("850391"),
                m = n("10641"),
                p = n("385976"),
                g = n("986632"),
                R = n("538282"),
                O = n("145067"),
                L = n("288518"),
                v = n("415435"),
                M = n("486503"),
                P = n("38766"),
                D = n("393414"),
                y = n("239380"),
                x = n("872173"),
                U = n("42203"),
                b = n("305961"),
                G = n("957255"),
                j = n("660478"),
                w = n("18494"),
                k = n("162771"),
                F = n("677099"),
                B = n("287850"),
                H = n("425190"),
                V = n("36694"),
                Y = n("943519"),
                W = n("772280"),
                K = n("599110"),
                z = n("286235"),
                q = n("855133"),
                Q = n("70723"),
                Z = n("824986"),
                X = n("921228"),
                J = n("406915"),
                $ = n("35099"),
                ee = n("105185"),
                et = n("848877"),
                en = n("646718"),
                ea = n("49111"),
                es = n("13030"),
                el = n("782340"),
                ei = n("693447"),
                er = n("31396"),
                eo = n("357413"),
                eu = n("991015"),
                ed = n("678262"),
                ec = n("436412"),
                eE = n("729386"),
                ef = n("235800");
            let e_ = e => {
                    let {
                        stepDescription: t,
                        hasCompletedStep: n,
                        image: a,
                        onClick: s,
                        tooltipText: i,
                        isEnabled: r = !0,
                        shouldPreventDefaultEmojiPickerToggle: u = !1
                    } = e;
                    return (0, l.jsx)(_.Tooltip, {
                        shouldShow: !r,
                        text: i,
                        position: "right",
                        tooltipContentClassName: ei.tooltipText,
                        spacing: 20,
                        children: e => {
                            let {
                                onMouseEnter: i,
                                onMouseLeave: d
                            } = e;
                            return (0, l.jsx)(_.Clickable, {
                                onMouseEnter: i,
                                onMouseLeave: d,
                                onClick: () => {
                                    r && s()
                                },
                                className: o({
                                    [ei.tutorialLinkcontainer]: !0,
                                    [ei.tutorialLinkcontainerEnabled]: r
                                }),
                                "data-premium-tutorial-persistent-coachmark-emoji-step": u,
                                children: (0, l.jsxs)("div", {
                                    className: o({
                                        [ei.tutorialLinkBackground]: !0
                                    }),
                                    children: [(0, l.jsx)("div", {
                                        className: o({
                                            [ei.tutorialLinkImageContainer]: !0,
                                            [ei.tutorialLinkImageContainerDisabled]: !r
                                        }),
                                        children: a
                                    }), (0, l.jsx)(_.Text, {
                                        variant: "text-sm/medium",
                                        className: o({
                                            [ei.tutorialLink]: !0,
                                            [ei.tutorialLinkEnabled]: r,
                                            [ei.tutorialLinkDisabled]: !r
                                        }),
                                        children: t
                                    }), n ? (0, l.jsx)(V.default, {
                                        className: o({
                                            [ei.tutorialCheckmark]: !0,
                                            [ei.tutorialCheckmarkEnabled]: r,
                                            [ei.tutorialCheckmarkDisabled]: !r
                                        })
                                    }) : (0, l.jsx)("div", {
                                        className: ei.rightCaretContainer,
                                        children: (0, l.jsx)(W.default, {
                                            width: 16,
                                            className: o({
                                                [ei.tutorialRightCaret]: !0,
                                                [ei.tutorialRightCaretEnabled]: r,
                                                [ei.tutorialRightCaretDisabled]: !r
                                            })
                                        })
                                    })]
                                })
                            })
                        }
                    })
                },
                eC = (e, t) => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.UNLOCK_EMOJI_CLICKED
                    });
                    let n = t ? A.ChatInputTypes.SIDEBAR : A.ChatInputTypes.NORMAL;
                    (0, R.toggleExpressionPicker)(es.ExpressionPickerViewType.EMOJI, n), (0, et.dismissPremiumTutorialTooltip)(c.DismissibleContent.PREMIUM_TUTORIAL_EMOJI_PICKER_COMPOSER_TOOLTIP);
                    let a = (0, ee.getSubsteps)(en.PremiumTutorialSteps.CUSTOM_EMOJI);
                    a.length < 1 ? z.default.captureMessage("[Premium Tutorial] No available substeps from PremiumTutorialSteps.CUSTOM_EMOJI") : (0, $.setActiveSubstep)(a[0]), (0, q.setNavigatedFromHelper)(!0)
                },
                eh = (e, t) => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: t,
                        helper_action: en.PremiumFeatureHelperActions.CUSTOM_PROFILES_CLICKED
                    });
                    let n = (0, ee.getSubsteps)(en.PremiumTutorialSteps.PROFILE_CUSTOMIZATION);
                    n.length < 1 ? z.default.captureMessage("[Premium Tutorial] No available substeps from PremiumTutorialSteps.PROFILE_CUSTOMIZATION") : (0, $.setActiveSubstep)(n[0]), e(), (0, q.setNavigatedFromHelper)(!0)
                },
                eI = e => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.SERVER_BOOSTS_CLICKED
                    }), (0, O.showGuildHeaderPopout)(!0), (0, et.dismissPremiumTutorialTooltip)(c.DismissibleContent.PREMIUM_TUTORIAL_SERVER_MENU_TOOLTIP);
                    let t = (0, ee.getSubsteps)(en.PremiumTutorialSteps.BOOSTING);
                    t.length < 1 ? z.default.captureMessage("[Premium Tutorial] No available substeps from PremiumTutorialSteps.BOOSTING") : (0, $.setActiveSubstep)(t[0]), (0, q.setNavigatedFromHelper)(!0)
                };
            (s = a || (a = {}))[s.JUMP_TO_DM = 0] = "JUMP_TO_DM", s[s.JUMP_TO_SERVER = 1] = "JUMP_TO_SERVER", s[s.OPEN_CHAT = 2] = "OPEN_CHAT";
            let eT = (e, t, n, a) => {
                    let {
                        canUserSendEmoji: s,
                        userCantSendEmojiReason: l,
                        actionType: i,
                        firstChannelWithNoNewMessages: r,
                        guildId: o
                    } = (0, d.useStateFromStoresObject)([p.default, G.default, j.default], () => {
                        let s = p.default.hasUsableEmojiInAnyGuild();
                        if (!s) return {
                            canUserSendEmoji: !1,
                            userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_EMOJI_FLOW_DISABLED_TOOLTIP
                        };
                        if (null == a) {
                            let n = e.find(e => !j.default.hasUnread(e));
                            return null != n ? {
                                canUserSendEmoji: !0,
                                userCantSendEmojiReason: void 0,
                                actionType: 0,
                                firstChannelWithNoNewMessages: n
                            } : t.length > 0 ? {
                                canUserSendEmoji: !0,
                                userCantSendEmojiReason: void 0,
                                actionType: 1,
                                guildId: t[0]
                            } : {
                                canUserSendEmoji: !1,
                                userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_OPEN_CHANNEL_TOOLTIP
                            }
                        }
                        if (a.type !== u.ChannelTypes.DM && a.type !== u.ChannelTypes.GUILD_TEXT && a.type !== u.ChannelTypes.GROUP_DM && a.type !== u.ChannelTypes.PUBLIC_THREAD && a.type !== u.ChannelTypes.PRIVATE_THREAD && a.type !== u.ChannelTypes.GUILD_VOICE) return {
                            canUserSendEmoji: !1,
                            userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_CHANNEL_DOESNT_ALLOW_EMOJI_TOOLTIP
                        };
                        if (null != n) {
                            if (!G.default.can(ea.Permissions.SEND_MESSAGES, a)) return {
                                canUserSendEmoji: !1,
                                userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_OPEN_CHANNEL_TOOLTIP
                            };
                            if (!G.default.can(ea.Permissions.USE_EXTERNAL_EMOJIS, a)) return {
                                canUserSendEmoji: !1,
                                userCantSendEmojiReason: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_CHANNEL_DOESNT_ALLOW_EMOJI_TOOLTIP
                            }
                        }
                        return {
                            canUserSendEmoji: !0,
                            userCantSendEmojiReason: void 0,
                            actionType: 2
                        }
                    });
                    return {
                        canUserSendEmoji: s,
                        userCantSendEmojiReason: l,
                        onClickEmojiTutorial: () => {
                            s && (0 === i && void 0 !== r ? (0, D.transitionTo)(ea.Routes.CHANNEL(ea.ME, r)) : 1 === i && void 0 !== o ? (0, y.transitionToGuild)(o) : 2 === i && void 0 !== a && a.type === u.ChannelTypes.GUILD_VOICE && C.default.updateChatOpen(a.id, !0))
                        }
                    }
                },
                eS = e => {
                    let {
                        isBoostStepEnabled: t,
                        currentGuild: n
                    } = (0, d.useStateFromStoresObject)([k.default, b.default], () => {
                        if (0 === e.length) return {
                            isBoostStepEnabled: !1
                        };
                        let t = k.default.getGuildId(),
                            n = b.default.getGuild(t);
                        return {
                            isBoostStepEnabled: !0,
                            currentGuild: n
                        }
                    });
                    return {
                        isBoostStepEnabled: t,
                        onClickBoostingTutorial: () => {
                            t && null == n && e.length > 0 && (0, y.transitionToGuild)(e[0])
                        }
                    }
                },
                eN = e => {
                    let {
                        hasCompletedProfileTutorial: t,
                        hasCompletedBoostTutorial: n,
                        hasCompletedEmojiTutorial: a,
                        analyticsLocations: s
                    } = e, r = (0, P.default)({
                        analyticsLocation: {
                            page: ea.AnalyticsPages.PREMIUM_TRIAL_TUTORIAL_COACHMARK
                        }
                    }), o = (0, d.useStateFromStores)([k.default], () => k.default.getGuildId()), c = (0, d.useStateFromStores)([w.default], () => w.default.getChannelId(o)), E = (0, d.useStateFromStores)([U.default], () => U.default.getChannel(c)), _ = null != E && E.type === u.ChannelTypes.GUILD_VOICE, C = (0, d.useStateFromStoresArray)([F.default], () => F.default.getFlattenedGuildIds()), h = (0, d.useStateFromStoresArray)([B.default, L.default, M.default], () => {
                        let e = B.default.getPrivateChannelIds();
                        return (0, v.filterOutMessageRequestsAndSpamById)(e, [L.default, M.default])
                    }), {
                        canUserSendEmoji: T,
                        userCantSendEmojiReason: S,
                        onClickEmojiTutorial: N
                    } = eT(h, C, o, E), {
                        isBoostStepEnabled: A,
                        onClickBoostingTutorial: m
                    } = eS(C), R = (0, I.default)();
                    return i.useEffect(() => {
                        !T && K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_TUTORIAL_FLOW_DISABLED, {
                            flow: "emoji"
                        }), !A && K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_TUTORIAL_FLOW_DISABLED, {
                            flow: "boost"
                        })
                    }, [T, A]), (0, l.jsxs)("div", {
                        className: ei.tutorialStepsContainer,
                        children: [(0, l.jsx)(e_, {
                            stepDescription: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CUSTOM_PROFILES,
                            hasCompletedStep: t,
                            image: (0, l.jsx)("img", {
                                alt: "",
                                src: ed
                            }),
                            onClick: () => {
                                (0, x.removeDismissedContent)(en.PremiumTutorialSteps.PROFILE_CUSTOMIZATION), eh(r, s)
                            }
                        }), (0, l.jsx)("hr", {
                            className: ei.tutorialLinkSeparator
                        }), (0, l.jsx)(e_, {
                            stepDescription: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_EMOJI,
                            hasCompletedStep: a,
                            image: (0, l.jsx)("img", {
                                alt: "",
                                src: eu,
                                className: ei.emojiTutorialImg
                            }),
                            onClick: () => {
                                null == N || N(), (0, x.removeDismissedContent)(en.PremiumTutorialSteps.CUSTOM_EMOJI), eC(s, _), ! function() {
                                    let e = k.default.getGuildId(),
                                        t = 0;
                                    p.default.getTopEmoji(e).length > 0 && t++, p.default.getDisambiguatedEmojiContext(e).favoriteEmojisWithoutFetchingLatest.length > 0 && t++, p.default.getDisambiguatedEmojiContext(e).getFrequentlyUsedEmojisWithoutFetchingLatest().length > 0 && t++, g.EmojiPickerStore.setActiveCategoryIndex(t)
                                }()
                            },
                            tooltipText: S,
                            isEnabled: T,
                            shouldPreventDefaultEmojiPickerToggle: !0
                        }), (0, l.jsx)("hr", {
                            className: ei.tutorialLinkSeparator
                        }), (0, l.jsx)(e_, {
                            stepDescription: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_BOOSTS,
                            hasCompletedStep: n,
                            image: (0, l.jsx)("img", {
                                alt: "",
                                src: (0, f.isThemeDark)(R) ? er : eo,
                                className: ei.boostTutorialImg
                            }),
                            onClick: () => {
                                null == m || m(), (0, x.removeDismissedContent)(en.PremiumTutorialSteps.BOOSTING), eI(s)
                            },
                            tooltipText: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_BOOST_FLOW_DISABLED_TOOLTIP,
                            isEnabled: A
                        })]
                    })
                },
                eA = (e, t) => {
                    if (!t && e >= 1 && e < 3) return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_WELCOME_BACK;
                    switch (e) {
                        case 1:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER_COMPLETED_ONE;
                        case 2:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER_LAST_ONE;
                        case 3:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER_COMPLETED;
                        default:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_HEADER
                    }
                },
                em = e => {
                    switch (e) {
                        case 1:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER_CHOOSE_ANOTHER_PERK;
                        case 2:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER_LAST_ONE;
                        case 3:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER_COMPLETED;
                        default:
                            return el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_SUB_HEADER
                    }
                },
                ep = e => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.EXPLORE_ALL_PERKS_CLICKED
                    }), (0, D.transitionTo)(ea.Routes.APPLICATION_STORE)
                },
                eg = e => {
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: en.PremiumFeatureHelperActions.HELPER_DISMISSED
                    }), (0, m.markDismissibleContentAsDismissed)(c.DismissibleContent.PREMIUM_TUTORIAL_EXPERIENCE)
                },
                eR = e => {
                    let t = Z.default.isPersistentCoachmarkCollapsed,
                        n = t ? en.PremiumFeatureHelperActions.HELPER_UNCOLLAPSED : en.PremiumFeatureHelperActions.HELPER_COLLAPSED;
                    K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                        location_stack: e,
                        helper_action: n
                    }), (0, q.togglePersistentHelper)()
                },
                eO = e => {
                    let {
                        analyticsLocations: t,
                        setDisplayDismissConfirmation: n,
                        dismissedTutorialStepsLength: a,
                        hasCompletedStepDuringSession: s,
                        hasCompletedProfileTutorial: i,
                        hasCompletedBoostTutorial: r,
                        hasCompletedEmojiTutorial: o,
                        hasCompletedAllSteps: u
                    } = e;
                    return (0, l.jsxs)("div", {
                        className: ei.expandedCoachmarkContent,
                        children: [(0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkHeader,
                            variant: "text-md/semibold",
                            children: eA(a, s)
                        }), (0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkSubheader,
                            variant: "text-sm/normal",
                            children: em(a)
                        }), (0, l.jsx)(eN, {
                            hasCompletedProfileTutorial: i,
                            hasCompletedBoostTutorial: r,
                            hasCompletedEmojiTutorial: o,
                            analyticsLocations: t
                        }), u && (0, l.jsxs)(l.Fragment, {
                            children: [(0, l.jsx)("hr", {
                                className: ei.tutorialLinkSeparator
                            }), (0, l.jsxs)("div", {
                                className: ei.expandedCoachmarkFooterContent,
                                children: [(0, l.jsx)(_.Clickable, {
                                    onClick: () => n(!0),
                                    children: (0, l.jsx)(_.Text, {
                                        variant: "text-sm/normal",
                                        className: ei.closeHelperLink,
                                        children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_MARKETING_CLOSE
                                    })
                                }), (0, l.jsx)(_.Clickable, {
                                    onClick: () => ep(t),
                                    children: (0, l.jsx)(_.Text, {
                                        variant: "text-sm/normal",
                                        className: ei.seeAllPerksLink,
                                        children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_MARKETING_REDIRECT
                                    })
                                })]
                            })]
                        })]
                    })
                },
                eL = e => {
                    let {
                        analyticsLocations: t,
                        setDisplayDismissConfirmation: n
                    } = e;
                    return (0, l.jsxs)("div", {
                        className: ei.expandedCoachmarkContent,
                        children: [(0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkHeader,
                            variant: "text-md/semibold",
                            children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_CONFIRMATION_HEADER
                        }), (0, l.jsx)(_.Text, {
                            className: ei.expandedCoachmarkSubheader,
                            variant: "text-sm/normal",
                            children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_CONFIRMATION_SUBHEADER
                        }), (0, l.jsx)("hr", {
                            className: ei.tutorialDismissConfirmationSeparator
                        }), (0, l.jsxs)("div", {
                            className: ei.expandedCoachmarkFooterContent,
                            children: [(0, l.jsx)(_.Button, {
                                onClick: () => n(!1),
                                look: _.ButtonLooks.BLANK,
                                color: ei.cancelButtonColor,
                                children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_CANCEL
                            }), (0, l.jsx)(_.Button, {
                                onClick: () => eg(t),
                                children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COACHMARK_CLOSE_YES
                            })]
                        })]
                    })
                },
                ev = e => {
                    let {
                        analyticsLocations: t
                    } = e, n = (0, X.useAllDismissedPremiumTutorialSteps)(), a = n.includes(en.PremiumTutorialSteps.PROFILE_CUSTOMIZATION), s = n.includes(en.PremiumTutorialSteps.BOOSTING), r = n.includes(en.PremiumTutorialSteps.CUSTOM_EMOJI), [u, c] = i.useState(!1);
                    i.useEffect(() => {
                        a && s && r && c(!0)
                    }, [a, s, r]);
                    let f = (0, d.useStateFromStores)([Q.default], () => Q.default.hasCompletedStepDuringSession),
                        [C, I] = i.useState(!1),
                        S = (0, d.useStateFromStores)([T.default], () => T.default.useReducedMotion),
                        N = (0, d.useStateFromStores)([Z.default], () => Z.default.canPlayWowMoment);
                    i.useEffect(() => () => {
                        N && (0, q.setCanPlayWowMoment)(!1)
                    }, [N]);
                    let A = N && !S;
                    return (0, l.jsxs)("div", {
                        className: o(ei.expandedCoachmarkContentContainer, A && ei.slideInFromBottomAnimation),
                        children: [A && (0, l.jsx)(J.PremiumSubscriptionWowMomentForHelper, {}), (0, l.jsxs)("div", {
                            className: ei.expandedCoachmarkBannerContainer,
                            children: [(0, l.jsx)("div", {
                                className: ei.expandedCoachmarkBannerBranding,
                                children: (0, l.jsx)(Y.default, {
                                    color: E.default.unsafe_rawColors.WHITE_500.css,
                                    height: "26px"
                                })
                            }), (0, l.jsx)("div", {
                                className: ei.expandedCoachmarkBannerImageContainer,
                                children: f || u ? (0, l.jsx)("img", {
                                    alt: "",
                                    src: ec,
                                    className: ei.expandedCoachmarkCelebrationBannerImage
                                }) : (0, l.jsx)("img", {
                                    alt: "",
                                    src: ef,
                                    className: ei.expandedCoachmarkBannerImage
                                })
                            }), (0, l.jsx)(_.Clickable, {
                                onClick: () => eR(t),
                                className: ei.expandedCoachmarkCollapseButtonContainer,
                                children: (0, l.jsx)(h.default, {
                                    open: !1,
                                    className: ei.expandedCoachmarkCollapseButton
                                })
                            })]
                        }), C ? (0, l.jsx)(eL, {
                            analyticsLocations: t,
                            setDisplayDismissConfirmation: I
                        }) : (0, l.jsx)(eO, {
                            analyticsLocations: t,
                            setDisplayDismissConfirmation: I,
                            dismissedTutorialStepsLength: n.length,
                            hasCompletedStepDuringSession: f,
                            hasCompletedProfileTutorial: a,
                            hasCompletedBoostTutorial: s,
                            hasCompletedEmojiTutorial: r,
                            hasCompletedAllSteps: u
                        })]
                    })
                },
                eM = e => {
                    let {
                        analyticsLocations: t
                    } = e;
                    return (0, l.jsxs)(_.Clickable, {
                        onClick: () => eR(t),
                        className: ei.collapsedCoachmarkContainer,
                        children: [(0, l.jsx)("img", {
                            alt: "",
                            src: eE,
                            className: ei.collapsedCoachmarkImage
                        }), (0, l.jsx)(_.Text, {
                            variant: "text-sm/medium",
                            className: ei.collapsedCoachmarkHeading,
                            children: el.default.Messages.PREMIUM_TRIAL_TUTORIAL_COLLAPSED_COACHMARK_HEADING
                        }), (0, l.jsx)(H.default, {
                            className: ei.collapsedCoachmarkExpandButton
                        })]
                    })
                };
            var eP = () => {
                let e = (0, d.useStateFromStores)([Z.default], () => Z.default.isPersistentCoachmarkCollapsed),
                    {
                        analyticsLocations: t
                    } = (0, N.default)(S.default.PREMIUM_TRIAL_TUTORIAL_COACHMARK),
                    n = (0, d.useStateFromStores)([Z.default], () => Z.default.isPersistentHelperHidden);
                return n ? (0, l.jsx)(l.Fragment, {}) : (K.default.track(ea.AnalyticEvents.PREMIUM_FEATURE_HELPER_ACTIONS, {
                    location_stack: t,
                    helper_action: en.PremiumFeatureHelperActions.HELPER_RENDERED
                }), e ? (0, l.jsx)(eM, {
                    analyticsLocations: t
                }) : (0, l.jsx)(ev, {
                    analyticsLocations: t
                }))
            }
        },
        266782: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("78938"),
                l = n("782340"),
                i = () => (0, a.jsx)(s.default, {
                    copy: l.default.Messages.NEW
                })
        },
        630140: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("152584"),
                r = n("316272"),
                o = n("335189"),
                u = n("473591"),
                d = n("929423"),
                c = n("783142"),
                E = n("697218"),
                f = n("719923"),
                _ = n("75015");
            class C extends r.default {
                _initialize() {
                    l.default.subscribe("PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL", this.maybeOpenProfilePreviewModal)
                }
                _terminate() {
                    l.default.unsubscribe("PROFILE_CUSTOMIZATION_OPEN_PREVIEW_MODAL", this.maybeOpenProfilePreviewModal)
                }
                maybeOpenProfilePreviewModal(e) {
                    let {
                        imageSrc: t,
                        file: l,
                        uploadType: r,
                        guildId: C,
                        isTryItOutFlow: h
                    } = e, I = u.default.isEditingClydeProfile(), T = I ? o.setPendingAvatar : null != C ? d.setPendingAvatar : i.setPendingAvatar, S = I ? o.setPendingBanner : null != C ? d.setPendingBanner : c.setPendingBanner, N = E.default.getCurrentUser();
                    if (r === _.UploadTypes.AVATAR) {
                        if (h) {
                            (0, c.setTryItOutAvatar)(t);
                            return
                        }
                        let e = f.default.canUseAnimatedAvatar(N);
                        if (e || "image/gif" !== l.type || I) {
                            T(t);
                            return
                        }(0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("745544").then(n.bind(n, "745544"));
                            return n => (0, a.jsx)(e, {
                                avatarSrc: t,
                                onSubscribe: () => T(t),
                                ...n
                            })
                        })
                    } else if (r === _.UploadTypes.BANNER) {
                        if (h) {
                            (0, c.setTryItOutBanner)(t);
                            return
                        }
                        let e = f.default.canUsePremiumProfileCustomization(N);
                        if (e || I) {
                            S(t);
                            return
                        }(0, s.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("745544").then(n.bind(n, "745544"));
                            return n => (0, a.jsx)(e, {
                                bannerSrc: t,
                                onSubscribe: () => S(t),
                                ...n
                            })
                        })
                    }
                }
            }
            var h = new C
        },
        507917: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("369964"),
                i = n("38766"),
                r = n("397336"),
                o = n("782340"),
                u = n("102743");

            function d() {
                let e = (0, i.default)({
                    scrollPosition: r.ProfileCustomizationScrollPositions.TRY_IT_OUT
                });
                return (0, a.jsx)(l.default, {
                    isPremiumFeature: !0,
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0,
                    artClassName: u.profileThemesArt,
                    onTryFeature: e,
                    header: o.default.Messages.PROFILE_THEMES_TOOLTIP_TITLE,
                    body: o.default.Messages.PROFILE_THEMES_TOOLTIP_DESCRIPTION_PREMIUM,
                    dismissibleContent: s.DismissibleContent.PROFILE_THEMES_FEATURE_EDUCATION_TOOLTIP_TAKE_2
                })
            }
        },
        189293: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchUserProfileEffects: function() {
                    return o
                }
            });
            var a = n("872717"),
                s = n("913144"),
                l = n("448993");
            n("845962");
            var i = n("49111");
            let r = e => {
                    let {
                        sku_id: t,
                        ...n
                    } = e;
                    return {
                        id: n.id,
                        skuId: t,
                        config: {
                            ...n,
                            skuId: t
                        }
                    }
                },
                o = async () => {
                    s.default.dispatch({
                        type: "USER_PROFILE_EFFECTS_FETCH"
                    });
                    try {
                        let {
                            body: e
                        } = await a.default.get(i.Endpoints.USER_PROFILE_EFFECTS), t = null == e ? void 0 : e.profile_effect_configs, n = t.map(r);
                        s.default.dispatch({
                            type: "USER_PROFILE_EFFECTS_FETCH_SUCCESS",
                            profileEffects: n
                        })
                    } catch (e) {
                        throw s.default.dispatch({
                            type: "USER_PROFILE_EFFECTS_FETCH_FAILURE",
                            error: e
                        }), new l.APIError(e)
                    }
                }
        },
        91990: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("222007");
            var a = n("913144"),
                s = n("316272"),
                l = n("189293"),
                i = n("662286");
            class r extends s.default {
                _initialize() {
                    a.default.subscribe("CONNECTION_OPEN", this.handleConnectionOpen)
                }
                _terminate() {
                    a.default.unsubscribe("CONNECTION_OPEN", this.handleConnectionOpen)
                }
                constructor(...e) {
                    super(...e), this.handleConnectionOpen = () => {
                        (0, i.canUseProfileEffects)({
                            location: "ProfileEffectManager",
                            autoTrackExposure: !1
                        }) && (0, l.fetchUserProfileEffects)()
                    }
                }
            }
            var o = new r
        },
        226511: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("446674"),
                s = n("95410"),
                l = n("913144"),
                i = n("525065"),
                r = n("305961"),
                o = n("957255"),
                u = n("69741"),
                d = n("49111");
            let c = "publicUpsellChannelNoticeGuilds",
                E = new Set;
            class f extends a.default.Store {
                initialize() {
                    var e;
                    this.waitFor(o.default, r.default, i.default), this.syncWith([o.default, r.default, i.default], d.NOOP), E = (e = new Set(s.default.get(c)), e)
                }
                isVisible(e) {
                    if (null == e) return;
                    let t = i.default.getMemberCount(e.id);
                    return !E.has(e.id) && null != t && t >= u.COMMUNITY_UPSELL_MINIMUM_GUILD_SIZE && o.default.can(d.Permissions.ADMINISTRATOR, e) && !e.hasFeature(d.GuildFeatures.COMMUNITY)
                }
            }
            f.displayName = "EnablePublicGuildUpsellNoticeStore";
            var _ = new f(l.default, {
                PUBLIC_UPSELL_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    if (!E.has(t)) return E.add(t), s.default.set(c, E), !0
                }
            })
        },
        947337: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("363025"),
                i = n("963662"),
                r = n("592407"),
                o = n("49111"),
                u = n("782340"),
                d = n("175717"),
                c = e => {
                    let {
                        guild: t
                    } = e, n = s.useCallback(() => {
                        (0, l.hideEnablePublicGuildUpsellNotice)(t.id)
                    }, [t.id]);
                    return (0, a.jsx)(i.default, {
                        guild: t,
                        onDismissed: n,
                        onClick: () => r.default.open(t.id, o.GuildSettingsSections.COMMUNITY),
                        message: u.default.Messages.NOTICE_ENABLE_PUBLIC_GUILD_UPSELL_MESSAGE,
                        trackingSource: o.ChannelNoticeCtaSources.ENABLE_PUBLIC_GUILD_UPSELL_NOTICE,
                        type: o.ChannelNoticeTypes.PUBLIC_UPSELL,
                        image: d,
                        cta: u.default.Messages.LEARN_MORE
                    })
                }
        },
        578287: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getRemoteIconURL: function() {
                    return x
                },
                transformChannel: function() {
                    return b
                },
                transformInternalTextMessage: function() {
                    return G
                },
                transformVoiceState: function() {
                    return j
                },
                transformRelationship: function() {
                    return w
                },
                isMatchingOrigin: function() {
                    return k
                },
                hasMessageReadPermission: function() {
                    return F
                },
                getVoiceConnectionState: function() {
                    return B
                },
                computeActivityFlags: function() {
                    return H
                },
                validateActivityInvite: function() {
                    return V
                },
                fetchApplicationsRPC: function() {
                    return Y
                },
                processSocketThrottlers: function() {
                    return W
                },
                validateOriginAndUpdateSocket: function() {
                    return K
                },
                getDeprecatedVoiceSettingsWithShortcut: function() {
                    return z
                },
                getVoiceSettingsWithShortcut: function() {
                    return q
                },
                validatePostMessageTransport: function() {
                    return Q
                },
                validateApplication: function() {
                    return Z
                }
            }), n("222007"), n("424973"), n("70102"), n("781738"), n("917351");
            var a, s = n("746379"),
                l = n.n(s),
                i = n("872717"),
                r = n("497"),
                o = n("95410"),
                u = n("819689"),
                d = n("711562"),
                c = n("367376"),
                E = n("574073"),
                f = n("845579"),
                _ = n("233069"),
                C = n("766274"),
                h = n("42203"),
                I = n("305961"),
                T = n("42887"),
                S = n("377253"),
                N = n("824563"),
                A = n("697218"),
                m = n("800762"),
                p = n("387111"),
                g = n("655518"),
                R = n("861309"),
                O = n("694352"),
                L = n("49111");
            let v = null !== (a = l.parse(window.GLOBAL_ENV.API_ENDPOINT, !1, !0).host) && void 0 !== a ? a : "localhost",
                M = function() {
                    let e = v.split(":")[0];
                    if (!e.includes(".")) return e;
                    let t = e.split("."),
                        n = t[t.length - 1];
                    return /^\d+$/.test(n) ? e : t.slice(-2).join(".")
                }(),
                P = new RegExp("^".concat(g.default.escape("https://"), "(?:[a-z]+\\.)?(").concat(g.default.escape(M), "|discordapp.com|discord.com)$")),
                D = {};

            function y(e) {
                return "customEmoji" === e.type && (e.type = "emoji"), "emoji" === e.type && e.src && (e.src = x(e.src)), Array.isArray(e.content) && (e.content = e.content.map(y)), e
            }

            function x(e) {
                return /^http/.test(e) ? e : "".concat(location.protocol, "//").concat(location.host).concat("/" === e.charAt(0) ? "" : "/").concat(e)
            }

            function U(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                return t.indexOf(e) > -1
            }

            function b(e, t) {
                let n = [],
                    a = e.getGuildId();
                return ![L.ChannelTypes.GUILD_CATEGORY, ...(0, _.GUILD_VOCAL_CHANNEL_TYPES)].includes(e.type) && n.push(new Promise(t => {
                    S.default.whenReady(e.id, () => t()), u.default.fetchMessages({
                        channelId: e.id,
                        limit: L.MAX_MESSAGES_PER_CHANNEL
                    })
                })), Promise.all(n).then(() => {
                    var n;
                    let s = !e.isNSFW() || (null === (n = A.default.getCurrentUser()) || void 0 === n ? void 0 : n.nsfwAllowed) === !0,
                        l = s && t ? S.default.getMessages(e.id).toArray().map(G) : [],
                        i = Object.values(m.default.getVoiceStatesForChannel(e.id)).map(t => j(a, e.id, t));
                    return {
                        id: e.id,
                        name: e.name,
                        type: e.type,
                        topic: e.topic,
                        bitrate: e.bitrate,
                        user_limit: e.userLimit,
                        guild_id: a,
                        position: e.position,
                        messages: l,
                        voice_states: i
                    }
                })
            }

            function G(e) {
                let t = c.default.parseToAST(e.content, !0, {
                        channelId: e.channel_id
                    }).map(y),
                    n = h.default.getChannel(e.channel_id),
                    a = null != e.author ? (0, E.getUserAuthor)(new C.default(e.author), n) : void 0;
                return {
                    id: e.id,
                    blocked: e.blocked,
                    bot: e.bot,
                    content: e.content,
                    content_parsed: t.length ? t : void 0,
                    nick: null == a ? void 0 : a.nick,
                    author_color: null == a ? void 0 : a.colorString,
                    edited_timestamp: e.edited_timestamp || e.editedTimestamp,
                    timestamp: e.timestamp,
                    tts: e.tts,
                    mentions: e.mentions,
                    mention_everyone: e.mention_everyone || e.mentionEveryone,
                    mention_roles: e.mention_roles || e.mentionRoles,
                    embeds: e.embeds,
                    attachments: e.attachments,
                    author: e.author,
                    pinned: e.pinned,
                    type: e.type
                }
            }

            function j(e, t, n) {
                let {
                    mute: a,
                    deaf: s,
                    selfMute: l,
                    selfDeaf: i,
                    suppress: r,
                    userId: o
                } = n, u = A.default.getUser(o);
                if (null == u) throw Error("Invalid user id: ".concat(o));
                return {
                    nick: p.default.getName(e, t, u),
                    mute: T.default.isLocalMute(u.id),
                    volume: T.default.getLocalVolume(u.id),
                    pan: T.default.getLocalPan(u.id),
                    voice_state: {
                        mute: a,
                        deaf: s,
                        self_mute: l,
                        self_deaf: i,
                        suppress: r
                    },
                    user: (0, O.default)(u)
                }
            }

            function w(e, t, n) {
                let a = A.default.getUser(t);
                return {
                    type: e,
                    user: null != a ? (0, O.default)(a) : null,
                    presence: {
                        status: N.default.getStatus(t),
                        activity: null != n ? N.default.getApplicationActivity(t, n) : N.default.getPrimaryActivity(t)
                    }
                }
            }

            function k(e) {
                let t;
                if (null == e) return !1;
                let n = window.location.origin;
                if (e === n) return !0;
                try {
                    t = l.parse(e).hostname
                } catch (e) {
                    return !1
                }
                return window.location.hostname === t && "localhost" === t || null == e.match("staging") && (!!(P.test(e) && P.test(n)) || !1)
            }

            function F(e, t, n) {
                let a = I.default.getGuild(e.getGuildId()),
                    s = null != a ? a.getApplicationId() : e.getApplicationId();
                return s === t || n.indexOf(L.OAuth2Scopes.MESSAGES_READ) > -1
            }

            function B(e) {
                switch (e) {
                    case L.RTCConnectionStates.RTC_CONNECTED:
                    case L.RTCConnectionStates.RTC_CONNECTING:
                    case L.RTCConnectionStates.RTC_DISCONNECTED:
                        return e.replace(/^RTC_/, "VOICE_");
                    default:
                        return e
                }
            }

            function H(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    {
                        instance: n,
                        secrets: a,
                        party: s
                    } = e,
                    l = 0;
                return (n && (l |= L.ActivityFlags.INSTANCE), (null == a ? void 0 : a.join) != null && (l |= L.ActivityFlags.JOIN), t) ? (l |= L.ActivityFlags.EMBEDDED, l |= L.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL) : (((null == s ? void 0 : s.privacy) === L.ActivityPartyPrivacy.PUBLIC || o.default.get("ACTIVITIES_FORCE_PUBLIC")) && (f.AllowActivityPartyPrivacyFriends.getSetting() && (l |= L.ActivityFlags.PARTY_PRIVACY_FRIENDS), f.AllowActivityPartyPrivacyVoiceChannel.getSetting() && (l |= L.ActivityFlags.PARTY_PRIVACY_VOICE_CHANNEL)), l)
            }

            function V(e, t, n) {
                if (e === L.ActivityActionTypes.JOIN) return null != t && null != t.id && null != n.join;
                return !1
            }

            function Y(e, t, n) {
                return i.default.get({
                    url: L.Endpoints.APPLICATION_RPC(t),
                    oldFormErrors: !0,
                    retries: 3
                }).then(a => {
                    let {
                        body: {
                            rpc_origins: s,
                            id: l,
                            name: i,
                            icon: r,
                            cover_image: o,
                            flags: u
                        }
                    } = a;
                    if ("string" == typeof n) {
                        if (e.transport === L.TransportTypes.POST_MESSAGE) {
                            let e = (0, d.default)(t);
                            if (null == e || !U(n, [e])) throw new R.default(L.RPCCloseCodes.INVALID_ORIGIN, "Invalid Origin")
                        } else if (!U(n, s)) throw new R.default(L.RPCCloseCodes.INVALID_ORIGIN, "Invalid Origin")
                    }
                    e.application = {
                        id: l,
                        name: i,
                        icon: r,
                        coverImage: o,
                        flags: u
                    }
                }, () => {
                    throw new R.default(L.RPCCloseCodes.INVALID_CLIENTID, "Invalid Client ID")
                })
            }
            async function W(e, t) {
                let n = D[e];
                null == n && (n = new r.default(t ? 2 : 60, 6e4), D[e] = n), await n.process()
            }

            function K(e, t) {
                null == t && (e.authorization.scopes = [L.RPC_LOCAL_SCOPE])
            }

            function z(e) {
                let t = T.default.getSettings(),
                    n = e => Object.values(e).sort((e, t) => e.index - t.index).map(e => ({
                        id: e.id,
                        name: e.name
                    })),
                    a = e(t);
                return {
                    input: {
                        available_devices: n(T.default.getInputDevices()),
                        device_id: t.inputDeviceId,
                        volume: t.inputVolume
                    },
                    output: {
                        available_devices: n(T.default.getOutputDevices()),
                        device_id: t.outputDeviceId,
                        volume: t.outputVolume
                    },
                    mode: {
                        type: t.mode,
                        auto_threshold: t.modeOptions.autoThreshold,
                        threshold: t.modeOptions.threshold,
                        shortcut: a,
                        delay: t.modeOptions.delay
                    },
                    automatic_gain_control: t.automaticGainControl,
                    echo_cancellation: t.echoCancellation,
                    noise_suppression: t.noiseSuppression,
                    qos: t.qos,
                    silence_warning: t.silenceWarning,
                    deaf: t.deaf,
                    mute: t.mute
                }
            }

            function q(e, t) {
                let n = T.default.getSettings(e),
                    a = t(n);
                return {
                    input_mode: {
                        type: n.mode,
                        shortcut: a
                    },
                    local_mutes: Object.keys(n.localMutes),
                    local_volumes: n.localVolumes,
                    self_mute: n.mute,
                    self_deaf: n.deaf
                }
            }

            function Q(e) {
                if (e !== L.TransportTypes.POST_MESSAGE) throw new R.default(L.RPCErrors.INVALID_COMMAND, 'command not available from "'.concat(e, " transport"))
            }

            function Z(e) {
                if (null == e.id) throw new R.default(L.RPCErrors.INVALID_COMMAND, "Invalid application")
            }
        },
        65810: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                activityInstanceConnectedParticipants: function() {
                    return E
                },
                activityInstanceConnectedParticipantsScope: function() {
                    return f
                },
                activityInstanceConnectedParticipantsUpdateEvent: function() {
                    return _
                },
                subscribeToActivityInstanceConnectedParticipants: function() {
                    return C
                }
            }), n("222007");
            var a = n("917351"),
                s = n.n(a),
                l = n("913144"),
                i = n("191225"),
                r = n("697218"),
                o = n("449008"),
                u = n("387111"),
                d = n("694352"),
                c = n("49111");

            function E() {
                let e = i.default.getCurrentEmbeddedActivity();
                if (null == e) return {
                    participants: []
                };
                let {
                    guildId: t,
                    channelId: n
                } = e, a = Array.from(e.connections.values(), e => {
                    let {
                        user_id: a
                    } = e, s = r.default.getUser(a);
                    if (null == s) return;
                    let l = (0, u.getNickname)(t, n, s);
                    return {
                        ...(0, d.default)(s),
                        nickname: null != l ? l : void 0
                    }
                }).filter(o.isNotNullish);
                return {
                    participants: a
                }
            }
            let f = {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE]
                },
                _ = {
                    scope: f,
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = E();
                        return !s.isEqual(a, t) && n(a), a
                    }
                };

            function C(e) {
                let t = "EMBEDDED_ACTIVITY_INBOUND_UPDATE",
                    n = () => {
                        e(E())
                    };
                return l.default.subscribe(t, n), () => l.default.unsubscribe(t, n)
            }
        },
        716724: function(e, t, n) {
            "use strict";

            function a(e) {
                return e.object().unknown(!0)
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        613652: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("191225"),
                s = n("42203");

            function l() {
                let e = a.default.getConnectedActivityChannelId();
                return s.default.getChannel(e)
            }
        },
        856116: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("49111");
            let s = "<removed>";

            function l(e) {
                var t, n;
                let l = {
                    ...e
                };
                if ("object" == typeof(t = l).args && "string" == typeof t.cmd) l = function(e) {
                    if (e.cmd === a.RPCCommands.AUTHENTICATE) return {
                        ...e,
                        args: {
                            ...e.args,
                            access_token: s
                        }
                    };
                    return {
                        ...e
                    }
                }(l);
                if ("object" == typeof(n = l).data && "string" == typeof n.cmd) l = function(e) {
                    if (e.cmd === a.RPCCommands.AUTHENTICATE) return {
                        ...e,
                        data: {
                            ...e.data,
                            access_token: s
                        }
                    };
                    return {
                        ...e
                    }
                }(l);
                return l
            }
        },
        961400: function(e, t, n) {
            "use strict";

            function a(e) {
                return {
                    name: e.name,
                    id: e.id,
                    icon: e.icon,
                    cover_image: e.coverImage,
                    type: e.type
                }
            }
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            })
        },
        403275: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                deprecatedCommand: function() {
                    return l
                }
            });
            var a = n("861309"),
                s = n("49111");
            let l = {
                handler(e) {
                    throw new a.default(s.RPCErrors.INVALID_COMMAND, "Deprecated command: ".concat(e.cmd))
                }
            }
        },
        207873: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                validateOpenInviteDialog: function() {
                    return u
                }
            });
            var a = n("242757"),
                s = n("305961"),
                l = n("957255"),
                i = n("861309"),
                r = n("613652"),
                o = n("49111");

            function u() {
                let e = (0, r.default)();
                if (null == e) throw new i.default(o.RPCErrors.INVALID_CHANNEL, "Invalid channel");
                let t = s.default.getGuild(e.getGuildId());
                if (null == t) throw new i.default(o.RPCErrors.INVALID_CHANNEL, "Invalid guild ".concat(e.getGuildId()));
                if (!(0, a.canViewInviteModal)(l.default, t, e)) throw new i.default(o.RPCErrors.INVALID_PERMISSIONS, "No invite permissions for ".concat(e.id));
                return {
                    channel: e,
                    guild: t
                }
            }
        },
        383928: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                validateTransportType: function() {
                    return l
                }
            });
            var a = n("861309"),
                s = n("49111");

            function l(e) {
                if (s.TransportTypes.IPC !== e && s.TransportTypes.POST_MESSAGE !== e) throw new a.default(s.RPCErrors.INVALID_COMMAND, "Invalid transport.")
            }
        },
        748900: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            }), n("222007");
            var a, s = n("917351"),
                l = n.n(s),
                i = n("446674"),
                r = n("913144"),
                o = n("191225"),
                u = n("499031"),
                d = n("42203"),
                c = n("26989"),
                E = n("305961"),
                f = n("260320"),
                _ = n("169602"),
                C = n("42887"),
                h = n("824563"),
                I = n("945956"),
                T = n("27618"),
                S = n("18494"),
                N = n("843823"),
                A = n("697218"),
                m = n("800762"),
                p = n("599110"),
                g = n("449008"),
                R = n("773336"),
                O = n("578287"),
                L = n("65810"),
                v = n("694352"),
                M = n("49111"),
                P = n("954016"),
                D = n("353927");
            a = class {
                loadServer() {
                    for (let e of (R.isPlatformEmbedded && this.registerTransportsForEmbeddedPlatform(), this.transports)) this.rpcServer.registerTransport(e);
                    let e = this.rpcCommandHandlers;
                    for (let [t, n] of Object.entries(e)) this.rpcServer.setCommandHandler(t, n);
                    let t = this.rpcEventHandlers;
                    for (let [e, n] of Object.entries(t)) this.rpcServer.setEventHandler(e, n)
                }
                init() {
                    this.rpcServer.getCurrentUser = () => A.default.getCurrentUser(), this.rpcServer.onConnect = e => {
                        r.default.dispatch({
                            type: "RPC_APP_CONNECTED",
                            socketId: e.id,
                            application: e.application
                        }), p.default.track(M.AnalyticEvents.AUTHORIZED_APP_CONNECTED, {
                            app_id: e.application.id,
                            transport: e.transport
                        })
                    }, this.rpcServer.onDisconnect = (e, t) => {
                        r.default.dispatch({
                            type: "RPC_APP_DISCONNECTED",
                            socketId: e.id,
                            application: e.application,
                            reason: t
                        })
                    };
                    let e = [d.default, c.default, h.default, m.default, C.default, I.default],
                        t = new i.BatchedStoreListener(e.concat(this.stores), () => this.rpcServer.updateSubscriptions());
                    t.attach("RPCServerManager"), r.default.subscribe("MESSAGE_CREATE", e => this.handleMessage(e)), r.default.subscribe("MESSAGE_UPDATE", e => this.handleMessage(e)), r.default.subscribe("MESSAGE_DELETE", e => this.handleMessage(e)), r.default.subscribe("SPEAKING", e => this.handleSpeaking(e)), r.default.subscribe("OAUTH2_TOKEN_REVOKE", e => this.handleOAuth2TokenRevoke(e)), r.default.subscribe("GUILD_CREATE", e => this.handleGuildCreate(e)), r.default.subscribe("CHANNEL_CREATE", e => this.handleChannelCreate(e)), r.default.subscribe("LOGOUT", () => this.handleLogout()), r.default.subscribe("VOICE_CHANNEL_SELECT", e => this.handleVoiceChannelSelect(e)), r.default.subscribe("RPC_NOTIFICATION_CREATE", e => this.handleNotificationCreate(e)), r.default.subscribe("ACTIVITY_JOIN", e => this.handleActivityJoin(e)), r.default.subscribe("ACTIVITY_LAYOUT_MODE_UPDATE", e => this.handleActivityLayoutModeUpdate(e)), r.default.subscribe("THERMAL_STATE_CHANGE", e => this.handleThermalStateChange(e)), r.default.subscribe("ACTIVITY_SCREEN_ORIENTATION_UPDATE", e => this.handleScreenOrientationUpdate(e)), r.default.subscribe("EMBEDDED_ACTIVITY_INSTANCE_CHANGE", e => this.handleActivityInstanceChange(e)), (0, L.subscribeToActivityInstanceConnectedParticipants)(e => this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE, {}, e)), r.default.subscribe("RELATIONSHIP_ADD", e => this.handleRelationshipAdd(e)), r.default.subscribe("RELATIONSHIP_REMOVE", e => this.handleRelationshipRemove(e)), r.default.subscribe("PRESENCE_UPDATES", e => this.handlePresenceUpdate(e)), r.default.subscribe("PRESENCES_REPLACE", () => this.handlePresencesReplace()), r.default.subscribe("LOBBY_UPDATE", e => this.handleLobbyUpdate(e)), r.default.subscribe("LOBBY_DELETE", e => this.handleLobbyDelete(e)), r.default.subscribe("LOBBY_MEMBER_CONNECT", e => this.handleLobbyMemberConnect(e)), r.default.subscribe("LOBBY_MEMBER_UPDATE", e => this.handleLobbyMemberUpdate(e)), r.default.subscribe("LOBBY_MEMBER_DISCONNECT", e => this.handleLobbyMemberDisconnect(e)), r.default.subscribe("LOBBY_MESSAGE", e => this.handleLobbyMessage(e)), r.default.subscribe("ENTITLEMENT_CREATE", e => this.handleEntitlementCreate(e)), r.default.subscribe("ENTITLEMENT_DELETE", e => this.handleEntitlementDelete(e)), r.default.subscribe("USER_ACHIEVEMENT_UPDATE", e => this.handleUserAchievementUpdate(e))
                }
                handleMessage(e) {
                    let t, n, a;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    "MESSAGE_CREATE" === e.type && this.handleActivityMessage(e);
                    let s = null;
                    switch (e.type) {
                        case "MESSAGE_CREATE":
                            if ("SENDING" === e.message.state) return;
                            t = M.RPCEvents.MESSAGE_CREATE, n = e.channelId, a = e.message, s = "".concat(t).concat(e.message.id);
                            break;
                        case "MESSAGE_UPDATE":
                            t = M.RPCEvents.MESSAGE_UPDATE, n = e.message.channel_id, a = e.message;
                            break;
                        case "MESSAGE_DELETE":
                            t = M.RPCEvents.MESSAGE_DELETE, n = e.channelId, a = {
                                id: e.id
                            }, s = "".concat(t).concat(e.id);
                            break;
                        default:
                            return (0, g.assertNever)(e)
                    }
                    null != n && this.rpcServer.dispatchToSubscriptions(t, {
                        channel_id: n
                    }, {
                        channel_id: n,
                        message: (0, O.transformInternalTextMessage)(a)
                    }, s)
                }
                handleSpeaking(e) {
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let t = 0 !== e.speakingFlags ? M.RPCEvents.SPEAKING_START : M.RPCEvents.SPEAKING_STOP;
                    if (e.context === D.MediaEngineContextTypes.DEFAULT) {
                        let n = S.default.getVoiceChannelId();
                        if (null != n) {
                            let a = d.default.getChannel(n);
                            if (null == a) return;
                            let s = m.default.getVoiceState(a.getGuildId(), e.userId);
                            if (null == s) return;
                            this.rpcServer.dispatchToSubscriptions(t, {
                                channel_id: s.channelId
                            }, {
                                channel_id: s.channelId,
                                user_id: e.userId
                            })
                        }
                    } else _.default.getLobbyIdsForUser(e.userId).forEach(n => {
                        let a = f.default.getLobby(n);
                        null != a && a.application_id === e.context && this.rpcServer.dispatchToSubscriptions(t, {}, {
                            lobby_id: n,
                            user_id: e.userId
                        })
                    })
                }
                handleVoiceChannelSelect(e) {
                    let {
                        guildId: t,
                        channelId: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.VOICE_CHANNEL_SELECT, {}, {
                        channel_id: n,
                        guild_id: t
                    })
                }
                handleNotificationCreate(e) {
                    let {
                        channelId: t,
                        message: n,
                        icon: a,
                        title: s,
                        body: l
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.NOTIFICATION_CREATE, {}, {
                        channel_id: t,
                        message: (0, O.transformInternalTextMessage)(n),
                        icon_url: null != a ? (0, O.getRemoteIconURL)(a) : null,
                        title: s,
                        body: l
                    })
                }
                handleActivityJoin(e) {
                    let {
                        applicationId: t,
                        secret: n,
                        intent: a,
                        embedded: s
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let l = {
                        secret: n
                    };
                    s && (l.intent = a), this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ACTIVITY_JOIN, e => e.socket.application.id === t, l), this.rpcServer.dispatchToSubscriptions(M.RPCEvents.GAME_JOIN, e => e.socket.application.id === t, l)
                }
                handleActivityLayoutModeUpdate(e) {
                    let {
                        applicationId: t,
                        layoutMode: n
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let a = n !== P.ActivityLayoutMode.FOCUSED;
                    this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ACTIVITY_PIP_MODE_UPDATE, e => e.socket.application.id === t, {
                        is_pip_mode: a
                    });
                    this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE, e => e.socket.application.id === t, {
                        layout_mode: n
                    })
                }
                handleThermalStateChange(e) {
                    let {
                        applicationId: t,
                        rawThermalState: n
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length || null == t) return;
                    let a = {
                        thermal_state: (0, u.default)(n)
                    };
                    this.rpcServer.dispatchToSubscriptions(M.RPCEvents.THERMAL_STATE_UPDATE, e => e.socket.application.id === t, a)
                }
                handleScreenOrientationUpdate(e) {
                    let {
                        screenOrientation: t
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let n = t === P.ActivityScreenOrientation.PORTRAIT ? "portrait" : "landscape";
                    this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ORIENTATION_UPDATE, {}, {
                        screen_orientation: t,
                        orientation: n
                    })
                }
                handleActivityInstanceChange(e) {
                    let {
                        channelId: t,
                        instanceId: n
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let a = A.default.getCurrentUser();
                    if (null == a) return;
                    let s = o.default.getSelfEmbeddedActivityForChannel(t);
                    null != s && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ACTIVITY_INSTANCE_UPDATE, e => e.socket.application.id === s.application_id, {
                        instance_id: n
                    })
                }
                handleActivityMessage(e) {
                    var t;
                    let {
                        channelId: n,
                        message: a
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let {
                        application: s,
                        activity: l
                    } = a;
                    if (null == s || null == l || null == l.party_id) return;
                    let i = A.default.getUser(null === (t = a.author) || void 0 === t ? void 0 : t.id);
                    if (null == i) return;
                    let r = A.default.getCurrentUser();
                    if (null == r || i.id === r.id) return;
                    let o = l.type === M.ActivityActionTypes.JOIN_REQUEST ? h.default.getApplicationActivity(r.id, s.id) : h.default.getApplicationActivity(i.id, s.id);
                    if (null == o || null == o.party || o.party.id !== l.party_id) return;
                    let u = o.application_id;
                    switch (l.type) {
                        case M.ActivityActionTypes.JOIN:
                            this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ACTIVITY_INVITE, e => e.socket.application.id === u, {
                                user: (0, v.default)(i),
                                activity: o,
                                type: l.type,
                                channel_id: n,
                                message_id: a.id
                            });
                            break;
                        case M.ActivityActionTypes.JOIN_REQUEST:
                            this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ACTIVITY_JOIN_REQUEST, e => e.socket.application.id === u, {
                                user: (0, v.default)(i)
                            })
                    }
                }
                handleOAuth2TokenRevoke(e) {
                    let {
                        accessToken: t
                    } = e;
                    this.rpcServer.sockets.forEach(e => {
                        e.authorization.accessToken === t && e.close(M.RPCCloseCodes.TOKEN_REVOKED, "Token revoked")
                    })
                }
                handleGuildCreate(e) {
                    let {
                        guild: {
                            id: t
                        }
                    } = e, n = E.default.getGuild(t);
                    0 !== this.rpcServer.subscriptions.length && null != n && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.GUILD_CREATE, {}, {
                        id: t,
                        name: n.name
                    })
                }
                handleChannelCreate(e) {
                    let {
                        channel: {
                            id: t,
                            name: n,
                            type: a
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.CHANNEL_CREATE, {}, {
                        id: t,
                        name: n,
                        type: a
                    })
                }
                handleLogout() {
                    this.rpcServer.sockets.forEach(e => e.close(M.RPCCloseCodes.CLOSE_NORMAL, "User logout"))
                }
                handleRelationshipAdd(e) {
                    let {
                        relationship: {
                            id: t,
                            type: n
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, O.transformRelationship)(n, t))
                }
                handleRelationshipRemove(e) {
                    let {
                        relationship: {
                            id: t
                        }
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, O.transformRelationship)(M.RelationshipTypes.NONE, t))
                }
                handlePresenceUpdate(e) {
                    let {
                        updates: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && t.forEach(e => {
                        let {
                            guildId: t,
                            user: {
                                id: n
                            }
                        } = e;
                        if (null != t) return;
                        let a = T.default.getRelationshipType(n);
                        a === M.RelationshipTypes.NONE && N.default.getUserAffinitiesUserIds().has(n) && (a = M.RelationshipTypes.IMPLICIT), a !== M.RelationshipTypes.NONE && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, O.transformRelationship)(a, n))
                    })
                }
                handlePresencesReplace() {
                    0 !== this.rpcServer.subscriptions.length && l.forEach(T.default.getRelationships(), (e, t) => {
                        this.rpcServer.dispatchToSubscriptions(M.RPCEvents.RELATIONSHIP_UPDATE, {}, (0, O.transformRelationship)(e, t))
                    })
                }
                handleLobbyUpdate(e) {
                    let {
                        lobby: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.LOBBY_UPDATE, {}, t)
                }
                handleLobbyDelete(e) {
                    let {
                        lobbyId: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.LOBBY_DELETE, {}, {
                        id: t
                    })
                }
                handleLobbyMemberConnect(e) {
                    let {
                        lobbyId: t,
                        member: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.LOBBY_MEMBER_CONNECT, {}, {
                        lobby_id: t,
                        member: n
                    })
                }
                handleLobbyMemberUpdate(e) {
                    let {
                        lobbyId: t,
                        member: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.LOBBY_MEMBER_UPDATE, {}, {
                        lobby_id: t,
                        member: n
                    })
                }
                handleLobbyMemberDisconnect(e) {
                    let {
                        lobbyId: t,
                        member: n
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.LOBBY_MEMBER_DISCONNECT, {}, {
                        lobby_id: t,
                        member: n
                    })
                }
                handleLobbyMessage(e) {
                    let {
                        lobbyId: t,
                        senderId: n,
                        data: a
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.LOBBY_MESSAGE, {}, {
                        lobby_id: t,
                        sender_id: n,
                        data: a
                    })
                }
                handleEntitlementCreate(e) {
                    let {
                        entitlement: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ENTITLEMENT_CREATE, e => e.socket.application.id === t.application_id, {
                        entitlement: t
                    })
                }
                handleEntitlementDelete(e) {
                    let {
                        entitlement: t
                    } = e;
                    0 !== this.rpcServer.subscriptions.length && this.rpcServer.dispatchToSubscriptions(M.RPCEvents.ENTITLEMENT_DELETE, e => e.socket.application.id === t.application_id, {
                        entitlement: t
                    })
                }
                handleUserAchievementUpdate(e) {
                    let {
                        userAchievement: t
                    } = e;
                    if (0 === this.rpcServer.subscriptions.length) return;
                    let {
                        application_id: n
                    } = t;
                    this.rpcServer.dispatchToSubscriptions(M.RPCEvents.USER_ACHIEVEMENT_UPDATE, e => e.socket.application.id === n, {
                        user_achievement: t
                    })
                }
                constructor(e) {
                    this.rpcServer = e.server, this.transports = e.transports, this.rpcCommandHandlers = e.commands, this.rpcEventHandlers = e.events, this.stores = e.stores, this.registerTransportsForEmbeddedPlatform = e.registerTransportsForEmbeddedPlatform
                }
            }
        },
        18520: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            }), n("222007");
            var a = n("522632"),
                s = n("316693"),
                l = n("872717"),
                i = n("524297"),
                r = n("95410"),
                o = n("913144"),
                u = n("8222"),
                d = n("357974"),
                c = n("697218"),
                E = n("991170"),
                f = n("861309"),
                _ = n("49111");
            let C = "CachedTokens";
            async function h(e, t, n) {
                let a, {
                    client_id: l,
                    response_type: i = "code",
                    redirect_uri: r,
                    code_challenge: o,
                    code_challenge_method: C,
                    state: h,
                    scope: I,
                    permissions: T,
                    guild_id: S,
                    channel_id: N,
                    prompt: A,
                    disable_guild_select: m
                } = e;
                if (null == l) throw new f.default(_.RPCErrors.OAUTH2_ERROR, "No Client ID provided");
                if (null != r) throw new f.default(_.RPCErrors.OAUTH2_ERROR, "Redirect URI cannot be used in the RPC OAuth2 Authorization flow");
                let p = [];
                "string" == typeof I ? p = I.split(" ").filter(e => e.length > 0) : Array.isArray(I) && (p = I);
                let g = c.default.getCurrentUser();
                if (null == g) throw new f.default(_.RPCErrors.OAUTH2_ERROR, "Client is not logged in");
                try {
                    a = await (0, u.fetchAuthorization)({
                        clientId: l,
                        scopes: p,
                        responseType: i,
                        redirectUri: r,
                        codeChallenge: o,
                        codeChallengeMethod: C,
                        state: h
                    })
                } catch (t) {
                    let {
                        body: e
                    } = t;
                    throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Authorization Error: ".concat(e.message || "Unknown Error"))
                }
                if (A === d.OAuth2Prompts.NONE && null != a && a.authorized) try {
                    let e = await (0, u.authorize)({
                        authorize: !0,
                        clientId: l,
                        scopes: p,
                        responseType: i,
                        redirectUri: r,
                        codeChallenge: o,
                        codeChallengeMethod: C,
                        state: h
                    });
                    return e.location
                } catch (t) {
                    let {
                        body: e
                    } = t;
                    throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Authorize Error: ".concat(e.message || "Unknown Error"))
                }
                null == n || n(a.application);
                let R = E.default.NONE;
                try {
                    R = s.default.deserialize(null != T ? T : 0)
                } catch (e) {}
                return t(l, a, p, R, i, r, o, C, h, S, N, A, m)
            }

            function I(e, t) {
                if (e.authorization.accessToken) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authenticated");
                if (e.authorization.authing) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authenticating");
                return e.authorization.authing = !0, l.default.get({
                    url: _.Endpoints.OAUTH2_CURRENT_AUTH,
                    headers: {
                        Authorization: "Bearer ".concat(t)
                    },
                    oldFormErrors: !0
                }).then(n => {
                    e.authorization.authing = !1;
                    let {
                        application: a,
                        user: s,
                        scopes: l,
                        expires: i
                    } = n.body;
                    if (e.application.id !== a.id) throw new f.default(_.RPCErrors.INVALID_CLIENTID, "Application does not match the connection's");
                    let r = c.default.getCurrentUser();
                    if (null == r || !s || r.id !== s.id) throw new f.default(_.RPCErrors.INVALID_TOKEN, "Token does not match current user");
                    return e.authorization.scopes = [...e.authorization.scopes, ...l, _.RPC_AUTHENTICATED_SCOPE], e.authorization.accessToken = t, e.authorization.expires = new Date(i), o.default.dispatch({
                        type: "RPC_APP_AUTHENTICATED",
                        socketId: e.id,
                        application: e.application
                    }), {
                        ...n.body,
                        access_token: t
                    }
                }, () => {
                    throw new f.default(_.RPCErrors.INVALID_TOKEN, "Invalid access token: ".concat(t))
                }).catch(t => {
                    throw e.authorization.authing = !1, t
                })
            }

            function T(e, t) {
                return {
                    [_.RPCCommands.AUTHENTICATE]: (0, i.createRPCCommand)(_.RPCCommands.AUTHENTICATE, {
                        handler(n) {
                            let {
                                socket: s,
                                args: {
                                    access_token: l
                                }
                            } = n;
                            if (null == l && s.transport === _.TransportTypes.IPC) {
                                let n = s.application.id;
                                if (null == n) throw new f.default(_.RPCErrors.INVALID_COMMAND, "No application.");
                                let i = _.OAuth2Scopes.IDENTIFY,
                                    o = () => h({
                                        client_id: n,
                                        scope: i,
                                        response_type: "token"
                                    }, e, t).then(e => {
                                        if (null == e) throw new f.default(_.RPCErrors.UNKNOWN_ERROR, "Unknown error occurred");
                                        let t = e.split(/#|\?/),
                                            l = a.parse(t[t.length - 1]);
                                        if (null != l.error) {
                                            var i;
                                            throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Error: ".concat(l.error, ": ").concat(null !== (i = l.error_description) && void 0 !== i ? i : "unknown error"))
                                        }
                                        return ! function(e, t, n, a) {
                                            var s;
                                            let l = null !== (s = r.default.get(C)) && void 0 !== s ? s : {};
                                            l[e] = {
                                                accessToken: t,
                                                scope: n,
                                                expires: Date.now() + a
                                            }, r.default.set(C, l)
                                        }(n, l.access_token, l.scope, l.expires_in), I(s, l.access_token)
                                    });
                                return null != (l = function(e, t) {
                                    let n = r.default.get(C);
                                    if (null != n && null != n[e]) {
                                        let a = n[e];
                                        if (!(a.scope !== t || a.expires <= Date.now())) return a.accessToken;
                                        delete n[e], r.default.set(C, n)
                                    }
                                }(n, i)) ? I(s, l).catch(() => (! function(e) {
                                    var t;
                                    let n = null !== (t = r.default.get(C)) && void 0 !== t ? t : {};
                                    delete n[e], r.default.set(C, n)
                                }(n), o())) : o()
                            }
                            if (null == l) throw new f.default(_.RPCErrors.INVALID_TOKEN, "No access token provided");
                            return I(s, l)
                        }
                    }),
                    [_.RPCCommands.AUTHORIZE]: {
                        handler(n) {
                            let {
                                socket: s,
                                args: i
                            } = n, r = i.client_id;
                            if (!r) throw new f.default(_.RPCErrors.INVALID_CLIENTID, "No client id provided");
                            if (null != s.authorization.accessToken) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authenticated");
                            if (s.authorization.authing) throw new f.default(_.RPCErrors.INVALID_COMMAND, "Already authing");
                            return s.authorization.authing = !0, l.default.get({
                                url: _.Endpoints.APPLICATION_RPC(r),
                                oldFormErrors: !0
                            }).then(n => {
                                let a = n.body;
                                if (s.application.id !== a.id) throw new f.default(_.RPCErrors.INVALID_CLIENTID, "Application does not match the connection's");
                                let l = i.scopes || i.scope;
                                return delete i.scopes, h({
                                    ...i,
                                    scope: l
                                }, e, t)
                            }, () => {
                                throw new f.default(_.RPCErrors.INVALID_CLIENTID, "Invalid client id: ".concat(r))
                            }).then(e => {
                                if (s.authorization.authing = !1, null == e) throw new f.default(_.RPCErrors.UNKNOWN_ERROR, "Unknown error occurred");
                                let t = a.parse(e.split("?")[1].split("#")[0]);
                                if (null != t.error) {
                                    var n;
                                    throw new f.default(_.RPCErrors.OAUTH2_ERROR, "OAuth2 Error: ".concat(t.error, ": ").concat(null !== (n = t.error_description) && void 0 !== n ? n : "unknown error"))
                                }
                                return {
                                    code: t.code
                                }
                            }).catch(e => {
                                throw s.authorization.authing = !1, e
                            })
                        }
                    }
                }
            }
        },
        381759: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("222007");
            var a = n("831314"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = {
                    [i.RPCCommands.SET_USER_ACHIEVEMENT]: {
                        scope: {
                            [i.RPC_SCOPE_CONFIG.ANY]: [i.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE]
                        },
                        validation: e => (0, l.default)(e).required().keys({
                            achievement_id: e.string().min(2).max(128),
                            percent_complete: e.number().min(0).max(100).required()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    achievement_id: n,
                                    percent_complete: l
                                }
                            } = e, r = t.application.id;
                            if (null == r) throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.");
                            return a.default.setUserAchievement(r, n, l).catch(e => {
                                let {
                                    status: t,
                                    body: n
                                } = e;
                                switch (t) {
                                    case 429:
                                        throw new s.default(i.RPCErrors.RATE_LIMITED, "You are being rate limited.");
                                    case 403:
                                        if (null != n && n.code === i.AbortCodes.USER_NOT_AUTHORIZED_FOR_APPLICATION) throw new s.default(i.RPCErrors.UNAUTHORIZED_FOR_ACHIEVEMENT, "Not authorized to update this achievement.");
                                        throw new s.default(i.RPCErrors.UNKNOWN_ERROR, "Unknown error from API. status=".concat(t, "."));
                                    default:
                                        throw new s.default(i.RPCErrors.UNKNOWN_ERROR, "Unknown error from API. status=".concat(t, "."))
                                }
                            }).then(() => null)
                        }
                    },
                    [i.RPCCommands.GET_USER_ACHIEVEMENTS]: {
                        scope: {
                            [i.RPC_SCOPE_CONFIG.ANY]: [i.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE]
                        },
                        handler(e) {
                            let {
                                socket: t
                            } = e, n = t.application.id;
                            if (null == n) throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.");
                            return a.default.fetchForApplication(n).then(e => e || [])
                        }
                    }
                }
        },
        81910: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("524297"),
                s = n("578287"),
                l = n("65810"),
                i = n("49111"),
                r = {
                    [i.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: (0, a.createRPCCommand)(i.RPCCommands.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS, {
                        scope: l.activityInstanceConnectedParticipantsScope,
                        handler(e) {
                            let {
                                socket: t
                            } = e;
                            return (0, s.validatePostMessageTransport)(t.transport), (0, l.activityInstanceConnectedParticipants)()
                        }
                    })
                }
        },
        737954: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("222007");
            var a = n("249654"),
                s = n("913144"),
                l = n("578287"),
                i = n("716724"),
                r = n("613652"),
                o = n("49111"),
                u = {
                    [o.RPCCommands.CREATE_ACTIVITY_INSTANCE]: {
                        scope: {
                            [o.RPC_SCOPE_CONFIG.ANY]: [o.RPC_AUTHENTICATED_SCOPE]
                        },
                        handler(e) {
                            let {
                                socket: t
                            } = e;
                            return (0, l.validatePostMessageTransport)(t.transport), Promise.resolve({
                                instance_id: a.default.fromTimestamp(Date.now())
                            })
                        }
                    },
                    [o.RPCCommands.JOIN_ACTIVITY_INSTANCE]: {
                        scope: {
                            [o.RPC_SCOPE_CONFIG.ANY]: [o.RPC_AUTHENTICATED_SCOPE]
                        },
                        validation: e => (0, i.default)(e).required().keys({
                            instance_id: e.string().required().allow(null)
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    instance_id: n
                                }
                            } = e;
                            (0, l.validatePostMessageTransport)(t.transport);
                            let a = (0, r.default)();
                            return null != t.application.id && (null == a ? void 0 : a.id) != null && s.default.dispatch({
                                type: "EMBEDDED_ACTIVITY_INSTANCE_CHANGE",
                                channelId: a.id,
                                instanceId: n
                            }), Promise.resolve()
                        }
                    },
                    [o.RPCCommands.LEAVE_ACTIVITY_INSTANCE]: {
                        scope: {
                            [o.RPC_SCOPE_CONFIG.ANY]: [o.RPC_AUTHENTICATED_SCOPE]
                        },
                        handler(e) {
                            let {
                                socket: t
                            } = e;
                            (0, l.validatePostMessageTransport)(t.transport);
                            let n = (0, r.default)();
                            return null != t.application.id && (null == n ? void 0 : n.id) != null && s.default.dispatch({
                                type: "EMBEDDED_ACTIVITY_INSTANCE_CHANGE",
                                channelId: n.id,
                                instanceId: null
                            }), Promise.resolve()
                        }
                    }
                }
        },
        878705: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007"), n("702976");
            var a = n("872717"),
                s = n("84460"),
                l = n("299285"),
                i = n("167726"),
                r = n("599110"),
                o = n("568734"),
                u = n("861309"),
                d = n("578287"),
                c = n("716724"),
                E = n("613652"),
                f = n("49111"),
                _ = {
                    [f.RPCCommands.SEND_ANALYTICS_EVENT]: {
                        validation: e => (0, c.default)(e).required().keys({
                            event_name: e.string().required(),
                            event_properties: e.object().required()
                        }),
                        handler(e) {
                            var t;
                            let {
                                socket: n,
                                args: {
                                    event_name: a,
                                    event_properties: s
                                }
                            } = e;
                            (0, d.validatePostMessageTransport)(n.transport), (0, d.validateApplication)(n.application);
                            let i = n.application.id,
                                c = (0, E.default)(),
                                _ = null == c ? void 0 : c.getGuildId();
                            if (null == c) throw new u.default(f.RPCErrors.INVALID_COMMAND, "Invalid channel");
                            let C = l.default.getApplication(i),
                                h = (0, o.hasFlag)(null !== (t = null == C ? void 0 : C.flags) && void 0 !== t ? t : 0, f.ApplicationFlags.EMBEDDED_FIRST_PARTY);
                            if (!h) throw new u.default(f.RPCErrors.INVALID_COMMAND, "This application cannot access this API");
                            r.default.track(a, {
                                ...s,
                                activity_application_id: i,
                                activity_guild_id: _
                            })
                        }
                    },
                    [f.RPCCommands.GET_APPLICATION_TICKET]: {
                        scope: f.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t
                            } = e, n = t.application.id;
                            if (null == n) throw new u.default(f.RPCErrors.INVALID_COMMAND, "No application.");
                            return a.default.post({
                                url: f.Endpoints.APPLICATION_TICKET(n),
                                body: {
                                    test_mode: i.default.inTestModeForApplication(n) || s.default.inDevModeForApplication(n)
                                },
                                retries: 3,
                                oldFormErrors: !0
                            }).then(e => {
                                let {
                                    body: t
                                } = e;
                                return t
                            })
                        }
                    }
                }
        },
        268801: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("222007");
            var a = n("17434"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = n("353927"),
                o = {
                    [i.RPCCommands.SET_CERTIFIED_DEVICES]: {
                        scope: {
                            [i.RPC_SCOPE_CONFIG.ANY]: [i.OAuth2Scopes.RPC, i.RPC_LOCAL_SCOPE]
                        },
                        validation: e => (0, l.default)(e).required().keys({
                            devices: e.array().items((0, l.default)(e).keys({
                                type: e.string().required().valid([r.DeviceTypes.AUDIO_INPUT, r.DeviceTypes.AUDIO_OUTPUT, r.DeviceTypes.VIDEO_INPUT]),
                                id: e.string().required().min(1),
                                vendor: e.object().required().keys({
                                    name: e.string().min(1),
                                    url: e.string().min(1)
                                }),
                                model: e.object().required().keys({
                                    name: e.string().min(1),
                                    url: e.string().min(1)
                                }),
                                related: e.array().items(e.string().min(1)),
                                echo_cancellation: e.boolean(),
                                noise_suppression: e.boolean(),
                                automatic_gain_control: e.boolean(),
                                hardware_mute: e.boolean()
                            }))
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    devices: n
                                }
                            } = e;
                            if (null == t.application.id) throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.");
                            (0, a.setCertifiedDevices)(t.application.id, n.map(e => ({
                                type: e.type,
                                id: e.id,
                                vendor: e.vendor,
                                model: e.model,
                                related: e.related.filter(e => n.some(t => t.id === e)),
                                echoCancellation: e.echo_cancellation,
                                noiseSuppression: e.noise_suppression,
                                automaticGainControl: e.automatic_gain_control,
                                hardwareMute: e.hardware_mute
                            })))
                        }
                    }
                }
        },
        523834: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            }), n("222007");
            var a = n("917351"),
                s = n.n(a),
                l = n("970728"),
                i = n("987317"),
                r = n("393414"),
                o = n("233069"),
                u = n("42203"),
                d = n("305961"),
                c = n("957255"),
                E = n("18494"),
                f = n("800762"),
                _ = n("404008"),
                C = n("861309"),
                h = n("578287"),
                I = n("716724"),
                T = n("613652"),
                S = n("49111"),
                N = {
                    [S.RPCCommands.GET_CHANNEL]: {
                        scope: {
                            [S.RPC_SCOPE_CONFIG.ANY]: [S.OAuth2Scopes.RPC, S.OAuth2Scopes.GUILDS]
                        },
                        handler(e) {
                            let {
                                args: {
                                    channel_id: t
                                },
                                socket: n
                            } = e, a = u.default.getChannel(t);
                            if (null == a) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                            if (a.isPrivate()) {
                                let e = n.authorization.scopes;
                                if (!e.includes(S.OAuth2Scopes.RPC) && !e.includes(S.OAuth2Scopes.DM_CHANNELS_READ)) throw new C.default(S.RPCErrors.INVALID_PERMISSIONS, "Invalid scope")
                            }
                            return (0, h.transformChannel)(a, (0, h.hasMessageReadPermission)(a, n.application.id, n.authorization.scopes))
                        }
                    },
                    [S.RPCCommands.GET_CHANNELS]: {
                        scope: S.OAuth2Scopes.RPC,
                        handler(e) {
                            let {
                                args: {
                                    guild_id: t
                                }
                            } = e, n = s.values(u.default.loadAllGuildAndPrivateChannelsFromDisk());
                            if (t) {
                                let e = d.default.getGuild(t);
                                if (null == e) throw new C.default(S.RPCErrors.INVALID_GUILD, "Invalid guild id: ".concat(t));
                                n = n.filter(t => {
                                    let {
                                        guild_id: n
                                    } = t;
                                    return n === e.id
                                })
                            }
                            return {
                                channels: n.filter(e => c.default.can(S.Permissions.VIEW_CHANNEL, e)).map(e => {
                                    let {
                                        id: t,
                                        name: n,
                                        type: a
                                    } = e;
                                    return {
                                        id: t,
                                        name: n,
                                        type: a
                                    }
                                })
                            }
                        }
                    },
                    [S.RPCCommands.GET_CHANNEL_PERMISSIONS]: {
                        scope: S.OAuth2Scopes.GUILDS_MEMBERS_READ,
                        handler(e) {
                            let t = (0, T.default)();
                            if (null == t) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "Invalid channel");
                            return {
                                permissions: c.default.computePermissions(t)
                            }
                        }
                    },
                    [S.RPCCommands.SELECT_VOICE_CHANNEL]: {
                        scope: S.OAuth2Scopes.RPC,
                        validation: e => (0, I.default)(e).required().keys({
                            channel_id: e.string().allow(null),
                            timeout: e.number().min(0).max(60),
                            force: e.boolean(),
                            navigate: e.boolean()
                        }),
                        handler(e) {
                            let {
                                server: t,
                                socket: n,
                                args: {
                                    channel_id: a,
                                    timeout: s = 0,
                                    force: l = !1,
                                    navigate: I = !1
                                }
                            } = e;
                            if (!a) return i.default.selectVoiceChannel(null), null;
                            let T = E.default.getVoiceChannelId();
                            if (null != T && T !== a && !1 === l) throw new C.default(S.RPCErrors.SELECT_VOICE_FORCE_REQUIRED, "User is already joined to a voice channel.");
                            return t.storeWait(n, () => u.default.getChannel(a), s).catch(() => {
                                throw new C.default(S.RPCErrors.SELECT_CHANNEL_TIMED_OUT, "Request to select voice channel timed out.")
                            }).then(e => {
                                if (null == e) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(a));
                                if (!(0, o.isVoiceChannel)(e.type)) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "Channel is not a voice channel");
                                return Promise.all([Promise.resolve(e), (0, h.transformChannel)(e, (0, h.hasMessageReadPermission)(e, n.application.id, n.authorization.scopes))])
                            }).then(e => {
                                let [t, n] = e;
                                if (n.guild_id) {
                                    if ((0, _.isChannelFull)(t, f.default, d.default)) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "Channel is full");
                                    if (!c.default.can(S.Permissions.CONNECT, t)) throw new C.default(S.RPCErrors.INVALID_PERMISSIONS, "Connect permission required to join channel")
                                }
                                return i.default.selectVoiceChannel(t.id), I && (0, r.replaceWith)(S.Routes.CHANNEL(t.guild_id, t.id)), n
                            })
                        }
                    },
                    [S.RPCCommands.GET_SELECTED_VOICE_CHANNEL]: {
                        scope: {
                            [S.RPC_SCOPE_CONFIG.ANY]: [S.OAuth2Scopes.RPC, S.OAuth2Scopes.RPC_VOICE_READ]
                        },
                        handler(e) {
                            let {
                                socket: t
                            } = e, n = E.default.getVoiceChannelId(), a = null != n ? u.default.getChannel(n) : null;
                            return null != a ? (0, h.transformChannel)(a, (0, h.hasMessageReadPermission)(a, t.application.id, t.authorization.scopes)) : null
                        }
                    },
                    [S.RPCCommands.SELECT_TEXT_CHANNEL]: {
                        scope: S.OAuth2Scopes.RPC,
                        validation: e => (0, I.default)(e).required().keys({
                            channel_id: e.string().allow(null),
                            timeout: e.number().min(0).max(60)
                        }),
                        handler(e) {
                            let {
                                server: t,
                                socket: n,
                                args: {
                                    channel_id: a,
                                    timeout: s = 0
                                }
                            } = e;
                            return a ? t.storeWait(n, () => u.default.getChannel(a), s).catch(() => {
                                throw new C.default(S.RPCErrors.SELECT_CHANNEL_TIMED_OUT, "Request to select text channel timed out.")
                            }).then(e => {
                                if (null == e) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(a));
                                if (!(0, o.isTextChannel)(e.type)) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "Channel is not a text channel");
                                return Promise.all([Promise.resolve(e), (0, h.transformChannel)(e, (0, h.hasMessageReadPermission)(e, n.application.id, n.authorization.scopes))])
                            }).then(e => {
                                let [t, n] = e;
                                if (n.guild_id && !c.default.can(S.Permissions.VIEW_CHANNEL, t)) throw new C.default(S.RPCErrors.INVALID_CHANNEL, "No permission to see channel");
                                return n.guild_id ? (0, r.replaceWith)(S.Routes.CHANNEL(n.guild_id, t.id)) : i.default.selectPrivateChannel(t.id), n
                            }) : ((0, r.transitionTo)(S.Routes.ME), null)
                        }
                    },
                    [S.RPCCommands.CREATE_CHANNEL_INVITE]: {
                        scope: S.OAuth2Scopes.RPC,
                        handler(e) {
                            let {
                                args: {
                                    channel_id: t,
                                    ...n
                                }
                            } = e;
                            return l.default.createInvite(t, n, "RPC").catch(() => {
                                throw new C.default(S.RPCErrors.INVALID_PERMISSIONS, "Unable to generate an invite for ".concat(t, ". Does this user have permissions?"))
                            })
                        }
                    }
                }
        },
        418194: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("222007");
            var a = n("913144"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = {
                    [i.RPCCommands.SET_CONFIG]: {
                        scope: i.RPC_AUTHENTICATED_SCOPE,
                        validation: e => (0, l.default)(e).required().keys({
                            use_interactive_pip: e.boolean()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    use_interactive_pip: n
                                }
                            } = e;
                            if (t.transport !== i.TransportTypes.POST_MESSAGE) throw new s.default(i.RPCErrors.INVALID_COMMAND, 'command not available from "'.concat(t.transport, " transport"));
                            if (null == t.application.id) throw new s.default(i.RPCErrors.INVALID_COMMAND, "invalid application");
                            return a.default.dispatch({
                                type: "EMBEDDED_ACTIVITY_SET_CONFIG",
                                applicationId: t.application.id,
                                config: {
                                    useInteractivePIP: n
                                }
                            }), Promise.resolve({
                                use_interactive_pip: n
                            })
                        }
                    }
                }
        },
        84090: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                crossPlatformCommands: function() {
                    return R
                }
            });
            var a = n("381759"),
                s = n("81910"),
                l = n("737954"),
                i = n("878705"),
                r = n("268801"),
                o = n("523834"),
                u = n("418194"),
                d = n("156965"),
                c = n("234933"),
                E = n("568887"),
                f = n("336566"),
                _ = n("899114"),
                C = n("709963"),
                h = n("258316"),
                I = n("881963"),
                T = n("88321"),
                S = n("473902"),
                N = n("673090"),
                A = n("108087"),
                m = n("657322"),
                p = n("220795"),
                g = n("272279");
            let R = {
                ...a.default,
                ...l.default,
                ...i.default,
                ...r.default,
                ...o.default,
                ...u.default,
                ...d.default,
                ...c.default,
                ...E.default,
                ...f.default,
                ..._.default,
                ...C.default,
                ...I.default,
                ...T.default,
                ...S.default,
                ...A.default,
                ...m.default,
                ...g.default,
                ...p.default,
                ...h.default,
                ...N.default,
                ...s.default
            }
        },
        156965: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("222007");
            var a = n("917351"),
                s = n.n(a),
                l = n("305961"),
                i = n("861309"),
                r = n("716724"),
                o = n("49111"),
                u = {
                    [o.RPCCommands.GET_GUILD]: {
                        scope: o.OAuth2Scopes.RPC,
                        validation: e => (0, r.default)(e).required().keys({
                            guild_id: e.string(),
                            timeout: e.number().min(0).max(60)
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                server: n,
                                args: {
                                    guild_id: a,
                                    timeout: s = 0
                                }
                            } = e;
                            return n.storeWait(t, () => l.default.getGuild(a), s).catch(() => {
                                throw new i.default(o.RPCErrors.GET_GUILD_TIMED_OUT, "Request to get guild timed out.")
                            }).then(e => {
                                var t;
                                if (null == e) throw new i.default(o.RPCErrors.INVALID_GUILD, "Invalid guild id: ".concat(a));
                                return {
                                    id: e.id,
                                    name: e.name,
                                    icon_url: null !== (t = e.getIconURL(128)) && void 0 !== t ? t : null,
                                    members: [],
                                    vanity_url_code: e.vanityURLCode
                                }
                            })
                        }
                    },
                    [o.RPCCommands.GET_GUILDS]: {
                        scope: o.OAuth2Scopes.RPC,
                        handler() {
                            let e = l.default.getGuilds();
                            return {
                                guilds: s.map(e, e => ({
                                    id: e.id,
                                    name: e.name,
                                    icon_url: e.getIconURL(128)
                                }))
                            }
                        }
                    }
                }
        },
        234933: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("222007");
            var a = n("697218"),
                s = n("315102"),
                l = n("103603"),
                i = n("861309"),
                r = n("716724"),
                o = n("49111"),
                u = {
                    [o.RPCCommands.GET_IMAGE]: {
                        scope: o.RPC_LOCAL_SCOPE,
                        validation: e => (0, r.default)(e).required().keys({
                            type: e.string().required().valid(["user"]),
                            id: e.string().required(),
                            format: e.string().required().valid(["png", "webp", "jpg"]),
                            size: e.number().required().valid([16, 32, 64, 128, 256, 512, 1024])
                        }),
                        handler(e) {
                            let t, {
                                args: {
                                    type: n,
                                    id: r,
                                    format: u = "png",
                                    size: d = 128
                                }
                            } = e;
                            if ("user" === n) {
                                let e = a.default.getUser(r);
                                if (null != e) {
                                    t = s.default.getUserAvatarURL(e, !1, d, u);
                                    let n = window.GLOBAL_ENV.CDN_HOST;
                                    null != n && -1 !== t.indexOf(n) && (t += "&_=")
                                } else throw new i.default(o.RPCErrors.INVALID_USER, "Invalid user id: ".concat(r))
                            }
                            if (null == t) throw new i.default(o.RPCErrors.INVALID_COMMAND, "No valid type.");
                            return fetch(t).then(e => e.blob()).then(e => (0, l.readFileAsBase64)(e)).then(e => ({
                                data_url: e
                            }))
                        }
                    }
                }
        },
        568887: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("222007"), n("511434"), n("313619"), n("654714"), n("287168"), n("956660");
            var a = n("922932"),
                s = n("128259"),
                l = n("773336"),
                i = n("861309"),
                r = n("578287"),
                o = n("716724"),
                u = n("49111"),
                d = {
                    [u.RPCCommands.OPEN_EXTERNAL_LINK]: {
                        validation: e => (0, o.default)(e).required().keys({
                            url: e.string().required()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    url: n
                                }
                            } = e;
                            (0, r.validatePostMessageTransport)(t.transport);
                            try {
                                let e = new URL(n);
                                l.isPlatformEmbedded && a.default.focus(null, !0), (0, s.handleClick)({
                                    href: e.toString()
                                })
                            } catch (e) {
                                throw new i.default(u.RPCErrors.INVALID_COMMAND, "Invalid URL: ".concat(n))
                            }
                        }
                    }
                }
        },
        336566: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            }), n("222007");
            var a = n("297726");
            n("216391");
            var s = n("260320"),
                l = n("861309"),
                i = n("716724"),
                r = n("49111");

            function o(e) {
                if (e instanceof s.LobbyError) switch (e.code) {
                    case r.LobbyErrors.FULL:
                        throw new l.default(r.RPCErrors.LOBBY_FULL, "Lobby is full.");
                    case r.LobbyErrors.INVALID_SECRET:
                        throw new l.default(r.RPCErrors.INVALID_LOBBY_SECRET, "Lobby secret is invalid.");
                    case r.LobbyErrors.NOT_FOUND:
                        throw new l.default(r.RPCErrors.INVALID_LOBBY, "Lobby does not exist.");
                    case r.LobbyErrors.SERVICE_UNAVAILABLE:
                        throw new l.default(r.RPCErrors.SERVICE_UNAVAILABLE, "Lobby service is unavailable.");
                    case r.LobbyErrors.ALREADY_CONNECTING:
                        throw new l.default(r.RPCErrors.INVALID_COMMAND, "Already connecting to lobby.");
                    default:
                        throw new l.default(r.RPCErrors.UNKNOWN_ERROR, "Unknown error has occured.")
                }
                throw e
            }
            var u = {
                [r.RPCCommands.CREATE_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        type: e.number().valid(Object.values(r.LobbyTypes)),
                        capacity: e.number(),
                        locked: e.boolean(),
                        metadata: e.object()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                capacity: s,
                                locked: i,
                                metadata: u
                            }
                        } = e;
                        if (null == t.application.id) throw new l.default(r.RPCErrors.INVALID_COMMAND, "No application.");
                        return (0, a.createLobby)(t.id, t.application.id, {
                            type: n,
                            capacity: s,
                            locked: i,
                            metadata: u
                        }).catch(o)
                    }
                },
                [r.RPCCommands.UPDATE_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required(),
                        type: e.number().valid(Object.values(r.LobbyTypes)),
                        owner_id: e.string(),
                        capacity: e.number(),
                        locked: e.boolean(),
                        metadata: (0, i.default)(e)
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t,
                                type: n,
                                owner_id: s,
                                capacity: l,
                                locked: i,
                                metadata: r
                            }
                        } = e;
                        return (0, a.updateLobby)(t, {
                            type: n,
                            owner_id: s,
                            capacity: l,
                            locked: i,
                            metadata: r
                        }).catch(o)
                    }
                },
                [r.RPCCommands.DELETE_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        return (0, a.deleteLobby)(t).catch(o)
                    }
                },
                [r.RPCCommands.UPDATE_LOBBY_MEMBER]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        lobby_id: e.string().required(),
                        user_id: e.string().required(),
                        metadata: (0, i.default)(e)
                    }),
                    handler(e) {
                        let {
                            args: {
                                lobby_id: t,
                                user_id: n,
                                metadata: s
                            }
                        } = e;
                        return (0, a.updateLobbyMember)(t, n, {
                            metadata: s
                        }).catch(o)
                    }
                },
                [r.RPCCommands.CONNECT_TO_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required(),
                        secret: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                id: n,
                                secret: s
                            }
                        } = e;
                        return (0, a.connect)(t.id, n, s).catch(o)
                    }
                },
                [r.RPCCommands.DISCONNECT_FROM_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        (0, a.disconnect)(t)
                    }
                },
                [r.RPCCommands.SEND_TO_LOBBY]: {
                    scope: {
                        [r.RPC_SCOPE_CONFIG.ANY]: [r.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, i.default)(e).required().keys({
                        lobby_id: e.string().required(),
                        data: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                lobby_id: t,
                                data: n
                            }
                        } = e;
                        return (0, a.send)(t, n).catch(o)
                    }
                },
                [r.RPCCommands.SEARCH_LOBBIES]: {
                    scope: r.RPC_LOCAL_SCOPE,
                    validation: e => (0, i.default)(e).required().keys({
                        filter: e.array().items((0, i.default)(e).keys({
                            key: e.string().required(),
                            comparison: e.number().required(),
                            cast: e.number().required(),
                            value: e.string().required()
                        })),
                        sort: e.array().items((0, i.default)(e).keys({
                            key: e.string().required(),
                            cast: e.number().required(),
                            near_value: e.string()
                        })),
                        limit: e.number(),
                        distance: e.number()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                filter: n,
                                sort: s,
                                limit: l,
                                distance: i
                            }
                        } = e;
                        return (0, a.search)({
                            application_id: t.application.id,
                            filter: n,
                            sort: s,
                            limit: l,
                            distance: i
                        }).catch(o)
                    }
                },
                [r.RPCCommands.CONNECT_TO_LOBBY_VOICE]: {
                    scope: r.RPC_LOCAL_SCOPE,
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        (0, a.voiceConnect)(t)
                    }
                },
                [r.RPCCommands.DISCONNECT_FROM_LOBBY_VOICE]: {
                    scope: r.RPC_LOCAL_SCOPE,
                    validation: e => (0, i.default)(e).required().keys({
                        id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            args: {
                                id: t
                            }
                        } = e;
                        (0, a.voiceDisconnect)(t)
                    }
                }
            }
        },
        899114: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("222007");
            var a = n("605250"),
                s = n("578287"),
                l = n("716724"),
                i = n("49111");
            let r = new a.default(i.RPC_APPLICATION_LOGGING_CATEGORY);
            var o = {
                [i.RPCCommands.CAPTURE_LOG]: {
                    validation: e => (0, l.default)(e).required().keys({
                        level: e.string().required(),
                        message: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                level: n,
                                message: a
                            }
                        } = e;
                        (0, s.validatePostMessageTransport)(t.transport);
                        let l = t.application.id,
                            i = "".concat(l, " - ").concat(a);
                        switch (n) {
                            case "log":
                                r.log(i);
                                break;
                            case "warn":
                                r.warn(i);
                                break;
                            case "debug":
                                r.verbose(i);
                                break;
                            case "info":
                                r.info(i);
                                break;
                            case "error":
                                r.error(i)
                        }
                    }
                }
            }
        },
        709963: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            }), n("222007");
            var a = n("872717"),
                s = n("599110"),
                l = n("49111"),
                i = {
                    [l.RPCCommands.GET_NETWORKING_CONFIG]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler: () => Promise.all([a.default.get({
                            url: location.protocol + window.GLOBAL_ENV.NETWORKING_ENDPOINT,
                            retries: 3
                        }).then(e => {
                            let {
                                body: {
                                    address: t
                                }
                            } = e;
                            return t
                        }), a.default.post({
                            url: l.Endpoints.NETWORKING_TOKEN,
                            retries: 3,
                            oldFormErrors: !0
                        }).then(e => {
                            let {
                                body: {
                                    token: t
                                }
                            } = e;
                            return t
                        })]).then(e => {
                            let [t, n] = e;
                            return {
                                address: t,
                                token: n
                            }
                        })
                    },
                    [l.RPCCommands.NETWORKING_SYSTEM_METRICS]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t,
                                args: n
                            } = e;
                            n.application_id = t.application.id, s.default.track(l.AnalyticEvents.NETWORKING_SYSTEM_METRICS, n)
                        }
                    },
                    [l.RPCCommands.NETWORKING_PEER_METRICS]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t,
                                args: n
                            } = e;
                            n.application_id = t.application.id, s.default.track(l.AnalyticEvents.NETWORKING_PEER_METRICS, n)
                        }
                    },
                    [l.RPCCommands.NETWORKING_CREATE_TOKEN]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler: () => a.default.post({
                            url: l.Endpoints.NETWORKING_TOKEN,
                            retries: 1,
                            oldFormErrors: !0
                        }).then(e => e.body)
                    }
                }
        },
        258316: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a = {
                [n("843455").RPCCommands.GET_PLATFORM_BEHAVIORS]: {
                    handler: () => ({
                        iosKeyboardResizesView: !0
                    })
                }
            }
        },
        881963: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("27618"),
                i = n("843823"),
                r = n("697218"),
                o = n("578287"),
                u = n("49111"),
                d = {
                    [u.RPCCommands.GET_RELATIONSHIPS]: {
                        scope: u.OAuth2Scopes.RELATIONSHIPS_READ,
                        handler() {
                            let e = {
                                ...l.default.getRelationships()
                            };
                            return i.default.getUserAffinitiesUserIds().forEach(t => {
                                null == e[t] && null != r.default.getUser(t) && (e[t] = u.RelationshipTypes.IMPLICIT)
                            }), {
                                relationships: s.map(e, (e, t) => (0, o.transformRelationship)(e, t))
                            }
                        }
                    }
                }
        },
        88321: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            }), n("222007"), n("702976"), n("70102");
            var a = n("917351"),
                s = n.n(a),
                l = n("913144"),
                i = n("599110"),
                r = n("550368"),
                o = n("861309"),
                u = n("578287"),
                d = n("716724"),
                c = n("49111");
            let E = ["349134787773988865"];
            var f = {
                [c.RPCCommands.SET_ACTIVITY]: {
                    scope: {
                        [c.RPC_SCOPE_CONFIG.ANY]: [c.OAuth2Scopes.RPC, c.OAuth2Scopes.RPC_ACTIVITIES_WRITE, c.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, d.default)(e).required().keys({
                        pid: e.number().min(0),
                        activity: e.object().keys({
                            state: e.string().min(2).max(128),
                            details: e.string().min(2).max(128),
                            timestamps: (0, d.default)(e).keys({
                                start: e.number().min(1),
                                end: e.number().min(1)
                            }),
                            assets: (0, d.default)(e).keys({
                                large_image: e.string().min(1).max(256),
                                large_text: e.string().min(2).max(128),
                                small_image: e.string().min(1).max(256),
                                small_text: e.string().min(2).max(128)
                            }),
                            party: (0, d.default)(e).keys({
                                id: e.string().min(2).max(128),
                                size: e.array().items(e.number().min(1)).length(2),
                                privacy: e.number().default(c.ActivityPartyPrivacy.PRIVATE).valid([c.ActivityPartyPrivacy.PRIVATE, c.ActivityPartyPrivacy.PUBLIC])
                            }),
                            secrets: (0, d.default)(e).keys({
                                match: e.string().min(2).max(128),
                                join: e.string().min(2).max(128),
                                spectate: e.string().min(2).max(128)
                            }),
                            buttons: e.array().items((0, d.default)(e).keys({
                                label: e.string().min(1).max(32).required(),
                                url: e.string().uri().min(1).max(512).required()
                            })).min(1).max(2),
                            instance: e.boolean(),
                            supported_platforms: e.array().items(e.string().min(1).max(32)).min(1).max(3),
                            type: e.number().default(c.ActivityTypes.PLAYING).valid(c.ActivityTypes.PLAYING, c.ActivityTypes.LISTENING, c.ActivityTypes.WATCHING)
                        }).allow(null)
                    }),
                    handler(e) {
                        var t;
                        let n, {
                            socket: a,
                            args: {
                                pid: d,
                                activity: f
                            },
                            isSocketConnected: _
                        } = e;
                        if (![c.TransportTypes.IPC, c.TransportTypes.WEBSOCKET, c.TransportTypes.POST_MESSAGE].includes(a.transport)) throw new o.default(c.RPCErrors.INVALID_COMMAND, 'command not available from "'.concat(a.transport, '" transport'));
                        if (null == d && c.TransportTypes.IPC === a.transport) throw new o.default(c.RPCErrors.INVALID_COMMAND, "nonzero pid required");
                        if (null == f) return l.default.dispatch({
                            type: "LOCAL_ACTIVITY_UPDATE",
                            socketId: a.id,
                            pid: d,
                            activity: f
                        }), Promise.resolve(f);
                        f.name = a.application.name, f.application_id = a.application.id;
                        let C = a.transport === c.TransportTypes.POST_MESSAGE,
                            h = (0, u.computeActivityFlags)(f, C);
                        h > 0 && (f.flags = h), delete f.instance, null === (t = f.party) || void 0 === t || delete t.privacy;
                        let {
                            assets: I,
                            party: T,
                            secrets: S,
                            timestamps: N,
                            buttons: A,
                            type: m
                        } = f;
                        if ((null == m || m !== c.ActivityTypes.PLAYING && !C) && (f.type = c.ActivityTypes.PLAYING), null != S) {
                            let e = s.values(S).filter(e => !!e);
                            if (null != T && s.intersection(e, [T.id]).length > 0 && !E.includes(a.application.id)) throw new o.default(c.RPCErrors.INVALID_ACTIVITY_SECRET, "secrets cannot match the party id");
                            if (s.uniq(e).length < e.length) throw new o.default(c.RPCErrors.INVALID_ACTIVITY_SECRET, "secrets must be unique");
                            if (null != A) throw new o.default(c.RPCErrors.INVALID_ACTIVITY_SECRET, "secrets cannot currently be sent with buttons")
                        }
                        if (null != A && (f.metadata = {
                                button_urls: A.map(e => e.url)
                            }, f.buttons = A.map(e => e.label)), null != N)
                            for (let e of Object.keys(N)) Date.now().toString().length - N[e].toString().length > 2 && (N[e] = Math.floor(1e3 * N[e]));
                        if (null == I) n = Promise.resolve([]);
                        else {
                            if (null == a.application || null == a.application.id) throw Error();
                            n = (0, r.fetchAssetIds)(a.application.id, [I.large_image, I.small_image])
                        }
                        return n.then(e => {
                            let [t, n] = e;
                            if (null != I && (null != t ? I.large_image = t : delete I.large_image, null != n ? I.small_image = n : delete I.small_image), !_()) return;
                            l.default.dispatch({
                                type: "LOCAL_ACTIVITY_UPDATE",
                                socketId: a.id,
                                pid: d,
                                activity: f
                            });
                            let {
                                secrets: s,
                                party: r
                            } = f, o = {
                                application_id: a.application.id,
                                type: f.type
                            };
                            return null != s && (o.has_match_secret = !!s.match, o.has_join_secret = !!s.join), null != I && (o.has_images = !!(I.large_image || I.small_image)), null != r && (o.party_max = null != r.size ? r.size[1] : void 0, o.party_id = r.id), i.default.track(c.AnalyticEvents.ACTIVITY_UPDATED, o), f
                        })
                    }
                }
            }
        },
        473902: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("222007");
            var a = n("913144"),
                s = n("861309"),
                l = n("716724"),
                i = n("49111"),
                r = n("954016"),
                o = {
                    [n("843455").RPCCommands.SET_ORIENTATION_LOCK_STATE]: {
                        validation: e => (0, l.default)(e).required().keys({
                            lock_state: e.number().valid(r.OrientationLockState.UNLOCKED, r.OrientationLockState.PORTRAIT, r.OrientationLockState.LANDSCAPE).required(),
                            picture_in_picture_lock_state: e.number().valid(r.OrientationLockState.UNLOCKED, r.OrientationLockState.PORTRAIT, r.OrientationLockState.LANDSCAPE).allow(null).optional(),
                            grid_lock_state: e.number().valid(r.OrientationLockState.UNLOCKED, r.OrientationLockState.PORTRAIT, r.OrientationLockState.LANDSCAPE).allow(null).optional()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    lock_state: n,
                                    picture_in_picture_lock_state: l,
                                    grid_lock_state: r
                                }
                            } = e, o = t.application.id;
                            if (null != o) a.default.dispatch({
                                type: "EMBEDDED_ACTIVITY_SET_ORIENTATION_LOCK_STATE",
                                applicationId: o,
                                lockState: n,
                                pictureInPictureLockState: l,
                                gridLockState: r
                            });
                            else throw new s.default(i.RPCErrors.INVALID_COMMAND, "No application.")
                        }
                    }
                }
        },
        673090: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            }), n("424973"), n("222007");
            var a = n("812204"),
                s = n("305122"),
                l = n("235004"),
                i = n("389480"),
                r = n("78581"),
                o = n("245463"),
                u = n("697218"),
                d = n("861309"),
                c = n("716724"),
                E = n("880553"),
                f = n("49111"),
                _ = n("843455"),
                C = {
                    [_.RPCCommands.GET_SOUNDBOARD_SOUNDS]: {
                        scope: {
                            [f.RPC_SCOPE_CONFIG.ANY]: [_.OAuth2Scopes.RPC, f.RPC_LOCAL_SCOPE]
                        },
                        async handler() {
                            await (0, s.maybeFetchSoundboardSounds)();
                            let e = l.default.getSounds(),
                                t = [];
                            return e.forEach(e => e.forEach(e => t.push((0, i.soundboardSoundToAPI)(e)))), t
                        }
                    },
                    [_.RPCCommands.PLAY_SOUNDBOARD_SOUND]: {
                        scope: {
                            [f.RPC_SCOPE_CONFIG.ALL]: [_.OAuth2Scopes.RPC, _.OAuth2Scopes.RPC_VOICE_WRITE]
                        },
                        validation: e => (0, c.default)(e).required().keys({
                            guild_id: e.string(),
                            sound_id: e.string()
                        }),
                        async handler(e) {
                            let {
                                args: {
                                    guild_id: t,
                                    sound_id: n
                                }
                            } = e;
                            await (0, s.maybeFetchSoundboardSounds)();
                            let i = u.default.getCurrentUser(),
                                c = l.default.getSound(t, n),
                                _ = (0, E.default)(),
                                C = null != c && null != i && (0, r.canUseSoundboardSound)(i, c, _);
                            if (null == _) throw new d.default(f.RPCErrors.INVALID_CHANNEL, "Invalid Channel.");
                            if (C) {
                                if ((0, o.default)(_)) null != c && (0, r.playSound)(c, _.id, [a.default.RPC]);
                                else throw new d.default(f.RPCErrors.INVALID_PERMISSIONS, "Invalid Permissions.")
                            } else throw new d.default(f.RPCErrors.INVALID_SOUND, "Invalid Sound.")
                        }
                    }
                }
        },
        108087: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return C
                }
            }), n("222007"), n("424973");
            var a = n("251472"),
                s = n("465527"),
                l = n("55620"),
                i = n("84460"),
                r = n("524503"),
                o = n("167726"),
                u = n("861309"),
                d = n("383928"),
                c = n("49111");
            async function E(e, t) {
                let n = t.filter(e => e.type === c.SKUTypes.SUBSCRIPTION_GROUP),
                    a = await Promise.all(n.map(async t => await (0, r.fetchAllSubscriptionListingsDataForApplication)(e, t.id))),
                    s = [];
                return a.forEach(e => {
                    if (null == e) return null;
                    let n = e.subscription_listings;
                    if (null == n) return null;
                    let a = [];
                    n.forEach(e => {
                        e.subscription_plans.forEach(n => {
                            var s;
                            let l = null == n ? void 0 : n.price,
                                i = t.find(e => e.id === n.sku_id);
                            if (null == i) return;
                            let r = {
                                id: n.sku_id,
                                name: i.name,
                                type: i.type,
                                price: {
                                    amount: l,
                                    currency: c.CurrencyCodes.USD
                                },
                                application_id: e.application_id,
                                flags: e.sku_flags,
                                release_date: null !== (s = i.release_date) && void 0 !== s ? s : null
                            };
                            a.push(r)
                        })
                    }), a.filter(e => (null == e ? void 0 : e.price) != null).forEach(e => s.push(e))
                }), s
            }
            async function f(e) {
                let {
                    socket: t
                } = e;
                (0, d.validateTransportType)(t.transport);
                let n = t.application.id;
                if (null == n) throw new u.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                if (o.default.inTestModeForApplication(n) || i.default.inDevModeForApplication(n)) {
                    let e = await s.fetchSKUsForApplication(n, !1),
                        t = await E(n, e);
                    return [...e.filter(e => null != e.price), ...t]
                }
                let a = await l.fetchAllStoreListingsForApplication(n),
                    r = a.filter(e => e.sku.type !== c.SKUTypes.SUBSCRIPTION_GROUP).map(e => e.sku).filter(e => null != e.price),
                    f = await E(n, a.map(e => e.sku));
                return [...r, ...f]
            }

            function _(e) {
                let {
                    socket: t
                } = e;
                (0, d.validateTransportType)(t.transport);
                let n = t.application.id;
                if (null == n) throw new u.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                return a.fetchUserEntitlementsForApplication(n)
            }
            var C = {
                [c.RPCCommands.GET_SKUS]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: f
                },
                [c.RPCCommands.GET_ENTITLEMENTS]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: _
                },
                [c.RPCCommands.GET_SKUS_EMBEDDED]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: async e => ({
                        skus: await f(e)
                    })
                },
                [c.RPCCommands.GET_ENTITLEMENTS_EMBEDDED]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    handler: async e => ({
                        entitlements: await _(e)
                    })
                }
            }
        },
        657322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            }), n("860677");
            var a = n("861309"),
                s = n("846678"),
                l = n("842897"),
                i = n("49111"),
                r = {
                    [i.RPCCommands.SUBSCRIBE]: {
                        async handler(e) {
                            let {
                                server: t,
                                socket: n,
                                evt: r,
                                args: o
                            } = e, u = t.events[r];
                            if (null == u) throw new a.default(i.RPCErrors.INVALID_EVENT, "Invalid event: ".concat(r));
                            if (!(0, s.default)(n.authorization.scopes, u.scope)) throw new a.default(i.RPCErrors.INVALID_PERMISSIONS, "Not authenticated or invalid scope");
                            let d = u.handler({
                                    args: o,
                                    socket: n
                                }),
                                c = await (0, l.getInitialSubscriptionPayload)(n, r, o);
                            return new Promise(e => {
                                setImmediate(() => {
                                    t.addSubscription(n, r, o, d), null != c && t.dispatchToSubscriptions(r, e => e.socket.id === n.id, c)
                                }), e({
                                    evt: r
                                })
                            })
                        }
                    },
                    [i.RPCCommands.UNSUBSCRIBE]: {
                        handler(e) {
                            let {
                                server: t,
                                socket: n,
                                evt: s,
                                args: l
                            } = e;
                            if (null == t.events[s]) throw new a.default(i.RPCErrors.INVALID_EVENT, "Invalid event: ".concat(s));
                            return t.removeSubscription(n, s, l), {
                                evt: s
                            }
                        }
                    }
                }
        },
        220795: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("915639"),
                s = n("49111"),
                l = {
                    [s.RPCCommands.USER_SETTINGS_GET_LOCALE]: {
                        scope: s.OAuth2Scopes.IDENTIFY,
                        handler: () => ({
                            locale: a.default.locale
                        })
                    }
                }
        },
        272279: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            }), n("222007");
            var a = n("327037"),
                s = n("861309"),
                l = n("716724"),
                i = n("694352"),
                r = n("49111"),
                o = {
                    [r.RPCCommands.GET_USER]: {
                        scope: r.RPC_LOCAL_SCOPE,
                        validation: e => (0, l.default)(e).required().keys({
                            id: e.string().required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    id: t
                                }
                            } = e;
                            return (0, a.getUser)(t).then(i.default).catch(() => {
                                throw new s.default(r.RPCErrors.INVALID_USER, "Invalid user id: ".concat(t))
                            })
                        }
                    }
                }
        },
        730112: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return i
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("49111");

            function i(e, t) {
                return {
                    [l.RPCEvents.VOICE_SETTINGS_UPDATE]: {
                        scope: {
                            [l.RPC_SCOPE_CONFIG.ANY]: [l.OAuth2Scopes.RPC, l.OAuth2Scopes.RPC_VOICE_READ]
                        },
                        handler: () => t => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = t, l = e();
                            return !s.isEqual(l, n) && a(l), l
                        }
                    },
                    [l.RPCEvents.VOICE_SETTINGS_UPDATE_2]: {
                        scope: l.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: n
                            } = e;
                            return e => {
                                let {
                                    prevState: a,
                                    dispatch: l
                                } = e;
                                if (null == n.application.id) return a;
                                let i = t(n.application.id);
                                return !s.isEqual(i, a) && l(i), i
                            }
                        }
                    }
                }
            }
        },
        251744: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return R
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("233736"),
                i = n("299285"),
                r = n("373469"),
                o = n("42203"),
                u = n("305961"),
                d = n("260320"),
                c = n("42887"),
                E = n("945956"),
                f = n("568307"),
                _ = n("697218"),
                C = n("800762"),
                h = n("861309"),
                I = n("578287"),
                T = n("65810"),
                S = n("961400"),
                N = n("694352"),
                A = n("49111");

            function m(e) {
                var t;
                let {
                    args: {
                        channel_id: n
                    },
                    socket: a
                } = e, s = o.default.getChannel(n);
                if (null == s || !(0, I.hasMessageReadPermission)(s, a.application.id, a.authorization.scopes)) throw new h.default(A.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(n));
                if (s.isNSFW() && (null === (t = _.default.getCurrentUser()) || void 0 === t ? void 0 : t.nsfwAllowed) !== !0) throw new h.default(A.RPCErrors.INVALID_CHANNEL, "Invalid nsfw channel id: ".concat(s.id))
            }

            function p(e) {
                let {
                    args: {
                        lobby_id: t,
                        channel_id: n
                    }
                } = e;
                if (null != n) {
                    let e = o.default.getChannel(n);
                    if (null == e) throw new h.default(A.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(n))
                }
                if (null != t) {
                    let e = d.default.getLobby(t);
                    if (null == e) throw new h.default(A.RPCErrors.INVALID_LOBBY, "Invalid lobby id: ".concat(t))
                }
            }
            let g = {
                [A.RPCEvents.GUILD_STATUS]: {
                    scope: A.OAuth2Scopes.RPC,
                    handler(e) {
                        let {
                            args: {
                                guild_id: t
                            }
                        } = e;
                        if (null == u.default.getGuild(t)) throw new h.default(A.RPCErrors.INVALID_GUILD, "Invalid guild id: ".concat(t));
                        return e => {
                            var n;
                            let {
                                prevState: a,
                                dispatch: l
                            } = e, i = u.default.getGuild(t);
                            if (null == i) return;
                            let r = {
                                guild: {
                                    id: i.id,
                                    name: i.name,
                                    icon_url: null !== (n = i.getIconURL(128)) && void 0 !== n ? n : null
                                },
                                online: 0
                            };
                            return !s.isEqual(a, r) && l(r), r
                        }
                    }
                },
                [A.RPCEvents.VOICE_STATE_CREATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == o.default.getChannel(t)) throw new h.default(A.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = o.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                r = Object.values(C.default.getVoiceStatesForChannel(l.id));
                            if (n) {
                                let e = s.differenceBy(r, n, e => {
                                    let {
                                        userId: t
                                    } = e;
                                    return t
                                });
                                e.forEach(e => a((0, I.transformVoiceState)(i, l.id, e)))
                            }
                            return r
                        }
                    }
                },
                [A.RPCEvents.VOICE_STATE_DELETE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == o.default.getChannel(t)) throw new h.default(A.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = o.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                r = Object.values(C.default.getVoiceStatesForChannel(l.id)),
                                u = s.differenceBy(n, r, e => {
                                    let {
                                        userId: t
                                    } = e;
                                    return t
                                });
                            return u.forEach(e => a((0, I.transformVoiceState)(i, l.id, e))), r
                        }
                    }
                },
                [A.RPCEvents.VOICE_STATE_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler(e) {
                        let {
                            args: {
                                channel_id: t
                            }
                        } = e;
                        if (null == o.default.getChannel(t)) throw new h.default(A.RPCErrors.INVALID_CHANNEL, "Invalid channel id: ".concat(t));
                        return e => {
                            let {
                                prevState: n,
                                dispatch: a
                            } = e, l = o.default.getChannel(t);
                            if (null == l) return;
                            let i = l.getGuildId(),
                                r = Object.values(C.default.getVoiceStatesForChannel(l.id)).map(e => (0, I.transformVoiceState)(i, l.id, e)),
                                u = s.differenceWith(r, n, s.isEqual);
                            return u.forEach(e => a(e)), r
                        }
                    }
                },
                [A.RPCEvents.VOICE_CONNECTION_STATUS]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.OAuth2Scopes.RPC_VOICE_READ]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            state: (0, I.getVoiceConnectionState)(E.default.getState()),
                            hostname: E.default.getHostname(),
                            pings: E.default.getPings(),
                            average_ping: E.default.getAveragePing(),
                            last_ping: E.default.getLastPing()
                        };
                        return !s.isEqual(a, t) && n(a), a
                    }
                },
                [A.RPCEvents.MESSAGE_CREATE]: {
                    scope: A.OAuth2Scopes.RPC,
                    handler: m
                },
                [A.RPCEvents.MESSAGE_UPDATE]: {
                    scope: A.OAuth2Scopes.RPC,
                    handler: m
                },
                [A.RPCEvents.MESSAGE_DELETE]: {
                    scope: A.OAuth2Scopes.RPC,
                    handler: m
                },
                [A.RPCEvents.SPEAKING_START]: {
                    [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.OAuth2Scopes.RPC_VOICE_READ, A.RPC_LOCAL_SCOPE],
                    handler: p
                },
                [A.RPCEvents.SPEAKING_STOP]: {
                    [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.OAuth2Scopes.RPC_VOICE_READ, A.RPC_LOCAL_SCOPE],
                    handler: p
                },
                [A.RPCEvents.GUILD_CREATE]: {
                    scope: A.OAuth2Scopes.RPC,
                    handler() {}
                },
                [A.RPCEvents.CHANNEL_CREATE]: {
                    scope: A.OAuth2Scopes.RPC,
                    handler() {}
                },
                [A.RPCEvents.GAME_JOIN]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.GAME_SPECTATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_JOIN]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_JOIN_REQUEST]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_SPECTATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_INVITE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_PIP_MODE_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.OAuth2Scopes.RPC, A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE]: T.activityInstanceConnectedParticipantsUpdateEvent,
                [A.RPCEvents.THERMAL_STATE_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ORIENTATION_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ACTIVITY_INSTANCE_UPDATE]: {
                    handler() {}
                },
                [A.RPCEvents.VOICE_CHANNEL_SELECT]: {
                    scope: A.OAuth2Scopes.RPC,
                    handler() {}
                },
                [A.RPCEvents.NOTIFICATION_CREATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ALL]: [A.OAuth2Scopes.RPC, A.OAuth2Scopes.RPC_NOTIFICATIONS_READ]
                    },
                    handler() {}
                },
                [A.RPCEvents.RELATIONSHIP_UPDATE]: {
                    scope: A.RPC_LOCAL_SCOPE,
                    handler() {}
                },
                [A.RPCEvents.CURRENT_USER_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_LOCAL_SCOPE, A.OAuth2Scopes.IDENTIFY]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            currentUser: _.default.getCurrentUser()
                        };
                        return null != a.currentUser && (null == t || !(0, l.default)(a, t)) && n((0, N.default)(a.currentUser)), a
                    }
                },
                [A.RPCEvents.LOBBY_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.LOBBY_DELETE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.LOBBY_MEMBER_CONNECT]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.LOBBY_MEMBER_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.LOBBY_MEMBER_DISCONNECT]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.LOBBY_MESSAGE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_AUTHENTICATED_SCOPE, A.RPC_LOCAL_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ENTITLEMENT_CREATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_LOCAL_SCOPE, A.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.ENTITLEMENT_DELETE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ANY]: [A.RPC_LOCAL_SCOPE, A.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler() {}
                },
                [A.RPCEvents.USER_ACHIEVEMENT_UPDATE]: {
                    scope: A.RPC_LOCAL_SCOPE,
                    handler() {}
                },
                [A.RPCEvents.SCREENSHARE_STATE_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ALL]: [A.RPC_LOCAL_SCOPE, A.OAuth2Scopes.RPC_SCREENSHARE_READ]
                    },
                    handler: () => e => {
                        var t, n;
                        let {
                            prevState: a,
                            dispatch: l
                        } = e, o = r.default.getStreamerActiveStreamMetadata(), u = (null == o ? void 0 : o.pid) != null ? f.default.getGameForPID(o.pid) : null, d = (null == u ? void 0 : u.id) != null ? i.default.getApplication(u.id) : null, c = null != d ? (0, S.default)(d) : null, E = null == o ? void 0 : o.sourceName, _ = {
                            active: null != o,
                            pid: null !== (t = null == o ? void 0 : o.pid) && void 0 !== t ? t : null,
                            application: (n = null != c, n) ? {
                                name: E
                            } : null
                        };
                        return !s.isEqual(_, a) && l(_), _
                    }
                },
                [A.RPCEvents.VIDEO_STATE_UPDATE]: {
                    scope: {
                        [A.RPC_SCOPE_CONFIG.ALL]: [A.RPC_LOCAL_SCOPE, A.OAuth2Scopes.RPC_VIDEO_READ]
                    },
                    handler: () => e => {
                        let {
                            prevState: t,
                            dispatch: n
                        } = e, a = {
                            active: c.default.isVideoEnabled()
                        };
                        return !s.isEqual(a, t) && n(a), a
                    }
                }
            };
            var R = g
        },
        842897: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getInitialSubscriptionPayload: function() {
                    return d
                }
            });
            var a = n("191225"),
                s = n("499031"),
                l = n("601222"),
                i = n("710768"),
                r = n("65810"),
                o = n("49111"),
                u = n("954016");
            async function d(e, t, n) {
                var d, c;
                switch (t) {
                    case o.RPCEvents.ACTIVITY_PIP_MODE_UPDATE: {
                        let t = null === (d = e.application) || void 0 === d ? void 0 : d.id,
                            n = null != t ? a.default.getLayoutModeForApp(t) : null;
                        return null != n ? {
                            is_pip_mode: n !== u.ActivityLayoutMode.FOCUSED
                        } : null
                    }
                    case o.RPCEvents.ACTIVITY_LAYOUT_MODE_UPDATE: {
                        let t = null === (c = e.application) || void 0 === c ? void 0 : c.id,
                            n = null != t ? a.default.getLayoutModeForApp(t) : null;
                        return null != n ? {
                            layout_mode: n
                        } : null
                    }
                    case o.RPCEvents.THERMAL_STATE_UPDATE: {
                        let e = await (0, l.default)();
                        if (null == e) return null;
                        let t = (0, s.default)(e);
                        return {
                            thermal_state: t
                        }
                    }
                    case o.RPCEvents.ORIENTATION_UPDATE: {
                        let e = i.default.isScreenLandscape();
                        if (null == e) return null;
                        {
                            let t = e ? u.ActivityScreenOrientation.LANDSCAPE : u.ActivityScreenOrientation.PORTRAIT,
                                n = t === u.ActivityScreenOrientation.PORTRAIT ? "portrait" : "landscape";
                            return {
                                screen_orientation: t,
                                orientation: n
                            }
                        }
                    }
                    case o.RPCEvents.ACTIVITY_INSTANCE_UPDATE: {
                        let e = a.default.getConnectedActivityChannelId();
                        if (null != e) {
                            let t = a.default.getSelfEmbeddedActivityForChannel(e);
                            if (null != t) return Promise.resolve({
                                instance_id: t.activity_id
                            })
                        }
                        return Promise.resolve(null)
                    }
                    case o.RPCEvents.ACTIVITY_INSTANCE_PARTICIPANTS_UPDATE:
                        return (0, r.activityInstanceConnectedParticipants)();
                    default:
                        return null
                }
            }
        },
        470313: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a, s = n("917351"),
                l = n.n(s),
                i = n("861309"),
                r = n("49111");
            a = class {
                constructor(e, t, n) {
                    if (this.transport = e, this.version = t, this.encoding = n, this.id = l.uniqueId(), this.authorization = {
                            authing: !1,
                            scopes: [],
                            accessToken: null,
                            expires: new Date(0)
                        }, this.application = {
                            id: null,
                            name: null,
                            icon: null
                        }, null == t || t > r.RPC_VERSION || t < 1) throw new i.default(r.RPCCloseCodes.INVALID_VERSION, "Invalid Version: ".concat(t))
                }
            }
        },
        132181: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            });
            var a, s = n("861309"),
                l = n("614818"),
                i = n("470313"),
                r = n("49111");
            a = class extends i.default {
                send(e) {
                    var t;
                    null === (t = this.onSendingToRPCClient) || void 0 === t || t.call(this, e, this.id), this.postMessageToRPCClient([l.default.FRAME, e], this.origin)
                }
                close(e, t) {
                    !this.closed && this.postClose(this.origin, {
                        code: e,
                        message: t
                    }, this.postMessageToRPCClient), this.closed = !0
                }
                constructor({
                    origin: e,
                    postMessageToRPCClient: t,
                    frameId: n,
                    version: a,
                    encoding: l,
                    logger: i,
                    postClose: o,
                    onSendingToRPCClient: u
                }) {
                    if (super(r.TransportTypes.POST_MESSAGE, a, l), -1 === ["etf", "json"].indexOf(l)) throw new s.default(r.RPCCloseCodes.INVALID_ENCODING, "Invalid Encoding: ".concat(l));
                    if ("etf" === l) throw new s.default(r.RPCCloseCodes.INVALID_ENCODING, "Erlpack cannot be used on this client");
                    this.origin = e, this.postMessageToRPCClient = t, this.frameId = n, this.logger = i, this.postClose = o, this.onSendingToRPCClient = u, this.closed = !1
                }
            }
        },
        17891: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            }), n("222007");
            var a, s = n("44170"),
                l = n("191225"),
                i = n("599110"),
                r = n("659500"),
                o = n("861309"),
                u = n("614818"),
                d = n("49111");
            let c = new Map,
                E = new Set,
                f = (e, t, n) => {
                    n([u.default.CLOSE, t], e)
                };
            a = class extends s.EventEmitter {
                routeEvent(e, t, n, a) {
                    if (!Array.isArray(n)) throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Protocol error");
                    let [s, l] = n;
                    switch (s) {
                        case u.default.HANDSHAKE:
                            if (null != e) throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Already connected");
                            return this.handleHandshake(t, l, a);
                        case u.default.FRAME:
                            if (null == e) throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Not connected");
                            return this.handleFrame(t, e, l);
                        case u.default.CLOSE:
                            if (null == e) throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Not connected");
                            return this.handleClose(e, l);
                        default:
                            throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Invalid opcode")
                    }
                }
                constructor(e, t, a, s) {
                    var u;
                    super(), u = this, this.disconnectSocket = function(e, t) {
                        var n, a;
                        let s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        u.emit("disconnect", e, s ? void 0 : t), e.close(t.code, null !== (n = t.message) && void 0 !== n ? n : "Unknown");
                        let [l] = null !== (a = Array.from(c.entries()).find(t => {
                            let [n, a] = t;
                            return a === e
                        })) && void 0 !== a ? a : [null, null];
                        null != l && c.delete(l)
                    }, this.handleIFrameMount = e => {
                        let {
                            id: t
                        } = e;
                        E.add(t), this.handshakeFailureTimeoutId = setTimeout(() => {
                            Array.from(l.default.getSelfEmbeddedActivities().entries()).forEach(e => {
                                let [t, n] = e;
                                i.default.track(d.AnalyticEvents.ACTIVITY_HANDSHAKE_TIMED_OUT, {
                                    application_id: t,
                                    channel_id: n.channelId,
                                    guild_id: n.guildId,
                                    timeout_ms: 1e4
                                })
                            })
                        }, 1e4)
                    }, this.handleIFrameUnmount = e => {
                        var t;
                        let {
                            id: n
                        } = e;
                        E.delete(n);
                        let [a, s] = null !== (t = Array.from(c.entries()).find(e => {
                            let [t, a] = e;
                            return a.frameId === n
                        })) && void 0 !== t ? t : [null, null];
                        null != s && null != a && (this.disconnectSocket(s, {
                            code: d.RPCCloseCodes.CLOSE_NORMAL,
                            message: "iFrame gone"
                        }, !0), c.delete(a))
                    }, this.handleMessage = (e, t, n) => {
                        let a = c.get(t);
                        try {
                            this.routeEvent(a, t, e, n)
                        } catch (e) {
                            null != a ? this.disconnectSocket(a, {
                                code: e.code,
                                message: e.message
                            }, !0) : f(t, {
                                code: e.code,
                                message: e.message
                            }, n)
                        }
                    }, this.handleFrame = (e, t, n) => {
                        var a;
                        let s;
                        if (e !== t.origin) throw new o.default(d.RPCCloseCodes.INVALID_ORIGIN, "Origin has changed");
                        try {
                            s = "string" == typeof n ? JSON.parse(n) : n
                        } catch (e) {
                            throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Payload not recognized encoding")
                        }
                        null === (a = this.onFrameHandled) || void 0 === a || a.call(this, s, this.logger, t), this.emit("request", t, s)
                    }, this.handleHandshake = async (e, t, a) => {
                        let s;
                        null != this.handshakeFailureTimeoutId && clearTimeout(this.handshakeFailureTimeoutId);
                        let l = (await n.el("990599").then(n.t.bind(n, "990599", 23))).default;
                        try {
                            l.assert(t, l.object().required().keys({
                                v: l.number().min(1).max(1).required(),
                                encoding: l.string().equal("json").optional(),
                                client_id: l.string().required(),
                                frame_id: l.string().required()
                            }))
                        } catch (e) {
                            throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, e.message)
                        }
                        let i = t.frame_id,
                            r = !E.has(i);
                        if (r) throw this.logger.error("Unrecognized frame ID ".concat(i)), new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Unrecognized frame ID ".concat(i));
                        try {
                            var u;
                            s = this.createPostMessageProxySocket({
                                origin: e,
                                postMessageToRPCClient: a,
                                frameId: i,
                                version: Number(t.v),
                                logger: this.logger,
                                postClose: f,
                                encoding: null !== (u = t.encoding) && void 0 !== u ? u : "json"
                            })
                        } catch (e) {
                            throw this.logger.error("Error opening window socket ".concat(e)), e
                        }
                        this.logger.info("Socket Opened: ".concat(s.id));
                        try {
                            if (await this.validateSocketClient(s, e, t.client_id), !E.has(i)) throw this.logger.error("Frame ID ".concat(i, " no longer exists")), new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, "Unrecognized frame ID ".concat(i));
                            c.set(e, s), E.delete(i), this.emit("connect", s), this.logger.info("Socket Validated: ".concat(s.id))
                        } catch (e) {
                            throw this.logger.info("Socket Closed: ".concat(s.id, ", ").concat(e.message)), e
                        }
                    }, this.handleClose = async (e, t) => {
                        let a = (await n.el("990599").then(n.t.bind(n, "990599", 23))).default;
                        try {
                            a.assert(t, a.object().required().unknown(!0).keys({
                                code: a.number().valid(Object.values(d.RPCCloseCodes)).required(),
                                message: a.string().optional()
                            }))
                        } catch (e) {
                            throw new o.default(d.RPCCloseCodes.CLOSE_UNSUPPORTED, e.message)
                        }
                        this.disconnectSocket(e, t)
                    }, r.ComponentDispatch.subscribe(d.ComponentActions.IFRAME_MOUNT, this.handleIFrameMount), r.ComponentDispatch.subscribe(d.ComponentActions.IFRAME_UNMOUNT, this.handleIFrameUnmount), this.validateSocketClient = e, this.logger = t, this.createPostMessageProxySocket = a, this.onFrameHandled = s
                }
            }
        },
        219380: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            }), n("222007");
            var a = n("901165"),
                s = n("50885"),
                l = n("84090"),
                i = n("251744"),
                r = n("261131"),
                o = n("370453"),
                u = n("878099"),
                d = n("221850"),
                c = n("700721"),
                E = n("871832"),
                f = n("805875"),
                _ = n("376897"),
                C = n("683805"),
                h = n("825734"),
                I = n("766383"),
                T = n("696287"),
                S = n("750390"),
                N = n("195180"),
                A = n("357147");
            let m = {
                    ...l.crossPlatformCommands,
                    ...d.default,
                    ...c.default,
                    ...f.default,
                    ..._.default,
                    ...C.default,
                    ...h.default,
                    ...T.default,
                    ...N.default,
                    ...S.default,
                    ...E.default,
                    ...I.default
                },
                p = {
                    ...i.default,
                    ...o.overlayEventHandlers,
                    ...u.voiceSettingsEventHandlers
                };
            var g = {
                server: r.default,
                commands: m,
                events: p,
                stores: [a.default],
                transports: [A.default],
                registerTransportsForEmbeddedPlatform: function() {
                    s.default.ensureModule("discord_rpc").then(() => {
                        let e = [n("255516").default, n("90906").default];
                        for (let t of e) r.default.registerTransport(t)
                    })
                }
            }
        },
        370453: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                overlayEventHandlers: function() {
                    return u
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("686470"),
                i = n("860957"),
                r = n("861309"),
                o = n("49111");
            let u = {
                [o.RPCEvents.OVERLAY_UPDATE]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                pid: t
                            },
                            socket: n
                        } = e;
                        if ("number" != typeof t || t < 10) throw new r.default(o.RPCErrors.INVALID_EVENT, "Invalid pid");
                        return e => {
                            let {
                                prevState: a,
                                dispatch: r
                            } = e, o = i.default.enabled, u = !0, d = n.application.id;
                            if (null != d) {
                                let e = l.default.getActiveLibraryApplication(d);
                                null != e && (o = o && e.isOverlayEnabled()), u = i.default.isInputLocked(t)
                            }
                            let c = {
                                enabled: o,
                                locked: u
                            };
                            return !s.isEqual(c, a) && r(c), c
                        }
                    }
                }
            }
        },
        878099: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                voiceSettingsEventHandlers: function() {
                    return l
                }
            });
            var a = n("730112"),
                s = n("56245");
            let l = (0, a.default)(s.getDeprecatedVoiceSettings, s.getVoiceSettings)
        },
        56245: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                unlockOverlay: function() {
                    return c
                },
                validateSocketClient: function() {
                    return E
                },
                getDeprecatedVoiceSettings: function() {
                    return f
                },
                getVoiceSettings: function() {
                    return _
                }
            });
            var a = n("539405"),
                s = n("860957"),
                l = n("50885"),
                i = n("13798"),
                r = n("861309"),
                o = n("578287"),
                u = n("49111");
            let d = ["207646673902501888"];

            function c(e) {
                let t = s.default.isReady(e);
                return t ? (a.default.setLocked(!1, e), {
                    lock() {
                        a.default.setLocked(!0, e)
                    },
                    context: u.AppContext.OVERLAY
                }) : (l.default.focus(null, !0), {
                    lock() {
                        l.default.setForegroundProcess(e)
                    },
                    context: u.AppContext.APP
                })
            }
            let E = async (e, t, n) => {
                if ((0, o.validateOriginAndUpdateSocket)(e, t), (null == n || "" === n) && (0, o.isMatchingOrigin)(t)) return e.authorization.scopes = [u.RPC_PRIVATE_SCOPE, u.RPC_PRIVATE_LIMITED_SCOPE], Promise.resolve();
                if (null == n || "" === n) return Promise.reject(new r.default(u.RPCCloseCodes.INVALID_CLIENTID, "No Client ID Specified"));
                let a = l.default.releaseChannel !== u.PublicReleaseChannels.CANARY && !d.includes(n) && e.transport !== u.TransportTypes.POST_MESSAGE;
                return await (0, o.processSocketThrottlers)(n, a), (0, o.fetchApplicationsRPC)(e, n, t)
            }, f = () => (0, o.getDeprecatedVoiceSettingsWithShortcut)(e => {
                let t = [];
                if (null != e.modeOptions.shortcut && Array.isArray(e.modeOptions.shortcut)) t = e.modeOptions.shortcut.map(e => {
                    var t;
                    return {
                        type: e[0],
                        code: e[1],
                        name: null !== (t = (0, i.codeToKey)(e)) && void 0 !== t ? t : "unknown"
                    }
                });
                return t
            }), _ = e => (0, o.getVoiceSettingsWithShortcut)(e, e => {
                let t = "";
                return null != e.modeOptions.shortcut && Array.isArray(e.modeOptions.shortcut) && (t = (0, i.toString)(e.modeOptions.shortcut)), t
            })
        },
        828309: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("748900"),
                s = n("219380"),
                l = new a.default(s.default)
        },
        221850: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return y
                }
            }), n("222007"), n("702976");
            var a = n("37983");
            n("884691");
            var s = n("524297"),
                l = n("77078"),
                i = n("260365"),
                r = n("636974"),
                o = n("823411"),
                u = n("267363"),
                d = n("599417"),
                c = n("244201"),
                E = n("550766"),
                f = n("299803"),
                _ = n("587984"),
                C = n("292687"),
                h = n("42203"),
                I = n("52028"),
                T = n("101125"),
                S = n("471671"),
                N = n("568734"),
                A = n("449008"),
                m = n("253981"),
                p = n("563680"),
                g = n("861309"),
                R = n("578287"),
                O = n("716724"),
                L = n("613652"),
                v = n("207873"),
                M = n("56245"),
                P = n("49111");
            async function D(e, t, n, a) {
                let s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "",
                    l = I.default.getApplicationActivity(t);
                if (null == l || null == l.secrets || !(0, R.validateActivityInvite)(a, l.party, l.secrets)) throw new g.default(P.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure an activity includes a party and appropriate secret.");
                let o = (0, f.default)(l, T.default);
                if (o) {
                    let {
                        lock: t
                    } = (0, M.unlockOverlay)(e);
                    return (0, r.openModal)(l, o).then(() => {
                        throw t(), new g.default(P.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure user does have have privacy enabled.")
                    })
                }
                await i.default.sendActivityInviteUser({
                    userId: n,
                    type: a,
                    activity: l,
                    content: s,
                    location: "In-Game Invite"
                })
            }
            var y = {
                [P.RPCCommands.SEND_ACTIVITY_JOIN_INVITE]: {
                    scope: {
                        [P.RPC_SCOPE_CONFIG.ANY]: [P.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE]
                    },
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                user_id: n,
                                pid: a
                            }
                        } = e, s = t.application.id;
                        if (null == s) throw new g.default(P.RPCErrors.INVALID_COMMAND, "No application.");
                        return D(a, s, n, P.ActivityActionTypes.JOIN)
                    }
                },
                [P.RPCCommands.CLOSE_ACTIVITY_JOIN_REQUEST]: {
                    scope: {
                        [P.RPC_SCOPE_CONFIG.ANY]: [P.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE]
                    },
                    handler(e) {
                        let {
                            args: {
                                user_id: t
                            }
                        } = e, n = h.default.getDMFromUserId(t);
                        null != n && (0, u.ack)(n, !0, !0)
                    }
                },
                [P.RPCCommands.ACTIVITY_INVITE_USER]: {
                    scope: {
                        [P.RPC_SCOPE_CONFIG.ANY]: [P.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, O.default)(e).required().keys({
                        user_id: e.string().required(),
                        type: e.number().required().valid([P.ActivityActionTypes.JOIN]),
                        content: e.string().min(0).max(1024),
                        pid: e.number().min(0).required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                user_id: a,
                                content: s,
                                pid: l
                            }
                        } = e, i = t.application.id;
                        if (null == i) throw new g.default(P.RPCErrors.INVALID_COMMAND, "No application.");
                        return D(l, i, a, n, s)
                    }
                },
                [P.RPCCommands.ACCEPT_ACTIVITY_INVITE]: {
                    scope: {
                        [P.RPC_SCOPE_CONFIG.ANY]: [P.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE]
                    },
                    validation: e => (0, O.default)(e).required().keys({
                        type: e.number().required().valid([P.ActivityActionTypes.JOIN]),
                        user_id: e.string().required(),
                        session_id: e.string().required(),
                        channel_id: e.string().required(),
                        message_id: e.string().required()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                type: n,
                                user_id: a,
                                session_id: s,
                                channel_id: l,
                                message_id: i
                            }
                        } = e, r = t.application.id;
                        if (null == r) throw new g.default(P.RPCErrors.INVALID_COMMAND, "No application.");
                        let u = Promise.resolve(!1);
                        if (n === P.ActivityActionTypes.JOIN) u = o.default.join({
                            userId: a,
                            sessionId: s,
                            applicationId: r,
                            channelId: l,
                            messageId: i
                        });
                        return u.then(e => {
                            if (!e) throw new g.default(P.RPCErrors.INVALID_INVITE, "Invite is expired or invalid.")
                        })
                    }
                },
                [P.RPCCommands.OPEN_INVITE_DIALOG]: {
                    scope: {
                        [P.RPC_SCOPE_CONFIG.ANY]: [P.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE, P.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        let {
                            socket: t
                        } = e, {
                            channel: s,
                            guild: i
                        } = (0, v.validateOpenInviteDialog)(), r = C.default.getWindow(P.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                        (null == r ? void 0 : r.closed) && (r = null);
                        let o = null != r ? P.AppContext.POPOUT : P.AppContext.APP;
                        (0, p.exitFullScreen)({}, null == r ? void 0 : r.document), (0, l.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("310688").then(n.bind(n, "310688"));
                            return n => (0, a.jsx)(e, {
                                ...n,
                                guild: i,
                                channel: s,
                                applicationId: t.application.id,
                                analyticsLocation: P.AnalyticsLocations.ACTIVITY_RPC,
                                source: P.InstantInviteSources.ACTIVITY_INVITE
                            })
                        }, {
                            contextKey: o === P.AppContext.POPOUT ? l.POPOUT_MODAL_CONTEXT : l.DEFAULT_MODAL_CONTEXT
                        })
                    }
                },
                [P.RPCCommands.INITIATE_IMAGE_UPLOAD]: (0, s.createRPCCommand)(P.RPCCommands.INITIATE_IMAGE_UPLOAD, {
                    scope: {
                        [P.RPC_SCOPE_CONFIG.ANY]: [P.OAuth2Scopes.RPC, P.RPC_LOCAL_SCOPE, P.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        var t;
                        let {
                            socket: n
                        } = e, a = n.application.id;
                        if (null == a) throw new g.default(P.RPCErrors.INVALID_COMMAND, "No application.");
                        let s = null === (t = (0, L.default)()) || void 0 === t ? void 0 : t.id;
                        if (null == s) throw new g.default(P.RPCErrors.UNKNOWN_ERROR, "Unable to find selected channel");
                        return new Promise((e, t) => {
                            ! function(e, t) {
                                var n;
                                let a = S.default.getFocusedWindowId(),
                                    s = null == a ? null : null === (n = (0, c.getAppWindowContextValue)(a)) || void 0 === n ? void 0 : n.renderWindow;
                                if (null == s) throw new g.default(P.RPCErrors.UNKNOWN_ERROR, "No valid window found");
                                let l = s.document.createElement("input");
                                l.style.display = "none", l.type = "file", l.accept = "image/jpeg, image/jpg, image/png, image/gif";
                                let i = () => {
                                    (null == l.files || 0 === l.files.length) && t(), s.document.body.removeEventListener("focus", i, !0), setTimeout(() => {
                                        s.document.body.removeChild(l)
                                    }, 1e3)
                                };
                                l.addEventListener("change", () => {
                                    (0, A.isNotNullish)(l.files) && e(l.files[0]), i()
                                }), l.addEventListener("cancel", () => {
                                    i()
                                }), s.document.body.addEventListener("focus", i, !0), s.document.body.appendChild(l), l.click()
                            }(async n => {
                                let l = await (0, E.uploadImageAttachment)(a, s, n);
                                (0, A.isNotNullish)(l) && (0, A.isNotNullish)(l.url) && !(l instanceof d.default) ? e({
                                    image_url: l.url
                                }): t(l)
                            }, () => t())
                        }).catch(e => {
                            throw new g.default(P.RPCErrors.UNKNOWN_ERROR, "Failed to upload image")
                        })
                    }
                }),
                [P.RPCCommands.OPEN_SHARE_MOMENT_DIALOG]: (0, s.createRPCCommand)(P.RPCCommands.OPEN_SHARE_MOMENT_DIALOG, {
                    scope: {
                        [P.RPC_SCOPE_CONFIG.ANY]: [P.RPC_AUTHENTICATED_SCOPE]
                    },
                    handler(e) {
                        var t;
                        let {
                            socket: n,
                            args: {
                                mediaUrl: a
                            }
                        } = e;
                        (0, R.validatePostMessageTransport)(n.transport);
                        let s = n.application.id;
                        if (null == s) throw new g.default(P.RPCErrors.INVALID_COMMAND, "No application.");
                        let l = (0, N.hasFlag)(null !== (t = n.application.flags) && void 0 !== t ? t : 0, P.ApplicationFlags.EMBEDDED);
                        if (!l) throw new g.default(P.RPCErrors.INVALID_COMMAND, "This application cannot access this API");
                        let i = (0, L.default)();
                        if (null == i) throw new g.default(P.RPCErrors.INVALID_COMMAND, "No channel found");
                        if (!m.default.isDiscordCdnUrl(a)) throw new g.default(P.RPCErrors.INVALID_PAYLOAD, "mediaUrl must be a Discord CDN url");
                        (0, _.openActivityShareMomentModal)({
                            applicationId: s,
                            channelId: i.id,
                            mediaUrl: a
                        })
                    }
                })
            }
        },
        700721: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("872717"),
                l = n("862337"),
                i = n("77078"),
                r = n("251472"),
                o = n("84460"),
                u = n("299285"),
                d = n("697218"),
                c = n("437712"),
                E = n("167726"),
                f = n("50885"),
                _ = n("861309"),
                C = n("49111"),
                h = {
                    [C.RPCCommands.VALIDATE_APPLICATION]: {
                        scope: C.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t
                            } = e, s = t.application.id;
                            try {
                                if (null == s) throw new _.default(C.RPCErrors.INVALID_COMMAND, "No application.");
                                let e = u.default.getApplication(s);
                                if (null == e) throw new _.default(C.RPCErrors.INVALID_ENTITLEMENT, "SKU does not exist.");
                                let t = e.primarySkuId;
                                if (null == t) throw new _.default(C.RPCErrors.INVALID_ENTITLEMENT, "SKU does not exist.");
                                return Promise.race([(function(e, t) {
                                    let n = c.default.isEntitledToSku(d.default.getCurrentUser(), e, t);
                                    return null != n ? Promise.resolve(n) : (0, r.fetchUserEntitlementsForApplication)(t).then(() => !0 === c.default.isEntitledToSku(d.default.getCurrentUser(), e, t))
                                })(t, e.id).then(e => {
                                    if (!e) throw new _.default(C.RPCErrors.INVALID_ENTITLEMENT, "User does not have entitlement.")
                                }), (0, l.timeoutPromise)(1e4).then(() => {
                                    throw new _.default(C.RPCErrors.INVALID_ENTITLEMENT, "Timed out fetching entitlement.")
                                })])
                            } catch (e) {
                                throw e.code === C.RPCErrors.INVALID_ENTITLEMENT && (f.default.focus(null, !0), (0, i.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("43264").then(n.bind(n, "43264"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        applicationId: s
                                    })
                                })), e
                            }
                        }
                    },
                    [C.RPCCommands.GET_ENTITLEMENT_TICKET]: {
                        scope: C.RPC_LOCAL_SCOPE,
                        handler(e) {
                            let {
                                socket: t
                            } = e, l = t.application.id;
                            if (null == l) throw new _.default(C.RPCErrors.INVALID_COMMAND, "No application.");
                            return s.default.post({
                                url: C.Endpoints.ENTITLEMENT_TICKET(l),
                                body: {
                                    test_mode: E.default.inTestModeForApplication(l) || o.default.inDevModeForApplication(l)
                                },
                                retries: 3,
                                oldFormErrors: !0
                            }).then(e => {
                                let {
                                    body: t
                                } = e;
                                return t
                            }).catch(e => {
                                throw f.default.focus(null, !0), (0, i.openModalLazy)(async () => {
                                    let {
                                        default: e
                                    } = await n.el("43264").then(n.bind(n, "43264"));
                                    return t => (0, a.jsx)(e, {
                                        ...t,
                                        applicationId: l
                                    })
                                }), e
                            })
                        }
                    }
                }
        },
        871832: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("159997"),
                i = n("33942"),
                r = n("773336"),
                o = n("50885"),
                u = n("18520"),
                d = n("49111"),
                c = (0, u.default)((e, t, n, r, o, u, d, c, E, f, _, C, h) => {
                    let I = "OAuth2Authorize_".concat(e, "_").concat(f, "_").concat(_);
                    return new Promise(T => {
                        let S = e => {
                            let {
                                location: t
                            } = e;
                            T(t)
                        };
                        (0, s.openModal)(s => (0, a.jsx)(i.OAuth2AuthorizeModal, {
                            ...s,
                            authorization: t,
                            clientId: e,
                            scopes: null != n ? n : [],
                            callback: S,
                            responseType: o,
                            redirectUri: u,
                            codeChallenge: d,
                            codeChallengeMethod: c,
                            state: E,
                            permissions: r,
                            guildId: f,
                            channelId: _,
                            prompt: C,
                            disableGuildSelect: "boolean" == typeof h ? h : "true" === h
                        }), {
                            modalKey: I,
                            onCloseRequest: () => {
                                (0, s.closeModal)(I), T(void 0)
                            }
                        }, (0, l.default)(t.application) ? s.POPOUT_MODAL_CONTEXT : s.DEFAULT_MODAL_CONTEXT)
                    })
                }, function(e) {
                    if (r.isPlatformEmbedded) {
                        let t = (0, l.default)(e) ? d.PopoutWindowKeys.CHANNEL_CALL_POPOUT : null;
                        (0, r.isWindows)() ? o.default.minimize(t): o.default.restore(t), o.default.focus(t)
                    }
                })
        },
        805875: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("321836"),
                s = n("50885"),
                l = n("578287"),
                i = n("716724"),
                r = {
                    [n("49111").RPCCommands.ENCOURAGE_HW_ACCELERATION]: {
                        validation: e => (0, i.default)(e),
                        handler(e) {
                            let {
                                socket: t
                            } = e;
                            (0, l.validatePostMessageTransport)(t.transport);
                            let n = t.application.id;
                            if (null != n) return (0, a.default)(n), {
                                enabled: s.default.getEnableHardwareAcceleration()
                            }
                        }
                    }
                }
        },
        376897: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("636974"),
                r = n("970728"),
                o = n("539405"),
                u = n("299803"),
                d = n("52028"),
                c = n("101125"),
                E = n("861309"),
                f = n("578287"),
                _ = n("716724"),
                C = n("56245"),
                h = n("49111"),
                I = {
                    [h.RPCCommands.SET_OVERLAY_LOCKED]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            locked: e.boolean().required(),
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    locked: t,
                                    pid: n
                                },
                                socket: {
                                    application: a
                                }
                            } = e, s = a.id;
                            if (null == s) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            o.default.setLocked(t, n)
                        }
                    },
                    [h.RPCCommands.OPEN_OVERLAY_ACTIVITY_INVITE]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            type: e.number().required().valid([h.ActivityActionTypes.JOIN]),
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                socket: t,
                                args: {
                                    type: n,
                                    pid: a
                                }
                            } = e, s = t.application.id;
                            if (null == s) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            let l = d.default.getApplicationActivity(s);
                            if (null == l || null == l.secrets || !(0, f.validateActivityInvite)(n, l.party, l.secrets)) throw new E.default(h.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure an activity includes a party and appropriate secret.");
                            let {
                                lock: r
                            } = (0, C.unlockOverlay)(a), o = (0, u.default)(l, c.default);
                            return (0, i.openModal)(l, o).then(() => {
                                if (r(), o) throw new E.default(h.RPCErrors.NO_ELIGIBLE_ACTIVITY, "No eligible activity for application. Ensure user does have have privacy enabled.")
                            })
                        }
                    },
                    [h.RPCCommands.OPEN_OVERLAY_GUILD_INVITE]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            code: e.string().required(),
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    code: t,
                                    pid: n
                                },
                                socket: a
                            } = e, s = a.application.id;
                            if (null == s) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            return r.default.resolveInvite(t, "Game SDK").then(e => {
                                let {
                                    invite: t,
                                    code: a
                                } = e;
                                if (null == t) throw new E.default(h.RPCErrors.INVALID_INVITE, "Invalid invite id: ".concat(a));
                                let {
                                    context: s,
                                    lock: i
                                } = (0, C.unlockOverlay)(n);
                                return new Promise(e => {
                                    l.default.dispatch({
                                        type: "INVITE_MODAL_OPEN",
                                        invite: t,
                                        code: a,
                                        context: s,
                                        resolve: e
                                    })
                                }).then(i)
                            })
                        }
                    },
                    [h.RPCCommands.OPEN_OVERLAY_VOICE_SETTINGS]: {
                        scope: h.RPC_LOCAL_SCOPE,
                        validation: e => (0, _.default)(e).required().keys({
                            pid: e.number().min(0).required()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    pid: t
                                },
                                socket: l
                            } = e, i = l.application.id;
                            if (null == i) throw new E.default(h.RPCErrors.INVALID_COMMAND, "No application.");
                            let {
                                lock: r
                            } = (0, C.unlockOverlay)(t);
                            return new Promise(e => {
                                (0, s.openModalLazy)(async () => {
                                    let {
                                        default: t
                                    } = await n.el("301450").then(n.bind(n, "301450"));
                                    return n => (0, a.jsx)(t, {
                                        ...n,
                                        mediaEngineContext: i,
                                        title: l.application.name,
                                        onClose: () => {
                                            n.onClose(), r(), e()
                                        }
                                    })
                                })
                            })
                        }
                    }
                }
        },
        683805: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            });
            var a, s, l = n("37983");
            n("884691");
            var i = n("391679"),
                r = n("77078"),
                o = n("913144"),
                u = n("850068"),
                d = n("697796"),
                c = n("619340"),
                E = n("569272"),
                f = n("970728"),
                _ = n("913645"),
                C = n("393414"),
                h = n("271938"),
                I = n("697218"),
                T = n("599110"),
                S = n("253981"),
                N = n("50885"),
                A = n("861309"),
                m = n("49111");

            function p(e, t) {
                null != e && T.default.track(m.AnalyticEvents.EXTERNAL_DYNAMIC_LINK_RECEIVED, {
                    invite_code: null,
                    has_auth_token: null,
                    is_backgrounded: null,
                    fingerprint: (0, i.extractId)(e),
                    link_type: t
                })
            }(a = s || (s = {})).SETTINGS = "settings", a.CHANGELOG = "changelog", a.LIBRARY = "library", a.STORE = "store", a.INVITE = "invite", a.CHANNEL = "channel", a.GUILD_SETTINGS = "guild_settings";
            var g = {
                [m.RPCCommands.INVITE_BROWSER]: {
                    scope: m.RPC_PRIVATE_SCOPE,
                    async handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e, {
                            invite: n
                        } = await f.default.resolveInvite(t, "Desktop Modal");
                        if (null == n) throw new A.default(m.RPCErrors.INVALID_INVITE, "Invalid invite id: ".concat(t));
                        return h.default.isAuthenticated() ? o.default.dispatch({
                            type: "INVITE_MODAL_OPEN",
                            invite: n,
                            code: t,
                            context: m.AppContext.APP
                        }) : (0, C.replaceWith)(m.Routes.INVITE(t)), {
                            invite: n,
                            code: t
                        }
                    }
                },
                [m.RPCCommands.GUILD_TEMPLATE_BROWSER]: {
                    scope: m.RPC_PRIVATE_SCOPE,
                    async handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e;
                        if (null == I.default.getCurrentUser()) return;
                        let {
                            guildTemplate: a
                        } = await _.default.resolveGuildTemplate(t);
                        if (null == a) throw new A.default(m.RPCErrors.INVALID_GUILD_TEMPLATE, "Invalid guild template id: ".concat(t));
                        return N.default.focus(), (0, r.openModalLazy)(async () => {
                            let {
                                default: e
                            } = await n.el("843456").then(n.bind(n, "843456"));
                            return t => (0, l.jsx)(e, {
                                ...t,
                                guildTemplate: a
                            })
                        }), {
                            guildTemplate: a,
                            code: t
                        }
                    }
                },
                [m.RPCCommands.GIFT_CODE_BROWSER]: {
                    scope: m.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                code: t
                            }
                        } = e;
                        return new Promise((e, a) => {
                            o.default.wait(() => {
                                E.default.resolveGiftCode(t, !0, !0).then(a => {
                                    let {
                                        giftCode: s
                                    } = a;
                                    N.default.focus(), T.default.track(m.AnalyticEvents.OPEN_MODAL, {
                                        type: "gift_accept",
                                        location: m.DIRECT_ANALYTICS_LOCATION
                                    }), (0, r.openModalLazy)(async () => {
                                        let {
                                            default: e
                                        } = await n.el("669146").then(n.bind(n, "669146"));
                                        return n => (0, l.jsx)(e, {
                                            code: t,
                                            ...n
                                        })
                                    }), e({
                                        giftCode: s
                                    })
                                }).catch(() => a(new A.default(m.RPCErrors.INVALID_GIFT_CODE, "Invalid gift code: ".concat(t))))
                            })
                        })
                    }
                },
                [m.RPCCommands.DEEP_LINK]: {
                    scope: m.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                type: t,
                                params: n
                            }
                        } = e;
                        switch (N.default.focus(), t) {
                            case m.RPCDeepLinks.USER_SETTINGS:
                                null != n && ((0, C.replaceWith)(m.Routes.SETTINGS(n.section, n.subsection)), p(n.fingerprint, "settings"));
                                break;
                            case m.RPCDeepLinks.CHANGELOG:
                                null != n && ((0, C.replaceWith)(S.default.formatPathWithQuery(m.Routes.CHANGELOGS(n.date), n.query)), p(n.fingerprint, "changelog"));
                                break;
                            case m.RPCDeepLinks.LIBRARY:
                                (0, C.replaceWith)(m.Routes.APPLICATION_LIBRARY), null != n && p(n.fingerprint, "library");
                                break;
                            case m.RPCDeepLinks.STORE_HOME:
                                (0, C.replaceWith)(m.Routes.APPLICATION_STORE), null != n && p(n.fingerprint, "store");
                                break;
                            case m.RPCDeepLinks.STORE_LISTING:
                                null != n && ((0, C.replaceWith)(m.Routes.APPLICATION_STORE_LISTING_SKU(n.skuId, n.slug)), p(n.fingerprint, "store"));
                                break;
                            case m.RPCDeepLinks.PICK_GUILD_SETTINGS:
                                null != n && ((0, C.replaceWith)({
                                    pathname: m.Routes.PICK_GUILD_SETTINGS(n.section, n.subsection),
                                    search: n.search
                                }), p(n.fingerprint, "guild_settings"));
                                break;
                            case m.RPCDeepLinks.CHANNEL:
                                null != n && ((0, C.replaceWith)({
                                    pathname: m.Routes.CHANNEL(n.guildId, n.channelId, n.messageId),
                                    search: n.search
                                }), p(n.fingerprint, "channel"))
                        }
                    }
                },
                [m.RPCCommands.BROWSER_HANDOFF]: {
                    scope: m.RPC_PRIVATE_LIMITED_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                handoffToken: t,
                                fingerprint: n
                            }
                        } = e;
                        N.default.focus(null, !0), (0, d.handoffEnd)(t, n)
                    }
                },
                [m.RPCCommands.CONNECTIONS_CALLBACK]: {
                    scope: m.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                providerType: t,
                                code: n,
                                openid_params: a,
                                state: s
                            }
                        } = e;
                        return c.default.callback(t, {
                            code: n,
                            openid_params: a,
                            state: s
                        })
                    }
                },
                [m.RPCCommands.BRAINTREE_POPUP_BRIDGE_CALLBACK]: {
                    scope: m.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                state: t,
                                path: n,
                                query: a
                            }
                        } = e;
                        return (0, u.popupBridgeCallback)({
                            paymentSourceType: m.PaymentSourceTypes.PAYPAL,
                            state: t,
                            path: n,
                            query: a
                        })
                    }
                },
                [m.RPCCommands.BILLING_POPUP_BRIDGE_CALLBACK]: {
                    scope: m.RPC_PRIVATE_SCOPE,
                    handler(e) {
                        let {
                            args: {
                                state: t,
                                path: n,
                                query: a,
                                payment_source_type: s
                            }
                        } = e;
                        return (0, u.popupBridgeCallback)({
                            paymentSourceType: s,
                            state: t,
                            path: n,
                            query: a
                        })
                    }
                }
            }
        },
        825734: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("70102"), n("222007");
            var a = n("308757"),
                s = n("812204"),
                l = n("929479"),
                i = n("861309"),
                r = n("716724"),
                o = n("613652"),
                u = n("383928"),
                d = n("56245"),
                c = n("49111"),
                E = n("646718");
            let f = [s.default.RPC];

            function _(e) {
                if (null == e) return {
                    lock: c.NOOP_NULL,
                    context: c.AppContext.APP
                };
                let t = (0, d.unlockOverlay)(e);
                return {
                    lock: t.lock,
                    context: t.context
                }
            }

            function C(e, t) {
                let n = {
                    subscriptionTier: E.PremiumSubscriptionSKUs.TIER_2,
                    analyticsLocations: f,
                    analyticsObject: t
                };
                switch (e) {
                    case c.AppContext.APP:
                        return l.default.openPremiumPaymentModalInApp(n);
                    case c.AppContext.OVERLAY:
                        return l.default.openPremiumPaymentModalInOverlay(n);
                    default:
                        throw Error("Unexpected app context: ".concat(e))
                }
            }
            var h = {
                [c.RPCCommands.START_PURCHASE]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    validation: e => (0, r.default)(e).required().keys({
                        sku_id: e.string().required(),
                        pid: e.number().min(0)
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                sku_id: n,
                                pid: s
                            }
                        } = e;
                        (0, u.validateTransportType)(t.transport);
                        let l = t.application.id;
                        if (null == l) throw new i.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                        let {
                            lock: r,
                            context: d
                        } = _(t.transport !== c.TransportTypes.POST_MESSAGE ? s : null), E = (0, o.default)();
                        if (null == E) throw new i.default(c.RPCErrors.INVALID_CHANNEL, "Invalid channel");
                        let h = {
                                page: c.AnalyticsPages.IN_APP
                            },
                            I = async () => {
                                try {
                                    let e = await (0, a.openIAPPurchaseModal)({
                                        applicationId: l,
                                        skuId: n,
                                        openPremiumPaymentModal: () => C(d, h),
                                        analyticsLocations: f,
                                        analyticsLocation: h,
                                        context: d
                                    });
                                    return r(), e
                                } catch (e) {
                                    if (r(), null != e) {
                                        let t = "";
                                        throw t = "object" == typeof e && "message" in e && "string" == typeof e.message ? e.message : "string" == typeof e ? e : JSON.stringify(e), new i.default(c.RPCErrors.PURCHASE_ERROR, t)
                                    }
                                    throw new i.default(c.RPCErrors.PURCHASE_CANCELED, "Purchase was canceled by the user.")
                                }
                            };
                        return I()
                    }
                },
                [c.RPCCommands.START_PREMIUM_PURCHASE]: {
                    [c.RPC_SCOPE_CONFIG.ANY]: [c.RPC_AUTHENTICATED_SCOPE, c.RPC_LOCAL_SCOPE],
                    validation: e => (0, r.default)(e).keys({
                        pid: e.number().min(0)
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                pid: n
                            }
                        } = e;
                        (0, u.validateTransportType)(t.transport);
                        let a = t.application.id;
                        if (null == a) throw new i.default(c.RPCErrors.INVALID_COMMAND, "No application.");
                        let {
                            lock: s,
                            context: l
                        } = _(t.transport !== c.TransportTypes.POST_MESSAGE ? n : null), r = {
                            page: c.AnalyticsPages.IN_APP
                        };
                        return C(l, r).then(() => {
                            s()
                        }, e => {
                            if (s(), null != e) throw new i.default(c.RPCErrors.PURCHASE_ERROR, e);
                            throw new i.default(c.RPCErrors.PURCHASE_CANCELED, "Purchase was canceled by the user.")
                        })
                    }
                }
            }
        },
        766383: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("403275"),
                s = {
                    [n("49111").RPCCommands.SEND_GENERIC_EVENT]: a.deprecatedCommand
                }
        },
        696287: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return T
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("629109"),
                i = n("990766"),
                r = n("375202"),
                o = n("727284"),
                u = n("373469"),
                d = n("42887"),
                c = n("568307"),
                E = n("703370"),
                f = n("773336"),
                _ = n("716724"),
                C = n("880553"),
                h = n("49111"),
                I = n("843455"),
                T = {
                    [I.RPCCommands.TOGGLE_VIDEO]: {
                        scope: {
                            [h.RPC_SCOPE_CONFIG.ALL]: [I.OAuth2Scopes.RPC, I.OAuth2Scopes.RPC_VIDEO_WRITE]
                        },
                        handler() {
                            let e = d.default.isVideoEnabled(),
                                t = (0, C.default)();
                            null != t && (e ? l.default.setVideoEnabled(!1) : (0, o.default)(() => l.default.setVideoEnabled(!0), h.AppContext.APP))
                        }
                    },
                    [I.RPCCommands.TOGGLE_SCREENSHARE]: {
                        scope: {
                            [h.RPC_SCOPE_CONFIG.ALL]: [I.OAuth2Scopes.RPC, I.OAuth2Scopes.RPC_SCREENSHARE_WRITE]
                        },
                        validation: e => (0, _.default)(e).optional().keys({
                            pid: e.number().optional().min(0)
                        }),
                        handler(e) {
                            let {
                                args: {
                                    pid: t
                                }
                            } = e, l = u.default.getCurrentUserActiveStream(), o = u.default.getStreamerActiveStreamMetadata(), d = (0, r.default)(c.default, E.default), _ = (0, C.default)();
                            null != _ && (null != t && null != o && o.pid !== t && (0, f.isWindows)() ? (0, i.startStream)(_.guild_id, _.id, {
                                pid: t
                            }) : null != l ? (0, i.stopOwnStream)(!1) : null != t && (0, f.isWindows)() ? (0, i.startStream)(_.guild_id, _.id, {
                                pid: t
                            }) : null != d ? (0, i.startStream)(_.guild_id, _.id, {
                                pid: d.pid
                            }) : (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("451863").then(n.bind(n, "451863"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    guildId: _.guild_id,
                                    analyticsLocation: h.AnalyticsLocations.ACTIVITY_RPC
                                })
                            }))
                        }
                    }
                }
        },
        750390: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            }), n("222007");
            var a = n("629109"),
                s = n("42887"),
                l = n("13798"),
                i = n("861309"),
                r = n("716724"),
                o = n("49111"),
                u = n("353927");

            function d(e) {
                let t = e.application.id;
                if (null == t) throw new i.default(o.RPCErrors.INVALID_COMMAND, "No application.");
                return t
            }
            var c = {
                [o.RPCCommands.SET_VOICE_SETTINGS_2]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    validation: e => (0, r.default)(e).required().keys({
                        input_mode: (0, r.default)(e).keys({
                            type: e.string().valid(Object.keys(o.InputModes)),
                            shortcut: e.string().required()
                        }),
                        self_mute: e.boolean(),
                        self_deaf: e.boolean()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                input_mode: n,
                                self_mute: i,
                                self_deaf: r
                            }
                        } = e, o = d(t);
                        null != n && a.default.setMode(n.type, {
                            shortcut: (0, l.toCombo)(n.shortcut)
                        }, o), null != i && i !== s.default.isSelfMute(o) && a.default.toggleSelfMute({
                            context: o
                        }), null != r && r !== s.default.isSelfDeaf(o) && a.default.toggleSelfDeaf({
                            context: o
                        })
                    }
                },
                [o.RPCCommands.SET_USER_VOICE_SETTINGS_2]: {
                    scope: o.RPC_LOCAL_SCOPE,
                    validation: e => (0, r.default)(e).required().keys({
                        user_id: e.string().required(),
                        volume: e.number().min(0).max(200),
                        mute: e.boolean()
                    }),
                    handler(e) {
                        let {
                            socket: t,
                            args: {
                                user_id: n,
                                mute: l,
                                volume: i
                            }
                        } = e, r = d(t);
                        null != l && l !== s.default.isLocalMute(n, r) && a.default.toggleLocalMute(n, r), null != i && a.default.setLocalVolume(n, i, r)
                    }
                },
                [o.RPCCommands.PUSH_TO_TALK]: {
                    scope: {
                        [o.RPC_SCOPE_CONFIG.ALL]: [o.OAuth2Scopes.RPC, o.OAuth2Scopes.RPC_VOICE_WRITE]
                    },
                    validation: e => (0, r.default)(e).required().keys({
                        active: e.boolean()
                    }),
                    handler(e) {
                        let {
                            args: {
                                active: t
                            }
                        } = e;
                        s.default.getMode(u.MediaEngineContextTypes.DEFAULT) === o.InputModes.PUSH_TO_TALK && s.default.getMediaEngine().eachConnection(e => e.setForceAudioInput(t), u.MediaEngineContextTypes.DEFAULT)
                    }
                }
            }
        },
        195180: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("222007");
            var a = n("629109"),
                s = n("42887"),
                l = n("697218"),
                i = n("861309"),
                r = n("716724"),
                o = n("56245"),
                u = n("49111"),
                d = {
                    [u.RPCCommands.SET_USER_VOICE_SETTINGS]: {
                        scope: {
                            [u.RPC_SCOPE_CONFIG.ANY]: [u.OAuth2Scopes.RPC, u.OAuth2Scopes.RPC_VOICE_WRITE]
                        },
                        validation: e => (0, r.default)(e).required().keys({
                            user_id: e.string().required(),
                            pan: (0, r.default)(e).keys({
                                left: e.number().min(0).max(1).required(),
                                right: e.number().min(0).max(1).required()
                            }),
                            volume: e.number().min(0).max(200),
                            mute: e.boolean()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    user_id: t,
                                    pan: n,
                                    volume: r,
                                    mute: o
                                }
                            } = e, d = l.default.getCurrentUser();
                            if (null == l.default.getUser(t) || (null == d ? void 0 : d.id) === t) throw new i.default(u.RPCErrors.INVALID_USER, "Invalid user id: ".concat(t));
                            if (null != n && a.default.setLocalPan(t, n.left, n.right), null != r && a.default.setLocalVolume(t, r), null != o) {
                                let e = s.default.isLocalMute(t);
                                (e && !o || !e && o) && a.default.toggleLocalMute(t)
                            }
                            return {
                                user_id: t,
                                pan: s.default.getLocalPan(t),
                                volume: s.default.getLocalVolume(t),
                                mute: s.default.isLocalMute(t)
                            }
                        }
                    },
                    [u.RPCCommands.GET_VOICE_SETTINGS]: {
                        scope: {
                            [u.RPC_SCOPE_CONFIG.ANY]: [u.OAuth2Scopes.RPC, u.OAuth2Scopes.RPC_VOICE_READ]
                        },
                        handler: () => (0, o.getDeprecatedVoiceSettings)()
                    },
                    [u.RPCCommands.SET_VOICE_SETTINGS]: {
                        scope: {
                            [u.RPC_SCOPE_CONFIG.ANY]: [u.OAuth2Scopes.RPC, u.OAuth2Scopes.RPC_VOICE_WRITE]
                        },
                        validation: e => (0, r.default)(e).required().keys({
                            input: (0, r.default)(e).keys({
                                device_id: e.string().valid(Object.keys(s.default.getInputDevices())),
                                volume: e.number().min(0).max(100)
                            }),
                            output: (0, r.default)(e).keys({
                                device_id: e.string().valid(Object.keys(s.default.getOutputDevices())),
                                volume: e.number().min(0).max(200)
                            }),
                            mode: (0, r.default)(e).keys({
                                type: e.string().valid(Object.keys(u.InputModes)),
                                auto_threshold: e.boolean(),
                                threshold: e.number().min(-100).max(0),
                                shortcut: e.array().items((0, r.default)(e).keys({
                                    type: e.number().min(0).max(3).required(),
                                    code: e.number().required(),
                                    name: e.string()
                                })),
                                delay: e.number().min(0).max(2e3)
                            }),
                            automatic_gain_control: e.boolean(),
                            echo_cancellation: e.boolean(),
                            noise_suppression: e.boolean(),
                            qos: e.boolean(),
                            silence_warning: e.boolean(),
                            deaf: e.boolean(),
                            mute: e.boolean()
                        }),
                        handler(e) {
                            let {
                                args: {
                                    input: t,
                                    output: n,
                                    mode: l,
                                    automatic_gain_control: i,
                                    echo_cancellation: r,
                                    noise_suppression: u,
                                    qos: d,
                                    silence_warning: c,
                                    deaf: E,
                                    mute: f
                                }
                            } = e;
                            if (t && (null != t.device_id && a.default.setInputDevice(t.device_id), null != t.volume && a.default.setInputVolume(t.volume)), n && (null != n.device_id && a.default.setOutputDevice(n.device_id), null != n.volume && a.default.setOutputVolume(n.volume)), l) {
                                let e = s.default.getMode(),
                                    t = s.default.getModeOptions();
                                null != l.type && (e = l.type), null != l.auto_threshold && (t.autoThreshold = l.auto_threshold), null != l.threshold && (t.threshold = l.threshold), null != l.shortcut && (t.shortcut = l.shortcut.map(e => [e.type, e.code])), null != l.delay && (t.delay = l.delay), a.default.setMode(e, t)
                            }
                            if (null != i && a.default.setAutomaticGainControl(i), null != r && a.default.setEchoCancellation(r), null != u && a.default.setNoiseSuppression(u), null != d && a.default.setQoS(d), null != c && a.default.setSilenceWarning(c), null != E) {
                                let e = s.default.isSelfDeaf();
                                (e && !E || !e && E) && a.default.toggleSelfDeaf()
                            }
                            if (null != f) {
                                let e = s.default.isSelfMute();
                                (e && !f || !e && f) && a.default.toggleSelfMute()
                            }
                            return (0, o.getDeprecatedVoiceSettings)()
                        }
                    }
                }
        },
        90906: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            }), n("222007"), n("70102");
            var a = n("446825"),
                s = n("44170"),
                l = n("917351"),
                i = n.n(l),
                r = n("605250"),
                o = n("50885"),
                u = n("856116"),
                d = n("470313"),
                c = n("56245"),
                E = n("49111");
            let f = o.default.requireModule("discord_rpc").RPCIPC,
                _ = new r.default("RPCServer:IPC"),
                C = {
                    HANDSHAKE: 0,
                    FRAME: 1,
                    CLOSE: 2,
                    PING: 3,
                    PONG: 4
                };

            function h(e, t) {
                null != e.setHandshakeComplete ? e.setHandshakeComplete(t) : e._didHandshake = t
            }

            function I(e) {
                return null != e.getHandshakeComplete ? e.getHandshakeComplete() : e._didHandshake
            }

            function T(e) {
                return new Promise((t, n) => {
                    "string" == typeof e && (e = f.net.createConnection(e)), e.pause(), e.on("readable", () => {
                        try {
                            N(e)
                        } catch (t) {
                            e.end(S(C.CLOSE, {
                                code: 1003,
                                message: t.message
                            })), e.destroy()
                        }
                    });
                    let a = () => {
                            try {
                                e.end(), e.destroy()
                            } catch (e) {}
                        },
                        s = Promise.race([new Promise(t => e.on("error", () => t())), new Promise((t, n) => {
                            e.on("pong", () => n(Error("socket responded with pong")))
                        }), new Promise((e, t) => {
                            setTimeout(() => t(Error("socket alive timeout")), 1e3)
                        })]).then(() => {
                            a()
                        }, e => {
                            throw a(), e
                        });
                    return e.write(S(C.PING, i.uniqueId())), s.then(t, n)
                })
            }

            function S(e, t) {
                var n;
                t = JSON.stringify(t);
                let s = a.Buffer.byteLength(t),
                    l = a.Buffer.alloc(8 + s);
                return l.writeInt32LE(e, 0), l.writeInt32LE(s, 4), l.write(t, 8, s), (n = l).buffer.slice(n.byteOffset, n.byteOffset + n.byteLength)
            }

            function N(e) {
                let t = e.read(8);
                if (null == t) return;
                let n = a.Buffer.from(t),
                    s = n.readInt32LE(0),
                    l = n.readInt32LE(4);
                if (!Object.values(C).includes(s) || l < 0) throw Error("protocol error");
                if (null == (t = e.read(l))) throw Error("data size does not match what was received");
                n = a.Buffer.from(t);
                let i = JSON.parse(n.toString());
                switch (s) {
                    case C.PING:
                        e.emit("ping", i), e.write(S(C.PONG, i));
                        break;
                    case C.PONG:
                        e.emit("pong", i);
                        break;
                    case C.HANDSHAKE:
                        if (I(e)) throw Error("already did handshake");
                        h(e, !0), e.emit("handshake", i);
                        break;
                    case C.FRAME:
                        if (!I(e)) throw Error("did not handshake");
                        e.emit("request", i);
                        break;
                    case C.CLOSE:
                        e.end(), e.destroy()
                }
                N(e)
            }
            class A extends d.default {
                send(e) {
                    _.info("Socket Emit: ".concat(this.id), (0, u.default)(e)), this.socket.write(S(C.FRAME, e))
                }
                close(e, t) {
                    this.socket.end(S(C.CLOSE, {
                        code: e,
                        message: t
                    })), this.socket.destroy()
                }
                constructor(e, t, n) {
                    super("ipc", t, n), this.socket = e
                }
            }
            class m extends s.EventEmitter {
                handleConnection(e) {
                    h(e, !1), e.pause(), e.on("readable", () => {
                        try {
                            N(e)
                        } catch (t) {
                            e.end(S(C.CLOSE, {
                                code: E.RPCCloseCodes.CLOSE_UNSUPPORTED,
                                message: t.message
                            })), e.destroy()
                        }
                    }), e.once("handshake", t => {
                        let n;
                        let a = t.client_id,
                            s = +t.v;
                        try {
                            n = new A(e, s, "json")
                        } catch (t) {
                            e.end(S(C.CLOSE, {
                                code: t.code,
                                message: t.message
                            })), e.destroy();
                            return
                        }
                        _.info("Socket Opened: ".concat(n.id)), e.on("error", e => _.error("Socket Error: ".concat(e.message))), e.on("close", () => {
                            _.info("Socket Close: ".concat(n.id)), this.emit("disconnect", n)
                        }), (0, c.validateSocketClient)(n, null, a).then(() => {
                            e.on("request", e => {
                                _.info("Socket Message: ".concat(n.id), (0, u.default)(e)), this.emit("request", n, e)
                            }), this.emit("connect", n)
                        }).catch(e => {
                            let {
                                code: t,
                                message: a
                            } = e;
                            return n.close(t, a)
                        })
                    })
                }
                constructor() {
                    super();
                    let e = f.net.createServer(e => this.handleConnection(e));
                    e.on("error", e => _.error("Error: ".concat(e.message))), f.getAvailableSocket(T).then(t => {
                        e.listen(t, () => {
                            let t = "function" == typeof e.listening ? e.listening() : e.listening;
                            t && _.info("Starting on ".concat(e.address()))
                        })
                    })
                }
            }
            var p = new m
        },
        255516: function(e, t, n) {
            "use strict";
            let a, s;
            n.r(t), n.d(t, {
                default: function() {
                    return P
                }
            }), n("222007"), n("313619"), n("654714"), n("287168"), n("956660"), n("424973"), n("70102");
            var l = n("44170"),
                i = n("917351"),
                r = n.n(i),
                o = n("746379"),
                u = n.n(o),
                d = n("913144"),
                c = n("605250"),
                E = n("313915"),
                f = n("50885"),
                _ = n("861309"),
                C = n("856116"),
                h = n("470313"),
                I = n("56245"),
                T = n("49111"),
                S = n("446825").Buffer;
            try {
                a = f.default.requireModule("discord_erlpack")
            } catch (e) {
                try {
                    a = f.default.requireModule("erlpack")
                } catch (e) {}
            }
            let N = f.default.requireModule("discord_rpc").RPCWebSocket,
                A = window.GLOBAL_ENV.MARKETING_ENDPOINT,
                m = new c.default("RPCServer:WSS"),
                p = [];

            function g(e) {
                return "function" == typeof e ? e() : e
            }

            function R() {
                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    t = e > 0 ? void 0 : () => {
                        if (!g(s.listening)) return;
                        let e = s.address().port;
                        m.info("Starting on ".concat(e)), d.default.dispatch({
                            type: "RPC_SERVER_READY",
                            port: e
                        })
                    };
                s.listen(T.RPC_STARTING_PORT + e % T.RPC_PORT_RANGE, "127.0.0.1", t)
            }

            function O(e, t, n) {
                let a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 200,
                    s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},
                    l = null != g(e.headers).origin ? {
                        "Access-Control-Allow-Origin": g(e.headers).origin,
                        "Access-Control-Allow-Credentials": "true",
                        "Access-Control-Allow-Methods": "POST, GET, PUT, PATCH, DELETE",
                        "Access-Control-Allow-Headers": "Content-Type, Authorization"
                    } : {};
                n = n ? JSON.stringify(n) : "", a = 200 === a && 0 === n.length ? 204 : a, t.setHeader("Content-Length", S.byteLength(n).toString()), t.setHeader("Content-Type", "application/json"), t.writeHead(a, {
                    ...s,
                    ...l
                }), t.end(n)
            }

            function L(e, t, n, a) {
                let s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                O(e, t, {
                    code: s,
                    message: a
                }, n)
            }
            class WebSocket extends h.default {
                send(e) {
                    (E.default.isLoggingOverlayEvents || e.cmd !== T.RPCCommands.OVERLAY && e.evt !== T.RPCEvents.OVERLAY) && m.info("Socket Emit: ".concat(this.id), (0, C.default)(e)), null != a && "etf" === this.encoding ? this._socket.send(a.pack(e), {
                        binary: !0
                    }) : this._socket.send(JSON.stringify(e))
                }
                close(e, t) {
                    this._socket.close(e, t)
                }
                constructor(e, t, n) {
                    if (super("ws", t, n), -1 === ["etf", "json"].indexOf(n)) throw new _.default(T.RPCCloseCodes.INVALID_ENCODING, "Invalid Encoding: ".concat(n));
                    if ("etf" === n && null == a) throw new _.default(T.RPCCloseCodes.INVALID_ENCODING, "Erlpack cannot be used on this client");
                    this._socket = e
                }
            }
            class v extends h.default {
                send(e) {
                    (E.default.isLoggingOverlayEvents || e.cmd !== T.RPCCommands.OVERLAY) && m.info("Socket Emit: ".concat(this.id), e), this._sendCallback(e)
                }
                close(e, t) {
                    this._closeCallback(t, e)
                }
                constructor(e, t, n, a) {
                    if (super("http", n, a), "json" !== a) throw new _.default(T.RPCCloseCodes.INVALID_ENCODING, "Invalid Encoding: ".concat(a));
                    this._sendCallback = e, this._closeCallback = t
                }
            }
            class M extends l.EventEmitter {
                handleRequest(e, t) {
                    let [n, a] = g(e.url).split("?"), s = g(e.method);
                    if ("/rpc" === n && "OPTIONS" === s) {
                        O(e, t, {
                            body: ""
                        });
                        return
                    }
                    let l = "POST" === s;
                    if ("/rpc" === n && ("GET" === s || l)) {
                        let n = new URLSearchParams(a),
                            s = l ? g(e.headers)["content-type"].split("/")[1] : "json",
                            r = function() {
                                var e;
                                let {
                                    protocol: a,
                                    host: s
                                } = u.parse(null !== (e = n.get("callback")) && void 0 !== e ? e : "");
                                a === location.protocol && s === location.host ? t.setHeader("Location", n.get("callback")) : t.setHeader("Location", A), t.writeHead(301), t.end()
                            },
                            o = new v(l ? O.bind(null, e, t) : r, l ? L.bind(null, e, t, 400) : r, Number(n.get("v")), s);
                        if (l)(0, I.validateSocketClient)(o, g(e.headers).origin, n.get("client_id")).then(() => {
                            let n = "";
                            e.on("data", e => n += e), e.on("error", () => L(e, t, 500, "Internal Server Error")), e.on("end", () => this.handleMessage(o, n))
                        }).catch(e => {
                            let {
                                code: t,
                                message: n
                            } = e;
                            return o.close(t, n)
                        });
                        else {
                            var i;
                            o.authorization.scopes = [T.RPC_PRIVATE_LIMITED_SCOPE], this.handleMessage(o, decodeURIComponent(null !== (i = n.get("payload")) && void 0 !== i ? i : ""))
                        }
                        return
                    }
                    L(e, t, 404, "Not Found")
                }
                handleConnection(e) {
                    var t, n;
                    let a;
                    let s = new URLSearchParams(g(e.upgradeReq).url.split("?")[1]),
                        l = null !== (t = g(e.upgradeReq).headers.origin) && void 0 !== t ? t : "";
                    try {
                        a = new WebSocket(e, Number(s.get("v")), null !== (n = s.get("encoding")) && void 0 !== n ? n : "json")
                    } catch (t) {
                        e.close(t.code, t.message);
                        return
                    }
                    m.info("Socket Opened: ".concat(a.id)), e.on("error", e => m.error("WS Error: ".concat(e.message))), e.on("close", (e, t) => {
                        m.info("Socket Closed: ".concat(a.id, ", code ").concat(e, ", message ").concat(t)), r.remove(p, e => e === a), this.emit("disconnect", a)
                    }), (0, I.validateSocketClient)(a, l, s.get("client_id")).then(() => {
                        p.push(a), e.on("message", e => this.handleMessage(a, e)), this.emit("connect", a)
                    }).catch(e => {
                        let {
                            code: t,
                            message: n
                        } = e;
                        return a.close(t, n)
                    })
                }
                handleMessage(e, t) {
                    let n;
                    try {
                        if (null != a && "etf" === e.encoding) n = a.unpack(t);
                        else if ("string" == typeof t) n = JSON.parse(t);
                        else throw Error()
                    } catch (t) {
                        e.close(T.RPCCloseCodes.CLOSE_UNSUPPORTED, "Payload not ".concat(e.encoding));
                        return
                    }(E.default.isLoggingOverlayEvents || n.cmd !== T.RPCCommands.OVERLAY) && m.info("Socket Message: ".concat(e.id), (0, C.default)(n)), this.emit("request", e, n)
                }
                constructor() {
                    var e;
                    super();
                    let t = 0;
                    (s = N.http.createServer()).on("error", e => {
                        m.error("Error: ".concat(e.message)), ("EADDRINUSE" === e.code || e.message.includes("EADDRINUSE")) && setTimeout(() => R(++t), 1e3)
                    }), s.on("request", this.handleRequest.bind(this)), R(t);
                    let n = {
                        instanceId: null !== (e = s.instanceId) && void 0 !== e ? e : 0,
                        server: s
                    };
                    new N.ws.Server(n).on("connection", e => this.handleConnection(e))
                }
            }
            var P = new M
        },
        357147: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("605250"),
                s = n("313915"),
                l = n("856116"),
                i = n("17891"),
                r = n("56245"),
                o = n("958530"),
                u = n("49111");
            let d = new a.default("RPCServer:PostMessage"),
                c = (e, t, n) => {
                    (s.default.isLoggingOverlayEvents || e.cmd !== u.RPCCommands.OVERLAY) && t.info("Socket Message: ".concat(n.id), (0, l.default)(e))
                };
            var E = function() {
                let e = new i.default(r.validateSocketClient, d, o.default, c);
                return window.addEventListener("message", t => {
                    if (window === t.source) return;
                    if (null == t.source || null == t.source.postMessage) {
                        d.error("Unknown event source");
                        return
                    }
                    let n = t.source,
                        a = t.data,
                        s = t.origin;
                    e.handleMessage(a, s, (e, t) => {
                        n.postMessage(e, t)
                    })
                }), e
            }()
        },
        958530: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("313915"),
                s = n("856116"),
                l = n("132181"),
                i = n("49111"),
                r = e => {
                    let {
                        origin: t,
                        postMessageToRPCClient: n,
                        frameId: r,
                        version: o,
                        encoding: u,
                        logger: d,
                        postClose: c
                    } = e;
                    return new l.default({
                        origin: t,
                        postMessageToRPCClient: n,
                        frameId: r,
                        version: o,
                        encoding: u,
                        logger: d,
                        postClose: c,
                        onSendingToRPCClient: (e, t) => {
                            (a.default.isLoggingOverlayEvents || e.cmd !== i.RPCCommands.OVERLAY && e.evt !== i.RPCEvents.OVERLAY) && d.info("Socket Emit: ".concat(t), (0, s.default)(e))
                        }
                    })
                }
        },
        837944: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanSeeSafetyEducationBlockMuteCoachmark: function() {
                    return u
                },
                useSafetyEducationAATriggerPoint: function() {
                    return d
                }
            });
            var a = n("65597"),
                s = n("607742"),
                l = n("415929"),
                i = n("697218"),
                r = n("158998"),
                o = n("332164");
            let u = () => {
                    let e = (0, l.useIsSafetyConsumerEducationBlockMuteEnabled)(),
                        t = (0, a.default)([i.default], () => i.default.getCurrentUser()),
                        n = (0, o.useUserIsInLargeGuilds)();
                    return e && !(0, r.isNewUser)(t) && n
                },
                d = () => (0, s.useIsSafetyConsumerEducationAAEnabled)()
        },
        374089: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useCanSeeSafetyEducationReportingCoachmark: function() {
                    return o
                }
            });
            var a = n("65597"),
                s = n("127205"),
                l = n("697218"),
                i = n("158998"),
                r = n("332164");
            let o = () => {
                let e = (0, s.useIsSafetyConsumerEducationReportingEnabled)(),
                    t = (0, a.default)([l.default], () => l.default.getCurrentUser()),
                    n = (0, r.useUserIsInLargeGuilds)();
                return e && !(0, i.isNewUser)(t) && n
            }
        },
        332164: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                useUserIsInLargeGuilds: function() {
                    return l
                }
            });
            var a = n("65597"),
                s = n("525065");

            function l() {
                let e = (0, a.default)([s.default], () => {
                    let e = Object.values(s.default.getMemberCounts());
                    return e.some(e => e >= 200)
                });
                return e
            }
        },
        189726: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("206230"),
                i = n("5667"),
                r = n("58608"),
                o = n("837944"),
                u = n("994428"),
                d = n("782340"),
                c = n("421294"),
                E = e => {
                    let {
                        markAsDismissed: t
                    } = e, n = (0, s.default)([l.default], () => l.default.useReducedMotion), E = (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)();
                    return E ? (0, a.jsx)(i.default, {
                        asset: (0, a.jsx)(r.default, {
                            className: c.video,
                            src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195117439557712/Safety_BLOCK_Coachmark.mp4",
                            loop: !0,
                            autoPlay: !n,
                            width: "100%"
                        }),
                        header: d.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_HEADER,
                        content: d.default.Messages.SAFETY_CONSUMER_EDUCATION_BLOCK_CONTENT,
                        buttonCTA: d.default.Messages.GOT_IT,
                        className: c.coachmark,
                        onClick: e => {
                            e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN)
                        },
                        markAsDismissed: t,
                        caretPosition: i.CaretPosition.BOTTOM_CENTER,
                        headerClassName: c.header
                    }) : null
                }
        },
        666647: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("206230"),
                i = n("5667"),
                r = n("58608"),
                o = n("837944"),
                u = n("994428"),
                d = n("782340"),
                c = n("816442"),
                E = e => {
                    let {
                        markAsDismissed: t
                    } = e, n = (0, s.default)([l.default], () => l.default.useReducedMotion), E = (0, o.useCanSeeSafetyEducationBlockMuteCoachmark)();
                    return E ? (0, a.jsx)(i.default, {
                        asset: (0, a.jsx)(r.default, {
                            className: c.video,
                            src: "https://cdn.discordapp.com/attachments/1067194967979733053/1067195118026772480/Safety_MUTE_Coachmark.mp4",
                            loop: !0,
                            autoPlay: !n,
                            width: "100%"
                        }),
                        header: d.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_HEADER,
                        content: d.default.Messages.SAFETY_CONSUMER_EDUCATION_MUTE_CONTENT,
                        buttonCTA: d.default.Messages.GOT_IT,
                        className: c.coachmark,
                        onClick: e => {
                            e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN)
                        },
                        markAsDismissed: t,
                        caretPosition: i.CaretPosition.BOTTOM_CENTER,
                        headerClassName: c.header
                    }) : null
                }
        },
        286914: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                UserSafetyEducationReportingCoachmark: function() {
                    return E
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("65597"),
                l = n("206230"),
                i = n("5667"),
                r = n("58608"),
                o = n("374089"),
                u = n("994428"),
                d = n("782340"),
                c = n("564998");
            let E = e => {
                let {
                    markAsDismissed: t
                } = e, n = (0, s.default)([l.default], () => l.default.useReducedMotion), E = (0, o.useCanSeeSafetyEducationReportingCoachmark)();
                return E ? (0, a.jsx)(i.default, {
                    asset: (0, a.jsx)(r.default, {
                        src: "https://cdn.discordapp.com/attachments/1063579271815245944/1095089224421740695/CEC_Reporting_Animation_v03_EN_1x1_Music_1.mp4",
                        loop: !0,
                        autoPlay: !n,
                        className: c.video,
                        width: "100%"
                    }),
                    header: d.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_HEADER,
                    content: d.default.Messages.SAFETY_CONSUMER_EDUCATION_REPORTING_CONTENT,
                    buttonCTA: d.default.Messages.GOT_IT,
                    onClick: e => {
                        e.stopPropagation(), t(u.ContentDismissActionType.UNKNOWN)
                    },
                    markAsDismissed: t,
                    caretPosition: i.CaretPosition.BOTTOM_CENTER,
                    headerClassName: c.header
                }) : null
            }
        },
        29322: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            }), n("222007"), n("424973");
            var a = n("862337"),
                s = n("913144"),
                l = n("316272"),
                i = n("462274"),
                r = n("697218"),
                o = n("760679"),
                u = n("827520");
            class d extends l.default {
                _initialize() {
                    !__OVERLAY__ && (s.default.subscribe("SHARED_CANVAS_DRAW_LINE_POINT", this._handleDrawLinePoint), s.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleVoiceChannelEffectReceived))
                }
                _terminate() {
                    !__OVERLAY__ && (s.default.unsubscribe("SHARED_CANVAS_DRAW_LINE_POINT", this._handleDrawLinePoint), s.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleVoiceChannelEffectReceived), this.lineBatchTimer.stop())
                }
                _handleVoiceChannelEffectReceived(e) {
                    var t;
                    let {
                        lineId: n,
                        points: a,
                        userId: s,
                        streamerId: l,
                        emojiHose: d
                    } = e;
                    if (null != l && s !== (null === (t = r.default.getCurrentUser()) || void 0 === t ? void 0 : t.id)) {
                        if (null != a && null != n) {
                            let e = r.default.getUser(s);
                            null != e && (0, i.maybeFetchColors)(e.getAvatarURL(null, u.AVATAR_COLOR_AVATAR_SIZE)), (0, o.updateLinePoints)(n, s, l, a)
                        } else null != d && (d.lastUpdatedAt = Date.now(), (0, o.updateEmojiHose)(d, s, l))
                    }
                }
                constructor(...e) {
                    super(...e), this.linesToUpdate = {}, this.lineBatchTimer = new a.Interval, this._handleDrawLinePoint = e => {
                        let {
                            channelId: t,
                            lineId: n,
                            streamerId: a,
                            point: s
                        } = e;
                        null == this.linesToUpdate[n] ? this.linesToUpdate[n] = {
                            channelId: t,
                            streamerId: a,
                            points: [s]
                        } : this.linesToUpdate[n].points.push(s), null == this.lineBatchTimer._ref && this.lineBatchTimer.start(u.EVENT_TICK_RATE, this.sendLineBatch)
                    }, this.sendLineBatch = () => {
                        for (let e in this.linesToUpdate) {
                            let {
                                channelId: t,
                                points: n,
                                streamerId: a
                            } = this.linesToUpdate[e];
                            (0, o.addLinePoints)(t, e, a, n)
                        }
                        this.linesToUpdate = {}, this.lineBatchTimer.stop()
                    }
                }
            }
            var c = new d
        },
        447973: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            }), n("222007");
            var a, s = n("913144"),
                l = n("316272"),
                i = n("271938"),
                r = n("42887");
            a = class extends l.default {
                _initialize() {
                    !__OVERLAY__ && (s.default.subscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleSoundboardSoundReceived), s.default.subscribe("GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY", this._handleSoundboardSoundPlayLocally), s.default.subscribe("VOICE_CHANNEL_SELECT", this._handleVoiceChannelSelect), s.default.subscribe("AUDIO_TOGGLE_SELF_DEAF", this._handleToggleSelfDeafened))
                }
                _terminate() {
                    !__OVERLAY__ && (s.default.unsubscribe("VOICE_CHANNEL_EFFECT_SEND", this._handleSoundboardSoundReceived), s.default.unsubscribe("GUILD_SOUNDBOARD_SOUND_PLAY_LOCALLY", this._handleSoundboardSoundPlayLocally), s.default.unsubscribe("VOICE_CHANNEL_SELECT", this._handleVoiceChannelSelect), s.default.unsubscribe("AUDIO_TOGGLE_SELF_DEAF", this._handleToggleSelfDeafened))
                }
                constructor(...e) {
                    super(...e), this._playSound = function(e) {
                        arguments.length > 1 && void 0 !== arguments[1] && arguments[1], arguments.length > 2 && arguments[2], arguments.length > 3 && arguments[3]
                    }, this._stopAndClearSounds = () => {}, this._handleToggleSelfDeafened = () => {
                        r.default.isDeaf() && this._stopAndClearSounds()
                    }, this._handleSoundboardSoundReceived = e => {
                        let {
                            soundId: t,
                            soundVolume: n,
                            userId: a,
                            channelId: s
                        } = e;
                        if (null != t && a !== i.default.getId()) return this._playSound(t, n, a, s)
                    }, this._handleSoundboardSoundPlayLocally = e => {
                        let {
                            sound: t,
                            channelId: n
                        } = e, a = i.default.getId();
                        return this._playSound(t.soundId, t.volume, a, n)
                    }, this._handleVoiceChannelSelect = () => {
                        this._stopAndClearSounds()
                    }
                }
            }
        },
        949e3: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return m
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("139321"),
                r = n("269596"),
                o = n("42203"),
                u = n("42887"),
                d = n("18494"),
                c = n("227602"),
                E = n("447973"),
                f = n("305122"),
                _ = n("235004"),
                C = n("245463"),
                h = n("520497"),
                I = n("812809"),
                T = n("435895"),
                S = n("49111"),
                N = n("353927");
            class A extends E.default {
                _initialize() {
                    super._initialize(), !__OVERLAY__ && l.default.subscribe("OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST", this._handleOverlaySoundboardSoundsFetchRequest)
                }
                _terminate() {
                    super._terminate(), !__OVERLAY__ && l.default.unsubscribe("OVERLAY_SOUNDBOARD_SOUNDS_FETCH_REQUEST", this._handleOverlaySoundboardSoundsFetchRequest)
                }
                constructor(...e) {
                    var t;
                    super(...e), t = this, this.playingSoundsWeb = new Map, this._stopAndClearSounds = () => {
                        u.default.supports(N.Features.SAMPLE_PLAYBACK) && u.default.getMediaEngine().eachConnection(e => {
                            e.stopAllSamplesLocalPlayback()
                        }), this.playingSoundsWeb.forEach(e => {
                            e.pause(), e.src = ""
                        }), this.playingSoundsWeb = new Map
                    }, this._playSound = async function(e) {
                        let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 ? arguments[2] : void 0,
                            s = arguments.length > 3 ? arguments[3] : void 0,
                            l = null != s && d.default.getVoiceChannelId() === s;
                        if ((null == s || l) && !u.default.isDeaf() && !_.default.isLocalSoundboardMuted(a)) try {
                            let s = {
                                soundKey: "".concat(a, "-").concat(e),
                                soundURL: (0, h.default)(e),
                                soundVolume: (0, I.default)(n),
                                reportSoundStartedPlaying: () => (0, f.reportSoundStartedPlaying)(e, a)
                            };
                            u.default.supports(N.Features.SAMPLE_PLAYBACK) ? await (0, T.playDesktopSound)(s) : await (0, T.playWebSound)(s, t.playingSoundsWeb)
                        } finally {
                            (0, f.reportSoundFinishedPlaying)(e, a)
                        }
                    }, this._handleOverlaySoundboardSoundsFetchRequest = () => {
                        (0, f.maybeFetchSoundboardSounds)()
                    }, this._handleOpenEducationModal = (e, t) => {
                        if (null == e) return;
                        let l = o.default.getChannel(t),
                            u = c.default.getKeybindForAction(S.GlobalKeybindActions.SOUNDBOARD_HOLD);
                        null != l && (0, C.default)(l) && null != u && r.default.hasHotspot(i.HotspotLocations.SOUNDBOARD_WHEEL_EDUCATION_MODAL) && (0, s.openModalLazy)(async () => {
                            let {
                                default: t
                            } = await n.el("170441").then(n.bind(n, "170441"));
                            return n => (0, a.jsx)(t, {
                                ...n,
                                guildId: e,
                                keybind: u,
                                channel: l
                            })
                        })
                    }
                }
            }
            var m = new A
        },
        486185: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("748820"),
                i = n("65597"),
                r = n("151426"),
                o = n("77078"),
                u = n("272030"),
                d = n("812204"),
                c = n("685665"),
                E = n("235145"),
                f = n("369964"),
                _ = n("649844"),
                C = n("244390"),
                h = n("42887"),
                I = n("471671"),
                T = n("148349"),
                S = n("754576"),
                N = n("78581"),
                A = n("429829"),
                m = n("191191"),
                p = n("994428"),
                g = n("646718"),
                R = n("782340"),
                O = n("566398");
            let L = "custom-call-sounds-education";

            function v(e) {
                let {
                    channel: t,
                    iconClassName: v,
                    className: M,
                    ...P
                } = e, {
                    mute: D,
                    suppress: y
                } = (0, C.default)(t), x = (0, i.default)([h.default], () => h.default.isDeaf()), U = D || y || x, [b, G] = s.useState(!1), j = t.getGuildId(), w = (0, N.useSoundBoardDismissContentTypes)({
                    isSoundboardButtonDisabled: U
                }), [k, F] = (0, E.useGetDismissibleContent)(w), {
                    AnalyticsLocationProvider: B
                } = (0, c.default)(d.default.SOUNDBOARD_BUTTON), H = (0, i.default)([I.default], () => I.default.isFocused()), V = (0, l.v4)();

                function Y(e) {
                    null == e || e(), null != k && k !== r.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL && F(p.ContentDismissActionType.UNKNOWN)
                }

                function W(e) {
                    null != j && (0, u.openContextMenuLazy)(e, async () => {
                        let {
                            default: e
                        } = await n.el("136137").then(n.bind(n, "136137"));
                        return t => (0, a.jsx)(e, {
                            guildId: j,
                            ...t
                        })
                    })
                }
                let K = e => (0, a.jsx)(o.Popout, {
                    shouldShow: b,
                    position: "top",
                    onRequestClose: () => G(!1),
                    renderPopout: e => {
                        let {
                            closePopout: n
                        } = e;
                        return (0, a.jsx)(m.default, {
                            guildId: j,
                            channel: t,
                            onClose: n,
                            gridNotice: k === r.DismissibleContent.CUSTOM_CALL_SOUNDS_PICKER_UPSELL && (0, a.jsx)(A.CustomCallSoundUpsell, {
                                onClose: n,
                                markAsDismissed: F
                            }),
                            analyticsSource: "rtc panel"
                        })
                    },
                    children: t => (0, a.jsx)("div", {
                        children: (0, a.jsxs)(o.Button, {
                            ...e,
                            ...t,
                            className: M,
                            wrapperClassName: M,
                            disabled: U,
                            onClick: () => {
                                var t;
                                Y(), null == e || null === (t = e.onClick) || void 0 === t || t.call(e), G(!b)
                            },
                            onContextMenu: W,
                            fullWidth: !0,
                            size: o.Button.Sizes.SMALL,
                            ...P,
                            children: [(0, a.jsx)(S.default, {
                                className: v
                            }), k === r.DismissibleContent.CUSTOM_CALL_SOUNDS_SPARKLES && (0, a.jsx)(T.default, {
                                paused: !H
                            })]
                        })
                    })
                });
                return k === r.DismissibleContent.CUSTOM_CALL_SOUNDS_VOICE_COACHMARK ? (0, a.jsx)(o.Popout, {
                    positionKey: V,
                    position: "top",
                    align: "center",
                    shouldShow: !0,
                    renderPopout: e => {
                        let {
                            closePopout: t
                        } = e;
                        return (0, a.jsx)(o.Dialog, {
                            "aria-labelledby": L,
                            children: (0, a.jsx)(f.default, {
                                isPremiumFeature: !0,
                                header: R.default.Messages.CALL_SOUNDS_UPSELL_TITLE_NON_SUB,
                                headerClassName: O.customCallSoundsFeatureHeader,
                                body: (0, a.jsx)(o.Text, {
                                    id: L,
                                    variant: "text-sm/normal",
                                    color: "always-white",
                                    children: R.default.Messages.CALL_SOUNDS_UPSELL_DESCRIPTION_NON_SUB
                                }),
                                tryItText: R.default.Messages.PREMIUM_UPSELL_GET_NITRO,
                                dismissibleContent: r.DismissibleContent.CUSTOM_CALL_SOUNDS_VOICE_COACHMARK,
                                artClassName: O.customCallSoundsFeatureArt,
                                onTryFeature: () => {
                                    (0, _.default)({
                                        subscriptionTier: g.PremiumSubscriptionSKUs.TIER_2,
                                        analyticsLocations: []
                                    }), Y(t)
                                },
                                onClose: () => Y(t),
                                shouldUseHorizontalButtons: !0,
                                inlineArt: !0
                            })
                        })
                    },
                    children: () => K()
                }) : (0, a.jsx)(B, {
                    children: (0, a.jsx)(o.Tooltip, {
                        text: function() {
                            if (D) return R.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_GUILD_MUTE;
                            if (y) return R.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD_ERROR_SUPPRESSED;
                            if (x) return R.default.Messages.SOUNDBOARD_OPEN_SOUNBOARRD_ERROR_DEAFENED;
                            return R.default.Messages.SOUNDBOARD_OPEN_SOUNDBOARD
                        }(),
                        children: e => K(e)
                    })
                })
            }
        },
        696770: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("151426"),
                l = n("79112"),
                i = n("369964"),
                r = n("49111"),
                o = n("994428"),
                u = n("782340"),
                d = n("828081");

            function c(e) {
                let {
                    markAsDismissed: t
                } = e;
                return (0, a.jsx)(i.default, {
                    header: u.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_HEADER,
                    body: u.default.Messages.SOUNDBOARD_VOLUME_TOOLTIP_BODY,
                    tryItText: u.default.Messages.TAKE_ME_THERE,
                    dismissibleContent: s.DismissibleContent.SOUNDBOARD_VOLUME_EDUCATION,
                    artClassName: d.art,
                    onTryFeature: () => {
                        l.default.open(r.UserSettingsSections.VOICE), t(o.ContentDismissActionType.UNKNOWN)
                    },
                    onClose: () => t(o.ContentDismissActionType.UNKNOWN),
                    shouldUseHorizontalButtons: !0,
                    inlineArt: !0
                })
            }
        },
        435895: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                playDesktopSound: function() {
                    return c
                },
                playWebSound: function() {
                    return E
                }
            }), n("222007");
            var a = n("627445"),
                s = n.n(a),
                l = n("773364"),
                i = n("42887"),
                r = n("812809");
            let o = null;
            try {
                o = new AudioContext
            } catch {}
            let u = new Map;
            async function d(e) {
                let t = u.get(e);
                if (null != t) return t;
                let n = await (await fetch(e)).arrayBuffer(),
                    a = await (null == o ? void 0 : o.decodeAudioData(n));
                return null != a && u.set(e, a), a
            }

            function c(e) {
                let {
                    soundKey: t,
                    soundURL: n,
                    soundVolume: a,
                    reportSoundStartedPlaying: r
                } = e;
                return new Promise(async e => {
                    let o = await d(n);
                    null == o && e(), i.default.getMediaEngine().eachConnection(n => {
                        n.context === l.MediaEngineContextTypes.DEFAULT && (r(), s(null != o, "audioBuffer cannot be null here"), n.startSamplesLocalPlayback(t, o, a, () => {
                            e()
                        }))
                    })
                })
            }

            function E(e, t) {
                let {
                    soundKey: n,
                    soundURL: a,
                    soundVolume: s,
                    reportSoundStartedPlaying: l
                } = e, i = t.get(n);
                if (null != i) {
                    i.currentTime = 0;
                    return
                }
                return new Promise(e => {
                    let i = new Audio(a);
                    i.volume = (0, r.default)(s), i.addEventListener("canplaythrough", () => {
                        l(), t.set(n, i), i.play()
                    }), i.addEventListener("ended", () => {
                        t.delete(n), i.src = "", e()
                    })
                })
            }
        },
        2129: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("446674"),
                l = n("77078"),
                i = n("271938"),
                r = n("662285"),
                o = n("629414"),
                u = n("53887"),
                d = n("486150"),
                c = n("555759"),
                E = n("450484"),
                f = n("782340");

            function _(e, t, n) {
                let _ = (0, s.useStateFromStores)([r.default, i.default], () => null != t ? (0, u.default)(r.default, i.default, t, e) : void 0, [e, t]);
                if (null == _ || null == e || null == t) return null;
                let C = _.isCurrentUser || _.notPlayable || _.playingSameTrack,
                    h = _.isCurrentUser || _.syncingWithUser || _.syncingWithParty;
                return [(0, a.jsx)(l.MenuItem, {
                    id: "spotify-play-".concat(e.session_id),
                    action: () => (0, c.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_PLAY, n),
                    label: f.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_PLAY_ON_SPOTIFY,
                    subtext: C ? (0, o.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_PLAY) : void 0,
                    disabled: C
                }, "spotify-play-".concat(e.session_id)), _.canPlaySpotify ? (0, a.jsx)(l.MenuItem, {
                    id: "spotify-sync-".concat(e.session_id),
                    action: () => (0, d.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_SYNC, n),
                    label: f.default.Messages.ACTIVITY_FEED_NOW_PLAYING_ACTION_LISTEN_ALONG,
                    subtext: h ? (0, o.default)(_, E.SpotifyActionTypes.USER_ACTIVITY_SYNC) : void 0,
                    disabled: h
                }, "spotify-sync-".concat(e.session_id)) : null]
            }
        },
        987285: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("913144"),
                s = n("629109"),
                l = n("990766"),
                i = n("316272"),
                r = n("374014"),
                o = n("373469"),
                u = n("271938"),
                d = n("42203"),
                c = n("42887"),
                E = n("808422");
            class f extends i.default {
                _initialize() {
                    a.default.subscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                _terminate() {
                    a.default.unsubscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                constructor(...e) {
                    super(...e), this.handleVoiceStateUpdates = e => {
                        let {
                            voiceStates: t
                        } = e, n = u.default.getId();
                        t.forEach(e => {
                            var t;
                            if (e.userId !== n) return;
                            let a = null === (t = d.default.getChannel(e.channelId)) || void 0 === t ? void 0 : t.isGuildStageVoice();
                            if (!a) return;
                            let s = (0, E.getAudienceRequestToSpeakState)(e) === E.RequestToSpeakStates.ON_STAGE;
                            !s && (this.handleStopStream(e), this.handleStopUserVideo())
                        })
                    }, this.handleStopStream = e => {
                        let t = o.default.getActiveStreamForUser(e.userId, e.guildId);
                        null != t && (0, l.stopStream)((0, r.encodeStreamKey)(t), !1)
                    }, this.handleStopUserVideo = () => {
                        c.default.isVideoEnabled() && s.default.setVideoEnabled(!1)
                    }
                }
            }
            var _ = new f
        },
        160870: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("271938"),
                l = n("18494"),
                i = n("325861");

            function r(e) {
                return (0, a.useStateFromStores)([s.default, l.default, i.default], () => {
                    let t = s.default.getId();
                    return l.default.getVoiceChannelId() === e ? i.default.getPermissionsForUser(t, e) : null
                }, [e])
            }
        },
        55282: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("42203"),
                o = n("18494"),
                u = n("328275"),
                d = n("489622"),
                c = n("244480"),
                E = n("130563"),
                f = n("151642"),
                _ = n("782340"),
                C = n("779007");

            function h(e) {
                let t = o.default.getVoiceChannelId();
                if (null == t) return;
                let n = r.default.getChannel(t);
                null != n && (0, c.audienceAckRequestToSpeak)(n, e)
            }

            function I() {
                var e;
                let t = (0, E.default)(),
                    n = null !== (e = (0, f.useStageBlockedUsersCount)(null == t ? void 0 : t.id)) && void 0 !== e ? e : 0;
                return null == t ? null : (0, a.jsxs)(d.default, {
                    className: C.container,
                    color: d.NoticeColors.DEFAULT,
                    children: [(0, a.jsx)("div", {
                        children: _.default.Messages.STAGE_SPEAK_INVITE_HEADER
                    }), n > 0 ? (0, a.jsxs)("div", {
                        className: C.blocked,
                        children: [(0, a.jsx)(u.default, {
                            width: 12,
                            height: 12,
                            className: C.blockedIcon
                        }), (0, a.jsx)("div", {
                            className: C.blockedText,
                            children: _.default.Messages.STAGE_SPEAK_INVITE_HEADER_BLOCKED_USERS.format({
                                number: n
                            })
                        })]
                    }) : null, (0, a.jsx)(i.Button, {
                        className: l(C.button, C.acceptButton),
                        size: i.Button.Sizes.MIN,
                        color: i.Button.Colors.WHITE,
                        onClick: () => h(!1),
                        children: (0, a.jsx)(i.Text, {
                            className: C.acceptText,
                            variant: "text-xs/normal",
                            color: "none",
                            children: _.default.Messages.STAGE_SPEAK_INVITE_ACCEPT
                        })
                    }), (0, a.jsx)(i.Button, {
                        className: l(C.button, C.declineButton),
                        look: i.Button.Looks.OUTLINED,
                        size: i.Button.Sizes.MIN,
                        color: i.Button.Colors.WHITE,
                        onClick: () => h(!0),
                        children: (0, a.jsx)(i.Text, {
                            className: C.declineText,
                            variant: "text-xs/normal",
                            color: "none",
                            children: _.default.Messages.STAGE_SPEAK_INVITE_DECLINE
                        })
                    })]
                })
            }
        },
        686551: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("271938"),
                o = n("42203"),
                u = n("235660"),
                d = n("808422"),
                c = n("49111");
            let E = "STAGE_INVITED_TO_SPEAK_MODAL";
            class f extends i.default {
                _initialize() {
                    l.default.subscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                _terminate() {
                    l.default.unsubscribe("VOICE_STATE_UPDATES", this.handleVoiceStateUpdates)
                }
                constructor(...e) {
                    super(...e), this.handleVoiceStateUpdates = e => {
                        var t;
                        let {
                            voiceStates: l
                        } = e, i = r.default.getId(), f = null === (t = u.default.getSession()) || void 0 === t ? void 0 : t.sessionId, _ = l.find(e => e.userId === i && e.sessionId === f);
                        if (null == _) return;
                        let C = _.channelId;
                        if (null == C) {
                            (0, s.hasModalOpen)(E) && (0, s.closeModal)(E);
                            return
                        }
                        let h = o.default.getChannel(C),
                            I = null == h ? void 0 : h.isGuildStageVoice();
                        if (!I) return;
                        let T = (0, d.getAudienceRequestToSpeakState)(_) === d.RequestToSpeakStates.REQUESTED_TO_SPEAK_AND_AWAITING_USER_ACK;
                        if (null != h && T) {
                            if ((0, s.hasModalOpen)(E)) return;
                            (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("730705").then(n.bind(n, "730705"));
                                return t => (0, a.jsx)(e, {
                                    ...t,
                                    channel: h
                                })
                            }, {
                                modalKey: E,
                                onCloseRequest: c.NOOP_NULL
                            })
                        }
                    }
                }
            }
            var _ = new f
        },
        885590: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                StageChannelNowPlayingDelegate: function() {
                    return f
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("77078"),
                r = n("42203"),
                o = n("716214"),
                u = n("118033"),
                d = n("834052"),
                c = n("782340");

            function E(e) {
                var t, n;
                let {
                    activity: E
                } = e, {
                    channelId: f
                } = null !== (t = (0, u.unpackStageChannelParty)(E)) && void 0 !== t ? t : {}, _ = (0, l.default)([d.default], () => d.default.getStageInstanceByChannel(f), [f]), C = s.useRef(null), h = s.useCallback(() => {
                    let e = r.default.getChannel(f);
                    null != e && o.connectAndOpen(e)
                }, [f]), I = null !== (n = null == _ ? void 0 : _.topic) && void 0 !== n ? n : E.name, T = c.default.Messages.STAGE_CHANNEL_ACTIVITY_FEED_JOIN.format({
                    channel: I
                });
                return (0, a.jsx)("div", {
                    ref: C,
                    children: (0, a.jsx)(i.Clickable, {
                        onClick: h,
                        focusProps: {
                            ringTarget: C
                        },
                        children: (0, a.jsx)(i.Heading, {
                            variant: "heading-sm/semibold",
                            children: T
                        })
                    })
                })
            }
            class f {
                shouldShow(e) {
                    return (0, u.shouldShowActivity)(e)
                }
                createHeader(e) {
                    return {
                        subtitle: c.default.Messages.STAGE_CHANNEL_ACTIVITY_FEED_DEFAULT,
                        icon: null
                    }
                }
                constructor() {
                    this.body = E
                }
            }
        },
        357046: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                MAX_TTS_LENGTH: function() {
                    return a
                },
                SPEECH_RATE_INCREMENTS: function() {
                    return s
                }
            });
            let a = 200,
                s = [0, .25, .5, .75, 1, 1.25, 1.5, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.25, 3.5, 3.75, 4, 4.25, 4.5, 4.75, 5, 5.25, 5.5, 5.75, 6, 6.25, 6.5, 6.75, 7, 7.25, 7.5, 7.75, 8, 8.25, 8.5, 8.75, 9, 9.25, 9.5, 9.75, 10]
        },
        481395: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return B
                }
            }), n("781738"), n("843762");
            var a = n("913144"),
                s = n("533280"),
                l = n("679653"),
                i = n("256572"),
                r = n("915639"),
                o = n("845579"),
                u = n("271938"),
                d = n("982108"),
                c = n("42203"),
                E = n("26989"),
                f = n("305961"),
                _ = n("42887"),
                C = n("385649"),
                h = n("27618"),
                I = n("18494"),
                T = n("282109"),
                S = n("697218"),
                N = n("158998"),
                A = n("76629"),
                m = n("981957"),
                p = n("357046"),
                g = n("49111"),
                R = n("782340");
            let O = [],
                L = null,
                v = null,
                M = null,
                P = /\|\|([\s\S]+?)\|\|/g;

            function D(e, t, n, a) {
                let s = f.default.getGuild(n),
                    i = e.replace(P, R.default.Messages.SPOILER).replace(/<@!?(\d+)>/g, (e, t) => {
                        var a;
                        let s = S.default.getUser(t);
                        if (null == s) return e;
                        return null !== (a = E.default.getNick(n, s.id)) && void 0 !== a ? a : N.default.getName(s)
                    }).replace(/<@&?(\d+)>/g, (e, t) => {
                        let n = null != s ? s.roles[t] : null;
                        return null != n && null != n.name ? n.name : R.default.Messages.MESSAGE_TTS_DELETED_ROLE
                    }).replace(/<#(\d+)>/g, (e, t) => {
                        let n = c.default.getChannel(t);
                        return null == n ? e : (0, l.computeChannelName)(n, S.default, h.default)
                    }).replace(/<a?:(\w+):(\d+)>/g, (e, t) => "".concat(R.default.Messages.EMOJI, " ").concat(t)).replace(/<\/([^\s]+?):(\d+)>/g, (e, t) => "/".concat(t));
                return null == a ? R.default.Messages.MESSAGE_TTS.format({
                    username: t,
                    body: i
                }) : R.default.Messages.MESSAGE_TTS_REPLY.format({
                    username: t,
                    body: i,
                    replyUsername: a
                })
            }

            function y() {
                if (!s.supported) return !1;
                let e = r.default.locale;
                if (null == M) {
                    var t;
                    M = null === (t = window.speechSynthesis) || void 0 === t ? void 0 : t.getVoices()
                }
                let n = M.filter(t => t.lang === e || t.lang.slice(0, e.length) === e || !1);
                v = n.length > 0 ? n[0] : null
            }
            async function x(e, t, n, a, l) {
                let i = s.createUtterance(e, n);
                null !== i && (null == v && y(), t ? await (0, A.stopSpeaking)() : null == L || L.removeEventListener("end", A.stopSpeaking), i.addEventListener("end", A.stopSpeaking), null != a && i.addEventListener("start", a), null != l && i.addEventListener("end", l), L = i, s.speakUtterance(i, v))
            }

            function U(e, t, n, a, s) {
                x(e, t, s, () => {
                    (0, A.speakingMessage)(n, a)
                })
            }

            function b(e) {
                let {
                    text: t,
                    interrupt: n,
                    maxLength: a,
                    onStart: s,
                    onEnd: l
                } = e;
                x(t, n, a, s, l)
            }

            function G() {
                return null !== L && L.removeEventListener("end", A.stopSpeaking), s.cancelAll(), L = null, !0
            }

            function j(e) {
                var t, n, a;
                let {
                    message: s,
                    channel: l
                } = e, r = s.type === g.MessageTypes.REPLY ? i.default.getMessageByReference(s.messageReference) : null, o = (null == r ? void 0 : r.state) === i.ReferencedMessageState.LOADED ? null == r ? void 0 : null === (t = r.message) || void 0 === t ? void 0 : t.author : null, u = null != o ? null !== (n = E.default.getNick(l.guild_id, null == o ? void 0 : o.id)) && void 0 !== n ? n : N.default.getName(o) : null, d = l.getGuildId(), c = null !== (a = E.default.getNick(d, s.author.id)) && void 0 !== a ? a : N.default.getName(s.author), f = D(s.content, c, d, u);
                return U(f, !0, l.id, s.id), !0
            }

            function w(e) {
                var t, n, a, s, l, i, r;
                let {
                    channelId: f,
                    message: S,
                    optimistic: A
                } = e;
                if (A || _.default.isSelfDeaf()) return !1;
                let m = c.default.getChannel(f);
                if (null == m) return !1;
                let R = I.default.getChannelId(),
                    L = d.default.getCurrentSidebarChannelId(R),
                    v = f === R || f === L,
                    M = o.EnableTTSCommand.getSetting() && S.tts && v,
                    P = C.default.getTTSType(),
                    y = (null === (t = S.author) || void 0 === t ? void 0 : t.id) !== u.default.getId() && (P === g.TTSNotificationTypes.ALL_CHANNELS || P === g.TTSNotificationTypes.SELECTED_CHANNEL && v);
                if ((M || y) && ((null === (n = S.author) || void 0 === n ? void 0 : n.id) == null || !h.default.isBlocked(S.author.id))) {
                    if (O.indexOf(S.id) >= 0) return !1;
                    O.unshift(S.id) > 10 && O.pop();
                    let e = m.getGuildId();
                    if (null != e && T.default.getMutedChannels(e).has(f)) return !1;
                    let t = null !== (i = null !== (l = E.default.getNick(e, null === (a = S.author) || void 0 === a ? void 0 : a.id)) && void 0 !== l ? l : N.default.getName(S.author)) && void 0 !== i ? i : "",
                        n = S.type === g.MessageTypes.REPLY ? null === (s = S.referenced_message) || void 0 === s ? void 0 : s.author : null,
                        o = null != n ? null !== (r = E.default.getNick(e, null == n ? void 0 : n.id)) && void 0 !== r ? r : N.default.getName(n) : null,
                        u = D(S.content, t, e, o);
                    U(u, !1, m.id, S.id, p.MAX_TTS_LENGTH)
                }
                return !1
            }

            function k(e) {
                let {
                    id: t,
                    channelId: n
                } = e, a = m.default.currentMessage;
                return null != a && t === a.messageId && n === a.channelId && ((0, A.stopSpeaking)(), !0)
            }

            function F() {
                _.default.isSelfDeaf() && s.cancelAll()
            }
            var B = {
                init() {
                    a.default.subscribe("SPEAK_TEXT", b), a.default.subscribe("SPEAK_MESSAGE", j), a.default.subscribe("STOP_SPEAKING", G), a.default.subscribe("MESSAGE_CREATE", w), a.default.subscribe("MESSAGE_DELETE", k), a.default.subscribe("AUDIO_TOGGLE_SELF_DEAF", F), a.default.subscribe("USER_SETTINGS_PROTO_UPDATE", y), a.default.subscribe("I18N_LOAD_SUCCESS", y)
                }
            }
        },
        542789: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("316272"),
                r = n("575365"),
                o = n("299285"),
                u = n("824563"),
                d = n("27618"),
                c = n("697218"),
                E = n("599110"),
                f = n("713135"),
                _ = n("49111"),
                C = n("450484");
            let h = null;
            async function I(e) {
                var t, l, i, I;
                let T, S, N, {
                        userId: A,
                        section: m,
                        guildId: p = _.ME,
                        channelId: g,
                        friendToken: R,
                        autoFocusNote: O,
                        analyticsLocation: L
                    } = e,
                    v = c.default.getUser(A),
                    M = f.default.getUserProfile(A);
                if (null == v) return;
                let P = u.default.getPrimaryActivity(A);
                null != P && (T = P.party, S = P.assets, N = null != P.application_id ? o.default.getApplication(P.application_id) : null);
                let D = u.default.getStatus(A),
                    y = u.default.isMobileOnline(A),
                    x = D;
                D === _.StatusTypes.ONLINE && (x = y ? _.AnalyticsUserStatusTypes.ONLINE_MOBILE : _.AnalyticsUserStatusTypes.ONLINE_DESKTOP), h = await (0, s.openModalLazy)(async () => {
                    let {
                        default: e
                    } = await n.el("279286").then(n.bind(n, "279286"));
                    return t => (0, a.jsx)(e, {
                        ...t,
                        user: v,
                        autoFocusNote: O,
                        guildId: p,
                        friendToken: R,
                        initialSection: m,
                        channelId: g
                    })
                }), E.default.track(_.AnalyticEvents.OPEN_MODAL, {
                    type: "Profile Modal",
                    guild_id: p !== _.ME ? p : null,
                    channel_id: g,
                    other_user_id: A,
                    application_id: null !== (l = null == P ? void 0 : P.application_id) && void 0 !== l ? l : null,
                    application_name: null == P ? void 0 : P.name,
                    sku_id: null !== (i = null == N ? void 0 : N.primarySkuId) && void 0 !== i ? i : null,
                    is_friend: d.default.isFriend(A),
                    has_images: !!(null !== (I = null == S ? void 0 : S.large_image) && void 0 !== I ? I : null == S ? void 0 : S.small_image),
                    party_max: null == T ? void 0 : null === (t = T.size) || void 0 === t ? void 0 : t[1],
                    party_id: null == T ? void 0 : T.id,
                    party_platform: (0, C.isSpotifyParty)(null == T ? void 0 : T.id) ? _.PlatformTypes.SPOTIFY : null,
                    game_platform: (0, r.default)(P),
                    profile_user_status: x,
                    profile_has_nitro_customization: (null == M ? void 0 : M.banner) != null,
                    profile_has_profile_effect: (null == M ? void 0 : M.profileEffectID) != null,
                    ...null == L ? null : (0, E.expandLocation)(L)
                })
            }

            function T() {
                null != h && (0, s.closeModal)(h), h = null
            }
            class S extends i.default {
                _initialize() {
                    l.default.subscribe("USER_PROFILE_MODAL_OPEN", I), l.default.subscribe("USER_PROFILE_MODAL_CLOSE", T)
                }
                _terminate() {
                    l.default.unsubscribe("USER_PROFILE_MODAL_OPEN", I), l.default.unsubscribe("USER_PROFILE_MODAL_CLOSE", T)
                }
            }
            var N = new S
        },
        177632: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return f
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("65597"),
                i = n("77078"),
                r = n("327037"),
                o = n("330387"),
                u = n("476765"),
                d = n("49111"),
                c = n("782340"),
                E = n("305502");

            function f(e) {
                let {
                    transitionState: t
                } = e, f = (0, l.default)([o.default], () => o.default.getAction()), [_, C] = s.useState(!1), h = (0, u.useUID)();
                async function I() {
                    if (C(!0), f === d.UserRequiredActions.AGREEMENTS) {
                        let e = await (0, r.acceptAgreements)();
                        C(e)
                    }
                    return null
                }
                return (0, a.jsxs)(i.ModalRoot, {
                    "aria-labelledby": h,
                    transitionState: t,
                    children: [(0, a.jsx)("div", {
                        id: h
                    }), (0, a.jsx)(i.ModalHeader, {
                        separator: !1,
                        children: (0, a.jsx)(i.Heading, {
                            variant: "heading-lg/semibold",
                            children: c.default.Messages.NEW_TERMS_TITLE
                        })
                    }), (0, a.jsxs)(i.ModalContent, {
                        children: [(0, a.jsx)(i.Text, {
                            variant: "text-md/normal",
                            children: f === d.UserRequiredActions.AGREEMENTS ? c.default.Messages.TERMS_OF_SERVICE_UPDATE_03_27_2023_DESCRIPTION.format() : null
                        }), (0, a.jsxs)("div", {
                            className: E.container,
                            children: [(0, a.jsxs)("ul", {
                                className: E.links,
                                children: [(0, a.jsx)("li", {
                                    children: c.default.Messages.TERMS_OF_SERVICE.format({
                                        url: d.MarketingURLs.TERMS
                                    })
                                }), (0, a.jsx)("li", {
                                    children: c.default.Messages.PAID_SERVICES_TERMS.format({
                                        url: d.MarketingURLs.PAID_TERMS
                                    })
                                }), (0, a.jsx)("li", {
                                    children: c.default.Messages.PRIVACY_POLICY.format({
                                        url: d.MarketingURLs.PRIVACY
                                    })
                                }), (0, a.jsx)("li", {
                                    children: c.default.Messages.COMMUNITY_GUIDELINES.format({
                                        url: d.MarketingURLs.GUIDELINES
                                    })
                                })]
                            }), (0, a.jsx)("img", {
                                className: E.image,
                                alt: "",
                                src: n("275974")
                            })]
                        })]
                    }), (0, a.jsx)(i.ModalFooter, {
                        children: (0, a.jsx)(i.Button, {
                            submitting: _,
                            onClick: I,
                            color: i.Button.Colors.GREEN,
                            children: c.default.Messages.AGREE
                        })
                    })]
                })
            }
        },
        84124: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144"),
                i = n("892313"),
                r = n("61928"),
                o = n("697218"),
                u = n("708169"),
                d = n("668596"),
                c = n("197881"),
                E = n("177632"),
                f = n("49111"),
                _ = n("843455");
            let C = "AGREEMENTS_MODAL_KEY";
            var h = {
                init() {
                    l.default.subscribe("CONNECTION_OPEN", this.handleRequiredAction), l.default.subscribe("USER_REQUIRED_ACTION_UPDATE", this.handleRequiredAction), l.default.subscribe("CURRENT_USER_UPDATE", this.handleCurrentUserUpdate), l.default.subscribe("LOGOUT", this.handleLogout)
                },
                handleRequiredAction(e) {
                    let t = e.requiredAction;
                    !c.ProcessArgs.isDisallowPopupsSet() && (null == o.default.getCurrentUser() ? ((0, u.closeFullScreenLayer)("verification"), (0, s.hasModalOpen)(C) && (0, s.closeModal)(C)) : t === f.UserRequiredActions.REQUIRE_CAPTCHA || t === f.UserRequiredActions.REQUIRE_VERIFIED_EMAIL || t === f.UserRequiredActions.REQUIRE_VERIFIED_PHONE || t === f.UserRequiredActions.REQUIRE_REVERIFIED_PHONE || t === f.UserRequiredActions.REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE || t === f.UserRequiredActions.REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE || i.default.isEmailReverification(t) ? (0, u.openFullScreenLayer)(() => (0, a.jsx)(r.default, {}), {
                        layerKey: "verification",
                        Layer: d.default
                    }) : t === f.UserRequiredActions.AGREEMENTS ? (0, s.openModal)(e => (0, a.jsx)(E.default, {
                        ...e
                    }), {
                        modalKey: C,
                        onCloseRequest: _.NOOP_NULL
                    }) : null == t && ((0, u.closeFullScreenLayer)("verification"), (0, s.hasModalOpen)(C) && (0, s.closeModal)(C)))
                },
                handleLogout() {
                    (0, u.closeFullScreenLayer)("verification")
                },
                handleCurrentUserUpdate(e) {
                    let {
                        user: t
                    } = e;
                    t.verified && (0, s.closeModal)(r.EMAIL_VERIFICATION_MODAL_KEY)
                }
            }
        },
        389434: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                fetchEmailSettings: function() {
                    return u
                },
                updateEmailSetting: function() {
                    return d
                },
                updateMarketingEmailSettings: function() {
                    return c
                }
            }), n("808653");
            var a = n("759843"),
                s = n("627929"),
                l = n("913144"),
                i = n("840707"),
                r = n("853994"),
                o = n("49111");
            async function u() {
                try {
                    let e = await i.default.get({
                        url: o.Endpoints.EMAIL_SETTINGS,
                        trackedActionData: {
                            event: a.NetworkActionNames.EMAIL_SETTINGS_FETCH,
                            properties: e => {
                                var t;
                                let n = null == e ? void 0 : null === (t = e.body) || void 0 === t ? void 0 : t.initialized;
                                return (0, s.exact)({
                                    initialized: n
                                })
                            }
                        }
                    });
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_FETCH_SUCCESS",
                        settings: e.body
                    })
                } catch {
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_FETCH_FAILURE"
                    })
                }
            }
            async function d(e, t) {
                l.default.dispatch({
                    type: "EMAIL_SETTINGS_UPDATE",
                    updates: {
                        [e]: t
                    }
                });
                try {
                    let n = await i.default.patch({
                        url: o.Endpoints.EMAIL_SETTINGS,
                        body: {
                            settings: {
                                categories: {
                                    [e]: t
                                }
                            }
                        },
                        trackedActionData: {
                            event: a.NetworkActionNames.EMAIL_SETTINGS_UPDATE,
                            properties: {
                                category: e,
                                value: t
                            }
                        }
                    });
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_SUCCESS",
                        settings: n.body
                    })
                } catch (e) {
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_FAILURE"
                    })
                }
            }
            async function c() {
                let e = r.MarketingEmailCategories.reduce((e, t) => ({
                    ...e,
                    [t]: !1
                }), {});
                l.default.dispatch({
                    type: "EMAIL_SETTINGS_UPDATE",
                    updates: e
                });
                try {
                    let t = await i.default.patch({
                        url: o.Endpoints.EMAIL_SETTINGS,
                        body: {
                            settings: {
                                categories: e
                            }
                        },
                        trackedActionData: {
                            event: a.NetworkActionNames.EMAIL_SETTINGS_UPDATE,
                            properties: {
                                category: "marketing",
                                value: !1
                            }
                        }
                    });
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_SUCCESS",
                        settings: t.body
                    })
                } catch (e) {
                    l.default.dispatch({
                        type: "EMAIL_SETTINGS_UPDATE_FAILURE"
                    })
                }
            }
        },
        853994: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EMAILS_SUBSECTION: function() {
                    return i
                },
                EmailCategories: function() {
                    return s
                },
                MarketingEmailCategories: function() {
                    return r
                },
                EmailCategoriesList: function() {
                    return o
                }
            });
            var a, s, l = n("782340");
            let i = "emails";
            (a = s || (s = {})).COMMUNICATION = "communication", a.SOCIAL = "social", a.TIPS = "tips", a.RECOMMENDATIONS_AND_EVENTS = "recommendations_and_events", a.UPDATES_AND_ANNOUNCEMENTS = "updates_and_announcements", a.FAMILY_CENTER_DIGEST = "family_center_digest";
            let r = ["tips", "recommendations_and_events", "updates_and_announcements"],
                o = [{
                    category: "communication",
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_COMMUNICATION,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_COMMUNICATION_SUBLABEL
                }, {
                    category: "social",
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_SOCIAL,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_SOCIAL_SUBLABEL
                }, {
                    category: "updates_and_announcements",
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_UPDATES_AND_ANNOUNCEMENTS,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_UPDATES_AND_ANNOUNCEMENTS_SUBLABEL
                }, {
                    category: "tips",
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_TIPS,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_TIPS_SUBLABEL
                }, {
                    category: "recommendations_and_events",
                    label: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_RECOMMENDATIONS_AND_EVENTS,
                    subLabel: () => l.default.Messages.USER_SETTINGS_EMAIL_CATEGORY_RECOMMENDATIONS_AND_EVENTS_SUBLABEL
                }]
        },
        521128: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = {},
                i = null;

            function r() {
                l = {}, i = null
            }
            class o extends a.default.Store {
                getEmailSettings() {
                    return {
                        categories: l,
                        initialized: i
                    }
                }
            }
            o.displayName = "EmailSettingsStore";
            var u = new o(s.default, {
                CONNECTION_OPEN: r,
                LOGOUT: r,
                EMAIL_SETTINGS_FETCH_SUCCESS: function(e) {
                    let {
                        settings: t
                    } = e;
                    l = t.categories, i = t.initialized
                },
                EMAIL_SETTINGS_UPDATE_SUCCESS: function(e) {
                    let {
                        settings: t
                    } = e;
                    l = t.categories
                },
                EMAIL_SETTINGS_UPDATE: function(e) {
                    let {
                        updates: t
                    } = e;
                    l = {
                        ...l,
                        ...t
                    }
                }
            })
        },
        647627: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            }), n("222007"), n("424973");
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("713349"),
                r = n("95410"),
                o = n("116949"),
                u = n("397336");

            function d(e) {
                var t;
                let n;
                (t = n || (n = {})).IMAGE = "IMAGE", t.VIDEO = "VIDEO";
                let {
                    state: a
                } = l.default.PersistedStore.migrateAndReadStoreState("GIFFavoritesStore", [e => null == e ? {
                    favorites: [],
                    timesFavorited: 0
                } : Array.isArray(e) ? {
                    favorites: e,
                    timesFavorited: 0
                } : e, e => Array.isArray(e.favorites) ? e : {
                    favorites: [],
                    timesFavorited: 0
                }]);
                return null == a || 0 === a.favorites.length ? [] : a.favorites.map((t, n) => {
                    let s = i.FavoriteGIF.create();
                    return s.format = "IMAGE" === t.format ? i.GIFType.IMAGE : "VIDEO" === t.format ? i.GIFType.VIDEO : i.GIFType.NONE, s.src = t.src, s.width = t.width, s.height = t.height, s.order = a.favorites.length - n + e, {
                        url: t.url,
                        favorite: s
                    }
                })
            }
            let c = [{
                version: 2,
                run(e) {
                    let t = d(1);
                    if (0 === t.length) return !1;
                    for (let {
                            url: n,
                            favorite: a
                        }
                        of(null == e.favoriteGifs && (e.favoriteGifs = i.FavoriteGIFs.create()), e.favoriteGifs.gifs = {}, t)) e.favoriteGifs.gifs[n] = a;
                    return e.favoriteGifs.hideTooltip = t.length > 2, !0
                },
                cleanup() {}
            }, {
                version: 3,
                run(e) {
                    function t() {
                        return {
                            usageHistory: {},
                            favorites: []
                        }
                    }
                    let {
                        state: n
                    } = l.default.PersistedStore.migrateAndReadStoreState("StickersPersistedStore", [e => null == e || 0 === Object.keys(e).length ? t() : e, e => null == e || 0 === Object.keys(e).length ? t() : (null == e.favorites && (e.favorites = []), e)]);
                    if (null == n) return !1;
                    let a = !1;
                    return n.favorites.length > 0 && (e.favoriteStickers = i.FavoriteStickers.create(), e.favoriteStickers.stickerIds = s.uniq(n.favorites).slice(0, u.MAX_FAVORITES), a = !0), s.size(n.usageHistory) > 0 && (e.stickerFrecency = i.StickerFrecency.create(), e.stickerFrecency.stickers = (0, o.serializeUsageHistory)(n.usageHistory, 100), a = !0), a
                },
                cleanup() {
                    r.default.remove("StickersPersistedStore")
                }
            }, {
                version: 4,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [() => ({
                        usageHistory: r.default.get("EmojiUsageHistory") || {}
                    })]);
                    if (null == t) return !1;
                    let n = !1;
                    return null != t.favorites && t.favorites.length > 0 && (e.favoriteEmojis = i.FavoriteEmojis.create(), e.favoriteEmojis.emojis = s.uniq(t.favorites).slice(0, u.MAX_FAVORITES), n = !0), s.size(t.usageHistory) > 0 && (e.emojiFrecency = i.EmojiFrecency.create(), e.emojiFrecency.emojis = (0, o.serializeUsageHistory)(t.usageHistory, 100), n = !0), n
                },
                cleanup() {
                    r.default.remove("EmojiStore"), r.default.remove("EmojiUsageHistory"), r.default.remove("EmojiDiversitySurrogate")
                }
            }, {
                version: 6,
                run(e) {
                    null == e.favoriteGifs && (e.favoriteGifs = i.FavoriteGIFs.create()), null == e.favoriteGifs.gifs && (e.favoriteGifs.gifs = {});
                    let t = d(1);
                    if (0 === t.length) return !1;
                    s(e.favoriteGifs.gifs).values().sortBy("order").forEach((e, n) => e.order = t.length + 1 + n);
                    let n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length,
                        a = 0;
                    for (let {
                            url: s,
                            favorite: l
                        }
                        of t) {
                        if (l.order = t.length - a, a++, s in e.favoriteGifs.gifs) {
                            e.favoriteGifs.gifs[s].order = l.order;
                            continue
                        }
                        let r = i.FavoriteGIF.toBinary(l).length + s.length + 7;
                        !(n + r > u.MAX_FAVORITE_GIFS_SIZE) && (n += r, e.favoriteGifs.gifs[s] = l)
                    }
                    for (n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length; n > u.MAX_FAVORITE_GIFS_SIZE;) {
                        let t = 0;
                        for (let n in e.favoriteGifs.gifs)
                            if (delete e.favoriteGifs.gifs[n], ++t >= 10) break;
                        n = i.FavoriteGIFs.toBinary(e.favoriteGifs).length
                    }
                    return !0
                },
                cleanup() {}
            }, {
                version: 7,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("ApplicationCommandFrecency", []);
                    if (null == t) return !1;
                    let n = !1;
                    return s.size(t.usageHistory) > 0 && (e.applicationCommandFrecency = i.ApplicationCommandFrecency.create(), e.applicationCommandFrecency.applicationCommands = (0, o.serializeUsageHistory)(t.usageHistory, 500), n = !0), n
                },
                cleanup() {
                    r.default.remove("ApplicationCommandFrecency")
                }
            }, {
                version: 8,
                run(e) {
                    let {
                        state: t
                    } = l.default.PersistedStore.migrateAndReadStoreState("SoundboardFavoriteStore", []);
                    if (null == t) return !1;
                    let n = !1;
                    return s.size(t.favoriteSounds) > 0 && (e.favoriteSoundboardSounds = i.FavoriteSoundboardSounds.create(), Object.keys(t.favoriteSounds).forEach(n => {
                        let a = new Set(t.favoriteSounds[n]);
                        a.forEach(t => {
                            var n;
                            null === (n = e.favoriteSoundboardSounds) || void 0 === n || n.soundIds.push(t)
                        })
                    }), n = !0), n
                },
                cleanup() {
                    r.default.remove("SoundboardFavoriteStore")
                }
            }];
            var E = c
        },
        243315: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("311790"), n("477657"), n("811875"), n("90301"), n("652153"), n("28797"), n("817884"), n("597349"), n("667536"), n("690341");
            var a = n("446674"),
                s = n("151426"),
                l = n("750028"),
                i = n("95410"),
                r = n("139321"),
                o = n("42203"),
                u = n("674268"),
                d = n("116949"),
                c = n("49111"),
                E = n("583374");

            function f(e, t) {
                let n = !1;
                return null == e.userContent && (e.userContent = {
                    dismissedContents: new Uint8Array
                }), null == e.userContent.dismissedContents && (e.userContent.dismissedContents = new Uint8Array), !(0, u.hasBit)(e.userContent.dismissedContents, t) && (e.userContent.dismissedContents = (0, u.addBit)(e.userContent.dismissedContents, t), n = !0), n
            }

            function _(e, t, n) {
                let a = r.HotspotStore.hasHiddenHotspot(t);
                return !!a && f(e, n)
            }
            let C = [{
                version: 2,
                run(e) {
                    var t, n, a;
                    let l;
                    if ((a = l || (l = {})).Mentions = "Recent Mentions", a.Unreads = "Inbox", null != e.inbox) return !1;
                    let r = !1,
                        u = s.InboxSettings.create();
                    e.inbox = u, i.default.get("seenInboxTutorial", !1) && (u.viewedTutorial = !0, r = !0);
                    let c = i.default.get("recentsButtonTab2");
                    null != c && (u.currentTab = "Recent Mentions" === c ? s.InboxTab.MENTIONS : s.InboxTab.UNREADS, r = !0);
                    let E = null !== (t = i.default.get("unread-messages-collapsed-channels")) && void 0 !== t ? t : {};
                    for (let t in E) {
                        if (!E[t]) continue;
                        let a = o.default.getChannel(t);
                        null != a && (r = !0, (0, d.mutateUserChannelSettings)(e, null !== (n = a.guild_id) && void 0 !== n ? n : "0", a.id, e => {
                            e.collapsedInInbox = !0
                        }))
                    }
                    return r
                },
                cleanup() {
                    i.default.remove("seenInboxTutorial"), i.default.remove("recentsButtonTab2"), i.default.remove("unread-messages-collapsed-channels")
                }
            }, {
                version: 3,
                run(e) {
                    let {
                        state: t
                    } = a.default.PersistedStore.migrateAndReadStoreState("EmojiStore", [() => ({
                        diversitySurrogate: i.default.get("EmojiDiversitySurrogate") || ""
                    })]);
                    if (null == t) return !1;
                    let n = !1;
                    return null != t.diversitySurrogate && "" !== t.diversitySurrogate && (null == e.textAndImages && (e.textAndImages = s.TextAndImagesSettings.create()), null == e.textAndImages.diversitySurrogate && (e.textAndImages.diversitySurrogate = l.StringValue.create()), e.textAndImages.diversitySurrogate.value = t.diversitySurrogate, n = !0), n
                },
                cleanup() {}
            }, {
                version: 4,
                run(e) {
                    let t = !1,
                        n = !0 === i.default.get("HAS_SEEN_HUB_UPSELL") || r.HotspotStore.hasHiddenHotspot(r.HotspotLocations.HUB_SECOND_EMAIL_CONNECTION_UPSELL);
                    return n && (t = f(e, s.DismissibleContent.HUB_WAITLIST_UPSELL)), t
                },
                cleanup() {
                    i.default.remove("HAS_SEEN_HUB_UPSELL")
                }
            }, {
                version: 5,
                run(e) {
                    var t, n, a, r, o, u, d;
                    let c = !1;
                    e.textAndImages = null !== (t = e.textAndImages) && void 0 !== t ? t : s.TextAndImagesSettings.create(), e.notifications = null !== (n = e.notifications) && void 0 !== n ? n : s.NotificationSettings.create(), e.privacy = null !== (a = e.privacy) && void 0 !== a ? a : s.PrivacySettings.create(), e.voiceAndVideo = null !== (r = e.voiceAndVideo) && void 0 !== r ? r : s.VoiceAndVideoSettings.create(), e.gameLibrary = null !== (o = e.gameLibrary) && void 0 !== o ? o : s.GameLibrarySettings.create(), e.debug = null !== (u = e.debug) && void 0 !== u ? u : s.DebugSettings.create();
                    let E = null !== (d = i.default.get("UserSettingsStore")) && void 0 !== d ? d : {};
                    return "boolean" == typeof E.useRichChatTextBox && (e.textAndImages.useRichChatInput = l.BoolValue.create({
                        value: E.useRichChatTextBox
                    }), c = !0), "string" == typeof E.renderSpoilers && (e.textAndImages.renderSpoilers = l.StringValue.create({
                        value: E.renderSpoilers
                    }), c = !0), "boolean" == typeof E.useThreadSidebar && (e.textAndImages.useThreadSidebar = l.BoolValue.create({
                        value: E.useThreadSidebar
                    }), c = !0), "boolean" == typeof E.showInAppNotifications && (e.notifications.showInAppNotifications = l.BoolValue.create({
                        value: E.showInAppNotifications
                    }), c = !0), E.emojiPickerCollapsedSections instanceof Array && (e.textAndImages.emojiPickerCollapsedSections = E.emojiPickerCollapsedSections, c = !0), E.stickerPickerCollapsedSections instanceof Array && (e.textAndImages.stickerPickerCollapsedSections = E.stickerPickerCollapsedSections, c = !0), "boolean" == typeof E.viewImageDescriptions && (e.textAndImages.viewImageDescriptions = l.BoolValue.create({
                        value: E.viewImageDescriptions
                    }), c = !0), "boolean" == typeof E.showCommandSuggestions && (e.textAndImages.showCommandSuggestions = l.BoolValue.create({
                        value: E.showCommandSuggestions
                    }), c = !0), "boolean" == typeof E.alwaysPreviewVideo && (e.voiceAndVideo.alwaysPreviewVideo = l.BoolValue.create({
                        value: E.alwaysPreviewVideo
                    }), c = !0), "boolean" == typeof E.notifyFriendsOnGoLive && (e.notifications.notifyFriendsOnGoLive = l.BoolValue.create({
                        value: E.notifyFriendsOnGoLive
                    }), c = !0), "boolean" == typeof E.installShortcutDesktop && (e.gameLibrary.installShortcutDesktop = l.BoolValue.create({
                        value: E.installShortcutDesktop
                    }), c = !0), "boolean" == typeof E.installShortcutStartMenu && (e.gameLibrary.installShortcutStartMenu = l.BoolValue.create({
                        value: E.installShortcutStartMenu
                    }), c = !0), "boolean" == typeof E.allowActivityPartyPrivacyFriends && (e.privacy.allowActivityPartyPrivacyFriends = l.BoolValue.create({
                        value: E.allowActivityPartyPrivacyFriends
                    }), c = !0), "boolean" == typeof E.allowActivityPartyPrivacyVoiceChannel && (e.privacy.allowActivityPartyPrivacyVoiceChannel = l.BoolValue.create({
                        value: E.allowActivityPartyPrivacyVoiceChannel
                    }), c = !0), "boolean" == typeof E.rtcPanelShowVoiceStates && (e.debug.rtcPanelShowVoiceStates = l.BoolValue.create({
                        value: E.rtcPanelShowVoiceStates
                    }), c = !0), c
                },
                cleanup() {}
            }, {
                version: 7,
                run: e => _(e, r.HotspotLocations.APPLICATION_COMMAND_TOOLTIP, s.DismissibleContent.APPLICATION_COMMAND_TOOLTIP),
                cleanup() {}
            }, {
                version: 8,
                run: e => _(e, r.HotspotLocations.CHANNEL_BANNER_MEMBER_LIST_NOTICE, s.DismissibleContent.CHANNELINFO_CHANNELBANNER_NOTICE),
                cleanup() {}
            }, {
                version: 9,
                run: e => (r.HotspotStore.hasHiddenHotspot(r.HotspotLocations.MULTI_ACCOUNT_TOOLTIP) && i.default.set(E.MULTIACCOUNT_TOOLTIP_SEEN_KEY, "true"), _(e, r.HotspotLocations.MULTI_ACCOUNT_TOOLTIP, s.DismissibleContent.ACCOUNT_MULTIACCOUNT_TOOLTIP)),
                cleanup() {}
            }, {
                version: 10,
                run(e) {
                    var t;
                    let n = _(e, r.HotspotLocations.HUB_LINK_CHANNEL_NOTICE, s.DismissibleContent.CHANNEL_NOTICE_HUBLINK),
                        a = null !== (t = i.default.get("channelNotices")) && void 0 !== t ? t : {};
                    return !1 === a[c.ChannelNoticeTypes.INVITE] && f(e, s.DismissibleContent.CHANNEL_NOTICE_INVITE) && (n = !0), !1 === a[c.ChannelNoticeTypes.QUICKSWITCHER] && f(e, s.DismissibleContent.CHANNEL_NOTICE_QUICKSWITCHER) && (n = !0), !1 === a[c.ChannelNoticeTypes.GUILD_BOOSTING] && f(e, s.DismissibleContent.CHANNEL_NOTICE_PREMIUM_GUILD_SUBSCRIPTION) && (n = !0), n
                },
                cleanup() {
                    i.default.remove("channelNotices")
                }
            }, {
                version: 11,
                run(e) {
                    let t = !1;
                    return _(e, r.HotspotLocations.GUILD_EVENT_UPSELL, s.DismissibleContent.GUILD_HEADER_EVENT_UPSELL) && (t = !0), _(e, r.HotspotLocations.PREMIUM_PROGRESS_BAR_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_PREMIUM_GUILD_PROGRESS) && (t = !0), _(e, r.HotspotLocations.ANIMATED_GUILD_BANNER_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_ANIMATED_GUILD_BANNER) && (t = !0), t
                },
                cleanup() {}
            }, {
                version: 12,
                run(e) {
                    let t = !1;
                    return i.default.get("hideNag") && f(e, s.DismissibleContent.NAGBAR_NOTICE_DOWNLOAD) && (t = !0), i.default.get("hideConnectSpotify") && f(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_SPOTIFY) && (t = !0), i.default.get("hideConnectPlayStation") && f(e, s.DismissibleContent.NAGBAR_NOTICE_CONNECT_PLAYSTATION) && (t = !0), i.default.get("hideMFASMSNotice") && f(e, s.DismissibleContent.NAGBAR_NOTICE_MFA_SMS_BACKUP) && (t = !0), t
                },
                cleanup() {
                    i.default.remove("hideNag"), i.default.remove("hideConnectSpotify"), i.default.remove("hideConnectPlayStation"), i.default.remove("hideMFASMSNotice")
                }
            }, {
                version: 13,
                run(e) {
                    let t = !1;
                    return i.default.get("hidePremiumPromo") && f(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_PROMO) && (t = !0), i.default.get("hidePremiumTier2TrialEnding") && f(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_TIER_TWO_TRIAL_ENDING) && (t = !0), i.default.get("hidePremiumReactivateNotice") && f(e, s.DismissibleContent.NAGBAR_NOTICE_PREMIUM_REACTIVATE) && (t = !0), _(e, r.HotspotLocations.INVITE_SPLASH_GUILD_HEADER_TOOLTIP, s.DismissibleContent.GUILD_HEADER_INVITE_SPLASH) && (t = !0), t
                },
                cleanup() {
                    i.default.remove("hidePremiumPromo"), i.default.remove("hidePremiumTier2TrialEnding"), i.default.remove("hidePremiumReactivateNotice")
                }
            }, {
                version: 14,
                run: e => _(e, r.HotspotLocations.ACTIVITY_BEB_TUTORIAL, s.DismissibleContent.ACTIVITIES_TUTORIAL_COACH_MARK),
                cleanup() {}
            }, {
                version: 15,
                run: e => _(e, r.HotspotLocations.NOW_PLAYING_CONSENT_CARD, s.DismissibleContent.NOW_PLAYING_CONSENT_CARD),
                cleanup() {}
            }, {
                version: 16,
                run(e) {
                    let t = i.default.get("PromotionsPersistedStore");
                    if (null == t) return !1;
                    let n = t._state.lastDismissedOutboundPromotionStartDate;
                    return null != n && (null == e.userContent && (e.userContent = s.UserContentSettings.create()), null == e.userContent.lastDismissedOutboundPromotionStartDate) && (e.userContent.lastDismissedOutboundPromotionStartDate = l.StringValue.create({
                        value: n
                    }), !0)
                },
                cleanup() {}
            }, {
                version: 17,
                run(e) {
                    let {
                        state: t
                    } = a.default.PersistedStore.migrateAndReadStoreState("ExpressionSuggestionsPersistedStore", null);
                    if (null == t) return !1;
                    let n = t.expressionSuggestionsEnabled;
                    return null != n && (null == e.textAndImages && (e.textAndImages = s.TextAndImagesSettings.create()), null == e.textAndImages.expressionSuggestionsEnabled) && (e.textAndImages.expressionSuggestionsEnabled = l.BoolValue.create({
                        value: n
                    }), !0)
                },
                cleanup() {
                    i.default.remove("ExpressionSuggestionsPersistedStore")
                }
            }, {
                version: 18,
                run(e) {
                    let t = !1;
                    return _(e, r.HotspotLocations.GUILD_DELETE_FEEDBACK, s.DismissibleContent.GUILD_DELETE_FEEDBACK) && (t = !0), _(e, r.HotspotLocations.GUILD_LEAVE_FEEDBACK, s.DismissibleContent.GUILD_LEAVE_FEEDBACK) && (t = !0), t
                },
                cleanup() {}
            }, {
                version: 19,
                run(e) {
                    var t;
                    let n = !1,
                        a = null !== (t = i.default.get("forumHelperCardStorageKey")) && void 0 !== t && t;
                    return a && (n = f(e, s.DismissibleContent.FORUM_CHANNEL_HELPER_CARD)), n
                },
                cleanup() {
                    i.default.remove("forumHelperCardStorageKey")
                }
            }];
            var h = C
        },
        392011: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("913144"),
                i = n("647627"),
                r = n("243315"),
                o = n("275877"),
                u = n("872173"),
                d = n("374363"),
                c = n("397336"),
                E = {
                    init() {
                        o.default[c.UserSettingsTypes.PRELOADED_USER_SETTINGS] = r.default, o.default[c.UserSettingsTypes.FRECENCY_AND_FAVORITES_SETTINGS] = i.default, l.default.subscribe("CONNECTION_OPEN", f), l.default.subscribe("USER_SETTINGS_PROTO_ENQUEUE_UPDATE", _), l.default.subscribe("USER_SETTINGS_PROTO_LOAD_IF_NECESSARY", C), l.default.subscribe("APP_STATE_UPDATE", h)
                    }
                };

            function f() {
                let e = d.default.getFullState(),
                    t = e[c.UserSettingsTypes.PRELOADED_USER_SETTINGS];
                t.editInfo.triggeredMigrations && u.PreloadedUserSettingsActionCreators.markDirtyFromMigration(t.proto, t.editInfo.cleanupFuncs), s.forEach(u.UserSettingsActionCreatorsByType, (t, n) => {
                    let a = e[Number(n)];
                    null != a.editInfo.offlineEditDataVersion && t.scheduleSaveFromOfflineEdit()
                })
            }

            function _(e) {
                let {
                    settings: {
                        proto: t,
                        type: n
                    },
                    delaySeconds: a,
                    jitter: s
                } = e;
                (0, u.UserSettingsActionCreatorsByType)[n].markDirty(t, {
                    delaySeconds: a,
                    jitter: s
                })
            }

            function C(e) {
                let {
                    settingsType: t
                } = e;
                (0, u.UserSettingsActionCreatorsByType)[t].loadIfNecessary()
            }

            function h(e) {
                let {
                    state: t
                } = e;
                ("inactive" === t || "background" === t) && s.forEach(u.UserSettingsActionCreatorsByType, (e, t) => {
                    let n = d.default.getFullState()[Number(t)];
                    null != n.editInfo.timeout && (e.logger.log("Triggering persistChanges due to AppStateUpdate"), e.persistChanges())
                })
            }
        },
        933422: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("393414"),
                i = n("5667"),
                r = n("599110"),
                o = n("701909"),
                u = n("568456"),
                d = n("49111"),
                c = n("994428"),
                E = n("782340"),
                f = n("393254"),
                _ = e => {
                    let {
                        markAsDismissed: t
                    } = e;
                    return s.useEffect(() => {
                        r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                            action: u.DMSafetyCoachmarkActions.VIEW
                        })
                    }, []), (0, a.jsx)(i.default, {
                        header: E.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_HEADER_V2,
                        content: E.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_CONTENT_V2.format({
                            helpdeskArticle: o.default.getArticleURL(d.HelpdeskArticles.SAFE_DIRECT_MESSAGING)
                        }),
                        buttonCTA: E.default.Messages.GOT_IT,
                        secondaryButtonCTA: E.default.Messages.USER_EXPLICIT_CONTENT_FILTER_COACHMARK_REDIRECT,
                        className: f.coachmark,
                        onClick: e => {
                            e.stopPropagation(), t(c.ContentDismissActionType.UNKNOWN), r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                                action: u.DMSafetyCoachmarkActions.DISMISS
                            })
                        },
                        onSecondaryClick: () => {
                            (0, l.transitionTo)(d.Routes.SETTINGS("privacy-and-safety")), r.default.track(d.AnalyticEvents.DM_SAFETY_COACHMARK_ACTION, {
                                action: u.DMSafetyCoachmarkActions.CHANGE_SETTING
                            })
                        },
                        markAsDismissed: t,
                        caretPosition: i.CaretPosition.BOTTOM_CENTER,
                        headerClassName: f.header
                    })
                }
        },
        648661: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                showInvalidUsernameToast: function() {
                    return l
                }
            });
            var a = n("77078"),
                s = n("782340");

            function l() {
                (0, a.showToast)((0, a.createToast)(s.default.Messages.USER_SETTINGS_UPDATE_FAILURE, a.ToastType.FAILURE))
            }
        },
        126667: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("627445"),
                i = n.n(l),
                r = n("446674"),
                o = n("437822"),
                u = n("152584"),
                d = n("648661"),
                c = n("330387"),
                E = n("790618"),
                f = n("697218"),
                _ = n("67211"),
                C = n("892313"),
                h = n("49111"),
                I = e => {
                    let {
                        transitionState: t,
                        onClose: n
                    } = e, l = (0, r.useStateFromStores)([E.default], () => E.default.getErrors()), I = (0, r.useStateFromStores)([E.default], () => E.default.getFormState()), T = (0, r.useStateFromStores)([f.default], () => {
                        let e = f.default.getCurrentUser();
                        return i(null != e, "EmailVerificationModal: user cannot be undefined"), e
                    }), S = (0, r.useStateFromStores)([c.default], () => c.default.getAction()), N = !C.default.isEmailReverification(S), A = null != T.email, [m, p] = s.useState(!0), g = I === h.FormStates.SUBMITTING;

                    function R(e) {
                        var t, n;
                        return null !== (n = null == l ? void 0 : null === (t = l[e]) || void 0 === t ? void 0 : t[0]) && void 0 !== n ? n : ""
                    }
                    let O = R("email"),
                        L = R("password");
                    return (0, a.jsx)(_.default, {
                        transitionState: t,
                        email: T.email,
                        emailError: O,
                        passwordError: L,
                        submitting: g,
                        canResend: m && !g && A && 0 === O.length && 0 === L.length,
                        canChange: N,
                        onChangeEmailClick: function() {
                            p(!1)
                        },
                        onVerify: function(e, t) {
                            (0, u.saveAccountChanges)({
                                email: e,
                                password: t
                            }).then(e => {
                                var t;
                                !(null == e ? void 0 : e.ok) && (null == e ? void 0 : null === (t = e.body) || void 0 === t ? void 0 : t.username) != null && (0, d.showInvalidUsernameToast)()
                            }), p(!0)
                        },
                        onResend: function() {
                            o.default.verifyResend()
                        },
                        onClose: n
                    })
                }
        },
        61928: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                EMAIL_VERIFICATION_MODAL_KEY: function() {
                    return L
                },
                default: function() {
                    return v
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("759843"),
                i = n("446674"),
                r = n("872717"),
                o = n("77078"),
                u = n("437822"),
                d = n("54239"),
                c = n("152584"),
                E = n("135230"),
                f = n("84339"),
                _ = n("485328"),
                C = n("428958"),
                h = n("878720"),
                I = n("161778"),
                T = n("330387"),
                S = n("642400"),
                N = n("668596"),
                A = n("892313"),
                m = n("126667"),
                p = n("601745"),
                g = n("49111"),
                R = n("482931"),
                O = n("782340");
            let L = "Email Verification";

            function v() {
                let {
                    action: e,
                    theme: t
                } = (0, i.useStateFromStoresObject)([T.default, I.default], () => ({
                    action: T.default.getAction(),
                    theme: I.default.theme
                })), n = A.default.getVerificationTypes(e), [v, M] = s.useState(0), P = (0, f.default)(n);
                (0, C.default)({
                    type: l.ImpressionTypes.MODAL,
                    name: l.ImpressionNames.USER_ACTION_REQUIRED,
                    properties: {
                        verification_type: n[0],
                        verification_types: n
                    }
                }, {}, [n.toString()]);
                let D = () => {
                    (0, c.accountDetailsInit)(), (0, o.openModal)(e => (0, a.jsx)(m.default, {
                        ...e
                    }), {
                        modalKey: L,
                        Layer: N.default
                    })
                };
                return s.useEffect(() => (_.default.disable(), () => {
                    _.default.enable()
                }), []), s.useEffect(() => {
                    (null == P ? void 0 : P[0]) === g.VerificationTypes.PHONE && (null == n ? void 0 : n[0]) === g.VerificationTypes.EMAIL && (0, o.openModal)(e => (0, a.jsx)(E.default, {
                        ...e,
                        title: O.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_TITLE,
                        body: O.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_BODY,
                        confirmText: O.default.Messages.PHONE_THEN_EMAIL_INTERSTITIAL_CONFIRM
                    }), {
                        modalKey: "PHONE_THEN_EMAIL_INTERSTITIAL_MODAL_KEY",
                        Layer: N.default,
                        onCloseCallback: D
                    })
                }, [n, P]), (0, a.jsx)(S.default, {
                    types: n,
                    captchaKey: v,
                    onCaptchaVerify: e => {
                        r.default.post({
                            url: g.Endpoints.CAPTCHA,
                            body: {
                                captcha_key: e
                            },
                            oldFormErrors: !0
                        }).then(d.popLayer, () => {
                            M(e => e + 1)
                        })
                    },
                    theme: t,
                    onClick: e => {
                        e === g.VerificationTypes.EMAIL_OR_PHONE || e === g.VerificationTypes.EMAIL || e === g.VerificationTypes.REVERIFY_EMAIL ? D() : (0, o.openModal)(e => (0, a.jsx)(p.default, {
                            reason: h.ChangePhoneReason.USER_ACTION_REQUIRED,
                            ...e
                        }), {
                            modalKey: R.PHONE_VERIFICATION_MODAL_KEY,
                            Layer: N.default
                        })
                    },
                    onLogout: () => (0, o.openModal)(e => (0, a.jsx)(o.ConfirmModal, {
                        header: O.default.Messages.LOGOUT,
                        confirmText: O.default.Messages.LOGOUT,
                        cancelText: O.default.Messages.CANCEL,
                        onConfirm: () => u.default.logout(),
                        ...e,
                        children: (0, a.jsx)(o.Text, {
                            variant: "text-md/normal",
                            children: O.default.Messages.USER_SETTINGS_CONFIRM_LOGOUT
                        })
                    }), {
                        Layer: N.default
                    })
                })
            }
        },
        924658: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("271938"),
                l = n("42887"),
                i = n("800762"),
                r = e => (0, a.useStateFromStoresObject)([i.default, l.default, s.default], () => (function(e) {
                    var t;
                    let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i.default,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : l.default,
                        r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : s.default,
                        o = null != e ? n.getVoiceState(e.getGuildId(), r.getId()) : null,
                        u = a.isSelfDeaf();
                    return {
                        selfDeaf: u,
                        deaf: null !== (t = null == o ? void 0 : o.deaf) && void 0 !== t && t
                    }
                })(e, i.default, l.default, s.default))
        },
        470885: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            });
            var s = n("913144"),
                l = n("600965"),
                i = n("316272"),
                r = n("191225"),
                o = n("292687"),
                u = n("373469"),
                d = n("42203"),
                c = n("778588"),
                E = n("42887"),
                f = n("449501"),
                _ = n("945956"),
                C = n("18494"),
                h = n("162771"),
                I = n("800762"),
                T = n("49111"),
                S = n("353927");

            function N() {
                var e;
                let t = a;
                if (null == t || !f.default.isOpen(t)) return !1;
                s.default.wait(() => l.close(t)), null === (e = _.default.getRTCConnection()) || void 0 === e || e.setPipOpen(!1), a = null
            }

            function A() {
                let e = _.default.getChannelId(),
                    t = a === e;
                return function() {
                    let e = _.default.getChannelId(),
                        t = C.default.getChannelId(),
                        n = E.default.supports(S.Features.VIDEO);
                    if (!n) return !0;
                    let a = o.default.getWindowOpen(T.PopoutWindowKeys.CHANNEL_CALL_POPOUT);
                    if (a) return !0;
                    let s = u.default.getAllActiveStreams().length > 0,
                        l = null != e && Object.values(I.default.getVideoVoiceStatesForChannel(e)).some(e => {
                            let {
                                userId: t
                            } = e;
                            return !E.default.isLocalVideoDisabled(t)
                        });
                    if (!(l || s)) return !0;
                    let i = c.default.hasLayers(),
                        r = i && c.default.getLayers().includes(T.Layers.RTC_DEBUG);
                    if (r) return !1;
                    if (i) return !0;
                    let d = e === t;
                    return !!d || !1
                }() ? N() : (!t && N(), null != e && function(e) {
                    var t;
                    let n = d.default.getChannel(e);
                    if (null == n || f.default.isOpen(e)) return !1;
                    s.default.wait(() => l.open(n.id, T.PictureInPictureComponents.VIDEO, {
                        channel: n
                    })), null === (t = _.default.getRTCConnection()) || void 0 === t || t.setPipOpen(!0), a = e
                }(e))
            }
            class m extends i.default {
                _initialize() {
                    C.default.addChangeListener(A), h.default.addChangeListener(A), _.default.addChangeListener(A), I.default.addChangeListener(A), c.default.addChangeListener(A), u.default.addChangeListener(A), o.default.addChangeListener(A), E.default.addChangeListener(A), r.default.addChangeListener(A)
                }
                _terminate() {
                    C.default.removeChangeListener(A), h.default.removeChangeListener(A), _.default.removeChangeListener(A), I.default.removeChangeListener(A), c.default.removeChangeListener(A), u.default.removeChangeListener(A), o.default.removeChangeListener(A), E.default.removeChangeListener(A), r.default.removeChangeListener(A)
                }
            }
            var p = new m
        },
        868558: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return I
                }
            }), n("222007");
            var a = n("862337"),
                s = n("913144"),
                l = n("987317"),
                i = n("316272"),
                r = n("373469"),
                o = n("42203"),
                u = n("305961"),
                d = n("603699"),
                c = n("945956"),
                E = n("773336"),
                f = n("49111");
            let _ = new a.Timeout,
                C = new a.Timeout;
            class h extends i.default {
                _initialize() {
                    s.default.subscribe("IDLE", this.handleIdleUpdate)
                }
                _terminate() {
                    _.stop(), C.stop(), s.default.unsubscribe("IDLE", this.handleIdleUpdate)
                }
                handleIdleUpdate() {
                    let e = d.default.getIdleSince();
                    if (!E.isPlatformEmbedded) return;
                    _.stop(), C.stop();
                    let t = r.default.getAllActiveStreams();
                    for (let e of t)
                        if (e.state !== f.ApplicationStreamStates.ENDED) return;
                    if (null == e) return;
                    let n = c.default.getChannelId();
                    if (null == n) return;
                    C.start(18e6, () => {
                        l.default.selectVoiceChannel(null)
                    });
                    let a = u.default.getGuild(c.default.getGuildId());
                    if (null == a || null == a.afkChannelId || a.afkChannelId === n || null == a.afkTimeout) return;
                    let s = o.default.getChannel(n);
                    if (null != s) !s.isGuildStageVoice() && _.start(e + 1e3 * a.afkTimeout - Date.now(), () => {
                        null != (a = u.default.getGuild(c.default.getGuildId())) && null != a.afkChannelId && l.default.selectVoiceChannel(a.afkChannelId)
                    })
                }
            }
            var I = new h
        },
        453515: function(e, t, n) {
            "use strict";
            n.r(t), n("222007");
            var a, s = n("446674"),
                l = n("95410"),
                i = n("862337"),
                r = n("913144"),
                o = n("260365"),
                u = n("374363"),
                d = n("964889"),
                c = n("546463"),
                E = n("686470"),
                f = n("568307"),
                _ = n("49111");
            let C = "ActivityTrackingStore",
                h = null !== (a = l.default.get(C)) && void 0 !== a ? a : {},
                I = {},
                T = !1;

            function S(e) {
                let t = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
                t && N(e, !0);
                let n = I[e.applicationId];
                null != n && (n.stop(), delete I[e.applicationId]), delete h[e.applicationId], l.default.set(C, h)
            }

            function N(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    n = Date.now(),
                    a = null != e.updatedAt ? n - e.updatedAt : 0;
                a > 21e5 && (a = 0), o.default.updateActivity({
                    applicationId: e.applicationId,
                    distributor: e.isDiscordApplication ? _.Distributors.DISCORD : e.distributor,
                    shareActivity: (0, d.shouldShareApplicationActivity)(e.applicationId, E.default),
                    token: e.token,
                    duration: Math.floor(a / 1e3),
                    closed: t
                }), e.updatedAt = n;
                let s = I[e.applicationId];
                null == s && (s = I[e.applicationId] = new i.Interval).start(18e5, () => N(e)), !t && (h[e.applicationId] = e, l.default.set(C, h))
            }

            function A() {
                let e = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0],
                    t = f.default.getRunningGames(),
                    n = new Set;
                for (let {
                        name: e,
                        distributor: a
                    }
                    of t) {
                    let t = c.default.getGameByName(e);
                    if (null != t) n.add(t.id), !(t.id in h) && N({
                        applicationId: t.id,
                        updatedAt: Date.now(),
                        distributor: a
                    })
                }
                for (let t of Object.keys(h)) !n.has(t) && S(h[t], e)
            }

            function m() {
                for (let e of Object.keys(h)) S(h[e]);
                T = !1
            }
            class p extends s.default.Store {
                initialize() {
                    this.waitFor(f.default, u.default, E.default), this.syncWith([u.default], A)
                }
                getActivities() {
                    return h
                }
            }
            p.displayName = "ActivityTrackingStore", new p(r.default, {
                RUNNING_GAMES_CHANGE: () => A(),
                CONNECTION_OPEN: function() {
                    if (T) return !1;
                    for (let e of Object.keys(h)) N(h[e]);
                    A(!1), T = !0
                },
                CONNECTION_CLOSED: function(e) {
                    let {
                        code: t
                    } = e;
                    4004 === t && m()
                },
                LOGOUT: m,
                ACTIVITY_UPDATE_SUCCESS: function(e) {
                    let {
                        applicationId: t,
                        token: n
                    } = e, a = h[t];
                    if (null == a) return !1;
                    a.token = n, l.default.set(C, h)
                },
                ACTIVITY_UPDATE_FAIL: function(e) {
                    let {
                        applicationId: t
                    } = e, n = h[t];
                    if (null == n) return !1;
                    n.token = null, n.updatedAt = null, l.default.set(C, h)
                }
            })
        },
        2105: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("446674"),
                s = n("913144");
            let l = {};
            class i extends a.default.Store {
                getSkuIdForChannel(e) {
                    return l[e]
                }
            }
            i.displayName = "ChannelSKUStore";
            var r = new i(s.default, {
                CONNECTION_OPEN: function() {
                    l = {}
                },
                STORE_LISTING_FETCH_SUCCESS: function(e) {
                    let {
                        channelId: t,
                        storeListing: n
                    } = e;
                    null != t && (l[t] = n.sku.id)
                }
            })
        },
        161810: function(e, t, n) {
            "use strict";
            let a, s, l;
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            }), n("424973"), n("222007");
            var i = n("917351"),
                r = n.n(i),
                o = n("446674"),
                u = n("913144"),
                d = n("611183"),
                c = n("492114"),
                E = n("305961"),
                f = n("957255"),
                _ = n("45894"),
                C = n("49111");
            let h = [],
                I = null,
                T = !1,
                S = C.FormStates.CLOSED,
                N = {},
                A = !1,
                m = null;

            function p() {
                if (a = null != (s = c.default.getChannel()) ? E.default.getGuild(s.guild_id) : null, h = null != s && null != a && f.default.can(C.Permissions.MANAGE_WEBHOOKS, s) ? _.default.getWebhooksForChannel(a.id, s.id) : [], null != I) {
                    let e = R(I.id);
                    null != e && (I = e)
                }
                S = C.FormStates.OPEN, N = {}, A = !1
            }
            let g = r.debounce(() => {
                A && ((null == I || r.isEqual(I, R(I.id))) && (A = !1), !A && L.emitChange())
            }, 500);

            function R(e) {
                return h.find(t => {
                    let {
                        id: n
                    } = t;
                    return n === e
                })
            }
            class O extends o.default.Store {
                initialize() {
                    this.waitFor(c.default, E.default, _.default, f.default)
                }
                hasChanges() {
                    return A
                }
                get webhooks() {
                    return h
                }
                get editedWebhook() {
                    return I
                }
                get formState() {
                    return S
                }
                getWebhook(e) {
                    return R(e)
                }
                showNotice() {
                    return this.hasChanges()
                }
                getProps() {
                    return {
                        submitting: S === C.FormStates.SUBMITTING,
                        webhooks: h,
                        editedWebhook: I,
                        section: l,
                        sectionId: m,
                        hasChanges: this.hasChanges(),
                        isFetching: T,
                        errors: N
                    }
                }
            }
            O.displayName = "ChannelSettingsIntegrationsStore";
            let L = new O(u.default, __OVERLAY__ ? {} : {
                INTEGRATION_SETTINGS_INIT: p,
                INTEGRATION_SETTINGS_SAVE_SUCCESS: p,
                CHANNEL_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    if (t !== C.ChannelSettingsSections.INTEGRATIONS) return !1;
                    if (l = C.IntegrationSettingsSections.OVERVIEW, null == a) {
                        let e = c.default.getChannel(),
                            t = null == e ? void 0 : e.getGuildId();
                        null != e && null != t && (d.default.fetchForChannel(t, e.id), T = !0), p()
                    }
                },
                INTEGRATION_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t,
                        sectionId: n
                    } = e;
                    l = t, m = n
                },
                INTEGRATION_SETTINGS_START_EDITING_WEBHOOK: function(e) {
                    let {
                        webhookId: t
                    } = e, n = R(t);
                    if (null == n) return !1;
                    I = n, N = {}, A = !1
                },
                INTEGRATION_SETTINGS_STOP_EDITING_WEBHOOK: function() {
                    I = null, N = {}, A = !1
                },
                INTEGRATION_SETTINGS_UPDATE_WEBHOOK: function(e) {
                    let {
                        settings: t
                    } = e;
                    if (null == I) return !1;
                    I = {
                        ...I
                    }, null != t.name && I.name !== t.name && (I.name = t.name, A = !0), void 0 !== t.avatar && I.avatar !== t.avatar && (I.avatar = t.avatar, A = !0), null != t.channelId && I.channel_id !== t.channelId && (I.channel_id = t.channelId, A = !0), A && g()
                },
                CHANNEL_SETTINGS_CLOSE: function() {
                    s = null, a = null, h = [], I = null, S = C.FormStates.CLOSED
                },
                WEBHOOKS_UPDATE: function(e) {
                    let {
                        guildId: t,
                        channelId: n,
                        webhooks: l
                    } = e;
                    if (null == a || t !== a.id || null == s || n !== s.id || null == l || S === C.FormStates.SUBMITTING) return !1;
                    T = !1;
                    for (let e = h.length - 1; e >= 0; e--) {
                        let t = h[e];
                        if (null != n && (null == t ? void 0 : t.channel_id) !== n) continue;
                        let a = l.find(e => {
                            let {
                                id: n
                            } = e;
                            if (n === t.id) return !0
                        });
                        if (null != a) {
                            let n = {
                                ...t,
                                ...a
                            };
                            h[e] = n, !A && (null == I ? void 0 : I.id) === n.id && (I = n)
                        } else(null == I ? void 0 : I.id) === t.id && (I = null), h.splice(e, 1)
                    }
                    for (let e of l) {
                        let t = h.find(t => {
                            let {
                                id: n
                            } = t;
                            if (n === e.id) return !0
                        });
                        null == t && h.push(e)
                    }
                    h = [...h], g()
                },
                INTEGRATION_SETTINGS_SUBMITTING: function() {
                    S = C.FormStates.SUBMITTING, N = {}
                },
                INTEGRATION_SETTINGS_SAVE_FAILURE: function(e) {
                    var t;
                    if (S !== C.FormStates.SUBMITTING) return !1;
                    S = C.FormStates.OPEN, N = null !== (t = e.errors) && void 0 !== t ? t : {}
                }
            });
            var v = L
        },
        901998: function(e, t, n) {
            "use strict";
            let a, s;
            n.r(t), n.d(t, {
                default: function() {
                    return v
                }
            }), n("222007");
            var l = n("917351"),
                i = n.n(l),
                r = n("446674"),
                o = n("95410"),
                u = n("913144"),
                d = n("991170"),
                c = n("492114"),
                E = n("42203"),
                f = n("49111"),
                _ = n("606762");
            let C = new Set,
                h = f.FormStates.CLOSED,
                I = !1,
                T = null,
                S = null,
                N = null,
                A = null,
                m = null,
                p = null,
                g = o.default.get(_.ADVANCED_MODE_ON_KEY) || !1;

            function R(e) {
                let t = e.getGuildId(),
                    n = {
                        ...e.permissionOverwrites
                    };
                return null != t && null == n[t] && (n[t] = d.default.makeEveryoneOverwrite(t)), n
            }

            function O() {
                if (N = c.default.getChannel(), A = c.default.getCategory(), null == N) return !1;
                let e = N.getGuildId();
                S = T = R(N), null == T[m] && (m = e), s = null != A, a = d.default.areChannelsLocked(N, A), p = null, I = !1, h = f.FormStates.CLOSED, C.clear()
            }
            class L extends r.default.Store {
                initialize() {
                    this.waitFor(c.default, E.default)
                }
                hasChanges() {
                    return I
                }
                showNotice() {
                    return this.hasChanges()
                }
                getPermissionOverwrite(e) {
                    return null == T ? void 0 : T[e]
                }
                get editedPermissionIds() {
                    return Array.from(C)
                }
                get permissionOverwrites() {
                    return T
                }
                get selectedOverwriteId() {
                    return m
                }
                get formState() {
                    return h
                }
                get isLockable() {
                    return s
                }
                get locked() {
                    return a
                }
                get channel() {
                    return N
                }
                get category() {
                    return A
                }
                get advancedMode() {
                    return g
                }
            }
            L.displayName = "ChannelSettingsPermissionsStore";
            var v = new L(u.default, {
                CHANNEL_SETTINGS_SET_SECTION: function(e) {
                    let {
                        section: t
                    } = e;
                    if (null != N || t !== f.ChannelSettingsSections.PERMISSIONS) return !1;
                    O()
                },
                CHANNEL_SETTINGS_PERMISSIONS_INIT: O,
                CHANNEL_SETTINGS_PERMISSIONS_UPDATE_PERMISSION: function(e) {
                    let {
                        id: t,
                        allow: n,
                        deny: s
                    } = e, l = null == T ? void 0 : T[t];
                    if (null == l || null == N) return !1;
                    l = {
                        ...l,
                        allow: n,
                        deny: s
                    }, T = {
                        ...T,
                        [t]: l
                    }, C.add(t), h = f.FormStates.OPEN, I = !i.isEqual(T, S), a = d.default.areChannelsLocked(N, A)
                },
                CHANNEL_SETTINGS_PERMISSIONS_SELECT_PERMISSION: function(e) {
                    let {
                        id: t
                    } = e;
                    if (null != T && null != T[t]) m = t;
                    else {
                        if (null == N) return !1;
                        p = t
                    }
                },
                CHANNEL_SETTINGS_CLOSE: function() {
                    h = f.FormStates.CLOSED, T = null, S = null, N = null, A = null, I = !1, C.clear(), m = null, p = null
                },
                CHANNEL_UPDATES: function(e) {
                    let {
                        channels: t
                    } = e;
                    if (null == N) return !1;
                    let n = !1;
                    for (let e of t) !1 !== function(e) {
                        if (null == N || N.id !== e || null == (N = E.default.getChannel(e))) return !1;
                        A = c.default.getCategory();
                        let t = N.getGuildId();
                        if (null == t) return !1;
                        S = R(N);
                        let n = {};
                        return C.forEach(e => {
                            null != T && (n[e] = T[e])
                        }), null == n[t] && null == N.permissionOverwrites[t] && (n[t] = d.default.makeEveryoneOverwrite(t)), null == (T = {
                            ...N.permissionOverwrites,
                            ...n
                        })[m] ? m = t : null != p && null != T[p] && (m = p, p = null), a = d.default.areChannelsLocked(N, A), !0
                    }(e.id) && (n = !0);
                    return n
                },
                CHANNEL_SETTINGS_PERMISSIONS_SUBMITTING: function() {
                    h = f.FormStates.SUBMITTING
                },
                CHANNEL_SETTINGS_PERMISSIONS_SAVE_SUCCESS: function(e) {
                    let {
                        silent: t
                    } = e;
                    t ? h = f.FormStates.OPEN : (h = f.FormStates.CLOSED, O())
                },
                CHANNEL_SETTINGS_PERMISSIONS_SET_ADVANCED_MODE: function(e) {
                    let {
                        advancedMode: t
                    } = e;
                    g = t, o.default.set(_.ADVANCED_MODE_ON_KEY, t)
                }
            })
        },
        113605: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                extractDisplayName: function() {
                    return m
                },
                default: function() {
                    return R
                }
            });
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("629109"),
                o = n("374363"),
                u = n("773336"),
                d = n("42887"),
                c = n("49111"),
                E = n("353927");
            let f = {},
                _ = f,
                C = !1,
                h = {},
                I = {},
                T = {},
                S = {
                    id: null,
                    justChanged: !1
                },
                N = {
                    id: null,
                    justChanged: !1
                },
                A = /\(([^)]+)\)/;

            function m(e) {
                if ((0, u.getPlatform)() === u.PlatformTypes.WINDOWS) {
                    let t = e.name.match(A);
                    if (null != t) return t[1]
                }
                return e.name
            }

            function p(e, t, n) {
                return null == e || e.displayName !== t ? {
                    displayName: t,
                    type: n
                } : e.type === c.ConnectedDeviceType.INPUT && n === c.ConnectedDeviceType.OUTPUT || e.type === c.ConnectedDeviceType.OUTPUT && n === c.ConnectedDeviceType.INPUT ? {
                    displayName: t,
                    type: c.ConnectedDeviceType.INPUT_AND_OUTPUT
                } : e
            }
            class g extends l.default.DeviceSettingsStore {
                initialize(e) {
                    this.waitFor(d.default, o.default), _ = null != e ? e : f
                }
                getUserAgnosticState() {
                    return _
                }
                get initialized() {
                    return C
                }
                get lastDeviceConnected() {
                    return T
                }
                get inputDevices() {
                    return h
                }
                get lastInputSystemDevice() {
                    return S
                }
                get outputDevices() {
                    return I
                }
                get lastOutputSystemDevice() {
                    return N
                }
            }
            g.displayName = "ConnectedDeviceStore", g.persistKey = "ConnectedDeviceStore";
            var R = new g(i.default, {
                MEDIA_ENGINE_DEVICES: function(e) {
                    let {
                        inputDevices: t,
                        outputDevices: n
                    } = e, a = {};
                    S.justChanged = !1, t.forEach(e => {
                        if (a[m(e)] = e.id, e.id === E.DEFAULT_DEVICE_ID) {
                            var t;
                            let n = null !== (t = e.originalId) && void 0 !== t ? t : e.originalName;
                            n !== S.id && (S.justChanged = !0), S.id = n
                        }
                    });
                    let l = {};
                    if (N.justChanged = !1, n.forEach(e => {
                            if (l[m(e)] = e.id, e.id === E.DEFAULT_DEVICE_ID) {
                                var t;
                                let n = null !== (t = e.originalId) && void 0 !== t ? t : e.originalName;
                                n !== N.id && (N.justChanged = !0), N.id = n
                            }
                        }), !C) {
                        h = a, I = l, C = !0;
                        return
                    }
                    let i = Object.keys(h),
                        r = Object.keys(a),
                        o = Object.keys(I),
                        u = Object.keys(l),
                        d = s.difference(i, r),
                        f = s.difference(o, u);
                    if (d.length > 0 || f.length > 0) T = {};
                    else {
                        let e = s.difference(r, i);
                        e.forEach(e => {
                            T[e] = p(T[e], e, c.ConnectedDeviceType.INPUT)
                        });
                        let t = s.difference(u, o);
                        t.forEach(e => {
                            T[e] = p(T[e], e, c.ConnectedDeviceType.OUTPUT)
                        })
                    }
                    return !(s.isEqual(i, r) && s.isEqual(o, u)) && (h = a, I = l, !0)
                },
                CONNECTED_DEVICE_SET: function(e) {
                    let {
                        displayName: t,
                        connectedDevicePreference: n,
                        location: a
                    } = e;
                    ! function(e, t, n) {
                        if (t === c.ConnectedDevicePreference.INPUT || t === c.ConnectedDevicePreference.INPUT_AND_OUTPUT) {
                            let t = h[e];
                            null != t && i.default.wait(() => r.default.setInputDevice(t, n))
                        }
                        if (t === c.ConnectedDevicePreference.OUTPUT || t === c.ConnectedDevicePreference.INPUT_AND_OUTPUT) {
                            let t = I[e];
                            i.default.wait(() => r.default.setOutputDevice(t, n))
                        }
                    }(t, n, a), delete T[t]
                },
                CONNECTED_DEVICE_IGNORE: function(e) {
                    let {
                        displayName: t
                    } = e;
                    delete T[t]
                },
                CONNECTED_DEVICE_NEVER_SHOW_MODAL: function() {
                    T = {}, _ = {
                        neverShowModal: !0
                    }
                }
            })
        },
        555826: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("424973");
            var a = n("446674"),
                s = n("913144"),
                l = n("680762"),
                i = n("305961");
            let r = {},
                o = () => {
                    r = {
                        guildAffinitiesByGuildId: {},
                        guildAffinities: [],
                        lastFetched: 0
                    }
                };
            o();
            class u extends a.default.PersistedStore {
                initialize(e) {
                    null != e && (r = e), this.waitFor(i.default)
                }
                getState() {
                    return r
                }
                getGuildAffinity(e) {
                    return r.guildAffinitiesByGuildId[e]
                }
                get affinities() {
                    return r.guildAffinities
                }
                get hasRequestResolved() {
                    return 0 !== r.lastFetched
                }
            }
            u.displayName = "GuildAffinitiesStore", u.persistKey = "GuildAffinitiesStore";
            var d = new u(s.default, {
                CONNECTION_OPEN: function() {
                    return Date.now() - r.lastFetched > 864e5 && (0, l.fetchGuildAffinities)(), !1
                },
                LOAD_GUILD_AFFINITIES_SUCCESS: function(e) {
                    let {
                        guildAffinities: t
                    } = e;
                    r.guildAffinities = [], r.guildAffinitiesByGuildId = {}, r.lastFetched = Date.now(), t.forEach((e, t) => {
                        let {
                            affinity: n,
                            guild_id: a
                        } = e, s = {
                            score: n,
                            guildId: a,
                            index: t
                        };
                        r.guildAffinitiesByGuildId[a] = s, r.guildAffinities.push(s)
                    })
                },
                LOGOUT: function() {
                    o()
                }
            })
        },
        353802: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("697218"),
                i = n("49111");
            let r = null;
            class o extends a.default.Store {
                getHouseMembership() {
                    return r
                }
            }
            o.displayName = "HypeSquadStore";
            var u = new o(s.default, {
                CONNECTION_OPEN: function() {
                    let e = l.default.getCurrentUser();
                    null != e && (e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_1) ? r = i.HypeSquadHouses.HOUSE_1 : e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_2) ? r = i.HypeSquadHouses.HOUSE_2 : e.hasFlag(i.UserFlags.HYPESQUAD_ONLINE_HOUSE_3) && (r = i.HypeSquadHouses.HOUSE_3))
                },
                HYPESQUAD_ONLINE_MEMBERSHIP_LEAVE_SUCCESS: function() {
                    r = null
                },
                HYPESQUAD_ONLINE_MEMBERSHIP_JOIN_SUCCESS: function(e) {
                    r = e.houseID
                }
            })
        },
        216391: function(e, t, n) {
            "use strict";
            let a;
            n.r(t), n.d(t, {
                default: function() {
                    return N
                }
            }), n("70102");
            var s = n("917351"),
                l = n.n(s),
                i = n("446674"),
                r = n("913144"),
                o = n("997722"),
                u = n("422791"),
                d = n("271938"),
                c = n("260320"),
                E = n("42887"),
                f = n("49111");
            let _ = {};

            function C() {
                l.forEach(_, (e, t) => {
                    e.destroy(), delete _[t]
                })
            }

            function h(e, t, n) {
                let a = _[e];
                return null != a ? t(a) : n
            }

            function I(e) {
                let {
                    lobbyId: t
                } = e, n = _[t];
                if (null == n) return !1;
                n.destroy(), delete _[t]
            }

            function T() {
                return !0
            }
            class S extends i.default.Store {
                forEach(e) {
                    l.each(_, e)
                }
                getState(e) {
                    return h(e, e => e.state, f.RTCConnectionStates.DISCONNECTED)
                }
                isConnected(e) {
                    return this.getState(e) === f.RTCConnectionStates.RTC_CONNECTED
                }
                isDisconnected(e) {
                    return this.getState(e) === f.RTCConnectionStates.DISCONNECTED
                }
                getHostname(e) {
                    return h(e, e => e.hostname, null)
                }
                getQuality(e) {
                    return h(e, e => e.quality, f.RTCConnectionQuality.UNKNOWN)
                }
                getPings(e) {
                    return h(e, e => e.getPings(), [])
                }
                getAveragePing(e) {
                    return h(e, e => e.getAveragePing(), 0)
                }
                getLastPing(e) {
                    return h(e, e => e.getLastPing(), 0)
                }
                getOutboundLossRate(e) {
                    return h(e, e => e.getOutboundLossRate(), 0)
                }
                getMediaSessionId(e) {
                    return h(e, e => e.getMediaSessionId(), null)
                }
                getRTCConnectionId(e) {
                    return h(e, e => e.getRTCConnectionId(), null)
                }
                getDuration(e) {
                    return h(e, e => e.getDuration(), 0)
                }
            }
            S.displayName = "RTCConnectionStore";
            var N = new S(r.default, E.default.isSupported() ? {
                CONNECTION_OPEN: function(e) {
                    a = e.sessionId, C()
                },
                CONNECTION_CLOSED: function() {
                    a = null, C()
                },
                RTC_CONNECTION_STATE: T,
                RTC_CONNECTION_PING: T,
                RTC_CONNECTION_LOSS_RATE: T,
                RTC_CONNECTION_UPDATE_ID: function(e) {
                    return l.some(_, t => t === e.connection)
                },
                LOBBY_VOICE_STATE_UPDATE: function(e) {
                    if (d.default.getId() !== e.userId || e.sessionId !== a) return !1;
                    let t = _[e.lobbyId];
                    null != t && null == e.channelId ? (t.destroy(), delete _[e.lobbyId]) : null != t ? t.channelId = e.channelId : null != e.channelId && (t = function(e, t) {
                        if (null == a) throw Error("Creating RTCConnection without session.");
                        let n = c.default.getLobby(e);
                        if (null == n) throw Error("Creating RTCConnection without lobby.");
                        let s = n.application_id,
                            l = new o.default({
                                userId: d.default.getId(),
                                sessionId: a,
                                guildId: e,
                                channelId: t,
                                context: s
                            });
                        return l.on(u.RTCConnectionEvent.State, (t, n, a) => {
                            r.default.dispatch({
                                type: "RTC_CONNECTION_STATE",
                                state: t,
                                ...n,
                                ...a,
                                lobbyId: e
                            })
                        }), l.on(u.RTCConnectionEvent.Ping, (t, n) => {
                            r.default.dispatch({
                                type: "RTC_CONNECTION_PING",
                                pings: t,
                                quality: n,
                                lobbyId: e
                            })
                        }), l.on(u.RTCConnectionEvent.OutboundLossRate, t => {
                            r.default.dispatch({
                                type: "RTC_CONNECTION_LOSS_RATE",
                                lossRate: t,
                                lobbyId: e
                            })
                        }), l
                    }(e.lobbyId, e.channelId), _[e.lobbyId] = t)
                },
                LOBBY_VOICE_SERVER_UPDATE: function(e) {
                    let t = _[e.lobbyId];
                    if (null == t) return !1;
                    t.connect(e.endpoint, e.token)
                },
                LOBBY_DELETE: I,
                LOBBY_DISCONNECT: I
            } : {})
        },
        367530: function(e, t, n) {
            "use strict";
            n.r(t);
            var a = n("446674"),
                s = n("913144"),
                l = n("193990"),
                i = n("299285");
            class r extends a.default.Store {}
            r.displayName = "UserAchievementStore";
            new r(s.default, {
                USER_ACHIEVEMENT_UPDATE: function(e) {
                    let {
                        userAchievement: t
                    } = e, {
                        application_id: n,
                        achievement: a,
                        percent_complete: s
                    } = t;
                    if (100 === s && null != a) {
                        let e = i.default.getApplication(n),
                            t = null != e ? e.getIconURL(64) : null;
                        l.default.showNotification(t, a.name, a.description, {
                            notif_type: "USER_ACHIEVEMENT_UPDATE"
                        }, {
                            omitViewTracking: !0
                        })
                    }
                }
            })
        },
        779671: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("305961"),
                i = n("49111");
            class r extends a.default.Store {
                initialize() {
                    this.waitFor(l.default), this.syncWith([l.default], i.NOOP)
                }
                channelNoticePredicate(e, t) {
                    return !e.hasFeature(i.GuildFeatures.BANNER) && Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY
                }
            }
            r.displayName = "GuildBoostingNoticeStore";
            var o = new r(s.default)
        },
        833781: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("427459"),
                i = n("49111");
            let r = {};
            r = {
                lastDismissedGracePeriods: {},
                isVisible: {}
            };
            class o extends a.default.PersistedStore {
                initialize(e) {
                    null != e && (r = e)
                }
                getLastDismissedGracePeriodForGuild(e) {
                    return null != r.lastDismissedGracePeriods[e] ? r.lastDismissedGracePeriods[e] : null
                }
                isVisible(e) {
                    return null != e && null != r.isVisible[e] && r.isVisible[e]
                }
                getState() {
                    return r
                }
            }
            o.displayName = "GuildBoostingGracePeriodNoticeStore", o.persistKey = "PremiumGuildGracePeriodNoticeStore", o.migrations = [e => ({
                ...e,
                lastDismissedGracePeriods: null != e ? {
                    ...e.lastDismissedGracePeriods
                } : {},
                isVisible: {}
            })];
            var u = new o(s.default, {
                GUILD_APPLIED_BOOSTS_FETCH_SUCCESS: function(e) {
                    let {
                        guildId: t,
                        appliedBoosts: n
                    } = e, a = null != r.lastDismissedGracePeriods[t] ? r.lastDismissedGracePeriods[t] : null, s = null != a && Date.now() - a <= i.GRACE_PERIOD_CHANNEL_NOTICE_SHOW_DELAY, o = null != n && !s && (0, l.isInGracePeriod)(n, t);
                    r = {
                        ...r,
                        isVisible: {
                            ...r.isVisible,
                            [t]: o
                        }
                    }
                },
                BOOSTED_GUILD_GRACE_PERIOD_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    r = {
                        ...r,
                        lastDismissedGracePeriods: {
                            ...r.lastDismissedGracePeriods,
                            [t]: Date.now()
                        },
                        isVisible: {
                            ...r.isVisible,
                            [t]: !1
                        }
                    }
                }
            })
        },
        8452: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("957255"),
                i = n("49111");
            class r extends a.default.Store {
                initialize() {
                    this.waitFor(l.default), this.syncWith([l.default], i.NOOP)
                }
                channelNoticePredicate(e, t) {
                    return Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY && l.default.can(i.Permissions.MANAGE_GUILD, e)
                }
            }
            r.displayName = "GuildBoostingNoticeStore";
            var o = new r(s.default)
        },
        572182: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return c
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("923959"),
                i = n("697218"),
                r = n("49111");
            let o = null;

            function u() {
                let e = i.default.getCurrentUser();
                if (null == e || e.mfaEnabled === o) return !1;
                o = e.mfaEnabled
            }
            class d extends a.default.Store {
                initialize() {
                    this.waitFor(i.default, l.default), this.syncWith([i.default, l.default], u)
                }
                isVisible(e) {
                    return null != e && e.mfaLevel === r.MFALevels.ELEVATED && !1 === o && l.default.hasElevatedPermissions(e.id)
                }
            }
            d.displayName = "GuildMFAWarningStore";
            var c = new d(s.default, {
                CONNECTION_OPEN: u,
                GUILD_UPDATE: function() {
                    return !0
                }
            })
        },
        433973: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            });
            var a = n("446674"),
                s = n("151426"),
                l = n("913144"),
                i = n("179803"),
                r = n("957255");

            function o() {
                return !0
            }
            class u extends a.default.Store {
                initialize() {
                    this.waitFor(r.default), this.syncWith([r.default], o)
                }
                channelNoticePredicate(e) {
                    return (0, i.shouldShowGuildOnboardingUpsell)(e.id, s.DismissibleContent.GUILD_ONBOARDING_UPSELL_CHANNEL_NOTICE)
                }
            }
            u.displayName = "GuildOnboardingUpsellNoticeStore";
            var d = new u(l.default)
        },
        150057: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            }), n("222007");
            var a = n("446674"),
                s = n("913144"),
                l = n("269596"),
                i = n("305961"),
                r = n("49111");
            let o = !1;

            function u(e) {
                let t = i.default.getGuild(e);
                return !!(null != t && t.hasFeature(r.GuildFeatures.HUB)) && (o = !0, !0)
            }

            function d() {
                return !0
            }
            class c extends a.default.Store {
                initialize() {
                    this.waitFor(i.default, l.default), this.syncWith([l.default], d)
                }
                channelNoticePredicate(e) {
                    return !!e.hasFeature(r.GuildFeatures.LINKED_TO_HUB) && !o && !0
                }
            }
            c.displayName = "HubLinkNoticeStore";
            var E = new c(s.default, {
                CONNECTION_OPEN: function(e) {
                    for (let t of e.guilds)
                        if (u(t.id)) return !0;
                    return !1
                },
                GUILD_CREATE: function(e) {
                    let {
                        guild: t
                    } = e;
                    return u(t.id)
                }
            })
        },
        141162: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("446674"),
                s = n("913144"),
                l = n("957255"),
                i = n("49111");

            function r() {
                return !0
            }
            class o extends a.default.Store {
                initialize() {
                    this.waitFor(l.default), this.syncWith([l.default], r)
                }
                channelNoticePredicate(e, t) {
                    let n = Date.now() - t >= i.CHANNEL_NOTICE_SHOW_DELAY;
                    return n && l.default.can(i.Permissions.ADMINISTRATOR, e)
                }
            }
            o.displayName = "InviteNoticeStore";
            var u = new o(s.default)
        },
        201952: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return E
                }
            }), n("222007");
            var a = n("446674"),
                s = n("95410"),
                l = n("913144"),
                i = n("525065"),
                r = n("305961"),
                o = n("957255"),
                u = n("49111");
            let d = {
                MAX_MEMBER_COUNT: new Set
            };
            class c extends a.default.Store {
                initialize() {
                    var e;
                    this.waitFor(o.default, r.default, i.default), this.syncWith([o.default, r.default, i.default], u.NOOP), s.default.remove(u.ChannelNoticeTypes.MAX_MEMBER_COUNT_100), s.default.remove(u.ChannelNoticeTypes.MAX_MEMBER_COUNT_250), e = new Set(s.default.get(u.ChannelNoticeTypes.MAX_MEMBER_COUNT)), d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT] = void 0 !== e ? e : new Set
                }
                isVisible(e) {
                    var t;
                    if (null == e) return !1;
                    let n = null !== (t = i.default.getMemberCount(e.id)) && void 0 !== t ? t : 0,
                        a = o.default.can(u.Permissions.ADMINISTRATOR, e);
                    return !d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(e.id) && a && e.maxMembers > 0 && e.maxMembers - n <= 1e4
                }
            }
            c.displayName = "MaxMemberCountChannelNoticeStore";
            var E = new c(l.default, {
                MAX_MEMBER_COUNT_NOTICE_DISMISS: function(e) {
                    let t = e.guildId;
                    if (!d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].has(t)) return d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT].add(t), s.default.set(u.ChannelNoticeTypes.MAX_MEMBER_COUNT, d[u.ChannelNoticeTypes.MAX_MEMBER_COUNT]), !0
                }
            })
        },
        545429: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return x
                }
            }), n("424973");
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("736964"),
                o = n("666038"),
                u = n("449004"),
                d = n("373469"),
                c = n("26989"),
                E = n("305961"),
                f = n("824563"),
                _ = n("27618"),
                C = n("697218"),
                h = n("49111");

            function I(e) {
                let t = C.default.getUser(e);
                return {
                    user: t,
                    usernameLower: null != t ? t.username.toLowerCase() : null
                }
            }

            function T(e) {
                return {
                    status: f.default.getStatus(e),
                    isMobile: f.default.isMobileOnline(e),
                    activities: f.default.getActivities(e),
                    applicationStream: d.default.getAnyStreamForUser(e)
                }
            }

            function S(e) {
                let t = [];
                return s(c.default.memberOf(e)).map(E.default.getGuild).sortBy(e => null != e ? e.name.toLowerCase() : null).forEach(e => {
                    null != e && t.push(e)
                }), {
                    mutualGuildsLength: t.length,
                    mutualGuilds: t.slice(0, 5)
                }
            }
            class N extends o.default {
                get comparator() {
                    var e, t, n, a, s;
                    return [this.type, null !== (s = null !== (a = null === (e = this.nickname) || void 0 === e ? void 0 : e.toLowerCase()) && void 0 !== a ? a : null === (n = this.user) || void 0 === n ? void 0 : null === (t = n.globalName) || void 0 === t ? void 0 : t.toLowerCase()) && void 0 !== s ? s : this.usernameLower]
                }
                constructor(e) {
                    super(), this.key = e.key, this.type = e.type, this.status = e.status, this.activities = e.activities, this.applicationStream = e.applicationStream, this.user = e.user, this.isMobile = e.isMobile, this.usernameLower = e.usernameLower, this.mutualGuildsLength = e.mutualGuildsLength, this.mutualGuilds = e.mutualGuilds, this.nickname = e.nickname
                }
            }
            class A {
                reset() {
                    let e = s.map(_.default.getRelationships(), (e, t) => new N({
                            key: t,
                            type: e,
                            nickname: _.default.getNickname(t),
                            ...I(t),
                            ...T(t),
                            ...S(t)
                        })),
                        t = s.map(u.default.getSuggestions(), e => new N({
                            key: e.key,
                            type: 99,
                            nickname: e.name,
                            ...I(e.key),
                            ...T(e.key),
                            ...S(e.key)
                        }));
                    return new A(s.concat(e, t))
                }
                clone() {
                    return new A(this._rows)
                }
                update(e) {
                    let t = !1;
                    for (let n = 0; n < this._rows.length; n++) {
                        let a = this._rows[n],
                            s = a.merge(e(a.key));
                        t = t || s !== a, this._rows[n] = s
                    }
                    return t
                }
                filter(e, t) {
                    let n = s(this._rows).filter(e => {
                        if (null == e.user) return !1;
                        if (null != t && "" !== t) {
                            let n = t.toLowerCase(),
                                a = [e.usernameLower, e.nickname, e.user.globalName].map(e => null == e ? void 0 : e.toLowerCase());
                            return a.some(e => null == e ? void 0 : e.includes(n))
                        }
                        return !0
                    }).filter(t => {
                        switch (e) {
                            case h.FriendsSections.ONLINE:
                                return t.type === h.RelationshipTypes.FRIEND && t.status !== h.StatusTypes.OFFLINE;
                            case h.FriendsSections.PENDING:
                                return t.type === h.RelationshipTypes.PENDING_INCOMING || t.type === h.RelationshipTypes.PENDING_OUTGOING;
                            case h.FriendsSections.SUGGESTIONS:
                                return 99 === t.type;
                            case h.FriendsSections.BLOCKED:
                                return t.type === h.RelationshipTypes.BLOCKED;
                            case h.FriendsSections.ALL:
                            default:
                                return t.type === h.RelationshipTypes.FRIEND
                        }
                    }).sortBy(e => e.comparator).value();
                    return n
                }
                getRelationshipCounts() {
                    let e = {
                        [h.RelationshipTypes.FRIEND]: 0,
                        [h.RelationshipTypes.PENDING_INCOMING]: 0,
                        [h.RelationshipTypes.PENDING_OUTGOING]: 0,
                        99: 0,
                        [h.RelationshipTypes.BLOCKED]: 0
                    };
                    return this._rows.forEach(t => {
                        null != t.user && null != e[t.type] && e[t.type]++
                    }), e
                }
                constructor(e = []) {
                    this._rows = e
                }
            }
            let m = !0,
                p = !1,
                g = h.FriendsSections.ONLINE,
                R = new A,
                O = !0,
                L = !1;

            function v() {
                let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                m && (e || g !== h.FriendsSections.ONLINE && g !== h.FriendsSections.ADD_FRIEND) && !p && (m = !1, p = !0, r.default.fetchRelationships())
            }

            function M() {
                if (m = !0, O ? p = !1 : v(), R = R.reset(), L) return;
                let e = R.getRelationshipCounts();
                g = 0 === e[h.RelationshipTypes.FRIEND] ? 0 !== e[h.RelationshipTypes.PENDING_INCOMING] ? h.FriendsSections.PENDING : h.FriendsSections.ADD_FRIEND : h.FriendsSections.ONLINE
            }

            function P() {
                R = O ? new A : R.reset()
            }

            function D(e) {
                return function() {
                    return !O && !!R.update(e) && (R = R.clone(), !0)
                }
            }
            class y extends l.default.Store {
                initialize() {
                    this.waitFor(_.default, f.default, C.default, E.default, c.default, d.default, u.default), this.syncWith([_.default], P), this.syncWith([u.default], P), this.syncWith([C.default], D(I)), this.syncWith([f.default, d.default], D(T)), M()
                }
                getState() {
                    return {
                        fetching: p,
                        section: g,
                        pendingCount: _.default.getPendingCount(),
                        rows: R
                    }
                }
            }
            y.displayName = "FriendsStore";
            var x = new y(i.default, {
                CONNECTION_OPEN: function() {
                    M()
                },
                FRIENDS_SET_SECTION: function(e) {
                    g = e.section, v()
                },
                CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return O = null != t, P(), !O
                },
                LOAD_RELATIONSHIPS_SUCCESS: function() {
                    p = !1
                },
                LOAD_RELATIONSHIPS_FAILURE: function() {
                    m = !0, p = !0
                },
                DRAWER_SELECT_TAB: function(e) {
                    let {
                        tab: t
                    } = e;
                    return O = t !== h.DrawerTabTypes.FRIENDS, P(), !O
                },
                FRIENDS_SET_INITIAL_SECTION: function(e) {
                    g = e.section, L = !0
                }
            })
        },
        392453: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return ea
                }
            }), n("222007"), n("424973"), n("808653");
            var a = n("917351"),
                s = n.n(a),
                l = n("446674"),
                i = n("913144"),
                r = n("126939"),
                o = n("501260"),
                u = n("152311"),
                d = n("429928"),
                c = n("36539"),
                E = n("502651"),
                f = n("651057"),
                _ = n("299285"),
                C = n("619443"),
                h = n("177589"),
                I = n("67139"),
                T = n("671071"),
                S = n("322631"),
                N = n("947297"),
                A = n("373469"),
                m = n("42203"),
                p = n("350522"),
                g = n("925758"),
                R = n("305961"),
                O = n("957255"),
                L = n("824563"),
                v = n("27618"),
                M = n("843823"),
                P = n("697218"),
                D = n("800762"),
                y = n("449008"),
                x = n("286235"),
                U = n("49111");
            let b = !1,
                G = !1,
                j = [],
                w = [],
                k = {},
                F = {},
                B = new Set,
                H = new Set;

            function V() {
                let e = v.default.getFriendIDs();
                return p.default.hasConsented(U.Consents.PERSONALIZATION) ? new Set([...M.default.getUserAffinitiesUserIds(), ...e]) : new Set(e)
            }

            function Y(e) {
                return L.default.findActivity(e, e => e.type !== U.ActivityTypes.CUSTOM_STATUS)
            }

            function W(e) {
                let t = k[e];
                return null == t && (k = {
                    ...k,
                    [e]: new N.default({
                        name: e
                    })
                }), k[e]
            }

            function K(e) {
                let t = F[e];
                return null == t && (F = {
                    ...F,
                    [e]: new S.default({
                        url: e
                    })
                }), F[e]
            }

            function z(e) {
                !H.has(e) && B.add(e)
            }

            function q(e) {
                if ((0, d.default)(e)) return T.SpotifyApplication;
                let t = null != e.application_id ? _.default.getApplication(e.application_id) : null;
                return null != t ? t : (0, c.default)(e) ? W(e.name) : (0, E.default)(e) && null != e.url ? K(e.url) : (null != e.application_id && z(e.application_id), t)
            }

            function Q(e) {
                let t = D.default.getVoiceStateForUser(e);
                return (null == t ? void 0 : t.channelId) != null && O.default.canWithPartialContext(U.Permissions.VIEW_CHANNEL, {
                    channelId: t.channelId
                }) ? t.channelId : null
            }

            function Z(e) {
                return v.default.isFriend(e.id)
            }

            function X(e, t, n) {
                var a, l, i, d, c;
                let E;
                let f = P.default.getCurrentUser(),
                    C = t.map(e => e.id),
                    p = t.filter(t => e.has(t.id)),
                    v = !1,
                    M = [],
                    U = new Set,
                    b = !1,
                    G = [];
                for (let e of t) {
                    ;
                    let n = A.default.getAnyStreamForUser(e.id),
                        d = Y(e.id);
                    if (null != n && G.push({
                            stream: n,
                            streamUser: e,
                            activity: d
                        }), null == d) continue;
                    let c = (0, h.default)(d);
                    if (null == c) continue;
                    b = c === T.SPOTIFY_APPLICATION_ID;
                    let E = function(e) {
                            let t = _.default.getApplication(e);
                            return null != t ? t : "string" != typeof e ? (x.default.captureMessage("Unknown type for applicationId: ".concat(typeof e, ", value: ").concat(e), {
                                tags: {
                                    source: "ACTIVITIES"
                                }
                            }), null) : e === T.SPOTIFY_APPLICATION_ID ? T.SpotifyApplication : e.startsWith(N.XBOX_APPLICATION_ID_PREFIX) ? W(e.slice(N.XBOX_APPLICATION_ID_PREFIX.length)) : e.startsWith(S.TWITCH_APPLICATION_ID_PREFIX) ? K(e.slice(S.TWITCH_APPLICATION_ID_PREFIX.length)) : (z(e), null)
                        }(c),
                        C = null === (a = d.timestamps) || void 0 === a ? void 0 : a.start;
                    if ((0, u.default)(d)) {
                        let t = (0, r.getIsActivitiesEnabledForCurrentPlatform)(),
                            n = (0, o.default)({
                                userId: e.id,
                                activity: d,
                                application: E,
                                channelId: null === (l = D.default.getVoiceStateForUser(e.id)) || void 0 === l ? void 0 : l.channelId,
                                currentUser: f,
                                isActivitiesEnabledForCurrentPlatform: t,
                                ChannelStore: m.default,
                                VoiceStateStore: D.default,
                                PermissionStore: O.default,
                                GuildStore: R.default
                            }) !== o.EmbeddedActivityJoinability.CAN_JOIN;
                        if (n) continue
                    } else if (null == C) continue;
                    if (!I.shouldShowActivity(d) || null == E || U.has(E.id)) continue;
                    let p = null != d ? q(d) : null;
                    (null == p || p.id !== E.id) && (d = null);
                    let L = [];
                    if (null != d && null != d.party && null != d.party.id) {
                        let e = null !== (i = g.default.getParty(d.party.id)) && void 0 !== i ? i : [];
                        L = Array.from(e).reduce((e, t) => {
                            let n = P.default.getUser(t);
                            return null != n && e.push(n), e
                        }, [])
                    } else L = t.filter(e => {
                        let t = Y(e.id),
                            n = null != t ? q(t) : null;
                        return null != n && n.id === E.id
                    });
                    (L = s.orderBy(L, [Z], ["desc"])).length !== t.length && (v = !0), U.add(E.id), M.push({
                        game: E,
                        activity: d,
                        activityUser: e,
                        startedPlayingTime: C,
                        playingMembers: L
                    })
                }
                let j = 1 === p.length,
                    w = [],
                    k = new Set,
                    F = new Set;
                for (let e of t) {
                    let n = Q(e.id),
                        a = m.default.getChannel(n),
                        l = null != a ? a.getGuildId() : null,
                        i = R.default.getGuild(l);
                    if (F.has(l) && k.has(n) || null == a || null == i || a.id === i.afkChannelId) null == a && (E = null, j = !0);
                    else {
                        let e = s(D.default.getVoiceStatesForChannel(a.id)).map(e => {
                            let {
                                userId: t
                            } = e;
                            return P.default.getUser(t)
                        }).filter(y.isNotNullish).orderBy([Z], ["desc"]).value();
                        e.filter(e => !C.includes(e.id)).forEach(e => t.push(e)), j ? !F.has(l) && (E = null) : (E = i, j = !0), F.add(l), k.add(n), w.push({
                            channel: a,
                            guild: i,
                            members: e
                        })
                    }
                }
                return {
                    id: n,
                    voiceChannels: w,
                    isSpotifyActivity: b,
                    priorityMembers: p.map(e => ({
                        user: e,
                        status: L.default.getStatus(e.id)
                    })),
                    partiedMembers: t,
                    showPlayingMembers: v,
                    guildContext: E,
                    currentActivities: (d = M, c = e => {
                        var t;
                        return null !== (t = e.startedPlayingTime) && void 0 !== t ? t : 0
                    }, s(d).orderBy([c, e => e.game.name], ["desc", "asc"])).value(),
                    applicationStreams: G
                }
            }

            function J() {
                return b && C.default.isConnected()
            }
            let $ = s.throttle(() => {
                ! function() {
                    if (!J()) return;
                    B.clear();
                    let e = Array.from(V()).reduce((e, t) => {
                            let n = P.default.getUser(t);
                            return null != n && !n.bot && e.push(n), e
                        }, []),
                        t = s(e).groupBy(e => {
                            var t;
                            let n = Q(e.id),
                                a = Y(e.id);
                            return null != n ? "".concat("channel-", "-").concat(n) : (null == a ? void 0 : null === (t = a.party) || void 0 === t ? void 0 : t.id) != null ? "".concat("party-", "-").concat(a.party.id) : "".concat("user-", "-").concat(e.id)
                        }),
                        n = function(e) {
                            let t = V(),
                                n = X.bind(null, t);
                            return s(e).mapValues(n)
                        }(t),
                        a = n.values().orderBy([e => e.partiedMembers.length > 1, e => e.applicationStreams.length > 0, e => e.voiceChannels.length > 0, e => e.currentActivities.length > 0, e => e.isSpotifyActivity, e => e.priorityMembers.map(e => e.user.username.toLowerCase()).join(" ")], ["desc", "desc", "desc", "desc", "asc", "asc"]).value();
                    w = (j = a.filter(e => e.voiceChannels.length >= 1 || e.currentActivities.length > 0 || e.applicationStreams.length > 0)).map(e => ({
                        type: U.ActivityCardTypes.USER,
                        party: e
                    })), ! function() {
                        if (B.size > 0) {
                            let e = Array.from(B);
                            f.default.fetchApplications(e), e.forEach(e => H.add(e)), B.clear()
                        }
                    }(), G = !0
                }(), en.emitChange()
            }, 1e3);

            function ee() {
                return !!J() && ($(), !1)
            }
            class et extends l.default.Store {
                initialize() {
                    this.syncWith([P.default, _.default, L.default, g.default, D.default, A.default, v.default, p.default, M.default], ee), this.waitFor(C.default, R.default, _.default, P.default, M.default)
                }
                get currentActivityParties() {
                    return j
                }
                get nowPlayingCards() {
                    return w
                }
                get isMounted() {
                    return b
                }
                get loaded() {
                    return G
                }
            }
            et.displayName = "NowPlayingViewStore";
            let en = new et(i.default, {
                LOGOUT: function() {
                    b = !1, j = [], w = [], B.clear()
                },
                NOW_PLAYING_MOUNTED: function() {
                    b = !0, $()
                },
                NOW_PLAYING_UNMOUNTED: function() {
                    b = !1
                }
            });
            var ea = en
        },
        428773: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return _
                }
            }), n("222007");
            var a = n("37983");
            n("884691");
            var s = n("917351"),
                l = n.n(s),
                i = n("77078"),
                r = n("533222"),
                o = n("113605"),
                u = n("42887"),
                d = n("353927");
            let c = new Set(["DisplayPort"]),
                E = !1;

            function f() {
                let e;
                if (E) return;
                let t = u.default.getInputDeviceId(),
                    s = u.default.getOutputDeviceId();
                if (o.default.getState().neverShowModal || l.isEmpty(o.default.lastDeviceConnected)) return;
                let f = (0, o.extractDisplayName)(u.default.getInputDevices()[t]),
                    _ = (0, o.extractDisplayName)(u.default.getOutputDevices()[s]),
                    C = l.some(o.default.lastDeviceConnected, e => c.has(e.displayName) || e.displayName === f || e.displayName === _);
                if (C) return;
                let h = l.some(o.default.lastDeviceConnected, e => r.default.isCertified(o.default.inputDevices[e.displayName]) || r.default.isCertified(o.default.outputDevices[e.displayName])),
                    I = t === d.DEFAULT_DEVICE_ID && o.default.lastInputSystemDevice.justChanged || s === d.DEFAULT_DEVICE_ID && o.default.lastOutputSystemDevice.justChanged;
                if (I && !h) return;
                let T = l.first(Object.keys(o.default.lastDeviceConnected)),
                    S = null != T && "" !== T ? o.default.lastDeviceConnected[T] : null;
                null != S && (o.default.initialized && null != T && (r.default.isCertified(o.default.inputDevices[T]) ? e = r.default.getCertifiedDevice(o.default.inputDevices[T]) : r.default.isCertified(o.default.outputDevices[T]) && (e = r.default.getCertifiedDevice(o.default.outputDevices[T]))), E = !0, (0, i.openModalLazy)(async () => {
                    let {
                        default: t
                    } = await n.el("134064").then(n.bind(n, "134064"));
                    return n => {
                        let {
                            transitionState: s,
                            onClose: l
                        } = n;
                        return (0, a.jsx)(t, {
                            device: S,
                            certifiedDeviceMetadata: e,
                            transitionState: s,
                            onClose: () => (E = !1, l())
                        })
                    }
                }))
            }
            var _ = {
                init() {
                    o.default.addChangeListener(f)
                }
            }
        },
        31957: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return p
                }
            }), n("222007");
            var a = n("446674"),
                s = n("95410"),
                l = n("913144"),
                i = n("271938"),
                r = n("42203"),
                o = n("101125"),
                u = n("49111");
            let d = "IncomingCallStore",
                c = {
                    width: 232,
                    height: 315
                },
                E = new Set,
                f = [],
                _ = new Map,
                C = new Set,
                h = 0,
                I = 0,
                T = !1;

            function S(e) {
                if (null == e || null == _.get(e)) return !1;
                _.delete(e), (C = new Set(C)).delete(e)
            }

            function N(e) {
                let {
                    channelId: t,
                    ringing: n
                } = e, a = n.includes(i.default.getId());
                if (!C.has(t) && a) {
                    let e = r.default.getChannel(t);
                    if (null == e) return !1;
                    let n = 10 * C.size;
                    _.set(t, {
                        channel: e,
                        x: h + n,
                        y: I + n
                    }), (C = new Set(C)).add(t)
                } else {
                    if (!C.has(t) || a) return !1;
                    S(t)
                }
            }! function() {
                let e = s.default.get(d);
                if (null != e) h = +e.x, I = +e.y;
                else {
                    let e = n("471671").default.windowSize();
                    h = e.width / 2 - c.width / 2, I = e.height / 2 - c.height / 2
                }
            }();

            function A() {
                T = o.default.getStatus() === u.StatusTypes.DND
            }
            class m extends a.default.Store {
                initialize() {
                    this.waitFor(r.default, o.default), this.syncWith([o.default], A)
                }
                getIncomingCalls() {
                    return T ? f : Array.from(_.values())
                }
                getIncomingCallChannelIds() {
                    return T ? E : C
                }
                getFirstIncomingCallId() {
                    return T ? null : C.values().next().value
                }
                hasIncomingCalls() {
                    return !T && C.size > 0
                }
            }
            m.displayName = "IncomingCallStore";
            var p = new m(l.default, {
                CALL_CREATE: N,
                CALL_UPDATE: N,
                CALL_DELETE: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return S(t)
                },
                VOICE_CHANNEL_SELECT: function(e) {
                    let {
                        channelId: t
                    } = e;
                    return S(t)
                },
                INCOMING_CALL_MOVE: function(e) {
                    let {
                        x: t,
                        y: n
                    } = e;
                    return h = t, I = n, s.default.set(d, {
                        x: h,
                        y: I
                    }), !1
                },
                CHANNEL_DELETE: function(e) {
                    let {
                        channel: t
                    } = e;
                    return S(t.id)
                }
            })
        },
        43093: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("913144");
            let i = !1,
                r = null;
            var o = {
                init() {
                    l.default.subscribe("CONNECTION_OPEN", e => {
                        let {
                            pendingPayments: t
                        } = e;
                        if (null != t && t.length > 0) {
                            var l;
                            if (r === t[0] || null == (r = t[0])) return;
                            l = r, i || (i = !0, (0, s.openModalLazy)(async () => {
                                let {
                                    default: e
                                } = await n.el("905692").then(n.bind(n, "905692"));
                                return t => {
                                    let {
                                        transitionState: n,
                                        onClose: s
                                    } = t;
                                    return (0, a.jsx)(e, {
                                        pendingPayment: l,
                                        transitionState: n,
                                        onClose: () => (i = !1, s())
                                    })
                                }
                            }))
                        }
                    })
                }
            }
        },
        149851: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("77078"),
                l = n("782340"),
                i = n("961423");
            let r = Math.ceil(2 * Math.PI * 20);
            var o = e => {
                let {
                    total: t,
                    used: n
                } = e, o = Math.max(0, Math.min(1, n / t)), u = "".concat(Math.floor(100 * o), "%");
                return (0, a.jsx)(s.Tooltip, {
                    text: l.default.Messages.APPLICATION_INSTALLATION_SPACE_USED.format({
                        used: u
                    }),
                    children: e => {
                        var t;
                        return (0, a.jsxs)("div", {
                            className: i.wrapper,
                            role: "progressbar",
                            "aria-label": l.default.Messages.APPLICATION_INSTALLATION_SPACE_USED.format({
                                used: u
                            }),
                            ...e,
                            children: [(0, a.jsxs)("svg", {
                                viewBox: "25 25 50 50",
                                className: i.svg,
                                "aria-hidden": !0,
                                children: [(0, a.jsx)("circle", {
                                    className: i.background,
                                    cx: "50",
                                    cy: "50",
                                    r: 20
                                }), (0, a.jsx)("circle", {
                                    className: i.foreground,
                                    cx: "50",
                                    cy: "50",
                                    r: 20,
                                    stroke: (t = o, "rgb(".concat(Math.round(-85 * t + 199), ", ").concat(Math.round(-71 * t + 208), ", ").concat(Math.round(-22 * t + 240), ")")),
                                    strokeDasharray: function(e) {
                                        let t = Math.floor(r * e);
                                        return "".concat(t, ", ").concat(r)
                                    }(o)
                                })]
                            }), (0, a.jsx)("aside", {
                                className: i.usageInfo,
                                "aria-hidden": !0,
                                children: u
                            })]
                        })
                    }
                })
            }
        },
        67211: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("748820"),
                o = n("862337"),
                u = n("77078"),
                d = n("49111"),
                c = n("782340"),
                E = n("361473"),
                f = n("173791"),
                _ = n("926622");
            class C extends s.PureComponent {
                async componentDidMount() {
                    let [e, {
                        default: t
                    }] = await Promise.all([n.el("280201").then(n.t.bind(n, "280201", 19)), n.el("230265").then(n.t.bind(n, "230265", 23))]);
                    this._animItem = t.loadAnimation({
                        container: this._lottieRef,
                        renderer: "svg",
                        loop: !0,
                        autoplay: !0,
                        animationData: e
                    })
                }
                componentWillUnmount() {
                    this._timeout.stop(), null != this._animItem && (this._animItem.destroy(), this._animItem = void 0)
                }
                renderInputs() {
                    let {
                        emailError: e,
                        passwordError: t,
                        submitting: n
                    } = this.props, {
                        email: s,
                        password: l
                    } = this.state;
                    return (0, a.jsxs)("div", {
                        className: E.container,
                        children: [(0, a.jsx)(u.FormItem, {
                            title: c.default.Messages.FORM_LABEL_EMAIL,
                            className: _.marginBottom20,
                            children: (0, a.jsx)(u.TextInput, {
                                value: s,
                                error: e,
                                onChange: this.handleEmailChange,
                                onKeyPress: this.handleKeyPress,
                                autoFocus: !0
                            })
                        }), (0, a.jsx)(u.FormItem, {
                            title: c.default.Messages.FORM_LABEL_PASSWORD,
                            className: _.marginBottom40,
                            children: (0, a.jsx)(u.TextInput, {
                                type: "password",
                                value: l,
                                error: t,
                                onChange: this.handlePasswordChange,
                                onKeyPress: this.handleKeyPress
                            })
                        }), (0, a.jsx)(u.Button, {
                            fullWidth: !0,
                            size: u.Button.Sizes.LARGE,
                            onClick: this.handleVerify,
                            submitting: n,
                            disabled: 0 === s.length || 0 === l.length,
                            children: c.default.Messages.VERIFY_ACCOUNT
                        })]
                    })
                }
                renderActions() {
                    let {
                        canChange: e
                    } = this.props;
                    return (0, a.jsxs)("div", {
                        className: E.container,
                        children: [(0, a.jsx)(u.Button, {
                            className: _.marginTop20,
                            fullWidth: !0,
                            size: u.Button.Sizes.LARGE,
                            look: u.ButtonLooks.INVERTED,
                            color: u.ButtonColors.PRIMARY,
                            onClick: this.handleResendEmail,
                            children: c.default.Messages.RESEND_EMAIL
                        }), e && (0, a.jsx)(u.Button, {
                            className: _.marginTop20,
                            fullWidth: !0,
                            size: u.Button.Sizes.MEDIUM,
                            look: u.ButtonLooks.LINK,
                            color: u.ButtonColors.PRIMARY,
                            onClick: this.handleChangeEmailClick,
                            children: c.default.Messages.CHANGE_EMAIL
                        })]
                    })
                }
                render() {
                    let e;
                    let {
                        resent: t
                    } = this.state, {
                        email: n,
                        canResend: s,
                        transitionState: l
                    } = this.props;
                    return e = t && null != n ? c.default.Messages.VERIFY_EMAIL_BODY_RESENT.format({
                        email: n
                    }) : s ? c.default.Messages.VERIFY_EMAIL_BODY : c.default.Messages.ENTER_EMAIL_BODY, (0, a.jsxs)(u.ModalRoot, {
                        transitionState: l,
                        "aria-labelledby": this._headerId,
                        className: i(E.emailVerificationModal, f.vertical, f.alignCenter, f.justifyCenter, _.marginTop60),
                        children: [(0, a.jsx)("div", {
                            className: E.animationContainer,
                            ref: this.setLottieRef
                        }), (0, a.jsx)("div", {
                            id: this._headerId,
                            className: i(E.title, _.marginBottom8),
                            children: c.default.Messages.VERIFY_BY_EMAIL
                        }), (0, a.jsx)("div", {
                            className: i(E.body, _.marginBottom20),
                            children: e
                        }), s ? this.renderActions() : this.renderInputs()]
                    })
                }
                constructor(...e) {
                    super(...e), this._animItem = null, this._timeout = new o.Timeout, this._headerId = (0, r.v4)(), this.state = {
                        resent: !1,
                        shouldClose: !1,
                        email: "",
                        password: ""
                    }, this.setLottieRef = e => {
                        this._lottieRef = e
                    }, this.handleVerify = () => {
                        let {
                            onVerify: e
                        } = this.props;
                        e(this.state.email, this.state.password)
                    }, this.handleResendEmail = () => {
                        let {
                            onResend: e,
                            onClose: t
                        } = this.props;
                        e(), !this.state.resent && (this.setState({
                            resent: !0,
                            shouldClose: !0
                        }), this._timeout.start(3e3, () => {
                            this.state.shouldClose && t()
                        }))
                    }, this.handleChangeEmailClick = () => {
                        let {
                            onChangeEmailClick: e
                        } = this.props;
                        this.setState({
                            resent: !1,
                            shouldClose: !1
                        }), e()
                    }, this.handleEmailChange = e => {
                        this.setState({
                            email: e
                        })
                    }, this.handlePasswordChange = e => {
                        this.setState({
                            password: e
                        })
                    }, this.handleKeyPress = e => {
                        let {
                            email: t,
                            password: n
                        } = this.state;
                        13 === e.which && t.length > 0 && n.length > 0 && (e.preventDefault(), this.handleVerify())
                    }
                }
            }
            C.defaultProps = {
                canResend: !1,
                canChange: !0,
                onChangeEmailClick: d.NOOP,
                onVerify: (e, t) => {},
                onResend: d.NOOP,
                onClose: d.NOOP
            };
            var h = C
        },
        230962: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                NotchBackground: function() {
                    return f
                },
                default: function() {
                    return C
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("669491"),
                o = n("769846"),
                u = n("159885"),
                d = n("874293"),
                c = n("976143");
            let E = (0, u.cssValueToNumber)(o.default.GRADIENT_PROGRESS_NOTCH_WIDTH),
                f = Object.freeze({
                    BLACK: c.black,
                    GRAY: c.gray
                });
            class _ extends s.Component {
                componentDidMount() {
                    this.computeBars(), window.addEventListener("resize", this.computeBars)
                }
                componentWillUnmount() {
                    window.removeEventListener("resize", this.computeBars)
                }
                roundToNearestStep(e) {
                    return Math.round(e / E) * E
                }
                getProgressStyles() {
                    let {
                        progress: e
                    } = this.props, {
                        barWidth: t
                    } = this.state, n = this.roundToNearestStep(t * (100 - Math.max(0, Math.min(100, e))) / 100);
                    return {
                        transform: "translateX(".concat(Math.abs(n - t), "px)")
                    }
                }
                getGradientStyles() {
                    let {
                        gradientEnd: e,
                        gradientStart: t,
                        progress: n
                    } = this.props, {
                        barWidth: a
                    } = this.state;
                    return {
                        width: "".concat(a, "px"),
                        background: n <= 0 ? "none" : "linear-gradient(to right, ".concat(t, ", ").concat(e, ")")
                    }
                }
                render() {
                    let {
                        className: e,
                        notchBackground: t
                    } = this.props, {
                        barWidth: n
                    } = this.state;
                    return (0, a.jsx)("div", {
                        className: c.wrapper,
                        ref: this.sizerRef,
                        children: (0, a.jsxs)("div", {
                            className: i(c.container, e),
                            style: this.getGradientStyles(),
                            children: [(0, a.jsx)("div", {
                                className: c.progress,
                                style: this.getProgressStyles()
                            }), 0 !== n && (0, a.jsx)(d.default, {
                                width: n,
                                className: i(c.notches, t)
                            })]
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        barWidth: 0
                    }, this.sizerRef = s.createRef(), this.computeBars = () => {
                        let {
                            current: e
                        } = this.sizerRef;
                        this.setState({
                            barWidth: null != e ? this.roundToNearestStep(e.clientWidth) : 0
                        })
                    }
                }
            }
            _.defaultProps = {
                gradientStart: r.default.unsafe_rawColors.YELLOW_260.css,
                gradientEnd: r.default.unsafe_rawColors.GREEN_360.css
            };
            var C = _
        },
        465126: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return L
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("290381"),
                o = n("77078"),
                u = n("272030"),
                d = n("378662"),
                c = n("574921"),
                E = n("311092"),
                f = n("613088"),
                _ = n("407063"),
                C = n("845579"),
                h = n("315102"),
                I = n("794818"),
                T = n("580357"),
                S = n("587974"),
                N = n("49111"),
                A = n("782340"),
                m = n("362962"),
                p = n("68422"),
                g = n("578817"),
                R = n("855237");
            class O extends s.PureComponent {
                getDefaultSplashURL(e, t) {
                    if (t) return R;
                    switch (e) {
                        case N.ThemeTypes.DARK:
                            return p;
                        case N.ThemeTypes.LIGHT:
                            return g
                    }
                }
                render() {
                    var e;
                    let {
                        guild: t,
                        className: n,
                        theme: s,
                        onTagClick: l
                    } = this.props, {
                        loaded: u,
                        hasBeenSeen: p,
                        isVisible: g,
                        submitting: R
                    } = this.state, {
                        name: O,
                        description: L,
                        presenceCount: v,
                        memberCount: M,
                        keywords: P
                    } = t, D = null === (e = t.features) || void 0 === e ? void 0 : e.has(N.GuildFeatures.HUB), y = h.default.getGuildDiscoverySplashURL({
                        id: t.id,
                        splash: t.discoverySplash,
                        size: 300 * (0, _.getDevicePixelRatio)()
                    }), x = null != y ? y : this.getDefaultSplashURL(s, D), U = h.default.getGuildIconURL({
                        id: t.id,
                        icon: t.icon,
                        size: 40
                    });
                    c.DiscoveryTagsExperiment.trackExposure({
                        location: "de1ef6_1"
                    });
                    let {
                        shouldDisplayTags: b
                    } = c.DiscoveryTagsExperiment.getCurrentConfig({
                        location: "de1ef6_2"
                    }, {
                        autoTrackExposure: !1
                    }), {
                        canSeeInAppReportingButtons: G
                    } = d.DiscoveryInAppReportingExperiment.getCurrentConfig({
                        location: "de1ef6_3"
                    }, {
                        autoTrackExposure: !1
                    });
                    d.DiscoveryInAppReportingExperiment.trackExposure({
                        location: "de1ef6_4"
                    });
                    let j = C.DeveloperMode.getSetting();
                    return (0, a.jsx)(r.VisibilitySensor, {
                        active: !g,
                        onChange: this.setIsVisible,
                        threshold: .1,
                        children: g ? (0, a.jsx)(r.VisibilitySensor, {
                            onChange: this.handleVisibilityChange,
                            active: !p,
                            threshold: .55,
                            children: (0, a.jsxs)("div", {
                                className: i(n, {
                                    [m.loaded]: u,
                                    [m.loading]: !u
                                }),
                                children: [R ? (0, a.jsx)(o.Spinner, {
                                    type: o.Spinner.Type.PULSING_ELLIPSIS,
                                    className: m.spinner
                                }) : null, (0, a.jsxs)(o.Clickable, {
                                    onClick: this.handleClickView,
                                    className: i(m.card, {
                                        [m.submitting]: R,
                                        [m.cardWithTags]: b
                                    }),
                                    onContextMenu: this.handleContextMenu,
                                    children: [(0, a.jsxs)("div", {
                                        className: m.cardHeader,
                                        children: [(0, a.jsx)("div", {
                                            className: m.splash,
                                            children: (0, a.jsx)("img", {
                                                src: x,
                                                alt: "",
                                                className: i(m.splashImage, {
                                                    [m.splashImageHeight]: !D
                                                }),
                                                onLoad: () => this.setState({
                                                    loaded: !0
                                                })
                                            })
                                        }), j || G ? (0, a.jsx)("div", {
                                            className: m.actionButtons,
                                            children: (0, a.jsx)(f.default, {
                                                guild: t
                                            })
                                        }) : null, (0, a.jsx)("div", {
                                            className: m.guildIcon,
                                            children: (0, a.jsx)(S.default, {
                                                mask: S.default.Masks.SQUIRCLE,
                                                width: 48,
                                                height: 48,
                                                children: (0, a.jsx)("div", {
                                                    className: m.iconMask,
                                                    children: (0, a.jsx)(S.default, {
                                                        mask: S.default.Masks.SQUIRCLE,
                                                        width: 40,
                                                        height: 40,
                                                        children: (0, a.jsx)("img", {
                                                            src: U,
                                                            alt: "",
                                                            className: m.avatar
                                                        })
                                                    })
                                                })
                                            })
                                        })]
                                    }), (0, a.jsxs)("div", {
                                        className: m.guildInfo,
                                        children: [(0, a.jsxs)("div", {
                                            className: m.title,
                                            children: [(0, a.jsx)(T.default, {
                                                className: m.guildBadge,
                                                guild: t,
                                                tooltipColor: o.Tooltip.Colors.PRIMARY
                                            }), (0, a.jsx)(o.Heading, {
                                                variant: "heading-md/semibold",
                                                className: m.guildName,
                                                children: O
                                            })]
                                        }), (0, a.jsx)(o.Text, {
                                            className: m.description,
                                            variant: "text-sm/normal",
                                            color: "header-secondary",
                                            children: L
                                        }), b && null != P && null != l && (0, a.jsx)(E.DiscoveryTags, {
                                            tags: P,
                                            onTagClick: e => l(e, t.id),
                                            guildId: t.id,
                                            section: I.AnalyticsContexts.POPULAR
                                        }), (0, a.jsxs)("div", {
                                            className: m.memberInfo,
                                            children: [null != v && (0, a.jsxs)("div", {
                                                className: m.memberCount,
                                                children: [(0, a.jsx)("div", {
                                                    className: m.dotOnline
                                                }), (0, a.jsx)(o.Text, {
                                                    variant: "text-xs/normal",
                                                    color: "header-secondary",
                                                    children: A.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format({
                                                        membersOnline: v
                                                    })
                                                })]
                                            }), null != M && (0, a.jsxs)("div", {
                                                className: m.memberCount,
                                                children: [(0, a.jsx)("div", {
                                                    className: m.dotOffline
                                                }), (0, a.jsx)(o.Text, {
                                                    variant: "text-xs/normal",
                                                    color: "header-secondary",
                                                    children: A.default.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format({
                                                        count: M
                                                    })
                                                })]
                                            })]
                                        })]
                                    })]
                                })]
                            })
                        }) : (0, a.jsx)("div", {
                            className: i(m.card, {
                                [m.cardWithTags]: b
                            })
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.state = {
                        loaded: !1,
                        hasBeenSeen: !1,
                        isVisible: !1,
                        submitting: !1
                    }, this.handleClickView = async e => {
                        let {
                            className: t
                        } = e.target;
                        if (t.includes("Menu")) return;
                        let {
                            onView: n,
                            guild: a
                        } = this.props;
                        e.stopPropagation(), this.setState({
                            submitting: !0
                        });
                        try {
                            null != n && await n(a.id)
                        } finally {
                            this.setState({
                                submitting: !1
                            })
                        }
                    }, this.handleVisibilityChange = e => {
                        let {
                            onGuildCardSeen: t,
                            guild: n
                        } = this.props;
                        null != n && !this.state.hasBeenSeen && e && (this.setState({
                            hasBeenSeen: e
                        }), null != t && t(n.id))
                    }, this.handleContextMenu = e => {
                        (0, u.openContextMenuLazy)(e, async () => {
                            let {
                                default: e
                            } = await n.el("392533").then(n.bind(n, "392533"));
                            return t => (0, a.jsx)(e, {
                                ...t,
                                guild: this.props.guild
                            })
                        })
                    }, this.setIsVisible = e => {
                        this.setState({
                            isVisible: e
                        })
                    }
                }
            }
            O.Placeholder = e => (0, a.jsx)("div", {
                className: i(e.className, m.cardPlaceholder)
            });
            var L = O
        },
        398288: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("358689");
            class o extends s.PureComponent {
                render() {
                    let {
                        tag: e,
                        children: t,
                        hoverText: n,
                        className: s,
                        forceHover: l,
                        ...o
                    } = this.props;
                    return (0, a.jsxs)("div", {
                        ...o,
                        className: i(s, r.hoverRoll, {
                            [r.disabled]: null == n,
                            [r.forceHover]: l
                        }),
                        children: [(0, a.jsx)(e, {
                            className: r.hovered,
                            children: n
                        }), (0, a.jsx)(e, {
                            className: r.default,
                            children: t
                        })]
                    })
                }
            }
            o.defaultProps = {
                tag: "div",
                forceHover: !1
            };
            var u = o
        },
        109507: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("67164"),
                l = n("819855"),
                i = n("49111");
            let r = e => {
                let {
                    theme: t,
                    ...n
                } = e, r = (0, l.isThemeDark)(t) ? "dark" : "light";
                return (0, a.jsx)(s.default, {
                    sitekey: i.RECAPTCHA_SITE_KEY,
                    ...n,
                    theme: r
                })
            };
            r.Themes = {
                LIGHT: "light",
                DARK: "dark"
            }, r.Sizes = {
                COMPACT: "compact",
                NORMAL: "normal",
                INVISIBLE: "invisible"
            };
            var o = r
        },
        163466: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return o
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("77078"),
                r = n("530262");

            function o(e) {
                let {
                    padded: t = !0,
                    inset: n = !1,
                    active: s = !1,
                    className: o,
                    children: u,
                    onClick: d,
                    ...c
                } = e;
                return null != d ? (0, a.jsx)(i.Clickable, {
                    onClick: d,
                    tabIndex: null != d ? 0 : -1,
                    className: l(o, {
                        [r.outer]: !n,
                        [r.inset]: n,
                        [r.padded]: t,
                        [r.active]: s,
                        [r.interactive]: null != d
                    }),
                    ...c,
                    children: u
                }) : (0, a.jsx)("div", {
                    className: l(o, {
                        [r.outer]: !n,
                        [r.inset]: n,
                        [r.padded]: t,
                        [r.active]: s
                    }),
                    ...c,
                    children: u
                })
            }
        },
        148349: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("414456"),
                l = n.n(s),
                i = n("128295"),
                r = n("414868"),
                o = n("682165");

            function u(e) {
                let {
                    width: t = 10,
                    height: n = 10,
                    className: s,
                    starClassName: u,
                    plusClassName: d,
                    paused: c = !1
                } = e;
                return (0, a.jsxs)("div", {
                    className: l(o.sparkleContainer, {
                        [o.paused]: c
                    }, s),
                    children: [(0, a.jsx)(r.default, {
                        width: t,
                        height: n,
                        className: l(o.sparkleStar, u)
                    }), (0, a.jsx)(i.default, {
                        width: t,
                        height: n,
                        className: l(o.sparklePlus, d)
                    })]
                })
            }
        },
        833923: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return d
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("917351"),
                i = n.n(l),
                r = n("284679"),
                o = n("130651");
            class u extends s.PureComponent {
                onDataUpdate(e, t) {
                    let {
                        maxValue: n,
                        data: a,
                        animate: s
                    } = this.props, l = null == e || e.data !== t.data && !i.isEqual(e.data, t.data);
                    if (l && (this.dataChangedAt = performance.now(), this.maxValue = null != n ? n : Math.max(...a)), l || null == e || !e.animate && s || e.color !== this.props.color) {
                        let e = r.hexToRgb(this.props.color);
                        this.fillColor = "rgba(".concat(e.r, ", ").concat(e.g, ", ").concat(e.b, ", 0.5)"), window.cancelAnimationFrame(this.animationFrameRequestId), this.animationFrameRequestId = window.requestAnimationFrame(this.updateAnimation)
                    }
                }
                componentDidMount() {
                    this.animationFrameRequestId = 0, this.onDataUpdate(null, this.props)
                }
                componentDidUpdate(e) {
                    this.onDataUpdate(e, this.props)
                }
                componentWillUnmount() {
                    window.cancelAnimationFrame(this.animationFrameRequestId), this.animationFrameRequestId = 0
                }
                render() {
                    let {
                        className: e,
                        pixelWidth: t,
                        pixelHeight: n
                    } = this.props;
                    return (0, a.jsx)("div", {
                        className: e,
                        children: (0, a.jsx)("canvas", {
                            ref: this.canvas,
                            className: o.canvas,
                            width: t,
                            height: n
                        })
                    })
                }
                constructor(...e) {
                    super(...e), this.canvas = s.createRef(), this.updateAnimation = e => {
                        let t, n;
                        let a = this.canvas.current;
                        if (null == a) return;
                        let {
                            data: s,
                            updateInterval: l,
                            color: i,
                            numUpdatesToShow: o,
                            lineWidth: u,
                            animate: d,
                            gradientStopColor: c
                        } = this.props;
                        if (s.length < 2) return;
                        let E = Math.max(Math.min((e - this.dataChangedAt) / l, 1), 0),
                            f = a.getContext("2d"),
                            _ = this.maxValue;
                        f.strokeStyle = i, f.lineWidth = u;
                        let C = a.height - f.lineWidth,
                            h = f.createLinearGradient(0, 0, 0, C);
                        if (null != c) h.addColorStop(0, c);
                        else {
                            let {
                                r: e,
                                g: t,
                                b: n
                            } = r.hexToRgb(i);
                            h.addColorStop(0, "rgba(".concat(e, ", ").concat(t, ", ").concat(n, ", 0)"))
                        }
                        h.addColorStop(1, this.fillColor), f.fillStyle = h;
                        let I = s.length >= o ? o : s.length;
                        f.setTransform(1, 0, 0, -1, 0, a.height), f.clearRect(0, 0, a.width, a.height), f.translate(0, .5 * f.lineWidth);
                        let T = Math.floor(a.width / (I - 3)),
                            S = .5 * T;
                        f.translate(T - T * E, 0), f.beginPath();
                        let N = -T;
                        s.forEach((e, a) => {
                            t = {
                                x: N,
                                y: C * e / _
                            }, 0 === a ? f.moveTo(t.x, t.y) : f.bezierCurveTo(n.x + S, n.y, t.x - S, t.y, t.x, t.y), n = t, N += T
                        }), f.stroke(), f.lineTo(N - T, 0), f.lineTo(0, 0), f.fill(), d && E < 1 && (this.animationFrameRequestId = window.requestAnimationFrame(this.updateAnimation))
                    }
                }
            }
            u.defaultProps = {
                animate: !0
            };
            var d = u
        },
        642400: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return S
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("394846"),
                o = n("77078"),
                u = n("892313"),
                d = n("701909"),
                c = n("145131"),
                E = n("109507"),
                f = n("49111"),
                _ = n("782340"),
                C = n("291273"),
                h = n("926622");
            let I = d.default.getArticleURL(f.HelpdeskArticles.VERIFICATION_FAQ);
            class T extends s.PureComponent {
                renderFields() {
                    let {
                        types: e,
                        captchaKey: t,
                        theme: n,
                        onCaptchaVerify: s
                    } = this.props;
                    return (0, a.jsx)(a.Fragment, {
                        children: e.map(e => e === f.VerificationTypes.CAPTCHA ? (0, a.jsx)(E.default, {
                            onVerify: s,
                            theme: n
                        }, t) : (0, a.jsx)(o.Button, {
                            className: i(h.marginBottom20),
                            onClick: () => this.handleClick(e),
                            children: u.default.getButtonTitle(e)
                        }, e))
                    })
                }
                render() {
                    return (0, a.jsxs)(c.default, {
                        className: C.verification,
                        align: c.default.Align.CENTER,
                        direction: c.default.Direction.VERTICAL,
                        children: [(0, a.jsxs)(c.default, {
                            className: i(C.container, {
                                [C.isMobile]: r.isMobile
                            }),
                            direction: c.default.Direction.VERTICAL,
                            align: c.default.Align.CENTER,
                            justify: c.default.Justify.CENTER,
                            children: [(0, a.jsx)("div", {
                                className: C.image
                            }), (0, a.jsx)("div", {
                                className: i(C.title, h.marginTop20),
                                children: _.default.Messages.VERIFICATION_TITLE
                            }), (0, a.jsx)("div", {
                                className: i(C.body, h.marginTop4, h.marginBottom20),
                                children: _.default.Messages.VERIFICATION_BODY_WITH_HELP_LINK.format({
                                    helpCenterURL: I
                                })
                            }), (0, a.jsx)(c.default, {
                                grow: 0,
                                direction: c.default.Direction.VERTICAL,
                                justify: c.default.Justify.CENTER,
                                children: this.renderFields()
                            })]
                        }), (0, a.jsx)("div", {
                            className: i(C.footer, h.marginTop20),
                            children: _.default.Messages.VERIFICATION_FOOTER
                        }), (0, a.jsxs)(c.default, {
                            className: i(h.marginTop4, h.marginBottom20),
                            grow: 0,
                            children: [(0, a.jsx)("div", {
                                className: i(C.footer, C.footerAction),
                                children: _.default.Messages.VERIFICATION_FOOTER_SUPPORT.format({
                                    supportURL: d.default.getSubmitRequestURL()
                                })
                            }), (0, a.jsx)("div", {
                                className: i(C.footer, C.footerBullet),
                                children: "•"
                            }), (0, a.jsx)("div", {
                                className: i(C.footer, C.footerAction),
                                children: _.default.Messages.VERIFICATION_FOOTER_LOGOUT.format({
                                    logoutOnClick: this.props.onLogout
                                })
                            })]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.handleClick = e => {
                        let {
                            onClick: t
                        } = this.props;
                        null == t || t(e)
                    }
                }
            }
            T.defaultProps = {
                types: [f.VerificationTypes.CAPTCHA],
                onCaptchaVerify: f.NOOP,
                onLogout: f.NOOP
            };
            var S = T
        },
        311450: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    fill: "none",
                    children: [(0, a.jsxs)("g", {
                        className: i,
                        fill: l,
                        clipPath: "url(#a)",
                        children: [(0, a.jsx)("path", {
                            d: "M14.8377 9.86956a2.79875 2.79875 0 0 1 1.9166.70444 2.7981 2.7981 0 0 1 .9278 1.8188.59587.59587 0 0 1 .0459.2753v9.4968H4.51517v-8.2581l9.17563-3.8078a3.2101 3.2101 0 0 1 1.1469-.22944Zm0-1.83512a5.23024 5.23024 0 0 0-1.8351.36703L3.27647 12.4387a.96346.96346 0 0 0-.59641.9176v9.6344c0 .2676.10633.5244.29562.7137.18928.1892.446.2956.71369.2956H19.5631V12.6681c0-.1376-.0458-.2753-.0458-.4129-.1041-1.164-.644-2.2457-1.5118-3.02835a4.63378 4.63378 0 0 0-3.1678-1.19241Z"
                        }), (0, a.jsx)("path", {
                            d: "M19.563 24c.4889-.0735.9351-.32 1.2577-.6946a2.06455 2.06455 0 0 0 0-2.6939 2.06443 2.06443 0 0 0-1.2577-.6946M10.6797 3.3208c0-.6889.8077-2.32504 1.2308-3.1431.0266-.05384.0656-.09872.1129-.12997C12.0708.01648 12.1247 0 12.1797 0c.0549 0 .1089.01648.1563.04773.0473.03125.0863.07613.1129.12996.4616.81807 1.2308 2.45421 1.2308 3.14311 0 .44535-.158.87246-.4394 1.18737C12.959 4.82308 12.5775 5 12.1797 5c-.3978 0-.7794-.17692-1.0607-.49183s-.4393-.74202-.4393-1.18737Z"
                        }), (0, a.jsx)("path", {
                            fillRule: "evenodd",
                            d: "M12.1797 6.16742c.8284 0 1.5.67157 1.5 1.5V11.2c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5V7.66742c0-.82843.6716-1.5 1.5-1.5Z",
                            clipRule: "evenodd"
                        }), (0, a.jsx)("path", {
                            d: "M4.51529 13.2187c-.4867 0-.95347.1933-1.29762.5375a1.83498 1.83498 0 0 0-.53749 1.2976v7.9369A1.0093 1.0093 0 0 0 3.68949 24H19.5633V13.2187H4.51529Zm9.17561 8.258H4.79056v-2.0645h8.90034c.2607.021.5054.134.6903.319.185.1849.298.4296.319.6903.0062.1364-.0153.2726-.0632.4004-.048.1278-.1213.2445-.2157.3432a1.0077 1.0077 0 0 1-.3333.2306 1.00732 1.00732 0 0 1-.3971.081Zm0-4.0372H4.79056V15.375h8.90034a.96291.96291 0 0 1 .377.0899.96339.96339 0 0 1 .3112.2312c.1083.0878.194.2002.2499.3279.0558.1278.0803.267.0712.4061 0 .2677-.1063.5245-.2956.7137-.1893.1893-.446.2957-.7137.2957Z"
                        })]
                    }), (0, a.jsx)("defs", {
                        children: (0, a.jsx)("clipPath", {
                            id: "a",
                            children: (0, a.jsx)("path", {
                                fill: "#fff",
                                d: "M0 0h24v24H0z"
                            })
                        })
                    })]
                })
            }
        },
        858722: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("64800"),
                l = n("75196");

            function i(e) {
                return "CloudDone-".concat(e)
            }

            function r(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: r = "currentColor",
                    foreground: o,
                    gradientConfig: u,
                    ...d
                } = e, c = null;
                return null != u && (c = (0, a.jsx)(s.default, {
                    ...u,
                    color: r,
                    id: i(u.id)
                })), (0, a.jsxs)("svg", {
                    ...(0, l.default)(d),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("defs", {
                        children: c
                    }), (0, a.jsx)("path", {
                        d: "M0 0h24v24H0z",
                        fill: "none"
                    }), (0, a.jsx)("path", {
                        fill: null != u ? "url(#".concat(i(u.id), ")") : r,
                        className: o,
                        d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z"
                    })]
                })
            }
        },
        220978: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("691096"),
                i = n("64800"),
                r = n("75196");

            function o(e) {
                return "CloudDownload-".concat(e)
            }
            var u = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    foreground: l,
                    gradientConfig: u,
                    ...d
                } = e, c = null;
                return null != u && (c = (0, a.jsx)(i.default, {
                    ...u,
                    color: s,
                    id: o(u.id)
                })), (0, a.jsxs)("svg", {
                    ...(0, r.default)(d),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("defs", {
                        children: c
                    }), (0, a.jsx)("path", {
                        d: "M0 0h24v24H0z",
                        fill: "none"
                    }), (0, a.jsx)("path", {
                        fill: null != u ? "url(#".concat(o(u.id), ")") : s,
                        className: l,
                        d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z"
                    })]
                })
            }, l.DownloadIcon, void 0, {
                size: 24
            })
        },
        581454: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return u
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("596256"),
                i = n("64800"),
                r = n("75196");

            function o(e) {
                return "CloudUpload-".concat(e)
            }
            var u = (0, s.replaceIcon)(function(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: s = "currentColor",
                    foreground: l,
                    gradientConfig: u,
                    ...d
                } = e, c = null;
                return null != u && (c = (0, a.jsx)(i.default, {
                    ...u,
                    color: s,
                    id: o(u.id)
                })), (0, a.jsxs)("svg", {
                    ...(0, r.default)(d),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("defs", {
                        children: c
                    }), (0, a.jsx)("path", {
                        d: "M0 0h24v24H0z",
                        fill: "none"
                    }), (0, a.jsx)("path", {
                        fill: null != u ? "url(#".concat(o(u.id), ")") : s,
                        className: l,
                        d: "M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
                    })]
                })
            }, l.UploadIcon, void 0, {
                size: 24
            })
        },
        743826: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("422244"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 23,
                        height: n = 18,
                        color: s = "currentColor",
                        ...l
                    } = e;
                    return (0, a.jsx)("svg", {
                        ...(0, i.default)(l),
                        width: t,
                        height: n,
                        viewBox: "0 0 23 18",
                        fill: "none",
                        children: (0, a.jsx)("path", {
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M1.63373 2.18776C1.99762 0.893925 3.17765 0 4.52168 0H5.99904C6.55132 0 6.99904 0.447715 6.99904 1V4.98282C6.99904 4.99819 6.99892 5.01354 6.9987 5.02886C6.99896 5.03058 6.9991 5.03234 6.9991 5.03414C6.9991 5.50023 6.89159 5.94121 6.70001 6.33363C6.21831 7.32031 5.20515 8 4.03324 8C4.02466 8 4.01609 7.99996 4.00753 7.99989C3.99898 7.99996 3.99043 8 3.98186 8C1.9825 8 0.536052 6.09062 1.07737 4.16593L1.63373 2.18776ZM8.99904 0C8.44676 0 7.99904 0.447715 7.99904 1V5C7.99904 6.5533 9.17954 7.83088 10.6923 7.98451C10.7932 7.99475 10.8955 8 10.999 8C10.9991 8 10.9991 8 10.9991 8C12.1789 8 13.1996 7.31899 13.6896 6.32862C13.883 5.93771 13.9937 5.49859 13.9989 5.03414C13.9989 5.0335 13.9989 5.03288 13.9989 5.03225C13.999 5.02151 13.999 5.01076 13.999 5V1C13.999 0.447715 13.5513 0 12.999 0H8.99904ZM15.999 0C15.4468 0 14.999 0.447715 14.999 1V4.98282C14.999 4.99845 14.9992 5.01406 14.9994 5.02963C14.9992 5.03111 14.9991 5.03261 14.9991 5.03414C14.9991 5.50023 15.1066 5.94121 15.2982 6.33363C15.7799 7.32031 16.7931 8 17.965 8C17.9735 8 17.9821 7.99996 17.9906 7.99989C17.9991 7.99996 18.0077 8 18.0162 8C20.0156 8 21.462 6.09062 20.9207 4.16593L20.3643 2.18776C20.0005 0.893924 18.8204 0 17.4764 0H15.999ZM19.9991 9.42264V17C19.9991 18.6569 18.6559 20 16.9991 20H14.2491C14.111 20 13.9991 19.8881 13.9991 19.75V14C13.9991 12.8954 13.1037 12 11.9991 12H9.99909C8.89452 12 7.99909 12.8954 7.99909 14V19.75C7.99909 19.8881 7.88716 20 7.74909 20H4.99909C3.34223 20 1.99909 18.6569 1.99909 17V9.42263C1.99909 9.2357 2.19766 9.11353 2.37121 9.18297C2.88063 9.38678 3.44019 9.5 4.03324 9.5C5.32615 9.5 6.49074 8.95057 7.30626 8.07246C7.41432 7.95611 7.60217 7.95576 7.71059 8.07178C8.53188 8.95064 9.70133 9.5 10.9991 9.5C12.2969 9.5 13.4663 8.95064 14.2876 8.07178C14.396 7.95576 14.5839 7.9561 14.6919 8.07246C15.5075 8.95057 16.672 9.5 17.965 9.5C18.558 9.5 19.1176 9.38678 19.627 9.18298C19.8005 9.11354 19.9991 9.23571 19.9991 9.42264Z",
                            fill: s
                        })
                    })
                }, l.ShopIcon, void 0, {
                    size: 23
                })
        },
        447853: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("31"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: s = "currentColor",
                        className: l,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        ...(0, i.default)(o),
                        className: l,
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, a.jsx)("path", {
                            className: r,
                            fill: s,
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M22.447 8.11002L12.447 3.11002C12.166 2.96902 11.834 2.96902 11.552 3.11002L1.552 8.11002C1.35 8.21002 1.197 8.38402 1.107 8.57302C1.046 8.69502 1 8.90202 1 9.00502V14.77C1 15.322 1.448 15.77 2 15.77C2.552 15.77 3 15.322 3 14.77V10.172L12.015 13.927L22.372 9.93302C22.737 9.78602 22.983 9.44002 22.999 9.04602C23.016 8.65202 22.799 8.28702 22.447 8.11002ZM12 16.005C11.869 16.005 11.738 15.979 11.615 15.928L5 13.172V16.185C5 16.564 5.214 16.91 5.553 17.08C5.7173 17.1621 5.88209 17.2461 6.04836 17.3308C7.61773 18.1306 9.31996 18.998 12 18.998C14.6812 18.998 16.3872 18.1284 17.956 17.3287C18.1208 17.2447 18.2842 17.1614 18.447 17.08C18.786 16.911 19 16.564 19 16.186V13.385L12.359 15.939C12.243 15.982 12.122 16.005 12 16.005ZM1 18.005C1 17.453 1.448 17.005 2 17.005C2.552 17.005 3 17.453 3 18.005V20.005C3 20.557 2.552 21.005 2 21.005C1.448 21.005 1 20.557 1 20.005V18.005Z"
                        })
                    })
                }, l.EducationIcon, void 0, {
                    size: 24
                })
        },
        64800: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return s
                }
            });
            var a = n("37983");
            n("884691");
            var s = e => {
                let {
                    id: t,
                    startColor: n,
                    stopColor: s,
                    color: l,
                    stop: i
                } = e;
                return (0, a.jsxs)("linearGradient", {
                    id: t,
                    children: [(0, a.jsx)("stop", {
                        offset: "0",
                        stopColor: n
                    }), (0, a.jsx)("stop", {
                        offset: i,
                        stopColor: s
                    }), (0, a.jsx)("stop", {
                        offset: i,
                        stopColor: l
                    }), (0, a.jsx)("stop", {
                        offset: "1",
                        stopColor: l
                    })]
                })
            }
        },
        89684: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 32,
                    height: n = 32,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 ".concat(t, " ").concat(n),
                    fill: "none",
                    children: (0, a.jsx)("path", {
                        fillRule: "evenodd",
                        clipRule: "evenodd",
                        d: "M8 3C7.44772 3 7 3.44772 7 4V12C7 12.5523 7.44772 13 8 13C8.55228 13 9 12.5523 9 12V4C9 3.44772 8.55228 3 8 3ZM3 6C3 5.44772 3.44772 5 4 5C4.55228 5 5 5.44772 5 6V10C5 10.5523 4.55228 11 4 11C3.44772 11 3 10.5523 3 10V6ZM11 6C11 5.44772 11.4477 5 12 5C12.5523 5 13 5.44772 13 6V10C13 10.5523 12.5523 11 12 11C11.4477 11 11 10.5523 11 10V6Z",
                        fill: l
                    })
                })
            }
        },
        517425: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("283322"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: s = "currentColor",
                        className: l,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        ...(0, i.default)(o),
                        className: l,
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, a.jsx)("path", {
                            className: r,
                            fill: s,
                            d: "M19.396 3.29898C19.016 3.01598 18.524 2.93098 18.07 3.06498L8.07 6.06498C7.435 6.25498 7 6.83998 7 7.50298V15.054C6.835 15.03 6.671 15.003 6.5 15.003C4.566 15.003 3 16.571 3 18.503C3 20.434 4.566 22.003 6.5 22.003C8.434 22.003 10 20.434 10 18.503V8.61798L17 6.51798V13.054C16.835 13.03 16.671 13.003 16.5 13.003C14.566 13.003 13 14.571 13 16.503C13 18.434 14.566 20.003 16.5 20.003C18.434 20.003 20 18.434 20 16.503V4.50298C20 4.02698 19.775 3.58198 19.396 3.29898Z"
                        })
                    })
                }, l.MusicIcon, void 0, {
                    size: 24
                })
        },
        406019: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("902515"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: s = "currentColor",
                        foreground: l,
                        ...r
                    } = e;
                    return (0, a.jsxs)("svg", {
                        ...(0, i.default)(r),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [(0, a.jsx)("path", {
                            className: l,
                            d: "M10.889 4C10.889 3.44772 11.3367 3 11.889 3H12.1112C12.6635 3 13.1112 3.44772 13.1112 4V20C13.1112 20.5523 12.6635 21 12.1112 21H11.889C11.3367 21 10.889 20.5523 10.889 20V4Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            className: l,
                            d: "M6.44439 6.25C6.44439 5.69772 6.89211 5.25 7.44439 5.25H7.66661C8.2189 5.25 8.66661 5.69772 8.66661 6.25V17.75C8.66661 18.3023 8.2189 18.75 7.66661 18.75H7.44439C6.89211 18.75 6.44439 18.3023 6.44439 17.75V6.25Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            className: l,
                            d: "M3.22222 15.375C3.77451 15.375 4.22222 14.9273 4.22222 14.375L4.22222 9.625C4.22222 9.07272 3.77451 8.625 3.22222 8.625H3C2.44772 8.625 2 9.07272 2 9.625V14.375C2 14.9273 2.44772 15.375 3 15.375H3.22222Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            className: l,
                            d: "M22.0001 13.25C22.0001 13.8023 21.5523 14.25 21.0001 14.25H20.7778C20.2255 14.25 19.7778 13.8023 19.7778 13.25V10.75C19.7778 10.1977 20.2255 9.75 20.7778 9.75H21.0001C21.5523 9.75 22.0001 10.1977 22.0001 10.75V13.25Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            className: l,
                            d: "M16.3333 7.5C15.781 7.5 15.3333 7.94772 15.3333 8.5V15.5C15.3333 16.0523 15.781 16.5 16.3333 16.5H16.5555C17.1078 16.5 17.5555 16.0523 17.5555 15.5V8.5C17.5555 7.94772 17.1078 7.5 16.5555 7.5H16.3333Z",
                            fill: s
                        })]
                    })
                }, l.WaveformIcon, void 0, {
                    size: 24
                })
        },
        220075: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("215118"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: s = "currentColor",
                        foreground: l,
                        ...r
                    } = e;
                    return (0, a.jsxs)("svg", {
                        ...(0, i.default)(r),
                        width: t,
                        height: n,
                        viewBox: "0 0 48 48",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg",
                        children: [(0, a.jsx)("path", {
                            d: "M30.6666 24.9644L35.1111 20.5199V31C35.1111 32.1046 34.2156 33 33.1111 33H32.6666C31.562 33 30.6666 32.1046 30.6666 31V24.9644Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            d: "M26.2224 14.1463V8C26.2224 6.89543 25.327 6 24.2224 6H23.7779C22.6734 6 21.7779 6.89543 21.7779 8V18.5907L26.2224 14.1463Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            d: "M21.7779 33.8543L21.9254 33.7056L26.2224 29.4086V40C26.2224 41.1046 25.327 42 24.2224 42H23.7779C22.6734 42 21.7779 41.1046 21.7779 40V33.8543Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            d: "M17.3332 23.0354L12.8888 27.4799V12.5C12.8888 11.3954 13.7842 10.5 14.8888 10.5H15.3332C16.4378 10.5 17.3332 11.3954 17.3332 12.5V23.0354Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            d: "M8.44445 28.75C8.44445 29.8546 7.54902 30.75 6.44445 30.75H6C4.89543 30.75 4 29.8546 4 28.75V19.25C4 18.1454 4.89543 17.25 6 17.25H6.44445C7.54902 17.25 8.44445 18.1454 8.44445 19.25L8.44445 28.75Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            d: "M44.0001 26.5C44.0001 27.6046 43.1047 28.5 42.0001 28.5H41.5557C40.4511 28.5 39.5557 27.6046 39.5557 26.5V21.5C39.5557 20.3954 40.4511 19.5 41.5557 19.5H42.0001C43.1047 19.5 44.0001 20.3954 44.0001 21.5V26.5Z",
                            fill: s
                        }), (0, a.jsx)("path", {
                            d: "M42 8.54L39.46 6L6 39.46L8.54 42L16.92 33.64L19.38 31.16L22.7 27.84L29.98 20.56L42 8.54Z",
                            fill: s,
                            className: l
                        })]
                    })
                }, l.WaveformSlashIcon, void 0, {
                    size: 24
                })
        },
        688342: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("496061"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: s = "currentColor",
                        foreground: l,
                        ...r
                    } = e;
                    return (0, a.jsx)("svg", {
                        ...(0, i.default)(r),
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, a.jsxs)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: [(0, a.jsx)("path", {
                                className: l,
                                fill: s,
                                d: "M8.67872 19H11V21H7V23H17V21H13V19H20C21.103 19 22 18.104 22 17V6C22 5.89841 21.9924 5.79857 21.9777 5.70101L20 7.67872V15H12.6787L8.67872 19ZM13.1496 6H4V15H4.14961L2.00515 17.1445C2.00174 17.0967 2 17.0486 2 17V6C2 4.897 2.897 4 4 4H15.1496L13.1496 6Z"
                            }), (0, a.jsx)("rect", {
                                x: "2",
                                y: "20",
                                width: "26",
                                height: "2",
                                transform: "rotate(-45 2 20)",
                                fill: "#ed4245"
                            })]
                        })
                    })
                }, l.ScreenSlashIcon, void 0, {
                    size: 24
                })
        },
        874293: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 80,
                    height: n = 20,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 ".concat(t, " ").concat(n),
                    children: [(0, a.jsx)("pattern", {
                        id: "pill-frame-pattern",
                        width: 8 / t,
                        height: "1",
                        children: (0, a.jsx)("path", {
                            d: "m0 0h8v20h-8zm4 2c-1.1045695 0-2 .8954305-2 2v12c0 1.1045695.8954305 2 2 2s2-.8954305 2-2v-12c0-1.1045695-.8954305-2-2-2z",
                            fillRule: "evenodd",
                            fill: l,
                            className: i
                        })
                    }), (0, a.jsx)("rect", {
                        fill: "url(#pill-frame-pattern)",
                        height: "100%",
                        width: "100%"
                    })]
                })
            }
        },
        709071: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("91297"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: s = "currentColor",
                        className: l,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        ...(0, i.default)(o),
                        className: l,
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, a.jsx)("path", {
                            className: r,
                            fill: s,
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M18.6683 11.9964C19.5992 13.2208 20.3732 14.4331 20.9422 15.5701C22.5858 18.8593 22.0118 20.4688 21.2418 21.2398C20.895 21.5846 20.2596 21.9978 19.1951 21.9978C17.3645 21.9978 14.7478 20.7553 12.0004 18.6683C9.25198 20.7553 6.63527 21.9978 4.80569 21.9978C3.74111 21.9978 3.10478 21.5846 2.75896 21.2398C1.98792 20.4677 1.41392 18.8593 3.05853 15.5701C3.62751 14.4331 4.40257 13.2218 5.33245 11.9964C2.51569 8.28291 1.00176 4.51719 2.75896 2.75898C3.10578 2.41316 3.74111 2 4.80569 2C6.63628 2 9.25298 3.24251 12.0004 5.32944C14.7488 3.24251 17.3655 2 19.1951 2C20.2596 2 20.895 2.41216 21.2418 2.75898C22.999 4.51618 21.4851 8.28191 18.6683 11.9964ZM19.8203 4.18042C19.6806 4.03969 19.4032 4.01053 19.1951 4.01053C18.0481 4.01053 15.9933 4.9203 13.6209 6.64835C15.0262 7.86472 16.2346 9.08512 17.3655 10.395C19.752 7.13188 20.3541 4.71422 19.8203 4.18042ZM14.1325 14.1316C14.8654 13.3987 15.5108 12.689 16.0928 12.0024C15.4876 11.2856 14.8342 10.5689 14.1325 9.86621C13.4128 9.14744 12.701 8.51312 12.0004 7.92202C11.2997 8.51312 10.588 9.14744 9.86821 9.86621C9.16653 10.5689 8.51311 11.2856 7.90794 12.0024C8.48999 12.689 9.13637 13.3987 9.86821 14.1316C10.588 14.8513 11.2997 15.4856 12.0004 16.0747C12.701 15.4856 13.4128 14.8513 14.1325 14.1316ZM4.80569 4.01053C4.5986 4.01053 4.32115 4.03969 4.18142 4.18042C3.64661 4.71422 4.24977 7.13088 6.63628 10.394C7.83556 9.00469 9.05696 7.79435 10.3799 6.64735C8.00645 4.9203 5.95269 4.01053 4.80569 4.01053ZM4.18041 19.8183C4.32014 19.9581 4.5976 19.9872 4.80569 19.9872C5.95269 19.9872 8.00746 19.0785 10.3799 17.3514C8.98357 16.1421 7.7873 14.9348 6.6413 13.6078C5.92053 14.593 5.31133 15.56 4.85695 16.4688C3.79539 18.5909 3.9502 19.5881 4.18041 19.8183ZM19.1941 19.9872C19.4021 19.9872 19.6796 19.9581 19.8193 19.8183C20.0495 19.5881 20.2044 18.5919 19.1428 16.4688C18.6884 15.559 18.0792 14.592 17.3584 13.6078C16.2114 14.9358 15.0152 16.1431 13.6199 17.3514C15.9933 19.0785 18.0471 19.9872 19.1941 19.9872ZM14.0109 11.9984C14.0109 13.1088 13.1108 14.0089 12.0004 14.0089C10.89 14.0089 9.98984 13.1088 9.98984 11.9984C9.98984 10.888 10.89 9.98784 12.0004 9.98784C13.1108 9.98784 14.0109 10.888 14.0109 11.9984Z"
                        })
                    })
                }, l.ScienceIcon, void 0, {
                    size: 24
                })
        },
        50647: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 14,
                    height: n = 14,
                    color: l = "currentColor",
                    foreground: i,
                    ...r
                } = e;
                return (0, a.jsx)("svg", {
                    ...(0, s.default)(r),
                    width: t,
                    height: n,
                    viewBox: "0 0 14 14",
                    children: (0, a.jsx)("path", {
                        fill: l,
                        className: i,
                        d: "M6.99471698,9.67522659 C8.47108874,9.67522659 9.66792453,8.47748685 9.66792453,7 C9.66792453,5.52251315 8.47108874,4.32477341 6.99471698,4.32477341 C5.51834522,4.32477341 4.32150943,5.52251315 4.32150943,7 C4.32150943,8.47748685 5.51834522,9.67522659 6.99471698,9.67522659 Z M6.99471698,2.67522659 C8.18867925,2.67522659 9.26641509,3.16163142 10.0483019,3.94410876 L11.9396226,2.05135952 C10.6822642,0.782477341 8.92830189,0 6.99471698,0 C3.12754717,0 0,3.14048338 0,7 L2.67320755,7 C2.67320755,4.6102719 4.60679245,2.67522659 6.99471698,2.67522659 Z M11.3267925,7 C11.3267925,9.3897281 9.39320755,11.3247734 7.00528302,11.3247734 C5.81132075,11.3247734 4.73358491,10.8383686 3.94113208,10.0558912 L2.04981132,11.9486405 C3.31773585,13.2175227 5.06113208,14 6.99471698,14 C10.8618868,14 14,10.8595166 14,7 L11.3267925,7 Z"
                    })
                })
            }
        },
        304121: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 20,
                    height: n = 20,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 18 18",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: [(0, a.jsx)("path", {
                        d: "M13.4996 0H6.72144C6.62254 1.34004e-06 6.52586 0.0293272 6.44363 0.0842743C6.36141 0.139221 6.29733 0.217322 6.25949 0.308693C6.22165 0.400063 6.21176 0.500602 6.23106 0.597595C6.25037 0.694589 6.298 0.783679 6.36794 0.8536L7.63564 2.1213C7.82317 2.30884 7.92853 2.56319 7.92853 2.8284C7.92853 3.09361 7.82317 3.34796 7.63564 3.5355L6.22144 4.9498C5.65884 5.51241 5.34277 6.27546 5.34277 7.0711C5.34277 7.86674 5.65884 8.62979 6.22144 9.1924C6.40897 9.37993 6.66331 9.48528 6.92853 9.48528C7.19374 9.48528 7.4481 9.37993 7.63564 9.1924L9.75703 7.0711C10.1321 6.69603 10.6408 6.48533 11.1712 6.48533C11.7017 6.48533 12.2104 6.69603 12.5854 7.0711L13.146 7.6317C13.2159 7.70164 13.305 7.74927 13.402 7.76858C13.499 7.78788 13.5996 7.77799 13.6909 7.74015C13.7823 7.70231 13.8604 7.63823 13.9154 7.556C13.9703 7.47377 13.9996 7.37709 13.9996 7.2782V0.5C13.9996 0.367392 13.9469 0.240214 13.8532 0.146446C13.7594 0.052678 13.6322 0 13.4996 0Z",
                        fill: l
                    }), (0, a.jsx)("path", {
                        d: "M4.5 17.9999H11.2782C11.3771 17.9999 11.4738 17.9706 11.556 17.9157C11.6382 17.8607 11.7023 17.7826 11.7401 17.6912C11.778 17.5999 11.7879 17.4993 11.7686 17.4023C11.7493 17.3053 11.7016 17.2163 11.6317 17.1463L10.364 15.8786C10.1765 15.6911 10.0711 15.4367 10.0711 15.1715C10.0711 14.9063 10.1765 14.652 10.364 14.4644L11.7782 13.0501C12.3408 12.4875 12.6569 11.7245 12.6569 10.9288C12.6569 10.1332 12.3408 9.37014 11.7782 8.80753C11.5907 8.62 11.3363 8.51465 11.0711 8.51465C10.8059 8.51465 10.5515 8.62 10.364 8.80753L8.2426 10.9288C7.86753 11.3039 7.35883 11.5146 6.8284 11.5146C6.29797 11.5146 5.78927 11.3039 5.4142 10.9288L4.85361 10.3682C4.78369 10.2983 4.69459 10.2507 4.5976 10.2314C4.5006 10.2121 4.40006 10.2219 4.30869 10.2598C4.21731 10.2976 4.13922 10.3617 4.08427 10.4439C4.02933 10.5262 4 10.6228 4 10.7217V17.4999C4 17.6325 4.05269 17.7597 4.14645 17.8535C4.24022 17.9473 4.36739 17.9999 4.5 17.9999Z",
                        fill: l
                    })]
                })
            }
        },
        300113: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("769174"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 24,
                        height: n = 24,
                        color: s = "currentColor",
                        className: l,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        ...(0, i.default)(o),
                        className: l,
                        width: t,
                        height: n,
                        viewBox: "0 0 24 24",
                        children: (0, a.jsx)("path", {
                            className: r,
                            fill: s,
                            fillRule: "evenodd",
                            clipRule: "evenodd",
                            d: "M17.722 3.00098H21C21.553 3.00098 22 3.44898 22 4.00098V8.00098C22 8.30498 21.861 8.59298 21.625 8.78198L16.696 12.724C15.794 13.86 14.49 14.659 13 14.911V16.001H15C15.553 16.001 16 16.449 16 17.001V19.001H8V17.001C8 16.449 8.447 16.001 9 16.001H11V14.911C9.51 14.659 8.206 13.86 7.304 12.724L2.375 8.78198C2.139 8.59298 2 8.30498 2 8.00098V4.00098C2 3.44898 2.447 3.00098 3 3.00098H6.278C6.625 2.40598 7.263 2.00098 8 2.00098H16C16.738 2.00098 17.375 2.40598 17.722 3.00098ZM4 5.00098V7.52098L6.006 9.12598C6.006 9.10435 6.00448 9.08348 6.00297 9.06274C6.00148 9.04224 6 9.02185 6 9.00098V5.00098H4ZM17.994 9.12698L20 7.52098V5.00098H18V9.00098C18 9.02173 17.9985 9.042 17.9971 9.0625C17.9955 9.08349 17.994 9.10472 17.994 9.12698ZM7 20.001H17V22.001H7V20.001Z"
                        })
                    })
                }, l.TrophyIcon, void 0, {
                    size: 24
                })
        },
        15435: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return r
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("469563"),
                l = n("850830"),
                i = n("75196"),
                r = (0, s.replaceIcon)(function(e) {
                    let {
                        width: t = 20,
                        height: n = 16,
                        color: s = "currentColor",
                        className: l,
                        foreground: r,
                        ...o
                    } = e;
                    return (0, a.jsx)("svg", {
                        className: l,
                        width: t,
                        height: n,
                        viewBox: "0 0 20 16",
                        ...(0, i.default)(o),
                        children: (0, a.jsxs)("g", {
                            fill: "none",
                            fillRule: "evenodd",
                            children: [(0, a.jsx)("path", {
                                className: r,
                                fill: s,
                                d: "M1,14.1538462 L1.95,14.1538462 C3.73125,14.1538462 5.5125,13.5384615 6.81875,12.4307692 C5.15625,12.4307692 3.73125,11.2 3.1375,9.6 C3.375,9.6 3.6125,9.72307692 3.85,9.72307692 C4.20625,9.72307692 4.5625,9.72307692 4.91875,9.6 C3.1375,9.23076923 1.7125,7.63076923 1.7125,5.66153846 C2.1875,5.90769231 2.78125,6.15384615 3.49375,6.15384615 C2.425,5.41538462 1.83125,4.18461538 1.83125,2.70769231 C1.83125,1.96923077 2.06875,1.23076923 2.30625,0.615384615 C4.20625,3.07692308 7.05625,4.67692308 10.38125,4.8 C10.2625,4.67692308 10.2625,4.30769231 10.2625,4.06153846 C10.2625,1.84615385 12.04375,0 14.18125,0 C15.25,0 16.31875,0.492307692 17.03125,1.23076923 C17.8625,1.10769231 18.8125,0.738461538 19.525,0.246153846 C19.2875,1.23076923 18.575,1.96923077 17.8625,2.46153846 C18.575,2.46153846 19.2875,2.21538462 20,1.84615385 C19.525,2.70769231 18.8125,3.32307692 18.1,3.93846154 L18.1,4.43076923 C18.1,9.84615385 14.18125,16 6.9375,16 C4.68125,16 2.6625,15.3846154 1,14.1538462 Z"
                            }), (0, a.jsx)("rect", {
                                width: "20",
                                height: "16"
                            })]
                        })
                    })
                }, l.TwitterIcon, void 0, {
                    size: 20
                })
        },
        479020: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return l
                }
            });
            var a = n("37983");
            n("884691");
            var s = n("75196");

            function l(e) {
                let {
                    width: t = 24,
                    height: n = 24,
                    color: l = "currentColor",
                    ...i
                } = e;
                return (0, a.jsxs)("svg", {
                    ...(0, s.default)(i),
                    width: t,
                    height: n,
                    viewBox: "0 0 24 24",
                    children: [(0, a.jsx)("path", {
                        fill: l,
                        d: "M12 14C7.289 14 4 16.467 4 20V22H20V20C20 16.467 16.711 14 12 14ZM11 19C10.447 19 10 18.553 10 18C10 17.447 10.447 17 11 17C11.553 17 12 17.447 12 18C12 18.553 11.553 19 11 19ZM14 19C13.447 19 13 18.553 13 18C13 17.447 13.447 17 14 17C14.553 17 15 17.447 15 18C15 18.553 14.553 19 14 19Z"
                    }), (0, a.jsx)("path", {
                        fill: l,
                        d: "M18 6H17.91C17.432 3.167 14.967 1 12 1C9.033 1 6.568 3.167 6.09 6H6C4.896 6 4 6.896 4 8V9C4 10.104 4.896 11 6 11C6 12.102 6.897 13 8 13H16C17.104 13 18 12.102 18 11C19.104 11 20 10.104 20 9V8C20 6.896 19.104 6 18 6ZM16 10H8V6H16V10Z"
                    })]
                })
            }
        },
        663449: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return g
                }
            }), n("222007");
            var a = n("37983"),
                s = n("884691"),
                l = n("414456"),
                i = n.n(l),
                r = n("627445"),
                o = n.n(r),
                u = n("77078"),
                d = n("506885"),
                c = n("145131"),
                E = n("533403"),
                f = n("945330"),
                _ = n("925877"),
                C = n("701909"),
                h = n("962541"),
                I = n("78574"),
                T = n("329858"),
                S = n("49111"),
                N = n("782340"),
                A = n("234837");
            let m = {
                HOST: 5,
                LISTENER: 4
            };
            class p extends s.PureComponent {
                isHost() {
                    let {
                        currentUser: e,
                        host: t
                    } = this.props;
                    return e.id === (null == t ? void 0 : t.id)
                }
                renderTitle() {
                    return (0, a.jsxs)("div", {
                        children: [(0, a.jsx)(T.default, {
                            children: this.isHost() ? N.default.Messages.SPOTIFY_LISTEN_ALONG_TITLE_HOST.format({
                                count: this.props.party.length
                            }) : N.default.Messages.SPOTIFY_LISTEN_ALONG_TITLE_LISTENER
                        }), (0, a.jsx)(I.default, {
                            children: N.default.Messages.SPOTIFY_LISTEN_ALONG_SUBTITLE_LISTENER
                        })]
                    })
                }
                renderStopListeningButton() {
                    let {
                        onStopListening: e
                    } = this.props;
                    return this.isHost() ? null : (0, a.jsx)(h.default, {
                        tooltipText: N.default.Messages.SPOTIFY_LISTEN_ALONG_STOP,
                        onClick: e,
                        icon: f.default
                    })
                }
                renderHelpIcon() {
                    return this.isHost() ? (0, a.jsx)(h.default, {
                        tooltipText: N.default.Messages.SPOTIFY_LISTEN_ALONG_INFO,
                        onClick: () => {
                            window.open(C.default.getArticleURL(S.HelpdeskArticles.SPOTIFY_CONNECTION), "_blank")
                        },
                        icon: _.default
                    }) : null
                }
                render() {
                    return (0, a.jsxs)("div", {
                        className: A.listeningAlong,
                        children: [this.renderTitle(), (0, a.jsx)(c.default, {
                            justify: c.default.Justify.END,
                            className: A.party,
                            children: (0, a.jsx)(E.default, {
                                users: this.props.party,
                                max: this.isHost() ? m.HOST : m.LISTENER,
                                renderUser: this.renderPartyMember,
                                renderMoreUsers: this.renderPartyMemberOverflow
                            })
                        }), (0, a.jsxs)("div", {
                            className: A.icons,
                            children: [this.renderHelpIcon(), this.renderStopListeningButton()]
                        })]
                    })
                }
                constructor(...e) {
                    super(...e), this.renderPartyMember = (e, t) => {
                        let n;
                        if (null == e) return null;
                        let {
                            host: l,
                            renderUserPopout: r,
                            onUserContextMenu: c
                        } = this.props;
                        return n = (null == l ? void 0 : l.id) === e.id ? N.default.Messages.SPOTIFY_LISTEN_ALONG_HOST : N.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENER, (0, a.jsx)(u.Popout, {
                            preload: () => (0, d.default)(e.id, e.getAvatarURL(void 0, 80)),
                            renderPopout: t => (o(null != e, ""), r(t, e)),
                            position: "top",
                            align: "center",
                            children: l => (0, a.jsx)(u.Tooltip, {
                                text: n,
                                children: n => {
                                    let {
                                        onMouseEnter: a,
                                        onMouseLeave: r
                                    } = n;
                                    return (0, s.createElement)(u.Avatar, {
                                        ...l,
                                        key: e.id,
                                        src: e.getAvatarURL(void 0, 24),
                                        size: u.AvatarSizes.SIZE_24,
                                        className: i(A.avatar, t),
                                        "aria-label": e.username,
                                        onMouseEnter: a,
                                        onMouseLeave: r,
                                        onContextMenu: t => void(null != e && (null == c || c(t, e)))
                                    })
                                }
                            })
                        }, e.id)
                    }, this.renderPartyMemberOverflow = (e, t, n) => {
                        let {
                            renderOverflowPopout: s
                        } = this.props;
                        return (0, a.jsx)(u.Popout, {
                            renderPopout: s,
                            children: n => (0, a.jsx)(u.Tooltip, {
                                text: N.default.Messages.SPOTIFY_LISTEN_ALONG_LISTENERS,
                                children: s => (0, a.jsx)("div", {
                                    className: i(A.overflow, t),
                                    ...s,
                                    ...n,
                                    children: e
                                })
                            })
                        }, n)
                    }
                }
            }
            var g = p
        },
        456353: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                getPartyMetadata: function() {
                    return l
                }
            });
            var a = n("575365"),
                s = n("309570");

            function l(e) {
                return {
                    af_voice_chat: e.voiceChannels.length > 0,
                    af_people_count: e.partiedMembers.length,
                    af_rich_presence: e.currentActivities.some(e => {
                        let {
                            activity: t
                        } = e;
                        return (0, s.default)(t)
                    }),
                    game_platform: e.currentActivities.length > 0 ? (0, a.default)(e.currentActivities[0].activity) : null
                }
            }
        },
        485167: function(e, t, n) {
            "use strict";

            function a(e, t, n, a) {
                return Promise.resolve(null)
            }

            function s(e, t) {
                return Promise.resolve(!1)
            }

            function l(e, t, n) {
                return Promise.resolve(null)
            }
            n.r(t), n.d(t, {
                writeFile: function() {
                    return a
                },
                removeFile: function() {
                    return s
                },
                readFile: function() {
                    return l
                }
            })
        },
        969388: function(e, t, n) {
            "use strict";

            function a(e) {
                let t;
                let n = !1;
                return function() {
                    for (var a = arguments.length, s = Array(a), l = 0; l < a; l++) s[l] = arguments[l];
                    return !n && (n = !0, t = e(...s)), t
                }
            }
            n.r(t), n.d(t, {
                callOnce: function() {
                    return a
                }
            }), n("222007")
        },
        497: function(e, t, n) {
            "use strict";
            var a;
            n.r(t), n.d(t, {
                default: function() {
                    return a
                }
            }), n("424973"), a = class {
                _processQueue() {
                    setTimeout(() => {
                        if (this._queue.length > 0 && this._tokenCount > 0) {
                            this._tokenCount--, null == this._intervalID && (this._intervalID = setInterval(() => this._iterate(), this._intervalPeriod));
                            let e = this._queue.shift();
                            null == e || e(), this._processQueue()
                        }
                    }, 0)
                }
                _iterate() {
                    this._tokenCount = Math.min(this._capacity, this._tokenCount + 1), this._tokenCount >= this._capacity && null != this._intervalID && (clearInterval(this._intervalID), this._intervalID = null), this._processQueue()
                }
                process() {
                    return new Promise(e => {
                        this._queue.push(e), this._processQueue()
                    })
                }
                constructor(e, t) {
                    this._capacity = e, this._tokenCount = e, this._queue = [], this._intervalPeriod = t / e, this._intervalID = null
                }
            }
        },
        61141: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RPCCommandSchemas: function() {
                    return l
                }
            }), n("222007");
            var a = n("792353"),
                s = n("843455");
            let l = {
                    [a.RPCCommand.INITIATE_IMAGE_UPLOAD]: {
                        request: void 0,
                        response: e => e.object({
                            image_url: e.string().required()
                        })
                    },
                    [a.RPCCommand.OPEN_SHARE_MOMENT_DIALOG]: {
                        response: void 0,
                        request: e => (0, a.joiReqObj)(e.object({
                            mediaUrl: e.string().required().max(1024)
                        }))
                    },
                    [a.RPCCommand.AUTHENTICATE]: {
                        request: e => (0, a.joiReqObj)(e.object({
                            access_token: e.string().allow(null).optional()
                        })),
                        response: e => e.object({
                            access_token: e.string().required(),
                            user: e.object({
                                username: e.string().required(),
                                discriminator: e.string().required(),
                                id: e.string().required(),
                                avatar: e.string().allow(null),
                                public_flags: e.number().required()
                            }).required(),
                            scopes: e.array().items(e.string().valid(...(0, a.joiEnum)(s.OAuth2Scopes))).required(),
                            expires: e.string().required(),
                            application: e.object({
                                description: e.string().required(),
                                icon: e.string().allow(null),
                                id: e.string().required(),
                                rpc_origins: e.array().items(e.string()).optional(),
                                name: e.string().required()
                            }).required()
                        })
                    },
                    [a.RPCCommand.GET_ACTIVITY_INSTANCE_CONNECTED_PARTICIPANTS]: {
                        request: void 0,
                        response: e => e.object({
                            participants: e.array().items(i(e).keys({
                                nickname: e.string().description("Server nickname. Not unique.")
                            }).required()).required()
                        }).required()
                    }
                },
                i = e => e.object({
                    id: e.string().required().description("User ID"),
                    username: e.string().required(),
                    global_name: e.string().allow(null).description("Global Discord name. Not unique."),
                    discriminator: e.string().required().description("Global name discriminator. Will be 0 if a unique username"),
                    avatar: e.string().allow(null).description("User Avatar ID"),
                    flags: e.number().required().description("Public user flags"),
                    bot: e.bool().required().description("If a bot user."),
                    avatar_decoration_data: e.object({
                        asset: e.string().required(),
                        skuId: e.string()
                    }).allow(null).description("Details about avatar decoration"),
                    premium_type: e.number().allow(null).description("Nitro premium type")
                }).description("Discord User")
        },
        792353: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                RPCCommand: function() {
                    return a.RPCCommands
                },
                joiReqObj: function() {
                    return s
                },
                joiEnum: function() {
                    return l
                }
            });
            var a = n("843455");

            function s(e) {
                return e.required().unknown(!0)
            }

            function l(e) {
                return Object.values(e)
            }
        },
        524297: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                createRPCCommand: function() {
                    return s
                }
            });
            var a = n("61141");

            function s(e, t) {
                var n;
                let {
                    scope: s,
                    handler: l
                } = t, i = {
                    scope: s,
                    handler: l
                }, r = null === (n = a.RPCCommandSchemas[e]) || void 0 === n ? void 0 : n.request, o = null;
                return null != r && (i.validation = function(e) {
                    return null == o && (o = r(e)), o
                }), i
            }
        },
        750485: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, {
                default: function() {
                    return h
                }
            });
            var a = n("37983"),
                s = n("884691"),
                l = n("580420"),
                i = n.n(l),
                r = n("122508"),
                o = n("637487");
            let u = {
                    VERTICAL: r.flexVertical,
                    HORIZONTAL: r.flexHorizontal,
                    HORIZONTAL_REVERSE: r.flexHorizontalReverse
                },
                d = {
                    START: r.flexJustifyStart,
                    END: r.flexJustifyEnd,
                    CENTER: r.flexJustifyCenter,
                    BETWEEN: r.flexJustifyBetween,
                    AROUND: r.flexJustifyAround
                },
                c = {
                    NO_WRAP: r.flexNowrap,
                    WRAP: r.flexWrap,
                    WRAP_REVERSE: r.flexWrapReverse
                },
                E = {
                    START: r.flexAlignStart,
                    END: r.flexAlignEnd,
                    CENTER: r.flexAlignCenter,
                    STRETCH: r.flexAlignStretch
                },
                f = {
                    SMALL: o.flexGutterSmall,
                    LARGE: o.flexGutterLarge
                };
            class _ extends s.PureComponent {
                render() {
                    let {
                        children: e,
                        className: t,
                        shrink: n,
                        grow: l,
                        basis: r,
                        style: u,
                        wrap: d,
                        ...c
                    } = this.props, E = {
                        style: {
                            flexGrow: l,
                            flexShrink: n,
                            flexBasis: r,
                            ...u
                        },
                        className: t === o.flexChild ? t : i(o.flexChild, t),
                        ...c
                    };
                    if (!d && "string" != typeof e && 1 === s.Children.count(e)) {
                        let n = s.Children.only(e);
                        return E.style = {
                            ...E.style,
                            ...n.props.style
                        }, E.className = i(n.props.className, t), s.cloneElement(n, E)
                    }
                    return (0, a.jsx)("div", {
                        ...E,
                        children: e
                    })
                }
            }
            _.defaultProps = {
                className: o.flexChild,
                style: {},
                wrap: !1
            };
            class C extends s.PureComponent {
                render() {
                    let {
                        children: e,
                        className: t,
                        direction: n,
                        justify: s,
                        align: l,
                        wrap: r,
                        shrink: u,
                        grow: d,
                        basis: c,
                        style: E,
                        gutter: f,
                        ..._
                    } = this.props, C = {
                        flexShrink: u,
                        flexGrow: d,
                        flexBasis: c,
                        ...E
                    };
                    return (0, a.jsx)("div", {
                        style: C,
                        className: i(o.flex, n, s, l, r, f, t),
                        ..._,
                        children: e
                    })
                }
            }
            C.Child = _, C.Direction = u, C.Align = E, C.Justify = d, C.Wrap = c, C.Gutter = f, C.defaultProps = {
                direction: u.HORIZONTAL,
                justify: d.START,
                align: E.STRETCH,
                wrap: c.WRAP,
                shrink: 1,
                grow: 1,
                basis: "auto",
                style: {}
            };
            var h = C
        }
    }
]);